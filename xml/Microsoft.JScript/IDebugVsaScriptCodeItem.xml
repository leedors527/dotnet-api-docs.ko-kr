<Type Name="IDebugVsaScriptCodeItem" FullName="Microsoft.JScript.IDebugVsaScriptCodeItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="841c8c6e426c2679a0fee9784cbb0c50010acfeb" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55385917" /></Metadata><TypeSignature Language="C#" Value="public interface IDebugVsaScriptCodeItem" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDebugVsaScriptCodeItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IDebugVsaScriptCodeItem" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDebugVsaScriptCodeItem" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDebugVsaScriptCodeItem" />
  <TypeSignature Language="F#" Value="type IDebugVsaScriptCodeItem = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("6DFE759A-CB8B-4ca0-A973-1D04E0BF0B53")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>식 및 구문 분석 문자열을 평가할 메서드를 정의합니다. 이 인터페이스는 일반적으로 코드 블록을 나타내는 개체에 의해 구현되며 보통 디버거에 의해 호출됩니다. 이 인터페이스는 IactiveScript 호스트에서 필요한 추가 기능을 제공합니다.</summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate();" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : unit -&gt; obj" Usage="iDebugVsaScriptCodeItem.Evaluate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>클래스에서 구현될 때 코드 항목으로 표현되는 블록, 식 또는 명령문을 평가하고 그 값을 반환합니다. 일반적으로 조사식 창과 같은 식을 평가해야 할 디버거에서 호출됩니다. 식의 경우 값은 식의 결과입니다. 블록과 문의 경우 결과 식은 블록이나 문에서 계산된 마지막 식입니다.</summary>
        <returns>문, 식 또는 블록의 평가를 나타내는 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate%2A> 메서드는 기능적으로 동일 합니다 <xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A> 메서드. 마샬링 특성에만 다릅니다. 인터페이스의이 버전으로 반환 값을 가져올 수는 관리 되지 않는 디버거를 사용 하면 프로그램 `IUnknown` 포인터 대신 `VARIANT`합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ParseNamedBreakPoint">
      <MemberSignature Language="C#" Value="public bool ParseNamedBreakPoint (string input, out string functionName, out int nargs, out string arguments, out string returnType, out ulong offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ParseNamedBreakPoint(string input, [out] string&amp; functionName, [out] int32&amp; nargs, [out] string&amp; arguments, [out] string&amp; returnType, [out] unsigned int64&amp; offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ParseNamedBreakPoint (input As String, ByRef functionName As String, ByRef nargs As Integer, ByRef arguments As String, ByRef returnType As String, ByRef offset As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ParseNamedBreakPoint(System::String ^ input, [Runtime::InteropServices::Out] System::String ^ % functionName, [Runtime::InteropServices::Out] int % nargs, [Runtime::InteropServices::Out] System::String ^ % arguments, [Runtime::InteropServices::Out] System::String ^ % returnType, [Runtime::InteropServices::Out] System::UInt64 % offset);" />
      <MemberSignature Language="F#" Value="abstract member ParseNamedBreakPoint : string *  *  *  *  *  -&gt; bool" Usage="iDebugVsaScriptCodeItem.ParseNamedBreakPoint (input, functionName, nargs, arguments, returnType, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="functionName" Type="System.String" RefType="out" />
        <Parameter Name="nargs" Type="System.Int32" RefType="out" />
        <Parameter Name="arguments" Type="System.String" RefType="out" />
        <Parameter Name="returnType" Type="System.String" RefType="out" />
        <Parameter Name="offset" Type="System.UInt64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">함수, 선택적 인수 목록 및 선택적 IL 오프셋을 제공하는 올바른 형식의 명명된 중단점 문자열입니다.</param>
        <param name="functionName">입력 문자열에서 구문 분석된 함수의 이름을 반환하거나 입력 문자열이 올바른 형식이 아니면 빈 문자열을 반환하는 out 매개 변수입니다.</param>
        <param name="nargs">선택적 인수 목록의 인수 수를 반환하는 out 매개 변수입니다. 인수 목록이 없거나 문자열이 올바른 형식이 아니면 0을 반환합니다.</param>
        <param name="arguments">인수 목록에 있는 모든 인수에 대한 형식 이름의 공백으로 구분된 목록을 반환하거나 인수 목록이 없거나 입력 문자열이 올바른 형식이 아니면 빈 문자열을 반환하는 out 매개 변수입니다.</param>
        <param name="returnType">입력에 명명된 함수의 반환 형식을 포함하는 문자열을 반환하거나 반환 형식이 없거나 입력 문자열이 올바른 형식이 아니면 빈 문자열을 반환하는 out 매개 변수입니다.</param>
        <param name="offset">입력 문자열로부터의 IL 오프셋을 제공하는 부호 없는 정수(Long)이거나, IL 오프셋이 없거나 문자열이 올바른 형식이 아니면 0입니다.</param>
        <summary>클래스에서 수행될 때 문자열을 구문 분석하고 구문 분석된 정보를 반환합니다. 이 메서드는 일반적으로 <see langword="string" />으로 표현되는 중단점에 대한 정보를 구문 분석해야 하는 디버거에서 호출됩니다. 디버거에는 사용자가 *functionname-arguments-ILoffset* 형식으로 입력한 중단점이 있어야 합니다. 명명된 중단점 문자열의 형식은 다음과 같이 복잡할 수 있습니다(예: <c>F.B(C.D[], int, arg : double ) : C.Abc + 123</c>). 매개 변수 목록은 IL 오프셋처럼 선택적입니다.</summary>
        <returns>명명된 중단점의 구문이 성공적으로 분석되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>