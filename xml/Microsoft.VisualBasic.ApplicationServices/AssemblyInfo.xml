<Type Name="AssemblyInfo" FullName="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1c92eb2ed7ee964df743e3ff49348e25cd1bb5d7" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53232303" /></Metadata><TypeSignature Language="C#" Value="public class AssemblyInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi AssemblyInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class AssemblyInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyInfo" />
  <TypeSignature Language="F#" Value="type AssemblyInfo = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>버전 번호, 설명, 로드된 어셈블리 등의 애플리케이션에 대한 정보를 가져오기 위한 속성을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 표시 하는 속성 중 일부는 `My.Application.Info` 개체 애플리케이션의 어셈블리 정보를 반환 합니다. 사용 정보를 애플리케이션의 어셈블리에 설정 해야 합니다는 **어셈블리 정보** 에서 액세스할 수 있는 대화 상자를 **애플리케이션** 창의 **프로젝트 디자이너**.  
  
 합니다 `My.Application.Info` 비슷한 기능을 제공 하는 개체는 <xref:System.Diagnostics.FileVersionInfo> 클래스 있지만 가장 일반적인 속성에 빠르게 액세스할 수 있도록 범위가 지정 됩니다.  
  
 다른 속성을 같은 `LoadedAssemblies`, 애플리케이션의 현재 상태에 대 한 액세스를 제공 합니다.  
  
   
  
## Examples  
 이 예제에서는 `My.Application.Info.Version` 속성을 애플리케이션의 버전을 표시 합니다.  
  
 [!code-vb[VbVbalrMyApplication#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#30)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
    <altmember cref="T:System.Diagnostics.FileVersionInfo" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyInfo (System.Reflection.Assembly currentAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.Reflection.Assembly currentAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (currentAssembly As Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyInfo(System::Reflection::Assembly ^ currentAssembly);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.ApplicationServices.AssemblyInfo : System.Reflection.Assembly -&gt; Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" Usage="new Microsoft.VisualBasic.ApplicationServices.AssemblyInfo currentAssembly" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="currentAssembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="currentAssembly"><see cref="T:System.Reflection.Assembly" />. 정보를 가져올 어셈블리입니다.</param>
        <summary>지정한 어셈블리 정보를 사용하여 <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public string AssemblyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssemblyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyName : string" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>애플리케이션의 어셈블리 파일 이름을 확장명 없이 가져옵니다.</summary>
        <value>파일 이름이 들어 있는 <see langword="String" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.AssemblyName` 속성 매니페스트를 포함 하는 파일의 이름을 가져옵니다.  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|------------------|---------------|  
|Windows Forms 애플리케이션|**예**|  
|클래스 라이브러리|**예**|  
|콘솔 애플리케이션|**예**|  
|Windows Forms 컨트롤 라이브러리|**예**|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|**예**|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 이 예제에서는 `My.Application.Info.AssemblyName` 속성을 애플리케이션의 이름을 표시 합니다.  
  
 [!code-vb[VbVbalrMyApplication#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="CompanyName">
      <MemberSignature Language="C#" Value="public string CompanyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CompanyName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompanyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CompanyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompanyName : string" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>애플리케이션과 관련된 회사 이름을 가져옵니다.</summary>
        <value>애플리케이션과 관련된 회사 이름이 들어 있는 <see langword="String" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.CompanyName` 속성 응용 프로그램을 사용 하 여 연결 된 회사 이름을 가져옵니다.  
  
 에 대 한 값을 변경 하 여 회사 이름을 변경할 수 있습니다 **회사** 에 **어셈블리 정보** 에서 액세스할 수 있는 대화 상자를 **애플리케이션** 합니다 창**프로젝트 디자이너**합니다.  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|------------------|---------------|  
|Windows Forms 애플리케이션|**예**|  
|클래스 라이브러리|**예**|  
|콘솔 애플리케이션|**예**|  
|Windows Forms 컨트롤 라이브러리|**예**|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|**예**|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 이 예제에서는 `My.Application.Info.CompanyName` 속성을 애플리케이션을 사용 하 여 연결 된 회사 이름을 표시 합니다.  
  
 [!code-vb[VbVbalrMyApplication#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">어셈블리에 <see cref="T:System.Reflection.AssemblyCompanyAttribute" /> 특성이 없습니다.</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Copyright">
      <MemberSignature Language="C#" Value="public string Copyright { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Copyright" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Copyright As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Copyright { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Copyright : string" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>애플리케이션과 관련된 저작권 표시를 가져옵니다.</summary>
        <value>애플리케이션과 관련된 저작권 표시가 들어 있는 <see langword="String" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.Copyright` 속성은 응용 프로그램과 관련 된 저작권 표시를 가져옵니다.  
  
 저작권에 대 한 값을 변경 하 여 변경할 수 있습니다 **저작권** 에 **어셈블리 정보** 에서 액세스할 수 있는 대화 상자를 **애플리케이션** 합니다 창 **프로젝트 디자이너**합니다.  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|------------------|---------------|  
|Windows Forms 애플리케이션|**예**|  
|클래스 라이브러리|**예**|  
|콘솔 애플리케이션|**예**|  
|Windows Forms 컨트롤 라이브러리|**예**|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|**예**|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 이 예제에서는 `My.Application.Info.Copyright` 속성을 애플리케이션을 사용 하 여 연결 된 회사 이름을 표시 합니다.  
  
 [!code-vb[VbVbalrMyApplication#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">어셈블리에 <see cref="T:System.Reflection.AssemblyCopyrightAttribute" /> 특성이 없습니다.</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>애플리케이션과 관련된 설명을 가져옵니다.</summary>
        <value>애플리케이션과 관련된 설명이 들어 있는 <see langword="String" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.Description` 속성에는 응용 프로그램과 관련 된 설명을 가져옵니다.  
  
 에 대 한 값을 변경 하 여 설명을 변경할 수 있습니다 **설명을** 에 **어셈블리 정보** 에서 액세스할 수 있는 대화 상자를 **애플리케이션** 창의 합니다  **프로젝트 디자이너**합니다.  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|------------------|---------------|  
|Windows Forms 애플리케이션|**예**|  
|클래스 라이브러리|**예**|  
|콘솔 애플리케이션|**예**|  
|Windows Forms 컨트롤 라이브러리|**예**|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|**예**|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 이 예제에서는 `My.Application.Info.Description` 속성을 애플리케이션을 사용 하 여 연결 된 설명을 표시 합니다.  
  
 [!code-vb[VbVbalrMyApplication#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">어셈블리에 <see cref="T:System.Reflection.AssemblyDescriptionAttribute" /> 특성이 없습니다.</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="DirectoryPath">
      <MemberSignature Language="C#" Value="public string DirectoryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectoryPath : string" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>애플리케이션이 저장된 디렉터리를 가져옵니다.</summary>
        <value>애플리케이션이 저장된 디렉터리가 들어 있는 <see langword="String" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.DirectoryPath` 속성에는 응용 프로그램이 저장 된 디렉터리를 가져옵니다.  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|------------------|---------------|  
|Windows Forms 애플리케이션|**예**|  
|클래스 라이브러리|**예**|  
|콘솔 애플리케이션|**예**|  
|Windows Forms 컨트롤 라이브러리|**예**|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|**예**|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 이 예제에서는 `My.Application.Info.DirectoryPath` 속성을 애플리케이션 저장 된 디렉터리 경로 표시 합니다.  
  
 [!code-vb[VbVbalrMyApplication#24](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#24)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="LoadedAssemblies">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.Assembly&gt; LoadedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Reflection.Assembly&gt; LoadedAssemblies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LoadedAssemblies As ReadOnlyCollection(Of Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Reflection::Assembly ^&gt; ^ LoadedAssemblies { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Reflection::Assembly ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoadedAssemblies : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.Assembly&gt;" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.Assembly&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>애플리케이션에서 로드한 모든 어셈블리의 컬렉션을 가져옵니다.</summary>
        <value>애플리케이션에서 로드한 모든 어셈블리가 들어 있는 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />의 <see cref="T:System.Reflection.Assembly" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `My.Application.Info.LoadedAssemblies` 속성은 비슷합니다는 <xref:System.AppDomain.GetAssemblies%2A> 메서드.  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|------------------|---------------|  
|Windows Forms 애플리케이션|**예**|  
|클래스 라이브러리|**예**|  
|콘솔 애플리케이션|**예**|  
|Windows Forms 컨트롤 라이브러리|**예**|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|**예**|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 이 예제에서는 `My.Application.Info.LoadedAssemblies` 애플리케이션에서 로드 된 어셈블리를 표시 하는 속성입니다.  
  
 [!code-vb[VbVbalrMyApplication#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#25)]  
  
 이 예제 Windows Forms 애플리케이션에 <xref:System.Windows.Forms.ListBox> 제어 라는 `ListBox1`합니다.  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None." />
        <exception cref="T:System.AppDomainUnloadedException">애플리케이션 도메인이 로드되지 않는 경우.</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
        <altmember cref="T:System.Reflection.Assembly" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="ProductName">
      <MemberSignature Language="C#" Value="public string ProductName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductName : string" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>애플리케이션과 관련된 제품 이름을 가져옵니다.</summary>
        <value>애플리케이션과 관련된 제품 이름이 들어 있는 <see langword="String" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.ProductName` 속성에는 응용 프로그램과 관련 된 제품 이름을 가져옵니다.  
  
 제품 이름에 대 한 값을 변경 하 여 변경할 수 있습니다 **제품** 에 **어셈블리 정보** 에서 액세스할 수 있는 대화 상자를 **애플리케이션** 합니다 창의**프로젝트 디자이너**합니다.  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|------------------|---------------|  
|Windows Forms 애플리케이션|**예**|  
|클래스 라이브러리|**예**|  
|콘솔 애플리케이션|**예**|  
|Windows Forms 컨트롤 라이브러리|**예**|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|**예**|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 이 예제에서는 `My.Application.Info.ProductName` 속성을 애플리케이션을 사용 하 여 관련 제품 이름을 표시 합니다.  
  
 [!code-vb[VbVbalrMyApplication#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">어셈블리에 <see cref="T:System.Reflection.AssemblyProductAttribute" /> 특성이 없습니다.</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StackTrace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StackTrace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StackTrace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StackTrace : string" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 스택 추적 정보를 가져옵니다.</summary>
        <value>현재 스택 추적 정보가 들어 있는 <see langword="String" />입니다. 반환 값은 <see cref="F:System.String.Empty" />일 수 있습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.StackTrace` 속성 목록을 역순으로 메서드 호출-즉, 최근의 메서드 호출이 먼저 설명 하 고 별도 줄에 스택의 각 메서드 호출을 나열 합니다. 그러나는 `My.Application.Info.StackTrace` 속성 최적화 하는 동안 발생 하는 코드 변환으로 인해 예상 만큼 많은 메서드 호출을 보고 하지 않을 수 있습니다.  
  
 일반적으로 스택 추적 정보는 애플리케이션 디버깅에 사용 됩니다.  
  
 각 메서드 호출에 대 한 스택 추적 정보 형식은 다음과 같습니다.  
  
 "언제 *FullClassName*. *MethodName*(*MethodParams*)에서 *FileName*: 줄 *LineNumber* "  
  
 "At" 리터럴 앞에 공백을 세 개 및 리터럴 "in" 및 ": 줄" 디버그 기호를 사용할 수 없는 경우 생략 됩니다. 자리 표시자 `FullClassName`, `MethodName`를 `MethodParams`를 `FileName`, 및 `LineNumber` 다음과 같이 정의 하는 실제 값으로 대체 됩니다.  
  
|파트|설명|  
|----------|-----------------|  
|*FullClassName*|네임 스페이스를 포함 하 여 클래스의 전체 이름입니다.|  
|*MethodName*|메서드의 이름입니다.|  
|*MethodParams*|매개 변수 유형/이름이 쌍의 목록입니다. 각 쌍은 쉼표 (,)로 구분 됩니다. 이 정보는 생략 *MethodName* 는 0 매개 변수입니다.|  
|*FileName*|원본의 이름을 파일 위치는 *MethodName* 메서드를 선언 합니다. 디버그 기호를 사용할 수 없는 경우이 정보가 생략 됩니다.|  
|*LineNumber*|에 줄 번호 *FileName* 에서 소스 코드를 포함 하는 *MethodName* 호출 스택에 있는 명령에 대 한 합니다. 디버그 기호를 사용할 수 없는 경우이 정보가 생략 됩니다.|  
  
 합니다 `My.Applicaiton.Info.StackTrace` 비슷한 기능을 제공 하는 속성을 <xref:System.Environment.StackTrace%2A> 속성입니다.  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|------------------|---------------|  
|Windows Forms 애플리케이션|**예**|  
|클래스 라이브러리|**예**|  
|콘솔 애플리케이션|**예**|  
|Windows Forms 컨트롤 라이브러리|**예**|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|**예**|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 이 예제에서는 `My.Application.Info.StackTrace` 코드가 실행 되는 지점에서 애플리케이션의 스택 추적을 표시 하는 속성입니다.  
  
 [!code-vb[VbVbalrMyApplication#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">요청한 스택 추적 정보가 범위를 벗어난 경우</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 경로에 대 한 정보에 액세스 하는 기능을 제어 합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="P:System.Environment.StackTrace" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Title : string" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>애플리케이션과 관련된 제목을 가져옵니다.</summary>
        <value>애플리케이션과 관련된 <see cref="T:System.Reflection.AssemblyTitleAttribute" />가 들어 있는 <see langword="String" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.Title` 속성에는 응용 프로그램과 관련 된 제목을 가져옵니다.  
  
 에 대 한 값을 변경 하 여 제목을 변경할 수 있습니다 **제목** 에 **어셈블리 정보** 에서 액세스할 수 있는 대화 상자를 **애플리케이션** 창의  **프로젝트 디자이너**합니다.  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|------------------|---------------|  
|Windows Forms 애플리케이션|**예**|  
|클래스 라이브러리|**예**|  
|콘솔 애플리케이션|**예**|  
|Windows Forms 컨트롤 라이브러리|**예**|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|**예**|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 이 예제에서는 `My.Application.Info.Title` 애플리케이션과 관련 된 제목을 표시 하는 속성입니다.  
  
 [!code-vb[VbVbalrMyApplication#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">어셈블리에 <see cref="T:System.Reflection.AssemblyTitleAttribute" /> 특성이 없습니다.</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Trademark">
      <MemberSignature Language="C#" Value="public string Trademark { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Trademark" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Trademark As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Trademark { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Trademark : string" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>애플리케이션과 관련된 상표 표시를 가져옵니다.</summary>
        <value>애플리케이션과 관련된 상표 표시가 들어 있는 <see langword="String" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.Trademark` 속성은 응용 프로그램과 관련 된 상표 표시를 가져옵니다.  
  
 상표 정보에 대 한 값을 변경 하 여 변경할 수 있습니다 **상표** 에 **어셈블리 정보** 에서 액세스할 수 있는 대화 상자를 **애플리케이션** 창의 합니다  **프로젝트 디자이너**합니다.  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|------------------|---------------|  
|Windows Forms 애플리케이션|**예**|  
|클래스 라이브러리|**예**|  
|콘솔 애플리케이션|**예**|  
|Windows Forms 컨트롤 라이브러리|**예**|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|**예**|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 이 예제에서는 `My.Application.Info.Trademark` 애플리케이션과 관련 된 상표 정보를 표시 하는 속성입니다.  
  
 [!code-vb[VbVbalrMyApplication#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">어셈블리에 <see cref="T:System.Reflection.AssemblyTrademarkAttribute" /> 특성이 없습니다.</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ Version { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : Version" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>애플리케이션의 버전 번호를 가져옵니다.</summary>
        <value>애플리케이션의 버전 번호가 들어 있는 <see cref="T:System.Version" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `My.Application.Info.Version` 속성을 <xref:System.Version> 애플리케이션의 버전 번호를 포함 하는 개체입니다. 사용할 수는 <xref:System.Version.Major%2A>, <xref:System.Version.Minor%2A>, <xref:System.Version.Build%2A>, 및 <xref:System.Version.Revision%2A> 의 속성은 <xref:System.Version> 애플리케이션에 대 한 특정 버전 정보에 액세스할 수 있는 개체입니다.  
  
 ClickOnce로 배포 된 애플리케이션 사용 해야 합니다 <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> 의 속성을 <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment%2A> 속성.  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|------------------|---------------|  
|Windows Forms 애플리케이션|**예**|  
|클래스 라이브러리|**예**|  
|콘솔 애플리케이션|**예**|  
|Windows Forms 컨트롤 라이브러리|**예**|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|**예**|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 이 예제에서는 `My.Application.Info.Version` 속성을 애플리케이션의 버전을 표시 합니다.  
  
 [!code-vb[VbVbalrMyApplication#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">애플리케이션에서 어셈블리 버전에 액세스할 수 있는 충분한 권한이 없는 경우.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment" />
        <altmember cref="P:System.Deployment.Application.ApplicationDeployment.CurrentVersion" />
        <altmember cref="T:System.Version" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="WorkingSet">
      <MemberSignature Language="C#" Value="public long WorkingSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 WorkingSet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkingSet As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long WorkingSet { long get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkingSet : int64" Usage="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>프로세스 컨텍스트에 매핑되는 실제 메모리의 크기를 가져옵니다.</summary>
        <value>프로세스 컨텍스트에 매핑되는 실제 메모리의 바이트 수가 들어 있는 <see langword="Long" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `My.Application.Info.WorkingSet` 속성이 동일한 동작을 <xref:System.Environment.WorkingSet%2A> 속성입니다.  
  
> [!NOTE]
>  이 속성에는 항상 Windows 98 및 Windows Millennium Edition에 0을 반환합니다.  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|------------------|---------------|  
|Windows Forms 애플리케이션|**예**|  
|클래스 라이브러리|**예**|  
|콘솔 애플리케이션|**예**|  
|Windows Forms 컨트롤 라이브러리|**예**|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|**예**|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 이 예제에서는 `My.Application.Info.WorkingSet` 속성을 애플리케이션에 매핑되는 실제 메모리의 바이트 수를 표시 합니다.  
  
 [!code-vb[VbVbalrMyApplication#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#31)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">사용자 권한이 부족한 부분 신뢰 상태</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">모든 환경 변수를 액세스 하는 기능을 제어 합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="P:System.Environment.WorkingSet" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
      </Docs>
    </Member>
  </Members>
</Type>