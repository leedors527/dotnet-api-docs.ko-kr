<Type Name="User" FullName="Microsoft.VisualBasic.ApplicationServices.User">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3d805417eebd33c6000c74195f716760ffb9b059" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55378572" /></Metadata><TypeSignature Language="C#" Value="public class User" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi User extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ApplicationServices.User" />
  <TypeSignature Language="VB.NET" Value="Public Class User" />
  <TypeSignature Language="C++ CLI" Value="public ref class User" />
  <TypeSignature Language="F#" Value="type User = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>현재 사용자에 대한 정보에 액세스할 수 있도록 합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 속성 및 메서드에 의해 노출 되는 `My.User` 개체는 현재 사용자에 대 한 정보에 대 한 액세스를 제공 합니다. "현재 사용자"의 의미를 Windows 및 웹 애플리케이션 간에 약간 다릅니다. Windows 애플리케이션에서는 현재 사용자가 애플리케이션을 실행 하는 사용자입니다. 웹 애플리케이션에서는 현재 사용자가 애플리케이션에 액세스 하는 사용자입니다.  
  
 합니다 `My.User` 속성에 액세스할 수도 <xref:System.Security.Principal.IPrincipal> 현재 사용자에 대 한 합니다. 보안 주체 개체를 해당 사용자의 id 및 사용자가 속해 있는 역할을 포함 하 여 사용자의 보안 컨텍스트를 나타냅니다.  
  
 Windows 애플리케이션의 경우이 속성은 동일한 기능을 제공 합니다 <xref:System.Threading.Thread.CurrentPrincipal%2A> 속성입니다. 웹 애플리케이션의 경우이 속성은 동일한 기능을 제공 합니다 <xref:System.Web.HttpContext.User%2A> 반환 하는 개체의 속성을 <xref:System.Web.HttpContext.Current%2A> 속성입니다.  
  
> [!NOTE]
>  프로젝트만 기반 Windows 애플리케이션의 경우는 **Windows 애플리케이션** 템플릿 초기화는 `My.User` 기본적으로는 개체입니다. 초기화 해야 다른 모든 Windows 프로젝트 형식에는 `My.User` 호출 하 여 개체를 <xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A> 메서드 값을 할당 하 여 명시적으로 또는 <xref:System.Threading.Thread.CurrentPrincipal%2A>합니다.  
  
> [!NOTE]
>  `My.User` 개체는 해당 운영 체제에서 로그온 한 사용자의 개념을 지원 하지 않으므로 Windows 95 및 Windows 98에서 실행 될 경우 현재 Windows 사용자에 대 한 정보를 보고할 수 없습니다. 사용할 사용자 지정 인증을 구현 해야 합니다는 `My.User` 이러한 운영 체제에는 개체입니다.  
  
   
  
## Examples  
 이 예제에서는 애플리케이션 Windows 또는 사용자 지정 인증을 사용 하 고 해당 정보를 사용 하 여 구문 분석 하 여 `My.User.Name` 속성입니다.  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Principal.IPrincipal" />
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="P:System.Web.HttpContext.User" />
    <altmember cref="P:System.Web.HttpContext.Current" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public User ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; User();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.ApplicationServices.User" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 속성 및 메서드에 의해 노출 되는 `My.User` 개체는 현재 사용자에 대 한 정보에 대 한 액세스를 제공 합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/accessing-user-data.md">사용자 데이터 액세스(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentPrincipal">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal CurrentPrincipal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal CurrentPrincipal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentPrincipal As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ CurrentPrincipal { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentPrincipal : System.Security.Principal.IPrincipal with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 보안 주체(역할 기반 보안용)를 가져오거나 설정합니다.</summary>
        <value>보안 컨텍스트를 나타내는 <see cref="T:System.Security.Principal.IPrincipal" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정할 수 있습니다 합니다 `My.User.CurrentPrincipal` 속성을 구현 하는 개체는 <xref:System.Security.Principal.IPrincipal> 인터페이스 사용자 지정 인증을 사용 하도록 설정 합니다.  
  
 대부분의 프로젝트 형식에서이 속성 가져오고 스레드의 현재 보안 주체를 설정 합니다. ASP.NET 애플리케이션에서이 속성 가져오고 현재 HTTP 요청의 사용자 id에 대 한 보안 정보를 설정 합니다.  
  
 이 메서드는 고급 멤버; 클릭 하지 않으면 IntelliSense에 표시 되지 않습니다 합니다 **모든** 탭 합니다.  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|-|-|  
|Windows 애플리케이션|**예**|  
|클래스 라이브러리|**예**|  
|콘솔 애플리케이션|**예**|  
|Windows 컨트롤 라이브러리|**예**|  
|웹 컨트롤 라이브러리|**예**|  
|Windows 서비스|**예**|  
|웹 사이트|**예**|  
  
   
  
## Examples  
 이 예제에서는 애플리케이션 Windows 또는 사용자 지정 인증을 사용 하 고 해당 정보를 사용 하 여 구문 분석할 `My.User.Name` 속성입니다.  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출자에게 보안 주체를 설정하는 데 필요한 사용 권한이 없습니다.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">코드에 적용되는 보안 사용 권한 집합을 설명합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></permission>
        <altmember cref="T:System.Security.Principal.IPrincipal" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="InitializeWithWindowsUser">
      <MemberSignature Language="C#" Value="public void InitializeWithWindowsUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void InitializeWithWindowsUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeWithWindowsUser ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitializeWithWindowsUser();" />
      <MemberSignature Language="F#" Value="member this.InitializeWithWindowsUser : unit -&gt; unit" Usage="user.InitializeWithWindowsUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>스레드의 현재 보안 주체를 애플리케이션을 시작한 Windows 사용자로 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 `My.User.InitializeWithWindowsUser` 애플리케이션을 시작 하는 Windows 사용자에 게는 스레드의 현재 보안 주체를 설정 하는 방법입니다. 시작 시 기본적으로이 메서드를 호출 하는 Windows 애플리케이션에서 Visual Basic 애플리케이션 모델입니다. 다른 프로젝트 형식에서 설정 해야이 메서드를 명시적으로 호출 하 여 또는 값을 할당 하 여 스레드의 현재 보안 주체가 <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>합니다.  
  
 Windows 프로젝트에서의 `My.User` 스레드의 현재 보안 주체에 개체를 기반으로,이 메서드는 정보를 변경할 수 있습니다 따라서 `My.User` 반환 합니다. ASP.NET 애플리케이션에 `My.User` 개체는 현재 HTTP 요청 사용자 id를 기반으로 하며이 메서드에 의해 영향을 받지 않습니다.  
  
> [!NOTE]
>  정확한 동작을 `My.User` 애플리케이션이 실행 되는 운영 체제와 애플리케이션의 유형에 따라 개체에 따라 달라 집니다. 자세한 내용은 참조는 <xref:Microsoft.VisualBasic.ApplicationServices.User> 클래스 개요입니다.  
  
 이 메서드는 고급 멤버; 클릭 하지 않으면 IntelliSense에 표시 되지 않습니다 합니다 **모든** 탭 합니다.  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|-|-|  
|Windows 애플리케이션|**예**|  
|클래스 라이브러리|**예**|  
|콘솔 애플리케이션|**예**|  
|Windows 컨트롤 라이브러리|**예**|  
|웹 컨트롤 라이브러리|**예**|  
|Windows 서비스|**예**|  
|웹 사이트|**예**|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">코드에 적용되는 보안 사용 권한 집합을 설명합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="InternalPrincipal">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Principal.IPrincipal InternalPrincipal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal InternalPrincipal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property InternalPrincipal As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Security::Principal::IPrincipal ^ InternalPrincipal { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InternalPrincipal : System.Security.Principal.IPrincipal with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 사용자를 나타내는 Principal 개체를 가져오거나 설정합니다.</summary>
        <value>현재 사용자를 나타내는 <see cref="T:System.Security.Principal.IPrincipal" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 <xref:Microsoft.VisualBasic.ApplicationServices.User> 개체를이 속성을 래핑합니다는 <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> 속성입니다. 다른 동작을 제공 하는 파생된 클래스에서이 메서드를 재정의 합니다. 예를 들어를 <xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=nameWithType> 속성이이 속성을 재정의 합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 인증되었는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>사용자가 인증되었으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.User.IsAuthenticated` 속성을 사용 하면 현재 사용자가 인증 되었는지 확인 하는 코드입니다.  
  
> [!NOTE]
>  정확한 동작은 `My.User` 애플리케이션이 실행 되는 운영 체제와 애플리케이션의 유형에 따라 개체에 따라 달라 집니다. 자세한 내용은 참조는 <xref:Microsoft.VisualBasic.ApplicationServices.User> 클래스 개요입니다.  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|-|-|  
|Windows 애플리케이션|**예**|  
|클래스 라이브러리|**예**|  
|콘솔 애플리케이션|**예**|  
|Windows 컨트롤 라이브러리|**예**|  
|웹 컨트롤 라이브러리|**예**|  
|Windows 서비스|**예**|  
|웹 사이트|**예**|  
  
   
  
## Examples  
 이 예제에서는 리소스에 액세스 하기 전에 사용자가 인증 했는지 확인 합니다.  
  
 [!code-vb[VbVbalrMyUser#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">코드에 적용되는 보안 사용 권한 집합을 설명합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsInRole">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>현재 사용자가 지정한 역할에 속하는지 여부를 확인합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public bool IsInRole (Microsoft.VisualBasic.ApplicationServices.BuiltInRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool IsInRole(valuetype Microsoft.VisualBasic.ApplicationServices.BuiltInRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInRole (role As BuiltInRole) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInRole(Microsoft::VisualBasic::ApplicationServices::BuiltInRole role);" />
      <MemberSignature Language="F#" Value="member this.IsInRole : Microsoft.VisualBasic.ApplicationServices.BuiltInRole -&gt; bool" Usage="user.IsInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Microsoft.VisualBasic.ApplicationServices.BuiltInRole" />
      </Parameters>
      <Docs>
        <param name="role">멤버 자격을 확인할 기본 제공 Windows 역할입니다.</param>
        <summary>현재 사용자가 지정한 역할에 속하는지 여부를 확인합니다.</summary>
        <returns>현재 사용자가 지정한 역할의 멤버이면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.User.IsInRole` 메서드를 사용 하면 현재 사용자 지정된 역할의 멤버 인지 확인 하는 코드입니다.  
  
 오버 로드는 `My.User.IsInRole` 문자열을 사용 하는 방법에 쉽게 액세스할는 <xref:System.Security.Principal.IPrincipal.IsInRole%2A> 현재 보안 주체의 메서드.  
  
 오버 로드는 `My.User.IsInRole` 메서드를를 `BuiltInRole` 열거형 현재 보안 주체에 따라 다르게 동작 합니다. Windows 사용자 보안 주체의 경우 (<xref:System.Security.Principal.WindowsPrincipal>),이 함수는 변환 `role` 해당 <xref:System.Security.Principal.WindowsBuiltInRole> 열거형 호출의 결과 반환 하 고 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>입니다. 이 함수에서 열거형 값의 이름을 전달 합니다. 현재 보안 주체가 다른 보안 주체 이면 `role` 주체의 <xref:System.Security.Principal.IPrincipal.IsInRole%2A> 메서드.  
  
> [!NOTE]
>  정확한 동작을 `My.User` 애플리케이션이 실행 되는 운영 체제와 애플리케이션의 유형에 따라 개체에 따라 달라 집니다. 자세한 내용은 참조는 <xref:Microsoft.VisualBasic.ApplicationServices.User> 클래스 개요입니다.  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|-|-|  
|Windows 애플리케이션|**예**|  
|클래스 라이브러리|**예**|  
|콘솔 애플리케이션|**예**|  
|Windows 컨트롤 라이브러리|**예**|  
|웹 컨트롤 라이브러리|**예**|  
|Windows 서비스|**예**|  
|웹 사이트|**예**|  
  
   
  
## Examples  
 이 예제에서는 리소스에 액세스 하기 전에 사용자가 관리자 인지 확인 합니다.  
  
 [!code-vb[VbVbalrMyUser#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">코드에 적용되는 보안 사용 권한 집합을 설명합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInRole(System::String ^ role);" />
      <MemberSignature Language="F#" Value="member this.IsInRole : string -&gt; bool" Usage="user.IsInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">멤버 여부를 확인하기 위한 역할의 이름입니다.</param>
        <summary>현재 사용자가 지정한 역할에 속하는지 여부를 확인합니다.</summary>
        <returns>현재 사용자가 지정한 역할의 멤버이면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.User.IsInRole` 메서드를 사용 하면 현재 사용자 지정된 역할의 멤버 인지 확인 하는 코드입니다.  
  
 오버 로드는 `My.User.IsInRole` 문자열을 사용 하는 방법에 쉽게 액세스할는 <xref:System.Security.Principal.IPrincipal.IsInRole%2A> 현재 보안 주체의 메서드.  
  
 오버 로드는 `My.User.IsInRole` 메서드를를 `BuiltInRole` 열거형 현재 보안 주체에 따라 다르게 동작 합니다. Windows 사용자 보안 주체의 경우 (<xref:System.Security.Principal.WindowsPrincipal>),이 함수는 변환 `role` 해당 <xref:System.Security.Principal.WindowsBuiltInRole> 열거형 호출의 결과 반환 하 고 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>입니다. 이 함수에서 열거형 값의 이름을 전달 합니다. 현재 보안 주체가 다른 보안 주체 이면 `role` 주체의 <xref:System.Security.Principal.IPrincipal.IsInRole%2A> 메서드.  
  
> [!NOTE]
>  정확한 동작을 `My.User` 애플리케이션이 실행 되는 운영 체제와 애플리케이션의 유형에 따라 개체에 따라 달라 집니다. 자세한 내용은 참조는 <xref:Microsoft.VisualBasic.ApplicationServices.User> 클래스 개요입니다.  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|-|-|  
|Windows 애플리케이션|**예**|  
|클래스 라이브러리|**예**|  
|콘솔 애플리케이션|**예**|  
|Windows 컨트롤 라이브러리|**예**|  
|웹 컨트롤 라이브러리|**예**|  
|Windows 서비스|**예**|  
|웹 사이트|**예**|  
  
   
  
## Examples  
 이 예제에서는 리소스에 액세스 하기 전에 사용자가 관리자 인지 확인 합니다.  
  
 [!code-vb[VbVbalrMyUser#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">코드에 적용되는 보안 사용 권한 집합을 설명합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></permission>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRole" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.VisualBasic.ApplicationServices.User.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 사용자의 이름을 가져옵니다.</summary>
        <value><see langword="String" />. 현재 사용자의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 `My.User` 현재 사용자에 대 한 정보를 가져올 개체입니다.  
  
 사용자를 인증 하는 보안 주체의 사용자 이름 형식을 제어 합니다. 기본적으로 애플리케이션에서 Windows 인증을 사용 하 고 사용자 이름이 도메인 \ 사용자 이름 형식입니다. 사용자의 사용자 지정 구현을 동일한 형식으로 반드시 사용 하지 않습니다.  
  
> [!NOTE]
>  `My.User.Name` 속성이 해당 운영 체제 사용자 이름을 인식 하지 않기 때문에 Windows 95 및 Windows 98에서 실행 될 경우 빈 문자열을 반환 합니다.  
  
> [!NOTE]
>  정확한 동작을 `My.User` 애플리케이션이 실행 되는 운영 체제와 애플리케이션의 유형에 따라 개체에 따라 달라 집니다. 자세한 내용은 참조는 <xref:Microsoft.VisualBasic.ApplicationServices.User> 클래스 개요입니다.  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|-|-|  
|Windows 애플리케이션|**예**|  
|클래스 라이브러리|**예**|  
|콘솔 애플리케이션|**예**|  
|Windows 컨트롤 라이브러리|**예**|  
|웹 컨트롤 라이브러리|**예**|  
|Windows 서비스|**예**|  
|웹 사이트|**예**|  
  
   
  
## Examples  
 이 예제에서는 애플리케이션 Windows 또는 사용자 지정 인증을 사용 하 고 해당 정보를 사용 하 여 구문 분석 하 여 `My.User.Name` 속성입니다.  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">코드에 적용되는 보안 사용 권한 집합을 설명합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/accessing-user-data.md">사용자 데이터 액세스(Visual Basic)</related>
      </Docs>
    </Member>
  </Members>
</Type>