<Type Name="ADODC" FullName="Microsoft.VisualBasic.Compatibility.VB6.ADODC">
  <Metadata><Meta Name="ms.openlocfilehash" Value="861b691fbdb4281864b689025647e7b69440a4d1" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55373381" /></Metadata><TypeSignature Language="C#" Value="public class ADODC : System.Windows.Forms.UserControl, msdatasrc.DataSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ADODC extends System.Windows.Forms.UserControl implements class msdatasrc.DataSource" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" />
  <TypeSignature Language="VB.NET" Value="Public Class ADODC&#xA;Inherits UserControl&#xA;Implements DataSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class ADODC : System::Windows::Forms::UserControl, msdatasrc::DataSource" />
  <TypeSignature Language="F#" Value="type ADODC = class&#xA;    inherit UserControl&#xA;    interface DataSource" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.UserControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>msdatasrc.DataSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Microsoft <see langword="ADO Data Control" />(ActiveX Data Objects)를 사용하여 데이터베이스에 대한 연결을 만들 수 있도록 Visual Basic 6.0 <see langword="ADO" />과의 호환성을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0에서 업그레이드 하는 애플리케이션에서이 제어를 사용 하 여 계속 사용 하려면를 `ADO` 데이터 연결 합니다. 새로운 개발에 대 한 사용을 고려해 야 `ADO.NET` 대신 `ADO`합니다. 자세한 내용은 [비교의 ADO.NET 및 ADO](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2008/904fck4k(v=vs.90))합니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ADODC ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ADODC.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ADODC();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0의 호환성 제공 `ADO Data Control`합니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="addDataSourceListener">
      <MemberSignature Language="C#" Value="public void addDataSourceListener (msdatasrc.DataSourceListener dsl);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void addDataSourceListener(class msdatasrc.DataSourceListener dsl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ADODC.addDataSourceListener(msdatasrc.DataSourceListener)" />
      <MemberSignature Language="VB.NET" Value="Public Sub addDataSourceListener (dsl As DataSourceListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void addDataSourceListener(msdatasrc::DataSourceListener ^ dsl) = msdatasrc::DataSource::addDataSourceListener;" />
      <MemberSignature Language="F#" Value="abstract member addDataSourceListener : msdatasrc.DataSourceListener -&gt; unit&#xA;override this.addDataSourceListener : msdatasrc.DataSourceListener -&gt; unit" Usage="aDODC.addDataSourceListener dsl" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:msdatasrc.DataSource.addDataSourceListener(msdatasrc.DataSourceListener)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dsl" Type="msdatasrc.DataSourceListener" />
      </Parameters>
      <Docs>
        <param name="dsl"><see langword="Msdatasrc.DataSourceListener" /></param>
        <summary>데이터 집합의 변경을 모니터링하기 위한 인터페이스를 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `DataSourceListener` 데이터 멤버 추가, 제거 또는 변경 될 때 데이터 집합을 모니터링 합니다 <xref:Microsoft.VisualBasic.Compatibility.VB6.ADODC> 데이터 원본에 연결 합니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="Microsoft.VisualBasic.Compatibility.VB6.ADODC.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.VisualBasic.Compatibility.VB6.SRDescription("ADODC_DESCBackColor")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" />의 배경색을 가져오거나 설정합니다.</summary>
        <value><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" />의 배경색을 나타내는 <see cref="T:System.Drawing.Color" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정 된 `BackColor` 속성에는 부분에서 텍스트가 표시 되는 컨트롤에만 영향을 줍니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BOF">
      <MemberSignature Language="C#" Value="public bool BOF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BOF" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.BOF" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BOF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BOF { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.BOF : bool" Usage="Microsoft.VisualBasic.Compatibility.VB6.ADODC.BOF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 행 위치가 <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset" />의 첫 번째 행 앞에 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see langword="true" /> 현재 행 위치가 첫 번째 행의 앞 이면 그렇지 않으면 <see langword="false" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `BOF` 고 <xref:Microsoft.VisualBasic.Compatibility.VB6.ADODC.EOF%2A> 반환 값은이 포인터가 유효한 경우 현재 행 포인터의 위치에 따라 결정 됩니다. 경우 `BOF` 또는 <xref:Microsoft.VisualBasic.Compatibility.VB6.ADODC.EOF%2A> 됩니다 `true`, 현재 행이 없습니다, 및를 참조 하려고 <xref:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset%2A> 예외를 발생 하는 데이터입니다.  
  
 사용할 수는 `BOF` 및 <xref:Microsoft.VisualBasic.Compatibility.VB6.ADODC.EOF%2A> 속성을 확인 하는지 여부를 <xref:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset%2A> 개체에 행 이나 한도 범위를 벗어났는지 여부는 <xref:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset%2A> 행으로 이동 하면.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BOFAction">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Compatibility.VB6.ADODC.BOFActionEnum BOFAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Compatibility.VB6.ADODC/BOFActionEnum BOFAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.BOFAction" />
      <MemberSignature Language="VB.NET" Value="Public Property BOFAction As ADODC.BOFActionEnum" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Compatibility::VB6::ADODC::BOFActionEnum BOFAction { Microsoft::VisualBasic::Compatibility::VB6::ADODC::BOFActionEnum get(); void set(Microsoft::VisualBasic::Compatibility::VB6::ADODC::BOFActionEnum value); };" />
      <MemberSignature Language="F#" Value="member this.BOFAction : Microsoft.VisualBasic.Compatibility.VB6.ADODC.BOFActionEnum with get, set" Usage="Microsoft.VisualBasic.Compatibility.VB6.ADODC.BOFAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.VisualBasic.Compatibility.VB6.SRDescription("ADODC_DESCBOFAction")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Compatibility.VB6.ADODC+BOFActionEnum</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> 속성이 <see langword="true" />일 때 <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.BOF" />가 수행하는 작업을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>수행할 작업을 지정하는 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC.BOFActionEnum" /> 열거형입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 동작을 지정 때를 `MovePrevious` 단추가 눌러져 및 첫 번째 행을 <xref:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset%2A> 이 현재 행.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheSize">
      <MemberSignature Language="C#" Value="public int CacheSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.CacheSize" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CacheSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheSize : int with get, set" Usage="Microsoft.VisualBasic.Compatibility.VB6.ADODC.CacheSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.VisualBasic.Compatibility.VB6.SRDescription("ADODC_DESCCacheSize")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(50)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>로컬 메모리에 캐시된 현재 <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset" />의 레코드 수를 가져오거나 설정합니다.</summary>
        <value>로컬 메모리에 캐시된 현재 <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset" /> 개체의 레코드 수를 지정하는 <see langword="Integer" />입니다. 기본값은 50입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `CacheSize` 값 공급자 레코드 로컬 메모리에 한 번에 인출할 수와 해당 버퍼에 유지 하려면 레코드 수를 나타냅니다. 예를 들어,로 설정 하면 10 첫 번째를 연 후 <xref:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset%2A>, 공급자는 로컬 메모리에 처음 10 개의 레코드를 인출 합니다. 따라서 현재 레코드에서 앞으로 이동 하면 공급자는 로컬 메모리 버퍼에서 데이터 값을 반환 합니다. 마지막 레코드를 통과 하는 즉시 다음 10 개의 레코드를 캐시에 데이터 원본에서 인출 되어 있습니다.  
  
 커서의 수명 동안 값을 변경할 수는 있지만, 변경 데이터 원본에서 다음 인출 후 캐시에는 레코드의 수만 적용 됩니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CommandTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTimeout : int with get, set" Usage="Microsoft.VisualBasic.Compatibility.VB6.ADODC.CommandTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.VisualBasic.Compatibility.VB6.SRDescription("ADODC_DESCCommandTimeout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서버에서 명령이 반환될 때까지 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" />가 대기하는 시간(초)을 가져오거나 설정합니다.</summary>
        <value>연결이 설정되는 동안 대기할 시간(초)을 지정하는 <see langword="Integer" />입니다. 기본값은 15초입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 명령을 완료 하지 않고이 기간이 경과한 후 공급자 호출 애플리케이션에서 예외가 발생 하 고 명령을 취소 합니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public ADODB.CommandTypeEnum CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype ADODB.CommandTypeEnum CommandType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandType As CommandTypeEnum" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ADODB::CommandTypeEnum CommandType { ADODB::CommandTypeEnum get(); void set(ADODB::CommandTypeEnum value); };" />
      <MemberSignature Language="F#" Value="member this.CommandType : ADODB.CommandTypeEnum with get, set" Usage="Microsoft.VisualBasic.Compatibility.VB6.ADODC.CommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.VisualBasic.Compatibility.VB6.SRDescription("ADODC_DESCCommandType")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ADODB.CommandTypeEnum</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" />을 열 때 전달할 명령의 유형을 <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset" />에 알려 주는 값을 가져오거나 설정합니다.</summary>
        <value>명령 유형을 지정하는 <see langword="ADODB.CommandTypeEnum" /> 열거형입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 명령의 실행이 최적화이 속성을 설정 합니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="Microsoft.VisualBasic.Compatibility.VB6.ADODC.ConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.VisualBasic.Compatibility.VB6.SRDescription("ADODC_DESCConectionString")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스에 대한 연결을 설정하는 데 사용되는 정보를 가져오거나 설정합니다.</summary>
        <value>연결 정보가 포함된 <see cref="T:System.String" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 `ConnectionString` 일련의 인수를 포함 하는 자세한 연결 문자열을 전달 하 여 데이터 원본을 지정 하려면 속성 = 값 문을 세미콜론으로 구분 합니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public int ConnectionTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ConnectionTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionTimeout : int with get, set" Usage="Microsoft.VisualBasic.Compatibility.VB6.ADODC.ConnectionTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.VisualBasic.Compatibility.VB6.SRDescription("ADODC_DESCConnectionTimeout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(15)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>공급자가 <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.ConnectionString" /> 속성에 지정된 서버에 대해 연결을 시도하는 시간(초)을 가져오거나 설정합니다.</summary>
        <value>연결이 설정되는 동안 대기할 시간(초)을 지정하는 <see langword="Integer" />입니다. 기본값은 15초입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 ADO `ConnectionTimeout` 속성입니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorLocation">
      <MemberSignature Language="C#" Value="public ADODB.CursorLocationEnum CursorLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype ADODB.CursorLocationEnum CursorLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.CursorLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property CursorLocation As CursorLocationEnum" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ADODB::CursorLocationEnum CursorLocation { ADODB::CursorLocationEnum get(); void set(ADODB::CursorLocationEnum value); };" />
      <MemberSignature Language="F#" Value="member this.CursorLocation : ADODB.CursorLocationEnum with get, set" Usage="Microsoft.VisualBasic.Compatibility.VB6.ADODC.CursorLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.VisualBasic.Compatibility.VB6.SRDescription("ADODC_DESCCursorLocation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ADODB.CursorLocationEnum</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> 개체에 대한 커서 라이브러리의 위치를 가져오거나 설정합니다.</summary>
        <value>위치를 지정하는 <see langword="ADODB.CursorLocationEnum" /> 열거형입니다. 기본값은 <see langword="ADODB.CursorLocationEnum.adUseClient" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 ADO 명령 및 연결에 해당 `CursorLocation` 속성입니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorType">
      <MemberSignature Language="C#" Value="public ADODB.CursorTypeEnum CursorType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype ADODB.CursorTypeEnum CursorType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.CursorType" />
      <MemberSignature Language="VB.NET" Value="Public Property CursorType As CursorTypeEnum" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ADODB::CursorTypeEnum CursorType { ADODB::CursorTypeEnum get(); void set(ADODB::CursorTypeEnum value); };" />
      <MemberSignature Language="F#" Value="member this.CursorType : ADODB.CursorTypeEnum with get, set" Usage="Microsoft.VisualBasic.Compatibility.VB6.ADODC.CursorType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.VisualBasic.Compatibility.VB6.SRDescription("ADODC_DESCCursorType")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ADODB.CursorTypeEnum</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>지정된 쿼리의 결과 집합을 열 때 사용할 커서의 기본 형식을 지정하는 값을 가져오거나 설정합니다.</summary>
        <value>사용할 커서의 형식을 지정하는 <see langword="ADODB.CursorTypeEnum" /> 열거형입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 열 때 사용할 커서 유형을 결정을 <xref:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset%2A>입니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="aDODC.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 공용 `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A> 메서드. `Dispose()` 보호 된 호출 `Dispose(Boolean)` disposing 매개 변수를 설정는 메서드 `true`합니다. <xref:System.Object.Finalize%2A> 호출 `Dispose` disposing 매개 변수 설정한 `false`합니다.  
  
 Disposing 매개 변수가 경우 `true`,이 메서드는이 컨트롤에서 참조 하는 모든 관리 되는 개체를 소유 하는 모든 리소스를 해제 합니다. 이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다. 재정의 하는 경우 <see langword="Dispose(Boolean)" />대 한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 하십시오 <see langword="Dispose" />합니다. 구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />를 참조 하세요 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다. 에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />를 참조 하십시오 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드 재정의](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="EndOfRecordset">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Compatibility.VB6.ADODC.EndOfRecordsetDelegate EndOfRecordset;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Compatibility.VB6.ADODC/EndOfRecordsetDelegate EndOfRecordset" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ADODC.EndOfRecordset" />
      <MemberSignature Language="VB.NET" Value="Public Event EndOfRecordset As ADODC.EndOfRecordsetDelegate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Compatibility::VB6::ADODC::EndOfRecordsetDelegate ^ EndOfRecordset;" />
      <MemberSignature Language="F#" Value="member this.EndOfRecordset : Microsoft.VisualBasic.Compatibility.VB6.ADODC.EndOfRecordsetDelegate " Usage="member this.EndOfRecordset : Microsoft.VisualBasic.Compatibility.VB6.ADODC.EndOfRecordsetDelegate " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Compatibility.VB6.ADODC+EndOfRecordsetDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="EndOfRecordset" /> 이벤트는 <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset" />의 끝을 지난 위치에 있는 행으로 이동하려고 하면 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `EndOfRecordset` 문제가 발생할 수도 있습니다는 `MoveNext` 작업이 실패 합니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public bool EOF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EOF" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.EOF" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EOF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EOF { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EOF : bool" Usage="Microsoft.VisualBasic.Compatibility.VB6.ADODC.EOF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 행 위치가 <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset" />의 마지막 행 뒤에 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see langword="true" /> 현재 행 위치가 마지막 행 뒤 이면 그렇지 않으면 <see langword="false" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:Microsoft.VisualBasic.Compatibility.VB6.ADODC.BOF%2A> 고 `EOF` 반환 값은이 포인터가 유효한 경우 현재 행 포인터의 위치에 따라 결정 됩니다. 경우 <xref:Microsoft.VisualBasic.Compatibility.VB6.ADODC.BOF%2A> 또는 `EOF` 됩니다 `true`, 현재 행이 없습니다, 및를 참조 하려고 <xref:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset%2A> 예외를 발생 하는 데이터입니다.  
  
 사용할 수는 <xref:Microsoft.VisualBasic.Compatibility.VB6.ADODC.BOF%2A> 및 `EOF` 속성을 확인 하는지 여부를 <xref:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset%2A> 개체에 행 이나 한도 범위를 벗어났는지 여부는 <xref:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset%2A> 행으로 이동 하면.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EOFAction">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Compatibility.VB6.ADODC.EOFActionEnum EOFAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Compatibility.VB6.ADODC/EOFActionEnum EOFAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.EOFAction" />
      <MemberSignature Language="VB.NET" Value="Public Property EOFAction As ADODC.EOFActionEnum" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Compatibility::VB6::ADODC::EOFActionEnum EOFAction { Microsoft::VisualBasic::Compatibility::VB6::ADODC::EOFActionEnum get(); void set(Microsoft::VisualBasic::Compatibility::VB6::ADODC::EOFActionEnum value); };" />
      <MemberSignature Language="F#" Value="member this.EOFAction : Microsoft.VisualBasic.Compatibility.VB6.ADODC.EOFActionEnum with get, set" Usage="Microsoft.VisualBasic.Compatibility.VB6.ADODC.EOFAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.VisualBasic.Compatibility.VB6.SRDescription("ADODC_DESCEOFAction")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Compatibility.VB6.ADODC+EOFActionEnum</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> 속성이 <see langword="true" />일 때 <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.EOF" />가 수행하는 작업을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>수행할 작업을 지정하는 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC.EOFActionEnum" /> 열거형입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 동작을 지정 때를 `MoveNext` 단추를 누를 때 첫 번째 행을 <xref:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset%2A> 이 현재 행.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Compatibility.VB6.ADODC.ErrorDelegate Error;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Compatibility.VB6.ADODC/ErrorDelegate Error" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Error" />
      <MemberSignature Language="VB.NET" Value="Public Event Error As ADODC.ErrorDelegate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Compatibility::VB6::ADODC::ErrorDelegate ^ Error;" />
      <MemberSignature Language="F#" Value="member this.Error : Microsoft.VisualBasic.Compatibility.VB6.ADODC.ErrorDelegate " Usage="member this.Error : Microsoft.VisualBasic.Compatibility.VB6.ADODC.ErrorDelegate " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Compatibility.VB6.ADODC+ErrorDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" />에서 예외가 발생할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트를 사용 하 여 기본 OLE DB에서 파생 되는 예외를 처리 하려면 `DataSource`합니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchComplete">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Compatibility.VB6.ADODC.FetchCompleteDelegate FetchComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Compatibility.VB6.ADODC/FetchCompleteDelegate FetchComplete" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ADODC.FetchComplete" />
      <MemberSignature Language="VB.NET" Value="Public Event FetchComplete As ADODC.FetchCompleteDelegate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Compatibility::VB6::ADODC::FetchCompleteDelegate ^ FetchComplete;" />
      <MemberSignature Language="F#" Value="member this.FetchComplete : Microsoft.VisualBasic.Compatibility.VB6.ADODC.FetchCompleteDelegate " Usage="member this.FetchComplete : Microsoft.VisualBasic.Compatibility.VB6.ADODC.FetchCompleteDelegate " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Compatibility.VB6.ADODC+FetchCompleteDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> 컨트롤이 데이터베이스에서의 페치를 완료하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchProgress">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Compatibility.VB6.ADODC.FetchProgressDelegate FetchProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Compatibility.VB6.ADODC/FetchProgressDelegate FetchProgress" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ADODC.FetchProgress" />
      <MemberSignature Language="VB.NET" Value="Public Event FetchProgress As ADODC.FetchProgressDelegate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Compatibility::VB6::ADODC::FetchProgressDelegate ^ FetchProgress;" />
      <MemberSignature Language="F#" Value="member this.FetchProgress : Microsoft.VisualBasic.Compatibility.VB6.ADODC.FetchProgressDelegate " Usage="member this.FetchProgress : Microsoft.VisualBasic.Compatibility.VB6.ADODC.FetchProgressDelegate " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Compatibility.VB6.ADODC+FetchProgressDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> 컨트롤이 데이터베이스에서 데이터를 페치하는 동안 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldChangeComplete">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Compatibility.VB6.ADODC.FieldChangeCompleteDelegate FieldChangeComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Compatibility.VB6.ADODC/FieldChangeCompleteDelegate FieldChangeComplete" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ADODC.FieldChangeComplete" />
      <MemberSignature Language="VB.NET" Value="Public Event FieldChangeComplete As ADODC.FieldChangeCompleteDelegate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Compatibility::VB6::ADODC::FieldChangeCompleteDelegate ^ FieldChangeComplete;" />
      <MemberSignature Language="F#" Value="member this.FieldChangeComplete : Microsoft.VisualBasic.Compatibility.VB6.ADODC.FieldChangeCompleteDelegate " Usage="member this.FieldChangeComplete : Microsoft.VisualBasic.Compatibility.VB6.ADODC.FieldChangeCompleteDelegate " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Compatibility.VB6.ADODC+FieldChangeCompleteDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset" /> 컨트롤에 대한 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" />의 <see langword="Field" />에 대해 업데이트가 완료되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="getDataMember">
      <MemberSignature Language="C#" Value="public object getDataMember (string dataMember, ref Guid riid);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance object getDataMember(string dataMember, valuetype System.Guid&amp; riid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ADODC.getDataMember(System.String,System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Function getDataMember (dataMember As String, ByRef riid As Guid) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ getDataMember(System::String ^ dataMember, Guid % riid) = msdatasrc::DataSource::getDataMember;" />
      <MemberSignature Language="F#" Value="abstract member getDataMember : string *  -&gt; obj&#xA;override this.getDataMember : string *  -&gt; obj" Usage="aDODC.getDataMember (dataMember, riid)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:msdatasrc.DataSource.getDataMember(System.String,System.Guid@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataMember" Type="System.String" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="dataMember">데이터 소스에서 지원하는 하나 이상의 데이터 집합을 나타내는 데이터 멤버에 대해 설명하는 <see cref="T:System.String" />입니다.</param>
        <param name="riid">지정된 데이터 액세스 개체의 인터페이스 식별자입니다.</param>
        <summary><see cref="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset" />에 대한 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" />을 반환합니다.</summary>
        <returns>지정된 데이터 멤버에 대한 데이터 액세스 개체(예: 행 위치)입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="getDataMemberCount">
      <MemberSignature Language="C#" Value="public int getDataMemberCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance int32 getDataMemberCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ADODC.getDataMemberCount" />
      <MemberSignature Language="VB.NET" Value="Public Function getDataMemberCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int getDataMemberCount() = msdatasrc::DataSource::getDataMemberCount;" />
      <MemberSignature Language="F#" Value="abstract member getDataMemberCount : unit -&gt; int&#xA;override this.getDataMemberCount : unit -&gt; int" Usage="aDODC.getDataMemberCount " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:msdatasrc.DataSource.getDataMemberCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>OLE DB <see langword="DataSource.getDataMemberCount" /> 메서드를 구현합니다.</summary>
        <returns>개수를 나타내는 <see langword="Integer" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 데이터 멤버의 개수를 반환 하기 위해 내부적으로 사용 된 <xref:Microsoft.VisualBasic.Compatibility.VB6.ADODC>합니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="getDataMemberName">
      <MemberSignature Language="C#" Value="public string getDataMemberName (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance string getDataMemberName(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ADODC.getDataMemberName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function getDataMemberName (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ getDataMemberName(int index) = msdatasrc::DataSource::getDataMemberName;" />
      <MemberSignature Language="F#" Value="abstract member getDataMemberName : int -&gt; string&#xA;override this.getDataMemberName : int -&gt; string" Usage="aDODC.getDataMemberName index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:msdatasrc.DataSource.getDataMemberName(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">데이터 멤버 이름 목록에 대한 인덱스입니다.</param>
        <summary>OLE DB <see langword="DataSource.getDataMemberName" /> 메서드를 구현합니다.</summary>
        <returns>데이터 멤버 이름에 대해 설명하는 <see cref="T:System.String" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 데이터 멤버의 이름을 반환할 내부적으로 사용 된 <xref:Microsoft.VisualBasic.Compatibility.VB6.ADODC>합니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockType">
      <MemberSignature Language="C#" Value="public ADODB.LockTypeEnum LockType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype ADODB.LockTypeEnum LockType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.LockType" />
      <MemberSignature Language="VB.NET" Value="Public Property LockType As LockTypeEnum" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ADODB::LockTypeEnum LockType { ADODB::LockTypeEnum get(); void set(ADODB::LockTypeEnum value); };" />
      <MemberSignature Language="F#" Value="member this.LockType : ADODB.LockTypeEnum with get, set" Usage="Microsoft.VisualBasic.Compatibility.VB6.ADODC.LockType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.VisualBasic.Compatibility.VB6.SRDescription("ADODC_DESCLockType")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ADODB.LockTypeEnum</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>동시성 처리의 유형을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>동시성 처리의 유형을 지정하는 <see langword="ADODB.LockTypeEnum" /> 열거형입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 업데이트 중인 데이터에 대해 충분 한 제어를 유지 하기 위해 `ADO` 다양 한 다른 사용자에 부여 하거나 업데이트 되는 데이터에 대 한 액세스를 거부 하는 방법을 제어 하는 동시성 옵션을 제공 합니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRecords">
      <MemberSignature Language="C#" Value="public int MaxRecords { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxRecords" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.MaxRecords" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxRecords As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxRecords { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxRecords : int with get, set" Usage="Microsoft.VisualBasic.Compatibility.VB6.ADODC.MaxRecords" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.VisualBasic.Compatibility.VB6.SRDescription("ADODC_DESCMaxRecords")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스에서 검색할 수 있는 최대 레코드 수를 가져오거나 설정합니다.</summary>
        <value>데이터 소스에서 검색할 수 있는 레코드 수를 지정하는 <see langword="Integer" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 ADO `Recordset.MaxRecords` 속성입니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public ADODB.ConnectModeEnum Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype ADODB.ConnectModeEnum Mode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As ConnectModeEnum" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ADODB::ConnectModeEnum Mode { ADODB::ConnectModeEnum get(); void set(ADODB::ConnectModeEnum value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : ADODB.ConnectModeEnum with get, set" Usage="Microsoft.VisualBasic.Compatibility.VB6.ADODC.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.VisualBasic.Compatibility.VB6.SRDescription("ADODC_DESCMode")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ADODB.ConnectModeEnum</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="Connection" />의 데이터를 수정하거나 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" />의 <see langword="Record" />를 여는 데 사용할 수 있는 권한을 지정하는 값을 가져오거나 설정합니다.</summary>
        <value>모드를 지정하는 <see langword="ADO.ConnectModeEnum" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 ADO `Mode` 속성입니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveComplete">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Compatibility.VB6.ADODC.MoveCompleteDelegate MoveComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Compatibility.VB6.ADODC/MoveCompleteDelegate MoveComplete" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ADODC.MoveComplete" />
      <MemberSignature Language="VB.NET" Value="Public Event MoveComplete As ADODC.MoveCompleteDelegate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Compatibility::VB6::ADODC::MoveCompleteDelegate ^ MoveComplete;" />
      <MemberSignature Language="F#" Value="member this.MoveComplete : Microsoft.VisualBasic.Compatibility.VB6.ADODC.MoveCompleteDelegate " Usage="member this.MoveComplete : Microsoft.VisualBasic.Compatibility.VB6.ADODC.MoveCompleteDelegate " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Compatibility.VB6.ADODC+MoveCompleteDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="MoveFirst" />, <see langword="MoveNext" /> 또는 <see langword="MoveLast" /> 메서드가 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> 컨트롤에 대한 <see langword="Recordset" />에서 발생할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ADODC.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnResize(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnResize : EventArgs -&gt; unit" Usage="aDODC.OnResize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Windows.Forms.Control.Resize" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 `OnResize` 메서드는 파생된 클래스가 대리자를 연결 하지 않고 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see langword="OnClick" /> 파생된 클래스에서 호출 해야 합니다 <see langword="OnClick" /> 대리자를 등록 하는 기본 클래스의 메서드는 이벤트를 받도록 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Compatibility.VB6.ADODC.OrientationEnum Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Compatibility.VB6.ADODC/OrientationEnum Orientation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As ADODC.OrientationEnum" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Compatibility::VB6::ADODC::OrientationEnum Orientation { Microsoft::VisualBasic::Compatibility::VB6::ADODC::OrientationEnum get(); void set(Microsoft::VisualBasic::Compatibility::VB6::ADODC::OrientationEnum value); };" />
      <MemberSignature Language="F#" Value="member this.Orientation : Microsoft.VisualBasic.Compatibility.VB6.ADODC.OrientationEnum with get, set" Usage="Microsoft.VisualBasic.Compatibility.VB6.ADODC.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.VisualBasic.Compatibility.VB6.SRDescription("ADODC_DESCOrientation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Compatibility.VB6.ADODC+OrientationEnum</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" />가 가로 방향인지(기본값) 또는 세로 방향인지 지정하는 값을 가져오거나 설정합니다.</summary>
        <value>방향을 지정하는 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC.OrientationEnum" /> 열거형입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 ADO `Recordset.MaxRecords` 속성입니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password {  void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Password : string" Usage="Microsoft.VisualBasic.Compatibility.VB6.ADODC.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.VisualBasic.Compatibility.VB6.SRDescription("ADODC_DESCPassword")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ADO <see langword="Recordset" /> 개체를 만드는 동안 사용되는 암호를 설정합니다.</summary>
        <value>암호가 포함된 <see cref="T:System.String" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성 설정에는 쓰기 전용입니다. 코드에서에서 다시 읽을 수 없는 제공 될는 `Password` 속성입니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordChangeComplete">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Compatibility.VB6.ADODC.RecordChangeCompleteDelegate RecordChangeComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Compatibility.VB6.ADODC/RecordChangeCompleteDelegate RecordChangeComplete" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ADODC.RecordChangeComplete" />
      <MemberSignature Language="VB.NET" Value="Public Event RecordChangeComplete As ADODC.RecordChangeCompleteDelegate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Compatibility::VB6::ADODC::RecordChangeCompleteDelegate ^ RecordChangeComplete;" />
      <MemberSignature Language="F#" Value="member this.RecordChangeComplete : Microsoft.VisualBasic.Compatibility.VB6.ADODC.RecordChangeCompleteDelegate " Usage="member this.RecordChangeComplete : Microsoft.VisualBasic.Compatibility.VB6.ADODC.RecordChangeCompleteDelegate " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Compatibility.VB6.ADODC+RecordChangeCompleteDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> 컨트롤의 <see langword="Recordset" />에서 현재 레코드가 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Recordset">
      <MemberSignature Language="C#" Value="public ADODB.Recordset Recordset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ADODB.Recordset Recordset" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset" />
      <MemberSignature Language="VB.NET" Value="Public Property Recordset As Recordset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ADODB::Recordset ^ Recordset { ADODB::Recordset ^ get(); void set(ADODB::Recordset ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Recordset : ADODB.Recordset with get, set" Usage="Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ADODB.Recordset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>내부 ADO <see langword="Recordset" /> 개체에 대한 참조를 가져오거나 설정합니다.</summary>
        <value>ADO <see langword="Recordset" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 합니다 `Recordset` 속성, 메서드, 속성 및 이벤트는 ADO 사용할 수 `ADODB.Recordset` 개체입니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordsetChangeComplete">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Compatibility.VB6.ADODC.RecordsetChangeCompleteDelegate RecordsetChangeComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Compatibility.VB6.ADODC/RecordsetChangeCompleteDelegate RecordsetChangeComplete" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ADODC.RecordsetChangeComplete" />
      <MemberSignature Language="VB.NET" Value="Public Event RecordsetChangeComplete As ADODC.RecordsetChangeCompleteDelegate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Compatibility::VB6::ADODC::RecordsetChangeCompleteDelegate ^ RecordsetChangeComplete;" />
      <MemberSignature Language="F#" Value="member this.RecordsetChangeComplete : Microsoft.VisualBasic.Compatibility.VB6.ADODC.RecordsetChangeCompleteDelegate " Usage="member this.RecordsetChangeComplete : Microsoft.VisualBasic.Compatibility.VB6.ADODC.RecordsetChangeCompleteDelegate " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Compatibility.VB6.ADODC+RecordsetChangeCompleteDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> 컨트롤에 대한 <see langword="Recordset" />이 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordSource">
      <MemberSignature Language="C#" Value="public string RecordSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RecordSource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.RecordSource" />
      <MemberSignature Language="VB.NET" Value="Public Property RecordSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RecordSource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RecordSource : string with get, set" Usage="Microsoft.VisualBasic.Compatibility.VB6.ADODC.RecordSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.VisualBasic.Compatibility.VB6.SRDescription("ADODC_DESCRecordSource")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset" />을 반환하는 문 또는 쿼리를 가져오거나 설정합니다.</summary>
        <value>문 또는 쿼리가 포함된 <see cref="T:System.String" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `RecordSource` 데이터베이스 테이블 및 데이터 원본에 대 한 적절 한 구문을 사용 하 여 올바른 SQL 문자열의 이름을 포함 합니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public override void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Refresh();" />
      <MemberSignature Language="F#" Value="override this.Refresh : unit -&gt; unit" Usage="aDODC.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컨트롤이 해당 컨트롤의 클라이언트 영역을 강제로 무효화하도록 하고 컨트롤 자체와 모든 자식 컨트롤을 즉시 다시 그리도록 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="removeDataSourceListener">
      <MemberSignature Language="C#" Value="public void removeDataSourceListener (msdatasrc.DataSourceListener dsl);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void removeDataSourceListener(class msdatasrc.DataSourceListener dsl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ADODC.removeDataSourceListener(msdatasrc.DataSourceListener)" />
      <MemberSignature Language="VB.NET" Value="Public Sub removeDataSourceListener (dsl As DataSourceListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void removeDataSourceListener(msdatasrc::DataSourceListener ^ dsl) = msdatasrc::DataSource::removeDataSourceListener;" />
      <MemberSignature Language="F#" Value="abstract member removeDataSourceListener : msdatasrc.DataSourceListener -&gt; unit&#xA;override this.removeDataSourceListener : msdatasrc.DataSourceListener -&gt; unit" Usage="aDODC.removeDataSourceListener dsl" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:msdatasrc.DataSource.removeDataSourceListener(msdatasrc.DataSourceListener)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dsl" Type="msdatasrc.DataSourceListener" />
      </Parameters>
      <Docs>
        <param name="dsl"><see langword="Msdatasrc.DataSourceListener" /></param>
        <summary><see langword="DataSourceListener" />를 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `DataSourceListener` 데이터 멤버 추가, 제거 또는 변경 될 때 데이터 집합을 모니터링 합니다 <xref:Microsoft.VisualBasic.Compatibility.VB6.ADODC> 데이터 원본에 연결 합니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="Microsoft.VisualBasic.Compatibility.VB6.ADODC.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.VisualBasic.Compatibility.VB6.SRDescription("ADODC_DESCControlCaption")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" />의 표시 영역에 포함되는 텍스트를 가져오거나 설정합니다.</summary>
        <value>텍스트를 지정하는 <see cref="T:System.String" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 사용자에 게 현재 레코드 수와 같은 정보를 전달 합니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserName : string with get, set" Usage="Microsoft.VisualBasic.Compatibility.VB6.ADODC.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.VisualBasic.Compatibility.VB6.SRDescription("ADODC_DESCUserName")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ADO <see langword="Recordset" /> 개체의 사용자를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>사용자 이름이 포함된 <see cref="T:System.String" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자 이름 구문이 데이터 소스에 따라 달라 집니다. 경우는 `UserName` 및 <xref:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Password%2A> 는 제공 된 컨트롤 값을 사용 연결 문자열을 만들려면 (<xref:Microsoft.VisualBasic.Compatibility.VB6.ADODC.ConnectionString%2A> 속성).  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WillChangeField">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Compatibility.VB6.ADODC.WillChangeFieldDelegate WillChangeField;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Compatibility.VB6.ADODC/WillChangeFieldDelegate WillChangeField" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ADODC.WillChangeField" />
      <MemberSignature Language="VB.NET" Value="Public Event WillChangeField As ADODC.WillChangeFieldDelegate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Compatibility::VB6::ADODC::WillChangeFieldDelegate ^ WillChangeField;" />
      <MemberSignature Language="F#" Value="member this.WillChangeField : Microsoft.VisualBasic.Compatibility.VB6.ADODC.WillChangeFieldDelegate " Usage="member this.WillChangeField : Microsoft.VisualBasic.Compatibility.VB6.ADODC.WillChangeFieldDelegate " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Compatibility.VB6.ADODC+WillChangeFieldDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> 컨트롤의 <see langword="Recordset" />에서 현재 필드가 변경되기 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WillChangeRecord">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Compatibility.VB6.ADODC.WillChangeRecordDelegate WillChangeRecord;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Compatibility.VB6.ADODC/WillChangeRecordDelegate WillChangeRecord" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ADODC.WillChangeRecord" />
      <MemberSignature Language="VB.NET" Value="Public Event WillChangeRecord As ADODC.WillChangeRecordDelegate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Compatibility::VB6::ADODC::WillChangeRecordDelegate ^ WillChangeRecord;" />
      <MemberSignature Language="F#" Value="member this.WillChangeRecord : Microsoft.VisualBasic.Compatibility.VB6.ADODC.WillChangeRecordDelegate " Usage="member this.WillChangeRecord : Microsoft.VisualBasic.Compatibility.VB6.ADODC.WillChangeRecordDelegate " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Compatibility.VB6.ADODC+WillChangeRecordDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> 컨트롤의 <see langword="Recordset" />에서 현재 레코드가 변경되기 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WillChangeRecordset">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Compatibility.VB6.ADODC.WillChangeRecordsetDelegate WillChangeRecordset;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Compatibility.VB6.ADODC/WillChangeRecordsetDelegate WillChangeRecordset" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ADODC.WillChangeRecordset" />
      <MemberSignature Language="VB.NET" Value="Public Event WillChangeRecordset As ADODC.WillChangeRecordsetDelegate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Compatibility::VB6::ADODC::WillChangeRecordsetDelegate ^ WillChangeRecordset;" />
      <MemberSignature Language="F#" Value="member this.WillChangeRecordset : Microsoft.VisualBasic.Compatibility.VB6.ADODC.WillChangeRecordsetDelegate " Usage="member this.WillChangeRecordset : Microsoft.VisualBasic.Compatibility.VB6.ADODC.WillChangeRecordsetDelegate " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Compatibility.VB6.ADODC+WillChangeRecordsetDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> 컨트롤의 <see langword="Recordset" />이 변경되기 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WillMove">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Compatibility.VB6.ADODC.WillMoveDelegate WillMove;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Compatibility.VB6.ADODC/WillMoveDelegate WillMove" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.ADODC.WillMove" />
      <MemberSignature Language="VB.NET" Value="Public Event WillMove As ADODC.WillMoveDelegate " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Compatibility::VB6::ADODC::WillMoveDelegate ^ WillMove;" />
      <MemberSignature Language="F#" Value="member this.WillMove : Microsoft.VisualBasic.Compatibility.VB6.ADODC.WillMoveDelegate " Usage="member this.WillMove : Microsoft.VisualBasic.Compatibility.VB6.ADODC.WillMoveDelegate " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Compatibility.VB6.ADODC+WillMoveDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> 컨트롤의 <see langword="MoveFirst" />에 대해 <see langword="MoveNext" />, <see langword="MoveLast" /> 또는 <see langword="Recordset" /> 메서드가 실행되기 전에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>