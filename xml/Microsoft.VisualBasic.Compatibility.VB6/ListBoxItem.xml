<Type Name="ListBoxItem" FullName="Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b7ea20fbbcbfdec2855ceead6e221ee6323f9934" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48773404" /></Metadata><TypeSignature Language="C#" Value="public class ListBoxItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ListBoxItem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBoxItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListBoxItem" />
  <TypeSignature Language="F#" Value="type ListBoxItem = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Visual Basic 6.0에서 업그레이드된 애플리케이션에서 <see cref="T:System.Windows.Forms.ListBox" /> 또는 <see cref="T:System.Windows.Forms.ComboBox" /> 컨트롤의 항목을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0에서는 `ListBox` 및 `ComboBox` 사용을 제어를 `List` 목록 항목을 저장 하는 속성 및 `ItemData` 속성을 선택적으로 저장할는 `Integer` 각 목록 항목을 사용 하 여 연결 합니다. Visual Basic의 경우는 <xref:System.Windows.Forms.ListBox> 및 <xref:System.Windows.Forms.ComboBox> 사용을 제어 합니다 <xref:System.Windows.Forms.ListBox.Items%2A> 목록 항목을 저장 하는 속성 및 `ItemData` 속성은 더 이상 지원 합니다.  
  
 Visual Basic 6.0 애플리케이션을 Visual Basic로 업그레이드 되 면 업그레이드 도구 만들기는 `ListBoxItem` 의 각 항목에 대 한 클래스를 <xref:System.Windows.Forms.ListBox> 또는 <xref:System.Windows.Forms.ComboBox> 제어 합니다. 합니다 <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData%2A> 하 고 <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData%2A> 참조 하는 코드를 사용 하도록 설정 하려면 다음 함수를 사용할 수는 `ItemData` 속성입니다.  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /> 클래스의 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListBoxItem (string ItemString);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string ItemString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ItemString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListBoxItem(System::String ^ ItemString);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem : string -&gt; Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" Usage="new Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem ItemString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="ItemString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ItemString">목록 항목이 들어 있는 <see cref="T:System.String" />입니다.</param>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /> 클래스의 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 애플리케이션을 Visual Basic로 업그레이드 되 면 업그레이드 도구 만들기는 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem> 의 각 항목에 대 한 클래스를 <xref:System.Windows.Forms.ListBox> 또는 <xref:System.Windows.Forms.ComboBox> 제어 합니다. 합니다 <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData%2A> 하 고 <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData%2A> 참조 하는 코드를 사용 하도록 설정 하려면 다음 함수를 사용할 수는 `ItemData` 속성입니다.  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListBoxItem (string ItemString, int ItemData);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string ItemString, int32 ItemData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ItemString As String, ItemData As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListBoxItem(System::String ^ ItemString, int ItemData);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem : string * int -&gt; Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" Usage="new Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem (ItemString, ItemData)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="ItemString" Type="System.String" />
        <Parameter Name="ItemData" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ItemString">목록 항목이 들어 있는 <see cref="T:System.String" />입니다.</param>
        <param name="ItemData">Visual Basic 6.0 <see langword="Integer" /> 값을 나타내는 <see langword="ItemData" />입니다.</param>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /> 클래스의 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 애플리케이션을 Visual Basic로 업그레이드 되 면 업그레이드 도구 만들기는 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem> 의 각 항목에 대 한 클래스를 <xref:System.Windows.Forms.ListBox> 또는 <xref:System.Windows.Forms.ComboBox> 제어 합니다. 합니다 <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData%2A> 하 고 <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData%2A> 참조 하는 코드를 사용 하도록 설정 하려면 다음 함수를 사용할 수는 `ItemData` 속성입니다.  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemData">
      <MemberSignature Language="C#" Value="public int ItemData;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 ItemData" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" />
      <MemberSignature Language="VB.NET" Value="Public ItemData As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: int ItemData;" />
      <MemberSignature Language="F#" Value="val mutable ItemData : int" Usage="Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Visual Basic 6.0에서 업그레이드된 애플리케이션에서 <see cref="T:System.Windows.Forms.ListBox" /> 또는 <see cref="T:System.Windows.Forms.ComboBox" /> 컨트롤의 항목에 대한 <see langword="ItemData" /> 값을 저장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 애플리케이션을 Visual Basic로 업그레이드 되 면 업그레이드 도구 만들기는 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem> 의 각 항목에 대 한 클래스를 <xref:System.Windows.Forms.ListBox> 또는 <xref:System.Windows.Forms.ComboBox> 제어 합니다. 합니다 <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData%2A> 하 고 <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData%2A> 참조 하는 코드를 사용 하도록 설정 하려면 다음 함수를 사용할 수는 `ItemData` 속성입니다.  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemString">
      <MemberSignature Language="C#" Value="public string ItemString;" />
      <MemberSignature Language="ILAsm" Value=".field public string ItemString" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" />
      <MemberSignature Language="VB.NET" Value="Public ItemString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ItemString;" />
      <MemberSignature Language="F#" Value="val mutable ItemString : string" Usage="Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Visual Basic 6.0에서 업그레이드된 애플리케이션에서 <see cref="T:System.Windows.Forms.ListBox" /> 또는 <see cref="T:System.Windows.Forms.ComboBox" /> 컨트롤의 항목에 대한 <see langword="List" /> 값을 저장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Visual Basic 6.0 애플리케이션을 Visual Basic로 업그레이드 되 면 업그레이드 도구 만들기는 <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem> 의 각 항목에 대 한 클래스를 <xref:System.Windows.Forms.ListBox> 또는 <xref:System.Windows.Forms.ComboBox> 제어 합니다. 합니다 <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData%2A> 하 고 <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData%2A> 참조 하는 코드를 사용 하도록 설정 하려면 다음 함수를 사용할 수는 `ItemData` 속성입니다.  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="listBoxItem.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /> 를 <see cref="T:System.String" />로 변환합니다.</summary>
        <returns><see cref="T:System.String" />의 값이 들어 있는 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem> 변환할 수 없습니다는 <xref:System.String>; 호출 해야 합니다는 `ToString` 형식을 변환 하는 방법입니다.  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>