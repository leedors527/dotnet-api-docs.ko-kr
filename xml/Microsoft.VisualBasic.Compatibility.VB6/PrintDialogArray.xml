<Type Name="PrintDialogArray" FullName="Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a666479425cf86bd02a22653900e9227e426551f" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55410357" /></Metadata><TypeSignature Language="C#" Value="public class PrintDialogArray : Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray, System.ComponentModel.IExtenderProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PrintDialogArray extends Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray implements class System.ComponentModel.IExtenderProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" />
  <TypeSignature Language="VB.NET" Value="Public Class PrintDialogArray&#xA;Inherits BaseControlArray&#xA;Implements IExtenderProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintDialogArray : Microsoft::VisualBasic::Compatibility::VB6::BaseControlArray, System::ComponentModel::IExtenderProvider" />
  <TypeSignature Language="F#" Value="type PrintDialogArray = class&#xA;    inherit BaseControlArray&#xA;    interface IExtenderProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IExtenderProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("Index", typeof(System.Windows.Forms.PrintDialog))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Windows.Forms.PrintDialog" /> 컨트롤의 컨트롤 배열을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `PrintDialogArray` 클래스는 Visual Basic 6.0의 런타임 기능에 대 한 동일한 제공 `PrintDialog` 배열입니다. Visual Basic 6.0 컨트롤 배열의 디자인 타임 기능을 제공 하지는 않습니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintDialogArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintDialogArray();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스화하는 경우는 <xref:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray>에 호출 해야 합니다는 <xref:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.SetIndex%2A> 배열에 있는 초기 요소를 만드는 방법.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintDialogArray (System.ComponentModel.IContainer Container);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer Container) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintDialogArray(System::ComponentModel::IContainer ^ Container);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray : System.ComponentModel.IContainer -&gt; Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" Usage="new Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray Container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="Container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="Container">컨트롤 배열이 호스팅될 <see cref="T:System.ComponentModel.IContainer" />입니다.</param>
        <summary>컨테이너를 지정하여 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스화하는 경우는 <xref:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray>에 호출 해야 합니다는 <xref:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.SetIndex%2A> 배열에 있는 초기 요소를 만드는 방법.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExtend">
      <MemberSignature Language="C#" Value="public bool CanExtend (object target);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance bool CanExtend(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.CanExtend(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExtend (target As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanExtend(System::Object ^ target) = System::ComponentModel::IExtenderProvider::CanExtend;" />
      <MemberSignature Language="F#" Value="abstract member CanExtend : obj -&gt; bool&#xA;override this.CanExtend : obj -&gt; bool" Usage="printDialogArray.CanExtend target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target"><see cref="T:System.Windows.Forms.PrintDialog" /> 컨트롤 하나.</param>
        <summary>컨트롤이 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" />의 멤버인지 여부를 결정하는 값을 가져옵니다.</summary>
        <returns><paramref name="target" />이 컨트롤 배열의 멤버이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `CanExtend` 메서드를 사용 하 여 특정 여부를 확인 하려면 수 <xref:System.Windows.Forms.PrintDialog> 컨트롤은 다른 요소에서 복제 된 컨트롤 배열의 기본 요소입니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetControlInstanceType">
      <MemberSignature Language="C#" Value="protected override Type GetControlInstanceType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Type GetControlInstanceType() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.GetControlInstanceType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetControlInstanceType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override Type ^ GetControlInstanceType();" />
      <MemberSignature Language="F#" Value="override this.GetControlInstanceType : unit -&gt; Type" Usage="printDialogArray.GetControlInstanceType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />를 재정의합니다.</summary>
        <returns>컨트롤 배열에 있는 컨트롤의 형식입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 애플리케이션 코드에서 호출할 수 없습니다. 대신 <xref:System.Object.GetType%2A> 메서드를 사용합니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIndex">
      <MemberSignature Language="C#" Value="public short GetIndex (System.Windows.Forms.PrintDialog o);" />
      <MemberSignature Language="ILAsm" Value=".method public instance int16 GetIndex(class System.Windows.Forms.PrintDialog o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.GetIndex(System.Windows.Forms.PrintDialog)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIndex (o As PrintDialog) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short GetIndex(System::Windows::Forms::PrintDialog ^ o);" />
      <MemberSignature Language="F#" Value="member this.GetIndex : System.Windows.Forms.PrintDialog -&gt; int16" Usage="printDialogArray.GetIndex o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Windows.Forms.PrintDialog" />
      </Parameters>
      <Docs>
        <param name="o">컨트롤 배열의 <see cref="T:System.Windows.Forms.PrintDialog" />입니다.</param>
        <summary><see cref="T:System.Windows.Forms.PrintDialog" />에서 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" />의 인덱스를 가져옵니다.</summary>
        <returns>지정된 <see cref="T:System.Windows.Forms.PrintDialog" />의 인덱스를 나타내는 <see langword="Short" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하 여 지정 된 인덱스를 검색할 수 있습니다 <xref:System.Windows.Forms.PrintDialog>합니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpRequest">
      <MemberSignature Language="C#" Value="public event EventHandler HelpRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HelpRequest" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.HelpRequest" />
      <MemberSignature Language="VB.NET" Value="Public Event HelpRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HelpRequest;" />
      <MemberSignature Language="F#" Value="member this.HelpRequest : EventHandler " Usage="member this.HelpRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 컨트롤에 대한 도움말을 요청하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HelpRequested` 누르면 F1 키를 누르거나 상황에 맞는 도움말 단추를 클릭할 때 이벤트가 일반적으로 발생 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.HelpRequested" />
      </Docs>
    </Member>
    <Member MemberName="HookUpControlEvents">
      <MemberSignature Language="C#" Value="protected override void HookUpControlEvents (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HookUpControlEvents(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.HookUpControlEvents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HookUpControlEvents (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HookUpControlEvents(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.HookUpControlEvents : obj -&gt; unit" Usage="printDialogArray.HookUpControlEvents o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><see cref="T:System.Object" />입니다.</param>
        <summary><see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />를 재정의합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 애플리케이션 코드에서 호출할 수 없습니다. 사용 하 여 `AddHandler` 를 사용 하 여 추가 되는 모든 컨트롤에 대 한 이벤트를 후크 하는 <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A> 메서드.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.PrintDialog this[short Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.PrintDialog Item(int16)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.Item(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Index As Short) As PrintDialog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::PrintDialog ^ default[short] { System::Windows::Forms::PrintDialog ^ get(short Index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int16) : System.Windows.Forms.PrintDialog" Usage="Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PrintDialog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Index">컨트롤 배열의 요소 위치를 지정하는 <see langword="Short" />입니다.</param>
        <summary>인덱스에 따라 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" />의 특정 요소를 가져옵니다. 읽기 전용입니다.</summary>
        <value>컨트롤 배열에서 지정된 <paramref name="Index" />에 있는 <see cref="T:System.Windows.Forms.PrintDialog" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Item` 속성은 컨트롤 배열에 대 한 기본 속성입니다. 따라서 다음 코드 줄은 동일합니다.  
  
```vb  
MsgBox(CStr(PrintDialogArray.Item(1).Text))  
MsgBox(CStr(PrintDialogArray(1).Text))  
```  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetIndex">
      <MemberSignature Language="C#" Value="public void ResetIndex (System.Windows.Forms.PrintDialog o);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void ResetIndex(class System.Windows.Forms.PrintDialog o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.ResetIndex(System.Windows.Forms.PrintDialog)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetIndex (o As PrintDialog)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetIndex(System::Windows::Forms::PrintDialog ^ o);" />
      <MemberSignature Language="F#" Value="member this.ResetIndex : System.Windows.Forms.PrintDialog -&gt; unit" Usage="printDialogArray.ResetIndex o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Windows.Forms.PrintDialog" />
      </Parameters>
      <Docs>
        <param name="o"><see cref="T:System.Windows.Forms.Control" /></param>
        <summary><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" /> 클래스는 <see langword="ResetIndex" /> 메서드를 지원하지 않습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드가 지원 되지 않습니다 하 고 호출에서 예외가 발생 하지 않습니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIndex">
      <MemberSignature Language="C#" Value="public void SetIndex (System.Windows.Forms.PrintDialog o, short Index);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetIndex(class System.Windows.Forms.PrintDialog o, int16 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.SetIndex(System.Windows.Forms.PrintDialog,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetIndex (o As PrintDialog, Index As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetIndex(System::Windows::Forms::PrintDialog ^ o, short Index);" />
      <MemberSignature Language="F#" Value="member this.SetIndex : System.Windows.Forms.PrintDialog * int16 -&gt; unit" Usage="printDialogArray.SetIndex (o, Index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Windows.Forms.PrintDialog" />
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="o">컨트롤 배열의 <see cref="T:System.Windows.Forms.PrintDialog" />입니다.</param>
        <param name="Index">지정된 <see cref="T:System.Windows.Forms.PrintDialog" />의 인덱스를 나타내는 <see langword="Short" />입니다.</param>
        <summary><see cref="T:System.Windows.Forms.PrintDialog" />에서 초기 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" />의 인덱스를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `SetIndex` 컨트롤 배열에서 초기 요소를 만들 때만 메서드를 호출 해야 합니다. 후속 요소를 추가 하려면 다음을 호출 합니다 <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A> 메서드 지정는 `Index`합니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeIndex">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeIndex (System.Windows.Forms.PrintDialog o);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool ShouldSerializeIndex(class System.Windows.Forms.PrintDialog o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.ShouldSerializeIndex(System.Windows.Forms.PrintDialog)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeIndex (o As PrintDialog) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeIndex(System::Windows::Forms::PrintDialog ^ o);" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeIndex : System.Windows.Forms.PrintDialog -&gt; bool" Usage="printDialogArray.ShouldSerializeIndex o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Windows.Forms.PrintDialog" />
      </Parameters>
      <Docs>
        <param name="o">컨트롤 배열의 <see cref="T:System.Windows.Forms.PrintDialog" />입니다.</param>
        <summary><see cref="T:System.Windows.Forms.PrintDialog" />가 이 <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" />의 멤버인지 여부를 나타내는 값을 반환합니다.</summary>
        <returns><paramref name="o" />가 이 컨트롤 배열의 멤버이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정된 <xref:System.Windows.Forms.PrintDialog>가 다른 <xref:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray>의 멤버이면 `ShouldSerializeIndex`는 `false`를 반환합니다.  
  
> [!NOTE]
>  Visual Basic 6.0에서 Visual Basic으로의 업그레이드 도구에서 사용할 수 있도록 <xref:Microsoft.VisualBasic.Compatibility.VB6> 네임스페이스의 함수 및 개체가 제공됩니다. 이러한 함수와 개체에서 제공하는 대부분의 기능은 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]의 다른 네임스페이스에서 얻을 수 있는 기능과 동일하므로 이러한 함수와 개체는 Visual Basic 6.0 코드 모델이 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 구현과 크게 다른 경우에만 사용해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>