<Type Name="Network" FullName="Microsoft.VisualBasic.Devices.Network">
  <Metadata><Meta Name="ms.openlocfilehash" Value="04a6a2db7a56e73d311562333fd0c10c253cd321" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52244748" /></Metadata><TypeSignature Language="C#" Value="public class Network" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Network extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Network" />
  <TypeSignature Language="VB.NET" Value="Public Class Network" />
  <TypeSignature Language="C++ CLI" Value="public ref class Network" />
  <TypeSignature Language="F#" Value="type Network = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>컴퓨터가 연결되는 네트워크와 상호 작용하기 위한 속성, 이벤트 및 메서드를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서 관련 된 작업의 예제는 `My.Computer.Network` 개체입니다.  
  
|대상|보기|  
|-|-|  
|파일 업로드|[방법: 파일 업로드](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
|파일 다운로드|[방법: 파일 다운로드](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
|연결 상태 확인|[방법: 연결 상태 확인](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
  
   
  
## Examples  
 이 예제에서는 파일 업로드 `Order.txt` 에 http://www.cohowinery.com/uploads입니다.  
  
 [!code-vb[VbVbalrMyNetwork#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Network ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Network();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Devices.Network" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정한 원격 파일을 다운로드하여 지정한 위치에 저장합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">파일 이름과 호스트 주소를 포함하여 다운로드할 파일의 경로입니다.</param>
        <param name="destinationFileName">다운로드한 파일의 이름과 경로입니다.</param>
        <summary>지정한 원격 파일을 다운로드하여 지정한 위치에 저장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 대상 파일이 이미 있는 경우는 `DownloadFile` 메서드는 기존 파일을 덮어쓰지 것입니다. 다른 오버 로드 중 하나를 사용할 수는 <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> 기존 파일 덮어쓰기에 지시 하는 방법 사용자 자격 증명을 제공 하거나 특정 시간 제한 값을 지정 합니다.  
  
 `DownloadFile` 응용 프로그램에서 네트워크 추적을 사용 하도록 설정 하면 추적 정보를 출력 합니다. 자세한 내용은 [네트워크 추적 사용](~/docs/framework/network-programming/enabling-network-tracing.md)합니다.  
  
> [!NOTE]
>  `DownloadFile` 메서드는 선택적인 HTTP 헤더를 보내지 않습니다. 선택적 사용자 에이전트 헤더 누락 된 경우 일부 서버 500 (내부 서버 오류)을 반환할 수 있습니다. 사용 하 여 요청을 생성 해야 합니다 선택적 헤더를 보내려면는 <xref:System.Net.WebClient> 클래스입니다.  
  
 다음 표에서 관련 된 작업의 예로 `My.Computer.Network.DownloadFile` 메서드.  
  
|후|보기|  
|-|-|  
|파일 다운로드|[방법: 파일 다운로드](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 이 예제에서는 파일을 다운로드 `WineList.txt` 에서 `http://www.cohowinery.com/downloads` 저장 `C:\Documents and Settings\All Users\Documents`합니다.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 이 예제에서는 파일을 다운로드 `WineList.txt` 에서 `http://www.cohowinery.com/downloads` 저장 `C:\Documents and Settings\All Users\Documents`, 500 밀리초의 시간 제한 간격을 지정 합니다.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" />이 후행 슬래시로 종료됩니다.</exception>
        <exception cref="T:System.TimeoutException">기본 시간 제한 (100초) 내에 서버가 응답하지 않습니다.</exception>
        <exception cref="T:System.Security.SecurityException">사용자는 네트워크 작업을 수행하는 데 필요한 권한이 없습니다.</exception>
        <exception cref="T:System.Net.WebException">대상 웹 서버가 요청을 거부합니다.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Net.WebPermission">HTTP 인터넷 리소스에 액세스하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">방법: Visual Basic에서 파일 다운로드</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">방법: Visual Basic에서 파일 경로의 구문 분석</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">파일 이름과 호스트 주소를 포함하여 다운로드할 파일의 경로입니다.</param>
        <param name="destinationFileName">다운로드한 파일의 이름과 경로입니다.</param>
        <summary>지정한 원격 파일을 다운로드하여 지정한 위치에 저장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 대상 파일이 이미 있는 경우는 `DownloadFile` 메서드는 기존 파일을 덮어쓰지 것입니다. 다른 오버 로드 중 하나를 사용할 수는 <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> 기존 파일 덮어쓰기에 지시 하는 방법 사용자 자격 증명을 제공 하거나 특정 시간 제한 값을 지정 합니다. `DownloadFile` 응용 프로그램에서 네트워크 추적을 사용 하도록 설정 하면 추적 정보를 출력 합니다. 자세한 내용은 [네트워크 추적 사용](~/docs/framework/network-programming/enabling-network-tracing.md)합니다.  
  
> [!NOTE]
>  `DownloadFile` 메서드는 선택적인 HTTP 헤더를 보내지 않습니다. 선택적 사용자 에이전트 헤더 누락 된 경우 일부 서버 500 (내부 서버 오류)을 반환할 수 있습니다. 사용 하 여 요청을 생성 해야 합니다 선택적 헤더를 보내려면는 <xref:System.Net.WebClient> 클래스입니다.  
  
 다음 표에서 관련 된 작업의 예로 `My.Computer.Network.DownloadFile` 메서드.  
  
|후|보기|  
|-|-|  
|파일 다운로드|[방법: 파일 다운로드](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 이 예제에서는 파일을 다운로드 `WineList.txt` 에서 `http://www.cohowinery.com/downloads` 저장 `C:\Documents and Settings\All Users\Documents`합니다.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 이 예제에서는 파일을 다운로드 `WineList.txt` 에서 `http://www.cohowinery.com/downloads` 저장 `C:\Documents and Settings\All Users\Documents`, 500 밀리초의 시간 제한 간격을 지정 합니다.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" />이 후행 슬래시로 종료됩니다.</exception>
        <exception cref="T:System.TimeoutException">기본 시간 제한 (100초) 내에 서버가 응답하지 않습니다.</exception>
        <exception cref="T:System.Security.SecurityException">사용자는 네트워크 작업을 수행하는 데 필요한 권한이 없습니다.</exception>
        <exception cref="T:System.Net.WebException">대상 웹 서버가 요청을 거부합니다.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Net.WebPermission">HTTP 인터넷 리소스에 액세스하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">방법: Visual Basic에서 파일 다운로드</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">방법: Visual Basic에서 파일 경로의 구문 분석</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">파일 이름과 호스트 주소를 포함하여 다운로드할 파일의 경로입니다.</param>
        <param name="destinationFileName">다운로드한 파일의 이름과 경로입니다.</param>
        <param name="userName">인증할 사용자 이름입니다. 기본값은 빈 문자열 ""입니다.</param>
        <param name="password">인증할 암호입니다. 기본값은 빈 문자열 ""입니다.</param>
        <summary>지정한 원격 파일을 다운로드하여 지정한 위치에 저장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 대상 파일이 이미 있는 경우는 `DownloadFile` 메서드는 기존 파일을 덮어쓰지 것입니다. 다른 오버 로드 중 하나를 사용할 수는 <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> 기존 파일 덮어쓰기 또는 특정 시간 제한 값을 지정 하도록 지시 하는 방법입니다.  
  
 `DownloadFile` 응용 프로그램에서 네트워크 추적을 사용 하도록 설정 하면 추적 정보를 출력 합니다. 자세한 내용은 [네트워크 추적 사용](~/docs/framework/network-programming/enabling-network-tracing.md)합니다.  
  
> [!NOTE]
>  `DownloadFile` 메서드는 선택적인 HTTP 헤더를 보내지 않습니다. 선택적 사용자 에이전트 헤더 누락 된 경우 일부 서버 500 (내부 서버 오류)을 반환할 수 있습니다. 사용 하 여 요청을 생성 해야 합니다 선택적 헤더를 보내려면는 <xref:System.Net.WebClient> 클래스입니다.  
  
> [!NOTE]
>  FTP 프로토콜은 일반 텍스트 암호 등의 정보를 보내고 중요 한 정보를 전송 하는 데 사용할 수 없습니다.  
  
 다음 표에서 관련 된 작업의 예로 `My.Computer.Network.DownloadFile` 메서드.  
  
|후|보기|  
|-|-|  
|파일 다운로드|[방법: 파일 다운로드](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 이 예제에서는 파일을 다운로드 `WineList.txt` 에서 `http://www.cohowinery.com/downloads` 저장 `C:\Documents and Settings\All Users\Documents`합니다.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 이 예제에서는 파일을 다운로드 `WineList.txt` 에서 `http://www.cohowinery.com/downloads` 저장 `C:\Documents and Settings\All Users\Documents`, 500 밀리초의 시간 제한 간격을 지정 합니다.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" />이 후행 슬래시로 종료됩니다.</exception>
        <exception cref="T:System.TimeoutException">기본 시간 제한 (100초) 내에 서버가 응답하지 않습니다.</exception>
        <exception cref="T:System.Security.SecurityException">사용자는 네트워크 작업을 수행하는 데 필요한 권한이 없습니다.</exception>
        <exception cref="T:System.Net.WebException">대상 웹 서버가 요청을 거부합니다.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Net.WebPermission">HTTP 인터넷 리소스에 액세스하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">방법: Visual Basic에서 파일 다운로드</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">방법: Visual Basic에서 파일 경로의 구문 분석</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">파일 이름과 호스트 주소를 포함하여 다운로드할 파일의 경로입니다.</param>
        <param name="destinationFileName">다운로드한 파일의 이름과 경로입니다.</param>
        <param name="userName">인증할 사용자 이름입니다. 기본값은 빈 문자열 ""입니다.</param>
        <param name="password">인증할 암호입니다. 기본값은 빈 문자열 ""입니다.</param>
        <summary>지정한 원격 파일을 다운로드하여 지정한 위치에 저장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 대상 파일이 이미 있는 경우는 `DownloadFile` 메서드는 기존 파일을 덮어쓰지 것입니다. 다른 오버 로드 중 하나를 사용할 수는 <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> 기존 파일 덮어쓰기 또는 특정 시간 제한 값을 지정 하도록 지시 하는 방법입니다.  
  
 `DownloadFile` 응용 프로그램에서 네트워크 추적을 사용 하도록 설정 하면 추적 정보를 출력 합니다. 자세한 내용은 [네트워크 추적 사용](~/docs/framework/network-programming/enabling-network-tracing.md)합니다.  
  
> [!NOTE]
>  `DownloadFile` 메서드는 선택적인 HTTP 헤더를 보내지 않습니다. 선택적 사용자 에이전트 헤더 누락 된 경우 일부 서버 500 (내부 서버 오류)을 반환할 수 있습니다. 사용 하 여 요청을 생성 해야 합니다 선택적 헤더를 보내려면는 <xref:System.Net.WebClient> 클래스입니다.  
  
> [!NOTE]
>  FTP 프로토콜은 일반 텍스트 암호 등의 정보를 보내고 중요 한 정보를 전송 하는 데 사용할 수 없습니다.  
  
 다음 표에서 관련 된 작업의 예로 `My.Computer.Network.DownloadFile` 메서드.  
  
|후|보기|  
|-|-|  
|파일 다운로드|[방법: 파일 다운로드](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 이 예제에서는 파일을 다운로드 `WineList.txt` 에서 `http://www.cohowinery.com/downloads` 저장 `C:\Documents and Settings\All Users\Documents`합니다.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 이 예제에서는 파일을 다운로드 `WineList.txt` 에서 `http://www.cohowinery.com/downloads` 저장 `C:\Documents and Settings\All Users\Documents`, 500 밀리초의 시간 제한 간격을 지정 합니다.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" />이 후행 슬래시로 종료됩니다.</exception>
        <exception cref="T:System.TimeoutException">기본 시간 제한 (100초) 내에 서버가 응답하지 않습니다.</exception>
        <exception cref="T:System.Security.SecurityException">사용자는 네트워크 작업을 수행하는 데 필요한 권한이 없습니다.</exception>
        <exception cref="T:System.Net.WebException">대상 웹 서버가 요청을 거부합니다.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Net.WebPermission">HTTP 인터넷 리소스에 액세스하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">방법: Visual Basic에서 파일 다운로드</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">방법: Visual Basic에서 파일 경로의 구문 분석</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address"><see langword="String" /> 또는 <see cref="T:System.Uri" /> 파일 이름과 호스트 주소를 포함하여 다운로드할 파일의 경로입니다.</param>
        <param name="destinationFileName"><see langword="String" />. 다운로드한 파일의 이름과 경로입니다.</param>
        <param name="networkCredentials"><see cref="T:System.Net.ICredentials" />. 제공할 자격 증명입니다.</param>
        <param name="showUI">작업 진행 상태를 표시하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
        <param name="connectionTimeout">제한 시간 간격(밀리초)입니다. 기본값은 100초입니다.</param>
        <param name="overwrite">기존 파일을 덮어쓰려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
        <summary>지정한 원격 파일을 다운로드하여 지정한 위치에 저장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 `showUI` 로 설정 된 `True`, 작업의 진행률을 보여 주는 대화 상자가 나타납니다; 대화 상자에는 **취소** 작업을 취소 하는 단추입니다. 대화 상자 모달 이며 다른 windows 프로그램에 사용자 입력을 차단 하지 않습니다.  
  
 지정 된 서버 응답 하지 않으면 `connectionTimeout`작업이 취소 되 고 예외가 throw 됩니다.  
  
 `DownloadFile` 응용 프로그램에서 네트워크 추적을 사용 하도록 설정 하면 추적 정보를 출력 합니다. 자세한 내용은 [네트워크 추적 사용](~/docs/framework/network-programming/enabling-network-tracing.md)합니다.  
  
> [!NOTE]
>  `DownloadFile` 메서드는 선택적인 HTTP 헤더를 보내지 않습니다. 선택적 사용자 에이전트 헤더 누락 된 경우 일부 서버 500 (내부 서버 오류)을 반환할 수 있습니다. 사용 하 여 요청을 생성 해야 합니다 선택적 헤더를 보내려면는 <xref:System.Net.WebClient> 클래스입니다.  
  
> [!NOTE]
>  FTP 프로토콜은 일반 텍스트 암호 등의 정보를 보내고 중요 한 정보를 전송 하는 데 사용할 수 없습니다.  
  
 다음 표에서 관련 된 작업의 예로 `My.Computer.Network.DownloadFile` 메서드.  
  
|후|보기|  
|-|-|  
|파일 다운로드|[방법: 파일 다운로드](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 이 예제에서는 파일을 다운로드 `WineList.txt` 에서 `http://www.cohowinery.com/downloads` 저장 `C:\Documents and Settings\All Users\Documents`합니다.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 이 예제에서는 파일을 다운로드 `WineList.txt` 에서 `http://www.cohowinery.com/downloads` 저장 `C:\Documents and Settings\All Users\Documents`, 500 밀리초의 시간 제한 간격을 지정 합니다.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" />이 후행 슬래시로 종료됩니다.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" />가 <see langword="False" />로 설정되고 대상 파일이 이미 있는 경우</exception>
        <exception cref="T:System.TimeoutException">지정된 <paramref name="connectionTimeout" /> 내에 서버가 응답하지 않는 경우</exception>
        <exception cref="T:System.Security.SecurityException">사용자는 네트워크 작업을 수행하는 데 필요한 권한이 없습니다.</exception>
        <exception cref="T:System.Net.WebException">대상 웹 서버가 요청을 거부합니다.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">사용자 인터페이스 및 클립보드와 관련 된 사용 권한을 제어 합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">HTTP 인터넷 리소스에 액세스하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">방법: Visual Basic에서 파일 다운로드</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">방법: Visual Basic에서 파일 경로의 구문 분석</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">파일 이름과 호스트 주소를 포함하여 다운로드할 파일의 경로입니다.</param>
        <param name="destinationFileName">다운로드한 파일의 이름과 경로입니다.</param>
        <param name="userName">인증할 사용자 이름입니다. 기본값은 빈 문자열 ""입니다.</param>
        <param name="password">인증할 암호입니다. 기본값은 빈 문자열 ""입니다.</param>
        <param name="showUI">작업 진행 상태를 표시하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
        <param name="connectionTimeout"><see cref="T:System.Int32" />. 제한 시간 간격(밀리초)입니다. 기본값은 100초입니다.</param>
        <param name="overwrite">기존 파일을 덮어쓰려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
        <summary>지정한 원격 파일을 다운로드하여 지정한 위치에 저장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 `showUI` 로 설정 된 `True`, 작업의 진행률을 보여 주는 대화 상자가 나타납니다; 대화 상자에는 **취소** 작업을 취소 하는 단추입니다. 대화 상자 모달 이며 다른 windows 프로그램에 사용자 입력을 차단 하지 않습니다.  
  
 지정 된 서버 응답 하지 않으면 `connectionTimeout`작업이 취소 되 고 예외가 throw 됩니다.  
  
 `DownloadFile` 응용 프로그램에서 네트워크 추적을 사용 하도록 설정 하면 추적 정보를 출력 합니다. 자세한 내용은 [네트워크 추적 사용](~/docs/framework/network-programming/enabling-network-tracing.md)합니다.  
  
> [!NOTE]
>  `DownloadFile` 메서드는 선택적인 HTTP 헤더를 보내지 않습니다. 선택적 사용자 에이전트 헤더 누락 된 경우 일부 서버 500 (내부 서버 오류)을 반환할 수 있습니다. 사용 하 여 요청을 생성 해야 합니다 선택적 헤더를 보내려면는 <xref:System.Net.WebClient> 클래스입니다.  
  
> [!NOTE]
>  FTP 프로토콜은 일반 텍스트 암호 등의 정보를 보내고 중요 한 정보를 전송 하는 데 사용할 수 없습니다.  
  
 다음 표에서 관련 된 작업의 예로 `My.Computer.Network.DownloadFile` 메서드.  
  
|후|보기|  
|-|-|  
|파일 다운로드|[방법: 파일 다운로드](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 이 예제에서는 파일을 다운로드 `WineList.txt` 에서 `http://www.cohowinery.com/downloads` 저장 `C:\Documents and Settings\All Users\Documents`합니다.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 이 예제에서는 파일을 다운로드 `WineList.txt` 에서 `http://www.cohowinery.com/downloads` 저장 `C:\Documents and Settings\All Users\Documents`, 500 밀리초의 시간 제한 간격을 지정 합니다.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" />이 후행 슬래시로 종료됩니다.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" />가 <see langword="False" />로 설정되고 대상 파일이 이미 있는 경우</exception>
        <exception cref="T:System.TimeoutException">지정된 <paramref name="connectionTimeout" /> 내에 서버가 응답하지 않는 경우</exception>
        <exception cref="T:System.Security.SecurityException">사용자는 네트워크 작업을 수행하는 데 필요한 권한이 없습니다.</exception>
        <exception cref="T:System.Net.WebException">대상 웹 서버가 요청을 거부합니다.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">사용자 인터페이스 및 클립보드와 관련 된 사용 권한을 제어 합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">HTTP 인터넷 리소스에 액세스하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">방법: Visual Basic에서 파일 다운로드</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">방법: Visual Basic에서 파일 경로의 구문 분석</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">파일 이름과 호스트 주소를 포함하여 다운로드할 파일의 경로입니다.</param>
        <param name="destinationFileName">다운로드한 파일의 이름과 경로입니다.</param>
        <param name="networkCredentials">제공할 자격 증명입니다.</param>
        <param name="showUI">작업 진행 상태를 표시하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
        <param name="connectionTimeout">제한 시간 간격(밀리초)입니다. 기본값은 100초입니다.</param>
        <param name="overwrite">기존 파일을 덮어쓰려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
        <param name="onUserCancel"><paramref name="showUI" />를 <see langword="True" />로 설정할 때 표시되는 대화 상자에서 **취소** 또는 **아니요**를 클릭하는 경우의 동작을 지정합니다. 기본값은 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />입니다.</param>
        <summary>지정한 원격 파일을 다운로드하여 지정한 위치에 저장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 `showUI` 로 설정 된 `True`, 작업의 진행률을 보여 주는 대화 상자가 나타납니다; 대화 상자에는 **취소** 작업을 취소 하는 단추입니다. 대화 상자 모달 이며 다른 windows 프로그램에 사용자 입력을 차단 하지 않습니다.  
  
 지정 된 서버 응답 하지 않으면 `connectionTimeout`작업이 취소 되 고 예외가 throw 됩니다.  
  
 `DownloadFile` 응용 프로그램에서 네트워크 추적을 사용 하도록 설정 하면 추적 정보를 출력 합니다. 자세한 내용은 [네트워크 추적 사용](~/docs/framework/network-programming/enabling-network-tracing.md)합니다.  
  
> [!NOTE]
>  `DownloadFile` 메서드는 선택적인 HTTP 헤더를 보내지 않습니다. 선택적 사용자 에이전트 헤더 누락 된 경우 일부 서버 500 (내부 서버 오류)을 반환할 수 있습니다. 사용 하 여 요청을 생성 해야 합니다 선택적 헤더를 보내려면는 <xref:System.Net.WebClient> 클래스입니다.  
  
> [!NOTE]
>  FTP 프로토콜은 일반 텍스트 암호 등의 정보를 보내고 중요 한 정보를 전송 하는 데 사용할 수 없습니다.  
  
 다음 표에서 관련 된 작업의 예로 `My.Computer.Network.DownloadFile` 메서드.  
  
|후|보기|  
|-|-|  
|파일 다운로드|[방법: 파일 다운로드](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 이 예제에서는 파일을 다운로드 `WineList.txt` 에서 `http://www.cohowinery.com/downloads` 저장 `C:\Documents and Settings\All Users\Documents`합니다.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 이 예제에서는 파일을 다운로드 `WineList.txt` 에서 `http://www.cohowinery.com/downloads` 저장 `C:\Documents and Settings\All Users\Documents`, 500 밀리초의 시간 제한 간격을 지정 합니다.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" />이 후행 슬래시로 종료됩니다.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" />가 <see langword="False" />로 설정되고 대상 파일이 이미 있는 경우</exception>
        <exception cref="T:System.TimeoutException">지정된 <paramref name="connectionTimeout" /> 내에 서버가 응답하지 않는 경우</exception>
        <exception cref="T:System.Security.SecurityException">사용자는 네트워크 작업을 수행하는 데 필요한 권한이 없습니다.</exception>
        <exception cref="T:System.Net.WebException">대상 웹 서버가 요청을 거부합니다.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">사용자 인터페이스 및 클립보드와 관련 된 사용 권한을 제어 합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">HTTP 인터넷 리소스에 액세스하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">방법: Visual Basic에서 파일 다운로드</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">방법: Visual Basic에서 파일 경로의 구문 분석</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">파일 이름과 호스트 주소를 포함하여 다운로드할 파일의 경로입니다.</param>
        <param name="destinationFileName">다운로드한 파일의 이름과 경로입니다.</param>
        <param name="userName">인증할 사용자 이름입니다. 기본값은 빈 문자열 ""입니다.</param>
        <param name="password">인증할 암호입니다. 기본값은 빈 문자열 ""입니다.</param>
        <param name="showUI">작업 진행 상태를 표시하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
        <param name="connectionTimeout">제한 시간 간격(밀리초)입니다. 기본값은 100초입니다.</param>
        <param name="overwrite">기존 파일을 덮어쓰려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
        <summary>지정한 원격 파일을 다운로드하여 지정한 위치에 저장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 `showUI` 로 설정 된 `True`, 작업의 진행률을 보여 주는 대화 상자가 나타납니다; 대화 상자에는 **취소** 작업을 취소 하는 단추입니다. 대화 상자 모달 이며 다른 windows 프로그램에 사용자 입력을 차단 하지 않습니다.  
  
 지정 된 서버 응답 하지 않으면 `connectionTimeout`작업이 취소 되 고 예외가 throw 됩니다.  
  
 `DownloadFile` 응용 프로그램에서 네트워크 추적을 사용 하도록 설정 하면 추적 정보를 출력 합니다. 자세한 내용은 [네트워크 추적 사용](~/docs/framework/network-programming/enabling-network-tracing.md)합니다.  
  
> [!NOTE]
>  `DownloadFile` 메서드는 선택적인 HTTP 헤더를 보내지 않습니다. 선택적 사용자 에이전트 헤더 누락 된 경우 일부 서버 500 (내부 서버 오류)을 반환할 수 있습니다. 사용 하 여 요청을 생성 해야 합니다 선택적 헤더를 보내려면는 <xref:System.Net.WebClient> 클래스입니다.  
  
> [!NOTE]
>  FTP 프로토콜은 일반 텍스트 암호 등의 정보를 보내고 중요 한 정보를 전송 하는 데 사용할 수 없습니다.  
  
 다음 표에서 관련 된 작업의 예로 `My.Computer.Network.DownloadFile` 메서드.  
  
|후|보기|  
|-|-|  
|파일 다운로드|[방법: 파일 다운로드](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 이 예제에서는 파일을 다운로드 `WineList.txt` 에서 `http://www.cohowinery.com/downloads` 저장 `C:\Documents and Settings\All Users\Documents`합니다.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 이 예제에서는 파일을 다운로드 `WineList.txt` 에서 `http://www.cohowinery.com/downloads` 저장 `C:\Documents and Settings\All Users\Documents`, 500 밀리초의 시간 제한 간격을 지정 합니다.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" />이 후행 슬래시로 종료됩니다.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" />가 <see langword="False" />로 설정되고 대상 파일이 이미 있는 경우</exception>
        <exception cref="T:System.TimeoutException">지정된 <paramref name="connectionTimeout" /> 내에 서버가 응답하지 않는 경우</exception>
        <exception cref="T:System.Security.SecurityException">사용자는 네트워크 작업을 수행하는 데 필요한 권한이 없습니다.</exception>
        <exception cref="T:System.Net.WebException">대상 웹 서버가 요청을 거부합니다.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">사용자 인터페이스 및 클립보드와 관련 된 사용 권한을 제어 합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">HTTP 인터넷 리소스에 액세스하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">방법: Visual Basic에서 파일 다운로드</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">방법: Visual Basic에서 파일 경로의 구문 분석</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">파일 이름과 호스트 주소를 포함하여 다운로드할 파일의 경로입니다.</param>
        <param name="destinationFileName">다운로드한 파일의 이름과 경로입니다.</param>
        <param name="userName">인증할 사용자 이름입니다. 기본값은 빈 문자열 ""입니다.</param>
        <param name="password">인증할 암호입니다. 기본값은 빈 문자열 ""입니다.</param>
        <param name="showUI">작업 진행 상태를 표시하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
        <param name="connectionTimeout">제한 시간 간격(밀리초)입니다. 기본값은 100초입니다.</param>
        <param name="overwrite">기존 파일을 덮어쓰려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
        <param name="onUserCancel"><c>ShowUI</c>를 <see langword="True" />로 설정할 때 표시되는 대화 상자에서 **취소** 또는 **아니요**를 클릭하는 경우의 동작을 지정합니다. 기본값은 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />입니다.</param>
        <summary>지정한 원격 파일을 다운로드하여 지정한 위치에 저장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 `showUI` 로 설정 된 `True`, 작업의 진행률을 보여 주는 대화 상자가 나타납니다; 대화 상자에는 **취소** 작업을 취소 하는 단추입니다. 대화 상자 모달 이며 다른 windows 프로그램에 사용자 입력을 차단 하지 않습니다.  
  
 지정 된 서버 응답 하지 않으면 `connectionTimeout`작업이 취소 되 고 예외가 throw 됩니다.  
  
 `DownloadFile` 응용 프로그램에서 네트워크 추적을 사용 하도록 설정 하면 추적 정보를 출력 합니다. 자세한 내용은 [네트워크 추적 사용](~/docs/framework/network-programming/enabling-network-tracing.md)합니다.  
  
> [!NOTE]
>  `DownloadFile` 메서드는 선택적인 HTTP 헤더를 보내지 않습니다. 선택적 사용자 에이전트 헤더 누락 된 경우 일부 서버 500 (내부 서버 오류)을 반환할 수 있습니다. 사용 하 여 요청을 생성 해야 합니다 선택적 헤더를 보내려면는 <xref:System.Net.WebClient> 클래스입니다.  
  
> [!NOTE]
>  FTP 프로토콜은 일반 텍스트 암호 등의 정보를 보내고 중요 한 정보를 전송 하는 데 사용할 수 없습니다.  
  
 다음 표에서 관련 된 작업의 예로 `My.Computer.Network.DownloadFile` 메서드.  
  
|후|보기|  
|-|-|  
|파일 다운로드|[방법: 파일 다운로드](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 이 예제에서는 파일을 다운로드 `WineList.txt` 에서 `http://www.cohowinery.com/downloads` 저장 `C:\Documents and Settings\All Users\Documents`합니다.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 이 예제에서는 파일을 다운로드 `WineList.txt` 에서 `http://www.cohowinery.com/downloads` 저장 `C:\Documents and Settings\All Users\Documents`, 500 밀리초의 시간 제한 간격을 지정 합니다.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" />이 후행 슬래시로 종료됩니다.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" />가 <see langword="False" />로 설정되고 대상 파일이 이미 있는 경우</exception>
        <exception cref="T:System.TimeoutException">지정된 <paramref name="connectionTimeout" /> 내에 서버가 응답하지 않는 경우</exception>
        <exception cref="T:System.Security.SecurityException">사용자는 네트워크 작업을 수행하는 데 필요한 권한이 없습니다.</exception>
        <exception cref="T:System.Net.WebException">대상 웹 서버가 요청을 거부합니다.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">사용자 인터페이스 및 클립보드와 관련 된 사용 권한을 제어 합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">HTTP 인터넷 리소스에 액세스하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">방법: Visual Basic에서 파일 다운로드</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">방법: Visual Basic에서 파일 경로의 구문 분석</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">파일 이름과 호스트 주소를 포함하여 다운로드할 파일의 경로입니다.</param>
        <param name="destinationFileName">다운로드한 파일의 이름과 경로입니다.</param>
        <param name="userName">인증할 사용자 이름입니다. 기본값은 빈 문자열 ""입니다.</param>
        <param name="password">인증할 암호입니다. 기본값은 빈 문자열 ""입니다.</param>
        <param name="showUI">작업 진행 상태를 표시하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
        <param name="connectionTimeout">제한 시간 간격(밀리초)입니다. 기본값은 100초입니다.</param>
        <param name="overwrite">기존 파일을 덮어쓰려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
        <param name="onUserCancel"><c>ShowUI</c>를 <see langword="True" />로 설정할 때 표시되는 대화 상자에서 **취소** 또는 **아니요**를 클릭하는 경우의 동작을 지정합니다. 기본값은 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />입니다.</param>
        <summary>지정한 원격 파일을 다운로드하여 지정한 위치에 저장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 `showUI` 로 설정 된 `True`, 작업의 진행률을 보여 주는 대화 상자가 나타납니다; 대화 상자에는 **취소** 작업을 취소 하는 단추입니다. 대화 상자 모달 이며 다른 windows 프로그램에 사용자 입력을 차단 하지 않습니다.  
  
 지정 된 서버 응답 하지 않으면 `connectionTimeout`작업이 취소 되 고 예외가 throw 됩니다.  
  
 `DownloadFile` 응용 프로그램에서 네트워크 추적을 사용 하도록 설정 하면 추적 정보를 출력 합니다. 자세한 내용은 [네트워크 추적 사용](~/docs/framework/network-programming/enabling-network-tracing.md)합니다.  
  
> [!NOTE]
>  `DownloadFile` 메서드는 선택적인 HTTP 헤더를 보내지 않습니다. 선택적 사용자 에이전트 헤더 누락 된 경우 일부 서버 500 (내부 서버 오류)을 반환할 수 있습니다. 사용 하 여 요청을 생성 해야 합니다 선택적 헤더를 보내려면는 <xref:System.Net.WebClient> 클래스입니다.  
  
> [!NOTE]
>  FTP 프로토콜은 일반 텍스트 암호 등의 정보를 보내고 중요 한 정보를 전송 하는 데 사용할 수 없습니다.  
  
 다음 표에서 관련 된 작업의 예로 `My.Computer.Network.DownloadFile` 메서드.  
  
|후|보기|  
|-|-|  
|파일 다운로드|[방법: 파일 다운로드](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 이 예제에서는 파일을 다운로드 `WineList.txt` 에서 `http://www.cohowinery.com/downloads` 저장 `C:\Documents and Settings\All Users\Documents`합니다.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 이 예제에서는 파일을 다운로드 `WineList.txt` 에서 `http://www.cohowinery.com/downloads` 저장 `C:\Documents and Settings\All Users\Documents`, 500 밀리초의 시간 제한 간격을 지정 합니다.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" />이 후행 슬래시로 종료됩니다.</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" />가 <see langword="False" />로 설정되고 대상 파일이 이미 있는 경우</exception>
        <exception cref="T:System.TimeoutException">지정된 <paramref name="connectionTimeout" /> 내에 서버가 응답하지 않는 경우</exception>
        <exception cref="T:System.Security.SecurityException">사용자는 네트워크 작업을 수행하는 데 필요한 권한이 없습니다.</exception>
        <exception cref="T:System.Net.WebException">대상 웹 서버가 요청을 거부합니다.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">사용자 인터페이스 및 클립보드와 관련 된 사용 권한을 제어 합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">HTTP 인터넷 리소스에 액세스하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">방법: Visual Basic에서 파일 다운로드</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">방법: Visual Basic에서 파일 경로의 구문 분석</related>
      </Docs>
    </Member>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAvailable : bool" Usage="Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컴퓨터가 네트워크에 연결되었는지 여부를 나타냅니다.</summary>
        <value>컴퓨터가 네트워크에 연결되어 있으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `IsAvailable` 항상 반환 `False` 에서 호출 하는 경우는 `Click Once` 응용 프로그램 또는 사용자에 없는 경우 <xref:System.Net.NetworkInformation.NetworkInformationPermission>합니다.  
  
 다음 표에서 관련 된 작업의 예제는 `My.Computer.Network.IsAvailable` 속성입니다.  
  
|대상|보기|  
|-|-|  
|컴퓨터 네트워크에 연결 되어 있는지 확인|[방법: 연결 상태 확인](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
  
   
  
## Examples  
 속성의 상태를 확인 하 고 보고 하는이 예제입니다.  
  
 [!code-vb[VbVbalrMyNetwork#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Net.WebPermission">HTTP 인터넷 리소스에 액세스하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="NetworkAvailabilityChanged">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NetworkAvailabilityChanged As NetworkAvailableEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Devices::NetworkAvailableEventHandler ^ NetworkAvailabilityChanged;" />
      <MemberSignature Language="F#" Value="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " Usage="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>네트워크 가용성이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 애플리케이션을 `NetworkAvailabilityChanged` 네트워크의 가용성이 변경 될 때마다 이벤트입니다. 사용할 수는 <xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A> 의 속성을 `e` 네트워크 연결의 새 상태를 가져오려면 매개 변수입니다. 네트워크 연결의 현재 상태를 가져오려면는 <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> 속성입니다.  
  
 Windows Forms 애플리케이션을이 이벤트는 다른 사용자 인터페이스 이벤트를 사용 하 여 애플리케이션의 주 스레드에서 발생 합니다. 따라서 이벤트 처리기를 애플리케이션의 사용자 인터페이스에 직접 액세스할 수 있습니다. 그러나 애플리케이션을이 이벤트가 발생 하면 다른 사용자 인터페이스 이벤트를 처리 하는 경우이 이벤트를 처리할 수 다른 이벤트 처리기를 완료 하거나 호출 된 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> 메서드.  
  
 사용할 수 없습니다를 `Handles` 문을 처리 하는 `NetworkAvailabilityChanged` 이벤트를 사용 해야 합니다는 `AddHandler` 문.  
  
 Windows Forms 애플리케이션에는 `MyApplication` 노출 개체를 `NetworkAvailabilityChanged` 수 있지만이 이벤트와 동일한 기능을 제공 하는 이벤트를 사용 하 여 처리할 수를 `Handles` 문.  
  
> [!NOTE]
>  대부분의 네트워크 허브 허브 대규모 네트워크에서 연결이 끊긴 경우에 네트워크 연결을 제공 합니다. 따라서 유선된 연결에 대해이 이벤트는 컴퓨터와 허브 간의 연결이 변경을 나타냅니다.  
  
> [!NOTE]
>  `NetworkAvailabilityChanged` Windows 95 및 Windows 98에서 실행 되는 응용 프로그램에서 또는 비-관리자가 Windows 2000에서 실행 되는 응용 프로그램에서 이벤트가 발생 하지 않습니다. 애플리케이션은 해당 플랫폼에서 실행할 수 있습니다를 사용 하 여는 <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> 속성입니다.  
  
   
  
## Examples  
 이 예제에서는 `My.Computer.Network.NetworkAvailabilityChanged` 양식이 나 컨트롤의 사용자 인터페이스를 업데이트 하는 이벤트입니다.  
  
 이 코드는 폼 또는 컨트롤을 한 <xref:System.Windows.Forms.Label> 라는 `Label1`합니다.  
  
 [!code-vb[VbVbalrMyApplication#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Network" />
        <altmember cref="N:Microsoft.VisualBasic.Devices" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Ping">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정한 서버에 ping합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="member this.Ping : string -&gt; bool" Usage="network.Ping hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">ping을 실행할 서버의 URL, 컴퓨터 이름 또는 IP 번호입니다.</param>
        <summary>지정한 서버에 ping합니다.</summary>
        <returns>작업이 성공적으로 수행되었으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping` 메서드는 원격 컴퓨터의 가용성을 결정 하는 것에 대 한 유사 시 대기 메서드가 아닙니다: 대상 컴퓨터의 ping 포트 해제할 수 있습니다 또는 ping 요청을 방화벽 또는 라우터에 의해 차단 될 수 있습니다.  
  
 에 전달 된 주소는 `Ping` 메서드 DNS를 확인할 수 있어야 하 고 앞에 "http://"가 올 수 없습니다.  
  
   
  
## Examples  
 이 예제에서는 서버를 확인 하 여 ping을 실행할 수 있는지 여부를 보고 하는지 여부를 `Ping` 메서드가 반환 되는 `True`합니다.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 대체 `"198.01.01.01"` ping 서버의 IP 주소, URL 또는 컴퓨터 이름입니다.  
  
 이 예제에서는 서버를 확인 하 여 ping을 실행할 수 있는지 여부를 보고 있는지 여부를 `Ping` 반환 하는 메서드 `True` 1000 밀리초의 시간 제한 간격을 지정 하 고 합니다.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 대체 `"www.cohowinery.com"` ping 서버의 IP 주소, URL 또는 컴퓨터 이름입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">사용할 수 있는 네트워크 연결이 없습니다.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL이 잘못되었습니다.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">코드에 적용되는 보안 사용 권한 집합을 설명합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></permission>
        <permission cref="T:System.Net.WebPermission">HTTP 인터넷 리소스에 액세스하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Net.SocketPermission">전송 주소에 대해 연결을 만들거나 허용하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Windows NT 성능 카운터 구성 요소에 대 한 액세스 제어 합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">로컬 컴퓨터의 네트워크 정보 및 트래픽 통계에 대한 액세스를 제어합니다. 연관된 열거형: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri -&gt; bool" Usage="network.Ping address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">ping을 실행할 서버의 URI입니다.</param>
        <summary>지정한 서버에 ping합니다.</summary>
        <returns>작업이 성공적으로 수행되었으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping` 메서드는 원격 컴퓨터의 가용성을 결정 하는 것에 대 한 유사 시 대기 메서드가 아닙니다: 대상 컴퓨터의 ping 포트 해제할 수 있습니다 또는 ping 요청을 방화벽 또는 라우터에 의해 차단 될 수 있습니다.  
  
 에 전달 된 주소는 `Ping` 메서드 DNS를 확인할 수 있어야 하 고 앞에 "http://"가 올 수 없습니다.  
  
   
  
## Examples  
 이 예제에서는 서버를 확인 하 여 ping을 실행할 수 있는지 여부를 보고 하는지 여부를 `Ping` 메서드가 반환 되는 `True`합니다.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 대체 `"198.01.01.01"` ping 서버의 IP 주소, URL 또는 컴퓨터 이름입니다.  
  
 이 예제에서는 서버를 확인 하 여 ping을 실행할 수 있는지 여부를 보고 있는지 여부를 `Ping` 반환 하는 메서드 `True` 1000 밀리초의 시간 제한 간격을 지정 하 고 합니다.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 대체 `"www.cohowinery.com"` ping 서버의 IP 주소, URL 또는 컴퓨터 이름입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">사용할 수 있는 네트워크 연결이 없습니다.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL이 잘못되었습니다.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">코드에 적용되는 보안 사용 권한 집합을 설명합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></permission>
        <permission cref="T:System.Net.WebPermission">HTTP 인터넷 리소스에 액세스하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Net.SocketPermission">전송 주소에 대해 연결을 만들거나 허용하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Windows NT 성능 카운터 구성 요소에 대 한 액세스 제어 합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">로컬 컴퓨터의 네트워크 정보 및 트래픽 통계에 대한 액세스를 제어합니다. 연관된 열거형: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : string * int -&gt; bool" Usage="network.Ping (hostNameOrAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">ping을 실행할 서버의 URL, 컴퓨터 이름 또는 IP 번호입니다.</param>
        <param name="timeout">대상에 접속하는 시간 임계값(밀리초)입니다. 기본값은 500입니다.</param>
        <summary>지정한 서버에 ping합니다.</summary>
        <returns>작업이 성공적으로 수행되었으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping` 메서드는 원격 컴퓨터의 가용성을 결정 하는 것에 대 한 유사 시 대기 메서드가 아닙니다: 대상 컴퓨터의 ping 포트 해제할 수 있습니다 또는 ping 요청을 방화벽 또는 라우터에 의해 차단 될 수 있습니다.  
  
 에 전달 된 주소는 `Ping` 메서드 DNS를 확인할 수 있어야 하 고 앞에 "http://"가 올 수 없습니다.  
  
   
  
## Examples  
 이 예제에서는 서버를 확인 하 여 ping을 실행할 수 있는지 여부를 보고 하는지 여부를 `Ping` 메서드가 반환 되는 `True`합니다.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 대체 `"198.01.01.01"` ping 서버의 IP 주소, URL 또는 컴퓨터 이름입니다.  
  
 이 예제에서는 서버를 확인 하 여 ping을 실행할 수 있는지 여부를 보고 있는지 여부를 `Ping` 반환 하는 메서드 `True` 1000 밀리초의 시간 제한 간격을 지정 하 고 합니다.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 대체 `"www.cohowinery.com"` ping 서버의 IP 주소, URL 또는 컴퓨터 이름입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">사용할 수 있는 네트워크 연결이 없습니다.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL이 잘못되었습니다.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">코드에 적용되는 보안 사용 권한 집합을 설명합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></permission>
        <permission cref="T:System.Net.WebPermission">HTTP 인터넷 리소스에 액세스하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Net.SocketPermission">전송 주소에 대해 연결을 만들거나 허용하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Windows NT 성능 카운터 구성 요소에 대 한 액세스 제어 합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">로컬 컴퓨터의 네트워크 정보 및 트래픽 통계에 대한 액세스를 제어합니다. 연관된 열거형: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri * int -&gt; bool" Usage="network.Ping (address, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">ping을 실행할 서버의 URI입니다.</param>
        <param name="timeout">대상에 접속하는 시간 임계값(밀리초)입니다. 기본값은 500입니다.</param>
        <summary>지정한 서버에 ping합니다.</summary>
        <returns>작업이 성공적으로 수행되었으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping` 메서드는 원격 컴퓨터의 가용성을 결정 하는 것에 대 한 유사 시 대기 메서드가 아닙니다: 대상 컴퓨터의 ping 포트 해제할 수 있습니다 또는 ping 요청을 방화벽 또는 라우터에 의해 차단 될 수 있습니다.  
  
 에 전달 된 주소는 `Ping` 메서드 DNS를 확인할 수 있어야 하 고 앞에 "http://"가 올 수 없습니다.  
  
   
  
## Examples  
 이 예제에서는 서버를 확인 하 여 ping을 실행할 수 있는지 여부를 보고 하는지 여부를 `Ping` 메서드가 반환 되는 `True`합니다.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 대체 `"198.01.01.01"` ping 서버의 IP 주소, URL 또는 컴퓨터 이름입니다.  
  
 이 예제에서는 서버를 확인 하 여 ping을 실행할 수 있는지 여부를 보고 있는지 여부를 `Ping` 반환 하는 메서드 `True` 1000 밀리초의 시간 제한 간격을 지정 하 고 합니다.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 대체 `"www.cohowinery.com"` ping 서버의 IP 주소, URL 또는 컴퓨터 이름입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">사용할 수 있는 네트워크 연결이 없습니다.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL이 잘못되었습니다.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">코드에 적용되는 보안 사용 권한 집합을 설명합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></permission>
        <permission cref="T:System.Net.WebPermission">HTTP 인터넷 리소스에 액세스하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Net.SocketPermission">전송 주소에 대해 연결을 만들거나 허용하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Windows NT 성능 카운터 구성 요소에 대 한 액세스 제어 합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">로컬 컴퓨터의 네트워크 정보 및 트래픽 통계에 대한 액세스를 제어합니다. 연관된 열거형: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /></permission>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정한 파일을 지정한 호스트 주소로 보냅니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">업로드할 파일의 경로와 이름입니다.</param>
        <param name="address">대상 서버의 URL, IP 주소 또는 URI입니다.</param>
        <summary>지정한 파일을 지정한 호스트 주소로 보냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다른 오버 로드 중 하나를 사용할 수는 <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> 메서드를 사용자 자격 증명을 제공 하거나 특정 시간 제한 값을 지정 합니다.  
  
 `My.Computer.Network.UploadFile` 응용 프로그램에서 네트워크 추적을 사용 하도록 설정 하면 추적 정보를 출력 합니다. 자세한 내용은 [네트워크 추적 사용](~/docs/framework/network-programming/enabling-network-tracing.md)합니다.  
  
 다음 표에서 관련 된 작업의 예로 `My.Computer.Network.UploadFile` 메서드.  
  
|후|보기|  
|-|-|  
|파일 업로드|[방법: 파일 업로드](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 이 예제에서는 파일 업로드 `Order.txt` 에 `http://www.cohowinery.com/uploads`입니다.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 이 예제에서는 사용자 이름 또는 암호를 제공하지 않고 `Order.txt` 파일을 `http://www.cohowinery.com/uploads`에 업로드하며, 업로드 진행률을 표시하고, 시간 제한 간격으로 500밀리초가 지정됩니다.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">소스 파일 경로가 잘못되었습니다.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" />에는 파일 이름이 포함되어 있지 않습니다.</exception>
        <exception cref="T:System.Security.SecurityException">사용자는 네트워크 작업을 수행하는 데 필요한 권한이 없습니다.</exception>
        <exception cref="T:System.TimeoutException">기본 시간 제한 (100초) 내에 서버가 응답하지 않습니다.</exception>
        <exception cref="T:System.Net.WebException">대상 웹 서버가 요청을 거부합니다.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Net.WebPermission">HTTP 인터넷 리소스에 액세스하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">방법: Visual Basic에서 파일 다운로드</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">방법: Visual Basic에서 파일 경로의 구문 분석</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">업로드할 파일의 경로와 이름입니다.</param>
        <param name="address">대상 서버의 URL, IP 주소 또는 URI입니다.</param>
        <summary>지정한 파일을 지정한 호스트 주소로 보냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다른 오버 로드 중 하나를 사용할 수는 <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> 메서드를 사용자 자격 증명을 제공 하거나 특정 시간 제한 값을 지정 합니다.  
  
 `My.Computer.Network.UploadFile` 응용 프로그램에서 네트워크 추적을 사용 하도록 설정 하면 추적 정보를 출력 합니다. 자세한 내용은 [네트워크 추적 사용](~/docs/framework/network-programming/enabling-network-tracing.md)합니다.  
  
 다음 표에서 관련 된 작업의 예로 `My.Computer.Network.UploadFile` 메서드.  
  
|후|보기|  
|-|-|  
|파일 업로드|[방법: 파일 업로드](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 이 예제에서는 파일 업로드 `Order.txt` 에 `http://www.cohowinery.com/uploads`입니다.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 이 예제에서는 사용자 이름 또는 암호를 제공하지 않고 `Order.txt` 파일을 `http://www.cohowinery.com/uploads`에 업로드하며, 업로드 진행률을 표시하고, 시간 제한 간격으로 500밀리초가 지정됩니다.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">소스 파일 경로가 잘못되었습니다.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" />에는 파일 이름이 포함되어 있지 않습니다.</exception>
        <exception cref="T:System.Security.SecurityException">사용자는 네트워크 작업을 수행하는 데 필요한 권한이 없습니다.</exception>
        <exception cref="T:System.TimeoutException">기본 시간 제한 (100초) 내에 서버가 응답하지 않습니다.</exception>
        <exception cref="T:System.Net.WebException">대상 웹 서버가 요청을 거부합니다.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Net.WebPermission">HTTP 인터넷 리소스에 액세스하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">방법: Visual Basic에서 파일 다운로드</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">방법: Visual Basic에서 파일 경로의 구문 분석</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">업로드할 파일의 경로와 이름입니다.</param>
        <param name="address">대상 서버의 URL, IP 주소 또는 URI입니다.</param>
        <param name="userName">인증할 사용자 이름입니다. 기본값은 빈 문자열(<c>“”</c>)입니다.</param>
        <param name="password">인증할 암호입니다. 기본값은 빈 문자열(<c>“”</c>)입니다.</param>
        <summary>지정한 파일을 지정한 호스트 주소로 보냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다른 오버 로드 중 하나를 사용할 수는 <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> 특정 시간 제한 값을 지정 하는 방법입니다.  
  
 `My.Computer.Network.UploadFile` 응용 프로그램에서 네트워크 추적을 사용 하도록 설정 하면 추적 정보를 출력 합니다. 자세한 내용은 [네트워크 추적 사용](~/docs/framework/network-programming/enabling-network-tracing.md)합니다.  
  
> [!NOTE]
>  FTP 프로토콜은 일반 텍스트 암호 등의 정보를 보내고 중요 한 정보를 전송 하는 데 사용할 수 없습니다.  
  
 다음 표에서 관련 된 작업의 예로 `My.Computer.Network.UploadFile` 메서드.  
  
|후|보기|  
|-|-|  
|파일 업로드|[방법: 파일 업로드](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 이 예제에서는 파일 업로드 `Order.txt` 에 `http://www.cohowinery.com/uploads`입니다.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 이 예제에서는 사용자 이름 또는 암호를 제공하지 않고 `Order.txt` 파일을 `http://www.cohowinery.com/uploads`에 업로드하며, 업로드 진행률을 표시하고, 시간 제한 간격으로 500밀리초가 지정됩니다.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" />가 0보다 작거나 같은 경우</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" />에는 파일 이름이 포함되어 있지 않습니다.</exception>
        <exception cref="T:System.Security.SecurityException">사용자는 네트워크 작업을 수행하는 데 필요한 권한이 없습니다.</exception>
        <exception cref="T:System.TimeoutException">기본 시간 제한 (100초) 내에 서버가 응답하지 않습니다.</exception>
        <exception cref="T:System.Net.WebException">대상 웹 서버가 요청을 거부합니다.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Net.WebPermission">HTTP 인터넷 리소스에 액세스하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">방법: Visual Basic에서 파일 다운로드</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">방법: Visual Basic에서 파일 경로의 구문 분석</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">업로드할 파일의 경로와 이름입니다.</param>
        <param name="address">대상 서버의 URL, IP 주소 또는 URI입니다.</param>
        <param name="userName">인증할 사용자 이름입니다. 기본값은 빈 문자열(<c>“”</c>)입니다.</param>
        <param name="password">인증할 암호입니다. 기본값은 빈 문자열(<c>“”</c>)입니다.</param>
        <summary>지정한 파일을 지정한 호스트 주소로 보냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다른 오버 로드 중 하나를 사용할 수는 <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> 특정 시간 제한 값을 지정 하는 방법입니다.  
  
 `My.Computer.Network.UploadFile` 응용 프로그램에서 네트워크 추적을 사용 하도록 설정 하면 추적 정보를 출력 합니다. 자세한 내용은 [네트워크 추적 사용](~/docs/framework/network-programming/enabling-network-tracing.md)합니다.  
  
> [!NOTE]
>  FTP 프로토콜은 일반 텍스트 암호 등의 정보를 보내고 중요 한 정보를 전송 하는 데 사용할 수 없습니다.  
  
 다음 표에서 관련 된 작업의 예로 `My.Computer.Network.UploadFile` 메서드.  
  
|후|보기|  
|-|-|  
|파일 업로드|[방법: 파일 업로드](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 이 예제에서는 파일 업로드 `Order.txt` 에 `http://www.cohowinery.com/uploads`입니다.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 이 예제에서는 사용자 이름 또는 암호를 제공하지 않고 `Order.txt` 파일을 `http://www.cohowinery.com/uploads`에 업로드하며, 업로드 진행률을 표시하고, 시간 제한 간격으로 500밀리초가 지정됩니다.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" />가 0보다 작거나 같은 경우</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" />에는 파일 이름이 포함되어 있지 않습니다.</exception>
        <exception cref="T:System.Security.SecurityException">사용자는 네트워크 작업을 수행하는 데 필요한 권한이 없습니다.</exception>
        <exception cref="T:System.TimeoutException">기본 시간 제한 (100초) 내에 서버가 응답하지 않습니다.</exception>
        <exception cref="T:System.Net.WebException">대상 웹 서버가 요청을 거부합니다.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Net.WebPermission">HTTP 인터넷 리소스에 액세스하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">방법: Visual Basic에서 파일 다운로드</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">방법: Visual Basic에서 파일 경로의 구문 분석</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">업로드할 파일의 경로와 이름입니다.</param>
        <param name="address">대상 서버의 URL, IP 주소 또는 URI입니다.</param>
        <param name="networkCredentials">인증에 사용할 자격 증명입니다.</param>
        <param name="showUI">작업 진행 상태를 표시하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
        <param name="connectionTimeout">제한 시간 간격(밀리초)입니다. 기본값은 100초입니다.</param>
        <summary>지정한 파일을 지정한 호스트 주소로 보냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 `showUI` 로 설정 되어 `True`, 대화 상자를 작업의 진행률을 표시 하 고 포함을 **취소** 사용자가 클릭 하 여 작업을 취소할 수 있는 단추입니다. 대화 상자를 모달 같지 않으므로 다른 windows 프로그램에 사용자 입력을 차단 하지 않습니다.  
  
 서버에 지정 된 간격 안에 응답 하지 않으면 `connectionTimeout`, 작업이 취소 되 고 예외가 throw 됩니다.  
  
 `My.Computer.Network.UploadFile` 응용 프로그램에서 네트워크 추적을 사용 하도록 설정 하면 추적 정보를 출력 합니다. 자세한 내용은 [네트워크 추적 사용](~/docs/framework/network-programming/enabling-network-tracing.md)합니다.  
  
> [!NOTE]
>  FTP 프로토콜은 일반 텍스트 암호 등의 정보를 보내고 중요 한 정보를 전송 하는 데 사용할 수 없습니다.  
  
 다음 표에서 관련 된 작업의 예로 `My.Computer.Network.UploadFile` 메서드.  
  
|후|보기|  
|-|-|  
|파일 업로드|[방법: 파일 업로드](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 이 예제에서는 파일 업로드 `Order.txt` 에 `http://www.cohowinery.com/uploads`입니다.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 이 예제에서는 사용자 이름 또는 암호를 제공하지 않고 `Order.txt` 파일을 `http://www.cohowinery.com/uploads`에 업로드하며, 업로드 진행률을 표시하고, 시간 제한 간격으로 500밀리초가 지정됩니다.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" />가 0보다 작거나 같은 경우</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" />에는 파일 이름이 포함되어 있지 않습니다.</exception>
        <exception cref="T:System.Security.SecurityException">사용자는 네트워크 작업을 수행하는 데 필요한 권한이 없습니다.</exception>
        <exception cref="T:System.TimeoutException">지정된 <paramref name="connectionTimeout" /> 내에 서버가 응답하지 않는 경우</exception>
        <exception cref="T:System.Net.WebException">대상 웹 서버가 요청을 거부합니다.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">사용자 인터페이스 및 클립보드와 관련 된 사용 권한을 제어 합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">HTTP 인터넷 리소스에 액세스하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">방법: Visual Basic에서 파일 다운로드</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">방법: Visual Basic에서 파일 경로의 구문 분석</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">업로드할 파일의 경로와 이름입니다.</param>
        <param name="address">대상 서버의 URL, IP 주소 또는 URI입니다.</param>
        <param name="userName">인증할 사용자 이름입니다. 기본값은 빈 문자열(<c>“”</c>)입니다.</param>
        <param name="password">인증할 암호입니다. 기본값은 빈 문자열(<c>“”</c>)입니다.</param>
        <param name="showUI">작업 진행 상태를 표시하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
        <param name="connectionTimeout">제한 시간 간격(밀리초)입니다. 기본값은 100초입니다.</param>
        <summary>지정한 파일을 지정한 호스트 주소로 보냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 `showUI` 로 설정 되어 `True`, 대화 상자를 작업의 진행률을 표시 하 고 포함을 **취소** 사용자가 클릭 하 여 작업을 취소할 수 있는 단추입니다. 대화 상자를 모달 같지 않으므로 다른 windows 프로그램에 사용자 입력을 차단 하지 않습니다.  
  
 서버에 지정 된 간격 안에 응답 하지 않으면 `connectionTimeout`, 작업이 취소 되 고 예외가 throw 됩니다.  
  
 `My.Computer.Network.UploadFile` 응용 프로그램에서 네트워크 추적을 사용 하도록 설정 하면 추적 정보를 출력 합니다. 자세한 내용은 [네트워크 추적 사용](~/docs/framework/network-programming/enabling-network-tracing.md)합니다.  
  
> [!NOTE]
>  FTP 프로토콜은 일반 텍스트 암호 등의 정보를 보내고 중요 한 정보를 전송 하는 데 사용할 수 없습니다.  
  
 다음 표에서 관련 된 작업의 예로 `My.Computer.Network.UploadFile` 메서드.  
  
|후|보기|  
|-|-|  
|파일 업로드|[방법: 파일 업로드](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 이 예제에서는 파일 업로드 `Order.txt` 에 `http://www.cohowinery.com/uploads`입니다.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 이 예제에서는 사용자 이름 또는 암호를 제공하지 않고 `Order.txt` 파일을 `http://www.cohowinery.com/uploads`에 업로드하며, 업로드 진행률을 표시하고, 시간 제한 간격으로 500밀리초가 지정됩니다.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" />가 0보다 작거나 같은 경우</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" />에는 파일 이름이 포함되어 있지 않습니다.</exception>
        <exception cref="T:System.Security.SecurityException">사용자는 네트워크 작업을 수행하는 데 필요한 권한이 없습니다.</exception>
        <exception cref="T:System.TimeoutException">지정된 <paramref name="connectionTimeout" /> 내에 서버가 응답하지 않는 경우</exception>
        <exception cref="T:System.Net.WebException">대상 웹 서버가 요청을 거부합니다.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">사용자 인터페이스 및 클립보드와 관련 된 사용 권한을 제어 합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">HTTP 인터넷 리소스에 액세스하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">방법: Visual Basic에서 파일 다운로드</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">방법: Visual Basic에서 파일 경로의 구문 분석</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">업로드할 파일의 경로와 이름입니다.</param>
        <param name="address">대상 서버의 URL, IP 주소 또는 URI입니다.</param>
        <param name="networkCredentials">인증에 사용할 자격 증명입니다.</param>
        <param name="showUI">작업 진행 상태를 표시하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
        <param name="connectionTimeout">제한 시간 간격(밀리초)입니다. 기본값은 100초입니다.</param>
        <param name="onUserCancel">사용자가 **취소**를 클릭하는 경우 수행할 작업입니다. 기본값은 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />입니다.</param>
        <summary>지정한 파일을 지정한 호스트 주소로 보냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 `showUI` 로 설정 되어 `True`, 대화 상자를 작업의 진행률을 표시 하 고 포함을 **취소** 사용자가 클릭 하 여 작업을 취소할 수 있는 단추입니다. 대화 상자를 모달 같지 않으므로 다른 windows 프로그램에 사용자 입력을 차단 하지 않습니다.  
  
 서버에 지정 된 간격 안에 응답 하지 않으면 `connectionTimeout`, 작업이 취소 되 고 예외가 throw 됩니다.  
  
 `My.Computer.Network.UploadFile` 응용 프로그램에서 네트워크 추적을 사용 하도록 설정 하면 추적 정보를 출력 합니다. 자세한 내용은 [네트워크 추적 사용](~/docs/framework/network-programming/enabling-network-tracing.md)합니다.  
  
> [!NOTE]
>  FTP 프로토콜은 일반 텍스트 암호 등의 정보를 보내고 중요 한 정보를 전송 하는 데 사용할 수 없습니다.  
  
 다음 표에서 관련 된 작업의 예로 `My.Computer.Network.UploadFile` 메서드.  
  
|후|보기|  
|-|-|  
|파일 업로드|[방법: 파일 업로드](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 이 예제에서는 파일 업로드 `Order.txt` 에 `http://www.cohowinery.com/uploads`입니다.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 이 예제에서는 사용자 이름 또는 암호를 제공하지 않고 `Order.txt` 파일을 `http://www.cohowinery.com/uploads`에 업로드하며, 업로드 진행률을 표시하고, 시간 제한 간격으로 500밀리초가 지정됩니다.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" />가 0보다 작거나 같은 경우</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" />에는 파일 이름이 포함되어 있지 않습니다.</exception>
        <exception cref="T:System.Security.SecurityException">사용자는 네트워크 작업을 수행하는 데 필요한 권한이 없습니다.</exception>
        <exception cref="T:System.TimeoutException">지정된 <paramref name="connectionTimeout" /> 내에 서버가 응답하지 않는 경우</exception>
        <exception cref="T:System.Net.WebException">대상 웹 서버가 요청을 거부합니다.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">사용자 인터페이스 및 클립보드와 관련 된 사용 권한을 제어 합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">HTTP 인터넷 리소스에 액세스하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">방법: Visual Basic에서 파일 다운로드</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">방법: Visual Basic에서 파일 경로의 구문 분석</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">업로드할 파일의 경로와 이름입니다.</param>
        <param name="address">대상 서버의 URL, IP 주소 또는 URI입니다.</param>
        <param name="userName">인증할 사용자 이름입니다. 기본값은 빈 문자열(<c>“”</c>)입니다.</param>
        <param name="password">인증할 암호입니다. 기본값은 빈 문자열(<c>“”</c>)입니다.</param>
        <param name="showUI">작업 진행 상태를 표시하려면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
        <param name="connectionTimeout">제한 시간 간격(밀리초)입니다. 기본값은 100초입니다.</param>
        <summary>지정한 파일을 지정한 호스트 주소로 보냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 `showUI` 로 설정 되어 `True`, 대화 상자를 작업의 진행률을 표시 하 고 포함을 **취소** 사용자가 클릭 하 여 작업을 취소할 수 있는 단추입니다. 대화 상자를 모달 같지 않으므로 다른 windows 프로그램에 사용자 입력을 차단 하지 않습니다.  
  
 서버에 지정 된 간격 안에 응답 하지 않으면 `connectionTimeout`, 작업이 취소 되 고 예외가 throw 됩니다.  
  
 `My.Computer.Network.UploadFile` 응용 프로그램에서 네트워크 추적을 사용 하도록 설정 하면 추적 정보를 출력 합니다. 자세한 내용은 [네트워크 추적 사용](~/docs/framework/network-programming/enabling-network-tracing.md)합니다.  
  
> [!NOTE]
>  FTP 프로토콜은 일반 텍스트 암호 등의 정보를 보내고 중요 한 정보를 전송 하는 데 사용할 수 없습니다.  
  
 다음 표에서 관련 된 작업의 예로 `My.Computer.Network.UploadFile` 메서드.  
  
|후|보기|  
|-|-|  
|파일 업로드|[방법: 파일 업로드](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 이 예제에서는 파일 업로드 `Order.txt` 에 `http://www.cohowinery.com/uploads`입니다.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 이 예제에서는 사용자 이름 또는 암호를 제공하지 않고 `Order.txt` 파일을 `http://www.cohowinery.com/uploads`에 업로드하며, 업로드 진행률을 표시하고, 시간 제한 간격으로 500밀리초가 지정됩니다.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" />가 0보다 작거나 같은 경우</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" />에는 파일 이름이 포함되어 있지 않습니다.</exception>
        <exception cref="T:System.Security.SecurityException">사용자는 네트워크 작업을 수행하는 데 필요한 권한이 없습니다.</exception>
        <exception cref="T:System.TimeoutException">지정된 <paramref name="connectionTimeout" /> 내에 서버가 응답하지 않는 경우</exception>
        <exception cref="T:System.Net.WebException">대상 웹 서버가 요청을 거부합니다.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">사용자 인터페이스 및 클립보드와 관련 된 사용 권한을 제어 합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">HTTP 인터넷 리소스에 액세스하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">방법: Visual Basic에서 파일 다운로드</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">방법: Visual Basic에서 파일 경로의 구문 분석</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">업로드할 파일의 경로와 이름입니다.</param>
        <param name="address">대상 서버의 URL, IP 주소 또는 URI입니다.</param>
        <param name="userName">인증할 사용자 이름입니다. 기본값은 빈 문자열(<c>“”</c>)입니다.</param>
        <param name="password">인증할 암호입니다. 기본값은 빈 문자열(<c>“”</c>)입니다.</param>
        <param name="showUI">작업 진행 상태를 표시할지 여부입니다. 기본값은 <see langword="False" />입니다.</param>
        <param name="connectionTimeout">제한 시간 간격(밀리초)입니다. 기본값은 100초입니다.</param>
        <param name="onUserCancel">사용자가 **취소**를 클릭하는 경우 수행할 작업입니다. 기본값은 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />입니다.</param>
        <summary>지정한 파일을 지정한 호스트 주소로 보냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 `showUI` 로 설정 되어 `True`, 대화 상자를 작업의 진행률을 표시 하 고 포함을 **취소** 사용자가 클릭 하 여 작업을 취소할 수 있는 단추입니다. 대화 상자를 모달 같지 않으므로 다른 windows 프로그램에 사용자 입력을 차단 하지 않습니다.  
  
 서버에 지정 된 간격 안에 응답 하지 않으면 `connectionTimeout`, 작업이 취소 되 고 예외가 throw 됩니다.  
  
 `My.Computer.Network.UploadFile` 응용 프로그램에서 네트워크 추적을 사용 하도록 설정 하면 추적 정보를 출력 합니다. 자세한 내용은 [네트워크 추적 사용](~/docs/framework/network-programming/enabling-network-tracing.md)합니다.  
  
> [!NOTE]
>  FTP 프로토콜은 일반 텍스트 암호 등의 정보를 보내고 중요 한 정보를 전송 하는 데 사용할 수 없습니다.  
  
 다음 표에서 관련 된 작업의 예로 `My.Computer.Network.UploadFile` 메서드.  
  
|후|보기|  
|-|-|  
|파일 업로드|[방법: 파일 업로드](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 이 예제에서는 파일 업로드 `Order.txt` 에 `http://www.cohowinery.com/uploads`입니다.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 이 예제에서는 사용자 이름 또는 암호를 제공하지 않고 `Order.txt` 파일을 `http://www.cohowinery.com/uploads`에 업로드하며, 업로드 진행률을 표시하고, 시간 제한 간격으로 500밀리초가 지정됩니다.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" />가 0보다 작거나 같은 경우</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" />에는 파일 이름이 포함되어 있지 않습니다.</exception>
        <exception cref="T:System.Security.SecurityException">사용자는 네트워크 작업을 수행하는 데 필요한 권한이 없습니다.</exception>
        <exception cref="T:System.TimeoutException">지정된 <paramref name="connectionTimeout" /> 내에 서버가 응답하지 않는 경우</exception>
        <exception cref="T:System.Net.WebException">대상 웹 서버가 요청을 거부합니다.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">사용자 인터페이스 및 클립보드와 관련 된 사용 권한을 제어 합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">HTTP 인터넷 리소스에 액세스하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">방법: Visual Basic에서 파일 다운로드</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">방법: Visual Basic에서 파일 경로의 구문 분석</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">업로드할 파일의 경로와 이름입니다.</param>
        <param name="address">대상 서버의 URL, IP 주소 또는 URI입니다.</param>
        <param name="userName">인증할 사용자 이름입니다. 기본값은 빈 문자열(<c>“”</c>)입니다.</param>
        <param name="password">인증할 암호입니다. 기본값은 빈 문자열(<c>“”</c>)입니다.</param>
        <param name="showUI">작업 진행 상태를 표시할지 여부입니다. 기본값은 <see langword="False" />입니다.</param>
        <param name="connectionTimeout">제한 시간 간격(밀리초)입니다. 기본값은 100초입니다.</param>
        <param name="onUserCancel">사용자가 **취소**를 클릭하는 경우 수행할 작업입니다. 기본값은 <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />입니다.</param>
        <summary>지정한 파일을 지정한 호스트 주소로 보냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 `showUI` 로 설정 되어 `True`, 대화 상자를 작업의 진행률을 표시 하 고 포함을 **취소** 사용자가 클릭 하 여 작업을 취소할 수 있는 단추입니다. 대화 상자를 모달 같지 않으므로 다른 windows 프로그램에 사용자 입력을 차단 하지 않습니다.  
  
 서버에 지정 된 간격 안에 응답 하지 않으면 `connectionTimeout`, 작업이 취소 되 고 예외가 throw 됩니다.  
  
 `My.Computer.Network.UploadFile` 응용 프로그램에서 네트워크 추적을 사용 하도록 설정 하면 추적 정보를 출력 합니다. 자세한 내용은 [네트워크 추적 사용](~/docs/framework/network-programming/enabling-network-tracing.md)합니다.  
  
> [!NOTE]
>  FTP 프로토콜은 일반 텍스트 암호 등의 정보를 보내고 중요 한 정보를 전송 하는 데 사용할 수 없습니다.  
  
 다음 표에서 관련 된 작업의 예로 `My.Computer.Network.UploadFile` 메서드.  
  
|후|보기|  
|-|-|  
|파일 업로드|[방법: 파일 업로드](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 이 예제에서는 파일 업로드 `Order.txt` 에 `http://www.cohowinery.com/uploads`입니다.  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 이 예제에서는 사용자 이름 또는 암호를 제공하지 않고 `Order.txt` 파일을 `http://www.cohowinery.com/uploads`에 업로드하며, 업로드 진행률을 표시하고, 시간 제한 간격으로 500밀리초가 지정됩니다.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" />가 0보다 작거나 같은 경우</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" />에는 파일 이름이 포함되어 있지 않습니다.</exception>
        <exception cref="T:System.Security.SecurityException">사용자는 네트워크 작업을 수행하는 데 필요한 권한이 없습니다.</exception>
        <exception cref="T:System.TimeoutException">지정된 <paramref name="connectionTimeout" /> 내에 서버가 응답하지 않는 경우</exception>
        <exception cref="T:System.Net.WebException">대상 웹 서버가 요청을 거부합니다.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 및 폴더에 액세스하는 기능을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">사용자 인터페이스 및 클립보드와 관련 된 사용 권한을 제어 합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">HTTP 인터넷 리소스에 액세스하는 권한을 제어합니다. 연관된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">방법: Visual Basic에서 파일 다운로드</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">방법: Visual Basic에서 파일 경로의 구문 분석</related>
      </Docs>
    </Member>
  </Members>
</Type>