<Type Name="Ports" FullName="Microsoft.VisualBasic.Devices.Ports">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bd497cb0b15fddafa4116f92c5b93d8e228fdc11" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46617776" /></Metadata><TypeSignature Language="C#" Value="public class Ports" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Ports extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Ports" />
  <TypeSignature Language="VB.NET" Value="Public Class Ports" />
  <TypeSignature Language="C++ CLI" Value="public ref class Ports" />
  <TypeSignature Language="F#" Value="type Ports = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>컴퓨터의 직렬 포트에 액세스하기 위한 속성 및 메서드를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `My.Computer.Ports` 개체에 액세스 하기 위한 간단 하 게 진입점을 제공 합니다 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 직렬 포트 클래스 <xref:System.IO.Ports.SerialPort>합니다.  
  
 다음 표에서 관련 된 작업의 예제는 `My.Computer.Ports` 개체입니다.  
  
|대상|참조|  
|-|-|  
|직렬 포트에 연결 된 모뎀 전화 접속|[방법: 직렬 포트에 연결된 모뎀 전화 접속](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|직렬 포트로 문자열 보내기|[방법: 직렬 포트로 문자열 보내기](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|직렬 포트에서 문자열 받기|[방법: 직렬 포트에서 문자열 받기](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
|사용 가능한 직렬 포트 표시|[방법: 사용할 수 있는 직렬 포트 표시](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|-|-|  
|Windows 애플리케이션|**예**|  
|클래스 라이브러리|**예**|  
|콘솔 애플리케이션|**예**|  
|Windows 컨트롤 라이브러리|**예**|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|**예**|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 이 예제에서는 컴퓨터에 문자열을 보내는 방법을 설명 `COM1` 직렬 포트입니다.  
  
 `Using` 블록을 사용하면 예외를 생성하는 경우 응용 프로그램이 직렬 포트를 닫을 수 있습니다. 이 블록 내에서 또는 직렬 포트를 조작 하는 모든 코드가 표시 됩니다는 `Try...Catch...Finally` 사용에 대 한 호출을 사용 하 여 블록을 <xref:System.IO.Ports.SerialPort.Close%2A> 메서드.  
  
 <xref:System.IO.Ports.SerialPort.WriteLine%2A> 메서드는 데이터를 직렬 포트로 보냅니다.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 자세한 내용은 [방법: 직렬 포트로 문자열 보내기](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)합니다.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">방법: Visual Basic에서 직렬 포트에 연결된 모뎀 전화 접속</related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">방법: Visual Basic에서 직렬 포트로 문자열 보내기</related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">방법: Visual Basic에서 직렬 포트의 문자열 받기</related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports">방법: Visual Basic에서 사용할 수 있는 직렬 포트 표시</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Ports ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Ports();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Devices.Ports" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenSerialPort">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.IO.Ports.SerialPort" /> 개체를 만들어서 엽니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSerialPort (portName As String) As SerialPort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort portName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="portName"><see langword="String" />. 필수 요소. 열 포트의 이름입니다.</param>
        <summary><see cref="T:System.IO.Ports.SerialPort" /> 개체를 만들어서 엽니다.</summary>
        <returns>제공된 인수로 구성되는 열린 <see cref="T:System.IO.Ports.SerialPort" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `My.Computer.Ports.OpenSerialPort` 메서드를 만들고 엽니다는 <xref:System.IO.Ports.SerialPort> 개체입니다. 에 대 한 인수는 `OpenSerialPort` 메서드의 설정을 확인 합니다 <xref:System.IO.Ports.SerialPort> 개체입니다.  
  
 코드 닫아야는 <xref:System.IO.Ports.SerialPort> 완료 되 면 개체는 개체를 사용 하 여. 사용할 수는 <xref:System.IO.Ports.SerialPort.Close%2A> 개체를 명시적으로 닫는 메서드를 또는 `Using` 문의 하 여 암시적으로 닫습니다. 자세한 내용은이 항목의 예제를 참조 하세요.  
  
 다음 표에서 관련 된 작업의 예제는 `My.Computer.Ports.OpenSerialPort` 메서드.  
  
|대상|참조|  
|-|-|  
|직렬 포트에 연결 된 모뎀 전화 접속|[방법: 직렬 포트에 연결된 모뎀 전화 접속](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|직렬 포트로 문자열 보내기|[방법: 직렬 포트로 문자열 보내기](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|직렬 포트에서 문자열 받기|[방법: 직렬 포트에서 문자열 받기](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|-|-|  
|Windows 애플리케이션|**예**|  
|클래스 라이브러리|**예**|  
|콘솔 애플리케이션|**예**|  
|Windows 컨트롤 라이브러리|**예**|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|**예**|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 이 예제에서는 컴퓨터에 문자열을 보내는 방법을 설명 `COM1` 직렬 포트입니다.  
  
 `Using` 블록을 사용하면 예외를 생성하는 경우 응용 프로그램이 직렬 포트를 닫을 수 있습니다. 이 블록 내에서 또는 직렬 포트를 조작 하는 모든 코드가 표시 됩니다는 `Try...Catch...Finally` 사용에 대 한 호출을 사용 하 여 블록을 <xref:System.IO.Ports.SerialPort.Close%2A> 메서드.  
  
 <xref:System.IO.Ports.SerialPort.WriteLine%2A> 메서드는 데이터를 직렬 포트로 보냅니다.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 자세한 내용은 [방법: 직렬 포트로 문자열 보내기](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="portName" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">방법: Visual Basic에서 직렬 포트에 연결된 모뎀 전화 접속</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">방법: Visual Basic에서 직렬 포트로 문자열 보내기</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">방법: Visual Basic에서 직렬 포트의 문자열 받기</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Using 문(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSerialPort (portName As String, baudRate As Integer) As SerialPort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="portName"><see langword="String" />. 필수 요소. 열 포트의 이름입니다.</param>
        <param name="baudRate"><see langword="Integer" />. 포트의 전송 속도입니다.</param>
        <summary><see cref="T:System.IO.Ports.SerialPort" /> 개체를 만들어서 엽니다.</summary>
        <returns>제공된 인수로 구성되는 열린 <see cref="T:System.IO.Ports.SerialPort" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `My.Computer.Ports.OpenSerialPort` 메서드를 만들고 엽니다는 <xref:System.IO.Ports.SerialPort> 개체입니다. 에 대 한 인수는 `OpenSerialPort` 메서드의 설정을 확인 합니다 <xref:System.IO.Ports.SerialPort> 개체입니다.  
  
 코드 닫아야는 <xref:System.IO.Ports.SerialPort> 완료 되 면 개체는 개체를 사용 하 여. 사용할 수는 <xref:System.IO.Ports.SerialPort.Close%2A> 개체를 명시적으로 닫는 메서드를 또는 `Using` 문의 하 여 암시적으로 닫습니다. 자세한 내용은이 항목의 예제를 참조 하세요.  
  
 다음 표에서 관련 된 작업의 예제는 `My.Computer.Ports.OpenSerialPort` 메서드.  
  
|대상|참조|  
|-|-|  
|직렬 포트에 연결 된 모뎀 전화 접속|[방법: 직렬 포트에 연결된 모뎀 전화 접속](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|직렬 포트로 문자열 보내기|[방법: 직렬 포트로 문자열 보내기](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|직렬 포트에서 문자열 받기|[방법: 직렬 포트에서 문자열 받기](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|-|-|  
|Windows 애플리케이션|**예**|  
|클래스 라이브러리|**예**|  
|콘솔 애플리케이션|**예**|  
|Windows 컨트롤 라이브러리|**예**|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|**예**|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 이 예제에서는 컴퓨터에 문자열을 보내는 방법을 설명 `COM1` 직렬 포트입니다.  
  
 `Using` 블록을 사용하면 예외를 생성하는 경우 응용 프로그램이 직렬 포트를 닫을 수 있습니다. 이 블록 내에서 또는 직렬 포트를 조작 하는 모든 코드가 표시 됩니다는 `Try...Catch...Finally` 사용에 대 한 호출을 사용 하 여 블록을 <xref:System.IO.Ports.SerialPort.Close%2A> 메서드.  
  
 <xref:System.IO.Ports.SerialPort.WriteLine%2A> 메서드는 데이터를 직렬 포트로 보냅니다.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 자세한 내용은 [방법: 직렬 포트로 문자열 보내기](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="portName" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="baudRate" />가 0보다 작거나 같은 경우</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">방법: Visual Basic에서 직렬 포트에 연결된 모뎀 전화 접속</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">방법: Visual Basic에서 직렬 포트로 문자열 보내기</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">방법: Visual Basic에서 직렬 포트의 문자열 받기</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Using 문(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int * System.IO.Ports.Parity -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate, parity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
      </Parameters>
      <Docs>
        <param name="portName"><see langword="String" />. 필수 요소. 열 포트의 이름입니다.</param>
        <param name="baudRate"><see langword="Integer" />. 포트의 전송 속도입니다.</param>
        <param name="parity"><see cref="T:System.IO.Ports.Parity" />. 포트의 패리티입니다.</param>
        <summary><see cref="T:System.IO.Ports.SerialPort" /> 개체를 만들어서 엽니다.</summary>
        <returns>제공된 인수로 구성되는 열린 <see cref="T:System.IO.Ports.SerialPort" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `My.Computer.Ports.OpenSerialPort` 메서드를 만들고 엽니다는 <xref:System.IO.Ports.SerialPort> 개체입니다. 에 대 한 인수는 `OpenSerialPort` 메서드의 설정을 확인 합니다 <xref:System.IO.Ports.SerialPort> 개체입니다.  
  
 코드 닫아야는 <xref:System.IO.Ports.SerialPort> 완료 되 면 개체는 개체를 사용 하 여. 사용할 수는 <xref:System.IO.Ports.SerialPort.Close%2A> 개체를 명시적으로 닫는 메서드를 또는 `Using` 문의 하 여 암시적으로 닫습니다. 자세한 내용은이 항목의 예제를 참조 하세요.  
  
 다음 표에서 관련 된 작업의 예제는 `My.Computer.Ports.OpenSerialPort` 메서드.  
  
|대상|참조|  
|-|-|  
|직렬 포트에 연결 된 모뎀 전화 접속|[방법: 직렬 포트에 연결된 모뎀 전화 접속](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|직렬 포트로 문자열 보내기|[방법: 직렬 포트로 문자열 보내기](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|직렬 포트에서 문자열 받기|[방법: 직렬 포트에서 문자열 받기](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|-|-|  
|Windows 애플리케이션|**예**|  
|클래스 라이브러리|**예**|  
|콘솔 애플리케이션|**예**|  
|Windows 컨트롤 라이브러리|**예**|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|**예**|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 이 예제에서는 컴퓨터에 문자열을 보내는 방법을 설명 `COM1` 직렬 포트입니다.  
  
 `Using` 블록을 사용하면 예외를 생성하는 경우 응용 프로그램이 직렬 포트를 닫을 수 있습니다. 이 블록 내에서 또는 직렬 포트를 조작 하는 모든 코드가 표시 됩니다는 `Try...Catch...Finally` 사용에 대 한 호출을 사용 하 여 블록을 <xref:System.IO.Ports.SerialPort.Close%2A> 메서드.  
  
 <xref:System.IO.Ports.SerialPort.WriteLine%2A> 메서드는 데이터를 직렬 포트로 보냅니다.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 자세한 내용은 [방법: 직렬 포트로 문자열 보내기](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="portName" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="baudRate" />가 0보다 작거나 같은 경우</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="parity" />이 <see cref="T:System.IO.Ports.Parity" /> 열거형 값 중 하나가 아닌 경우</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">방법: Visual Basic에서 직렬 포트에 연결된 모뎀 전화 접속</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">방법: Visual Basic에서 직렬 포트로 문자열 보내기</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">방법: Visual Basic에서 직렬 포트의 문자열 받기</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Using 문(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity, int32 dataBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity, int dataBits);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int * System.IO.Ports.Parity * int -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate, parity, dataBits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
        <Parameter Name="dataBits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="portName"><see langword="String" />. 필수 요소. 열 포트의 이름입니다.</param>
        <param name="baudRate"><see langword="Integer" />. 포트의 전송 속도입니다.</param>
        <param name="parity"><see cref="T:System.IO.Ports.Parity" />. 포트의 패리티입니다.</param>
        <param name="dataBits"><see langword="Integer" />. 포트의 데이터 비트 설정입니다.</param>
        <summary><see cref="T:System.IO.Ports.SerialPort" /> 개체를 만들어서 엽니다.</summary>
        <returns>제공된 인수로 구성되는 열린 <see cref="T:System.IO.Ports.SerialPort" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `My.Computer.Ports.OpenSerialPort` 메서드를 만들고 엽니다는 <xref:System.IO.Ports.SerialPort> 개체입니다. 에 대 한 인수는 `OpenSerialPort` 메서드의 설정을 확인 합니다 <xref:System.IO.Ports.SerialPort> 개체입니다.  
  
 코드 닫아야는 <xref:System.IO.Ports.SerialPort> 완료 되 면 개체는 개체를 사용 하 여. 사용할 수는 <xref:System.IO.Ports.SerialPort.Close%2A> 개체를 명시적으로 닫는 메서드를 또는 `Using` 문의 하 여 암시적으로 닫습니다. 자세한 내용은이 항목의 예제를 참조 하세요.  
  
 다음 표에서 관련 된 작업의 예제는 `My.Computer.Ports.OpenSerialPort` 메서드.  
  
|대상|참조|  
|-|-|  
|직렬 포트에 연결 된 모뎀 전화 접속|[방법: 직렬 포트에 연결된 모뎀 전화 접속](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|직렬 포트로 문자열 보내기|[방법: 직렬 포트로 문자열 보내기](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|직렬 포트에서 문자열 받기|[방법: 직렬 포트에서 문자열 받기](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|-|-|  
|Windows 애플리케이션|**예**|  
|클래스 라이브러리|**예**|  
|콘솔 애플리케이션|**예**|  
|Windows 컨트롤 라이브러리|**예**|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|**예**|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 이 예제에서는 컴퓨터에 문자열을 보내는 방법을 설명 `COM1` 직렬 포트입니다.  
  
 `Using` 블록을 사용하면 예외를 생성하는 경우 응용 프로그램이 직렬 포트를 닫을 수 있습니다. 이 블록 내에서 또는 직렬 포트를 조작 하는 모든 코드가 표시 됩니다는 `Try...Catch...Finally` 사용에 대 한 호출을 사용 하 여 블록을 <xref:System.IO.Ports.SerialPort.Close%2A> 메서드.  
  
 <xref:System.IO.Ports.SerialPort.WriteLine%2A> 메서드는 데이터를 직렬 포트로 보냅니다.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 자세한 내용은 [방법: 직렬 포트로 문자열 보내기](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="portName" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="dataBits" />가 0보다 작거나 같은 경우</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="parity" />이 <see cref="T:System.IO.Ports.Parity" /> 열거형 값 중 하나가 아닌 경우</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">방법: Visual Basic에서 직렬 포트에 연결된 모뎀 전화 접속</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">방법: Visual Basic에서 직렬 포트로 문자열 보내기</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">방법: Visual Basic에서 직렬 포트의 문자열 받기</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Using 문(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits, System.IO.Ports.StopBits stopBits);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity, int32 dataBits, valuetype System.IO.Ports.StopBits stopBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity, int dataBits, System::IO::Ports::StopBits stopBits);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int * System.IO.Ports.Parity * int * System.IO.Ports.StopBits -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate, parity, dataBits, stopBits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
        <Parameter Name="dataBits" Type="System.Int32" />
        <Parameter Name="stopBits" Type="System.IO.Ports.StopBits" />
      </Parameters>
      <Docs>
        <param name="portName"><see langword="String" />. 필수 요소. 열 포트의 이름입니다.</param>
        <param name="baudRate"><see langword="Integer" />. 포트의 전송 속도입니다.</param>
        <param name="parity"><see cref="T:System.IO.Ports.Parity" />. 포트의 패리티입니다.</param>
        <param name="dataBits"><see langword="Integer" />. 포트의 데이터 비트 설정입니다.</param>
        <param name="stopBits"><see cref="T:System.IO.Ports.StopBits" />. 포트의 중지 비트 설정입니다.</param>
        <summary><see cref="T:System.IO.Ports.SerialPort" /> 개체를 만들어서 엽니다.</summary>
        <returns>제공된 인수로 구성되는 열린 <see cref="T:System.IO.Ports.SerialPort" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `My.Computer.Ports.OpenSerialPort` 메서드를 만들고 엽니다는 <xref:System.IO.Ports.SerialPort> 개체입니다. 에 대 한 인수는 `OpenSerialPort` 메서드의 설정을 확인 합니다 <xref:System.IO.Ports.SerialPort> 개체입니다.  
  
 코드 닫아야는 <xref:System.IO.Ports.SerialPort> 완료 되 면 개체는 개체를 사용 하 여. 사용할 수는 <xref:System.IO.Ports.SerialPort.Close%2A> 개체를 명시적으로 닫는 메서드를 또는 `Using` 문의 하 여 암시적으로 닫습니다. 자세한 내용은이 항목의 예제를 참조 하세요.  
  
 다음 표에서 관련 된 작업의 예제는 `My.Computer.Ports.OpenSerialPort` 메서드.  
  
|대상|참조|  
|-|-|  
|직렬 포트에 연결 된 모뎀 전화 접속|[방법: 직렬 포트에 연결된 모뎀 전화 접속](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|직렬 포트로 문자열 보내기|[방법: 직렬 포트로 문자열 보내기](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|직렬 포트에서 문자열 받기|[방법: 직렬 포트에서 문자열 받기](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|-|-|  
|Windows 애플리케이션|**예**|  
|클래스 라이브러리|**예**|  
|콘솔 애플리케이션|**예**|  
|Windows 컨트롤 라이브러리|**예**|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|**예**|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 이 예제에서는 컴퓨터에 문자열을 보내는 방법을 설명 `COM1` 직렬 포트입니다.  
  
 `Using` 블록을 사용하면 예외를 생성하는 경우 응용 프로그램이 직렬 포트를 닫을 수 있습니다. 이 블록 내에서 또는 직렬 포트를 조작 하는 모든 코드가 표시 됩니다는 `Try...Catch...Finally` 사용에 대 한 호출을 사용 하 여 블록을 <xref:System.IO.Ports.SerialPort.Close%2A> 메서드.  
  
 <xref:System.IO.Ports.SerialPort.WriteLine%2A> 메서드는 데이터를 직렬 포트로 보냅니다.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 자세한 내용은 [방법: 직렬 포트로 문자열 보내기](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="portName" />이 <see langword="Nothing" /> 또는 빈 문자열인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="dataBits" />가 0보다 작거나 같은 경우</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="stopBits" />이 <see cref="T:System.IO.Ports.StopBits" /> 열거형 값 중 하나가 아닌 경우</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">방법: Visual Basic에서 직렬 포트에 연결된 모뎀 전화 접속</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">방법: Visual Basic에서 직렬 포트로 문자열 보내기</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">방법: Visual Basic에서 직렬 포트의 문자열 받기</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Using 문(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="SerialPortNames">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; SerialPortNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; SerialPortNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerialPortNames As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ SerialPortNames { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SerialPortNames : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컴퓨터에 있는 직렬 포트의 이름 컬렉션을 가져옵니다.</summary>
        <value>컴퓨터에 있는 직렬 포트의 이름 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Computer.Ports.SerialPortNames` 속성 컴퓨터의 직렬 포트의 이름 컬렉션을 가져옵니다.  
  
> [!NOTE]
>  Windows 98에서 실행하는 경우 `My.Computer.Ports.SerialPortNames`에서 반환되는 포트 이름이 부정확할 수 있습니다. 애플리케이션 오류를 방지하려면 포트 이름을 사용하여 포트를 열 때 `Try...Catch...Finally` 문 또는 `Using` 문과 같은 예외 처리를 사용합니다.  
  
 다음 표에서 관련 된 작업의 예로 `My.Computer.Ports.SerialPortNames` 속성입니다.  
  
|대상|참조|  
|-|-|  
|사용 가능한 직렬 포트 표시|[방법: 사용할 수 있는 직렬 포트 표시](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>프로젝트 형식에 따라 가용성  
  
|프로젝트 형식|사용 가능|  
|-|-|  
|Windows 애플리케이션|**예**|  
|클래스 라이브러리|**예**|  
|콘솔 애플리케이션|**예**|  
|Windows 컨트롤 라이브러리|**예**|  
|웹 컨트롤 라이브러리|아니요|  
|Windows 서비스|**예**|  
|웹 사이트|아니요|  
  
   
  
## Examples  
 이 예제에서는 `My.Computer.Ports.SerialPortNames` 속성이 반환하는 모든 문자열을 반복합니다. 이러한 문자열은 컴퓨터에서 사용할 수 있는 직렬 포트의 이름입니다.  
  
 일반적으로 사용자는 사용 가능한 포트 목록에서 애플리케이션이 사용해야 하는 직렬 포트를 선택합니다. 이 예제에서 직렬 포트 이름은 <xref:System.Windows.Forms.ListBox> 컨트롤에 저장됩니다. 자세한 내용은 [ListBox 컨트롤](~/docs/framework/winforms/controls/listbox-control-windows-forms.md)을 참조하세요.  
  
 [!code-vb[VbVbalrMyComputer#45](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#45)]  
  
 이 예제에는 다음 사항이 필요합니다.  
  
-   <xref:System?displayProperty=nameWithType> 네임스페이스에 대한 참조  
  
-   `ListBox1`이라는 <xref:System.Windows.Forms.ListBox> 컨트롤이 폼에 있어야 함  
  
 자세한 내용은 [방법: 사용할 수 있는 직렬 포트 표시](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)를 참조하세요.  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None." />
        <altmember cref="Overload:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports">방법: Visual Basic에서 사용할 수 있는 직렬 포트 표시</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md">Try...Catch...Finally 문(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Using 문(Visual Basic)</related>
      </Docs>
    </Member>
  </Members>
</Type>