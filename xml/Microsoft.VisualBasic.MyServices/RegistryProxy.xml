<Type Name="RegistryProxy" FullName="Microsoft.VisualBasic.MyServices.RegistryProxy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8f4c2dd21700346b6974cd37c61f03b9ab2173c0" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55314374" /></Metadata><TypeSignature Language="C#" Value="public class RegistryProxy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi RegistryProxy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.MyServices.RegistryProxy" />
  <TypeSignature Language="VB.NET" Value="Public Class RegistryProxy" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryProxy" />
  <TypeSignature Language="F#" Value="type RegistryProxy = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>레지스트리를 조작하기 위한 속성 및 메서드를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이러한 속성을 사용 하려면에서 읽기 및 쓰기 권한이 있어야 합니다 <xref:System.Security.Permissions.RegistryPermissionAccess> 열거형입니다. 완전 신뢰로 실행 되는 모든 코드 (기본 보안 정책에 따라이 사용자의 로컬 하드 드라이브에 설치 된 모든 코드)가 레지스트리에 액세스 하는 데 필요한 권한이 있습니다. 자세한 내용은 <xref:System.Security.Permissions.RegistryPermission> 클래스를 참조하세요.  
  
 다음 표에서 관련 된 작업의 예제는 `My.Computer.Registry` 개체입니다.  
  
|대상|보기|  
|--------|---------|  
|레지스트리 키를 만들고 해당 값을 설정|[방법: 레지스트리 키 만들기 및 값 설정](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|레지스트리 키 삭제|[방법: 레지스트리 키 삭제](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|레지스트리에서 데이터 읽기|[방법: 레지스트리 키 값 읽기](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 이 예제에서는 값을 읽고 `Name` 에서 `HKEY_CURRENT_USER\Software\MyApp` 메시지 상자에 표시 됩니다.  
  
 [!code-vb[VbVbalrMyRegistry#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.Win32.Registry" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">레지스트리 읽기 및 쓰기(Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName="ClassesRoot">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey ClassesRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey ClassesRoot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClassesRoot As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ ClassesRoot { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClassesRoot : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="HKEY_CLASSES_ROOT" /> 키에 대한 액세스를 제공하는 <see cref="T:Microsoft.Win32.RegistryKey" /> 형식을 반환합니다.</summary>
        <value><see cref="T:Microsoft.Win32.RegistryKey" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_CLASSES_ROOT` Windows에서 파일 연결에 대 한 정보를 저장할 주로 사용 됩니다.  
  
 <xref:System.Security.Permissions.RegistryPermission> 클래스에는 <xref:System.Security.Permissions> 네임 스페이스 레지스트리 변수에 대 한 액세스를 제어 합니다. <xref:System.Security.Permissions.RegistryPermission> 없이 코드에서 액세스할 수 있는 메모리 위치에 레지스트리 변수를 저장하면 안 됩니다. 마찬가지로, 권한을 부여할 때는 작업을 수행 하는 데 필요한 권한만 부여 합니다.  
  
 레지스트리 권한 액세스 값은 <xref:System.Security.Permissions.RegistryPermissionAccess> 열거형에 의해 정의됩니다. 다음 표에서는 해당 멤버를 자세히 설명합니다.  
  
|값|설명|  
|-----------|-----------------|  
|AllAccess|만들기, 읽기 및 쓰기 레지스트리 변수에 액세스 합니다.|  
|만들기|레지스트리 변수에 대한 만들기 권한입니다.|  
|액세스 권한 없음|레지스트리 변수에 대한 권한이 없습니다.|  
|읽기|레지스트리 변수에 대한 읽기 권한입니다.|  
|Write|레지스트리 변수에 대한 쓰기 권한입니다.|  
  
 다음 표에서 관련 된 작업의 예제는 `My.Computer.Registry` 개체입니다.  
  
|대상|보기|  
|--------|---------|  
|레지스트리 키를 만들고 해당 값을 설정|[방법: 레지스트리 키 만들기 및 값 설정](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|레지스트리 키 삭제|[방법: 레지스트리 키 삭제](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|레지스트리 키에서 값 읽기|[방법: 레지스트리 키 값 읽기](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 이 예제에 대 한 하위 키의 이름을 가져옵니다 합니다 `ClassesRoot` 레지스트리 키에 추가 합니다 `ListBox1`합니다.  
  
 [!code-vb[VbVbalrMyRegistry#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#10)]  
  
 이 예제를 실행 하려면를 `ListBox` 라는 `ListBox1` 프로젝트에서.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.ClassesRoot" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">레지스트리 읽기 및 쓰기(Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">보안 및 레지스트리</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentConfig">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CurrentConfig { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey CurrentConfig" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentConfig As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ CurrentConfig { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentConfig : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="HKEY_CURRENT_CONFIG" /> 키에 대한 액세스를 제공하는 <see cref="T:Microsoft.Win32.RegistryKey" /> 형식을 반환합니다.</summary>
        <value><see cref="T:Microsoft.Win32.RegistryKey" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_CURRENT_CONFIG` 컴퓨터의 디바이스에 대 한 설정을 저장에 주로 사용 됩니다.  
  
 <xref:System.Security.Permissions.RegistryPermission> 클래스에는 <xref:System.Security.Permissions> 네임 스페이스 레지스트리 변수에 대 한 액세스를 제어 합니다. <xref:System.Security.Permissions.RegistryPermission> 없이 코드에서 액세스할 수 있는 메모리 위치에 레지스트리 변수를 저장하면 안 됩니다. 마찬가지로, 권한을 부여할 때는 작업을 수행 하는 데 필요한 권한만 부여 합니다.  
  
 레지스트리 권한 액세스 값은 <xref:System.Security.Permissions.RegistryPermissionAccess> 열거형에 의해 정의됩니다. 다음 표에서는 해당 멤버를 자세히 설명합니다.  
  
|값|설명|  
|-----------|-----------------|  
|AllAccess|만들기, 읽기 및 쓰기 레지스트리 변수에 액세스 합니다.|  
|만들기|레지스트리 변수에 대한 만들기 권한입니다.|  
|액세스 권한 없음|레지스트리 변수에 대한 권한이 없습니다.|  
|읽기|레지스트리 변수에 대한 읽기 권한입니다.|  
|Write|레지스트리 변수에 대한 쓰기 권한입니다.|  
  
 다음 표에서 관련 된 작업의 예제는 `My.Computer.Registry` 개체입니다.  
  
|대상|보기|  
|--------|---------|  
|레지스트리 키를 만들고 해당 값을 설정|[방법: 레지스트리 키 만들기 및 값 설정](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|레지스트리 키 삭제|[방법: 레지스트리 키 삭제](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|레지스트리 키에서 값 읽기|[방법: 레지스트리 키 값 읽기](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 이 예제에서는 하위 키를 만듭니다 `MyDeviceSettings`합니다.  
  
 [!code-vb[VbVbalrMyRegistry#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.CurrentConfig" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">레지스트리 읽기 및 쓰기(Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">보안 및 레지스트리</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentUser">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CurrentUser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey CurrentUser" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentUser As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ CurrentUser { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentUser : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="HKEY_CURRENT_USER" /> 키에 대한 액세스를 제공하는 <see cref="T:Microsoft.Win32.RegistryKey" /> 형식을 반환합니다.</summary>
        <value><see cref="T:Microsoft.Win32.RegistryKey" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_CURRENT_USER` Windows에 글꼴, 색 등의 사용자별 설정을 저장할 주로 사용 됩니다. 키를 사용자에 따라 다릅니다.  
  
 <xref:System.Security.Permissions.RegistryPermission> 클래스에는 <xref:System.Security.Permissions> 네임 스페이스 레지스트리 변수에 대 한 액세스를 제어 합니다. <xref:System.Security.Permissions.RegistryPermission> 없이 코드에서 액세스할 수 있는 메모리 위치에 레지스트리 변수를 저장하면 안 됩니다. 마찬가지로, 권한을 부여할 때는 작업을 수행 하는 데 필요한 최소한의 권한을 부여 합니다.  
  
 레지스트리 권한 액세스 값은 <xref:System.Security.Permissions.RegistryPermissionAccess> 열거형에 의해 정의됩니다. 다음 표에서는 해당 멤버를 자세히 설명합니다.  
  
|값|설명|  
|-----------|-----------------|  
|AllAccess|만들기, 읽기 및 쓰기 레지스트리 변수에 액세스 합니다.|  
|만들기|레지스트리 변수에 대한 만들기 권한입니다.|  
|액세스 권한 없음|레지스트리 변수에 대한 권한이 없습니다.|  
|읽기|레지스트리 변수에 대한 읽기 권한입니다.|  
|Write|레지스트리 변수에 대한 쓰기 권한입니다.|  
  
 다음 표에서 관련 된 작업의 예제는 `My.Computer.Registry` 개체입니다.  
  
|대상|보기|  
|--------|---------|  
|레지스트리 키를 만들고 해당 값을 설정|[방법: 레지스트리 키 만들기 및 값 설정](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|레지스트리 키 삭제|[방법: 레지스트리 키 삭제](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|레지스트리 키에서 값 읽기|[방법: 레지스트리 키 값 읽기](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 하위 키를 삭제 하는이 예제 `Software\MyCompany\Preferences\UserData`합니다.  
  
 [!code-vb[VbVbalrMyRegistry#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.CurrentUser" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">레지스트리 읽기 및 쓰기(Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">보안 및 레지스트리</related>
      </Docs>
    </Member>
    <Member MemberName="DynData">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey DynData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey DynData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.DynData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynData As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ DynData { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynData : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.DynData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The DynData registry key works only on Win9x, which is not supported by this version of the .NET Framework.  Use the PerformanceData registry key instead.  This property will be removed from a future version of the framework.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="HKEY_DYNDATA" /> 키에 대한 액세스를 제공하는 <see cref="T:Microsoft.Win32.RegistryKey" /> 형식을 반환합니다.</summary>
        <value><see cref="T:Microsoft.Win32.RegistryKey" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_DYNDATA` 가상 디바이스 드라이버에서 사용 하는 것과 같은 동적 레지스트리 데이터를 저장 하는 데 사용 되 고 Windows 95/98 시스템 에서만 지원 됩니다. 비-Windows 95/98 시스템에서 반환한 키의 모든 메서드를 호출 `Registry.DynData`와 같은 `CreateSubKey`, `DeleteSubKey`, `GetSubKeyCount`를 `GetValueCount`등 시킵니다를 <xref:System.IO.IOException>입니다.  
  
 <xref:System.Security.Permissions.RegistryPermission> 클래스에는 <xref:System.Security.Permissions> 네임 스페이스 레지스트리 변수에 대 한 액세스를 제어 합니다. <xref:System.Security.Permissions.RegistryPermission> 없이 코드에서 액세스할 수 있는 메모리 위치에 레지스트리 변수를 저장하면 안 됩니다. 마찬가지로, 권한을 부여할 때는 작업을 수행 하는 데 필요한 최소한의 권한을 부여 합니다.  
  
 레지스트리 권한 액세스 값은 <xref:System.Security.Permissions.RegistryPermissionAccess> 열거형에 의해 정의됩니다. 다음 표에서는 해당 멤버를 자세히 설명합니다.  
  
|값|설명|  
|-----------|-----------------|  
|AllAccess|만들기, 읽기 및 쓰기 레지스트리 변수에 액세스 합니다.|  
|만들기|레지스트리 변수에 대한 만들기 권한입니다.|  
|액세스 권한 없음|레지스트리 변수에 대한 권한이 없습니다.|  
|읽기|레지스트리 변수에 대한 읽기 권한입니다.|  
|Write|레지스트리 변수에 대한 쓰기 권한입니다.|  
  
 다음 표에서 관련 된 작업의 예제는 `My.Computer.Registry` 개체입니다.  
  
|대상|보기|  
|--------|---------|  
|레지스트리 키를 만들고 해당 값을 설정|[방법: 레지스트리 키 만들기 및 값 설정](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|레지스트리 키 삭제|[방법: 레지스트리 키 삭제](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|레지스트리 키에서 값 읽기|[방법: 레지스트리 키 값 읽기](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 하위 트리를 삭제 하는이 예제 `Software\MyCompany\Preferences`합니다.  
  
 [!code-vb[VbVbalrMyRegistry#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.DynData" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">레지스트리 읽기 및 쓰기(Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">보안 및 레지스트리</related>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (string keyName, string valueName, object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public instance object GetValue(string keyName, string valueName, object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (keyName As String, valueName As String, defaultValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ defaultValue);" />
      <MemberSignature Language="F#" Value="member this.GetValue : string * string * obj -&gt; obj" Usage="registryProxy.GetValue (keyName, valueName, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="defaultValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName"><see langword="String" />. 값이 검색되는 키입니다. 필수.</param>
        <param name="valueName"><see langword="String" />. 검색할 값입니다. 필수.</param>
        <param name="defaultValue"><see langword="Object" />. 해당 값이 없는 경우 제공되는 기본값입니다. 필수.</param>
        <summary>레지스트리 키에서 값을 가져옵니다.</summary>
        <returns>레지스트리 키에서 값을 가져옵니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `valueName`은(는) 대/소문자를 구분하지 않습니다.  
  
 레지스트리 키 이름과 연결 된 하나의 값을 포함할 수 있습니다. 레지스트리 편집기에서 명명 되지 않은 값이 표시 되 면 "(기본값)" 문자열 이름 대신 표시 됩니다. 검색할 명명 되지 않은 값이 지정 null 또는 빈 문자열 ("")에 대 한 `valueName`합니다.  
  
 다음 표에서 관련 된 작업의 예제는 `GetValue` 메서드.  
  
|대상|참조|  
|--------|---------|  
|레지스트리 키에서 값 읽기|[방법: 레지스트리 키 값 읽기](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 이 예제에서는 값을 읽습니다 `Name` 에서 `HKEY_CURRENT_USER\Software\MyApp` 에 표시 된 `MessageBox`합니다.  
  
 [!code-vb[VbVbalrMyRegistry#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">사용자가 레지스트리 키를 읽는 데 필요한 사용 권한이 없는 경우</exception>
        <exception cref="T:System.IO.IOException">지정된 값이 포함된 <see cref="T:Microsoft.Win32.RegistryKey" />가 삭제 표시된 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="keyName" />이 유효한 레지스트리 루트로 시작하지 않은 경우</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">레지스트리에서 읽을 수 연결 된 열거형: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">형식 reg_expand_sz와의 레지스트리 키를 읽을 수 연결 된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">레지스트리 읽기 및 쓰기(Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">보안 및 레지스트리</related>
      </Docs>
    </Member>
    <Member MemberName="LocalMachine">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey LocalMachine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey LocalMachine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalMachine As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ LocalMachine { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalMachine : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="HKEY_LOCAL_MACHINE" /> 키에 대한 액세스를 제공하는 <see cref="T:Microsoft.Win32.RegistryKey" /> 형식을 반환합니다.</summary>
        <value><see cref="T:Microsoft.Win32.RegistryKey" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_LOCAL_MACHINE` Windows에서 사용자 마다 달라 지지 않는 설정을 저장할 일반적으로 사용 됩니다. 컴퓨터의 모든 사용자는이 키를 공유 합니다. 5 개의 하위 키 (`Hardware`, `SAM`, `Security`합니다 `Software`, 및 `System`) 로컬 컴퓨터에 대 한 구성 데이터를 유지 합니다.  
  
 <xref:System.Security.Permissions.RegistryPermission> 클래스에는 <xref:System.Security.Permissions> 네임 스페이스 레지스트리 변수에 대 한 액세스를 제어 합니다. <xref:System.Security.Permissions.RegistryPermission> 없이 코드에서 액세스할 수 있는 메모리 위치에 레지스트리 변수를 저장하면 안 됩니다. 마찬가지로, 권한을 부여할 때는 작업을 수행 하는 데 필요한 최소한의 권한을 부여 합니다.  
  
 레지스트리 권한 액세스 값은 <xref:System.Security.Permissions.RegistryPermissionAccess> 열거형에 의해 정의됩니다. 다음 표에서는 해당 멤버를 자세히 설명합니다.  
  
|값|설명|  
|-----------|-----------------|  
|AllAccess|만들기, 읽기 및 쓰기 레지스트리 변수에 액세스 합니다.|  
|만들기|레지스트리 변수에 대한 만들기 권한입니다.|  
|액세스 권한 없음|레지스트리 변수에 대한 권한이 없습니다.|  
|읽기|레지스트리 변수에 대한 읽기 권한입니다.|  
|Write|레지스트리 변수에 대한 쓰기 권한입니다.|  
  
 다음 표에서 관련 된 작업의 예제는 `My.Computer.Registry` 개체입니다.  
  
|대상|보기|  
|--------|---------|  
|레지스트리 키를 만들고 해당 값을 설정|[방법: 레지스트리 키 만들기 및 값 설정](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|레지스트리 키 삭제|[방법: 레지스트리 키 삭제](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|레지스트리 키에서 값 읽기|[방법: 레지스트리 키 값 읽기](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 이 예제에서는 하위 키를 열고 `Software\MyCompany\Preferences` 값을 설정 하 고 `FontColor` 에 `"red"`입니다.  
  
 [!code-vb[VbVbalrMyRegistry#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.LocalMachine" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">레지스트리 읽기 및 쓰기(Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">보안 및 레지스트리</related>
      </Docs>
    </Member>
    <Member MemberName="PerformanceData">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey PerformanceData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey PerformanceData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PerformanceData As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ PerformanceData { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PerformanceData : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="HKEY_PERFORMANCE_DATA" /> 키에 대한 액세스를 제공하는 <see cref="T:Microsoft.Win32.RegistryKey" /> 형식을 반환합니다.</summary>
        <value><see cref="T:Microsoft.Win32.RegistryKey" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_PERFORMANCE_DATA` 소프트웨어 구성 요소에 대 한 성능 정보에 액세스 하는 데 사용 됩니다. 각 소프트웨어 구성 요소가 설치 되 고 실행 하는 동안 카운터 데이터를 기록 하는 경우 해당 개체 및 카운터에 대 한 키를 만듭니다. 레지스트리에 액세스할 수는 있지만이 데이터를 레지스트리에 저장 되지 않습니다. 통해 레지스트리 함수를 호출 하는 대신 `HKEY_PERFORMANCE_DATA` 적절 한 시스템 개체 관리자에서 데이터를 수집 하도록 시스템에 발생 합니다.  
  
 이 키는 Windows 98 시스템;에 없습니다. 호출 이외의 사용 하려고 합니다 `Name` 메서드는 throw는 <xref:System.IO.IOException>합니다.  
  
 이 키는 일반적으로 쓸 수 없습니다. throw에 하위 키를 만들려고 시도 <xref:System.IO.IOException>합니다.  
  
 <xref:System.Security.Permissions.RegistryPermission> 클래스에는 <xref:System.Security.Permissions> 네임 스페이스 레지스트리 변수에 대 한 액세스를 제어 합니다. <xref:System.Security.Permissions.RegistryPermission> 없이 코드에서 액세스할 수 있는 메모리 위치에 레지스트리 변수를 저장하면 안 됩니다. 마찬가지로, 권한을 부여할 때는 작업을 수행 하는 데 필요한 최소한의 권한을 부여 합니다.  
  
 레지스트리 권한 액세스 값은 <xref:System.Security.Permissions.RegistryPermissionAccess> 열거형에 의해 정의됩니다. 다음 표에서는 해당 멤버를 자세히 설명합니다.  
  
|값|설명|  
|-----------|-----------------|  
|AllAccess|만들기, 읽기 및 쓰기 레지스트리 변수에 액세스 합니다.|  
|만들기|레지스트리 변수에 대한 만들기 권한입니다.|  
|액세스 권한 없음|레지스트리 변수에 대한 권한이 없습니다.|  
|읽기|레지스트리 변수에 대한 읽기 권한입니다.|  
|Write|레지스트리 변수에 대한 쓰기 권한입니다.|  
  
 다음 표에서 관련 된 작업의 예제는 `My.Computer.Registry` 개체입니다.  
  
|대상|보기|  
|--------|---------|  
|레지스트리 키를 만들고 해당 값을 설정|[방법: 레지스트리 키 만들기 및 값 설정](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|레지스트리 키 삭제|[방법: 레지스트리 키 삭제](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|레지스트리 키에서 값 읽기|[방법: 레지스트리 키 값 읽기](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 이 예제에서는 값을 가져옵니다 `ThisSoftware` 에서 `MyCompany` 하위 키입니다.  
  
 [!code-vb[VbVbalrMyRegistry#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.PerformanceData" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">레지스트리 읽기 및 쓰기(Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">보안 및 레지스트리</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>레지스트리 키에 값을 씁니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string keyName, string valueName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetValue(string keyName, string valueName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (keyName As String, valueName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : string * string * obj -&gt; unit" Usage="registryProxy.SetValue (keyName, valueName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName"><see langword="String" />. 쓸 키의 이름입니다. 필수.</param>
        <param name="valueName"><see langword="String" />. 쓸 값의 이름입니다. 필수.</param>
        <param name="value"><see langword="Object" />. 쓸 값입니다. 필수.</param>
        <summary>레지스트리 키에 값을 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정 된 키 또는 값이 존재 하지 않는 경우 만들어집니다.  
  
 관련 된 작업의 예로 `My.Computer.Registry.SetValue` 메서드.  
  
|대상|보기|  
|--------|---------|  
|레지스트리 키의 값을 설정 합니다.|[방법: 레지스트리 키 만들기 및 값 설정](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
  
   
  
## Examples  
 값을 설정 하는이 예제 `FontColor` 키에서에 "red" `HKEY_LOCAL_MACHINE\Software\MyCompany\Preferences`합니다.  
  
 [!code-vb[VbVbalrMyRegistry#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" />가 <see langword="Nothing" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="keyName" />이 유효한 레지스트리 루트로 시작하지 않은 경우  
  
또는 
 <paramref name="valueName" />이 최대 허용 길이(255자)보다 긴 경우</exception>
        <exception cref="T:System.UnauthorizedAccessException"><see cref="T:Microsoft.Win32.RegistryKey" />가 읽기 전용이므로 쓸 수 없을 수 있습니다. 예를 들어, 루트 수준 노드이거나 쓰기 권한으로 열지 않은 경우일 수 있습니다.</exception>
        <exception cref="T:System.Security.SecurityException">사용자가 레지스트리 키를 만들거나 수정하는 데 필요한 사용 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">존재 하는 경우 지정된 된 레지스트리 키를 수정 하려면 또는 아직 없는 경우 레지스트리 키를 만들어야 합니다. 연관 된 열거형: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
        <altmember cref="T:Microsoft.Win32.RegistryValueKind" />
        <altmember cref="Overload:Microsoft.Win32.Registry.SetValue" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">레지스트리 읽기 및 쓰기(Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">보안 및 레지스트리</related>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string keyName, string valueName, object value, Microsoft.Win32.RegistryValueKind valueKind);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetValue(string keyName, string valueName, object value, valuetype Microsoft.Win32.RegistryValueKind valueKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (keyName As String, valueName As String, value As Object, valueKind As RegistryValueKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value, Microsoft::Win32::RegistryValueKind valueKind);" />
      <MemberSignature Language="F#" Value="member this.SetValue : string * string * obj * Microsoft.Win32.RegistryValueKind -&gt; unit" Usage="registryProxy.SetValue (keyName, valueName, value, valueKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="valueKind" Type="Microsoft.Win32.RegistryValueKind" />
      </Parameters>
      <Docs>
        <param name="keyName"><see langword="String" />. 쓸 키의 이름입니다. 필수.</param>
        <param name="valueName"><see langword="String" />. 쓸 값의 이름입니다. 필수.</param>
        <param name="value"><see langword="Object" />. 쓸 값입니다. 필수.</param>
        <param name="valueKind"><see cref="T:Microsoft.Win32.RegistryValueKind" />. 필수.</param>
        <summary>레지스트리 키에 값을 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정 된 키 또는 값이 존재 하지 않는 경우 만들어집니다.  
  
 관련 된 작업의 예로 `My.Computer.Registry.SetValue` 메서드.  
  
|대상|보기|  
|--------|---------|  
|레지스트리 키의 값을 설정 합니다.|[방법: 레지스트리 키 만들기 및 값 설정](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
  
   
  
## Examples  
 값을 설정 하는이 예제 `FontColor` 키에서에 "red" `HKEY_LOCAL_MACHINE\Software\MyCompany\Preferences`합니다.  
  
 [!code-vb[VbVbalrMyRegistry#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" />가 <see langword="Nothing" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="keyName" />이 유효한 레지스트리 루트로 시작하지 않은 경우  
  
또는 
 <paramref name="keyName" />이 최대 허용 길이(255자)보다 긴 경우  
  
또는 
<paramref name="value" />의 형식이 <paramref name="valueKind" />에 지정된 레지스트리 데이터 형식과 일치하지 않아 데이터가 올바르게 변환되지 않은 경우</exception>
        <exception cref="T:System.UnauthorizedAccessException"><see cref="T:Microsoft.Win32.RegistryKey" />가 읽기 전용이므로 쓸 수 없을 수 있습니다. 예를 들어, 루트 수준 노드이거나 쓰기 권한으로 열지 않은 경우일 수 있습니다.</exception>
        <exception cref="T:System.Security.SecurityException">사용자가 레지스트리 키를 만들거나 수정하는 데 필요한 사용 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">존재 하는 경우 지정된 된 레지스트리 키를 수정 하려면 또는 아직 없는 경우 레지스트리 키를 만들어야 합니다. 연관 된 열거형: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
        <altmember cref="T:Microsoft.Win32.RegistryValueKind" />
        <altmember cref="Overload:Microsoft.Win32.Registry.SetValue" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">레지스트리 읽기 및 쓰기(Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">보안 및 레지스트리</related>
      </Docs>
    </Member>
    <Member MemberName="Users">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey Users { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey Users" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.Users" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Users As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ Users { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Users : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.Users" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="HKEY_USERS" /> 키에 대한 액세스를 제공하는 <see cref="T:Microsoft.Win32.RegistryKey" /> 형식을 반환합니다.</summary>
        <value><see cref="T:Microsoft.Win32.RegistryKey" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_USERS` 첫 번째 사용자에 대 한 기본 설정을 저장할 주로 사용 됩니다.  
  
 <xref:System.Security.Permissions.RegistryPermission> 클래스에는 <xref:System.Security.Permissions> 네임 스페이스 레지스트리 변수에 대 한 액세스를 제어 합니다. <xref:System.Security.Permissions.RegistryPermission> 없이 코드에서 액세스할 수 있는 메모리 위치에 레지스트리 변수를 저장하면 안 됩니다. 마찬가지로, 권한을 부여할 때는 작업을 수행 하는 데 필요한 최소한의 권한을 부여 합니다.  
  
 레지스트리 권한 액세스 값은 <xref:System.Security.Permissions.RegistryPermissionAccess> 열거형에 의해 정의됩니다. 다음 표에서는 해당 멤버를 자세히 설명합니다.  
  
|값|레지스트리 변수에 대한 액세스 권한|  
|-----------|----------------------------------|  
|AllAccess|만들기, 읽기, 쓰기|  
|만들기|만들기|  
|액세스 권한 없음|권한이 없습니다.|  
|읽기|읽기|  
|Write|Write|  
  
 다음 표에서 관련 된 작업의 예제는 `My.Computer.Registry` 개체입니다.  
  
|**대상**|**참조**|  
|------------|-------------|  
|레지스트리 키를 만들고 해당 값을 설정|[방법: 레지스트리 키 만들기 및 값 설정](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|레지스트리 키 삭제|[방법: 레지스트리 키 삭제](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|레지스트리 키에서 값 읽기|[방법: 레지스트리 키 값 읽기](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 이 예제에서는 계산 하 고 레지스트리 키에서 값의 개수를 표시 합니다.  
  
 [!code-vb[VbVbalrMyRegistry#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.Users" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">개체(Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">레지스트리 읽기 및 쓰기(Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">보안 및 레지스트리</related>
      </Docs>
    </Member>
  </Members>
</Type>