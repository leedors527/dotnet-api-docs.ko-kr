<Type Name="DateAndTime" FullName="Microsoft.VisualBasic.DateAndTime">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ee81fb3379b6150389984bab8e498135f8f51793" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57931690" /></Metadata><TypeSignature Language="C#" Value="public sealed class DateAndTime" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DateAndTime extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.DateAndTime" />
  <TypeSignature Language="VB.NET" Value="Public Module DateAndTime" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateAndTime sealed" />
  <TypeSignature Language="F#" Value="type DateAndTime = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see langword="DateAndTime" /> 모듈에는 날짜 및 시간 작업에 사용되는 프로시저와 속성이 포함되어 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 모듈에는 Visual Basic 언어 키워드 및 현재 날짜 또는 시간, 날짜를 계산, 날짜 또는 시간을 반환, 날짜 또는 시간을 설정 또는 프로세스의 기간을 시간 하는 런타임 라이브러리 멤버를 지원 합니다.  
  
   
  
## Examples  
 이 예제에서는 `Today` 속성을 현재 시스템 날짜를 반환 합니다.  
  
```vb  
Dim thisDate As Date  
thisDate = Today   
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/dates-and-times-summary.md">날짜 및 시간 요약</related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md">키워드(Visual Basic)</related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md">Visual Basic 런타임 라이브러리 멤버</related>
  </Docs>
  <Members>
    <MemberGroup MemberName="DateAdd">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 시간 간격이 추가된 날짜 및 시간 값이 포함된 <see langword="Date" /> 값을 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static DateTime DateAdd (Microsoft.VisualBasic.DateInterval Interval, double Number, DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateAdd(valuetype Microsoft.VisualBasic.DateInterval Interval, float64 Number, valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateAdd (Interval As DateInterval, Number As Double, DateValue As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateAdd(Microsoft::VisualBasic::DateInterval Interval, double Number, DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member DateAdd : Microsoft.VisualBasic.DateInterval * double * DateTime -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateAdd (Interval, Number, DateValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="Microsoft.VisualBasic.DateInterval" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Number" Type="System.Double" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="DateValue" Type="System.DateTime" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Interval">필수 요소. 추가할 시간 간격을 나타내는 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 열거형 값 또는 문자열 식입니다.</param>
        <param name="Number">필수 요소. 더할 간격의 수를 나타내는 부동 소수점 식입니다. 미래의 날짜/시간 값을 구하는 경우에는 양수이고 과거의 날짜/시간 값을 구하는 경우에는 음수입니다. <paramref name="Interval" />이 시간, 분 또는 초로 지정되는 경우에는 소수 부분이 포함될 수 있습니다. 다른 <paramref name="Interval" /> 값의 경우에 <paramref name="Number" />의 소수 부분은 무시됩니다.</param>
        <param name="DateValue">필수 요소. 간격을 더할 날짜와 시간을 나타내는 식입니다. <paramref name="DateValue" /> 자체는 호출 프로그램에서 변경되지 않습니다.</param>
        <summary>지정된 시간 간격이 추가된 날짜 및 시간 값이 포함된 값을 반환합니다.</summary>
        <returns>지정된 시간 간격이 추가된 날짜 및 시간 값이 포함된 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 `DateAdd` 함수를 추가 하거나 날짜에서 지정 된 시간 간격을 뺍니다. 예를 들어, 이제 오늘 또는 앞 45 분에서 30 일 날짜를 계산할 수 있습니다.  
  
 날짜를 추가 하려면 `DateValue`를 사용할 수 있습니다 `DateInterval.Day`를 `DateInterval.DayOfYear`, 또는 `DateInterval.Weekday`합니다. 이 때문에 동등한 것으로 처리 됩니다 `DayOfYear` 및 `Weekday` 의미 있는 간격 없는 합니다.  
  
 `DateAdd` 함수는 잘못 된 날짜를 반환 하지 않습니다. 필요한 경우 결과 날짜의 일 부분 결과 결과 연도 월의 마지막 날 하향 조정 됩니다. 다음 예제에서는 1 월 31 일에 1 개월을 추가합니다.  
  
```vb  
Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)  
```  
  
 이 예에서 `DateAdd` 반환 `#2/28/1995#`아니라 `#2/31/1995#`합니다. 하는 경우 `DateValue` 됩니다 `#1/31/1996#`를 반환 `#2/29/1996#` 1996 윤년 인지 하기 때문에.  
  
> [!NOTE]
>  `DateAdd` 현재 달력 설정을 사용 합니다 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 의 속성을 <xref:System.Globalization.CultureInfo> 클래스는 <xref:System.Globalization> 네임 스페이스입니다. 기본값 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 여 값을 결정 **Control Panel** 설정 합니다.  
  
 하므로 모든 `Date` 값을 지원 한 <xref:System.DateTime> 구조를 해당 메서드에 제공 시간 간격을 추가할 때 추가 옵션입니다. 예를 들어 일에 가장 가까운 밀리초로 반올림의 소수를 추가할 수 있습니다는 `Date` 같이 변수:  
  
```vb  
Dim NextTime As Date = Now        ' Current date and time.  
NextTime = NextTime.AddDays(3.4)  ' Increment by 3 2/5 days.  
```  
  
 `Interval` 인수의 다음 설정 중 하나를 사용할 수 있습니다.  
  
|열거형 값|문자열|시간 간격의 단위를 추가 하려면|  
|-----------------------|------------|----------------------------------|  
|`DateInterval.Day`|일|Day 정수 계열 값 잘림|  
|`DateInterval.DayOfYear`|y|Day 정수 계열 값 잘림|  
|`DateInterval.Hour`|h|시간입니다. 밀리초 단위로 반올림 반올림|  
|`DateInterval.Minute`|n|분입니다. 밀리초 단위로 반올림 반올림|  
|`DateInterval.Month`|분|개월 정수 계열 값 잘림|  
|`DateInterval.Quarter`|q|분기; 정수 계열 값 잘림|  
|`DateInterval.Second`|초|두 번째; 밀리초 단위로 반올림 반올림|  
|`DateInterval.Weekday`|주|Day 정수 계열 값 잘림|  
|`DateInterval.WeekOfYear`|ww|주; 정수 계열 값 잘림|  
|`DateInterval.Year`|yyyy|연도입니다. 정수 계열 값 잘림|  
  
   
  
## Examples  
 이 예에서는 날짜를 사용 하 여는 `DateAdd` 함수, 지정된 된 수의 개월 나중에 해당 날짜를 표시 합니다.  
  
 [!code-vb[VbVbalrFunctions#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><paramref name="DateValue" />가 <see langword="Date" />로 강제 변환될 수 없습니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="Interval" />가 잘못된 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">계산된 날짜가 0001년 1월 1일 00:00:00시 이전 또는 9999년 12월 31일 23:59:59시 이후입니다.</exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">데이터 형식 요약(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static DateTime DateAdd (string Interval, double Number, object DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateAdd(string Interval, float64 Number, object DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateAdd (Interval As String, Number As Double, DateValue As Object) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateAdd(System::String ^ Interval, double Number, System::Object ^ DateValue);" />
      <MemberSignature Language="F#" Value="static member DateAdd : string * double * obj -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateAdd (Interval, Number, DateValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Number" Type="System.Double" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="DateValue" Type="System.Object" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Interval">필수 요소. 추가할 시간 간격을 나타내는 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 열거형 값 또는 문자열 식입니다.</param>
        <param name="Number">필수 요소. 더할 간격의 수를 나타내는 부동 소수점 식입니다. <paramref name="Number" />는 미래의 날짜/시간 값을 구하는 경우에는 양수이고 과거의 날짜/시간 값을 구하는 경우에는 음수입니다. <paramref name="Interval" />이 시간, 분 또는 초로 지정되는 경우에는 소수 부분이 포함될 수 있습니다. 다른 <paramref name="Interval" /> 값의 경우에 <paramref name="Number" />의 소수 부분은 무시됩니다.</param>
        <param name="DateValue">필수 요소. 간격을 더할 날짜와 시간을 나타내는 식입니다. <paramref name="DateValue" /> 자체는 호출 프로그램에서 변경되지 않습니다.</param>
        <summary>지정된 시간 간격이 추가된 날짜 및 시간 값이 포함된 값을 반환합니다.</summary>
        <returns>지정된 시간 간격이 추가된 날짜 및 시간 값이 포함된 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 `DateAdd` 함수를 추가 하거나 날짜에서 지정 된 시간 간격을 뺍니다. 예를 들어, 이제 오늘 또는 앞 45 분에서 30 일 날짜를 계산할 수 있습니다.  
  
 날짜를 추가 하려면 `DateValue`를 사용할 수 있습니다 `DateInterval.Day`를 `DateInterval.DayOfYear`, 또는 `DateInterval.Weekday`합니다. 이 때문에 동등한 것으로 처리 됩니다 `DayOfYear` 및 `Weekday` 의미 있는 간격 없는 합니다.  
  
 `DateAdd` 함수는 잘못 된 날짜를 반환 하지 않습니다. 필요한 경우 결과 날짜의 일 부분 결과 결과 연도 월의 마지막 날 하향 조정 됩니다. 다음 예제에서는 1 월 31 일에 1 개월을 추가합니다.  
  
```vb  
Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)  
```  
  
 이 예에서 `DateAdd` 반환 `#2/28/1995#`아니라 `#2/31/1995#`합니다. 하는 경우 `DateValue` 됩니다 `#1/31/1996#`를 반환 `#2/29/1996#` 1996 윤년 인지 하기 때문에.  
  
> [!NOTE]
>  `DateAdd` 현재 달력 설정을 사용 합니다 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 의 속성을 <xref:System.Globalization.CultureInfo> 클래스는 <xref:System.Globalization> 네임 스페이스입니다. 기본값 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 여 값을 결정 **Control Panel** 설정 합니다.  
  
 하므로 모든 `Date` 값을 지원 한 <xref:System.DateTime> 구조를 해당 메서드에 제공 시간 간격을 추가할 때 추가 옵션입니다. 예를 들어 일에 가장 가까운 밀리초로 반올림의 소수를 추가할 수 있습니다는 `Date` 같이 변수:  
  
```vb  
Dim NextTime As Date = Now        ' Current date and time.  
NextTime = NextTime.AddDays(3.4)  ' Increment by 3 2/5 days.  
```  
  
 `Interval` 인수의 다음 설정 중 하나를 사용할 수 있습니다.  
  
|열거형 값|문자열|시간 간격의 단위를 추가 하려면|  
|-----------------------|------------|----------------------------------|  
|`DateInterval.Day`|일|Day 정수 계열 값 잘림|  
|`DateInterval.DayOfYear`|y|Day 정수 계열 값 잘림|  
|`DateInterval.Hour`|h|시간입니다. 밀리초 단위로 반올림 반올림|  
|`DateInterval.Minute`|n|분입니다. 밀리초 단위로 반올림 반올림|  
|`DateInterval.Month`|분|개월 정수 계열 값 잘림|  
|`DateInterval.Quarter`|q|분기; 정수 계열 값 잘림|  
|`DateInterval.Second`|초|두 번째; 밀리초 단위로 반올림 반올림|  
|`DateInterval.Weekday`|주|Day 정수 계열 값 잘림|  
|`DateInterval.WeekOfYear`|ww|주; 정수 계열 값 잘림|  
|`DateInterval.Year`|yyyy|연도입니다. 정수 계열 값 잘림|  
  
   
  
## Examples  
 이 예에서는 날짜를 사용 하 여는 `DateAdd` 함수, 지정된 된 수의 개월 나중에 해당 날짜를 표시 합니다.  
  
 [!code-vb[VbVbalrFunctions#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><paramref name="DateValue" />가 <see langword="Date" />로 강제 변환될 수 없습니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="Interval" />가 잘못된 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">계산된 날짜가 0001년 1월 1일 00:00:00시 이전 또는 9999년 12월 31일 23:59:59시 이후입니다.</exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">데이터 형식 요약(Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateDiff">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>두 <see langword="Date" /> 값 사이의 시간 간격 수를 지정한 값을 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static long DateDiff (Microsoft.VisualBasic.DateInterval Interval, DateTime Date1, DateTime Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 DateDiff(valuetype Microsoft.VisualBasic.DateInterval Interval, valuetype System.DateTime Date1, valuetype System.DateTime Date2, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateDiff (Interval As DateInterval, Date1 As DateTime, Date2 As DateTime, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Long" />
      <MemberSignature Language="F#" Value="static member DateDiff : Microsoft.VisualBasic.DateInterval * DateTime * DateTime * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int64" Usage="Microsoft.VisualBasic.DateAndTime.DateDiff (Interval, Date1, Date2, DayOfWeek, WeekOfYear)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="Microsoft.VisualBasic.DateInterval" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Date1" Type="System.DateTime" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Date2" Type="System.DateTime" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Interval">필수 요소. <paramref name="Date1" />과 <paramref name="Date2" /> 사이의 시간차 단위로 사용할 시간 간격을 나타내는 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 열거형 값 또는 문자열 식입니다.</param>
        <param name="Date1">필수 요소. 계산에 사용할 첫째 날짜/시간 값입니다.</param>
        <param name="Date2">필수 요소. 계산에 사용할 둘째 날짜/시간 값입니다.</param>
        <param name="DayOfWeek">선택 사항입니다. 주의 첫째 요일을 지정하는 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />가 사용됩니다.</param>
        <param name="WeekOfYear">선택 사항입니다. 연도의 첫째 주를 지정하는 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />가 사용됩니다.</param>
        <summary>두 <see langword="Date" /> 값 사이의 시간 간격 수를 지정한 long 값을 반환합니다.</summary>
        <returns>두 <see langword="Date" /> 값 사이의 시간 간격 수를 지정한 long 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 `DateDiff` 두 날짜/시간 값 사이 있는 개수 지정 된 시간 간격을 결정 하는 함수입니다. 예를 들어 사용할 수 있습니다 `DateDiff` 현재 연도의 끝 사이의 주 수 또는 두 날짜 사이의 일 수를 계산 합니다.  
  
## <a name="behavior"></a>동작  
  
-   **매개 변수 처리입니다.** `DateDiff` 값을 빼고 `Date1` 값에서 `Date2` 차이 생성 합니다. 호출 프로그램에서 모두 값이 변경 됩니다.  
  
-   **값을 반환 합니다.** 때문에 `Date1` 하 고 `Date2` 가지는 `Date` 데이터 형식 이므로 저장 날짜 및 시간 값 100 나노초 눈금으로 시스템 타이머에서. 그러나 `DateDiff` 으로 시간 간격의 수를 항상 반환을 `Long` 값입니다.  
  
     하는 경우 `Date1` 는 이후 날짜 및 시간 보다 나타냅니다 `Date2`, `DateDiff` 음수를 반환 합니다.  
  
-   **일 간격입니다.** 경우 `Interval` 로 설정 되어 `DateInterval.DayOfYear`에서 처리 됩니다 동일 `DateInterval.Day`이므로 `DayOfYear` 시간 간격에 대 한 의미 있는 단위가 아닙니다.  
  
-   **주 간격입니다.** 하는 경우 `Interval` 로 설정 된 `DateInterval.WeekOfYear`, 반환 값은 첫 번째 요일 포함 하는 주 사이의 주 수를 나타내는 `Date1` 및 첫 번째 요일을 포함 하는 주 `Date2`합니다. 다음 예제에서는 다양 한 결과로 생성 되는 방식을 `DateInterval.Weekday`입니다.  
  
     [!code-vb[VbVbalrFunctions#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#60)]  
  
     위의 예에서 `DateDiff` 에 0을 반환 합니다 `wD` 두 날짜 간의 차이 7 일 이내 이지만 1을 반환 하므로 `wY` 해당 달력의 첫 번째 날에는 7 일간 차이가 있기 때문에 주 있습니다.  
  
-   **더 큰 간격입니다.** 하는 경우 `Interval` 로 설정 됩니다 `DateInterval.Year`, 반환 값의 연도 부분에서 순수 하 게 계산 됩니다 `Date1` 고 `Date2`합니다. 마찬가지로, 반환 값 `DateInterval.Month` 인수의 한 연도 및 월 부분에서 순수한 계산 `DateInterval.Quarter` 두 날짜를 포함 하는 분기에서.  
  
     예를 들어, 다음 연도의 1 월 1 일에 12 월 31 일을 비교할 때 `DateDiff` 에 대 한 1을 반환 `DateInterval.Year`를 `DateInterval.Quarter`, 또는 `DateInterval.Month`하루만에 경과 하는 경우에 합니다.  
  
     여러 연대는 일본어와 같은 문화권을 `DateDiff` 메서드 두 개 이상 연대에 걸쳐 있는 경우 연도 차이 반환 하지 않습니다. 대신 반환한 값의 차이 계산할 수 있습니다 합니다 <xref:System.DateTime.Year%2A> 속성을 다음 예와에서 같이: `date2.Year - date1.Year`합니다.  
  
-   **기타 간격입니다.** 이후 모든 `Date` 값을 지원는 <xref:System.DateTime> 구조를 해당 메서드 제공 시간 간격을 찾는 추가 옵션입니다. 예를 들어 사용할 수 있습니다는 `Subtract` 메서드 오버 로드 된 중: <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> 뺍니다를 <xref:System.TimeSpan> 에서 `Date` 두 `Date` 값, 및 <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> 뺍니다를 `Date` 값 반환할는 <xref:System.TimeSpan>합니다. 다음 예제와 같이 걸리는 시간을 밀리초 단위로 확인 하는 프로세스의 시간 수 있습니다.  
  
     [!code-vb[VbVbalrFunctions#61](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#61)]  
  
 `Interval` 인수의 다음 설정 중 하나를 사용할 수 있습니다.  
  
|열거형 값|문자열 값|단위의 시간 차이|  
|-----------------------|------------------|-----------------------------|  
|`DateInterval.Day`|"d"|Day|  
|`DateInterval.DayOfYear`|"y"|Day|  
|`DateInterval.Hour`|"h"|Hour|  
|`DateInterval.Minute`|"n"|Minute|  
|`DateInterval.Month`|"m"|월|  
|`DateInterval.Quarter`|"q"|분기|  
|`DateInterval.Second`|"s"|Second|  
|`DateInterval.Weekday`|"w"|주|  
|`DateInterval.WeekOfYear`|"ww"|주|  
|`DateInterval.Year`|"yyyy"|Year|  
  
 `DayOfWeek` 인수의 다음 설정 중 하나를 사용할 수 있습니다.  
  
|열거형 값|값|설명|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|0|시스템 설정에 지정 된 주의 첫째 요일|  
|`FirstDayOfWeek.Sunday`|1|일요일입니다 (기본값)|  
|`FirstDayOfWeek.Monday`|2|월요일 (ISO 8601 표준, 3.17)|  
|`FirstDayOfWeek.Tuesday`|3|화요일|  
|`FirstDayOfWeek.Wednesday`|4|수요일|  
|`FirstDayOfWeek.Thursday`|5|목요일|  
|`FirstDayOfWeek.Friday`|6|금요일|  
|`FirstDayOfWeek.Saturday`|7|토요일|  
  
 `WeekOfYear` 인수의 다음 설정 중 하나를 사용할 수 있습니다.  
  
|열거형 값|값|설명|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|0|시스템 설정에 지정 된 연도의 첫째 주|  
|`FirstWeekOfYear.Jan1`|1|주를 1 월 1 일 (기본값)|  
|`FirstWeekOfYear.FirstFourDays`|2|4 일 이상 (ISO 8601 표준, 3.17 준수 함) 새 연도에 있는 주|  
|`FirstWeekOfYear.FirstFullWeek`|3|새 해에서 첫 번째 전체 주|  
  
   
  
## Examples  
 이 예제에서는 `DateDiff` 오늘과 지정 된 날짜 사이의 일 수를 표시 하는 함수입니다.  
  
 [!code-vb[VbVbalrFunctions#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="Date1" />, <paramref name="Date2" /> 또는 <paramref name="DayofWeek" />가 범위를 벗어났습니다.</exception>
        <exception cref="T:System.InvalidCastException"><paramref name="Date1" /> 또는 <paramref name="Date2" />가 잘못된 형식입니다.</exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">데이터 형식 요약(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static long DateDiff (string Interval, object Date1, object Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 DateDiff(string Interval, object Date1, object Date2, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateDiff (Interval As String, Date1 As Object, Date2 As Object, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Long" />
      <MemberSignature Language="F#" Value="static member DateDiff : string * obj * obj * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int64" Usage="Microsoft.VisualBasic.DateAndTime.DateDiff (Interval, Date1, Date2, DayOfWeek, WeekOfYear)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Date1" Type="System.Object" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Date2" Type="System.Object" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Interval">필수 요소. <paramref name="Date1" />과 <paramref name="Date2" /> 사이의 시간차 단위로 사용할 시간 간격을 나타내는 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 열거형 값 또는 문자열 식입니다.</param>
        <param name="Date1">필수 요소. 계산에 사용할 첫째 날짜/시간 값입니다.</param>
        <param name="Date2">필수 요소. 계산에 사용할 둘째 날짜/시간 값입니다.</param>
        <param name="DayOfWeek">선택 사항입니다. 주의 첫째 요일을 지정하는 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />가 사용됩니다.</param>
        <param name="WeekOfYear">선택 사항입니다. 연도의 첫째 주를 지정하는 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />가 사용됩니다.</param>
        <summary>두 <see langword="Date" /> 값 사이의 시간 간격 수를 지정한 long 값을 반환합니다.</summary>
        <returns>두 <see langword="Date" /> 값 사이의 시간 간격 수를 지정한 long 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 `DateDiff` 두 날짜/시간 값 사이 있는 개수 지정 된 시간 간격을 결정 하는 함수입니다. 예를 들어 사용할 수 있습니다 `DateDiff` 현재 연도의 끝 사이의 주 수 또는 두 날짜 사이의 일 수를 계산 합니다.  
  
## <a name="behavior"></a>동작  
  
-   **매개 변수 처리입니다.** `DateDiff` 값을 빼고 `Date1` 값에서 `Date2` 차이 생성 합니다. 호출 프로그램에서 모두 값이 변경 됩니다.  
  
-   **값을 반환 합니다.** 때문에 `Date1` 하 고 `Date2` 가지는 `Date` 데이터 형식 이므로 저장 날짜 및 시간 값 100 나노초 눈금으로 시스템 타이머에서. 그러나 `DateDiff` 으로 시간 간격의 수를 항상 반환을 `Long` 값입니다.  
  
     하는 경우 `Date1` 는 이후 날짜 및 시간 보다 나타냅니다 `Date2`, `DateDiff` 음수를 반환 합니다.  
  
-   **일 간격입니다.** 경우 `Interval` 로 설정 되어 `DateInterval.DayOfYear`에서 처리 됩니다 동일 `DateInterval.Day`이므로 `DayOfYear` 시간 간격에 대 한 의미 있는 단위가 아닙니다.  
  
-   **주 간격입니다.** 하는 경우 `Interval` 로 설정 된 `DateInterval.WeekOfYear`, 반환 값은 첫 번째 요일 포함 하는 주 사이의 주 수를 나타내는 `Date1` 및 첫 번째 요일을 포함 하는 주 `Date2`합니다. 다음 예제에서는 다양 한 결과로 생성 되는 방식을 `DateInterval.Weekday`입니다.  
  
     [!code-vb[VbVbalrFunctions#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#60)]  
  
     위의 예에서 `DateDiff` 에 0을 반환 합니다 `wD` 두 날짜 간의 차이 7 일 이내 이지만 1을 반환 하므로 `wY` 해당 달력의 첫 번째 날에는 7 일간 차이가 있기 때문에 주 있습니다.  
  
-   **더 큰 간격입니다.** 하는 경우 `Interval` 로 설정 됩니다 `DateInterval.Year`, 반환 값의 연도 부분에서 순수 하 게 계산 됩니다 `Date1` 고 `Date2`합니다. 마찬가지로, 반환 값 `DateInterval.Month` 인수의 한 연도 및 월 부분에서 순수한 계산 `DateInterval.Quarter` 두 날짜를 포함 하는 분기에서.  
  
     예를 들어, 다음 연도의 1 월 1 일에 12 월 31 일을 비교할 때 `DateDiff` 에 대 한 1을 반환 `DateInterval.Year`를 `DateInterval.Quarter`, 또는 `DateInterval.Month`하루만에 경과 하는 경우에 합니다.  
  
     여러 연대는 일본어와 같은 문화권을 `DateDiff` 메서드 두 개 이상 연대에 걸쳐 있는 경우 연도 차이 반환 하지 않습니다. 대신 반환한 값의 차이 계산할 수 있습니다 합니다 <xref:System.DateTime.Year%2A> 속성을 다음 예와에서 같이: `date2.Year - date1.Year`합니다.  
  
-   **기타 간격입니다.** 이후 모든 `Date` 값을 지원는 <xref:System.DateTime> 구조를 해당 메서드 제공 시간 간격을 찾는 추가 옵션입니다. 예를 들어 사용할 수 있습니다는 `Subtract` 메서드 오버 로드 된 중: <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> 뺍니다를 <xref:System.TimeSpan> 에서 `Date` 두 `Date` 값, 및 <xref:System.DateTime.Subtract%2A?displayProperty=nameWithType> 뺍니다를 `Date` 값 반환할는 <xref:System.TimeSpan>합니다. 다음 예제와 같이 걸리는 시간을 밀리초 단위로 확인 하는 프로세스의 시간 수 있습니다.  
  
     [!code-vb[VbVbalrFunctions#61](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#61)]  
  
 `Interval` 인수의 다음 설정 중 하나를 사용할 수 있습니다.  
  
|열거형 값|문자열 값|단위의 시간 차이|  
|-----------------------|------------------|-----------------------------|  
|`DateInterval.Day`|"d"|Day|  
|`DateInterval.DayOfYear`|"y"|Day|  
|`DateInterval.Hour`|"h"|Hour|  
|`DateInterval.Minute`|"n"|Minute|  
|`DateInterval.Month`|"m"|월|  
|`DateInterval.Quarter`|"q"|분기|  
|`DateInterval.Second`|"s"|Second|  
|`DateInterval.Weekday`|"w"|주|  
|`DateInterval.WeekOfYear`|"ww"|주|  
|`DateInterval.Year`|"yyyy"|Year|  
  
 `DayOfWeek` 인수의 다음 설정 중 하나를 사용할 수 있습니다.  
  
|열거형 값|값|설명|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|0|시스템 설정에 지정 된 주의 첫째 요일|  
|`FirstDayOfWeek.Sunday`|1|일요일입니다 (기본값)|  
|`FirstDayOfWeek.Monday`|2|월요일 (ISO 8601 표준, 3.17)|  
|`FirstDayOfWeek.Tuesday`|3|화요일|  
|`FirstDayOfWeek.Wednesday`|4|수요일|  
|`FirstDayOfWeek.Thursday`|5|목요일|  
|`FirstDayOfWeek.Friday`|6|금요일|  
|`FirstDayOfWeek.Saturday`|7|토요일|  
  
 `WeekOfYear` 인수의 다음 설정 중 하나를 사용할 수 있습니다.  
  
|열거형 값|값|설명|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|0|시스템 설정에 지정 된 연도의 첫째 주|  
|`FirstWeekOfYear.Jan1`|1|주를 1 월 1 일 (기본값)|  
|`FirstWeekOfYear.FirstFourDays`|2|4 일 이상 (ISO 8601 표준, 3.17 준수 함) 새 연도에 있는 주|  
|`FirstWeekOfYear.FirstFullWeek`|3|새 해에서 첫 번째 전체 주|  
  
   
  
## Examples  
 이 예제에서는 `DateDiff` 오늘과 지정 된 날짜 사이의 일 수를 표시 하는 함수입니다.  
  
 [!code-vb[VbVbalrFunctions#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="Date1" />, <paramref name="Date2" /> 또는 <paramref name="DayofWeek" />가 범위를 벗어났습니다.</exception>
        <exception cref="T:System.InvalidCastException"><paramref name="Date1" /> 또는 <paramref name="Date2" />가 잘못된 형식입니다.</exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">데이터 형식 요약(Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DatePart">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 <see langword="Date" /> 값의 지정된 구성 요소를 포함하는 정수 값을 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static int DatePart (Microsoft.VisualBasic.DateInterval Interval, DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear FirstWeekOfYearValue = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 DatePart(valuetype Microsoft.VisualBasic.DateInterval Interval, valuetype System.DateTime DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue, valuetype Microsoft.VisualBasic.FirstWeekOfYear FirstWeekOfYearValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DatePart (Interval As DateInterval, DateValue As DateTime, Optional FirstDayOfWeekValue As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional FirstWeekOfYearValue As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Integer" />
      <MemberSignature Language="F#" Value="static member DatePart : Microsoft.VisualBasic.DateInterval * DateTime * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.DatePart (Interval, DateValue, FirstDayOfWeekValue, FirstWeekOfYearValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="Microsoft.VisualBasic.DateInterval" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="DateValue" Type="System.DateTime" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="FirstDayOfWeekValue" Type="Microsoft.VisualBasic.FirstDayOfWeek" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="FirstWeekOfYearValue" Type="Microsoft.VisualBasic.FirstWeekOfYear" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Interval">필수 요소. 반환할 날짜/시간 값의 부분을 나타내는 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 열거형 값 또는 문자열 식입니다.</param>
        <param name="DateValue">필수 요소. 계산할 <see langword="Date" /> 값입니다.</param>
        <param name="FirstDayOfWeekValue">선택 사항입니다. 주의 첫째 요일을 지정하는 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />가 사용됩니다.</param>
        <param name="FirstWeekOfYearValue">선택 사항입니다. 연도의 첫째 주를 지정하는 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />가 사용됩니다.</param>
        <summary>지정된 <see langword="Date" /> 값의 지정된 구성 요소를 포함하는 정수 값을 반환합니다.</summary>
        <returns>지정된 <see langword="Date" /> 값의 지정된 구성 요소가 포함된 정수 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 `DatePart` 함수는 날짜/시간 값을 평가 하 고 특정 구성 요소를 반환 합니다. 예를 들어 사용할 수 있습니다 `DatePart` 주 또는 현재 시간을 계산 하 합니다.  
  
 선택 하면 `DateInterval.Weekday` 에 대 한 합니다 `Interval` 인수, 반환된 값은의 값과 일치 합니다 `FirstDayOfWeek` 열거형입니다. 선택 하면 `DateInterval.WeekOfYear`, `DatePart` 사용 합니다 <xref:System.Globalization.Calendar> 및 <xref:System.Globalization.CultureInfo> 클래스는 <xref:System.Globalization> 현재 설정을 확인 하려면 네임 스페이스입니다.  
  
 `FirstDayOfWeekValue` 인수를 사용 하는 계산에 영향을 줍니다 합니다 `DateInterval.Weekday` 하 고 `DateInterval.WeekOfYear` `Interval` 설정. 합니다 `FirstWeekOfYearValue` 인수를 지정 하는 계산에 영향을 줍니다 `DateInterval.WeekOfYear` 에 대 한 `Interval`합니다.  
  
 이후 모든 `Date` 값을 지원를 <xref:System.DateTime> 구조를 해당 메서드에 제공 날짜/시간 부분을 검색할 수 있는 추가 옵션이 있습니다. 전체 날짜 값을 가져올 수는 예를 들어를 `Date` 시간 값으로 변수를 다음과 같이 자정으로 설정 합니다.  
  
```vb  
Dim CurrDatTim As Date = Now   ' Current date and time.  
Dim LastMidnight As Date = CurrDatTim.Date   ' At midnight.  
```  
  
 `Interval` 인수의 다음 설정 중 하나를 사용할 수 있습니다.  
  
|열거형 값|문자열|반환할 날짜/시간 값의 부분|  
|-----------------------|------------|----------------------------------------|  
|`DateInterval.Day`|일|월간 일자(1~31)|  
|`DateInterval.DayOfYear`|y|연간 일자(1~366)|  
|`DateInterval.Hour`|h|Hour|  
|`DateInterval.Minute`|n|Minute|  
|`DateInterval.Month`|분|월|  
|`DateInterval.Quarter`|q|분기|  
|`DateInterval.Second`|초|Second|  
|`DateInterval.Weekday`|주|요일(1~7)|  
|`DateInterval.WeekOfYear`|ww|연간 주(1~53)|  
|`DateInterval.Year`|yyyy|Year|  
  
 `FirstDayOfWeekValue` 인수의 다음 설정 중 하나를 사용할 수 있습니다.  
  
|열거형 값|값|설명|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|0|시스템 설정에 지정 된 주의 첫째 요일|  
|`FirstDayOfWeek.Sunday`|1|일요일입니다 (기본값)|  
|`FirstDayOfWeek.Monday`|2|월요일 (ISO 8601 표준, 3.17)|  
|`FirstDayOfWeek.Tuesday`|3|화요일|  
|`FirstDayOfWeek.Wednesday`|4|수요일|  
|`FirstDayOfWeek.Thursday`|5|목요일|  
|`FirstDayOfWeek.Friday`|6|금요일|  
|`FirstDayOfWeek.Saturday`|7|토요일|  
  
 `FirstWeekOfYearValue` 인수의 다음 설정 중 하나를 사용할 수 있습니다.  
  
|열거형 값|값|설명|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|0|시스템 설정에 지정 된 연도의 첫째 주|  
|`FirstWeekOfYear.Jan1`|1|주를 1 월 1 일 (기본값)|  
|`FirstWeekOfYear.FirstFourDays`|2|4 일 이상 (ISO 8601 표준, 3.17 준수 함) 새 연도에 있는 주|  
|`FirstWeekOfYear.FirstFullWeek`|3|새 해 첫 번째 전체 주|  
  
   
  
## Examples  
 이 예에서는 날짜를 사용 하 여는 `DatePart` 함수에서 발생 하는 연도의 분기를 표시 합니다.  
  
 [!code-vb[VbVbalrFunctions#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="Interval" />가 잘못된 경우</exception>
        <exception cref="T:System.InvalidCastException"><paramref name="DateValue" />가 <see langword="Date" />로 강제 변환될 수 없습니다.</exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="N:System" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">데이터 형식 요약(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static int DatePart (string Interval, object DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 DatePart(string Interval, object DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function DatePart (Interval As String, DateValue As Object, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Optional WeekOfYear As FirstWeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1) As Integer" />
      <MemberSignature Language="F#" Value="static member DatePart : string * obj * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.DatePart (Interval, DateValue, DayOfWeek, WeekOfYear)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Interval" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="DateValue" Type="System.Object" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Interval">필수 요소. 반환할 날짜/시간 값의 부분을 나타내는 <see cref="T:Microsoft.VisualBasic.DateInterval" /> 열거형 값 또는 문자열 식입니다.</param>
        <param name="DateValue">필수 요소. 계산할 <see langword="Date" /> 값입니다.</param>
        <param name="DayOfWeek">선택 사항입니다. 주의 첫째 요일을 지정하는 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />가 사용됩니다.</param>
        <param name="WeekOfYear">선택 사항입니다. 연도의 첫째 주를 지정하는 <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />가 사용됩니다.</param>
        <summary>지정된 <see langword="Date" /> 값의 지정된 구성 요소가 포함된 값을 반환합니다.</summary>
        <returns>지정된 <see langword="Date" /> 값의 지정된 구성 요소가 포함된 정수 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 `DatePart` 함수는 날짜/시간 값을 평가 하 고 특정 구성 요소를 반환 합니다. 예를 들어 사용할 수 있습니다 `DatePart` 주 또는 현재 시간을 계산 하 합니다.  
  
 선택 하면 `DateInterval.Weekday` 에 대 한 합니다 `Interval` 인수, 반환된 값은의 값과 일치 합니다 `FirstDayOfWeek` 열거형입니다. 선택 하면 `DateInterval.WeekOfYear`, `DatePart` 사용 합니다 <xref:System.Globalization.Calendar> 및 <xref:System.Globalization.CultureInfo> 클래스는 <xref:System.Globalization> 현재 설정을 확인 하려면 네임 스페이스입니다.  
  
 `FirstDayOfWeekValue` 인수를 사용 하는 계산에 영향을 줍니다 합니다 `DateInterval.Weekday` 하 고 `DateInterval.WeekOfYear` `Interval` 설정. 합니다 `FirstWeekOfYearValue` 인수를 지정 하는 계산에 영향을 줍니다 `DateInterval.WeekOfYear` 에 대 한 `Interval`합니다.  
  
 이후 모든 `Date` 값을 지원를 <xref:System.DateTime> 구조를 해당 메서드에 제공 날짜/시간 부분을 검색할 수 있는 추가 옵션이 있습니다. 전체 날짜 값을 가져올 수는 예를 들어를 `Date` 시간 값으로 변수를 다음과 같이 자정으로 설정 합니다.  
  
```vb  
Dim CurrDatTim As Date = Now   ' Current date and time.  
Dim LastMidnight As Date = CurrDatTim.Date   ' At midnight.  
```  
  
 `Interval` 인수의 다음 설정 중 하나를 사용할 수 있습니다.  
  
|열거형 값|문자열|반환할 날짜/시간 값의 부분|  
|-----------------------|------------|----------------------------------------|  
|`DateInterval.Day`|일|월간 일자(1~31)|  
|`DateInterval.DayOfYear`|y|연간 일자(1~366)|  
|`DateInterval.Hour`|h|Hour|  
|`DateInterval.Minute`|n|Minute|  
|`DateInterval.Month`|분|월|  
|`DateInterval.Quarter`|q|분기|  
|`DateInterval.Second`|초|Second|  
|`DateInterval.Weekday`|주|요일(1~7)|  
|`DateInterval.WeekOfYear`|ww|연간 주(1~53)|  
|`DateInterval.Year`|yyyy|Year|  
  
 `FirstDayOfWeekValue` 인수의 다음 설정 중 하나를 사용할 수 있습니다.  
  
|열거형 값|값|설명|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|0|시스템 설정에 지정 된 주의 첫째 요일|  
|`FirstDayOfWeek.Sunday`|1|일요일입니다 (기본값)|  
|`FirstDayOfWeek.Monday`|2|월요일 (ISO 8601 표준, 3.17)|  
|`FirstDayOfWeek.Tuesday`|3|화요일|  
|`FirstDayOfWeek.Wednesday`|4|수요일|  
|`FirstDayOfWeek.Thursday`|5|목요일|  
|`FirstDayOfWeek.Friday`|6|금요일|  
|`FirstDayOfWeek.Saturday`|7|토요일|  
  
 `FirstWeekOfYearValue` 인수의 다음 설정 중 하나를 사용할 수 있습니다.  
  
|열거형 값|값|설명|  
|-----------------------|-----------|-----------------|  
|`FirstWeekOfYear.System`|0|시스템 설정에 지정 된 연도의 첫째 주|  
|`FirstWeekOfYear.Jan1`|1|주를 1 월 1 일 (기본값)|  
|`FirstWeekOfYear.FirstFourDays`|2|4 일 이상 (ISO 8601 표준, 3.17 준수 함) 새 연도에 있는 주|  
|`FirstWeekOfYear.FirstFullWeek`|3|새 해 첫 번째 전체 주|  
  
   
  
## Examples  
 이 예에서는 날짜를 사용 하 여는 `DatePart` 함수에서 발생 하는 연도의 분기를 표시 합니다.  
  
 [!code-vb[VbVbalrFunctions#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="Interval" />이 잘못되었습니다.</exception>
        <exception cref="T:System.InvalidCastException"><paramref name="DateValue" />가 <see langword="Date" />로 강제 변환될 수 없습니다.</exception>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateAdd" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DateDiff" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="N:System" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">데이터 형식 요약(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="DateSerial">
      <MemberSignature Language="C#" Value="public static DateTime DateSerial (int Year, int Month, int Day);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateSerial(int32 Year, int32 Month, int32 Day) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateSerial (Year As Integer, Month As Integer, Day As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateSerial(int Year, int Month, int Day);" />
      <MemberSignature Language="F#" Value="static member DateSerial : int * int * int -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateSerial (Year, Month, Day)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Year" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Month" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Day" Type="System.Int32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Year">필수 요소. 1에서 9999까지의 정수 식입니다. 이 범위 아래의 값도 사용할 수 있습니다. <paramref name="Year" />가 0부터 99인 경우에는 아래의 "설명" 단원에 나온 것처럼 1930과 2029 사이의 값으로 해석되며, <paramref name="Year" />가 1보다 작은 경우에는 현재 연도에서 해당 값을 뺍니다.</param>
        <param name="Month">필수 요소. 1에서 12까지의 정수 식입니다. 그러나 이 범위를 벗어나는 값도 사용할 수 있습니다. <paramref name="Month" />의 값은 1만큼 오프셋되어 계산된 연도의 1월에 적용됩니다. 즉, (<paramref name="Month" /> - 1)이 1월에 더해집니다. 필요한 경우에는 연도가 다시 계산됩니다. 다음은 Day 값이 계산된 결과입니다. 
<paramref name="Month" />가 1이면 계산된 연도의 1월입니다.  
  
<paramref name="Month" />가 0이면 이전 연도의 12월입니다.  
  
<paramref name="Month" />가 -1이면 이전 연도의 11월입니다.  
  
<paramref name="Month" />가 13이면 다음 연도의 1월입니다.</param>
        <param name="Day">필수 요소. 1에서 31까지의 정수 식입니다. 그러나 이 범위를 벗어나는 값도 사용할 수 있습니다. <paramref name="Day" />의 값은 1만큼 오프셋되어 계산된 월의 1일에 적용됩니다. 즉, (<paramref name="Day" />- 1)이 해당 월의 1일에 더해집니다. 필요한 경우에는 월과 연도가 다시 계산됩니다. 다음은 Day 값이 계산된 결과입니다. 
<paramref name="Day" />가 1이면 계산된 월의 1일입니다.  
  
<paramref name="Day" />가 0이면 이전 월의 마지막 날짜입니다.  
  
<paramref name="Day" />가 -1이면 이전 월의 끝에서 두 번째 날짜입니다.  
  
<paramref name="Day" />가 현재 월의 마지막 날짜 값을 넘으면 다음 월의 해당되는 날짜입니다. 예를 들어, <paramref name="Month" />가 4이고 <paramref name="Day" />가 31이면 5월 1일입니다.</param>
        <summary>시간 정보가 자정(00:00:00)으로 설정된 상태에서 지정된 년, 월, 일을 나타내는 <see langword="Date" /> 값을 반환합니다.</summary>
        <returns>시간 정보가 자정(00:00:00)으로 설정된 상태에서 지정된 년, 월, 일을 나타내는 <see langword="Date" /> 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows 98 또는 Windows 2000에 대 한 두 자리 연도 `Year` 인수는 사용자가 정의한 컴퓨터 설정에 따라 해석 됩니다. 기본 설정은 값을 0부터 29 년 2000-2029로 해석 되 고 30부터 99 까지의 값은 1800 년으로 해석 됩니다. 다른 모든 `Year` 인수, 사용 하 여 4 자리 연도, 예를 들어 1924 합니다.  
  
 이전 버전 Windows의 이전에 설명 된 기본값을 기반으로 하는 두 자리 연도 해석 합니다. 함수 적절 한 값을 반환 하도록 하려면, 4 자리를 사용 하 여 `Year`입니다.  
  
 다음 예제에서는 음수, 0 및 양수의 인수 값입니다. 여기에 `DateSerial` 함수에서 반환을 `Date` 현재 연도의; 10 년 전 년에서 3 월 1 일 이전 날짜를 나타내는 전 10 년 2 월의 마지막 날 즉, 합니다.  
  
```vb  
Dim EndFeb As Date = DateSerial(-10, 3, 0)  
```  
  
 이면 `Month` 또는 `Day` 정상 범위를 초과 하면, 적절 하 게 다음 더 큰 단위에 적용 됩니다. 예를 들어, 32 일을 지정 하면 해당 할지를 값에 따라 4 일에서 1 개월와 `Month`합니다. 하는 경우 `Year` 9999 년 보다 큰 인수가-2,147,483,648 ~ 2,147,483,647 범위를 벗어난 경우 또는 <xref:System.ArgumentException> 오류가 발생 합니다. 세 가지 인수에서 지정한 날짜 보다 이전인 경우 12 월 31 일 23시 59분: 59 보다 이후 이거나 1 년 1 월 1 일 00시: 00 9999 년을 <xref:System.ArgumentOutOfRangeException> 오류가 발생 합니다.  
  
 `Date` 시간 구성 요소를 포함 하는 데이터 형식입니다. `DateSerial` 모두 0으로 설정 하므로 반환된 된 값은 계산 된 날짜의 시작을 나타냅니다.  
  
 이후 모든 `Date` 값을 지원를 <xref:System.DateTime> 구조를 해당 메서드에 제공 조합에서 추가 옵션을 `Date` 값. 예를 들어 오버 로드 된 중 사용할 수 있습니다 <xref:System.DateTime.%23ctor%2A> 채우는 데 생성자는 `Date` 원하는 조합 구성 요소를 사용 하 여 변수입니다. 다음 예제에서는 `NewDateTime` 6, 1978 년 5 월 전에 아침에서 8 시 30 초의 0.1에:  
  
```vb  
Dim NewDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)  
```  
  
   
  
## Examples  
 이 예제에서는 `DateSerial` 함수는 지정 된 연도, 월 및 일에 대 한 날짜를 반환 합니다.  
  
 [!code-vb[VbVbalrFunctions#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#28)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="N:System" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">데이터 형식 요약(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="DateString">
      <MemberSignature Language="C#" Value="public static string DateString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DateString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.DateString" />
      <MemberSignature Language="VB.NET" Value="Public Property DateString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DateString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DateString : string with get, set" Usage="Microsoft.VisualBasic.DateAndTime.DateString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>시스템의 현재 날짜를 나타내는 문자열 값을 반환하거나 설정합니다.</summary>
        <value>시스템의 현재 날짜를 나타내는 문자열 값을 반환하거나 설정합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `DateString` 약식된 월 이름을 사용 하는 MM-dd-yyyy 형식으로 시스템 날짜를 반환 합니다. 날짜에 대해 허용 된 형식은 yyyy, M-d-M-d-y, M/d/yyyy 및 M/d/y입니다. 더블 바이트 문자 집합 (DBCS)를 사용 하는 작업을 제외한 모든 시스템 로캘에 대해서 마찬가지입니다. 시스템 로캘은 더블 바이트 문자 집합을 사용 하는 경우 `DateString` yyyy-월-일 형식의 시스템 날짜를 반환 합니다. 시스템 로캘을 사용 하 여 설정 합니다 **시계, 언어 및 국가별** 항목 **제어판**.  
  
 **참고** 는 `DateString` 속성에 대 한 yyyy-월-일 형태로 시스템 날짜를 반환 합니다 `zh` (중국어 간체), `ko` (한국어) 및 `ja` (일본어) 시스템 로캘 내에서 Visual Basic을 실행 하는 경우 Silverlight 합니다.  
  
 가져오거나 현재 시스템 시간을 설정 하는 `String`를 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A> 속성입니다.  
  
 현재 시스템 날짜 또는 시간을 가져오려면 사용자의 로캘 형식이 나 사용자 지정 형식을 제공 합니다 <xref:Microsoft.VisualBasic.DateAndTime.Now%2A> 속성을는 <xref:Microsoft.VisualBasic.Strings.Format%2A> 함수에는 미리 정의 되거나 사용자 정의 날짜/시간 형식 중 하나를 지정 합니다. 다음은 이에 대한 예입니다.  
  
```vb  
MsgBox("The formatted date is " & Format(Now, "dddd, d MMM yyyy"))  
```  
  
 로 현재 시스템 날짜를 `Date`를 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> 속성입니다.  
  
> [!IMPORTANT]
>  시스템 날짜 또는 시간을 설정 하려면 부분 신뢰 상황에서 해당 실행에 영향을 줄 수 있는 비관리 코드 권한이 있어야 합니다. 자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 하 고 [코드 액세스 권한](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)합니다.  
  
   
  
## Examples  
 다음 예제에서는 `DateString` 속성을 현재 시스템 날짜를 표시 합니다.  
  
 [!code-vb[VbVbalrDateProperties#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><see cref="T:Microsoft.VisualBasic.DateAndTime.DateString" /> 값을 설정하는 데 사용된 형식이 잘못되었습니다.</exception>
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeString" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Today" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="DateValue">
      <MemberSignature Language="C#" Value="public static DateTime DateValue (string StringDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime DateValue(string StringDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DateValue (StringDate As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime DateValue(System::String ^ StringDate);" />
      <MemberSignature Language="F#" Value="static member DateValue : string -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.DateValue StringDate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="StringDate" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="StringDate">필수 요소. 1년 1월 1일 00:00:00부터 9999년 12월 31일 23:59:59까지의 날짜/시간 값을 나타내는 문자열 식입니다.</param>
        <summary>시간 정보가 자정(00:00:00)으로 설정된 상태에서 문자열로 표시된 날짜 정보가 들어 있는 <see langword="Date" /> 값을 반환합니다.</summary>
        <returns>시간 정보가 자정(00:00:00)으로 설정된 상태에서 문자열로 표시된 날짜 정보가 들어 있는 <see langword="Date" /> 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 `StringDate` 유효한 날짜 구분 기호로 구분 된 1부터 12 까지의 숫자만 포함 `DateValue` 월, 일 및 연도 시스템에 대 한 지정 된 간단한 날짜 형식에 따라 순서를 인식 합니다. `DateValue` 현재 달력 설정을 사용 합니다 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 의 속성을 <xref:System.Globalization.CultureInfo> 클래스는 <xref:System.Globalization> 네임 스페이스입니다. 기본값 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 여 값을 결정 **Control Panel** 설정 합니다. 간단한 날짜 서식을 설정 하 여 재정의할 수 있습니다는 <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> 의 속성을 <xref:System.Globalization.DateTimeFormatInfo> 클래스는 <xref:System.Globalization> 네임 스페이스.  
  
 `DateValue` 길고 약어를 숫자 형식에서 월 이름을 인식합니다. 1991/30/12 및 12/30/91 인식 외에도 예를 들어 `DateValue` 1991 년 12 월 30 일 및 1991 년 12 월 30 일도 인식 합니다.  
  
 하는 경우의 연도 부분 `StringDate` 생략 되 면 `DateValue` 컴퓨터의 시스템 날짜는 현재 연도가 사용 합니다.  
  
 경우는 `StringDate` 시간 정보를 포함 하는 인수 `DateValue` 반환된 된 값에 포함 되지 않습니다. 그러나 경우 `StringDate` "89: 98"와 같은 잘못 된 시간 정보가 <xref:System.InvalidCastException> 오류가 발생 합니다.  
  
   
  
## Examples  
 이 예제에서는 `DateValue` 날짜를 문자열로 변환 하는 함수입니다. 날짜를 직접 할당할 날짜 리터럴을 사용할 수도 있습니다는 `Object` 하거나 `Date` 변수를 예를 들어, `oldDate = #2/12/69#`합니다.  
  
 [!code-vb[VbVbalrFunctions#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><paramref name="StringDate" />에 잘못된 날짜 정보가 들어 있습니다.</exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <related type="Article" href="~/docs/visual-basic/language-reference/data-types/data-type-summary.md">데이터 형식 요약(Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public static int Day (DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Day(valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Day (DateValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Day(DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member Day : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Day DateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="DateValue">필수 요소. 일을 추출할 <see langword="Date" /> 값입니다.</param>
        <summary>날짜를 나타내는 1에서 31까지의 정수 값을 반환합니다.</summary>
        <returns>날짜를 나타내는 1에서 31까지의 정수 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하는 경우는 `Day` 함수를 사용 하 여 정규화 해야 할 수도 있습니다는 `Microsoft.VisualBasic` 네임 스페이스 때문에 <xref:System.Windows.Forms> 네임 스페이스 정의 <xref:System.Windows.Forms.Day> 열거형으로 합니다. 다음 예제에서는 어떻게 한정 `Day` 이 모호성 확인:  
  
```vb  
Dim thisDay As Integer = Microsoft.VisualBasic.DateAndTime.Day(Now)  
```  
  
 호출 하 여 해당 월의 일을 얻을 수도 있습니다 `DatePart` 를 지정 하 고 `DateInterval.Day` 에 대 한 합니다 *간격* 인수입니다.  
  
   
  
## Examples  
 다음 예제에서는 `Day` 함수를 지정된 된 날짜에서 월의 일을 가져옵니다. 개발 환경에서 날짜 리터럴 표준 짧은 형식 (예: "02/12/1969") 코드의 로캘 설정을 사용 하 여 표시 됩니다.  
  
 [!code-vb[VbVbalrFunctions#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#30)]  
  
 `Day` 구별 되도록 한정 됩니다는 <xref:System.Windows.Forms.Day?displayProperty=nameWithType> 열거형입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public static int Hour (DateTime TimeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Hour(valuetype System.DateTime TimeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hour (TimeValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Hour(DateTime TimeValue);" />
      <MemberSignature Language="F#" Value="static member Hour : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Hour TimeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TimeValue" Type="System.DateTime" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="TimeValue">필수 요소. 시간을 추출할 <see langword="Date" /> 값입니다.</param>
        <summary>시간을 나타내는 0에서 23까지의 정수 값을 반환합니다.</summary>
        <returns>시간을 나타내는 0에서 23까지의 정수 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 하 여 하루 중 시간을 가져올 수도 있습니다 `DatePart` 를 지정 하 고 `DateInterval.Hour` 에 대 한는 `Interval` 인수입니다.  
  
   
  
## Examples  
 이 예제에서는 `Hour` 함수를 지정된 된 시간에서 시간을 가져옵니다. 개발 환경에서 시간 리터럴이 코드의 로캘 설정을 사용 하 여 간단한 시간 형식으로 표시 됩니다.  
  
 [!code-vb[VbVbalrFunctions#32](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public static int Minute (DateTime TimeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Minute(valuetype System.DateTime TimeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Minute (TimeValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Minute(DateTime TimeValue);" />
      <MemberSignature Language="F#" Value="static member Minute : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Minute TimeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TimeValue" Type="System.DateTime" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="TimeValue">필수 요소. 분을 추출할 <see langword="Date" /> 값입니다.</param>
        <summary>분을 나타내는 0에서 59까지의 정수 값을 반환합니다.</summary>
        <returns>분을 나타내는 0에서 59까지의 정수 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 분을 호출 하 여 가져올 수도 있습니다 `DatePart` 를 지정 하 고 `DateInterval.Minute` 에 대 한는 `Interval` 인수입니다.  
  
   
  
## Examples  
 이 예제에서는 `Minute` 함수를 지정된 된 시간에서 분을 가져옵니다. 개발 환경에서 시간 리터럴이 코드의 로캘 설정을 사용 하 여 간단한 시간 형식으로 표시 됩니다.  
  
 [!code-vb[VbVbalrFunctions#42](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#42)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public static int Month (DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Month(valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Month (DateValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Month(DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member Month : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Month DateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="DateValue">필수 요소. 월을 추출할 <see langword="Date" /> 값입니다.</param>
        <summary>월을 나타내는 1에서 12까지의 정수 값을 반환합니다.</summary>
        <returns>월을 나타내는 1에서 12까지의 정수 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 월을 호출 하 여 가져올 수도 있습니다 `DatePart` 를 지정 하 고 `DateInterval.Month` 에 대 한는 `Interval` 인수입니다.  
  
   
  
## Examples  
 이 예제에서는 `Month` 함수는 지정 된 날짜에서 월을 가져오려고 합니다. 개발 환경에서 리터럴 즉 표시 되는 날짜 형식으로 코드의 로캘 설정을 사용 하 여 날짜입니다.  
  
 [!code-vb[VbVbalrFunctions#43](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#43)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="MonthName">
      <MemberSignature Language="C#" Value="public static string MonthName (int Month, bool Abbreviate = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static string MonthName(int32 Month, bool Abbreviate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function MonthName (Month As Integer, Optional Abbreviate As Boolean = false) As String" />
      <MemberSignature Language="F#" Value="static member MonthName : int * bool -&gt; string" Usage="Microsoft.VisualBasic.DateAndTime.MonthName (Month, Abbreviate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Month" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Abbreviate" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Month">필수 요소. 1부터 13 사이의 숫자로 지정된 월 이름입니다. 여기서 1은 1월을 나타내고 12는 12월을 나타냅니다. 13개월용 달력의 경우에는 값 13을 사용할 수 있습니다. 시스템에서 12개월용 달력을 사용하는 경우 <paramref name="Month" />가 13이면 <c>MonthName</c>은 빈 문자열을 반환합니다.</param>
        <param name="Abbreviate">선택 사항입니다. 월 이름을 축약하면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다. 기본값은 <see langword="False" />입니다.</param>
        <summary>지정된 월의 이름을 포함하는 문자열 값을 반환합니다.</summary>
        <returns>지정된 월의 이름을 포함하는 문자열 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환한 문자열 `MonthName` 에 따라 달라 집니다은 입력된 인수에서 뿐만 아니라 뿐만 합니다 **국가별 옵션** 는 Windows에 지정 된 설정을 **제어판**.  
  
> [!NOTE]
>  `MonthName` 현재 달력 설정을 사용 합니다 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 의 속성을 <xref:System.Globalization.CultureInfo> 클래스는 <xref:System.Globalization> 네임 스페이스입니다. 기본값 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 여 값을 결정 **Control Panel** 설정 합니다.  
  
   
  
## Examples  
 이 예제에서는 `MonthName` 여 지정 된 정수 월의 이름을 결정 하는 함수입니다. 부울 값을 결정 합니다 있는지 여부를 전체 이름 (`False`) 또는 약식된 이름 (`True`) 표시 됩니다.  
  
 [!code-vb[VbVbalrFunctions#44](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#44)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="Month" />가 1보다 작거나 13보다 큽니다.</exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="N:System" />
        <altmember cref="N:System.Globalization" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Now">
      <MemberSignature Language="C#" Value="public static DateTime Now { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Now" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.Now" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Now As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Now { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Now : DateTime" Usage="Microsoft.VisualBasic.DateAndTime.Now" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>시스템 설정에 따라 현재 날짜와 시간이 들어 있는 값을 반환합니다.</summary>
        <value>현재 날짜 및 시간에 시스템에 따라 합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 시스템 날짜를 설정 하려면 사용 된 <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> 속성입니다. 시스템 시간을 설정 하려면 사용 된 <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 `Now` 속성을 현재 시스템 날짜 및 시간을 반환 합니다.  
  
 [!code-vb[VbVbalrDateProperties#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public static int Second (DateTime TimeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Second(valuetype System.DateTime TimeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Second (TimeValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Second(DateTime TimeValue);" />
      <MemberSignature Language="F#" Value="static member Second : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Second TimeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TimeValue" Type="System.DateTime" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="TimeValue">필수 요소. 초를 추출할 <see langword="Date" /> 값입니다.</param>
        <summary>초를 나타내는 0에서 59까지의 정수 값을 반환합니다.</summary>
        <returns>초를 나타내는 0에서 59까지의 정수 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 분의 두 번째 호출 하 여 가져올 수도 있습니다 `DatePart` 를 지정 하 고 `DateInterval.Second` 에 대 한는 `Interval` 인수입니다.  
  
   
  
## Examples  
 다음 예제에서는 `Second` 함수 지정된 된 시간에서 분의 초를 가져오려고 합니다. 개발 환경에서 시간 리터럴이 코드의 로캘 설정을 사용 하 여 간단한 시간 형식으로 표시 됩니다.  
  
 [!code-vb[VbVbalrFunctions#46](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#46)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="N:System" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="TimeOfDay">
      <MemberSignature Language="C#" Value="public static DateTime TimeOfDay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime TimeOfDay" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeOfDay As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime TimeOfDay { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.TimeOfDay : DateTime with get, set" Usage="Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>시스템 설정에 따라 현재 시간이 들어 있는 <see langword="Date" /> 값을 반환하거나 설정합니다.</summary>
        <value>시스템 설정에 따라 현재 시간이 들어 있는 <see langword="Date" /> 값을 반환하거나 설정합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Date` 기원후 날짜 구성 요소를 포함 합니다. 시스템 시간을 반환 하는 경우 `TimeOfDay` 이러한 모두 1로 설정 하는 하므로 반환 된 값을 1 년의 첫 번째 날을 나타냅니다. 시스템 시간을 설정할 때 `TimeOfDay` 날짜 구성 요소를 무시 합니다.  
  
 현재 시스템 시간으로 액세스 하는 `String`를 사용 하 여를 <xref:Microsoft.VisualBasic.DateAndTime.TimeString%2A> 속성.  
  
 가져오거나 설정할 현재 시스템 날짜를 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.Today%2A> 속성입니다.  
  
> [!IMPORTANT]
>  시스템 날짜 또는 시간을 설정 하려면 부분 신뢰 상황에서 해당 실행에 영향을 줄 수 있는 비관리 코드 권한이 있어야 합니다. 자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 하 고 [코드 액세스 권한](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)합니다.  
  
   
  
## Examples  
 이 예제에서는 `TimeOfDay` 속성을 현재 시스템 시간을 반환 합니다.  
  
 [!code-vb[VbVbalrDateProperties#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Timer" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Timer">
      <MemberSignature Language="C#" Value="public static double Timer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 Timer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.Timer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timer As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property double Timer { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Timer : double" Usage="Microsoft.VisualBasic.DateAndTime.Timer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>자정 이후 경과된 초 수를 나타내는 <see cref="T:System.Double" /> 값을 반환합니다.</summary>
        <value>자정 이후 경과 된 시간 (초) 수를 나타내는 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Timer` 최신 자정 이후의 초 및 밀리초를 반환 하는 속성입니다. 초를 반환 값의 정수 부분에 있으며 밀리초의 소수 부분에 있습니다.  
  
   
  
## Examples  
 이 예제에서는 `Timer` 속성을 응용 프로그램을 일시 중지 합니다. 일시 중지 하는 동안 다른 처리를 수행할 수 있습니다.  
  
 [!code-vb[VbVbalrTimerProperty#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTimerProperty/VB/Form1.vb#1)]  
  
 정규화 해야 하는 `Timer` 속성을를 <xref:Microsoft.VisualBasic?displayProperty=nameWithType> 네임 스페이스 때문에 `Timer` 에 정의 된 클래스 이기도 합니다 <xref:System.Threading?displayProperty=nameWithType>, <xref:System.Timers?displayProperty=nameWithType>, 및 <xref:System.Windows.Forms?displayProperty=nameWithType> 네임 스페이스입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.VBMath.Randomize" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Today" />
        <altmember cref="N:System" />
        <altmember cref="N:System.Windows.Forms" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="TimeSerial">
      <MemberSignature Language="C#" Value="public static DateTime TimeSerial (int Hour, int Minute, int Second);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime TimeSerial(int32 Hour, int32 Minute, int32 Second) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TimeSerial (Hour As Integer, Minute As Integer, Second As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime TimeSerial(int Hour, int Minute, int Second);" />
      <MemberSignature Language="F#" Value="static member TimeSerial : int * int * int -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.TimeSerial (Hour, Minute, Second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Hour" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Minute" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Second" Type="System.Int32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Hour">필수 요소. 0에서 23까지의 정수 식입니다. 그러나 이 범위를 벗어나는 값도 사용할 수 있습니다.</param>
        <param name="Minute">필수 요소. 0에서 59까지의 정수 식입니다. 그러나 이 범위를 벗어나는 값도 사용할 수 있습니다. <paramref name="Minute" />의 값은 계산된 시간에 더해지므로 음수 값은 계산된 시간에서 이 값만큼 뺀 분을 지정합니다.</param>
        <param name="Second">필수 요소. 0에서 59까지의 정수 식입니다. 그러나 이 범위를 벗어나는 값도 사용할 수 있습니다. <paramref name="Second" />의 값은 계산된 분에 더해지므로 음수 값은 계산된 분에서 이 값만큼 뺀 초를 지정합니다.</param>
        <summary>날짜 정보가 1년 1월 1일로 설정된 상태에서 지정된 시, 분, 초를 나타내는 <see langword="Date" /> 값을 반환합니다.</summary>
        <returns>날짜 정보가 1년 1월 1일로 설정된 상태에서 지정된 시, 분, 초를 나타내는 <see langword="Date" /> 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 예제에서는 음수, 0 및 양수의 인수 값입니다. `TimeSerial` 함수 정오에 또는 45: 오전 8:00 3 시간 전에 15 분을 나타내는 시간을 반환 합니다.  
  
```vb  
Dim alarmTime As Date = TimeSerial(12 - 3, -15, 0)  
```  
  
 이면 `Minute` 또는 `Second` 정상 범위를 초과 하면, 적절 하 게 다음 더 큰 단위에 적용 됩니다. 예를 들어 75 분을 지정 하는 경우 1 시간 15 분으로 계산 됩니다.  
  
 `TimeSerial` 하루에서 시간 (초) 수의 총 초 86,400, 모듈로 줄입니다. 따라서 반환 값은 항상 00시: 00에서 23시 59분: 59 사이의 값입니다.  
  
 `Date` 기원후 날짜 구성 요소를 포함 합니다. `TimeSerial` 모두 1로 설정 하므로 반환 된 값을 1 년의 첫 번째 날을 나타냅니다. 그러나 인수의 값은 24 시간을 초과 하는 계산된 시간으로 인해 일 필요에 따라 증가 됩니다. 다음 예에서 값 `Hour` 및 `Minute` 24 시간 넘게의 결합 된 시간에 발생 합니다.  
  
```vb  
MsgBox(TimeSerial(23, 75, 0))   
' The preceding statement displays "1/2/0001 12:15:00 AM".  
```  
  
 인수의 값 결과가 음수는 계산된 시간, 날짜 정보가 1/1/0001를로 하 고 시간 정보가 00시: 00에서 23시 59분: 59 사이 여야 조정 됩니다. 그러나 계산 된 시간 보다 작은 음의 24 있으면는 <xref:System.ArgumentOutOfRangeException> 오류가 발생 합니다.  
  
 이후 모든 `Date` 값을 지원를 <xref:System.DateTime?displayProperty=nameWithType> 구조를 해당 메서드에 제공 조합에서 추가 옵션을 `Date` 값. 예를 들어 오버 로드 된 중 사용할 수 있습니다 <xref:System.DateTime.%23ctor%2A> 채우는 데 생성자는 `Date` 원하는 조합 구성 요소를 사용 하 여 변수입니다. 다음 예제에서는 `newDateTime` 6, 1978 년 5 월 전에 아침에서 8 시 30 초의 0.1에:  
  
```vb  
Dim newDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)  
```  
  
   
  
## Examples  
 다음 예제에서는 `TimeSerial` 함수에 대해 지정 된 시간, 분 및 초는 시간을 반환 합니다.  
  
 [!code-vb[VbVbalrFunctions#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">인수의 범위가 -2,147,483,648 ~ 2,147,483,647을 벗어났습니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">계산된 시간이 -24 시보다 작습니다.</exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TimeString">
      <MemberSignature Language="C#" Value="public static string TimeString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string TimeString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.TimeString" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ TimeString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TimeString : string with get, set" Usage="Microsoft.VisualBasic.DateAndTime.TimeString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>시스템의 현재 시간을 나타내는 문자열 값을 반환하거나 설정합니다.</summary>
        <value>시스템의 현재 시간을 나타내는 문자열 값을 반환하거나 설정합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `TimeString` 항상 반환 "hh: mm:" 시스템 시간은 24 시간 형식 합니다. 형식은 고정 문화권을 변경 해도 변경 되지 않습니다는이 **국가별 옵션** 에 **제어판**합니다.  
  
 가져오거나 현재 시스템 날짜를 설정 하는 `String`를 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A> 속성입니다.  
  
 현재 시스템 날짜 또는 시간을 가져오려면 사용자의 로캘 형식이 나 사용자 지정 형식을 제공 합니다 <xref:Microsoft.VisualBasic.DateAndTime.Now%2A> 속성을는 <xref:Microsoft.VisualBasic.Strings.Format%2A> 함수에는 미리 정의 되거나 사용자 정의 날짜/시간 형식 중 하나를 지정 합니다. 다음은 이에 대한 예입니다.  
  
```vb  
MsgBox("The formatted time is " & Format(Now, "hh.mm.ss.fff tt"))  
```  
  
 현재 시스템 시간으로 액세스 하는 `Date`를 사용 하 여를 <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> 속성.  
  
> [!IMPORTANT]
>  시스템 날짜 또는 시간을 설정 하려면 부분 신뢰 상황에서는 해당 실행에 영향을 줄 수 있는 비관리 코드 권한이 있어야 합니다. 자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 하 고 [코드 액세스 권한](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)합니다.  
  
   
  
## Examples  
 이 예제에서는 `TimeString` 속성을 현재 시스템 시간을 표시 합니다.  
  
 [!code-vb[VbVbalrDateProperties#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><see langword="TimeString" /> 값을 설정하는 데 사용된 형식이 잘못되었습니다.</exception>
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.DateString" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="TimeValue">
      <MemberSignature Language="C#" Value="public static DateTime TimeValue (string StringTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype System.DateTime TimeValue(string StringTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TimeValue (StringTime As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime TimeValue(System::String ^ StringTime);" />
      <MemberSignature Language="F#" Value="static member TimeValue : string -&gt; DateTime" Usage="Microsoft.VisualBasic.DateAndTime.TimeValue StringTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="StringTime" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="StringTime">필수 요소. 1년 1월 1일 00:00:00부터 9999년 12월 31일 23:59:59까지의 날짜/시간 값을 나타내는 문자열 식입니다.</param>
        <summary>날짜 정보가 1년 1월 1일로 설정된 상태에서 문자열로 표시된 시간 정보가 들어 있는 <see langword="Date" /> 값을 반환합니다.</summary>
        <returns>날짜 정보가 1년 1월 1일로 설정된 상태에서 문자열로 표시된 시간 정보를 포함하는 <see langword="Date" /> 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 유효한 시간을 입력할 수는 12 시간제 또는 24 시간 시계를 사용 하 여 합니다. 예를 들어 `"2:24 P.M."` 하 고 `"14:24"` 은 모두 유효 `StringTime` 인수입니다.  
  
 경우는 `StringTime` 날짜 정보를 포함 하는 인수 `TimeValue` 반환된 된 값에 포함 되지 않습니다. 그러나 경우 `StringTime` 는 잘못 된 날짜 정보, 예를 들어 "년 1 월 32"는 <xref:System.InvalidCastException> 오류가 발생 합니다.  
  
   
  
## Examples  
 다음 예제에서는 `TimeValue` 시간 문자열로 변환 하는 함수입니다. 한 번에 직접 할당할 날짜 리터럴을 사용할 수도 있습니다는 `Date` 변수입니다.  
  
 [!code-vb[VbVbalrFunctions#51](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><paramref name="StringTime" />에 잘못된 날짜 정보가 들어 있습니다.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Today">
      <MemberSignature Language="C#" Value="public static DateTime Today { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Today" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.DateAndTime.Today" />
      <MemberSignature Language="VB.NET" Value="Public Property Today As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Today { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.Today : DateTime with get, set" Usage="Microsoft.VisualBasic.DateAndTime.Today" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용 중인 시스템에 따라 현재 날짜가 들어 있는 <see langword="Date" /> 값을 반환하거나 설정합니다.</summary>
        <value>사용 중인 시스템에 따라 현재 날짜가 들어 있는 <see langword="Date" /> 값을 반환하거나 설정합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Date` 시간 구성 요소를 포함 하는 데이터 형식입니다. 시스템 날짜를 반환 하는 경우 `Today` 모두 0으로 설정 하므로 반환된 된 값 자정 (00: 00:00). 시스템 날짜를 설정할 때 `Today` 시간 구성 요소를 무시 합니다.  
  
 로 현재 시스템 날짜를 `String`를 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.DateString%2A> 속성입니다.  
  
 가져오거나 설정할 현재 시스템 시간을 사용 하 여는 <xref:Microsoft.VisualBasic.DateAndTime.TimeOfDay%2A> 속성입니다.  
  
> [!IMPORTANT]
>  시스템 날짜 또는 시간을 설정 하려면 부분 신뢰 상황에서 해당 실행에 영향을 줄 수 있는 비관리 코드 권한이 있어야 합니다. 자세한 내용은 <xref:System.Security.Permissions.SecurityPermission> 하 고 [코드 액세스 권한](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675)합니다.  
  
   
  
## Examples  
 이 예제에서는 `Today` 속성을 현재 시스템 날짜를 반환 합니다.  
  
 [!code-vb[VbVbalrDateProperties#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrDateProperties/VB/Module1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Weekday">
      <MemberSignature Language="C#" Value="public static int Weekday (DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Weekday(valuetype System.DateTime DateValue, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Function Weekday (DateValue As DateTime, Optional DayOfWeek As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday) As Integer" />
      <MemberSignature Language="F#" Value="static member Weekday : DateTime * Microsoft.VisualBasic.FirstDayOfWeek -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Weekday (DateValue, DayOfWeek)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="DateValue">필수 요소. 요일을 확인할 <see langword="Date" /> 값입니다.</param>
        <param name="DayOfWeek">선택 사항입니다. 주의 첫째 요일을 지정하는 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />가 사용됩니다.</param>
        <summary>요일을 나타내는 숫자를 포함하는 정수 값을 반환합니다.</summary>
        <returns>요일을 나타내는 숫자를 포함하는 정수 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값을 반환 합니다 `Weekday` 의 값에 해당 하는 함수는 `FirstDayOfWeek` 열거형, 즉, 1은 일요일, 7 토요일을 나타냅니다.  
  
> [!NOTE]
>  `Weekday` 현재 달력 설정을 사용 합니다 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 의 속성을 <xref:System.Globalization.CultureInfo> 클래스는 <xref:System.Globalization> 네임 스페이스입니다. 기본값 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 여 값을 결정 **Control Panel** 설정 합니다.  
  
 `DayOfWeek` 인수의 다음 설정 중 하나를 사용할 수 있습니다.  
  
|열거형 값|값|설명|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|0|시스템 설정에 지정 된 주의 첫째 요일|  
|`FirstDayOfWeek.Sunday`|1|일요일입니다 (기본값)|  
|`FirstDayOfWeek.Monday`|2|월요일 (ISO 8601 표준, 3.17)|  
|`FirstDayOfWeek.Tuesday`|3|화요일|  
|`FirstDayOfWeek.Wednesday`|4|수요일|  
|`FirstDayOfWeek.Thursday`|5|목요일|  
|`FirstDayOfWeek.Friday`|6|금요일|  
|`FirstDayOfWeek.Saturday`|7|토요일|  
  
   
  
## Examples  
 다음 예제에서는 `Weekday` 함수는 요일이 지정된 된 날짜에서 가져오려고 합니다.  
  
 [!code-vb[VbVbalrFunctions#57](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#57)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="DayOfWeek" />가 0보다 작거나 7보다 큽니다.</exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="WeekdayName">
      <MemberSignature Language="C#" Value="public static string WeekdayName (int Weekday, bool Abbreviate = false, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.System);" />
      <MemberSignature Language="ILAsm" Value=".method public static string WeekdayName(int32 Weekday, bool Abbreviate, valuetype Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Function WeekdayName (Weekday As Integer, Optional Abbreviate As Boolean = false, Optional FirstDayOfWeekValue As FirstDayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.System) As String" />
      <MemberSignature Language="F#" Value="static member WeekdayName : int * bool * Microsoft.VisualBasic.FirstDayOfWeek -&gt; string" Usage="Microsoft.VisualBasic.DateAndTime.WeekdayName (Weekday, Abbreviate, FirstDayOfWeekValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Weekday" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Abbreviate" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="FirstDayOfWeekValue" Type="Microsoft.VisualBasic.FirstDayOfWeek" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Weekday">필수 요소. 정수입니다. 형식이며 요일에 대해 지정된 1부터 7까지의 숫자 값입니다. 1은 주의 첫째 요일을 나타내고 7은 주의 마지막 요일을 나타냅니다. 첫째 요일과 마지막 요일은 <paramref name="FirstDayOfWeekValue" />의 설정에 따라 달라집니다.</param>
        <param name="Abbreviate">선택 사항입니다. 해당 요일 이름이 약식 이름인지 여부를 나타내는 <see langword="Boolean" /> 값입니다. 이 인수가 생략된 경우 기본값은 <see langword="False" />이며 해당 요일 이름이 약식 이름이 아님을 나타냅니다.</param>
        <param name="FirstDayOfWeekValue">선택 사항입니다. 주의 첫째 요일을 지정하는 <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> 열거형에서 선택한 값입니다. 지정되지 않은 경우 <see langword="FirstDayOfWeek.System" />가 사용됩니다.</param>
        <summary>지정한 평일의 이름을 포함하는 문자열 값을 반환합니다.</summary>
        <returns>지정한 평일의 이름을 포함하는 문자열 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환한 문자열 `WeekdayName` 에 따라 달라 집니다은 입력된 인수에서 뿐만 아니라 뿐만 합니다 **국가별 옵션** 는 Windows에 지정 된 설정을 **제어판**.  
  
> [!NOTE]
>  `WeekdayName` 현재 달력 설정을 사용 합니다 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 의 속성을 <xref:System.Globalization.CultureInfo> 클래스는 <xref:System.Globalization> 네임 스페이스입니다. 기본값 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> 여 값을 결정 **Control Panel** 설정 합니다.  
  
 `FirstDayOfWeekValue` 인수의 다음 설정 중 하나를 사용할 수 있습니다.  
  
|열거형 값|값|설명|  
|-----------------------|-----------|-----------------|  
|`FirstDayOfWeek.System`|0|시스템에 지정 된 주의 첫째 요일 설정 (기본값)|  
|`FirstDayOfWeek.Sunday`|1|일요일|  
|`FirstDayOfWeek.Monday`|2|월요일 (ISO 8601 표준, 3.17)|  
|`FirstDayOfWeek.Tuesday`|3|화요일|  
|`FirstDayOfWeek.Wednesday`|4|수요일|  
|`FirstDayOfWeek.Thursday`|5|목요일|  
|`FirstDayOfWeek.Friday`|6|금요일|  
|`FirstDayOfWeek.Saturday`|7|토요일|  
  
   
  
## Examples  
 다음 예제에서는 합니다 `Weekday` 함수를 지정된 된 날짜에서 요일을 기준 차례로 `WeekDayName` 해당 번호의 된 요일 이름을 가져오려면 함수입니다.  
  
 [!code-vb[VbVbalrFunctions#58](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#58)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="Weekday" />가 1-7 범위를 벗어났거나 <paramref name="FirstDayOfWeekValue" />가 0-7 범위를 벗어났습니다.</exception>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public static int Year (DateTime DateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Year(valuetype System.DateTime DateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Year (DateValue As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Year(DateTime DateValue);" />
      <MemberSignature Language="F#" Value="static member Year : DateTime -&gt; int" Usage="Microsoft.VisualBasic.DateAndTime.Year DateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DateValue" Type="System.DateTime" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="DateValue">필수 요소. 연도를 추출할 원래 <see langword="Date" /> 값입니다.</param>
        <summary>연도를 나타내는 1에서 9999까지의 정수 값을 반환합니다.</summary>
        <returns>연도를 나타내는 1에서 9999까지의 정수 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 하 여 연도 가져올 수도 있습니다 `DatePart` 를 지정 하 고 `DateInterval.Year` 에 대 한는 `Interval` 인수입니다.  
  
   
  
## Examples  
 다음 예제에서는 `Year` 함수는 지정 된 날짜에서 연도 가져오려고 합니다. 개발 환경에서 리터럴 즉 표시 되는 날짜 형식으로 코드의 로캘 설정을 사용 하 여 날짜입니다.  
  
 [!code-vb[VbVbalrFunctions#59](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrFunctions/VB/Class1.vb#59)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)" />
        <altmember cref="P:Microsoft.VisualBasic.DateAndTime.Now" />
        <altmember cref="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)" />
        <altmember cref="Overload:Microsoft.VisualBasic.DateAndTime.DatePart" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
  </Members>
</Type>