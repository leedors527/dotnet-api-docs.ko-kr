<Type Name="VBMath" FullName="Microsoft.VisualBasic.VBMath">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c0321586caa7949167e118bcc659f8f1fe5da321" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56404541" /></Metadata><TypeSignature Language="C#" Value="public sealed class VBMath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed VBMath extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.VBMath" />
  <TypeSignature Language="VB.NET" Value="Public Module VBMath" />
  <TypeSignature Language="C++ CLI" Value="public ref class VBMath sealed" />
  <TypeSignature Language="F#" Value="type VBMath = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see langword="VbMath" /> 모듈에는 수학 연산을 수행하는 데 사용되는 프로시저가 포함되어 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 모듈은 난수를 생성 하는 것에 대 한 Visual Basic 언어 키워드 및 런타임 라이브러리 멤버를 지원 합니다.  
  
   
  
## Examples  
 이 예제에서는 `Rnd` 범위는 1에서 6에서 임의의 정수 값을 생성 하는 함수입니다.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">수학 요약</related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/derived-math-functions.md">파생된 수학 함수(Visual Basic)</related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md">키워드(Visual Basic)</related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md">Visual Basic 런타임 라이브러리 멤버</related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Randomize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>난수 생성기를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize();" />
      <MemberSignature Language="F#" Value="static member Randomize : unit -&gt; unit" Usage="Microsoft.VisualBasic.VBMath.Randomize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>난수 생성기를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 오버 로드는 `Randomize` 메서드는 시드 값을 고려 하지 않습니다. 대신, 시스템 타이머에서 반환 되는 값은 새 시드 값으로 사용 됩니다.  
  
 하는 경우 `Randomize` 를 사용 하지 않으면는 `Rnd` 함수 (인수) 없이 숫자를 사용 하며 동일한 초기값 처음으로 호출 되 고 이후에 시드 값으로는 마지막으로 생성 된 숫자를 사용 합니다.  
  
> [!NOTE]
>  난수 시퀀스를 반복 호출 `Rnd` 를 사용 하 여 직전 음수 인수를 사용 하 여 `Randomize` 숫자 인수를 사용 합니다.  
  
> [!IMPORTANT]
>  때문에 합니다 `Random` 문 및 `Rnd` 함수 시드 값으로 시작 하는 한정 된 범위에 해당 하는 번호를 생성, 결과 생성 하는 데 사용 된 알고리즘을 아는 사람이 예측할 수 있습니다. 따라서 합니다 `Random` 문 및 `Rnd` 함수 해서는 안 암호화에 사용할 난수를 생성 하 합니다. 자세한 내용은 <xref:System.Security.Cryptography.RandomNumberGenerator>를 참조하십시오.  
  
   
  
## Examples  
 이 예제에서는 `Randomize` 문을 난수 생성기를 초기화 합니다. 숫자 인수가 생략 되었기 때문에 `Randomize` 반환 값을 사용 합니다 `Timer` 새 시드 값으로 작동 합니다.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">수학 요약</related>
      </Docs>
    </Member>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize (double Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize(float64 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize (Number As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize(double Number);" />
      <MemberSignature Language="F#" Value="static member Randomize : double -&gt; unit" Usage="Microsoft.VisualBasic.VBMath.Randomize Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Number">선택 사항입니다. <see langword="Object" /> 또는 임의의 유효한 숫자 식입니다.</param>
        <summary>난수 생성기를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Randomize` 사용 하 여 `Number` 초기화를 `Rnd` 함수의 난수 생성기를 새 초기값을 지정 합니다. 생략 하면 `Number`, 시스템 타이머에서 반환 되는 값은 새 초기값으로 사용 됩니다.  
  
 하는 경우 `Randomize` 를 사용 하지 않으면는 `Rnd` 함수 (인수) 없이 숫자를 사용 하며 동일한 초기값 처음으로 호출 되 고 이후에 시드 값으로는 마지막으로 생성 된 숫자를 사용 합니다.  
  
> [!NOTE]
>  난수 시퀀스를 반복 호출 `Rnd` 를 사용 하 여 직전 음수 인수를 사용 하 여 `Randomize` 숫자 인수를 사용 합니다. 사용 하 여 `Randomize` 에 대 한 동일한 값을 가진 `Number` 이전 시퀀스를 반복 하지 않습니다.  
  
> [!IMPORTANT]
>  때문에 합니다 `Random` 문 및 `Rnd` 함수 시드 값으로 시작 하는 한정 된 범위에 해당 하는 번호를 생성, 결과 생성 하는 데 사용 된 알고리즘을 아는 사람이 예측할 수 있습니다. 따라서 합니다 `Random` 문 및 `Rnd` 함수 해서는 안 암호화에 사용할 난수를 생성 하 합니다. 자세한 내용은 <xref:System.Security.Cryptography.RandomNumberGenerator>를 참조하십시오.  
  
   
  
## Examples  
 이 예제에서는 `Randomize` 문을 난수 생성기를 초기화 합니다. 숫자 인수가 생략 되었기 때문에 `Randomize` 반환 값을 사용 합니다 `Timer` 새 시드 값으로 작동 합니다.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">수학 요약</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Rnd">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see langword="Single" /> 형식의 난수를 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd();" />
      <MemberSignature Language="F#" Value="static member Rnd : unit -&gt; single" Usage="Microsoft.VisualBasic.VBMath.Rnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see langword="Single" /> 형식의 난수를 반환합니다.</summary>
        <returns>시퀀스의 다음 난수가 생성됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Rnd` 1 일 미만 있지만 0 보다 크거나 함수 값을 반환 합니다.  
  
 호출 하기 전에 `Rnd`를 사용 하 여는 `Randomize` 시스템 타이머를 기반으로 초기값을 사용 하 여 난수 생성기를 초기화 하려면 인수 없이 문입니다.  
  
 지정된 된 범위에서 난수를 생성 하려면 다음 수식을 사용 합니다.  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 이때 `upperbound` 범위에서 가장 높은 수 및 `lowerbound` 범위의 가장 낮은입니다.  
  
> [!NOTE]
>  난수 시퀀스를 반복 호출 `Rnd` 를 사용 하 여 직전 음수 인수를 사용 하 여 `Randomize` 숫자 인수를 사용 합니다.  
  
> [!IMPORTANT]
>  때문에 합니다 `Random` 문 및 `Rnd` 함수 시드 값으로 시작 하는 한정 된 범위에 해당 하는 번호를 생성, 결과 생성 하는 데 사용 된 알고리즘을 아는 사람이 예측할 수 있습니다. 따라서 합니다 `Random` 문 및 `Rnd` 함수 해서는 안 암호화에 사용할 난수를 생성 하 합니다.  
  
   
  
## Examples  
 이 예제에서는 `Rnd` 범위는 1에서 6에서 임의의 정수 값을 생성 하는 함수입니다.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">수학 요약</related>
      </Docs>
    </Member>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd (float Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd(float32 Number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd (Number As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd(float Number);" />
      <MemberSignature Language="F#" Value="static member Rnd : single -&gt; single" Usage="Microsoft.VisualBasic.VBMath.Rnd Number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Number">선택 사항입니다. <see langword="Single" /> 값 또는 임의의 유효한 <see langword="Single" /> 식입니다.</param>
        <summary><see langword="Single" /> 형식의 난수를 반환합니다.</summary>
        <returns>숫자가 0보다 작으면 Rnd가 <paramref name="Number" />를 시드로 사용하여 항상 같은 숫자를 생성합니다. 숫자가 0보다 크면 Rnd가 시퀀스의 다음 난수를 생성합니다. 숫자가 0이면 Rnd가 가장 최근에 생성된 숫자를 생성합니다. 숫자가 제공되지 않으면 Rnd가 시퀀스의 다음 난수를 생성합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Rnd` 1 일 미만 있지만 0 보다 크거나 함수 값을 반환 합니다.  
  
 변수의 `Number` 결정 하는 방법을 `Rnd` 난수를 생성 합니다.  
  
 지정 된 초기 시드의 되므로 동일한 번호 시퀀스가 생성 됩니다 각 연속 호출을 `Rnd` 함수는 시퀀스의 다음 번호의 초기값으로 이전에 생성 된 번호를 사용 합니다.  
  
 호출 하기 전에 `Rnd`를 사용 하 여는 `Randomize` 시스템 타이머를 기반으로 초기값을 사용 하 여 난수 생성기를 초기화 하려면 인수 없이 문입니다.  
  
 지정된 된 범위에서 난수를 생성 하려면 다음 수식을 사용 합니다.  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 이때 `upperbound` 범위에서 가장 높은 수 및 `lowerbound` 범위의 가장 낮은입니다.  
  
> [!NOTE]
>  난수 시퀀스를 반복 호출 `Rnd` 를 사용 하 여 직전 음수 인수를 사용 하 여 `Randomize` 숫자 인수를 사용 합니다. 사용 하 여 `Randomize` 에 대 한 동일한 값을 가진 `Number` 이전 시퀀스를 반복 하지 않습니다.  
  
> [!IMPORTANT]
>  때문에 합니다 `Random` 문 및 `Rnd` 함수 시드 값으로 시작 하는 한정 된 범위에 해당 하는 번호를 생성, 결과 생성 하는 데 사용 된 알고리즘을 아는 사람이 예측할 수 있습니다. 따라서 합니다 `Random` 문 및 `Rnd` 함수 해서는 안 암호화에 사용할 난수를 생성 하 합니다.  
  
   
  
## Examples  
 이 예제에서는 `Rnd` 범위는 1에서 6에서 임의의 정수 값을 생성 하는 함수입니다.  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
        <related type="Article" href="~/docs/visual-basic/language-reference/keywords/math-summary.md">수학 요약</related>
      </Docs>
    </Member>
  </Members>
</Type>