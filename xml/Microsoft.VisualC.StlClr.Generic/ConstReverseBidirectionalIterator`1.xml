<Type Name="ConstReverseBidirectionalIterator&lt;TValue&gt;" FullName="Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;TValue&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f2491a073e1a2faa02d3b091377831415df6ce1f" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55389310" /></Metadata><TypeSignature Language="C#" Value="public class ConstReverseBidirectionalIterator&lt;TValue&gt; : Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator&lt;TValue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConstReverseBidirectionalIterator`1&lt;TValue&gt; extends System.Object implements class Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1&lt;!TValue&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ConstReverseBidirectionalIterator(Of TValue)&#xA;Implements IBidirectionalIterator(Of TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TValue&gt;&#xA;public ref class ConstReverseBidirectionalIterator : Microsoft::VisualC::StlClr::Generic::IBidirectionalIterator&lt;TValue&gt;" />
  <TypeSignature Language="F#" Value="type ConstReverseBidirectionalIterator&lt;'Value&gt; = class&#xA;    interface IBidirectionalIterator&lt;'Value&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IBaseIterator&lt;TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator&lt;TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IForwardIterator&lt;TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IOutputIterator&lt;TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TValue">[!INCLUDE[cpp_iter_arg](~/includes/cpp-iter-arg-md.md)]</typeparam>
    <summary>역방향으로 컨테이너의 요소에 액세스하는 반복기를 정의합니다. 감소 연산자를 사용하여 요소를 앞쪽으로 액세스하고 증분 연산자를 사용하여 요소를 뒤쪽으로 액세스할 수 있습니다. 반복기가 가리키는 요소는 수정할 수 없습니다. 상수 역방향 입력 또는 상수 역방향 출력 반복기가 필요한 모든 곳에서 상수 양방향 반복기를 사용할 수 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>새 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체를 할당하고 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConstReverseBidirectionalIterator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConstReverseBidirectionalIterator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>새 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체를 할당하고 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConstReverseBidirectionalIterator (Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (_Right As ConstReverseBidirectionalIterator(Of TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConstReverseBidirectionalIterator(Microsoft::VisualC::StlClr::Generic::ConstReverseBidirectionalIterator&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;'Value&gt; : Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;'Value&gt; -&gt; Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;'Value&gt;" Usage="new Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;'Value&gt; _Right" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right">복사할 기존 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체입니다.</param>
        <summary>기존 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체에서 새 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체를 할당 및 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConstReverseBidirectionalIterator (Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator&lt;TValue&gt; _Iter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1&lt;!TValue&gt; _Iter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (_Iter As IBidirectionalIterator(Of TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConstReverseBidirectionalIterator(Microsoft::VisualC::StlClr::Generic::IBidirectionalIterator&lt;TValue&gt; ^ _Iter);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;'Value&gt; : Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator&lt;'Value&gt; -&gt; Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;'Value&gt;" Usage="new Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;'Value&gt; _Iter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="_Iter" Type="Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Iter">복사할 기존 <see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" /> 개체입니다.</param>
        <summary>기존 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체에서 새 <see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" /> 개체를 할당 및 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConstReverseBidirectionalIterator (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt; _Iter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1&lt;!TValue&gt; _Iter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (_Iter As ReverseBidirectionalIterator(Of TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConstReverseBidirectionalIterator(Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator&lt;TValue&gt; ^ _Iter);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;'Value&gt; : Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;'Value&gt; -&gt; Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;'Value&gt;" Usage="new Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;'Value&gt; _Iter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="_Iter" Type="Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Iter">복사할 기존 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> 개체입니다.</param>
        <summary>기존 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체에서 새 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> 개체를 할당 및 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="base">
      <MemberSignature Language="C#" Value="public Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator&lt;TValue&gt; base ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1&lt;!TValue&gt; base() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.base" />
      <MemberSignature Language="VB.NET" Value="Public Function base () As IBidirectionalIterator(Of TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::VisualC::StlClr::Generic::IBidirectionalIterator&lt;TValue&gt; ^ base();" />
      <MemberSignature Language="F#" Value="member this.base : unit -&gt; Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator&lt;'Value&gt;" Usage="constReverseBidirectionalIterator.base " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체에 대한 기본 기준 반복기를 가져옵니다.</summary>
        <returns><see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체에 대한 기본 기준 반복기입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="constReverseBidirectionalIterator.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체의 복사본을 반환합니다.</summary>
        <returns>현재 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체의 복사본입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="container">
      <MemberSignature Language="C#" Value="public virtual object container ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object container() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.container" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function container () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ container();" />
      <MemberSignature Language="F#" Value="abstract member container : unit -&gt; obj&#xA;override this.container : unit -&gt; obj" Usage="constReverseBidirectionalIterator.container " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>반복기가 이동하고 있는 컨테이너를 가져옵니다.</summary>
        <returns>반복기가 이동하고 있는 컨테이너입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="equal_to">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>두 반복기가 같은 개체인지 여부를 확인합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="equal_to">
      <MemberSignature Language="C#" Value="public bool equal_to (Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool equal_to(class Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      <MemberSignature Language="VB.NET" Value="Public Function equal_to (_Right As ConstReverseBidirectionalIterator(Of TValue)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool equal_to(Microsoft::VisualC::StlClr::Generic::ConstReverseBidirectionalIterator&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="member this.equal_to : Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;'Value&gt; -&gt; bool" Usage="constReverseBidirectionalIterator.equal_to _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right">현재 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체와 비교할 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체입니다.</param>
        <summary>지정된 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체가 현재 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체와 같은지 여부를 확인합니다.</summary>
        <returns>두 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체가 같은 개체이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="equal_to">
      <MemberSignature Language="C#" Value="public virtual bool equal_to (Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool equal_to(class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function equal_to (_Right As IInputIterator(Of TValue)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool equal_to(Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="abstract member equal_to : Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; -&gt; bool&#xA;override this.equal_to : Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; -&gt; bool" Usage="constReverseBidirectionalIterator.equal_to _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right">현재 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체와 비교할 <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> 개체입니다.</param>
        <summary>지정된 <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> 개체가 현재 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체와 같은지 여부를 확인합니다.</summary>
        <returns>두 반복기가 같은 개체이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="get_bias">
      <MemberSignature Language="C#" Value="public virtual int get_bias ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 get_bias() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_bias" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function get_bias () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int get_bias();" />
      <MemberSignature Language="F#" Value="abstract member get_bias : unit -&gt; int&#xA;override this.get_bias : unit -&gt; int" Usage="constReverseBidirectionalIterator.get_bias " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>반복기의 바이어스를 가져옵니다. 바이어스는 요소 0에 대한 반복기의 오프셋입니다.</summary>
        <returns>반복기의 바이어스입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="get_cref">
      <MemberSignature Language="C#" Value="public virtual ref TValue get_cref ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TValue get_cref() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_cref" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function get_cref () As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TValue % get_cref();" />
      <MemberSignature Language="F#" Value="abstract member get_cref : unit -&gt; &#xA;override this.get_cref : unit -&gt; " Usage="constReverseBidirectionalIterator.get_cref " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue RefType="Ref">
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>반복기가 현재 가리키고 있는 요소에 대한 상수 참조를 반환합니다.</summary>
        <returns>반복기가 현재 가리키고 있는 요소에 대한 상수 참조입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="get_node">
      <MemberSignature Language="C#" Value="public virtual object get_node ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object get_node() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_node" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function get_node () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ get_node();" />
      <MemberSignature Language="F#" Value="abstract member get_node : unit -&gt; obj&#xA;override this.get_node : unit -&gt; obj" Usage="constReverseBidirectionalIterator.get_node " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>반복기가 가리키고 있는 노드 또는 요소를 가져옵니다.</summary>
        <returns>반복기가 가리키고 있는 노드입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="get_ref">
      <MemberSignature Language="C#" Value="public virtual ref TValue get_ref ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TValue get_ref() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_ref" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function get_ref () As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TValue % get_ref();" />
      <MemberSignature Language="F#" Value="abstract member get_ref : unit -&gt; &#xA;override this.get_ref : unit -&gt; " Usage="constReverseBidirectionalIterator.get_ref " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue RefType="Ref">
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>반복기가 현재 가리키고 있는 요소에 대한 참조를 반환합니다.</summary>
        <returns>반복기가 현재 가리키고 있는 요소에 대한 참조입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="next">
      <MemberSignature Language="C#" Value="public virtual void next ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void next() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.next" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub next ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void next();" />
      <MemberSignature Language="F#" Value="abstract member next : unit -&gt; unit&#xA;override this.next : unit -&gt; unit" Usage="constReverseBidirectionalIterator.next " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>반복기를 기본 컨테이너의 이전 위치로, 또는 컨테이너를 모두 이동한 경우에는 컨테이너 시작 부분 맨 앞의 첫 번째 위치로 감소시킵니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Assign">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 개체를 현재 개체에 할당합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Assign">
      <MemberSignature Language="C#" Value="public Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;TValue&gt; op_Assign (Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname instance class Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1&lt;!TValue&gt; op_Assign(class Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      <MemberSignature Language="VB.NET" Value="Public op_Assign (_Right As ConstReverseBidirectionalIterator(Of TValue)) As ConstReverseBidirectionalIterator(Of TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::VisualC::StlClr::Generic::ConstReverseBidirectionalIterator&lt;TValue&gt; ^ op_Assign(Microsoft::VisualC::StlClr::Generic::ConstReverseBidirectionalIterator&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="member this.op_Assign : Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;'Value&gt; -&gt; Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;'Value&gt;" Usage="constReverseBidirectionalIterator.op_Assign _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right">현재 개체에 할당할 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체입니다.</param>
        <summary>지정된 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체를 현재 개체에 할당합니다.</summary>
        <returns>*가 현재 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Assign">
      <MemberSignature Language="C#" Value="public Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;TValue&gt; op_Assign (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname instance class Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1&lt;!TValue&gt; op_Assign(class Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      <MemberSignature Language="VB.NET" Value="Public op_Assign (_Right As ReverseBidirectionalIterator(Of TValue)) As ConstReverseBidirectionalIterator(Of TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::VisualC::StlClr::Generic::ConstReverseBidirectionalIterator&lt;TValue&gt; ^ op_Assign(Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="member this.op_Assign : Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;'Value&gt; -&gt; Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;'Value&gt;" Usage="constReverseBidirectionalIterator.op_Assign _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right">현재 개체에 할당할 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> 개체입니다.</param>
        <summary>지정된 <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> 개체를 현재 개체에 할당합니다.</summary>
        <returns>*가 현재 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Decrement">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>반복기를 한 요소씩 줄입니다. 역방향 반복기 감소는 일반 반복기 증가와 같습니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Decrement">
      <MemberSignature Language="C#" Value="public void operator -- (ref Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname instance class System.void op_Decrement(class Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@)" />
      <MemberSignature Language="VB.NET" Value="Public op_Decrement (ByRef  As ConstReverseBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ operator --(Microsoft::VisualC::StlClr::Generic::ConstReverseBidirectionalIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="member this.op_Decrement :  -&gt; unit" Usage="constReverseBidirectionalIterator.op_Decrement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="">현재 반복기에 대한 참조입니다.</param>
        <summary>반복기를 한 요소씩 줄입니다. 역방향 반복기 감소는 일반 반복기 증가와 같습니다. 이는 감소 연산자의 전위 버전입니다.</summary>
        <returns>반복기입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Decrement">
      <MemberSignature Language="C#" Value="public void operator -- (ref Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;TValue&gt; , int );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname instance class System.void op_Decrement(class Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1&lt;!TValue&gt;&amp; , int32 ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public op_Decrement (ByRef  As ConstReverseBidirectionalIterator(Of TValue),  As Integer) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ operator --(Microsoft::VisualC::StlClr::Generic::ConstReverseBidirectionalIterator&lt;TValue&gt; ^ % , int );" />
      <MemberSignature Language="F#" Value="member this.op_Decrement :  * int -&gt; unit" Usage="constReverseBidirectionalIterator.op_Decrement (, )" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="System.Int32" RefType="ref" />
        <Parameter Name="A_0" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="">현재 반복기에 대한 참조입니다.</param>
        <param name="A_0">연산자의 후위 버전임을 나타내는 사용하지 않는 매개 변수입니다.</param>
        <summary>반복기를 한 요소씩 줄입니다. 역방향 반복기 감소는 일반 반복기 증가와 같습니다. 감소 연산자의 후위 버전입니다.</summary>
        <returns>반복기입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Equality">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>두 반복기가 같은 개체인지 여부를 확인합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public bool operator == (Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname instance bool op_Equality(class Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      <MemberSignature Language="VB.NET" Value="Public Operator == (_Right As ConstReverseBidirectionalIterator(Of TValue)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool operator ==(Microsoft::VisualC::StlClr::Generic::ConstReverseBidirectionalIterator&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="member this.( = ) : Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;'Value&gt; -&gt; bool" Usage="= _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right">현재 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체와 비교할 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체입니다.</param>
        <summary>지정된 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체가 현재 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체와 같은지 여부를 확인합니다.</summary>
        <returns>두 반복기가 같은 개체이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public bool operator == (Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname instance bool op_Equality(class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Operator == (_Right As IInputIterator(Of TValue)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool operator ==(Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="member this.( = ) : Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; -&gt; bool" Usage="= _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right">현재 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체와 비교할 <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> 개체입니다.</param>
        <summary>지정된 <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> 개체가 현재 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체와 같은지 여부를 확인합니다.</summary>
        <returns>두 반복기가 같은 개체이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public implicit operator Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator&lt;TValue&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname instance class Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1&lt;!TValue&gt; op_Implicit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}" />
      <MemberSignature Language="VB.NET" Value="Public Widening Operator CType () As IBidirectionalIterator(Of TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; operator Microsoft::VisualC::StlClr::Generic::IBidirectionalIterator&lt;TValue&gt; ^();" />
      <MemberSignature Language="F#" Value="member this.op_Implicit : unit -&gt; Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator&lt;'Value&gt;" Usage="constReverseBidirectionalIterator.op_Implicit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />를 <see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />로 변환합니다.</summary>
        <returns><see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />인 현재 반복기입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Increment">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>반복기를 한 요소씩 늘립니다. 역방향 반복기 증가는 일반 반복기 감소와 같습니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Increment">
      <MemberSignature Language="C#" Value="public void operator ++ (ref Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname instance class System.void op_Increment(class Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@)" />
      <MemberSignature Language="VB.NET" Value="Public op_Increment (ByRef  As ConstReverseBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ operator ++(Microsoft::VisualC::StlClr::Generic::ConstReverseBidirectionalIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="member this.op_Increment :  -&gt; unit" Usage="constReverseBidirectionalIterator.op_Increment " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="">현재 반복기에 대한 참조입니다.</param>
        <summary>반복기를 한 요소씩 늘립니다. 역방향 반복기 증가는 일반 반복기 감소와 같습니다. 이는 증가 연산자의 전위 버전입니다.</summary>
        <returns>반복기입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Increment">
      <MemberSignature Language="C#" Value="public void operator ++ (ref Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;TValue&gt; , int );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname instance class System.void op_Increment(class Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1&lt;!TValue&gt;&amp; , int32 ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public op_Increment (ByRef  As ConstReverseBidirectionalIterator(Of TValue),  As Integer) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ operator ++(Microsoft::VisualC::StlClr::Generic::ConstReverseBidirectionalIterator&lt;TValue&gt; ^ % , int );" />
      <MemberSignature Language="F#" Value="member this.op_Increment :  * int -&gt; unit" Usage="constReverseBidirectionalIterator.op_Increment (, )" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="System.Int32" RefType="ref" />
        <Parameter Name="A_0" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="">현재 반복기에 대한 참조입니다.</param>
        <param name="A_0">증가 연산자의 후위 버전임을 나타냅니다.</param>
        <summary>반복기를 한 요소씩 늘립니다. 역방향 반복기 증가는 일반 반복기 감소와 같습니다. 증가 연산자의 후위 버전입니다.</summary>
        <returns>반복기입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Inequality">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>두 반복기가 같은 개체가 아닌지 여부를 확인합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public bool operator != (Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname instance bool op_Inequality(class Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      <MemberSignature Language="VB.NET" Value="Public Operator != (_Right As ConstReverseBidirectionalIterator(Of TValue)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool operator !=(Microsoft::VisualC::StlClr::Generic::ConstReverseBidirectionalIterator&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="member this.op_Inequality : Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;'Value&gt; -&gt; bool" Usage="constReverseBidirectionalIterator.op_Inequality _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right">현재 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체와 비교할 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체입니다.</param>
        <summary>지정된 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체가 현재 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체와 다른지 여부를 확인합니다.</summary>
        <returns>두 반복기가 서로 다른 개체이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public bool operator != (Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname instance bool op_Inequality(class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Operator != (_Right As IInputIterator(Of TValue)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool operator !=(Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="member this.op_Inequality : Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; -&gt; bool" Usage="constReverseBidirectionalIterator.op_Inequality _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right">현재 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체와 비교할 <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> 개체입니다.</param>
        <summary>지정된 <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> 개체가 현재 <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> 개체와 다른지 여부를 확인합니다.</summary>
        <returns>두 반복기가 서로 다른 개체이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_MemberSelection">
      <MemberSignature Language="C#" Value="public static ref TValue op_MemberSelection (Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;TValue&gt; _Left);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname !TValue op_MemberSelection(class Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1&lt;!TValue&gt; _Left) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_MemberSelection (_Left As ConstReverseBidirectionalIterator(Of TValue)) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TValue % op_MemberSelection(Microsoft::VisualC::StlClr::Generic::ConstReverseBidirectionalIterator&lt;TValue&gt; ^ _Left);" />
      <MemberSignature Language="F#" Value="static member op_MemberSelection : Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;'Value&gt; -&gt; " Usage="Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;'Value&gt;.op_MemberSelection _Left" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1000")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue RefType="Ref">
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Left" Type="Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Left">연산자가 적용되는 반복기입니다.</param>
        <summary>반복기가 현재 가리키고 있는 요소를 반환합니다.</summary>
        <returns>반복기가 현재 가리키고 있는 요소입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_PointerDereference">
      <MemberSignature Language="C#" Value="public static ref TValue op_PointerDereference (Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;TValue&gt; _Left);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname !TValue op_PointerDereference(class Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1&lt;!TValue&gt; _Left) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_PointerDereference (_Left As ConstReverseBidirectionalIterator(Of TValue)) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TValue % op_PointerDereference(Microsoft::VisualC::StlClr::Generic::ConstReverseBidirectionalIterator&lt;TValue&gt; ^ _Left);" />
      <MemberSignature Language="F#" Value="static member op_PointerDereference : Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;'Value&gt; -&gt; " Usage="Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;'Value&gt;.op_PointerDereference _Left" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1000")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue RefType="Ref">
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Left" Type="Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Left">연산자가 적용되는 반복기입니다.</param>
        <summary>반복기가 현재 가리키고 있는 요소를 반환합니다.</summary>
        <returns>반복기가 현재 가리키고 있는 요소입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="prev">
      <MemberSignature Language="C#" Value="public virtual void prev ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void prev() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.prev" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub prev ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void prev();" />
      <MemberSignature Language="F#" Value="abstract member prev : unit -&gt; unit&#xA;override this.prev : unit -&gt; unit" Usage="constReverseBidirectionalIterator.prev " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1.prev</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>반복기를 기본 컨테이너의 다음 위치로, 또는 컨테이너를 모두 이동한 경우에는 컨테이너 끝 뒤의 첫 번째 위치로 증가시킵니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="valid">
      <MemberSignature Language="C#" Value="public virtual bool valid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool valid() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.valid" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function valid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool valid();" />
      <MemberSignature Language="F#" Value="abstract member valid : unit -&gt; bool&#xA;override this.valid : unit -&gt; bool" Usage="constReverseBidirectionalIterator.valid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>반복기가 유효하며 기본 컨테이너를 이동하는 데 안전하게 사용할 수 있는지 여부를 확인합니다.</summary>
        <returns>반복기가 유효하고 사용하기에 안전하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>