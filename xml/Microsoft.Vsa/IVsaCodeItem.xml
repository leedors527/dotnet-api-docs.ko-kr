<Type Name="IVsaCodeItem" FullName="Microsoft.Vsa.IVsaCodeItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="74ba0baff0b9d3068b698095aeed607c2dada128" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55393444" /></Metadata><TypeSignature Language="C#" Value="public interface IVsaCodeItem : Microsoft.Vsa.IVsaItem" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IVsaCodeItem implements class Microsoft.Vsa.IVsaItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Vsa.IVsaCodeItem" />
  <TypeSignature Language="VB.NET" Value="Public Interface IVsaCodeItem&#xA;Implements IVsaItem" />
  <TypeSignature Language="C++ CLI" Value="public interface class IVsaCodeItem : Microsoft::Vsa::IVsaItem" />
  <TypeSignature Language="F#" Value="type IVsaCodeItem = interface&#xA;    interface IVsaItem" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Vsa</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Vsa.IVsaItem</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Obsolete("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("E0C0FFE7-7eea-4ee5-b7e4-0080c7eb0b74")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>스크립트 엔진이 컴파일할 코드 항목을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks  
클래스, 모듈 또는 기타 소스 텍스트에 지정 된 코드 항목을 포함할 수 있습니다.

IVsaCodeItem 인터페이스의 모든 멤버를 호출 하는 데 필요한 권한은 없습니다.

스크립트 엔진이 코드 항목을 추가 하려면이 인터페이스를 구현 합니다.

]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddEventSource">
      <MemberSignature Language="C#" Value="public void AddEventSource (string eventSourceName, string eventSourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddEventSource(string eventSourceName, string eventSourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaCodeItem.AddEventSource(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEventSource (eventSourceName As String, eventSourceType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEventSource(System::String ^ eventSourceName, System::String ^ eventSourceType);" />
      <MemberSignature Language="F#" Value="abstract member AddEventSource : string * string -&gt; unit" Usage="iVsaCodeItem.AddEventSource (eventSourceName, eventSourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
        <Parameter Name="eventSourceType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceName">이벤트 소스의 프로그래밍 이름입니다.</param>
        <param name="eventSourceType">이벤트 소스의 형식 이름입니다.</param>
        <summary>코드 항목에 이벤트 소스를 추가합니다. 코드 항목은 호스트가 구현하는 IVsaSite.GetEventSourceInstance 메서드를 호출하여 명명된 이벤트 소스에 이벤트를 후크하는 데 이벤트 소스를 사용합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
스크립트 엔진이 명명 된 이벤트 소스에 이벤트를 후크 AddEventSource 메서드에서 제공 하는 정보를 사용 합니다. 호스트에서 구현 하는 IVsaSite.GetEventSourceInstance 메서드를 호출 하 여 이벤트 소스를 가져옵니다. AddEventSource 메서드는 호스트에서 제공한 개체에서 발생 하는 이벤트를 처리 하는 클래스를 만듭니다.

> [!NOTE]
> JScript.NET 스크립트 엔진에서이 메서드를 지원 하지 않습니다. JScript.NET 엔진 이벤트 후크 해야 있는 경우에는 전역 항목을 사용 하 여 수행 해야 합니다. 대신 이벤트 원본, JScript.NET 엔진 AppGlobal 항목 형식을 사용 합니다. 자세한 내용은 VsaItemType를 참조 하세요.


코드 항목, 이벤트 소스 개체 이름으로 액세스할 수 있습니다 하 고 액세스 되 면 개체에 대해 이벤트 처리기를 작성할 수 있습니다. 이벤트 소스 유형에 관리 되지 않는 호스트에서 형식 개체를 구현 하는 이벤트 소스를 용이 하 게 아니라 문자열로 전달 됩니다.

컴파일러는 형식에서 제공 하는 메서드에 바인딩할 eventSourceType 매개 변수를 사용 합니다. 스크립트 엔진 형식 개체의 인스턴스를 요청 하려면 IVsaSite.GetEventSourceInstance 메서드를 호출 하는 경우 나중에 사용도 됩니다.

스크립트 엔진에 대 한 이벤트를 연결 하기 위한 메커니즘에 대 한 자세한 내용은 IVsaSite.GetEventSourceInstance 메서드를 참조 하세요.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSourceText">
      <MemberSignature Language="C#" Value="public void AppendSourceText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendSourceText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaCodeItem.AppendSourceText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSourceText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSourceText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member AppendSourceText : string -&gt; unit" Usage="iVsaCodeItem.AppendSourceText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">코드 항목에 추가되는 텍스트입니다.</param>
        <summary>지정된 텍스트를 코드 항목 끝에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
추가 된 소스 텍스트 유효성 검사가 수행 되지 않습니다. 이러한 이유로 오류가 있는 경우 노출할 IVsaEngine.Compile 메서드에 다음 호출에서.

추가 된 소스 텍스트를 단일 문자열로 제공 됩니다. 문자열 해야 모든 서식 지정이 직접 제공 해야 합니다.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeDOM">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeObject CodeDOM { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeObject CodeDOM" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaCodeItem.CodeDOM" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeDOM As CodeObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeObject ^ CodeDOM { System::CodeDom::CodeObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeDOM : System.CodeDom.CodeObject" Usage="Microsoft.Vsa.IVsaCodeItem.CodeDOM" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>코드 항목에 표시되는 CodeDOM(코드 문서 개체 모델)을 가져옵니다.</summary>
        <value>코드 항목에 대 한 CodeDOM 합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
CodeDOM 속성은 사용할 수 없을 때까지 IVsaEngine.Compile 메서드를 호출한 후 하므로 컴파일 단계의 스크립트 엔진의 일부로 일반적으로 생성 됩니다. 일부 VSA 구현은 명시적인 컴파일 단계가 필요 없이 CodeDOM을 동적으로 제공할 수 있지만 호스트는이 동작에 의존할 수 없습니다. 일부 스크립트 엔진, 예를 들어, JScript.NET 스크립트 엔진에서이 동작을 지원 하지 않습니다.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEventSource">
      <MemberSignature Language="C#" Value="public void RemoveEventSource (string eventSourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveEventSource(string eventSourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaCodeItem.RemoveEventSource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveEventSource (eventSourceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveEventSource(System::String ^ eventSourceName);" />
      <MemberSignature Language="F#" Value="abstract member RemoveEventSource : string -&gt; unit" Usage="iVsaCodeItem.RemoveEventSource eventSourceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceName">제거될 이벤트 소스의 프로그래밍 이름입니다.</param>
        <summary>코드 항목에서 지정된 이벤트 소스를 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
이벤트 소스를 제거 해도 원본 텍스트에서 기본 이벤트 처리기를 제거 되지 않습니다. 대신, 이벤트는 더 이상 이벤트 처리기에는 알림을 발생 시킵니다. 따라서 이벤트 원본을 삭제 해도 기본 함수 소스 코드를 유지 하는 경우 컴파일러 오류가 발생 합니다.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceText">
      <MemberSignature Language="C#" Value="public string SourceText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaCodeItem.SourceText" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceText : string with get, set" Usage="Microsoft.Vsa.IVsaCodeItem.SourceText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>자동 생성된 코드가 있으면 해당 코드를 포함하여 지정된 코드 항목의 텍스트를 설정하거나 가져옵니다.</summary>
        <value>코드 항목의 원본 텍스트입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
이 속성을 설정 하는 경우 텍스트 하지 유효성 검사를 거쳐야 합니다. 이러한 이유로 오류가 있는 경우 노출할 IVsaEngine.Compile 메서드에 다음 호출에서.

SourceText 속성은 반환 캐리지 등의 서식 문자를 포함 하는 하나의 큰 문자열의 소스 텍스트를 반환 합니다.

이 속성을 가져오는 엔진 하지 닫아야 합니다. 엔진은이 속성을 설정 하려면 해야 하지 닫히고 엔진 실행 하지 않아야 합니다.

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>