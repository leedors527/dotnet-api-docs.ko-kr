<Type Name="SystemEvents" FullName="Microsoft.Win32.SystemEvents">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dd45507d5d46be055639d11abca2cb74dd3a6975" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56786534" /></Metadata><TypeSignature Language="C#" Value="public sealed class SystemEvents" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SystemEvents extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.SystemEvents" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SystemEvents" />
  <TypeSignature Language="C++ CLI" Value="public ref class SystemEvents sealed" />
  <TypeSignature Language="F#" Value="type SystemEvents = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>시스템 이벤트 알림에 액세스할 수 있도록 합니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Win32.SystemEvents> 클래스는 특정 유형의 시스템 이벤트에 응답 하는 기능을 제공 합니다.  
  
 시스템 이벤트는 시스템 이벤트를 모니터링 하는 스레드를 사용 하 여 이벤트와 연결 된 모든 대리자 호출 됩니다. 따라서 모든 호출에 이벤트 처리기 스레드로부터 안전 해야 합니다. 이 클래스의 멤버로 노출 되지 않는 시스템 이벤트를 호출 해야 하는 경우 사용할 수 있습니다는 <xref:Microsoft.Win32.SystemEvents.InvokeOnEventsThread%2A> 메서드.  
  
> [!CAUTION]
>  다른 애플리케이션의 작동을 방해할 수 있으므로 시스템 이벤트 처리기를 발생 시키는 스레드에서 시간이 많이 걸리는 처리를 수행 하지 않습니다.  
  
> [!NOTE]
>  일부 시스템 이벤트에서 발생 하지 않을 수 있습니다 [!INCLUDE[windowsver](~/includes/windowsver-md.md)]합니다. 애플리케이션에서 예상 대로 작동 하는지 확인 해야 [!INCLUDE[windowsver](~/includes/windowsver-md.md)]합니다.  
  
   
  
## Examples  
 이 섹션에서는 두 가지 예제를 포함합니다. 첫 번째 예제에서는 일반 애플리케이션에서 시스템 이벤트를 사용 하 고 두 번째 예제에는 Windows 서비스의 시스템 이벤트를 사용 하는 방법을 보여 줍니다.  
  
 **예제 1**  
  
 다음 코드 예제는 일부 시스템 이벤트에 관심을를 등록 하 고 해당 이벤트가 발생 하도록 이벤트에 대 한 대기 합니다. 표시 된 출력에는 사용자의 디스플레이 해상도 변경 하는 경우 발생 합니다.  
  
 [!code-cpp[SystemEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SystemEvents/cpp/SystemEvents.cpp#1)]
 [!code-csharp[SystemEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemEvents/CS/SystemEvents.cs#1)]
 [!code-vb[SystemEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemEvents/VB/SystemEvents.vb#1)]  
  
 **예제 2**  
  
 다음 코드 예제에서는 처리 하는 간단한 Windows 서비스를 <xref:Microsoft.Win32.SystemEvents.TimeChanged> 고 <xref:Microsoft.Win32.SystemEvents.UserPreferenceChanged> 이벤트입니다. 이 예제에서는 명명 된 서비스를 포함 `SimpleService`, 라는 폼을 `HiddenForm`, 및는 설치 관리자입니다. 형식은 시스템 이벤트에 필요한 메시지 루프를 제공 합니다.  
  
> [!NOTE]
>  데스크톱과 상호 작용 하도록 허용 하지 않는 한 서비스 메시지 루프를 갖지 않습니다. 숨겨진된 폼 메시지 루프를 제공 하지 않으면이 예에서 같이 서비스가 로컬 시스템 계정으로 실행 해야 하 고 데스크톱과 상호 작용할 수 있도록 수동 작업이 필요 합니다. 즉, 관리자가 수동으로 확인 해야 합니다는 **service와 데스크톱 상호 작용 하도록 허용** 확인란 합니다 **로그온** 서비스 속성 대화 상자를 탭 합니다. 이 경우 메시지 루프를 자동으로 제공 됩니다. 서비스는 로컬 시스템 계정으로 실행 되는 경우에이 옵션을 사용할 수 있습니다. 데스크톱과 상호 작용을 프로그래밍 방식으로 사용할 수 없습니다.  
  
 이 예제에서 서비스 인스턴스가 실행 되는 스레드를 시작 `HiddenForm`합니다. 이벤트 후크 이며 형태로 처리 됩니다. 먼저 폼이 완전히 로드 되도록 폼의 load 이벤트에서 이벤트를 후크하여 그렇지 않은 경우 이벤트를 발생 하지 않습니다.  
  
> [!NOTE]
>  이 예제에서는 일반적으로 Visual Studio 디자이너에서 생성 하는 폼 초기화 코드를 포함 하 여 모든 필요한 코드를 제공 합니다. Visual Studio에서 서비스를 개발 하는 경우 두 번째 partial 클래스를 생략 하 고 사용할 수는 **속성** 테두리 스타일을 0으로 숨겨진된 폼의 너비와 높이가 설정 창을 <xref:System.Windows.Forms.FormBorderStyle.None?displayProperty=nameWithType>, 및 창 상태 <xref:System.Windows.Forms.FormWindowState.Minimized?displayProperty=nameWithType>.  
  
 예제를 실행 합니다.  
  
1.  명령줄에서 코드를 컴파일하십시오. 소스 파일에 사용 하는 이름은 중요 하지 않습니다.  
  
2.  사용 하 여 명령줄에서 서비스를 설치 합니다 [Installutil.exe (설치 관리자 도구)](~/docs/framework/tools/installutil-exe-installer-tool.md) 유틸리티입니다. 예를 들어 `InstallUtil example.exe` 소스 파일 이름이 `example.cs` 또는 `example.vb`합니다. 서비스를 설치 하려면 관리자 여야 합니다.  
  
3.  서비스 콘솔을 사용 하 여 서비스를 시작 합니다.  
  
4.  시스템 시간을 변경 하거나 마우스 속성과 같은 사용자 기본 설정을 변경 합니다.  
  
5.  메시지를 볼 합니다 **애플리케이션** 이벤트 뷰어의 범주입니다.  
  
6.  서비스 콘솔을 사용 하 여 서비스를 중지 합니다.  
  
7.  서비스를 사용 하 여 명령줄에서 제거 된 `/u` 옵션입니다. 예를 들어 `InstallUtil /u example.exe`과 같은 형식입니다.  
  
 [!code-csharp[ManagedWindowsService#1](~/samples/snippets/csharp/VS_Snippets_CLR/ManagedWindowsService/cs/source.cs#1)]
 [!code-vb[ManagedWindowsService#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ManagedWindowsService/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">시스템 리소스에 대 한 전체 액세스 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다. 연결 된 상태:</permission>
    <altmember cref="T:Microsoft.Win32.PowerModeChangedEventHandler" />
    <altmember cref="T:Microsoft.Win32.SessionEndedEventHandler" />
    <altmember cref="T:Microsoft.Win32.SessionEndingEventHandler" />
    <altmember cref="T:Microsoft.Win32.SessionSwitchEventHandler" />
    <altmember cref="T:Microsoft.Win32.TimerElapsedEventHandler" />
    <altmember cref="T:Microsoft.Win32.UserPreferenceChangedEventHandler" />
    <altmember cref="T:Microsoft.Win32.UserPreferenceChangingEventHandler" />
  </Docs>
  <Members>
    <Member MemberName="CreateTimer">
      <MemberSignature Language="C#" Value="public static IntPtr CreateTimer (int interval);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateTimer(int32 interval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SystemEvents.CreateTimer(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTimer (interval As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr CreateTimer(int interval);" />
      <MemberSignature Language="F#" Value="static member CreateTimer : int -&gt; nativeint" Usage="Microsoft.Win32.SystemEvents.CreateTimer interval" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="interval">타이머 알림 사이의 간격(밀리초)을 지정합니다.</param>
        <summary>시스템 이벤트 창과 연결된 새 창 타이머를 만듭니다.</summary>
        <returns>새 타이머의 ID입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">간격이 0 이하인 경우</exception>
        <exception cref="T:System.InvalidOperationException">현재 컨텍스트에서는 시스템 이벤트 알림이 지원되지 않습니다. 예를 들어, 서버 프로세스에서 전역 시스템 이벤트 알림을 지원하지 않을 수 있습니다.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">시스템 이벤트 창 스레드를 만드는 데 실패했거나 타이머를 만드는 데 실패한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="DisplaySettingsChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler DisplaySettingsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DisplaySettingsChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.DisplaySettingsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event DisplaySettingsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ DisplaySettingsChanged;" />
      <MemberSignature Language="F#" Value="member this.DisplaySettingsChanged : EventHandler " Usage="member this.DisplaySettingsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 디스플레이 설정을 변경할 때 발생됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  정적 이벤트 이기 때문에 애플리케이션 삭제 되거나 메모리 누수가 발생 하는 경우 이벤트 처리기를 분리 해야 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 모니터링 하는 방법에 설명 합니다 <xref:Microsoft.Win32.SystemEvents.DisplaySettingsChanged> 이벤트입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:Microsoft.Win32.SystemEvents> 클래스입니다.  
  
 [!code-cpp[SystemEvents#2](~/samples/snippets/cpp/VS_Snippets_Winforms/SystemEvents/cpp/SystemEvents.cpp#2)]
 [!code-csharp[SystemEvents#2](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemEvents/CS/SystemEvents.cs#2)]
 [!code-vb[SystemEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemEvents/VB/SystemEvents.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">현재 컨텍스트에서는 시스템 이벤트 알림이 지원되지 않습니다. 예를 들어, 서버 프로세스에서 전역 시스템 이벤트 알림을 지원하지 않을 수 있습니다.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">시스템 이벤트 창 스레드를 만들지 못한 경우</exception>
        <altmember cref="E:Microsoft.Win32.SystemEvents.DisplaySettingsChanging" />
      </Docs>
    </Member>
    <Member MemberName="DisplaySettingsChanging">
      <MemberSignature Language="C#" Value="public static event EventHandler DisplaySettingsChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DisplaySettingsChanging" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.DisplaySettingsChanging" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event DisplaySettingsChanging As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ DisplaySettingsChanging;" />
      <MemberSignature Language="F#" Value="member this.DisplaySettingsChanging : EventHandler " Usage="member this.DisplaySettingsChanging : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>디스플레이 설정을 변경할 때 발생됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  정적 이벤트 이기 때문에 애플리케이션 삭제 되거나 메모리 누수가 발생 하는 경우 이벤트 처리기를 분리 해야 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">현재 컨텍스트에서는 시스템 이벤트 알림이 지원되지 않습니다. 예를 들어, 서버 프로세스에서 전역 시스템 이벤트 알림을 지원하지 않을 수 있습니다.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">시스템 이벤트 창 스레드를 만들지 못한 경우</exception>
        <altmember cref="E:Microsoft.Win32.SystemEvents.DisplaySettingsChanged" />
      </Docs>
    </Member>
    <Member MemberName="EventsThreadShutdown">
      <MemberSignature Language="C#" Value="public static event EventHandler EventsThreadShutdown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EventsThreadShutdown" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.EventsThreadShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event EventsThreadShutdown As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ EventsThreadShutdown;" />
      <MemberSignature Language="F#" Value="member this.EventsThreadShutdown : EventHandler " Usage="member this.EventsThreadShutdown : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>시스템 이벤트를 수신하는 스레드가 종료되기 전에 발생됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트는 시스템 이벤트를 수신 하는 스레드가 종료 되려고 하는 대로 발생 합니다. 시스템 이벤트를 수신 하는 스레드를 사용 하 여 시스템 이벤트 대리자가 호출 됩니다.  
  
> [!CAUTION]
>  정적 이벤트 이기 때문에 애플리케이션 삭제 되거나 메모리 누수가 발생 하는 경우 이벤트 처리기를 분리 해야 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">현재 컨텍스트에서는 시스템 이벤트 알림이 지원되지 않습니다. 예를 들어, 서버 프로세스에서 전역 시스템 이벤트 알림을 지원하지 않을 수 있습니다.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">시스템 이벤트 창 스레드를 만들지 못한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="InstalledFontsChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler InstalledFontsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler InstalledFontsChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.InstalledFontsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event InstalledFontsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ InstalledFontsChanged;" />
      <MemberSignature Language="F#" Value="member this.InstalledFontsChanged : EventHandler " Usage="member this.InstalledFontsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 시스템 글꼴을 추가하거나 제거할 때 발생됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  정적 이벤트 이기 때문에 애플리케이션 삭제 되거나 메모리 누수가 발생 하는 경우 이벤트 처리기를 분리 해야 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">현재 컨텍스트에서는 시스템 이벤트 알림이 지원되지 않습니다. 예를 들어, 서버 프로세스에서 전역 시스템 이벤트 알림을 지원하지 않을 수 있습니다.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">시스템 이벤트 창 스레드를 만들지 못한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="InvokeOnEventsThread">
      <MemberSignature Language="C#" Value="public static void InvokeOnEventsThread (Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvokeOnEventsThread(class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SystemEvents.InvokeOnEventsThread(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InvokeOnEventsThread (method As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InvokeOnEventsThread(Delegate ^ method);" />
      <MemberSignature Language="F#" Value="static member InvokeOnEventsThread : Delegate -&gt; unit" Usage="Microsoft.Win32.SystemEvents.InvokeOnEventsThread method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="method">시스템 이벤트를 수신하는 스레드를 사용하여 호출할 대리자입니다.</param>
        <summary>시스템 이벤트를 수신하는 스레드를 사용하여 지정된 대리자를 호출합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 노출 되지 않는 시스템 이벤트를 처리 해야 하는 든 지가이 메서드를 사용할 수는 <xref:Microsoft.Win32.SystemEvents> 클래스입니다.  
  
 이 메서드를 호출 하면 지정 된 대리자를 애플리케이션은 시스템 이벤트를 처리 하는 데 사용 되는 스레드에 의해 호출 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">현재 컨텍스트에서는 시스템 이벤트 알림이 지원되지 않습니다. 예를 들어, 서버 프로세스에서 전역 시스템 이벤트 알림을 지원하지 않을 수 있습니다.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">시스템 이벤트 창 스레드를 만들지 못한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="KillTimer">
      <MemberSignature Language="C#" Value="public static void KillTimer (IntPtr timerId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void KillTimer(native int timerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SystemEvents.KillTimer(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub KillTimer (timerId As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void KillTimer(IntPtr timerId);" />
      <MemberSignature Language="F#" Value="static member KillTimer : nativeint -&gt; unit" Usage="Microsoft.Win32.SystemEvents.KillTimer timerId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timerId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="timerId">종료할 타이머의 ID입니다.</param>
        <summary>주어진 ID로 지정된 타이머를 종료합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">현재 컨텍스트에서는 시스템 이벤트 알림이 지원되지 않습니다. 예를 들어, 서버 프로세스에서 전역 시스템 이벤트 알림을 지원하지 않을 수 있습니다.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">시스템 이벤트 창 스레드를 만드는 데 실패했거나 타이머를 종료하는 데 실패한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="LowMemory">
      <MemberSignature Language="C#" Value="public static event EventHandler LowMemory;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LowMemory" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.LowMemory" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event LowMemory As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ LowMemory;" />
      <MemberSignature Language="F#" Value="member this.LowMemory : EventHandler " Usage="member this.LowMemory : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2;netcore-3.0">
          <AttributeName>System.Obsolete("This event has been deprecated. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0">
          <AttributeName>System.Obsolete("This event has been deprecated. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>시스템에 사용할 수 있는 RAM이 없을 때 발생됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트는 WM_COMPACTING 메시지를 래핑합니다. 이 메시지는 시스템 메모리를 압축 하면 시스템 시간 30 비트를 60 초 간격의 12.5% 이상이 소요 되는지 감지할 때 모든 최상위 창으로 전송 됩니다. 이 시스템 메모리가 부족을 나타냅니다.  
  
> [!NOTE]
>  이 이벤트는 메시지 펌프를 실행 하는 경우에 발생 합니다. Windows 서비스에서 사용 되는 숨겨진된 폼 메시지 펌프를 수동으로 시작 된 경우가 아니면이 이벤트가 발생 하지 않습니다. Windows 서비스의 숨겨진된 폼을 사용 하 여 시스템 이벤트를 처리 하는 방법을 보여 주는 코드 예제를 참조 하세요.를 <xref:Microsoft.Win32.SystemEvents> 클래스입니다.  
  
> [!CAUTION]
>  정적 이벤트 이기 때문에 애플리케이션 삭제 되거나 메모리 누수가 발생 하는 경우 이벤트 처리기를 분리 해야 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">현재 컨텍스트에서는 시스템 이벤트 알림이 지원되지 않습니다. 예를 들어, 서버 프로세스에서 전역 시스템 이벤트 알림을 지원하지 않을 수 있습니다.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">시스템 이벤트 창 스레드를 만들지 못한 경우</exception>
        <block subset="none" type="usage"><para>이 메시지는 16 비트 Windows 기반 애플리케이션 호환성을 위해서만 제공 됩니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="PaletteChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler PaletteChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaletteChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.PaletteChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event PaletteChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ PaletteChanged;" />
      <MemberSignature Language="F#" Value="member this.PaletteChanged : EventHandler " Usage="member this.PaletteChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 다른 색상표를 사용하는 응용 프로그램으로 전환할 때 발생됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  이 이벤트는 메시지 펌프를 실행 하는 경우에 발생 합니다. Windows 서비스에서 사용 되는 숨겨진된 폼 메시지 펌프를 수동으로 시작 된 경우가 아니면이 이벤트가 발생 하지 않습니다. Windows 서비스의 숨겨진된 폼을 사용 하 여 시스템 이벤트를 처리 하는 방법을 보여 주는 코드 예제를 참조 하세요.를 <xref:Microsoft.Win32.SystemEvents> 클래스입니다.  
  
> [!CAUTION]
>  정적 이벤트 이기 때문에 애플리케이션 삭제 되거나 메모리 누수가 발생 하는 경우 이벤트 처리기를 분리 해야 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 모니터링 하는 방법에 설명 합니다 <xref:Microsoft.Win32.SystemEvents.PaletteChanged> 이벤트입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:Microsoft.Win32.SystemEvents> 클래스입니다.  
  
 [!code-cpp[SystemEvents#2](~/samples/snippets/cpp/VS_Snippets_Winforms/SystemEvents/cpp/SystemEvents.cpp#2)]
 [!code-csharp[SystemEvents#2](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemEvents/CS/SystemEvents.cs#2)]
 [!code-vb[SystemEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemEvents/VB/SystemEvents.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">현재 컨텍스트에서는 시스템 이벤트 알림이 지원되지 않습니다. 예를 들어, 서버 프로세스에서 전역 시스템 이벤트 알림을 지원하지 않을 수 있습니다.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">시스템 이벤트 창 스레드를 만들지 못한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="PowerModeChanged">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.PowerModeChangedEventHandler PowerModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.PowerModeChangedEventHandler PowerModeChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.PowerModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event PowerModeChanged As PowerModeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::PowerModeChangedEventHandler ^ PowerModeChanged;" />
      <MemberSignature Language="F#" Value="member this.PowerModeChanged : Microsoft.Win32.PowerModeChangedEventHandler " Usage="member this.PowerModeChanged : Microsoft.Win32.PowerModeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.PowerModeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 시스템을 일시 중단하거나 다시 시작할 때 발생됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  이 이벤트는 메시지 펌프를 실행 하는 경우에 발생 합니다. Windows 서비스에서 사용 되는 숨겨진된 폼 메시지 펌프를 수동으로 시작 된 경우가 아니면이 이벤트가 발생 하지 않습니다. Windows 서비스의 숨겨진된 폼을 사용 하 여 시스템 이벤트를 처리 하는 방법을 보여 주는 코드 예제를 참조 하세요.를 <xref:Microsoft.Win32.SystemEvents> 클래스입니다.  
  
> [!CAUTION]
>  정적 이벤트 이기 때문에 애플리케이션 삭제 되거나 메모리 누수가 발생 하는 경우 이벤트 처리기를 분리 해야 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">현재 컨텍스트에서는 시스템 이벤트 알림이 지원되지 않습니다. 예를 들어, 서버 프로세스에서 전역 시스템 이벤트 알림을 지원하지 않을 수 있습니다.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">시스템 이벤트 창 스레드를 만들지 못한 경우</exception>
        <altmember cref="T:Microsoft.Win32.PowerModeChangedEventArgs" />
        <altmember cref="T:Microsoft.Win32.PowerModeChangedEventHandler" />
        <altmember cref="T:Microsoft.Win32.PowerModes" />
      </Docs>
    </Member>
    <Member MemberName="SessionEnded">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.SessionEndedEventHandler SessionEnded;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.SessionEndedEventHandler SessionEnded" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.SessionEnded" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event SessionEnded As SessionEndedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::SessionEndedEventHandler ^ SessionEnded;" />
      <MemberSignature Language="F#" Value="member this.SessionEnded : Microsoft.Win32.SessionEndedEventHandler " Usage="member this.SessionEnded : Microsoft.Win32.SessionEndedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SessionEndedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 로그오프하거나 시스템을 종료할 때 발생됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  이 이벤트는 메시지 펌프를 실행 하는 경우에 발생 합니다. Windows 서비스에서 사용 되는 숨겨진된 폼 메시지 펌프를 수동으로 시작 된 경우가 아니면이 이벤트가 발생 하지 않습니다. Windows 서비스의 숨겨진된 폼을 사용 하 여 시스템 이벤트를 처리 하는 방법을 보여 주는 코드 예제를 참조 하세요.를 <xref:Microsoft.Win32.SystemEvents> 클래스입니다.  
  
> [!CAUTION]
>  정적 이벤트 이기 때문에 애플리케이션 삭제 되거나 메모리 누수가 발생 하는 경우 이벤트 처리기를 분리 해야 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">현재 컨텍스트에서는 시스템 이벤트 알림이 지원되지 않습니다. 예를 들어, 서버 프로세스에서 전역 시스템 이벤트 알림을 지원하지 않을 수 있습니다.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">시스템 이벤트 창 스레드를 만들지 못한 경우</exception>
        <altmember cref="T:Microsoft.Win32.SessionEndedEventArgs" />
        <altmember cref="T:Microsoft.Win32.SessionEndedEventHandler" />
        <altmember cref="T:Microsoft.Win32.SessionEndReasons" />
      </Docs>
    </Member>
    <Member MemberName="SessionEnding">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.SessionEndingEventHandler SessionEnding;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.SessionEndingEventHandler SessionEnding" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.SessionEnding" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event SessionEnding As SessionEndingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::SessionEndingEventHandler ^ SessionEnding;" />
      <MemberSignature Language="F#" Value="member this.SessionEnding : Microsoft.Win32.SessionEndingEventHandler " Usage="member this.SessionEnding : Microsoft.Win32.SessionEndingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SessionEndingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 로그오프하려고 하거나 시스템을 종료하려고 할 때 발생됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 취소할 수 있는 이벤트입니다. 설정 합니다 <xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A> 속성을 `true` 세션 실행을 계속 되도록 요청 합니다. 세션이 종료 될 보장 되지 않습니다 제공 합니다.  
  
 사용 중인 경우 <xref:Microsoft.Win32.SystemEvents.SessionEnding> 형태로 Windows 시스템 로그 오프 하거나 다시 부팅을 검색할 방법이 없습니다 결정적 결정 하는지 여부를 <xref:System.Windows.Forms.Form.Closing> 이벤트가이 이벤트 전에 발생 합니다.  
  
 전에 특정 작업을 수행 하려는 경우 <xref:System.Windows.Forms.Form.Closing> 가 발생 해야 하는 <xref:Microsoft.Win32.SystemEvents.SessionEnding> 발생 하기 전에 <xref:System.Windows.Forms.Form.Closing>입니다. 이 작업을 수행 하려면 트래핑 해야 합니다 `WM_QUERYENDSESSION` 재정의 하 여 형식에서는 `WndProc` 함수.  이 예제에서는이 작업을 수행 하는 방법에 설명 합니다.  
  
```vb  
Private Shared WM_QUERYENDSESSION As Integer = &H11  
 Private Shared systemShutdown As Boolean = False  
 Protected Overrides Sub WndProc(ByRef m As System.Windows.Forms.Message)  
     If m.Msg = WM_QUERYENDSESSION Then  
         MessageBox.Show("queryendsession: this is a logoff, shutdown, or reboot")  
         systemShutdown = True  
     End If  
     ' If this is WM_QUERYENDSESSION, the closing event should be raised in the base WndProc.  
     MyBase.WndProc(m)  
 End Sub 'WndProc   
 Private Sub Form1_Closing(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles MyBase.Closing  
     If (systemShutdown) Then  
     ' Reset the variable because the user might cancel the shutdown.  
         systemShutdown = False  
         If (System.Windows.Forms.DialogResult.Yes = _  
                 MessageBox.Show("My application", "Do you want to save your work before logging off?", MessageBoxButtons.YesNo)) Then  
                 e.Cancel = True  
         Else  
                 e.Cancel = False  
         End If  
     End If  
 End Sub  
  
```  
  
```csharp  
private static int WM_QUERYENDSESSION = 0x11;  
private static bool systemShutdown = false;  
protected override void WndProc(ref System.Windows.Forms.Message m)  
{  
    if (m.Msg==WM_QUERYENDSESSION)  
    {  
        MessageBox.Show("queryendsession: this is a logoff, shutdown, or reboot");  
        systemShutdown = true;  
    }  
  
    // If this is WM_QUERYENDSESSION, the closing event should be  
    // raised in the base WndProc.  
    base.WndProc(ref m);  
  
} //WndProc   
  
private void Form1_Closing(  
    System.Object sender,   
    System.ComponentModel.CancelEventArgs e)  
{  
    if (systemShutdown)  
        // Reset the variable because the user might cancel the   
        // shutdown.  
    {  
        systemShutdown = false;  
        if (DialogResult.Yes==MessageBox.Show("My application",   
            "Do you want to save your work before logging off?",   
            MessageBoxButtons.YesNo))  
        {  
            e.Cancel = true;  
        }  
        else  
        {  
            e.Cancel = false;  
        }  
    }  
}  
```  
  
> [!IMPORTANT]
>  콘솔 애플리케이션 발생 하지 않습니다는 <xref:Microsoft.Win32.SystemEvents.SessionEnding> 이벤트입니다.  
  
> [!NOTE]
>  이 이벤트는 메시지 펌프를 실행 하는 경우에 발생 합니다. Windows 서비스에서 사용 되는 숨겨진된 폼 메시지 펌프를 수동으로 시작 된 경우가 아니면이 이벤트가 발생 하지 않습니다. Windows 서비스의 숨겨진된 폼을 사용 하 여 시스템 이벤트를 처리 하는 방법을 보여 주는 코드 예제를 참조 하세요.를 <xref:Microsoft.Win32.SystemEvents> 클래스입니다.  
  
> [!CAUTION]
>  정적 이벤트 이기 때문에 애플리케이션 삭제 되거나 메모리 누수가 발생 하는 경우 이벤트 처리기를 분리 해야 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">현재 컨텍스트에서는 시스템 이벤트 알림이 지원되지 않습니다. 예를 들어, 서버 프로세스에서 전역 시스템 이벤트 알림을 지원하지 않을 수 있습니다.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">시스템 이벤트 창 스레드를 만들지 못한 경우</exception>
        <altmember cref="T:Microsoft.Win32.SessionEndingEventArgs" />
        <altmember cref="T:Microsoft.Win32.SessionEndingEventHandler" />
        <altmember cref="T:Microsoft.Win32.SessionEndReasons" />
      </Docs>
    </Member>
    <Member MemberName="SessionSwitch">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.SessionSwitchEventHandler SessionSwitch;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.SessionSwitchEventHandler SessionSwitch" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.SessionSwitch" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event SessionSwitch As SessionSwitchEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::SessionSwitchEventHandler ^ SessionSwitch;" />
      <MemberSignature Language="F#" Value="member this.SessionSwitch : Microsoft.Win32.SessionSwitchEventHandler " Usage="member this.SessionSwitch : Microsoft.Win32.SessionSwitchEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SessionSwitchEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 로그인한 사용자가 변경될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  이 이벤트는 메시지 펌프를 실행 하는 경우에 발생 합니다. Windows 서비스에서 사용 되는 숨겨진된 폼 메시지 펌프를 수동으로 시작 된 경우가 아니면이 이벤트가 발생 하지 않습니다. Windows 서비스의 숨겨진된 폼을 사용 하 여 시스템 이벤트를 처리 하는 방법을 보여 주는 코드 예제를 참조 하세요.를 <xref:Microsoft.Win32.SystemEvents> 클래스입니다.  
  
> [!CAUTION]
>  정적 이벤트 이기 때문에 애플리케이션 삭제 되거나 메모리 누수가 발생 하는 경우 이벤트 처리기를 분리 해야 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">현재 컨텍스트에서는 시스템 이벤트 알림이 지원되지 않습니다. 예를 들어, 서버 프로세스에서 전역 시스템 이벤트 알림을 지원하지 않을 수 있습니다.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">시스템 이벤트 창 스레드를 만들지 못한 경우</exception>
        <altmember cref="T:Microsoft.Win32.SessionSwitchEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="TimeChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler TimeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TimeChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.TimeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event TimeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ TimeChanged;" />
      <MemberSignature Language="F#" Value="member this.TimeChanged : EventHandler " Usage="member this.TimeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 시스템 시계의 시간을 변경할 때 발생됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  이 이벤트는 메시지 펌프를 실행 하는 경우에 발생 합니다. Windows 서비스에서 사용 되는 숨겨진된 폼 메시지 펌프를 수동으로 시작 된 경우가 아니면이 이벤트가 발생 하지 않습니다. Windows 서비스의 숨겨진된 폼을 사용 하 여 시스템 이벤트를 처리 하는 방법을 보여 주는 코드 예제를 참조 하세요.를 <xref:Microsoft.Win32.SystemEvents> 클래스입니다.  
  
> [!CAUTION]
>  정적 이벤트 이기 때문에 애플리케이션 삭제 되거나 메모리 누수가 발생 하는 경우 이벤트 처리기를 분리 해야 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">현재 컨텍스트에서는 시스템 이벤트 알림이 지원되지 않습니다. 예를 들어, 서버 프로세스에서 전역 시스템 이벤트 알림을 지원하지 않을 수 있습니다.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">시스템 이벤트 창 스레드를 만들지 못한 경우</exception>
        <altmember cref="P:System.DateTime.Now" />
      </Docs>
    </Member>
    <Member MemberName="TimerElapsed">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.TimerElapsedEventHandler TimerElapsed;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.TimerElapsedEventHandler TimerElapsed" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.TimerElapsed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event TimerElapsed As TimerElapsedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::TimerElapsedEventHandler ^ TimerElapsed;" />
      <MemberSignature Language="F#" Value="member this.TimerElapsed : Microsoft.Win32.TimerElapsedEventHandler " Usage="member this.TimerElapsed : Microsoft.Win32.TimerElapsedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.TimerElapsedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>창 타이머 간격 설정이 만료될 때 발생됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  이 이벤트는 메시지 펌프를 실행 하는 경우에 발생 합니다. Windows 서비스에서 사용 되는 숨겨진된 폼 메시지 펌프를 수동으로 시작 된 경우가 아니면이 이벤트가 발생 하지 않습니다. Windows 서비스의 숨겨진된 폼을 사용 하 여 시스템 이벤트를 처리 하는 방법을 보여 주는 코드 예제를 참조 하세요.를 <xref:Microsoft.Win32.SystemEvents> 클래스입니다.  
  
> [!CAUTION]
>  정적 이벤트 이기 때문에 애플리케이션 삭제 되거나 메모리 누수가 발생 하는 경우 이벤트 처리기를 분리 해야 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">현재 컨텍스트에서는 시스템 이벤트 알림이 지원되지 않습니다. 예를 들어, 서버 프로세스에서 전역 시스템 이벤트 알림을 지원하지 않을 수 있습니다.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">시스템 이벤트 창 스레드를 만들지 못한 경우</exception>
        <altmember cref="T:Microsoft.Win32.TimerElapsedEventArgs" />
        <altmember cref="T:Microsoft.Win32.TimerElapsedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="UserPreferenceChanged">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.UserPreferenceChangedEventHandler UserPreferenceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.UserPreferenceChangedEventHandler UserPreferenceChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.UserPreferenceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event UserPreferenceChanged As UserPreferenceChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::UserPreferenceChangedEventHandler ^ UserPreferenceChanged;" />
      <MemberSignature Language="F#" Value="member this.UserPreferenceChanged : Microsoft.Win32.UserPreferenceChangedEventHandler " Usage="member this.UserPreferenceChanged : Microsoft.Win32.UserPreferenceChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.UserPreferenceChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 기본 설정이 변경될 때 발생됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  이 이벤트는 메시지 펌프를 실행 하는 경우에 발생 합니다. Windows 서비스에서 사용 되는 숨겨진된 폼 메시지 펌프를 수동으로 시작 된 경우가 아니면이 이벤트가 발생 하지 않습니다. Windows 서비스의 숨겨진된 폼을 사용 하 여 시스템 이벤트를 처리 하는 방법을 보여 주는 코드 예제를 참조 하세요.를 <xref:Microsoft.Win32.SystemEvents> 클래스입니다.  
  
> [!CAUTION]
>  정적 이벤트 이기 때문에 애플리케이션 삭제 되거나 메모리 누수가 발생 하는 경우 이벤트 처리기를 분리 해야 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">현재 컨텍스트에서는 시스템 이벤트 알림이 지원되지 않습니다. 예를 들어, 서버 프로세스에서 전역 시스템 이벤트 알림을 지원하지 않을 수 있습니다.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">시스템 이벤트 창 스레드를 만들지 못한 경우</exception>
        <altmember cref="T:Microsoft.Win32.UserPreferenceChangedEventArgs" />
        <altmember cref="T:Microsoft.Win32.UserPreferenceChangedEventHandler" />
        <altmember cref="T:Microsoft.Win32.UserPreferenceCategory" />
      </Docs>
    </Member>
    <Member MemberName="UserPreferenceChanging">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.UserPreferenceChangingEventHandler UserPreferenceChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.UserPreferenceChangingEventHandler UserPreferenceChanging" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.UserPreferenceChanging" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event UserPreferenceChanging As UserPreferenceChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::UserPreferenceChangingEventHandler ^ UserPreferenceChanging;" />
      <MemberSignature Language="F#" Value="member this.UserPreferenceChanging : Microsoft.Win32.UserPreferenceChangingEventHandler " Usage="member this.UserPreferenceChanging : Microsoft.Win32.UserPreferenceChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.UserPreferenceChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 기본 설정이 변경될 때 발생됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  이 이벤트는 메시지 펌프를 실행 하는 경우에 발생 합니다. Windows 서비스에서 사용 되는 숨겨진된 폼 메시지 펌프를 수동으로 시작 된 경우가 아니면이 이벤트가 발생 하지 않습니다. Windows 서비스의 숨겨진된 폼을 사용 하 여 시스템 이벤트를 처리 하는 방법을 보여 주는 코드 예제를 참조 하세요.를 <xref:Microsoft.Win32.SystemEvents> 클래스입니다.  
  
> [!CAUTION]
>  정적 이벤트 이기 때문에 애플리케이션 삭제 되거나 메모리 누수가 발생 하는 경우 이벤트 처리기를 분리 해야 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 모니터링 하는 방법에 설명 합니다 <xref:Microsoft.Win32.SystemEvents.UserPreferenceChanging> 이벤트입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:Microsoft.Win32.SystemEvents> 클래스입니다.  
  
 [!code-cpp[SystemEvents#2](~/samples/snippets/cpp/VS_Snippets_Winforms/SystemEvents/cpp/SystemEvents.cpp#2)]
 [!code-csharp[SystemEvents#2](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemEvents/CS/SystemEvents.cs#2)]
 [!code-vb[SystemEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemEvents/VB/SystemEvents.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">현재 컨텍스트에서는 시스템 이벤트 알림이 지원되지 않습니다. 예를 들어, 서버 프로세스에서 전역 시스템 이벤트 알림을 지원하지 않을 수 있습니다.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">시스템 이벤트 창 스레드를 만들지 못한 경우</exception>
        <altmember cref="T:Microsoft.Win32.UserPreferenceChangingEventArgs" />
        <altmember cref="T:Microsoft.Win32.UserPreferenceChangingEventHandler" />
        <altmember cref="T:Microsoft.Win32.UserPreferenceCategory" />
      </Docs>
    </Member>
  </Members>
</Type>