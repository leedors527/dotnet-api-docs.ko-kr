<Type Name="MultidimensionalArrayItemReference&lt;TItem&gt;" FullName="System.Activities.Expressions.MultidimensionalArrayItemReference&lt;TItem&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b213197c1f7bec42cfe61c20e83e95ed2a6e2099" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55316523" /></Metadata><TypeSignature Language="C#" Value="public sealed class MultidimensionalArrayItemReference&lt;TItem&gt; : System.Activities.CodeActivity&lt;System.Activities.Location&lt;TItem&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MultidimensionalArrayItemReference`1&lt;TItem&gt; extends System.Activities.CodeActivity`1&lt;class System.Activities.Location`1&lt;!TItem&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Expressions.MultidimensionalArrayItemReference`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MultidimensionalArrayItemReference(Of TItem)&#xA;Inherits CodeActivity(Of Location(Of TItem))" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TItem&gt;&#xA;public ref class MultidimensionalArrayItemReference sealed : System::Activities::CodeActivity&lt;System::Activities::Location&lt;TItem&gt; ^&gt;" />
  <TypeSignature Language="F#" Value="type MultidimensionalArrayItemReference&lt;'Item&gt; = class&#xA;    inherit CodeActivity&lt;Location&lt;'Item&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TItem" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Activities.CodeActivity&lt;System.Activities.Location&lt;TItem&gt;&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TResult">System.Activities.Location&lt;TItem&gt;</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Indices")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TItem">배열 요소의 형식입니다.</typeparam>
    <summary>식에서 l-value로 사용할 수 있는 다차원 배열의 요소를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Activities.Expressions.MultidimensionalArrayItemReference%601> 작업의 `Assign`를 사용하여 행 1과 열 2의 배열 요소에 정수 값을 할당하고 배열 요소의 값을 콘솔에 출력합니다. `Assign` 작업은 배열을 사용할 경우의 `array[1, 2] = 1;` 문과 같습니다.  
  
> [!NOTE]
>  <xref:System.Activities.Expressions.MultidimensionalArrayItemReference%601> l-value 식 작업을 직접 인스턴스화하는 대신 상위 수준의 추상을 제공하고 보다 직관적으로 워크플로를 구현할 수 있는 <xref:System.Activities.Expressions.ExpressionServices.ConvertReference%2A>를 호출하는 것이 좋습니다.  
  
```csharp  
  
public static void MultidimensionalArrayItemReferenceSample()  
{  
    // Create a variable to store a multidimensional array.  
    var arrayvar = new Variable<int[,]>("arrayvar", new int[4, 5]);  
  
    Activity myActivity = new Sequence  
    {  
        Variables = { arrayvar },  
        Activities =   
        {                      
            // Create an Assign activity to assign a value to the array item at index [1,2].  
            new Assign<int>  
            {  
                To = new MultidimensionalArrayItemReference<int>  
                {  
                    Array = arrayvar,  
                    Indices = {1, 2}  
                },  
                // Assign an integer value to the array item at row 1 column 2.  
                Value = 1,  
            },  
            // Print the array item value to the console.  
            new WriteLine()  
            {  
                Text = ExpressionServices.Convert<string>(ctx => arrayvar.Get(ctx)[1, 2].ToString()),  
            }  
        }  
    };  
  
    // Invoke the Sequence activity.  
    WorkflowInvoker.Invoke(myActivity);  
}  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultidimensionalArrayItemReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Expressions.MultidimensionalArrayItemReference`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MultidimensionalArrayItemReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Activities.Expressions.MultidimensionalArrayItemReference`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Array">
      <MemberSignature Language="C#" Value="public System.Activities.InArgument&lt;Array&gt; Array { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.InArgument`1&lt;class System.Array&gt; Array" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Expressions.MultidimensionalArrayItemReference`1.Array" />
      <MemberSignature Language="VB.NET" Value="Public Property Array As InArgument(Of Array)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::InArgument&lt;Array ^&gt; ^ Array { System::Activities::InArgument&lt;Array ^&gt; ^ get(); void set(System::Activities::InArgument&lt;Array ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Array : System.Activities.InArgument&lt;Array&gt; with get, set" Usage="System.Activities.Expressions.MultidimensionalArrayItemReference&lt;'Item&gt;.Array" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Activities.RequiredArgument</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.InArgument&lt;System.Array&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Activities.Expressions.MultidimensionalArrayItemReference`1" />에서 참조되는 배열을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Activities.Expressions.MultidimensionalArrayItemReference`1" />에서 참조되는 배열입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CacheMetadata(valuetype System.Activities.CodeActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Expressions.MultidimensionalArrayItemReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CacheMetadata (metadata As CodeActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CacheMetadata(System::Activities::CodeActivityMetadata metadata);" />
      <MemberSignature Language="F#" Value="override this.CacheMetadata : System.Activities.CodeActivityMetadata -&gt; unit" Usage="multidimensionalArrayItemReference.CacheMetadata metadata" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.CodeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override System.Activities.Location&lt;TItem&gt; Execute (System.Activities.CodeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Activities.Location`1&lt;!TItem&gt; Execute(class System.Activities.CodeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Expressions.MultidimensionalArrayItemReference`1.Execute(System.Activities.CodeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Execute (context As CodeActivityContext) As Location(Of TItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Activities::Location&lt;TItem&gt; ^ Execute(System::Activities::CodeActivityContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Activities.CodeActivityContext -&gt; System.Activities.Location&lt;'Item&gt;" Usage="multidimensionalArrayItemReference.Execute context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Location&lt;TItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.CodeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Indices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.InArgument&lt;int&gt;&gt; Indices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.InArgument`1&lt;int32&gt;&gt; Indices" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Expressions.MultidimensionalArrayItemReference`1.Indices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Indices As Collection(Of InArgument(Of Integer))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Activities::InArgument&lt;int&gt; ^&gt; ^ Indices { System::Collections::ObjectModel::Collection&lt;System::Activities::InArgument&lt;int&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Indices : System.Collections.ObjectModel.Collection&lt;System.Activities.InArgument&lt;int&gt;&gt;" Usage="System.Activities.Expressions.MultidimensionalArrayItemReference&lt;'Item&gt;.Indices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.InArgument&lt;System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>배열에 있는 요소의 인덱스를 나타내는 인수의 컬렉션을 가져옵니다.</summary>
        <value>배열에 있는 요소의 인덱스입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Activities.Expressions.MultidimensionalArrayItemReference%601.Indices%2A> 속성은 읽기 전용이지만 컬렉션의 항목을 수정할 수 있으며 인덱스를 변경할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>