<Type Name="MetadataStore" FullName="System.Activities.Presentation.Metadata.MetadataStore">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b7d0b0e09a83e400d97cea8afe61ee15740c6347" /><Meta Name="ms.sourcegitcommit" Value="7461f9e28c2f184bd1596e6f07c25a3f34984516" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/28/2019" /><Meta Name="ms.locfileid" Value="58560589" /></Metadata><TypeSignature Language="C#" Value="public static class MetadataStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed MetadataStore extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Metadata.MetadataStore" />
  <TypeSignature Language="VB.NET" Value="Public Class MetadataStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataStore abstract sealed" />
  <TypeSignature Language="F#" Value="type MetadataStore = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Type" />별로 디자이너 요소를 신속하게 조회할 수 있도록 하는 해시 테이블의 메모리 내 컬렉션입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 메타데이터 저장소에는 디자이너와 형식 간 연결과 같은 사용자 지정 특성 메타데이터가 포함됩니다. 사용자 지정 특성은 <xref:System.Activities.Presentation.Metadata.AttributeTable>에 정의하고 메타데이터 저장소에 추가할 수 있습니다. 특성이 추가된 후에는 <xref:System.ComponentModel.TypeDescriptor>에 대한 호출에 이러한 특성이 나타납니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 `ActivityDesigner1` 사용자 지정 활동 디자이너와 사용자 지정 활동을 연결하는 방법을 보여 줍니다. 사용자 지정 활동 디자이너를 만드는 방법에 대 한 자세한 내용은 참조 하세요. [방법: 사용자 지정 활동 디자이너를 만드는](~/docs/framework/windows-workflow-foundation/how-to-create-a-custom-activity-designer.md)합니다.  
  
```csharp  
internal class Metadata : IRegisterMetadata  
{  
    private AttributeTable attributes;  
  
    // Called by the designer to register any design-time metadata.  
    public void Register()  
    {  
        AttributeTableBuilder builder = new AttributeTableBuilder();  
  
        // Add the custom attributes to associate the ActivityDesigner1 custom designer  
        // with the custom activity MyActivity.  
        builder.AddCustomAttributes(  
            typeof(MyActivity),  
            new DesignerAttribute(typeof(ActivityDesigner1)));  
        MetadataStore.AddAttributeTable(builder.CreateTable());  
  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddAttributeTable">
      <MemberSignature Language="C#" Value="public static void AddAttributeTable (System.Activities.Presentation.Metadata.AttributeTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAttributeTable(class System.Activities.Presentation.Metadata.AttributeTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.MetadataStore.AddAttributeTable(System.Activities.Presentation.Metadata.AttributeTable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddAttributeTable (table As AttributeTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddAttributeTable(System::Activities::Presentation::Metadata::AttributeTable ^ table);" />
      <MemberSignature Language="F#" Value="static member AddAttributeTable : System.Activities.Presentation.Metadata.AttributeTable -&gt; unit" Usage="System.Activities.Presentation.Metadata.MetadataStore.AddAttributeTable table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Activities.Presentation.Metadata.AttributeTable" />
      </Parameters>
      <Docs>
        <param name="table">추가할 테이블입니다.</param>
        <summary>지정된 테이블을 현재 <see cref="T:System.AppDomain" /> 개체의 특성 저장소에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 테이블이 추가된 후에는 <xref:System.ComponentModel.TypeDescriptor> 호출에 새로 테이블에 추가된 특성이 사용됩니다. 특성 저장소에 여러 테이블을 추가할 수 있습니다. 충돌이 있을 경우 가장 최근에 추가된 테이블의 특성이 사용됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>