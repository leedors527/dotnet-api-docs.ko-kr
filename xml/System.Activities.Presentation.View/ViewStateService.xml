<Type Name="ViewStateService" FullName="System.Activities.Presentation.View.ViewStateService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4c0b0a35d67bc5d96069716512a11ca0d899870e" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52602219" /></Metadata><TypeSignature Language="C#" Value="public abstract class ViewStateService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ViewStateService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.View.ViewStateService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ViewStateService" />
  <TypeSignature Language="C++ CLI" Value="public ref class ViewStateService abstract" />
  <TypeSignature Language="F#" Value="type ViewStateService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>워크플로 애플리케이션 실행의 특정 시점에서 워크플로 애플리케이션의 사용자 상호 작용 구성 요소와 연결된 모든 데이터 값의 보존 및 액세스를 가능하게 합니다. 모델 항목의 <see cref="T:System.Activities.Presentation.View.ViewStateService" /> 저장소 뷰 상태입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 포스트백을 통해 애플리케이션의 제어가 오갈 때 상태를 계속 검색할 수 있으므로 유용합니다. <xref:System.Activities.Presentation.View.ViewStateService>는 추상 클래스입니다. 파생 클래스는 <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A>가 호출될 때 뷰 상태를 저장하고 <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A>가 호출될 때 이를 검색해야 합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ViewStateService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ViewStateService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Activities.Presentation.View.ViewStateService" /> 클래스의 새 인스턴스를 시작합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveViewState">
      <MemberSignature Language="C#" Value="public abstract bool RemoveViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveViewState(class System.Activities.Presentation.Model.ModelItem modelItem, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.RemoveViewState(System.Activities.Presentation.Model.ModelItem,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool RemoveViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RemoveViewState : System.Activities.Presentation.Model.ModelItem * string -&gt; bool" Usage="viewStateService.RemoveViewState (modelItem, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="modelItem">현재 뷰 상태와 연결된 워크플로 활동 <see cref="T:System.Activities.Presentation.Model.ModelItem" />입니다.</param>
        <param name="key">저장된 뷰 상태 항목을 식별하는 <see cref="T:System.String" />입니다.</param>
        <summary>파생 클래스에서 구현되는 경우 지정된 키가 나타내고 지정된 모델 항목과 연결된 뷰 상태를 제거합니다.</summary>
        <returns>뷰 상태가 제거되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveAllViewState">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.Dictionary&lt;string,object&gt; RetrieveAllViewState (System.Activities.Presentation.Model.ModelItem modelItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.Dictionary`2&lt;string, object&gt; RetrieveAllViewState(class System.Activities.Presentation.Model.ModelItem modelItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.RetrieveAllViewState(System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ RetrieveAllViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem);" />
      <MemberSignature Language="F#" Value="abstract member RetrieveAllViewState : System.Activities.Presentation.Model.ModelItem -&gt; System.Collections.Generic.Dictionary&lt;string, obj&gt;" Usage="viewStateService.RetrieveAllViewState modelItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="modelItem">뷰 상태가 적용되는 <see cref="T:System.Activities.Presentation.Model.ModelItem" />입니다.</param>
        <summary>지정된 <paramref name="modelItem" />와 일치하는 지정된 <paramref name="key" />에 대해 저장되는 뷰 상태의 한 측면을 반환합니다.</summary>
        <returns><see cref="T:System.Collections.Generic.Dictionary`2" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 검색이 가능하도록 처음 뷰 상태를 저장하려면 <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A>를 호출합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveViewState">
      <MemberSignature Language="C#" Value="public abstract object RetrieveViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RetrieveViewState(class System.Activities.Presentation.Model.ModelItem modelItem, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.RetrieveViewState(System.Activities.Presentation.Model.ModelItem,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ RetrieveViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RetrieveViewState : System.Activities.Presentation.Model.ModelItem * string -&gt; obj" Usage="viewStateService.RetrieveViewState (modelItem, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="modelItem">현재 뷰 상태와 연결된 워크플로 활동 <see cref="T:System.Activities.Presentation.Model.ModelItem" />입니다.</param>
        <param name="key">검색할 뷰 상태의 측면을 식별하는 <see cref="T:System.String" />입니다.</param>
        <summary>지정된 <paramref name="modelItem" />와 일치하는 지정된 <paramref name="key" />에 대한 뷰 상태의 한 측면을 검색합니다.</summary>
        <returns>뷰 상태의 측면으로 <see cref="T:System.Object" /> 또는 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 검색이 가능하도록 처음 뷰 상태를 저장하려면 <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A>를 호출합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreViewState">
      <MemberSignature Language="C#" Value="public abstract void StoreViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StoreViewState(class System.Activities.Presentation.Model.ModelItem modelItem, string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.StoreViewState(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void StoreViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member StoreViewState : System.Activities.Presentation.Model.ModelItem * string * obj -&gt; unit" Usage="viewStateService.StoreViewState (modelItem, key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="modelItem">뷰 상태가 적용되는 <see cref="T:System.Activities.Presentation.Model.ModelItem" />입니다.</param>
        <param name="key">저장할 뷰 상태의 측면을 식별하는 <see cref="T:System.String" />입니다.</param>
        <param name="value">저장할 <see cref="T:System.Object" />입니다.</param>
        <summary>지정된 <paramref name="modelItem" />와 일치하는 지정된 <paramref name="key" />에 대한 뷰 상태의 한 측면을 저장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A>를 호출하고 `modelItem` 및 `key`에 같은 값을 전달하여 저장된 개체를 검색할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreViewStateWithUndo">
      <MemberSignature Language="C#" Value="public abstract void StoreViewStateWithUndo (System.Activities.Presentation.Model.ModelItem modelItem, string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StoreViewStateWithUndo(class System.Activities.Presentation.Model.ModelItem modelItem, string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.StoreViewStateWithUndo(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void StoreViewStateWithUndo(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member StoreViewStateWithUndo : System.Activities.Presentation.Model.ModelItem * string * obj -&gt; unit" Usage="viewStateService.StoreViewStateWithUndo (modelItem, key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="modelItem">뷰 상태가 적용되는 <see cref="T:System.Activities.Presentation.Model.ModelItem" />입니다.</param>
        <param name="key">저장할 뷰 상태의 측면을 식별하는 <see cref="T:System.String" />입니다. 저장된 뷰 상태 항목을 식별하는 <see cref="T:System.String" />입니다.</param>
        <param name="value">저장할 <see cref="T:System.Object" />입니다.</param>
        <summary>파생 클래스에서 구현되는 경우 지정된 키가 나타내는 항목의 현재 설정을 기록하여 실행 취소 작업에 사용할 수 있도록 합니다. 그러면 지정된 키가 나타내는 항목이 지정된 모델 항목의 뷰 상태에 저장됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A>를 호출하고 `modelItem` 및 `key`에 같은 값을 전달하여 저장된 개체를 검색할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UndoableViewStateChanged">
      <MemberSignature Language="C#" Value="public abstract event System.Activities.Presentation.View.ViewStateChangedEventHandler UndoableViewStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Activities.Presentation.View.ViewStateChangedEventHandler UndoableViewStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.ViewStateService.UndoableViewStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event UndoableViewStateChanged As ViewStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Activities::Presentation::View::ViewStateChangedEventHandler ^ UndoableViewStateChanged;" />
      <MemberSignature Language="F#" Value="member this.UndoableViewStateChanged : System.Activities.Presentation.View.ViewStateChangedEventHandler " Usage="member this.UndoableViewStateChanged : System.Activities.Presentation.View.ViewStateChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.ViewStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>파생 클래스에서 구현되는 경우 컨트롤의 실행 취소 가능한 보기 상태가 변경되었음을 알리는 이벤트를 선언합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewStateChanged">
      <MemberSignature Language="C#" Value="public abstract event System.Activities.Presentation.View.ViewStateChangedEventHandler ViewStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Activities.Presentation.View.ViewStateChangedEventHandler ViewStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.ViewStateService.ViewStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event ViewStateChanged As ViewStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Activities::Presentation::View::ViewStateChangedEventHandler ^ ViewStateChanged;" />
      <MemberSignature Language="F#" Value="member this.ViewStateChanged : System.Activities.Presentation.View.ViewStateChangedEventHandler " Usage="member this.ViewStateChanged : System.Activities.Presentation.View.ViewStateChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.ViewStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>파생 클래스에서 구현되는 경우 컨트롤의 보기 상태가 변경되었음을 알리는 이벤트를 선언합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>