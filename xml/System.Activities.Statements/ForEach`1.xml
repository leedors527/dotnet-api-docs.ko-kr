<Type Name="ForEach&lt;T&gt;" FullName="System.Activities.Statements.ForEach&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e19975dda08c2fab93743e6740cc329d5b1e32f6" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57910284" /></Metadata><TypeSignature Language="C#" Value="public sealed class ForEach&lt;T&gt; : System.Activities.NativeActivity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ForEach`1&lt;T&gt; extends System.Activities.NativeActivity" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Statements.ForEach`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ForEach(Of T)&#xA;Inherits NativeActivity" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ForEach sealed : System::Activities::NativeActivity" />
  <TypeSignature Language="F#" Value="type ForEach&lt;'T&gt; = class&#xA;    inherit NativeActivity" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Activities.NativeActivity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Body")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><see cref="P:System.Activities.Statements.ForEach`1.Values" /> 컬렉션에 제공되는 값의 형식입니다.</typeparam>
    <summary><see cref="P:System.Activities.Statements.ForEach`1.Values" /> 컬렉션에 제공되는 각 값에 대해 작업 동작을 한 번 실행합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Activities.Statements.ForEach`1> 키워드와 비슷합니다 `foreach` 하지만 언어 문이 아니라 활동으로 구현 됩니다. 와 달리 `foreach` C#에서는 합니다 <xref:System.Activities.Statements.ForEach%601> 활동은 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>를 대신 <xref:System.Collections.Generic.IEnumerator%601>합니다.  
  
## Examples  
 다음 코드 샘플에서는 <xref:System.Activities.Statements.ForEach%601> 활동을 만드는 방법을 보여 줍니다. 이 예제에서는 합니다 [DynamicActivity 만들기](~/docs/framework/windows-workflow-foundation/samples/dynamicactivity-creation.md) 샘플입니다.  
  
 [!code-csharp[wfs_DynamicActivityCreation#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_dynamicactivitycreation/cs/program.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ForEach ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.ForEach`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ForEach();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Activities.Statements.ForEach`1" /> 클래스의 새 인스턴스를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 샘플에서는 <xref:System.Activities.Statements.ForEach%601> 활동을 만드는 방법을 보여 줍니다. 이 예제에서는 합니다 [DynamicActivity 만들기](~/docs/framework/windows-workflow-foundation/samples/dynamicactivity-creation.md) 샘플입니다.  
  
 [!code-csharp[wfs_DynamicActivityCreation#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_dynamicactivitycreation/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityAction&lt;T&gt; Body { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.ActivityAction`1&lt;!T&gt; Body" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.ForEach`1.Body" />
      <MemberSignature Language="VB.NET" Value="Public Property Body As ActivityAction(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::ActivityAction&lt;T&gt; ^ Body { System::Activities::ActivityAction&lt;T&gt; ^ get(); void set(System::Activities::ActivityAction&lt;T&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Body : System.Activities.ActivityAction&lt;'T&gt; with get, set" Usage="System.Activities.Statements.ForEach&lt;'T&gt;.Body" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityAction&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Activities.ActivityAction" /> 컬렉션에 포함된 각 항목에 대해 실행할 <see cref="P:System.Activities.Statements.ForEach`1.Values" />입니다.</summary>
        <value>실행할 동작입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 샘플에서는 <xref:System.Activities.Statements.ForEach%601> 활동의 Body 속성을 설정하는 방법을 보여 줍니다. 이 예제에서는 합니다 [DynamicActivity 만들기](~/docs/framework/windows-workflow-foundation/samples/dynamicactivity-creation.md) 샘플입니다.  
  
 [!code-csharp[wfs_DynamicActivityCreation#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_dynamicactivitycreation/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CacheMetadata(valuetype System.Activities.NativeActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.ForEach`1.CacheMetadata(System.Activities.NativeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CacheMetadata (metadata As NativeActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CacheMetadata(System::Activities::NativeActivityMetadata metadata);" />
      <MemberSignature Language="F#" Value="override this.CacheMetadata : System.Activities.NativeActivityMetadata -&gt; unit" Usage="forEach.CacheMetadata metadata" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.NativeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override void Execute (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Execute(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.ForEach`1.Execute(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Execute (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Execute(System::Activities::NativeActivityContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Activities.NativeActivityContext -&gt; unit" Usage="forEach.Execute context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateDynamicUpdateMap">
      <MemberSignature Language="C#" Value="protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCreateDynamicUpdateMap(class System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, class System.Activities.Activity originalActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.ForEach`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnCreateDynamicUpdateMap (metadata As NativeActivityUpdateMapMetadata, originalActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCreateDynamicUpdateMap(System::Activities::DynamicUpdate::NativeActivityUpdateMapMetadata ^ metadata, System::Activities::Activity ^ originalActivity);" />
      <MemberSignature Language="F#" Value="override this.OnCreateDynamicUpdateMap : System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata * System.Activities.Activity -&gt; unit" Usage="forEach.OnCreateDynamicUpdateMap (metadata, originalActivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="originalActivity" Type="System.Activities.Activity" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <param name="originalActivity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Activities.InArgument&lt;System.Collections.Generic.IEnumerable&lt;T&gt;&gt; Values { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.InArgument`1&lt;class System.Collections.Generic.IEnumerable`1&lt;!T&gt;&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.ForEach`1.Values" />
      <MemberSignature Language="VB.NET" Value="Public Property Values As InArgument(Of IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::InArgument&lt;System::Collections::Generic::IEnumerable&lt;T&gt; ^&gt; ^ Values { System::Activities::InArgument&lt;System::Collections::Generic::IEnumerable&lt;T&gt; ^&gt; ^ get(); void set(System::Activities::InArgument&lt;System::Collections::Generic::IEnumerable&lt;T&gt; ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Activities.InArgument&lt;seq&lt;'T&gt;&gt; with get, set" Usage="System.Activities.Statements.ForEach&lt;'T&gt;.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Activities.RequiredArgument</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.InArgument&lt;System.Collections.Generic.IEnumerable&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Activities.Statements.ForEach`1.Body" /> 작업 동작을 실행하기 위한 활동의 입력 컬렉션입니다.</summary>
        <value>값 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 샘플에서는 <xref:System.Activities.Statements.ForEach%601> 활동의 Values 속성을 설정하는 방법을 보여 줍니다. 이 예제에서는 합니다 [DynamicActivity 만들기](~/docs/framework/windows-workflow-foundation/samples/dynamicactivity-creation.md) 샘플입니다.  
  
 [!code-csharp[wfs_DynamicActivityCreation#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_dynamicactivitycreation/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>