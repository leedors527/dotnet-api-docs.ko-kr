<Type Name="TrackingParticipant" FullName="System.Activities.Tracking.TrackingParticipant">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0920d45bf8b09b2738ee4b2df3f0daed3b125e1d" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39822623" /></Metadata><TypeSignature Language="C#" Value="public abstract class TrackingParticipant" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TrackingParticipant extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Tracking.TrackingParticipant" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TrackingParticipant" />
  <TypeSignature Language="C++ CLI" Value="public ref class TrackingParticipant abstract" />
  <TypeSignature Language="F#" Value="type TrackingParticipant = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>워크플로 추적 인프라와 상호 작용하고 추적 레코드에 액세스하는 워크플로 확장의 기본 클래스입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 추적 레코드를 받기 위해 추적 참가자가 등록됩니다. 현재 추적 참가자를 구현하는 모든 클래스를 워크플로 인스턴스에 등록하여 추적 레코드를 받을 수 있습니다. 추적 참가자가 타사 코드인 경우 악성 코드가 아닌지 확인합니다. 추적 참가자는 워크플로 인스턴스와 동일한 프로세스에서 실행되며 추적 참가자가 악성인 경우 전체 워크플로 실행이 이 코드의 영향을 받을 수 있습니다. 워크플로가 실행될 때 추적 레코드가 등록된 추적 참가자에게 전달되므로 개발자는 추적 참가자가 추적 메서드 내에서 의도하지 않은 작업을 수행하여 실행 중인 워크플로에 영향을 주지 않는지 확인해야 합니다. 이러한 예로 오랜 시간이 걸리는 워크플로 변수 또는 작업 변경을 들 수 있습니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TrackingParticipant ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Tracking.TrackingParticipant.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TrackingParticipant();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>파생 클래스에서 구현된 경우 파생 클래스의 새 인스턴스를 만듭니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTrack">
      <MemberSignature Language="C#" Value="protected internal virtual IAsyncResult BeginTrack (System.Activities.Tracking.TrackingRecord record, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult BeginTrack(class System.Activities.Tracking.TrackingRecord record, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Tracking.TrackingParticipant.BeginTrack(System.Activities.Tracking.TrackingRecord,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function BeginTrack (record As TrackingRecord, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual IAsyncResult ^ BeginTrack(System::Activities::Tracking::TrackingRecord ^ record, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTrack : System.Activities.Tracking.TrackingRecord * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginTrack : System.Activities.Tracking.TrackingRecord * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="trackingParticipant.BeginTrack (record, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="System.Activities.Tracking.TrackingRecord" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="record">생성된 추적 레코드입니다.</param>
        <param name="timeout">공급자가 이 기간 후에 시도를 중단하는 기간입니다.</param>
        <param name="callback">작업이 완료되면 호출할 메서드입니다.</param>
        <param name="state">이 비동기 작업을 고유하게 식별하는 사용자 정의 개체입니다.</param>
        <summary>파생 클래스에서 구현된 경우 추적 레코드의 비동기 처리를 시작합니다.</summary>
        <returns>작업의 결과입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 참가자는 레코드 처리 작업을 시작하고 워크플로 런타임에서 완료 대기하는 데 사용하는 <xref:System.IAsyncResult>를 반환해야 합니다. 기본 구현에서는 <xref:System.Activities.Tracking.TrackingParticipant.Track%2A>을 호출하고 Completed 상태를 반환합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTrack">
      <MemberSignature Language="C#" Value="protected internal virtual void EndTrack (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void EndTrack(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Tracking.TrackingParticipant.EndTrack(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub EndTrack (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void EndTrack(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndTrack : IAsyncResult -&gt; unit&#xA;override this.EndTrack : IAsyncResult -&gt; unit" Usage="trackingParticipant.EndTrack result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">작업의 상태입니다.</param>
        <summary>파생 클래스에서 구현된 경우 비동기 추적 작업의 끝을 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 추적 작업이 완료될 때까지 차단되어야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Track">
      <MemberSignature Language="C#" Value="protected internal abstract void Track (System.Activities.Tracking.TrackingRecord record, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Track(class System.Activities.Tracking.TrackingRecord record, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Tracking.TrackingParticipant.Track(System.Activities.Tracking.TrackingRecord,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub Track (record As TrackingRecord, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void Track(System::Activities::Tracking::TrackingRecord ^ record, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Track : System.Activities.Tracking.TrackingRecord * TimeSpan -&gt; unit" Usage="trackingParticipant.Track (record, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="System.Activities.Tracking.TrackingRecord" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="record">생성된 추적 레코드입니다.</param>
        <param name="timeout">공급자가 이 기간 후에 시도를 중단하는 기간입니다.</param>
        <summary>파생 클래스에서 구현된 경우 추적 레코드를 동기적으로 처리하는 데 사용합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 추적 메서드는 워크플로 인스턴스에서 추적 레코드를 내보낼 때 호출됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackingProfile">
      <MemberSignature Language="C#" Value="public virtual System.Activities.Tracking.TrackingProfile TrackingProfile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Tracking.TrackingProfile TrackingProfile" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Tracking.TrackingParticipant.TrackingProfile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TrackingProfile As TrackingProfile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Activities::Tracking::TrackingProfile ^ TrackingProfile { System::Activities::Tracking::TrackingProfile ^ get(); void set(System::Activities::Tracking::TrackingProfile ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TrackingProfile : System.Activities.Tracking.TrackingProfile with get, set" Usage="System.Activities.Tracking.TrackingParticipant.TrackingProfile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Tracking.TrackingProfile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>추적 참가자가 사용하는 추적 프로필 개체입니다. 워크플로 확장에 추적 참가자를 추가하기 전에 추적 프로필이 참가자에 설정됩니다.</summary>
        <value>추적 프로필입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 추적 프로필은 이 추적 참가자에게 전송되는 추적 이벤트를 정의합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>