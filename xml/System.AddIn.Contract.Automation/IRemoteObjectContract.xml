<Type Name="IRemoteObjectContract" FullName="System.AddIn.Contract.Automation.IRemoteObjectContract">
  <Metadata><Meta Name="ms.openlocfilehash" Value="96ad5deed36463a85848211bc369ec4cff718020" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37706244" /></Metadata><TypeSignature Language="C#" Value="public interface IRemoteObjectContract : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRemoteObjectContract implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRemoteObjectContract&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRemoteObjectContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IRemoteObjectContract = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>구성 요소에서 애플리케이션 도메인 및 프로세스 경계를 넘어 개체에 액세스하는 데 사용할 수 있는 계약을 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 구현 하는 경우 <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> 형식에 구성 요소는 계약 하 여 형식의 개체에 대 한 형식 정보에 액세스 합니다. 구성 요소를 호출 하 여 형식 정보에 액세스 합니다 <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> 메서드는 <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>합니다. <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> 인터페이스 구성 요소는 특정 형식 및 멤버 정보를 액세스 하 고 멤버를 호출 하는 데 사용할 수 있는 계약을 정의 합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetRemoteType">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteTypeContract GetRemoteType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteTypeContract GetRemoteType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRemoteType () As IRemoteTypeContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteTypeContract ^ GetRemoteType();" />
      <MemberSignature Language="F#" Value="abstract member GetRemoteType : unit -&gt; System.AddIn.Contract.Automation.IRemoteTypeContract" Usage="iRemoteObjectContract.GetRemoteType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteTypeContract</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />의 형식을 지정하는 <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />를 반환합니다.</summary>
        <returns>현재 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />의 형식을 지정하는 <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> 원격의 멤버에 액세스 하는 메서드 개체를 현재 <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> 식별 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteCast">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.RemoteArgument RemoteCast (string canonicalName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.AddIn.Contract.RemoteArgument RemoteCast(string canonicalName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoteCast (canonicalName As String) As RemoteArgument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::RemoteArgument RemoteCast(System::String ^ canonicalName);" />
      <MemberSignature Language="F#" Value="abstract member RemoteCast : string -&gt; System.AddIn.Contract.RemoteArgument" Usage="iRemoteObjectContract.RemoteCast canonicalName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.RemoteArgument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canonicalName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="canonicalName">개체를 캐스팅할 형식의 정식 이름입니다.</param>
        <summary>현재 <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />가 식별하는 개체를 지정된 형식으로 캐스팅합니다.</summary>
        <returns>캐스트 작업의 결과를 나타내는 <see cref="T:System.AddIn.Contract.RemoteArgument" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 정식 이름은 전역적으로 고유한 이름을 GUID와 같은 경우 형식에서 문자열 \< *어셈블리 이름*>를 \< *정규화 된 형식 이름을*>는 것이 좋습니다. 권장 되는 형식의 정식 이름 예로 "ShapeApp의 경우 Microsoft.VisualStudio.Tools.Applications.Samples.ShapeApp.Application"입니다.  
  
 형식의 canonical 이름을 형식이 구성 요소에서 게시 된 후에 변경할 수 없습니다. 형식 종류를 이미 사용 하는 클라이언트 구성 요소와 구성 요소 나누기 호환성의 이후 버전에서 정식 이름을 변경 합니다.  
  
 것이 좋습니다 <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast%2A> 구현은 throw는 <xref:System.InvalidCastException> 캐스트 작업이 실패 한 경우.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>