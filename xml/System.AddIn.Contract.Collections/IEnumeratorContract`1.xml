<Type Name="IEnumeratorContract&lt;C&gt;" FullName="System.AddIn.Contract.Collections.IEnumeratorContract&lt;C&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d1dc453127e910f3fa3b4ba16478a4847f87f648" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53229027" /></Metadata><TypeSignature Language="C#" Value="public interface IEnumeratorContract&lt;C&gt; : System.AddIn.Contract.IContract where C : IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumeratorContract`1&lt;(class System.AddIn.Contract.IContract) C&gt; implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Collections.IEnumeratorContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumeratorContract(Of C)&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename C&gt;&#xA; where C : IContractpublic interface class IEnumeratorContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IEnumeratorContract&lt;'C (requires 'C :&gt; IContract)&gt; = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="C">
      <Constraints>
        <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="C">열거할 개체의 형식입니다. <paramref name="C" />는 <see cref="T:System.AddIn.Contract.IContract" /> 인터페이스를 구현해야 합니다.</typeparam>
    <summary><see cref="T:System.AddIn.Contract.IContract" /> 개체의 제네릭 컬렉션 요소를 열거합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 열거자를 사용하여 컬렉션의 데이터를 읽을 수는 있지만 내부 컬렉션을 수정할 수는 없습니다.  
  
 처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치됩니다. 이 위치에서의 반환 값 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> 정의 되지 않습니다. 따라서 호출 해야 합니다 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 하 여 열거자를 호출 하기 전에 컬렉션의 첫 번째 요소로 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>합니다.  
  
 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>는 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>가 호출될 때까지 동일한 개체를 반환합니다. <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 반환 값을 설정 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> 다음 요소에 있습니다.  
  
 경우 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 열거자를 컬렉션의 끝 컬렉션의 마지막 요소 뒤에 배치 되는 전달 하 고 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 반환 `false`합니다. 열거자가 있는 경우이 위치에 대 한 후속 호출은 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 반환할 수도 `false`합니다. 마지막으로 호출 하는 경우 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 반환 `false`, 반환 값 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> 정의 되지 않습니다.  
  
 열거자는 컬렉션이 변경되지 않은 상태로 유지되는 한 유효한 상태를 유지합니다. 컬렉션에 대해 변경 내용을 수행하면(예: 요소 추가, 수정 또는 삭제) 열거자는 복구 불가능하게 무효화되고 해당 동작은 정의되지 않습니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public C GetCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !C GetCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrent () As C" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; C GetCurrent();" />
      <MemberSignature Language="F#" Value="abstract member GetCurrent : unit -&gt; 'C" Usage="iEnumeratorContract.GetCurrent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>C</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컬렉션에서 열거자의 현재 위치에 있는 <see cref="T:System.AddIn.Contract.IContract" />를 반환합니다.</summary>
        <returns>컬렉션에서 열거자의 현재 위치에 있는 <see cref="T:System.AddIn.Contract.IContract" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환 값 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> 다음 조건 중 하나라도 아래 정의 되어 있지 않습니다.  
  
-   열거자가 만들어진 후에 바로 또는 후 열거자 컬렉션의 첫 번째 요소 앞에 배치 되 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> 라고 합니다. <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 호출 하 여 열거자를 호출 하기 전에 컬렉션의 첫 번째 요소 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>합니다.  
  
-   마지막으로 호출한 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 반환 `false`, 컬렉션의 끝을 나타내는입니다.  
  
-   요소의 추가, 수정 또는 삭제 하는 등 컬렉션에서 변경 되어 열거자가 무효화 됩니다.  
  
 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>는 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A>가 호출될 때까지 동일한 개체를 반환합니다. <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 반환 값을 설정 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> 다음 요소에 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool" Usage="iEnumeratorContract.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>열거자를 컬렉션의 다음 요소로 이동합니다.</summary>
        <returns>열거자가 다음 요소로 이동한 경우 <see langword="true" />이(가) 반환되고, 컬렉션의 끝을 지난 경우 <see langword="false" />이(가) 반환됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 열거자를 만든 후 또는 이후에 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> 메서드가 호출 되 면 열거자가 컬렉션의 첫 번째 요소 앞에 위치 합니다. 첫 번째 호출은 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 메서드는 컬렉션의 첫 번째 요소로 열거자를 이동 합니다.  
  
 경우 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 열거자를 컬렉션의 끝 컬렉션의 마지막 요소 뒤에 배치 되는 전달 하 고 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 반환 `false`합니다. 열거자가 있는 경우이 위치에 대 한 후속 호출은 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 반환할 수도 `false` 때까지 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> 라고 합니다.  
  
 열거자는 컬렉션이 변경되지 않은 상태로 유지되는 한 유효한 상태를 유지합니다. 변경에 추가 하는 등 컬렉션을 수정 하거나 요소를 삭제, 열거자가 복구할 유효 하지 않으며을 다음에 호출할 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 또는 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> throw는 <xref:System.InvalidOperationException>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">열거자가 만들어진 후에 컬렉션이 수정되었습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit" Usage="iEnumeratorContract.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컬렉션의 첫 번째 요소 앞의 초기 위치에 열거자를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 열거자는 컬렉션이 변경되지 않은 상태로 유지되는 한 유효한 상태를 유지합니다. 변경에 추가 하는 등 컬렉션을 수정 하거나 요소를 삭제, 열거자가 복구할 유효 하지 않으며을 다음에 호출할 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> 또는 <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> throw는 <xref:System.InvalidOperationException>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">열거자가 만들어진 후에 컬렉션이 수정되었습니다.</exception>
      </Docs>
    </Member>
  </Members>
</Type>