<Type Name="ArrayPool&lt;T&gt;" FullName="System.Buffers.ArrayPool&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0cd4416c419b70f301ca33ef17107cf4f059b502" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58722636" /></Metadata><TypeSignature Language="C#" Value="public abstract class ArrayPool&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ArrayPool`1&lt;T&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.ArrayPool`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ArrayPool(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ArrayPool abstract" />
  <TypeSignature Language="F#" Value="type ArrayPool&lt;'T&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Buffers</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">리소스 풀에 있는 개체의 형식입니다.</typeparam>
    <summary><see cref="T:T[]" /> 형식의 인스턴스를 재사용할 수 있는 리소스 풀을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
 사용 하 여는 <xref:System.Buffers.ArrayPool%601> 대여할 버퍼를 반환 하는 클래스 (사용 하 여 합니다 <xref:System.Buffers.ArrayPool%601.Rent%2A> 및 <xref:System.Buffers.ArrayPool%601.Return%2A> 메서드) 배열 생성 되 고 자주 제거 상황에서 성능을 향상 시킬 수 있습니다, 가비지에 중요 한 메모리 압력의 결과 수집기입니다.
  
 ]]></format>
    </remarks>
    <threadsafe>이 클래스는 스레드로부터 안전 합니다. 모든 멤버가 여러 스레드에서 동시에 사용할 수 있습니다.</threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ArrayPool ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ArrayPool();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Buffers.ArrayPool`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
이 생성자를 하 게 보호; 참고 파생 된 클래스 에서만 호출할 수는 <xref:System.Buffers.ArrayPool%601> 클래스입니다. 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Buffers.ArrayPool`1&lt;!T&gt; Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::ArrayPool&lt;T&gt; ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Buffers.ArrayPool&lt;'T&gt;" Usage="System.Buffers.ArrayPool&lt;'T&gt;.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Buffers.ArrayPool`1" /> 클래스의 새 인스턴스를 만듭니다.</summary>
        <returns><see cref="T:System.Buffers.ArrayPool`1" /> 클래스의 새 인스턴스입니다.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Create (int maxArrayLength, int maxArraysPerBucket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Buffers.ArrayPool`1&lt;!T&gt; Create(int32 maxArrayLength, int32 maxArraysPerBucket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (maxArrayLength As Integer, maxArraysPerBucket As Integer) As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::ArrayPool&lt;T&gt; ^ Create(int maxArrayLength, int maxArraysPerBucket);" />
      <MemberSignature Language="F#" Value="static member Create : int * int -&gt; System.Buffers.ArrayPool&lt;'T&gt;" Usage="System.Buffers.ArrayPool&lt;'T&gt;.Create (maxArrayLength, maxArraysPerBucket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxArrayLength" Type="System.Int32" />
        <Parameter Name="maxArraysPerBucket" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxArrayLength">풀에 저장될 수 있는 배열 인스턴스의 최대 길이입니다.</param>
        <param name="maxArraysPerBucket">풀에 있는 각 버킷에 저장될 수 있는 배열 인스턴스의 최대수입니다. 풀은 빠른 액세스를 위해 비슷한 길이의 배열을 버킷에 그룹화합니다.</param>
        <summary>지정된 구성을 사용하여 <see cref="T:System.Buffers.ArrayPool`1" /> 클래스의 새 인스턴스를 만듭니다.</summary>
        <returns>지정된 구성을 사용하여 <see cref="T:System.Buffers.ArrayPool`1" /> 클래스의 새 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
인스턴스의 합니다 <xref:System.Buffers.ArrayPool%601> 이 메서드에 의해 생성 된 클래스를 사용 하 여 버킷으로 배열을 그룹화 하는 둘 `maxArraysPerBucket` 초과 하지 않는 해당 배열 및 각 버킷에 `maxArrayLength` 길이입니다.
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rent">
      <MemberSignature Language="C#" Value="public abstract T[] Rent (int minimumLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T[] Rent(int32 minimumLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Rent (minimumLength As Integer) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;T&gt; ^ Rent(int minimumLength);" />
      <MemberSignature Language="F#" Value="abstract member Rent : int -&gt; 'T[]" Usage="arrayPool.Rent minimumLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minimumLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minimumLength">배열의 최소 길이입니다.</param>
        <summary>요청된 길이 이상의 버퍼를 검색합니다.</summary>
        <returns>길이가 <paramref name="minimumLength" /> 이상인 <see cref="T:T[]" /> 형식의 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

이 버퍼는 호출자에 게 대 여 및 사용 하 여 동일한 풀에 반환 되어야 하는 <xref:System.Buffers.ArrayPool%601.Return%2A> 메서드를 해당 it에 대 한 후속 호출에서 다시 사용할 수 있도록는 <xref:System.Buffers.ArrayPool%601.Rent%2A> 메서드. 임대 버퍼를 반환 하지 않으면 오류가 아닙니다. 그러나 풀 수 손실 대체 하기 위해 새 버퍼를 만들 필요가 감소 응용 프로그램 성능에 발생할 수 있습니다.
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="public abstract void Return (T[] array, bool clearArray = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Return(!T[] array, bool clearArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Return (array As T(), Optional clearArray As Boolean = false)" />
      <MemberSignature Language="F#" Value="abstract member Return : 'T[] * bool -&gt; unit" Usage="arrayPool.Return (array, clearArray)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="clearArray" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="array"><see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> 메서드를 사용하여 이전에 가져온 풀에 반환할 버퍼입니다.</param>
        <param name="clearArray">버퍼의 내용을 다시 사용하기 전에 지워야 하는지 여부를 나타냅니다. <paramref name="clearArray" />가 <see langword="true" />로 설정된 경우 및 풀이 이후 다시 사용할 수 있도록 버퍼를 저장하는 경우 <see cref="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" /> 메서드는 해당 콘텐츠의 <paramref name="array" />를 지웁니다. <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> 메서드를 사용하는 후속 호출자는 이전 호출자의 콘텐츠를 표시하지 않습니다. <paramref name="clearArray" />가 <see langword="false" />로 설정되는 경우 또는 풀이 버퍼를 해제하는 경우 배열의 내용은 변경되지 않고 남겨집니다.</param>
        <summary>동일한 <see cref="T:System.Buffers.ArrayPool`1" /> 인스턴스에서 <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> 메서드를 사용하여 이전에 가져온 풀에 배열을 반환합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

버퍼 풀에 반환 되 면 호출자에 게 버퍼의 모든 소유권을 포기 하 고 사용 하지 않아야 합니다. 지정 된 호출에서 반환 된 참조를 <xref:System.Buffers.ArrayPool%601.Rent%2A> 사용 하 여 메서드 반환만 해야 합니다는 <xref:System.Buffers.ArrayPool%601.Return%2A> 메서드를 한 번. 기본 <xref:System.Buffers.ArrayPool%601> 하거나 다시 풀에 이미 저장 된 버퍼 있다고 판단 되 면 반환 된 버퍼를 해제할 수 있습니다 임대 하기 위해 반환 된 버퍼를 보유할 수 있습니다.
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shared">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Shared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Buffers.ArrayPool`1&lt;!T&gt; Shared" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.ArrayPool`1.Shared" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Shared As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Buffers::ArrayPool&lt;T&gt; ^ Shared { System::Buffers::ArrayPool&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Shared : System.Buffers.ArrayPool&lt;'T&gt;" Usage="System.Buffers.ArrayPool&lt;'T&gt;.Shared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>공유 <see cref="T:System.Buffers.ArrayPool`1" /> 인스턴스를 가져옵니다.</summary>
        <value>공유 <see cref="T:System.Buffers.ArrayPool`1" /> 인스턴스.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

공유 풀의 기본 구현을 제공 합니다 <xref:System.Buffers.ArrayPool%601> 클래스 일반 적용 가능성을 위한 것입니다. 공유 클래스 배열을 다양 한 크기를 유지 관리 하 고 실제로 요청 된 것 보다 더 큰 배열을 제공할 수 있습니다 하지만 해당 되지 전달 다시 요청 된 것 보다 더 작은 배열입니다. 사용 하 여 공유 클래스에서 버퍼를 임대 합니다 <xref:System.Buffers.ArrayPool%601.Rent%2A> 메서드 적절 한 버퍼를 사용할 수 없거나 새 버퍼의 경우 할당 되 고 사용할 수 없는 경우 풀에서 제거 되 고 기존 버퍼를 생성 합니다.
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>