<Type Name="CodeDomProvider" FullName="System.CodeDom.Compiler.CodeDomProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="10d65c2c6acb521c573e2db518ec80d92ba50400" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65002893" /></Metadata><TypeSignature Language="C#" Value="public abstract class CodeDomProvider : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CodeDomProvider extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.CodeDomProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeDomProvider&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeDomProvider abstract : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type CodeDomProvider = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>에 대 한 기본 클래스를 제공 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 구현 합니다. 이 클래스는 추상 클래스입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.CodeDom.Compiler.CodeDomProvider> 만들기 및 코드 생성기 및 코드 컴파일러의 인스턴스를 검색에 사용할 수 있습니다. 코드 생성기는 특정 언어에서 코드를 생성할 수 및 코드 컴파일러를 사용 하 여 코드를 어셈블리로 컴파일할 수 있습니다.  
  
> [!NOTE]
>  에 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], 메서드 코드 생성기에서 사용 가능 및 코드 컴파일러 코드 공급자에서 직접 사용할 수 있습니다. 호출할 필요가 없습니다 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 또는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> 액세스 하는 메서드 및 해당 메서드는 되지 않음으로 표시 합니다. 이 새 코드 공급자 구현을 뿐만 아니라 기존에 적용 됩니다.  
  
 <xref:System.CodeDom.Compiler.CodeDomProvider> 구현은 일반적으로 제공 코드 생성 및/또는 코드 컴파일 인터페이스 코드를 생성 하 고 단일 프로그래밍 언어에 대 한 컴파일 관리에 대 한 합니다. 여러 언어에서 지원 되 <xref:System.CodeDom.Compiler.CodeDomProvider> 함께 제공 되는 구현 된 [!INCLUDE[winsdklong](~/includes/winsdklong-md.md)]합니다. 이러한 언어는 C#, Visual Basic, c + + 및 JScript를 포함 합니다. 개발자 또는 컴파일러 공급 업체 구현할 수 있습니다는 <xref:System.CodeDom.Compiler.ICodeGenerator> 하 고 <xref:System.CodeDom.Compiler.ICodeCompiler> 인터페이스를 만들고 제공을 <xref:System.CodeDom.Compiler.CodeDomProvider> CodeDOM 지원을 다른 프로그래밍 언어를 확장 하는 합니다.  
  
 합니다 [ &lt;system.codedom&gt; 요소](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) 파일 (Machine.config) 컴퓨터 구성에서 추가 에대한구성설정을추가하는개발자및컴파일러공급업체에대한메커니즘을제공<xref:System.CodeDom.Compiler.CodeDomProvider>구현입니다.  
  
 합니다 <xref:System.CodeDom.Compiler.CodeDomProvider> 검색 및 열거를 위한 정적 메서드를 제공 하는 클래스는 <xref:System.CodeDom.Compiler.CodeDomProvider> 컴퓨터에서 구현 합니다. 합니다 <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> 메서드 모두에 대 한 설정을 반환 <xref:System.CodeDom.Compiler.CodeDomProvider> 컴퓨터 구현 합니다. 합니다 <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> 메서드는 특정 설정을 반환 <xref:System.CodeDom.Compiler.CodeDomProvider> 프로그래밍 언어 이름을 기반으로 구현 합니다. 합니다 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> 의 인스턴스를 반환 하는 메서드를 <xref:System.CodeDom.Compiler.CodeDomProvider> 특정 언어에 대 한 구현 합니다.  
  
 구성 파일에서 언어 공급자 설정에 대 한 자세한 내용은 참조 하세요. [컴파일러 및 언어 공급자 설정 스키마](~/docs/framework/configure-apps/file-schema/compiler/index.md)합니다.  
  
> [!NOTE]
>  이 클래스는 클래스 수준에서 상속 요청과 링크 요청을 만듭니다. <xref:System.Security.SecurityException> 직접 실행 호출자 또는 파생된 클래스에 완전 신뢰 권한이 없는 경우 throw 됩니다. 보안 요청에 대 한 자세한 내용은 참조 하세요 [링크 요청](~/docs/framework/misc/link-demands.md) 하 고 [상속 요청](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100))합니다.  
  
   
  
## Examples  
 다음 예제 프로그램에서 생성 하 고 "Hello World"를 사용 하 여 출력 하는 프로그램의 CodeDOM 모델을 기반으로 하는 소스 코드를 컴파일할 수는 <xref:System.Console> 클래스입니다. Windows Forms 사용자 인터페이스를 제공 됩니다. 대상 프로그래밍 언어 여러 선택 항목에서 선택할 수 있습니다. C#Visual Basic 및 JScript입니다.  
  
 [!code-cpp[CodeDomExample#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomExample/CPP/source.cpp#1)]
 [!code-csharp[CodeDomExample#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomExample/CS/source.cs#1)]
 [!code-vb[CodeDomExample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">직접 실행 호출자에 대 한 완전 신뢰 합니다. 이 클래스는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">상속자에 대 한 완전 신뢰 합니다. 부분적으로 신뢰할 수 있는 코드에서이 클래스를 상속할 수 없습니다.</permission>
    <block subset="none" type="overrides"><para>.NET Framework 버전 1.0 및 1.1에서는 코드 공급자 구성 구현의 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, <see cref="T:System.CodeDom.Compiler.ICodeGenerator" />, <see cref="T:System.CodeDom.Compiler.ICodeParser" />, 및 <see cref="T:System.CodeDom.Compiler.ICodeCompiler" />합니다. 에 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />, <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />, 및 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> 메서드는 사용 되지 않는의 메서드와 <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 및 <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> 에서 직접 사용할 수는 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 클래스입니다. 코드 공급자 구현에서 해당 메서드를 재정의 하 고 기본 메서드를 호출 하지 해야 합니다.</para></block>
    <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
    <altmember cref="T:Microsoft.CSharp.CSharpCodeProvider" />
    <altmember cref="T:Microsoft.VisualBasic.VBCodeProvider" />
    <altmember cref="T:Microsoft.JScript.JScriptCodeProvider" />
    <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md">컴파일러 및 언어 공급자 설정 스키마</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CodeDomProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CodeDomProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">직접 실행 호출자에 대 한 완전 신뢰 합니다. 이 클래스는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</permission>
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromDom">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromDom (System.CodeDom.Compiler.CompilerParameters options, params System.CodeDom.CodeCompileUnit[] compilationUnits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromDom(class System.CodeDom.Compiler.CompilerParameters options, class System.CodeDom.CodeCompileUnit[] compilationUnits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileAssemblyFromDom (options As CompilerParameters, ParamArray compilationUnits As CodeCompileUnit()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromDom(System::CodeDom::Compiler::CompilerParameters ^ options, ... cli::array &lt;System::CodeDom::CodeCompileUnit ^&gt; ^ compilationUnits);" />
      <MemberSignature Language="F#" Value="abstract member CompileAssemblyFromDom : System.CodeDom.Compiler.CompilerParameters * System.CodeDom.CodeCompileUnit[] -&gt; System.CodeDom.Compiler.CompilerResults&#xA;override this.CompileAssemblyFromDom : System.CodeDom.Compiler.CompilerParameters * System.CodeDom.CodeCompileUnit[] -&gt; System.CodeDom.Compiler.CompilerResults" Usage="codeDomProvider.CompileAssemblyFromDom (options, compilationUnits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="compilationUnits" Type="System.CodeDom.CodeCompileUnit[]" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options"><see cref="T:System.CodeDom.Compiler.CompilerParameters" /> 컴파일 설정을 나타내는 개체입니다.</param>
        <param name="compilationUnits">형식 배열의 <see cref="T:System.CodeDom.CodeCompileUnit" /> 컴파일할 코드를 나타내는입니다.</param>
        <summary>에 따라 어셈블리를 컴파일합니다 합니다 <see cref="N:System.CodeDom" /> 지정된 된 배열에 포함 된 트리 <see cref="T:System.CodeDom.CodeCompileUnit" /> 개체에 지정된 된 컴파일러 설정을 사용 하 여 합니다.</summary>
        <returns><see cref="T:System.CodeDom.Compiler.CompilerResults" /> 컴파일 결과 나타내는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  .NET Framework 버전 1.0 및 1.1에서는이 메서드는에서 제공 합니다 <xref:System.CodeDom.Compiler.ICodeCompiler> 구현에서 반환 되는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> 공급자의입니다. 버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다. 코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeCompiler> 구현이 기본 클래스에 의해 호출 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">이 메서드는 모두 또는 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> 파생된 클래스에서 메서드를 재정의 합니다.</exception>
        <block subset="none" type="overrides"><para>이 메서드를 재정의 하는 경우 기본 클래스의 해당 메서드를 호출 하지 해야 합니다. 기본 클래스의 메서드를 사용 하 여 사용 되지 않는 파생된 클래스에서 생성기를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> 메서드 코드 컴파일러를 사용 하는 기존 공급자와의 호환성. 기본 클래스 메서드 다음 해당 하는 메서드를 호출 합니다 <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> 구현은이 기능을 수행 합니다. 받을 수는 <see cref="T:System.NotImplementedException" /> 코드 컴파일러를 사용 하지 않는 코드 공급자의 기본 클래스 메서드를 호출 합니다.</para></block>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromFile">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromFile (System.CodeDom.Compiler.CompilerParameters options, params string[] fileNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromFile(class System.CodeDom.Compiler.CompilerParameters options, string[] fileNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileAssemblyFromFile (options As CompilerParameters, ParamArray fileNames As String()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromFile(System::CodeDom::Compiler::CompilerParameters ^ options, ... cli::array &lt;System::String ^&gt; ^ fileNames);" />
      <MemberSignature Language="F#" Value="abstract member CompileAssemblyFromFile : System.CodeDom.Compiler.CompilerParameters * string[] -&gt; System.CodeDom.Compiler.CompilerResults&#xA;override this.CompileAssemblyFromFile : System.CodeDom.Compiler.CompilerParameters * string[] -&gt; System.CodeDom.Compiler.CompilerResults" Usage="codeDomProvider.CompileAssemblyFromFile (options, fileNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="fileNames" Type="System.String[]" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options"><see cref="T:System.CodeDom.Compiler.CompilerParameters" /> 컴파일 설정을 나타내는 개체입니다.</param>
        <param name="fileNames">컴파일할 파일의 이름 배열입니다.</param>
        <summary>지정된 된 컴파일러 설정을 사용 하 여 지정된 된 파일에 포함 된 소스 코드에서 어셈블리를 컴파일합니다.</summary>
        <returns><see cref="T:System.CodeDom.Compiler.CompilerResults" /> 컴파일 결과 나타내는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  .NET Framework 버전 1.0 및 1.1에서는이 메서드는에서 제공 합니다 <xref:System.CodeDom.Compiler.ICodeCompiler> 구현에서 반환 되는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> 공급자의입니다. 버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다. 코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeCompiler> 구현이 기본 클래스에 의해 호출 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">이 메서드는 모두 또는 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> 파생된 클래스에서 메서드를 재정의 합니다.</exception>
        <block subset="none" type="overrides"><para>이 메서드를 재정의 하는 경우 기본 클래스의 해당 메서드를 호출 하지 해야 합니다. 기본 클래스의 메서드를 사용 하 여 사용 되지 않는 파생된 클래스에서 생성기를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> 메서드 코드 컴파일러를 사용 하는 기존 공급자와의 호환성. 기본 클래스 메서드 다음 해당 하는 메서드를 호출 합니다 <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> 구현은이 기능을 수행 합니다. 받을 수는 <see cref="T:System.NotImplementedException" /> 코드 컴파일러를 사용 하지 않는 코드 공급자의 기본 클래스 메서드를 호출 합니다.</para></block>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CompileAssemblyFromSource">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.CompilerResults CompileAssemblyFromSource (System.CodeDom.Compiler.CompilerParameters options, params string[] sources);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.CompilerResults CompileAssemblyFromSource(class System.CodeDom.Compiler.CompilerParameters options, string[] sources) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompileAssemblyFromSource (options As CompilerParameters, ParamArray sources As String()) As CompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::CompilerResults ^ CompileAssemblyFromSource(System::CodeDom::Compiler::CompilerParameters ^ options, ... cli::array &lt;System::String ^&gt; ^ sources);" />
      <MemberSignature Language="F#" Value="abstract member CompileAssemblyFromSource : System.CodeDom.Compiler.CompilerParameters * string[] -&gt; System.CodeDom.Compiler.CompilerResults&#xA;override this.CompileAssemblyFromSource : System.CodeDom.Compiler.CompilerParameters * string[] -&gt; System.CodeDom.Compiler.CompilerResults" Usage="codeDomProvider.CompileAssemblyFromSource (options, sources)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.CodeDom.Compiler.CompilerParameters" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="sources" Type="System.String[]" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="options"><see cref="T:System.CodeDom.Compiler.CompilerParameters" /> 이 컴파일에 대 한 컴파일러 설정을 나타내는 개체입니다.</param>
        <param name="sources">컴파일할 소스 코드 문자열의 배열입니다.</param>
        <summary>지정된 된 컴파일러 설정을 사용 하 여 소스 코드를 포함 하는 문자열의 지정된 된 배열에서 어셈블리를 컴파일합니다.</summary>
        <returns><see cref="T:System.CodeDom.Compiler.CompilerResults" /> 컴파일 결과 나타내는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  .NET Framework 버전 1.0 및 1.1에서는이 메서드는에서 제공 합니다 <xref:System.CodeDom.Compiler.ICodeCompiler> 구현에서 반환 되는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> 공급자의입니다. 버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다. 코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeCompiler> 구현이 기본 클래스에 의해 호출 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">이 메서드는 모두 또는 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> 파생된 클래스에서 메서드를 재정의 합니다.</exception>
        <block subset="none" type="overrides"><para>이 메서드를 재정의 하는 경우 기본 클래스의 해당 메서드를 호출 하지 해야 합니다. 기본 클래스의 메서드를 사용 하 여 사용 되지 않는 파생된 클래스에서 생성기를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> 메서드 코드 컴파일러를 사용 하는 기존 공급자와의 호환성. 기본 클래스 메서드 다음 해당 하는 메서드를 호출 합니다 <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> 구현은이 기능을 수행 합니다. 받을 수는 <see cref="T:System.NotImplementedException" /> 코드 컴파일러를 사용 하지 않는 코드 공급자의 기본 클래스 메서드를 호출 합니다.</para></block>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="CreateCompiler">
      <MemberSignature Language="C#" Value="public abstract System.CodeDom.Compiler.ICodeCompiler CreateCompiler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeCompiler CreateCompiler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateCompiler () As ICodeCompiler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::CodeDom::Compiler::ICodeCompiler ^ CreateCompiler();" />
      <MemberSignature Language="F#" Value="abstract member CreateCompiler : unit -&gt; System.CodeDom.Compiler.ICodeCompiler" Usage="codeDomProvider.CreateCompiler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("ICodeCompiler is obsolete")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.Obsolete("Callers should not use the ICodeCompiler interface and should instead use the methods directly on the CodeDomProvider class. Those inheriting from CodeDomProvider must still implement this interface, and should exclude this warning or also obsolete this method.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeCompiler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>파생된 클래스에서 재정의 되 면 새 코드 컴파일러를 만듭니다.</summary>
        <returns><see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> 의 컴파일에 사용할 수 있는 <see cref="N:System.CodeDom" /> 소스 코드 표현을 기반으로 합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는에서 사용 되지 않는 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다. 권장된 대안 호출 하는 것을 <xref:System.CodeDom.Compiler.ICodeCompiler> 코드 공급자에서 직접 사용할 수 있는 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>에 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]를 구현 해야를 <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> 멤버는 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 클래스 및 throw를 <see cref="T:System.NotSupportedException" /> 이 메서드가 호출 될 때.</para></block>
      </Docs>
    </Member>
    <Member MemberName="CreateEscapedIdentifier">
      <MemberSignature Language="C#" Value="public virtual string CreateEscapedIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateEscapedIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEscapedIdentifier (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CreateEscapedIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CreateEscapedIdentifier : string -&gt; string&#xA;override this.CreateEscapedIdentifier : string -&gt; string" Usage="codeDomProvider.CreateEscapedIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value">문자열을 이스케이프 된 식별자를 만들입니다.</param>
        <summary>지정된 된 값의 이스케이프 된 식별자를 만듭니다.</summary>
        <returns>값의 이스케이프 된 식별자입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier%2A> 테스트 식별자를 사용 하 여 예약 된 충돌 하는 여부 또는 언어 키워드 및 경우에 언어별 이스케이프 코드 서식을 사용 하 여 해당 이름을 반환 합니다. 이스케이프 된 식별자 라고 합니다. 이스케이프 된 식별자를 포함 하는 동일한 `value` 되지만 키워드에서 식별자를 구분 하기 위해 추가 이스케이프 코드 서식 지정 되어 있습니다. 두 가지 구현 예는 앞의 `value` 사용 하 여 "@" 붙이거나는 `value` 사용 하 여 "[" 및 "]"입니다.  
  
> [!NOTE]
>  .NET Framework 버전 1.0 및 1.1에서는이 메서드는에서 제공 합니다 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현에서 반환 되는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 공급자의입니다. 버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다. 코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현이 기본 클래스에 의해 호출 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">이 메서드는 모두 또는 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 파생된 클래스에서 메서드를 재정의 합니다.</exception>
        <block subset="none" type="overrides"><para>이 메서드를 재정의 하는 경우 기본 클래스의 해당 메서드를 호출 하지 해야 합니다. 기본 클래스의 메서드를 사용 하 여 사용 되지 않는 파생된 클래스에서 생성기를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 메서드 코드 생성기를 사용 하는 기존 공급자와의 호환성. 기본 클래스 메서드 다음 해당 하는 메서드를 호출 합니다 <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 구현은이 기능을 수행 합니다. 받을 수는 <see cref="T:System.NotImplementedException" /> 코드 생성기를 사용 하지 않는 코드 공급자의 기본 클래스 메서드를 호출 합니다.</para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateGenerator">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>파생된 클래스에서 재정의 되 면 새 코드 생성기를 만듭니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public abstract System.CodeDom.Compiler.ICodeGenerator CreateGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateGenerator () As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator();" />
      <MemberSignature Language="F#" Value="abstract member CreateGenerator : unit -&gt; System.CodeDom.Compiler.ICodeGenerator" Usage="codeDomProvider.CreateGenerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("ICodeGenerator is obsolete")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.Obsolete("Callers should not use the ICodeGenerator interface and should instead use the methods directly on the CodeDomProvider class. Those inheriting from CodeDomProvider must still implement this interface, and should exclude this warning or also obsolete this method.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>파생된 클래스에서 재정의 되 면 새 코드 생성기를 만듭니다.</summary>
        <returns><see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 생성에 사용할 수 있는 <see cref="N:System.CodeDom" /> 소스 코드 표현을 기반으로 합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는에서 사용 되지 않는 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]합니다. 권장된 대안 호출 하는 것은 <xref:System.CodeDom.Compiler.ICodeGenerator> 에서 직접 사용할 수 있는 메서드는 <xref:System.CodeDom.Compiler.CodeDomProvider> 클래스.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>에 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]를 구현 해야를 <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 멤버는 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 클래스 및 throw를 <see cref="T:System.NotSupportedException" /> 이 메서드가 호출 될 때.</para></block>
      </Docs>
    </Member>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.ICodeGenerator CreateGenerator (System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator(class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGenerator (output As TextWriter) As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator(System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member CreateGenerator : System.IO.TextWriter -&gt; System.CodeDom.Compiler.ICodeGenerator&#xA;override this.CreateGenerator : System.IO.TextWriter -&gt; System.CodeDom.Compiler.ICodeGenerator" Usage="codeDomProvider.CreateGenerator output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="output"><see cref="T:System.IO.TextWriter" /> 데를 출력 합니다.</param>
        <summary>파생된 클래스에서 재정의 되 면 지정 된 새 코드 생성기를 만듭니다. <see cref="T:System.IO.TextWriter" /> 출력 합니다.</summary>
        <returns><see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 생성에 사용할 수 있는 <see cref="N:System.CodeDom" /> 소스 코드 표현을 기반으로 합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하 여 지정 된 <xref:System.IO.TextWriter> 출력 합니다. 이 방법은 증분 방식으로 소스 코드를 업데이트 하는 자세한 최적화 된 코드 생성을 지원 합니다.  
  
> [!NOTE]
>  기본 클래스 구현 호출 하 여는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 에서 사용 되지 않는 메서드를 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 그 결과 <xref:System.NotSupportedException> 경우는 <xref:System.CodeDom.Compiler.ICodeGenerator> 개체 반환 되지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="CreateGenerator">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.ICodeGenerator CreateGenerator (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeGenerator CreateGenerator(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateGenerator (fileName As String) As ICodeGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::ICodeGenerator ^ CreateGenerator(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="abstract member CreateGenerator : string -&gt; System.CodeDom.Compiler.ICodeGenerator&#xA;override this.CreateGenerator : string -&gt; System.CodeDom.Compiler.ICodeGenerator" Usage="codeDomProvider.CreateGenerator fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">파일 이름에 대 한 출력입니다.</param>
        <summary>파생된 클래스에서 재정의 되 면 출력에 대 한 지정 된 파일 이름을 사용 하 여 새 코드 생성기를 만듭니다.</summary>
        <returns><see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 생성에 사용할 수 있는 <see cref="N:System.CodeDom" /> 소스 코드 표현을 기반으로 합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 출력에 대 한 지정 된 파일 이름을 사용합니다.  
  
> [!NOTE]
>  기본 클래스 구현 호출 하 여는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 에서 사용 되지 않는 메서드를 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 그 결과 <xref:System.NotSupportedException> 경우는 <xref:System.CodeDom.Compiler.ICodeGenerator> 개체 반환 되지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParser">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.ICodeParser CreateParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.Compiler.ICodeParser CreateParser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateParser () As ICodeParser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::Compiler::ICodeParser ^ CreateParser();" />
      <MemberSignature Language="F#" Value="abstract member CreateParser : unit -&gt; System.CodeDom.Compiler.ICodeParser&#xA;override this.CreateParser : unit -&gt; System.CodeDom.Compiler.ICodeParser" Usage="codeDomProvider.CreateParser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("ICodeParser is obsolete")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.Obsolete("Callers should not use the ICodeParser interface and should instead use the methods directly on the CodeDomProvider class. Those inheriting from CodeDomProvider must still implement this interface, and should exclude this warning or also obsolete this method.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.ICodeParser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>파생된 클래스에서 재정의 되 면 새 코드 파서를 만듭니다.</summary>
        <returns><see cref="T:System.CodeDom.Compiler.ICodeParser" /> 소스 코드를 구문 분석에 사용할 수 있습니다. 기본 구현에서는 항상 반환 <see langword="null" />합니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProvider">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>가져옵니다는 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 지정된 된 언어에 대 한 인스턴스.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CodeDomProvider CreateProvider (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CodeDomProvider CreateProvider(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProvider (language As String) As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider(System::String ^ language);" />
      <MemberSignature Language="F#" Value="static member CreateProvider : string -&gt; System.CodeDom.Compiler.CodeDomProvider" Usage="System.CodeDom.Compiler.CodeDomProvider.CreateProvider language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="language">언어 이름입니다.</param>
        <summary>가져옵니다는 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 지정된 된 언어에 대 한 인스턴스.</summary>
        <returns>지정된 된 언어 이름에 대 한 구현 되는 CodeDOM 공급자입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  이 메서드는 인스턴스를 만드는 코드 공급자의 여러 공급자 중 하나를 선택적으로 사용할 수 있는 애플리케이션에서 가장 많이 사용 됩니다. <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> 런타임에 인스턴스화할 하려는 코드 공급자를 지정할 수 있습니다. 디자인 타임 코드 공급자를 사용 하는 것에 알고 있는 경우 해당 코드 공급자의 인스턴스를 만드는 대신 해야 사용 된 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> 메서드.  
  
 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> 메서드가 반환 되는 <xref:System.CodeDom.Compiler.CodeDomProvider> 특정 언어 이름에 대 한 인스턴스; 호출 하는 것과 비슷합니다는 <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> 언어 공급자 형식 사용 하 여 메서드. 사용 하 여 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> 동적 언어 이름에 대 한 구성된 공급자 구현을를 찾으려는 경우.  
  
 둘 이상의 공급자 구현 언어 이름에 대해 구성 된 경우 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> 마지막 일치 하는 구성 요소에 대 한 공급자 인스턴스를 반환 합니다.  
  
 사용 된 <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> 메서드 오버 로드 하는 특정 언어 공급자 구현 하려는 경우. 사용 예를 들어,를 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> 언어 이름을 지 원하는 공급자 인스턴스를 가져오는 방법 `"CSharp"`; 사용 합니다 <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29?displayProperty=nameWithType> 메서드 오버 로드에 맞게 공급자 인스턴스를 가져오는 <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> 구현 합니다. 사용 해야 합니다 [\], 개체, CultureInfo\<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D% 2CSystem.Globalization.CultureInfo%2CSystem.Object%5B%5D%29?displayProperty=nameWithType > 메서드는 언어에 대 한 여러 코드 공급자 있고 특정 코드 공급자를 인스턴스화할 하려는 경우.  
  
 <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> 메서드는 하나 이상의 공급자 구현에서 특정 언어를 지원 하는지 여부를 확인 합니다. 사용 하 여 언어 이름을 확인할 수 있습니다 <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> 전달 하기 전에 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A>입니다. 하는 지원 되지 않는 언어 이름을 전달 하는 경우 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> 는 <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> throw 됩니다.  
  
 합니다 <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> 메서드를 사용 하 여 모두 확인할 수 있습니다 <xref:System.CodeDom.Compiler.CodeDomProvider> 구현 개발자 및에서 식별 되는 컴파일러 공급 업체에서 제공 하는 추가 구현을 비롯 하 여 컴퓨터에는 [ &lt;system.codedom &gt; 요소](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) 컴퓨터 구성 파일 (Machine.config).  
  
 합니다 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%2A> 의 인스턴스를 반환 하는 메서드를 <xref:System.CodeDom.Compiler.CodeDomProvider> 특정 언어에 대 한 구현 합니다.  
  
 언어 이름은 대/소문자를 구분 하지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 결정을 <xref:System.CodeDom.Compiler.CodeDomProvider> 언어 공급자에 대 한 구성된 설정 표시 및 입력된 언어에 대 한 구현 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerInfo> 클래스입니다.  
  
 [!code-cpp[CodeDom_CompilerInfo#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#6)]
 [!code-csharp[CodeDom_CompilerInfo#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#6)]
 [!code-vb[CodeDom_CompilerInfo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><paramref name="language" /> 는이 컴퓨터에는 구성된 공급자가 없습니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="language" />이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">직접 실행 호출자에 대 한 완전 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CodeDomProvider CreateProvider (string language, System.Collections.Generic.IDictionary&lt;string,string&gt; providerOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CodeDomProvider CreateProvider(string language, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; providerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProvider (language As String, providerOptions As IDictionary(Of String, String)) As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider(System::String ^ language, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ providerOptions);" />
      <MemberSignature Language="F#" Value="static member CreateProvider : string * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; System.CodeDom.Compiler.CodeDomProvider" Usage="System.CodeDom.Compiler.CodeDomProvider.CreateProvider (language, providerOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="providerOptions" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="language">언어 이름입니다.</param>
        <param name="providerOptions">구성 파일에서 공급자 옵션의 컬렉션입니다.</param>
        <summary>가져옵니다는 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 지정된 된 언어와 공급자 옵션에 대 한 인스턴스.</summary>
        <returns>지정 된 언어 이름과 옵션에 대해 구현 된 CodeDOM 공급자입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  이 메서드는 인스턴스를 만드는 코드 공급자의 여러 공급자 중 하나를 선택적으로 사용할 수 있는 애플리케이션에서 가장 많이 사용 됩니다. <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> 런타임 시 인스턴스화하 려는 코드 공급자의 버전을 지정할 수 있습니다. 사용 하는 대신 해당 코드 공급자의 인스턴스를 만들어야 하면 디자인 타임 코드 공급자를 사용 하는 것에 알고 있는 경우는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> 메서드.  
  
 사용 하 여 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%2CSystem.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> 특정 언어 및 옵션에 대해 구성된 된 공급자 구현을 동적으로 찾을 하려는 경우. 언어 이름은 대/소문자를 구분 하지 않습니다. 지원 되는 공급자 옵션에 대 한 내용은 특정 CodeDOM 공급자 설명서를 참조 하세요.  
  
 공급자의 유효성을 검사 하 고 둘 이상의 공급자 구현 언어 이름에 대해 구성 된 경우 공급자를 호출 하는 방법에 대 한 내용은의 설명 섹션을 참조 하세요.를 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateProvider%28System.String%29> 메서드.  
  
   
  
## Examples  
 다음 예제에 사용 하 여 공급자의 인스턴스를 만드는 방법을 보여 줍니다는 `providerOptions` 매개 변수입니다.  
  
 [!code-csharp[CodeDomProvider.ProviderOptions#1](~/samples/snippets/csharp/VS_Snippets_CLR/codedomprovider.provideroptions/cs/program.cs#1)]
 [!code-vb[CodeDomProvider.ProviderOptions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/codedomprovider.provideroptions/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateValidIdentifier">
      <MemberSignature Language="C#" Value="public virtual string CreateValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateValidIdentifier (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CreateValidIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CreateValidIdentifier : string -&gt; string&#xA;override this.CreateValidIdentifier : string -&gt; string" Usage="codeDomProvider.CreateValidIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value">유효한 식별자를 생성 하는 문자열입니다.</param>
        <summary>지정된 된 값의 유효한 식별자를 만듭니다.</summary>
        <returns>지정된 된 값의 유효한 식별자입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier%2A> 예약 된 식별자 충돌 하는지 여부를 테스트 또는 언어 키워드 경우, 올바른 식별자를 반환 하려고 이름을 지정 하는 충돌 하지 않습니다. 일반적으로 반환 된 식별자만 조금 수정 되어; 키워드에서 식별자와 구분 예를 들어 이름 앞에 밑줄 ("_") 문자로 수 있습니다.  
  
> [!NOTE]
>  .NET Framework 버전 1.0 및 1.1에서는이 메서드는에서 제공 합니다 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현에서 반환 되는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 공급자의입니다. 버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다. 코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현이 기본 클래스에 의해 호출 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">이 메서드는 모두 또는 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 파생된 클래스에서 메서드를 재정의 합니다.</exception>
        <block subset="none" type="overrides"><para>이 메서드를 재정의 하는 경우 기본 클래스의 해당 메서드를 호출 하지 해야 합니다. 기본 클래스의 메서드를 사용 하 여 사용 되지 않는 파생된 클래스에서 생성기를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 메서드 코드 생성기를 사용 하는 기존 공급자와의 호환성. 기본 클래스 메서드 다음 해당 하는 메서드를 호출 합니다 <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 구현은이 기능을 수행 합니다. 받을 수는 <see cref="T:System.NotImplementedException" /> 코드 생성기를 사용 하지 않는 코드 공급자의 기본 클래스 메서드를 호출 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="FileExtension">
      <MemberSignature Language="C#" Value="public virtual string FileExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileExtension" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeDomProvider.FileExtension" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FileExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FileExtension { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileExtension : string" Usage="System.CodeDom.Compiler.CodeDomProvider.FileExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 언어의 소스 코드 파일에 사용할 기본 파일 이름 확장명을 가져옵니다.</summary>
        <value>현재 언어의 소스 파일의 확장명에 해당 하는 파일 이름 확장명. 기본 구현에서는 항상 반환 <see cref="F:System.String.Empty" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 코드 생성기 및 코드 컴파일러에서 생성 하거나 사용 하는 파일 확장명을 나타내기 위해 사용 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는의 인스턴스를 만들고 <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>합니다. 공급자 이름, 새 공급자 인스턴스에 대 한 해시 코드 및 기본 파일 이름 확장명을 표시합니다.  
  
 [!code-cpp[CodeDom_CompilerInfo#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#3)]
 [!code-csharp[CodeDom_CompilerInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#3)]
 [!code-vb[CodeDom_CompilerInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromCompileUnit">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromCompileUnit (System.CodeDom.CodeCompileUnit compileUnit, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromCompileUnit(class System.CodeDom.CodeCompileUnit compileUnit, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromCompileUnit (compileUnit As CodeCompileUnit, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromCompileUnit(System::CodeDom::CodeCompileUnit ^ compileUnit, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromCompileUnit : System.CodeDom.CodeCompileUnit * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromCompileUnit : System.CodeDom.CodeCompileUnit * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromCompileUnit (compileUnit, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="compileUnit"><see cref="T:System.CodeDom.CodeCompileUnit" /> 코드 생성입니다.</param>
        <param name="writer"><see cref="T:System.IO.TextWriter" /> 출력 코드가 전송 됩니다.</param>
        <param name="options"><see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> 코드를 생성할 때 사용할 옵션을 나타내는입니다.</param>
        <summary>지정 된 코드 문서 개체 모델 (CodeDOM) 컴파일 단위에 대 한 코드를 생성 및 지정된 된 옵션을 사용 하 여 지정 된 텍스트 작성기에 보냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  .NET Framework 버전 1.0 및 1.1에서는이 메서드는에서 제공 합니다 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현에서 반환 되는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 공급자의입니다. 버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다. 코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현이 기본 클래스에 의해 호출 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 합니다 <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit%2A> 에서 "Hello World" 애플리케이션 코드를 생성 하는 메서드를 <xref:System.CodeDom.CodeCompileUnit>입니다. 이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CodeDomProvider> 클래스입니다.  
  
 [!code-cpp[CodeDomExample#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomExample/CPP/source.cpp#3)]
 [!code-csharp[CodeDomExample#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomExample/CS/source.cs#3)]
 [!code-vb[CodeDomExample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">이 메서드는 모두 또는 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 파생된 클래스에서 메서드를 재정의 합니다.</exception>
        <block subset="none" type="overrides"><para>이 메서드를 재정의 하는 경우 기본 클래스의 해당 메서드를 호출 하지 해야 합니다. 기본 클래스의 메서드를 사용 하 여 사용 되지 않는 파생된 클래스에서 생성기를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 메서드 코드 생성기를 사용 하는 기존 공급자와의 호환성. 기본 클래스 메서드 다음 해당 하는 메서드를 호출 합니다 <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 구현은이 기능을 수행 합니다. 받을 수는 <see cref="T:System.NotImplementedException" /> 코드 생성기를 사용 하지 않는 코드 공급자의 기본 클래스 메서드를 호출 합니다.</para></block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromExpression">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromExpression (System.CodeDom.CodeExpression expression, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromExpression(class System.CodeDom.CodeExpression expression, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromExpression (expression As CodeExpression, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromExpression(System::CodeDom::CodeExpression ^ expression, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromExpression : System.CodeDom.CodeExpression * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromExpression : System.CodeDom.CodeExpression * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromExpression (expression, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="expression"><see cref="T:System.CodeDom.CodeExpression" /> 코드를 생성할 식을 나타내는 개체입니다.</param>
        <param name="writer"><see cref="T:System.IO.TextWriter" /> 출력 코드가 전송 됩니다.</param>
        <param name="options"><see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> 코드를 생성할 때 사용할 옵션을 나타내는입니다.</param>
        <summary>지정된 된 코드 문서 개체 모델 (CodeDOM) 식에 대 한 코드를 생성 하 고 지정된 된 옵션을 사용 하 여 지정 된 텍스트 작성기에 보냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  .NET Framework 버전 1.0 및 1.1에서는이 메서드는에서 제공 합니다 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현에서 반환 되는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 공급자의입니다. 버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다. 코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현이 기본 클래스에 의해 호출 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">이 메서드는 모두 또는 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 파생된 클래스에서 메서드를 재정의 합니다.</exception>
        <block subset="none" type="overrides"><para>이 메서드를 재정의 하는 경우 기본 클래스의 해당 메서드를 호출 하지 해야 합니다. 기본 클래스의 메서드를 사용 하 여 사용 되지 않는 파생된 클래스에서 생성기를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 메서드 코드 생성기를 사용 하는 기존 공급자와의 호환성. 기본 클래스 메서드 다음 해당 하는 메서드를 호출 합니다 <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 구현은이 기능을 수행 합니다. 받을 수는 <see cref="T:System.NotImplementedException" /> 코드 생성기를 사용 하지 않는 코드 공급자의 기본 클래스 메서드를 호출 합니다.</para></block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromMember">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromMember (System.CodeDom.CodeTypeMember member, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromMember(class System.CodeDom.CodeTypeMember member, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromMember (member As CodeTypeMember, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromMember(System::CodeDom::CodeTypeMember ^ member, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromMember : System.CodeDom.CodeTypeMember * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromMember : System.CodeDom.CodeTypeMember * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromMember (member, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.CodeDom.CodeTypeMember" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="member"><see cref="T:System.CodeDom.CodeTypeMember" /> 코드를 생성할 멤버를 나타내는 개체입니다.</param>
        <param name="writer"><see cref="T:System.IO.TextWriter" /> 출력 코드가 전송 됩니다.</param>
        <param name="options"><see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> 코드를 생성할 때 사용할 옵션을 나타내는입니다.</param>
        <summary>지정된 된 코드 문서 개체 모델 (CodeDOM) 멤버 선언에 대 한 코드를 생성 하 고 지정된 된 옵션을 사용 하 여 지정 된 텍스트 작성기에 보냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 클래스 구현을 throw를 <xref:System.NotImplementedException>입니다. 참조 <xref:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember%2A?displayProperty=nameWithType> 이 메서드의 구현을 설명 하는 설명서에 대 한 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 합니다 <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> 에 의해 구현 된 메서드를 <xref:Microsoft.CSharp.CSharpCodeProvider> 및 <xref:Microsoft.VisualBasic.VBCodeProvider> 클래스입니다.  
  
 [!code-csharp[CodeDom_GenerateCodeFromMember#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/cs/program.cs#1)]
 [!code-vb[CodeDom_GenerateCodeFromMember#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">이 메서드는 파생된 클래스에서 재정의 되지 않은 경우</exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeTypeMember" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromNamespace">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromNamespace (System.CodeDom.CodeNamespace codeNamespace, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromNamespace(class System.CodeDom.CodeNamespace codeNamespace, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromNamespace(System::CodeDom::CodeNamespace ^ codeNamespace, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromNamespace : System.CodeDom.CodeNamespace * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromNamespace : System.CodeDom.CodeNamespace * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromNamespace (codeNamespace, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="codeNamespace"><see cref="T:System.CodeDom.CodeNamespace" /> 코드를 생성할 네임 스페이스를 나타내는 개체입니다.</param>
        <param name="writer"><see cref="T:System.IO.TextWriter" /> 출력 코드가 전송 됩니다.</param>
        <param name="options"><see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> 코드를 생성할 때 사용할 옵션을 나타내는입니다.</param>
        <summary>지정된 된 코드 문서 개체 모델 (CodeDOM) 네임 스페이스에 대 한 코드를 생성 하 고 지정된 된 옵션을 사용 하 여 지정 된 텍스트 작성기에 보냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  .NET Framework 버전 1.0 및 1.1에서는이 메서드는에서 제공 합니다 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현에서 반환 되는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 공급자의입니다. 버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다. 코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현이 기본 클래스에 의해 호출 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">이 메서드는 모두 또는 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 파생된 클래스에서 메서드를 재정의 합니다.</exception>
        <block subset="none" type="overrides"><para>이 메서드를 재정의 하는 경우 기본 클래스의 해당 메서드를 호출 하지 해야 합니다. 기본 클래스의 메서드를 사용 하 여 사용 되지 않는 파생된 클래스에서 생성기를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 메서드 코드 생성기를 사용 하는 기존 공급자와의 호환성. 기본 클래스 메서드 다음 해당 하는 메서드를 호출 합니다 <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 구현은이 기능을 수행 합니다. 받을 수는 <see cref="T:System.NotImplementedException" /> 코드 생성기를 사용 하지 않는 코드 공급자의 기본 클래스 메서드를 호출 합니다.</para></block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeNamespace" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromStatement">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromStatement (System.CodeDom.CodeStatement statement, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromStatement(class System.CodeDom.CodeStatement statement, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromStatement (statement As CodeStatement, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromStatement(System::CodeDom::CodeStatement ^ statement, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromStatement : System.CodeDom.CodeStatement * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromStatement : System.CodeDom.CodeStatement * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromStatement (statement, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="statement" Type="System.CodeDom.CodeStatement" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="statement"><see cref="T:System.CodeDom.CodeStatement" /> 코드를 생성할 CodeDOM 요소가 포함 됩니다.</param>
        <param name="writer"><see cref="T:System.IO.TextWriter" /> 출력 코드가 전송 됩니다.</param>
        <param name="options"><see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> 코드를 생성할 때 사용할 옵션을 나타내는입니다.</param>
        <summary>지정 된 코드 문서 개체 모델 (CodeDOM) 문에 대 한 코드를 생성 하 고 지정된 된 옵션을 사용 하 여 지정 된 텍스트 작성기에 보냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  .NET Framework 버전 1.0 및 1.1에서는이 메서드는에서 제공 합니다 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현에서 반환 되는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 공급자의입니다. 버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다. 코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현이 기본 클래스에 의해 호출 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">이 메서드는 모두 또는 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 파생된 클래스에서 메서드를 재정의 합니다.</exception>
        <block subset="none" type="overrides"><para>이 메서드를 재정의 하는 경우 기본 클래스의 해당 메서드를 호출 하지 해야 합니다. 기본 클래스의 메서드를 사용 하 여 사용 되지 않는 파생된 클래스에서 생성기를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 메서드 코드 생성기를 사용 하는 기존 공급자와의 호환성. 기본 클래스 메서드 다음 해당 하는 메서드를 호출 합니다 <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 구현은이 기능을 수행 합니다. 받을 수는 <see cref="T:System.NotImplementedException" /> 코드 생성기를 사용 하지 않는 코드 공급자의 기본 클래스 메서드를 호출 합니다.</para></block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeStatement" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromType">
      <MemberSignature Language="C#" Value="public virtual void GenerateCodeFromType (System.CodeDom.CodeTypeDeclaration codeType, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromType(class System.CodeDom.CodeTypeDeclaration codeType, class System.IO.TextWriter writer, class System.CodeDom.Compiler.CodeGeneratorOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateCodeFromType (codeType As CodeTypeDeclaration, writer As TextWriter, options As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCodeFromType(System::CodeDom::CodeTypeDeclaration ^ codeType, System::IO::TextWriter ^ writer, System::CodeDom::Compiler::CodeGeneratorOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromType : System.CodeDom.CodeTypeDeclaration * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit&#xA;override this.GenerateCodeFromType : System.CodeDom.CodeTypeDeclaration * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="codeDomProvider.GenerateCodeFromType (codeType, writer, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeType" Type="System.CodeDom.CodeTypeDeclaration" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.CodeDom.Compiler.CodeGeneratorOptions" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="codeType"><see cref="T:System.CodeDom.CodeTypeDeclaration" /> 의 코드를 생성할 형식을 나타내는 개체입니다.</param>
        <param name="writer"><see cref="T:System.IO.TextWriter" /> 출력 코드가 전송 됩니다.</param>
        <param name="options"><see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> 코드를 생성할 때 사용할 옵션을 나타내는입니다.</param>
        <summary>지정된 된 코드 문서 개체 모델 (CodeDOM) 형식 선언에 대 한 코드를 생성 하 고 지정된 된 옵션을 사용 하 여 지정 된 텍스트 작성기에 보냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  .NET Framework 버전 1.0 및 1.1에서는이 메서드는에서 제공 합니다 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현에서 반환 되는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 공급자의입니다. 버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다. 코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현이 기본 클래스에 의해 호출 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">이 메서드는 모두 또는 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 파생된 클래스에서 메서드를 재정의 합니다.</exception>
        <block subset="none" type="overrides"><para>이 메서드를 재정의 하는 경우 기본 클래스의 해당 메서드를 호출 하지 해야 합니다. 기본 클래스의 메서드를 사용 하 여 사용 되지 않는 파생된 클래스에서 생성기를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 메서드 코드 생성기를 사용 하는 기존 공급자와의 호환성. 기본 클래스 메서드 다음 해당 하는 메서드를 호출 합니다 <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 구현은이 기능을 수행 합니다. 받을 수는 <see cref="T:System.NotImplementedException" /> 코드 생성기를 사용 하지 않는 코드 공급자의 기본 클래스 메서드를 호출 합니다.</para></block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GetAllCompilerInfo">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CompilerInfo[] GetAllCompilerInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CompilerInfo[] GetAllCompilerInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllCompilerInfo () As CompilerInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::CodeDom::Compiler::CompilerInfo ^&gt; ^ GetAllCompilerInfo();" />
      <MemberSignature Language="F#" Value="static member GetAllCompilerInfo : unit -&gt; System.CodeDom.Compiler.CompilerInfo[]" Usage="System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 컴퓨터에 대 한 공급자 및 컴파일러 구성 설정을 언어를 반환합니다.</summary>
        <returns>형식 배열의 <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> 구성 된 모든 설정을 나타내는 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 구현 합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A> 컴퓨터 언어 공급자 설정 열거 하는 방법입니다.  
  
> [!NOTE]
>  에 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)],.NET Framework에서 제공 하는 기본 언어 공급자에 지정 되지 않은 합니다 [ &lt;system.codedom&gt; 요소](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) 컴파일러 구성 섹션 및 제거할 수 없습니다 되므로이 메서드는 기본 공급자 및 구성 파일에 지정 하는 방법에 대 한 정보를 반환 합니다.  
  
   
  
## Examples  
 다음 코드 예제는 컴퓨터의 언어 공급자를 열거 하 고 각 언어 공급자에 대 한 구성 및 컴파일러 설정을 표시 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerInfo> 클래스입니다.  
  
 [!code-cpp[CodeDom_CompilerInfo#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#8)]
 [!code-csharp[CodeDom_CompilerInfo#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#8)]
 [!code-vb[CodeDom_CompilerInfo#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">직접 실행 호출자에 대 한 완전 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md">컴파일러 및 언어 공급자 설정 스키마</related>
      </Docs>
    </Member>
    <Member MemberName="GetCompilerInfo">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CompilerInfo GetCompilerInfo (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CompilerInfo GetCompilerInfo(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompilerInfo (language As String) As CompilerInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CompilerInfo ^ GetCompilerInfo(System::String ^ language);" />
      <MemberSignature Language="F#" Value="static member GetCompilerInfo : string -&gt; System.CodeDom.Compiler.CompilerInfo" Usage="System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="language">언어 이름입니다.</param>
        <summary>언어 공급자 및 컴파일러 구성 설정을 지정 된 언어를 반환합니다.</summary>
        <returns>A <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> 구성 된 설정으로 채워진 개체 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 구현 합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 [ &lt;system.codedom&gt; 요소](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) 컴퓨터 구성 파일 각각에 대 한 언어 공급자 및 컴파일러 구성 설정을 포함 <xref:System.CodeDom.Compiler.CodeDomProvider> 컴퓨터의 구현입니다. 컴퓨터 구성 파일에 대 한 자세한 내용은 컴퓨터 구성 파일 섹션을 참조 하세요 [앱 구성](~/docs/framework/configure-apps/index.md)합니다. <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> 메서드는 지정된 된 언어 이름에 대 한 각 공급자 구성 요소를 검색 합니다. 반환 된 <xref:System.CodeDom.Compiler.CompilerInfo> 인스턴스 구성 된 언어 공급자 및 컴파일러 설정을 포함 합니다.  
  
 <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> 메서드는 하나 이상의 공급자 구현에서 특정 언어를 지원 하는지 여부를 확인 합니다. 사용 하 여 언어 이름을 확인할 수 있습니다 <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> 전달 하기 전에 <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A>입니다. throw 하는 것이 이렇게를 <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> 액세스 하는 경우는 <xref:System.CodeDom.Compiler.CompilerInfo> 인스턴스는 지원 되지 않는 언어 이름에 대 한 합니다.  
  
 둘 이상의 공급자 구현이 입력된 언어 이름에 대해 구성 된 경우 <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> 구성 요소에서 마지막으로 일치 하는 공급자의 설정을 반환 합니다.  
  
 언어 이름은 대/소문자를 구분 하지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 결정을 <xref:System.CodeDom.Compiler.CodeDomProvider> 언어 공급자에 대 한 구성된 설정 표시 및 입력된 언어에 대 한 구현 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerInfo> 클래스입니다.  
  
 [!code-cpp[CodeDom_CompilerInfo#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#6)]
 [!code-csharp[CodeDom_CompilerInfo#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#6)]
 [!code-vb[CodeDom_CompilerInfo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException"><paramref name="language" /> 는이 컴퓨터에는 구성된 공급자가 없습니다.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><paramref name="language" />이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">직접 실행 호출자에 대 한 완전 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerInfo" />
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md">컴파일러 및 언어 공급자 설정 스키마</related>
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter GetConverter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter GetConverter(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetConverter(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter ^ GetConverter(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member GetConverter : Type -&gt; System.ComponentModel.TypeConverter&#xA;override this.GetConverter : Type -&gt; System.ComponentModel.TypeConverter" Usage="codeDomProvider.GetConverter type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">형식 변환기를 검색할 개체의 형식입니다.</param>
        <summary>가져옵니다는 <see cref="T:System.ComponentModel.TypeConverter" /> 지정된 된 데이터 형식에 대 한 합니다.</summary>
        <returns>A <see cref="T:System.ComponentModel.TypeConverter" /> 지정 된 형식의 또는 <see langword="null" /> 경우는 <see cref="T:System.ComponentModel.TypeConverter" /> 지정된 된 형식을 찾을 수 없습니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생된 클래스는 특정 데이터 형식에 대 한 특정 유형의 형식 변환기를 제공 하려면이 메서드를 재정의할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetLanguageFromExtension">
      <MemberSignature Language="C#" Value="public static string GetLanguageFromExtension (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetLanguageFromExtension(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLanguageFromExtension (extension As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetLanguageFromExtension(System::String ^ extension);" />
      <MemberSignature Language="F#" Value="static member GetLanguageFromExtension : string -&gt; string" Usage="System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension extension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="extension">파일 이름 확장명입니다.</param>
        <summary>에 구성 된 대로 지정 된 파일 이름 확장명과 연결 된 언어 이름을 반환 합니다 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 컴파일러 구성 섹션입니다.</summary>
        <returns>에 구성 된 대로 파일 이름 확장명을 사용 하 여 연결 된 언어 이름을 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 컴파일러 구성 설정입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 [ &lt;system.codedom&gt; 요소](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) 컴퓨터 구성 파일 (Machine.config) 각각에 대 한 언어 공급자 및 컴파일러 구성 설정을 포함 <xref:System.CodeDom.Compiler.CodeDomProvider> 구현에는 컴퓨터입니다. <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> 메서드는 지정 된 파일 이름 확장명에 대 한 각 공급자 구성 요소를 검색 합니다.  
  
 <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> 메서드는 하나 이상의 공급자 구현 특정 파일 이름 확장명을 지원 하는지 여부를 확인 합니다. 사용 하 여 파일 이름 확장명을 확인할 수 있습니다 <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> 전달 하기 전에 <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A>입니다. 그래야 <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> 에서 throw 한 <xref:System.Configuration.ConfigurationException?displayProperty=nameWithType> 는 지원 되지 않는 파일 이름 확장명에 대 한 합니다.  
  
 공급자 구현 입력된 파일 이름 확장명을 지원 하 고 그런 다음 해당 공급자에 대해 구성 된 지원 되는 다국어 경우 <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> 해당 공급자에 대 한 첫 번째 언어 이름을 반환 합니다. 둘 이상의 공급자 구현이 입력된 파일 이름 확장명에 대해 구성 된 경우 <xref:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension%2A> 구성 요소가 마지막으로 일치 하는 공급자에서 언어 이름을 반환 합니다.  
  
 언어 이름 및 파일 이름 확장명은 대/소문자 구분 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 결정 합니다 <xref:System.CodeDom.Compiler.CodeDomProvider> 는 입력된 파일 이름 확장명 및 언어 공급자에 대 한 구성된 설정 표시에 대 한 구현 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerInfo> 클래스입니다.  
  
 [!code-cpp[CodeDom_CompilerInfo#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#5)]
 [!code-csharp[CodeDom_CompilerInfo#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#5)]
 [!code-vb[CodeDom_CompilerInfo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException"><paramref name="extension" /> 는이 컴퓨터에는 구성 된 언어 공급자가 없습니다.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><paramref name="extension" />이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">직접 실행 호출자에 대 한 완전 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)" />
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md">컴파일러 및 언어 공급자 설정 스키마</related>
      </Docs>
    </Member>
    <Member MemberName="GetTypeOutput">
      <MemberSignature Language="C#" Value="public virtual string GetTypeOutput (System.CodeDom.CodeTypeReference type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetTypeOutput(class System.CodeDom.CodeTypeReference type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypeOutput (type As CodeTypeReference) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetTypeOutput(System::CodeDom::CodeTypeReference ^ type);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeOutput : System.CodeDom.CodeTypeReference -&gt; string&#xA;override this.GetTypeOutput : System.CodeDom.CodeTypeReference -&gt; string" Usage="codeDomProvider.GetTypeOutput type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.CodeDom.CodeTypeReference" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><see cref="T:System.CodeDom.CodeTypeReference" /> 반환할 형식을 나타내는입니다.</param>
        <summary>지정 된 표시 형식을 가져옵니다 <see cref="T:System.CodeDom.CodeTypeReference" />합니다.</summary>
        <returns>이 코드 생성기가 코드 생성 되는 언어에 대 한 지정 된 형식의 텍스트 표현 형식입니다. Visual basic의 경우 예를 들어, 전달 된 <see cref="T:System.CodeDom.CodeTypeReference" /> 에 대 한를 <see cref="T:System.Int32" /> 형식 "Integer"가 반환 됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  .NET Framework 버전 1.0 및 1.1에서는이 메서드는에서 제공 합니다 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현에서 반환 되는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 공급자의입니다. 버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다. 코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현이 기본 클래스에 의해 호출 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">이 메서드는 모두 또는 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 파생된 클래스에서 메서드를 재정의 합니다.</exception>
        <block subset="none" type="overrides"><para>이 메서드를 재정의 하는 경우 기본 클래스의 해당 메서드를 호출 하지 해야 합니다. 기본 클래스의 메서드를 사용 하 여 사용 되지 않는 파생된 클래스에서 생성기를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 메서드 코드 생성기를 사용 하는 기존 공급자와의 호환성. 기본 클래스 메서드 다음 해당 하는 메서드를 호출 합니다 <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 구현은이 기능을 수행 합니다. 받을 수는 <see cref="T:System.NotImplementedException" /> 코드 생성기를 사용 하지 않는 코드 공급자의 기본 클래스 메서드를 호출 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="IsDefinedExtension">
      <MemberSignature Language="C#" Value="public static bool IsDefinedExtension (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefinedExtension(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefinedExtension (extension As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefinedExtension(System::String ^ extension);" />
      <MemberSignature Language="F#" Value="static member IsDefinedExtension : string -&gt; bool" Usage="System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension extension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="extension">파일 이름 확장명입니다.</param>
        <summary>파일 이름 확장명에 연결 되어 있는지 여부를 테스트 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 구현이 컴퓨터에 구성 되어 있습니다.</summary>
        <returns><see langword="true" /> 경우는 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 구현 되 고, 그렇지 않으면 지정 된 파일 이름 확장명에 대해 구성 된 <see langword="false" />합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 [ &lt;system.codedom&gt; 요소](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) 컴퓨터 구성 파일 (Machine.config) 각각에 대 한 언어 공급자 및 컴파일러 구성 설정을 포함 <xref:System.CodeDom.Compiler.CodeDomProvider> 구현에는 컴퓨터입니다. <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension%2A> 메서드는 지정 된 파일 이름 확장명의 공급자 구성 요소를 검색 합니다.  
  
 파일 이름 확장명 대/소문자를 구분 하지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제를 결정 합니다 <xref:System.CodeDom.Compiler.CodeDomProvider> 는 입력된 파일 이름 확장명 및 언어 공급자에 대 한 구성된 설정 표시에 대 한 구현 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerInfo> 클래스입니다.  
  
 [!code-cpp[CodeDom_CompilerInfo#5](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#5)]
 [!code-csharp[CodeDom_CompilerInfo#5](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#5)]
 [!code-vb[CodeDom_CompilerInfo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="extension" />이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">직접 실행 호출자에 대 한 완전 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)" />
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md">컴파일러 및 언어 공급자 설정 스키마</related>
      </Docs>
    </Member>
    <Member MemberName="IsDefinedLanguage">
      <MemberSignature Language="C#" Value="public static bool IsDefinedLanguage (string language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefinedLanguage(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefinedLanguage (language As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefinedLanguage(System::String ^ language);" />
      <MemberSignature Language="F#" Value="static member IsDefinedLanguage : string -&gt; bool" Usage="System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="language">언어 이름입니다.</param>
        <summary>언어에 있는지 여부를 테스트 한 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 구현이 컴퓨터에 구성 되어 있습니다.</summary>
        <returns><see langword="true" /> 경우는 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 구현 되 고, 그렇지 않으면 지정된 된 언어에 대해 구성 된 <see langword="false" />합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 [ &lt;system.codedom&gt; 요소](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) 컴퓨터 구성 파일 (Machine.config) 각각에 대 한 언어 공급자 및 컴파일러 구성 설정을 포함 <xref:System.CodeDom.Compiler.CodeDomProvider> 구현에는 컴퓨터입니다. <xref:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage%2A> 메서드는 지정된 된 언어 이름에 대 한 공급자 구성 요소를 검색 합니다.  
  
 언어 이름은 대/소문자를 구분 하지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 결정을 <xref:System.CodeDom.Compiler.CodeDomProvider> 언어 공급자에 대 한 구성된 설정 표시 및 입력된 언어에 대 한 구현 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerInfo> 클래스입니다.  
  
 [!code-cpp[CodeDom_CompilerInfo#6](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#6)]
 [!code-csharp[CodeDom_CompilerInfo#6](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#6)]
 [!code-vb[CodeDom_CompilerInfo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="language" />이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">직접 실행 호출자에 대 한 완전 신뢰 합니다. 이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md">컴파일러 및 언어 공급자 설정 스키마</related>
      </Docs>
    </Member>
    <Member MemberName="IsValidIdentifier">
      <MemberSignature Language="C#" Value="public virtual bool IsValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValidIdentifier (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValidIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IsValidIdentifier : string -&gt; bool&#xA;override this.IsValidIdentifier : string -&gt; bool" Usage="codeDomProvider.IsValidIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value">유효한 식별자 인지 확인할 값입니다.</param>
        <summary>지정된 된 값이 현재 언어에 대 한 유효한 식별자 인지 여부를 나타내는 값을 반환 합니다.</summary>
        <returns><see langword="true" /> 경우는 <paramref name="value" /> 매개 변수는 유효한 식별자가 고, 그렇지 않으면 <see langword="false" />합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 유효한 식별자 인지 테스트 합니다. <xref:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier%2A> 메서드는 공급자 특정 합니다. 하나 이상의 공급자에 대 한 유효한 식별자는 다른 공급자에 대해 유효 하지 않을 수 있습니다. 경우 `value` 문자가 ASCII 문자 범위 외부에서 코드를 컴파일하는 데 사용할 수 있는 모든 언어에 대 한 식별자를 확인 합니다.  
  
> [!NOTE]
>  .NET Framework 버전 1.0 및 1.1에서는이 메서드는에서 제공 합니다 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현에서 반환 되는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 공급자의입니다. 버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다. 코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현이 기본 클래스에 의해 호출 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">이 메서드는 모두 또는 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 파생된 클래스에서 메서드를 재정의 합니다.</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)" /> 파생된 클래스에서 반환할 메서드를 설계 <see langword="true" /> 값을 해당 언어의 규칙에 맞는 키워드와 충돌 하지 않는 하는 경우에 합니다.  
  
이 메서드를 재정의 하는 경우 기본 클래스의 해당 메서드를 호출 하지 해야 합니다. 기본 클래스의 메서드를 사용 하 여 사용 되지 않는 파생된 클래스에서 생성기를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 메서드 코드 생성기를 사용 하는 기존 공급자와의 호환성. 기본 클래스 메서드 다음 해당 하는 메서드를 호출 합니다 <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 구현은이 기능을 수행 합니다. 받을 수는 <see cref="T:System.NotImplementedException" /> 코드 생성기를 사용 하지 않는 코드 공급자의 기본 클래스 메서드를 호출 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="LanguageOptions">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.Compiler.LanguageOptions LanguageOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.CodeDom.Compiler.LanguageOptions LanguageOptions" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CodeDomProvider.LanguageOptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LanguageOptions As LanguageOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::CodeDom::Compiler::LanguageOptions LanguageOptions { System::CodeDom::Compiler::LanguageOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.LanguageOptions : System.CodeDom.Compiler.LanguageOptions" Usage="System.CodeDom.Compiler.CodeDomProvider.LanguageOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.LanguageOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>언어 기능 식별자를 가져옵니다.</summary>
        <value>언어의 특수 기능을 나타내는 <see cref="T:System.CodeDom.Compiler.LanguageOptions" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeCompileUnit Parse (System.IO.TextReader codeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit Parse(class System.IO.TextReader codeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Parse (codeStream As TextReader) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeCompileUnit ^ Parse(System::IO::TextReader ^ codeStream);" />
      <MemberSignature Language="F#" Value="abstract member Parse : System.IO.TextReader -&gt; System.CodeDom.CodeCompileUnit&#xA;override this.Parse : System.IO.TextReader -&gt; System.CodeDom.CodeCompileUnit" Usage="codeDomProvider.Parse codeStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeStream" Type="System.IO.TextReader" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="codeStream"><see cref="T:System.IO.TextReader" /> 구문 분석 될 코드를 읽는 데 사용 되는 개체입니다.</param>
        <summary>에 지정 된 텍스트 스트림에서 읽은 코드를 컴파일하는 <see cref="T:System.CodeDom.CodeCompileUnit" />합니다.</summary>
        <returns><see cref="T:System.CodeDom.CodeCompileUnit" /> 구문 분석 된 코드의 표현을 포함 하는 합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  .NET Framework 버전 1.0 및 1.1에서는이 메서드는에서 제공 합니다 <xref:System.CodeDom.Compiler.ICodeParser> 구현에서 반환 되는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A> 공급자의입니다. 버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다. 코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeParser> 구현이 기본 클래스에 의해 호출 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">이 메서드는 모두 또는 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 파생된 클래스에서 메서드를 재정의 합니다.</exception>
        <block subset="none" type="overrides"><para>이 메서드를 재정의 하는 경우 기본 클래스의 해당 메서드를 호출 하지 해야 합니다. 기본 클래스의 메서드를 사용 하 여 사용 되지 않는 파생된 클래스에서 파서를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser" /> 메서드 코드 파서를 사용 하는 기존 공급자와의 호환성. 기본 클래스 메서드 다음 해당 하는 메서드를 호출 합니다 <see cref="T:System.CodeDom.Compiler.ICodeParser" /> 구현은이 기능을 수행 합니다. 받을 수는 <see cref="T:System.NotImplementedException" /> 코드 파서를 사용 하지 않는 코드 공급자의 기본 클래스 메서드를 호출 합니다.</para></block>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
        <altmember cref="T:System.IO.TextReader" />
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="public virtual bool Supports (System.CodeDom.Compiler.GeneratorSupport generatorSupport);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(valuetype System.CodeDom.Compiler.GeneratorSupport generatorSupport) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::CodeDom::Compiler::GeneratorSupport generatorSupport);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public virtual bool Supports (System.CodeDom.Compiler.GeneratorSupport supports);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(valuetype System.CodeDom.Compiler.GeneratorSupport supports) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Supports (supports As GeneratorSupport) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::CodeDom::Compiler::GeneratorSupport supports);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member Supports : System.CodeDom.Compiler.GeneratorSupport -&gt; bool&#xA;override this.Supports : System.CodeDom.Compiler.GeneratorSupport -&gt; bool" Usage="codeDomProvider.Supports generatorSupport" FrameworkAlternate="netframework-1.1;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Supports (supports As GeneratorSupport) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member Supports : System.CodeDom.Compiler.GeneratorSupport -&gt; bool&#xA;override this.Supports : System.CodeDom.Compiler.GeneratorSupport -&gt; bool" Usage="codeDomProvider.Supports supports" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generatorSupport" Type="System.CodeDom.Compiler.GeneratorSupport" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="supports" Type="System.CodeDom.Compiler.GeneratorSupport" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="generatorSupport"><see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> 확인 코드 생성 지원의 형식을 나타내는 개체입니다.</param>
        <param name="supports">To be added.</param>
        <summary>지정 된 코드 생성을 지원 하는지 여부를 나타내는 값을 반환 제공 됩니다.</summary>
        <returns><see langword="true" /> 지정된 된 코드 생성 지원 제공 됩니다. 그렇지 않으면 <see langword="false" />합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 숫자를 사용 하 여이 메서드를 호출할 수 있습니다 <xref:System.CodeDom.Compiler.GeneratorSupport> 이진 파일을 적절 한 기능 플래그 집합을 조인 하 여 다양 한 기능에 대 한 테스트를 한 번에 플래그 `OR` 연산자 (&#124;).  
  
> [!NOTE]
>  .NET Framework 버전 1.0 및 1.1에서는이 메서드는에서 제공 합니다 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현에서 반환 되는 <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> 공급자의입니다. 버전 2.0에서는 코드 공급자를 재정의 하지 않은 경우에이 메서드를 코드 공급자에서 직접 호출할 수 있습니다. 코드 공급자는이 메서드를 재정의 하지 않는 경우는 <xref:System.CodeDom.Compiler.ICodeGenerator> 구현이 기본 클래스에 의해 호출 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">이 메서드는 모두 또는 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 파생된 클래스에서 메서드를 재정의 합니다.</exception>
        <block subset="none" type="overrides"><para>이 메서드를 재정의 하는 경우 기본 클래스의 해당 메서드를 호출 하지 해야 합니다. 기본 클래스의 메서드를 사용 하 여 사용 되지 않는 파생된 클래스에서 생성기를 만듭니다 <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> 메서드 코드 생성기를 사용 하는 기존 공급자와의 호환성. 기본 클래스 메서드 다음 해당 하는 메서드를 호출 합니다 <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> 구현은이 기능을 수행 합니다. 받을 수는 <see cref="T:System.NotImplementedException" /> 코드 생성기를 사용 하지 않는 코드 공급자의 기본 클래스 메서드를 호출 합니다.</para></block>
        <altmember cref="T:System.CodeDom.Compiler.GeneratorSupport" />
      </Docs>
    </Member>
  </Members>
</Type>