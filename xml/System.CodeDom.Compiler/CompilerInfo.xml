<Type Name="CompilerInfo" FullName="System.CodeDom.Compiler.CompilerInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="81a558a25d42dede14d3990a4e8d9665768aa950" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56781620" /></Metadata><TypeSignature Language="C#" Value="public sealed class CompilerInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CompilerInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.CompilerInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CompilerInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompilerInfo sealed" />
  <TypeSignature Language="F#" Value="type CompilerInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>언어 공급자의 구성 설정을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.CodeDom.Compiler.CompilerInfo> 을 확인 하려면 클래스 하는지 여부를 <xref:System.CodeDom.Compiler.CodeDomProvider> 구현이 컴퓨터에 또는 특정 언어 공급자에 대 한 구성 및 컴파일러 설정을 검사할 구성 되어 합니다.  
  
 합니다 [ &lt;system.codedom&gt; 요소](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) 컴퓨터 구성에서 파일에 언어 공급자 및 컴파일러 구성 설정을 포함 합니다. 각 언어 구성된 공급자가 해당 컴파일러 구성 요소입니다. 각 요소를 정의 합니다 <xref:System.CodeDom.Compiler.CodeDomProvider> 구현 형식, 지원 되는 언어 이름, 지원 되는 파일 이름 확장명 및 컴파일러 매개 변수입니다.  
  
 .NET Framework 컴퓨터 구성 파일의 초기 컴파일러 설정을 정의합니다. 개발자 및 컴파일러 공급업체는 새로운 <xref:System.CodeDom.Compiler.CodeDomProvider> 구현에 대한 구성 설정을 추가할 수 있습니다.  
  
 <xref:System.CodeDom.Compiler.CompilerInfo> 클래스는 컴퓨터 구성 파일에서 이러한 설정에 읽기 전용 액세스를 제공 합니다. 사용 된 <xref:System.CodeDom.Compiler.CompilerInfo.GetLanguages%2A>, <xref:System.CodeDom.Compiler.CompilerInfo.GetExtensions%2A>, 및 <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> 언어 공급자에 대 한 해당 구성 특성을 검사 하는 멤버입니다. 사용 된 <xref:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters%2A> 언어 공급자에 대 한 컴파일러 옵션 및 경고 수준 특성 값을 가져오는 방법입니다.  
  
 구성 파일에서 언어 공급자 설정에 대 한 자세한 내용은 참조 하세요. [컴파일러 및 언어 공급자 설정 스키마](~/docs/framework/configure-apps/file-schema/compiler/index.md)합니다.  
  
> [!NOTE]
>  이 클래스는 모든 멤버에 적용 되는 클래스 수준에서 링크 요청을 포함 합니다. <xref:System.Security.SecurityException> 직접 실행 호출자에 full trust 권한이 없는 경우 throw 됩니다. 링크 요청에 대 한 자세한 내용은 참조 하세요 [링크 요구가](~/docs/framework/misc/link-demands.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 언어 공급자 구성 설정을 표시합니다. 명령줄 인수를 사용 하 여 언어, 파일 이름 확장명 또는 공급자 형식을 지정 합니다. 지정된 된 입력에 대 한 예제는 해당 언어 공급자를 확인 하 고 구성 된 언어 컴파일러 설정을 표시 합니다.  
  
 [!code-cpp[CodeDom_CompilerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#1)]
 [!code-csharp[CodeDom_CompilerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#1)]
 [!code-vb[CodeDom_CompilerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">형식의 멤버를 호출에 대 한 <see cref="T:System.CodeDom.Compiler.CompilerInfo" />합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: 명명 된 권한 집합](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />합니다.</permission>
    <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
    <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
    <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md">컴파일러 및 언어 공급자 설정 스키마</related>
  </Docs>
  <Members>
    <Member MemberName="CodeDomProviderType">
      <MemberSignature Language="C#" Value="public Type CodeDomProviderType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type CodeDomProviderType" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeDomProviderType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ CodeDomProviderType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeDomProviderType : Type" Usage="System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>구성된 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 구현의 형식을 가져옵니다.</summary>
        <value>구성된 언어 공급자 형식을 나타내는 읽기 전용 <see cref="T:System.Type" /> 인스턴스입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컴퓨터 구성 파일 각각에 대 한 정규화 된 형식 이름을 포함 <xref:System.CodeDom.Compiler.CodeDomProvider> 컴퓨터의 구현입니다. 합니다 <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> 속성 값이는 <xref:System.Type> 언어 구성된 공급자 구현을 나타내는 인스턴스.  
  
   
  
## Examples  
 다음 코드 예제에서는 입력된 언어에 구성 되어 있는지 여부를 결정 <xref:System.CodeDom.Compiler.CodeDomProvider> 컴퓨터의 구현입니다. 지정된 된 언어에 대해 구성 된 공급자의 경우 언어 공급자 구성 설정을 표시 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerInfo> 클래스입니다.  
  
 [!code-cpp[CodeDom_CompilerInfo#7](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#7)]
 [!code-csharp[CodeDom_CompilerInfo#7](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#7)]
 [!code-vb[CodeDom_CompilerInfo#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException">언어 공급자가 이 컴퓨터에 구성되어 있지 않은 경우</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><see langword="null" />이거나 빈 문자열이기 때문에 형식을 찾을 수 있습니다.  
  
또는 
구성 파일에서 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />의 이름을 찾을 수 없기 때문에 형식을 찾을 수 없습니다.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">형식의 멤버를 호출에 대 한 <see cref="T:System.CodeDom.Compiler.CompilerInfo" />합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 연결 된 <see cref="T:System.Security.Permissions.PermissionState" /> 열거형 값: <see langword="Unrestricted" />합니다.</permission>
        <altmember cref="P:System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultCompilerParameters">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CompilerParameters CreateDefaultCompilerParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.Compiler.CompilerParameters CreateDefaultCompilerParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDefaultCompilerParameters () As CompilerParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::Compiler::CompilerParameters ^ CreateDefaultCompilerParameters();" />
      <MemberSignature Language="F#" Value="member this.CreateDefaultCompilerParameters : unit -&gt; System.CodeDom.Compiler.CompilerParameters" Usage="compilerInfo.CreateDefaultCompilerParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerParameters</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>언어 공급자 구현에 대해 구성된 컴파일러 설정을 가져옵니다.</summary>
        <returns>언어 공급자에 대해 구성된 컴파일러 옵션 및 설정을 포함하는 읽기 전용 <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters%2A> 의 컴파일러 설정을 확인 하는 방법 합니다 <xref:System.CodeDom.Compiler.CompilerInfo> 반환한 인스턴스를 <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=nameWithType> 및 <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=nameWithType> 메서드.  
  
 합니다 [ &lt;system.codedom&gt; 요소](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) 컴퓨터 구성 파일 각각에 대 한 언어 공급자 및 컴파일러 구성 설정을 포함 <xref:System.CodeDom.Compiler.CodeDomProvider> 컴퓨터의 구현입니다. 각 언어 공급자 구성 요소는 선택적 포함 될 수 있습니다 `compilerOptions` 고 `warningLevel` 특성입니다. 이러한 특성에 대 한 기본값을 정의 합니다 <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A?displayProperty=nameWithType> 고 <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A?displayProperty=nameWithType> 속성입니다.  
  
 언어 공급자 구성 요소를 정의 하지 않으면 합니다 `compilerOptions` 특성을 <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A?displayProperty=nameWithType> 속성 값이 빈 문자열 (""). 언어 공급자 구성 요소를 정의 하지 않으면 합니다 `warningLevel` 특성을 <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A?displayProperty=nameWithType> 속성 값이-1입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 입력된 언어에 구성 되어 있는지 여부를 결정 <xref:System.CodeDom.Compiler.CodeDomProvider> 컴퓨터의 구현입니다. 지정된 된 언어에 대해 구성 된 공급자의 경우 언어 공급자 구성 설정을 표시 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerInfo> 클래스입니다.  
  
 [!code-cpp[CodeDom_CompilerInfo#7](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#7)]
 [!code-csharp[CodeDom_CompilerInfo#7](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#7)]
 [!code-vb[CodeDom_CompilerInfo#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">형식의 멤버를 호출에 대 한 <see cref="T:System.CodeDom.Compiler.CompilerInfo" />합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 연결 된 <see cref="T:System.Security.Permissions.PermissionState" /> 열거형 값: <see langword="Unrestricted" />; [NIB: 명명 된 권한 집합](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />합니다.</permission>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md">컴파일러 및 언어 공급자 설정 스키마</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProvider">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>현재 언어 공급자 설정에 대한 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 인스턴스를 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CreateProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.Compiler.CodeDomProvider CreateProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.CreateProvider" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProvider () As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider();" />
      <MemberSignature Language="F#" Value="member this.CreateProvider : unit -&gt; System.CodeDom.Compiler.CodeDomProvider" Usage="compilerInfo.CreateProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 언어 공급자 설정에 대한 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 인스턴스를 반환합니다.</summary>
        <returns>언어 공급자 구성과 연결된 CodeDOM 공급자입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%2A> 메서드가 반환 되는 <xref:System.CodeDom.Compiler.CodeDomProvider> 현재 언어 공급자 설정에 대 한 인스턴스.  
  
 사용 하 여 합니다 <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%2A> 메서드를를 <xref:System.CodeDom.Compiler.CodeDomProvider> 에 대 한 구현을 <xref:System.CodeDom.Compiler.CompilerInfo> 에서 반환한 인스턴스를 <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=nameWithType> 또는 <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=nameWithType> 메서드.  
  
   
  
## Examples  
 다음 코드 예제는 컴퓨터의 언어 공급자를 열거 하 고 각 언어 공급자에 대 한 구성 및 컴파일러 설정을 표시 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerInfo> 클래스입니다.  
  
 [!code-cpp[CodeDom_CompilerInfo#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#8)]
 [!code-csharp[CodeDom_CompilerInfo#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#8)]
 [!code-vb[CodeDom_CompilerInfo#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">형식의 멤버를 호출에 대 한 <see cref="T:System.CodeDom.Compiler.CompilerInfo" />합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 연결 된 <see cref="T:System.Security.Permissions.PermissionState" /> 열거형 값: <see langword="Unrestricted" />합니다.</permission>
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md">컴파일러 및 언어 공급자 설정 스키마</related>
      </Docs>
    </Member>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CreateProvider (System.Collections.Generic.IDictionary&lt;string,string&gt; providerOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.Compiler.CodeDomProvider CreateProvider(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; providerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.CreateProvider(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProvider (providerOptions As IDictionary(Of String, String)) As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ providerOptions);" />
      <MemberSignature Language="F#" Value="member this.CreateProvider : System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; System.CodeDom.Compiler.CodeDomProvider" Usage="compilerInfo.CreateProvider providerOptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerOptions" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="providerOptions">구성 파일의 공급자 옵션 컬렉션입니다.</param>
        <summary>현재 언어 공급자 설정과 지정된 옵션에 대한 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 인스턴스를 반환합니다.</summary>
        <returns>언어 공급자 구성과 지정된 옵션에 연결된 CodeDOM 공급자입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> 메서드가 반환 되는 <xref:System.CodeDom.Compiler.CodeDomProvider> 현재 언어 공급자 설정과 지정된 된 공급자 옵션에 대 한 인스턴스. 지원 되는 공급자 옵션에 대 한 내용은 특정 CodeDOM 공급자 설명서를 참조 하세요.  
  
 사용 하 여 합니다 <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> 메서드를를 <xref:System.CodeDom.Compiler.CodeDomProvider> 에 대 한 구현을 <xref:System.CodeDom.Compiler.CompilerInfo> 에서 반환한 인스턴스를 <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=nameWithType> 또는 <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=nameWithType> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="providerOptions" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.InvalidOperationException">공급자가 ISourcesRowset 옵션을 지원하지 않는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="compilerInfo.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">현재 <see cref="T:System.CodeDom.Compiler.CompilerInfo" />와 비교할 개체입니다.</param>
        <summary>지정된 개체가 현재 <see cref="T:System.CodeDom.Compiler.CompilerInfo" />와 같은 언어 공급자 및 컴파일러 설정을 나타내는지 여부를 확인합니다.</summary>
        <returns><paramref name="o" />가 <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> 개체이고 값이 이 인스턴스의 값과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 재정의 합니다 <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> 메서드.  
  
 다음 속성의 값이 같으면 두 인스턴스가 간주 됩니다.  
  
-   <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> 속성  
  
-   <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A>, <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A>, 및 <xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A> 의 속성을 <xref:System.CodeDom.Compiler.CompilerParameters> 에서 반환한 인스턴스를 <xref:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">형식의 멤버를 호출에 대 한 <see cref="T:System.CodeDom.Compiler.CompilerInfo" />합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 연결 된 <see cref="T:System.Security.Permissions.PermissionState" /> 열거형 값: <see langword="Unrestricted" />; [NIB: 명명 된 권한 집합](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />합니다.</permission>
        <altmember cref="M:System.Object.Equals(System.Object)" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
      </Docs>
    </Member>
    <Member MemberName="GetExtensions">
      <MemberSignature Language="C#" Value="public string[] GetExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.GetExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExtensions () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetExtensions();" />
      <MemberSignature Language="F#" Value="member this.GetExtensions : unit -&gt; string[]" Usage="compilerInfo.GetExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>언어 공급자에서 지원하는 파일 이름 확장명을 반환합니다.</summary>
        <returns>언어 공급자에서 지원하는 파일 이름 확장명의 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 [ &lt;system.codedom&gt; 요소](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) 컴퓨터 구성 파일 각각에 대 한 언어 공급자 및 컴파일러 구성 설정을 포함 <xref:System.CodeDom.Compiler.CodeDomProvider> 컴퓨터의 구현입니다. 각 언어 구성된 공급자는 하나 이상의 파일 이름 확장명을 지원합니다. 예를 들어, 한 <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> 파일 이름 확장명 ".cs" 및 ".c #"를 지원할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제는 컴퓨터의 언어 공급자를 열거 하 고 각 언어 공급자에 대 한 구성 및 컴파일러 설정을 표시 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerInfo> 클래스입니다.  
  
 [!code-cpp[CodeDom_CompilerInfo#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#8)]
 [!code-csharp[CodeDom_CompilerInfo#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#8)]
 [!code-vb[CodeDom_CompilerInfo#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">형식의 멤버를 호출에 대 한 <see cref="T:System.CodeDom.Compiler.CompilerInfo" />합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 연결 된 <see cref="T:System.Security.Permissions.PermissionState" /> 열거형 값: <see langword="Unrestricted" />; [NIB: 명명 된 권한 집합](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />합니다.</permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md">컴파일러 및 언어 공급자 설정 스키마</related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="compilerInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 인스턴스의 해시 코드를 반환합니다.</summary>
        <returns>현재 <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> 인스턴스에 대한 부호 있는 32비트 정수 해시 코드입니다. 이 값은 해시 알고리즘 및 해시 테이블과 같은 데이터 구조에 사용하는 것이 좋습니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 재정의 합니다 <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> 메서드.  
  
 이 메서드는 <xref:System.CodeDom.Compiler.CompilerInfo.Equals%2A> 메서드에 따라 동일한 두 개체에 대해 같은 해시 코드를 생성합니다.  
  
   
  
## Examples  
 인스턴스를 만들고 다음 코드 예제는 <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType> 클래스입니다. 이 예제에서는 공급자 이름, 해시 코드 및 새 공급자 인스턴스에 대 한 기본 파일 이름 확장명을 표시합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerInfo> 클래스입니다.  
  
 [!code-cpp[CodeDom_CompilerInfo#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#3)]
 [!code-csharp[CodeDom_CompilerInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#3)]
 [!code-vb[CodeDom_CompilerInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">형식의 멤버를 호출에 대 한 <see cref="T:System.CodeDom.Compiler.CompilerInfo" />합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 연결 된 <see cref="T:System.Security.Permissions.PermissionState" /> 열거형 값: <see langword="Unrestricted" />; [NIB: 명명 된 권한 집합](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />합니다.</permission>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.CodeDom.Compiler.CompilerInfo.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetLanguages">
      <MemberSignature Language="C#" Value="public string[] GetLanguages ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetLanguages() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.GetLanguages" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLanguages () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetLanguages();" />
      <MemberSignature Language="F#" Value="member this.GetLanguages : unit -&gt; string[]" Usage="compilerInfo.GetLanguages " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>언어 공급자에서 지원하는 언어 이름을 가져옵니다.</summary>
        <returns>언어 공급자에서 지원하는 언어 이름의 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 [ &lt;system.codedom&gt; 요소](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) 컴퓨터 구성 파일 각각에 대 한 언어 공급자 및 컴파일러 구성 설정을 포함 <xref:System.CodeDom.Compiler.CodeDomProvider> 컴퓨터의 구현입니다. 각 언어 구성된 공급자는 하나 이상의 언어 이름을 지원합니다. 예를 들어 합니다 <xref:System.CodeDom.Compiler.CompilerInfo> 개체에 대 한는 <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> 언어 이름을 "C#", "cs" 및 "csharp"를 사용 하 여 배열을 반환할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제는 컴퓨터의 언어 공급자를 열거 하 고 각 언어 공급자에 대 한 구성 및 컴파일러 설정을 표시 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerInfo> 클래스입니다.  
  
 [!code-cpp[CodeDom_CompilerInfo#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#8)]
 [!code-csharp[CodeDom_CompilerInfo#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#8)]
 [!code-vb[CodeDom_CompilerInfo#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">형식의 멤버를 호출에 대 한 <see cref="T:System.CodeDom.Compiler.CompilerInfo" />합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 연결 된 <see cref="T:System.Security.Permissions.PermissionState" /> 열거형 값: <see langword="Unrestricted" />; [NIB: 명명 된 권한 집합](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />합니다.</permission>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md">컴파일러 및 언어 공급자 설정 스키마</related>
      </Docs>
    </Member>
    <Member MemberName="IsCodeDomProviderTypeValid">
      <MemberSignature Language="C#" Value="public bool IsCodeDomProviderTypeValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCodeDomProviderTypeValid" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCodeDomProviderTypeValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCodeDomProviderTypeValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCodeDomProviderTypeValid : bool" Usage="System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>언어 공급자 구현이 컴퓨터에 구성되어 있는지 여부를 나타내는 값을 반환합니다.</summary>
        <value>언어 공급자 구현 형식이 컴퓨터에 구성되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid%2A> 확인할 속성은 <xref:System.CodeDom.Compiler.CodeDomProvider> 공급자 속성 또는 메서드에 액세스 하기 전에 구현 합니다. 예를 들어 가져온 후 언어 공급자 설정에서는 <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> 메서드를 사용 하 여는 <xref:System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid%2A> ; 속성을 호출 하기 전에 공급자 형식 구현을 확인 합니다 <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%2A> 메서드 또는 사용 하 여는 <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> 속성.  
  
   
  
## Examples  
 다음 코드 예제에서는 입력된 언어에 구성 되어 있는지 여부를 결정 <xref:System.CodeDom.Compiler.CodeDomProvider> 컴퓨터의 구현입니다. 지정된 된 언어에 대해 구성 된 공급자의 경우 언어 공급자 구성 설정을 표시 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.CodeDom.Compiler.CompilerInfo> 클래스입니다.  
  
 [!code-cpp[CodeDom_CompilerInfo#7](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#7)]
 [!code-csharp[CodeDom_CompilerInfo#7](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#7)]
 [!code-vb[CodeDom_CompilerInfo#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">형식의 멤버를 호출에 대 한 <see cref="T:System.CodeDom.Compiler.CompilerInfo" />합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 연결 된 <see cref="T:System.Security.Permissions.PermissionState" /> 열거형 값: <see langword="Unrestricted" />; [NIB: 명명 된 권한 집합](https://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />합니다.</permission>
        <altmember cref="P:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
      </Docs>
    </Member>
  </Members>
</Type>