<Type Name="IComparer&lt;T&gt;" FullName="System.Collections.Generic.IComparer&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e0ced18ddb2a0f8fe1975c169e200798d67f3df6" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58737267" /></Metadata><TypeSignature Language="C#" Value="public interface IComparer&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparer`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparer(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IComparer" />
  <TypeSignature Language="F#" Value="type IComparer&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">비교할 개체의 형식입니다.</typeparam>
    <summary>형식에서 두 개체를 비교하기 위해 구현하는 메서드를 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 인터페이스를 사용 하 여 사용 합니다 <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType> 고 <xref:System.Collections.Generic.List%601.BinarySearch%2A?displayProperty=nameWithType> 메서드. 컬렉션의 정렬 순서를 사용자 지정 하는 방법을 제공 합니다. 이 인터페이스를 구현 하는 클래스를 포함 합니다 <xref:System.Collections.Generic.SortedDictionary%602> 고 <xref:System.Collections.Generic.SortedList%602> 제네릭 클래스입니다.  
  
 이 인터페이스의 기본 구현은 <xref:System.Collections.Generic.Comparer%601> 클래스입니다. 합니다 <xref:System.StringComparer> 형식에 대 한이 인터페이스를 구현 하는 클래스 <xref:System.String>합니다.  
  
 이 인터페이스는 순서 비교를 지원 합니다. 즉,는 <xref:System.Collections.Generic.Comparer%601.Compare%2A> 0을 반환 하는 메서드, 즉, 두 개체가 동일한 정렬 되는지 합니다. 같음 비교에서 구현 되는 <xref:System.Collections.Generic.IEqualityComparer%601> 제네릭 인터페이스입니다.  
  
 파생 되는 것이 좋습니다는 <xref:System.Collections.Generic.Comparer%601> 구현 하는 대신 클래스는 <xref:System.Collections.Generic.IComparer%601> 인터페이스를 <xref:System.Collections.Generic.Comparer%601> 클래스의 명시적 인터페이스 구현을 제공 합니다 <xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A> 메서드 및 <xref:System.Collections.Generic.Comparer%601.Default%2A> 속성은 개체에 대 한 기본 비교자를 가져옵니다.  
  
   
  
## Examples  
 다음 예에서는 구현 하는 <xref:System.Collections.Generic.IComparer%601> 형식의 개체를 비교 하는 인터페이스 `Box` 해당 차원에 따라 합니다. 이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Collections.Generic.Comparer%601> 클래스입니다.  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#7)]
 [!code-vb[System.Collections.Generic.BoxCompare#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#7)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.Comparer`1" />
    <altmember cref="N:System.Collections" />
    <altmember cref="P:System.Threading.Thread.CurrentCulture" />
    <altmember cref="T:System.Globalization.CompareInfo" />
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
  </Docs>
  <Members>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IComparer`1.Compare(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (x As T, y As T) As Integer" />
      <MemberSignature Language="F#" Value="abstract member Compare : 'T * 'T -&gt; int" Usage="iComparer.Compare (x, y)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Compare(T x, T y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x">비교할 첫 번째 개체입니다.</param>
        <param name="y">비교할 두 번째 개체입니다.</param>
        <summary>두 개체를 비교하여 한 개체가 다른 개체보다 작거나, 같거나 또는 크다는 것을 나타내는 값을 반환합니다.</summary>
        <returns>다음 표와 같이 <paramref name="x" /> 및 <paramref name="y" />의 상대 값을 나타내는 부호 있는 정수입니다.  
  
 <list type="table"><listheader><term> 값 
 </term><description> 의미 
 </description></listheader><item><term> 0보다 작음 
 </term><description><paramref name="x" />가 <paramref name="y" />보다 작은 경우  
  
 </description></item><item><term> 0 
 </term><description><paramref name="x" />가 <paramref name="y" />와 같습니다.  
  
 </description></item><item><term> 0보다 큼 
 </term><description><paramref name="x" />가 <paramref name="y" />보다 큰 경우  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자 지정을 제공 하려면이 메서드를 구현 합니다. 정렬 순서 비교 형식에 대 한 `T`합니다.  
  
 비교 `null` 모든 참조를 사용 하 여 허용 되는 형식과 예외가 생성 되지 않습니다. Null 참조는 null이 아닌 보다 작은 참조로 간주 됩니다.  
  
   
  
## Examples  
 다음 예에서는 구현 하는 <xref:System.Collections.Generic.IComparer%601> 형식의 개체를 비교 하는 인터페이스 `Box` 해당 차원에 따라 합니다. 이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Collections.Generic.Comparer%601> 클래스입니다.  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#7)]
 [!code-vb[System.Collections.Generic.BoxCompare#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CompareInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>