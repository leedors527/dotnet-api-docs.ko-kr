<Type Name="CollectionsUtil" FullName="System.Collections.Specialized.CollectionsUtil">
  <Metadata><Meta Name="ms.openlocfilehash" Value="434f562de074800b3f9001edd503db3741baeb6c" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58687088" /></Metadata><TypeSignature Language="C#" Value="public class CollectionsUtil" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CollectionsUtil extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Specialized.CollectionsUtil" />
  <TypeSignature Language="VB.NET" Value="Public Class CollectionsUtil" />
  <TypeSignature Language="C++ CLI" Value="public ref class CollectionsUtil" />
  <TypeSignature Language="F#" Value="type CollectionsUtil = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>문자열의 대/소문자를 무시하는 컬렉션을 만듭니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이러한 메서드는 대/소문자 구현의 해시 코드 공급자와 비교자를 사용 하 여 컬렉션의 대/소문자 인스턴스를 생성 합니다. 다르게 동작할 수 있습니다 하지만 결과 인스턴스를 해당 클래스의 모든 다른 인스턴스와 마찬가지로 사용할 수 있습니다.  
  
 예를 들어, "hello" 키를 사용 하 여 두 개체를 가정 되며 "HELLO" 해시 테이블을 추가할 수 있습니다. 두 개의 다른 항목; 대/소문자 구분 해시 테이블을 만듭니다. 반면, 대/소문자 해시 테이블을 두 번째 개체를 추가 하는 경우 예외가 throw 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 도시 그룹에 대 한 인구 값을 저장 해시 테이블과 정렬 된 목록을 두 개의 컬렉션을 사용 합니다. 값은 도시 이름을 키로 사용 하 여 컬렉션에서 검색 됩니다. 도시 이름은 대/소문자가 사용 하 여 대/소문자 키로 표시에 있습니다.  
  
 [!code-cpp[System.Collections.Specialized.CollectionsUtil#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.collections.specialized.collectionsutil/cpp/source.cpp#1)]
 [!code-csharp[System.Collections.Specialized.CollectionsUtil#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.specialized.collectionsutil/cs/source.cs#1)]
 [!code-vb[System.Collections.Specialized.CollectionsUtil#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.specialized.collectionsutil/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><see cref="T:System.Collections.Hashtable" /> 동시 지원할 수 있습니다 하나 기록기 및 다중 판독기입니다. 여러 기록기를 지원 하려면 모든 작업에서 반환 되는 래퍼를 통해 수행 해야 합니다는 <see cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" /> 메서드.  
  
<see cref="T:System.Collections.SortedList" /> 지원할 수 있습니다 여러 판독기 동시에 따라 컬렉션을 수정 되지 않습니다. 스레드로부터 안전을 보장 하려면 합니다 <see cref="T:System.Collections.SortedList" />에서 반환 되는 래퍼를 통해 모든 작업을 완료 해야 합니다 <see cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" /> 메서드.  
  
컬렉션을 열거 되지 본질적으로 스레드로부터 안전한 프로시저가 있습니다. 컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다. 열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</threadsafe>
    <altmember cref="N:System.Collections" />
    <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">컬렉션에서 Culture를 구분하지 않는 문자열 작업 수행</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CollectionsUtil ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.CollectionsUtil.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CollectionsUtil();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Collections.Specialized.CollectionsUtil" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateCaseInsensitiveHashtable">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>문자열의 대/소문자를 구분하지 않는 <see cref="T:System.Collections.Hashtable" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateCaseInsensitiveHashtable">
      <MemberSignature Language="C#" Value="public static System.Collections.Hashtable CreateCaseInsensitiveHashtable ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Hashtable CreateCaseInsensitiveHashtable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCaseInsensitiveHashtable () As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Hashtable ^ CreateCaseInsensitiveHashtable();" />
      <MemberSignature Language="F#" Value="static member CreateCaseInsensitiveHashtable : unit -&gt; System.Collections.Hashtable" Usage="System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>기본 초기 용량을 갖는 <see cref="T:System.Collections.Hashtable" /> 클래스의 대/소문자를 구분하지 않는 새 인스턴스를 만듭니다.</summary>
        <returns>기본 초기 용량을 갖는 <see cref="T:System.Collections.Hashtable" /> 클래스의 대/소문자를 구분하지 않는 새 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하는 대신 합니다 <xref:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable%2A> 메서드를 사용 하 여는 <xref:System.Collections.Hashtable.%23ctor%28System.Collections.IEqualityComparer%29?displayProperty=nameWithType> 생성자는 대/소문자를 만들려면 <xref:System.Collections.Hashtable> 클래스.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">컬렉션에서 Culture를 구분하지 않는 문자열 작업 수행</related>
      </Docs>
    </Member>
    <Member MemberName="CreateCaseInsensitiveHashtable">
      <MemberSignature Language="C#" Value="public static System.Collections.Hashtable CreateCaseInsensitiveHashtable (System.Collections.IDictionary d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Hashtable CreateCaseInsensitiveHashtable(class System.Collections.IDictionary d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCaseInsensitiveHashtable (d As IDictionary) As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Hashtable ^ CreateCaseInsensitiveHashtable(System::Collections::IDictionary ^ d);" />
      <MemberSignature Language="F#" Value="static member CreateCaseInsensitiveHashtable : System.Collections.IDictionary -&gt; System.Collections.Hashtable" Usage="System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="d">대/소문자를 구분하지 않는 새 <see cref="T:System.Collections.IDictionary" />로 복사할 <see cref="T:System.Collections.Hashtable" />입니다.</param>
        <summary>지정된 사전의 항목을 복사된 항목의 수와 초기 용량이 같은 <see cref="T:System.Collections.Hashtable" /> 클래스의 대/소문자를 구분하지 않는 새 인스턴스로 복사합니다.</summary>
        <returns>지정된 <see cref="T:System.Collections.Hashtable" />의 항목을 포함하는 <see cref="T:System.Collections.IDictionary" /> 클래스의 대/소문자를 구분하지 않는 새 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하는 대신 합니다 <xref:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable%2A> 메서드를 사용 하 여는 <xref:System.Collections.Hashtable.%23ctor%28System.Collections.IDictionary%2CSystem.Collections.IEqualityComparer%29?displayProperty=nameWithType> 생성자는 대/소문자를 만들려면 <xref:System.Collections.Hashtable> 클래스.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="d" />가 <see langword="null" />입니다.</exception>
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">컬렉션에서 Culture를 구분하지 않는 문자열 작업 수행</related>
      </Docs>
    </Member>
    <Member MemberName="CreateCaseInsensitiveHashtable">
      <MemberSignature Language="C#" Value="public static System.Collections.Hashtable CreateCaseInsensitiveHashtable (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Hashtable CreateCaseInsensitiveHashtable(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCaseInsensitiveHashtable (capacity As Integer) As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Hashtable ^ CreateCaseInsensitiveHashtable(int capacity);" />
      <MemberSignature Language="F#" Value="static member CreateCaseInsensitiveHashtable : int -&gt; System.Collections.Hashtable" Usage="System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable capacity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><see cref="T:System.Collections.Hashtable" />가 처음에 포함할 수 있는 대략적인 엔트리 수입니다.</param>
        <summary>초기 용량이 지정된 <see cref="T:System.Collections.Hashtable" /> 클래스의 대/소문자를 구분하지 않는 새 인스턴스를 만듭니다.</summary>
        <returns>초기 용량이 지정된 <see cref="T:System.Collections.Hashtable" /> 클래스의 대/소문자를 구분하지 않는 새 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하는 대신 합니다 <xref:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable%2A> 메서드를 사용 하 여는 <xref:System.Collections.Hashtable.%23ctor%28System.Int32%2CSystem.Collections.IEqualityComparer%29?displayProperty=nameWithType> 생성자는 대/소문자를 만들려면 <xref:System.Collections.Hashtable> 클래스.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity" />가 0보다 작은 경우</exception>
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">컬렉션에서 Culture를 구분하지 않는 문자열 작업 수행</related>
      </Docs>
    </Member>
    <Member MemberName="CreateCaseInsensitiveSortedList">
      <MemberSignature Language="C#" Value="public static System.Collections.SortedList CreateCaseInsensitiveSortedList ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.SortedList CreateCaseInsensitiveSortedList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveSortedList" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCaseInsensitiveSortedList () As SortedList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::SortedList ^ CreateCaseInsensitiveSortedList();" />
      <MemberSignature Language="F#" Value="static member CreateCaseInsensitiveSortedList : unit -&gt; System.Collections.SortedList" Usage="System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveSortedList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.SortedList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>문자열의 대/소문자를 구분하지 않는 <see cref="T:System.Collections.SortedList" /> 클래스의 새 인스턴스를 만듭니다.</summary>
        <returns>문자열의 대/소문자를 구분하지 않는 <see cref="T:System.Collections.SortedList" /> 클래스의 새 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 <xref:System.Collections.SortedList> 에 따라 인스턴스가 정렬 되는 <xref:System.Collections.CaseInsensitiveComparer>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.SortedList" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">컬렉션에서 Culture를 구분하지 않는 문자열 작업 수행</related>
      </Docs>
    </Member>
  </Members>
</Type>