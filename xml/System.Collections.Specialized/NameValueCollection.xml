<Type Name="NameValueCollection" FullName="System.Collections.Specialized.NameValueCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="45df137a00c371aeb7c082552dfd137d69d1be28" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58685478" /></Metadata><TypeSignature Language="C#" Value="public class NameValueCollection : System.Collections.Specialized.NameObjectCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit NameValueCollection extends System.Collections.Specialized.NameObjectCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Specialized.NameValueCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class NameValueCollection&#xA;Inherits NameObjectCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class NameValueCollection : System::Collections::Specialized::NameObjectCollectionBase" />
  <TypeSignature Language="F#" Value="type NameValueCollection = class&#xA;    inherit NameObjectCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Specialized</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.Specialized.NameObjectCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>키나 인덱스를 사용하여 액세스할 수 있는 연결된 <see cref="T:System.String" /> 키와 <see cref="T:System.String" /> 값의 컬렉션을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

 이 컬렉션이 기반을 <xref:System.Collections.Specialized.NameObjectCollectionBase> 클래스입니다. 컬렉션의 각 요소에는 키/값 쌍입니다. 그러나 달리는 <xref:System.Collections.Specialized.NameObjectCollectionBase>,이 클래스는 단일 키 아래에 있는 여러 문자열 값을 저장할 수 있습니다.  
  
 이 클래스는 양식 데이터, 헤더 및 쿼리 문자열에 사용할 수 있습니다.  
  
 이 형식의 컬렉션 요소의 순서를 유지 하지 않습니다 하 고 컬렉션을 열거 하는 경우 특정 순서가 보장 됩니다.  
  
 용량을 <xref:System.Collections.Specialized.NameValueCollection> 요소입니다는 <xref:System.Collections.Specialized.NameValueCollection> 보유할 수 있습니다. 요소가 추가 되 면 자동으로 해당 용량 증가 하면 재할당을 통해 필요에 따라 합니다.  
  
 키에 대 한 해시 코드를 분배 하는 해시 코드 공급자는 <xref:System.Collections.Specialized.NameValueCollection>합니다. 기본 해시 코드 공급자는 <xref:System.Collections.CaseInsensitiveHashCodeProvider>합니다.  
  
 두 키가 같은지 여부를 결정 하는 비교자입니다. 기본 비교자는를 <xref:System.Collections.CaseInsensitiveComparer> 의 규칙을 사용 하는 [고정 문화권](xref:System.Globalization.CultureInfo.InvariantCulture); 키 비교는 기본적으로 대/소문자, 합니다. 키 대/소문자 구분 비교를 수행 하려면 호출을 <xref:System.Collections.Specialized.NameValueCollection.%23ctor(System.Collections.IEqualityComparer)?displayProperty=nameWithType> 생성자의 값을 제공 <xref:System.StringComparer.CurrentCulture?displayProperty=nameWithType>, <xref:System.StringComparer.InvariantCulture?displayProperty=nameWithType>, 또는 <xref:System.StringComparer.Ordinal?displayProperty=nameWithType> 으로 `equalityComparer` 인수입니다. 문화권 비교 및 정렬에 미치는 영향에 대 한 자세한 내용은 참조 하세요. [문화권 구분 문자열 작업 수행](~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md)합니다. 

 `null` 키 또는 값으로 허용 됩니다.  
  
> [!CAUTION]
>  합니다 <xref:System.Collections.Specialized.NameValueCollection.Get%2A> 메서드를 구분 하지 않습니다 `null` 지정된 된 키를 찾을 수 없으므로 반환 되는 및 `null` 키를 사용 하 여 연결 된 값 이므로 반환 되는 `null`합니다.  
  
   
  
## Examples  
 [!code-cpp[System.Collections.Specialized.NameValueCollection2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameValueCollection2/CPP/nvc.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameValueCollection2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameValueCollection2/CS/nvc.cs#1)]
 [!code-vb[System.Collections.Specialized.NameValueCollection2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameValueCollection2/VB/nvc.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>공용 정적 (<see langword="Shared" /> Visual Basic의)이 형식의 멤버는 스레드로부터 안전 합니다. 인터페이스 멤버는 스레드로부터 안전하지 않습니다.  
  
이 구현은 동기화를 제공 하지 않습니다 스레드로부터 안전한 래퍼를를 <see cref="T:System.Collections.Specialized.NameValueCollection" />, 파생된 클래스의 자체 동기화 된 버전을 만들 수 있지만 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 를 사용 하 여를 <see cref="P:System.Collections.ICollection.SyncRoot" /> 의 속성을 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 클래스.  
  
컬렉션을 열거 되지 본질적으로 스레드로부터 안전한 프로시저가 있습니다. 컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다. 열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</threadsafe>
    <altmember cref="T:System.Collections.Specialized.NameObjectCollectionBase" />
    <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Culture의 영향을 받지 않는 문자열 작업 수행</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Collections.Specialized.NameValueCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameValueCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameValueCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>비어 있는 상태이고 기본 초기 용량을 가지며 대/소문자를 구분하지 않는 기본 해시 코드 공급자와 대/소문자를 구분하지 않는 기본 비교자를 사용하는 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 용량을 <xref:System.Collections.Specialized.NameValueCollection> 요소입니다는 <xref:System.Collections.Specialized.NameValueCollection> 보유할 수 있습니다. 요소에 추가 되는 <xref:System.Collections.Specialized.NameValueCollection>, 용량을 증가 시켜 자동으로 내부 배열을 다시 할당 하 여 필요에 따라 합니다.  
  
 컬렉션의 크기를 예상할 수 있는 경우에 여러 요소를 추가 하는 동안 크기 조정 작업을 수행할 필요가 없습니다 초기 용량을 지정 합니다 <xref:System.Collections.Specialized.NameValueCollection>합니다.  
  
 키에 대 한 해시 코드를 분배 하는 해시 코드 공급자는 <xref:System.Collections.Specialized.NameValueCollection>합니다. 기본 해시 코드 공급자는 <xref:System.Collections.CaseInsensitiveHashCodeProvider>합니다.  
  
 두 키가 같은지 여부를 결정 하는 비교자입니다. 기본 비교자는는 <xref:System.Collections.CaseInsensitiveComparer>합니다.  
  
 이 생성자는 o (1) 작업입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Culture의 영향을 받지 않는 문자열 작업 수행</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameValueCollection (System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameValueCollection(System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameValueCollection : System.Collections.IEqualityComparer -&gt; System.Collections.Specialized.NameValueCollection" Usage="new System.Collections.Specialized.NameValueCollection equalityComparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="equalityComparer">두 키가 같은지 여부를 확인하고 컬렉션의 키에 대한 해시 코드를 생성하는 데 사용할 <see cref="T:System.Collections.IEqualityComparer" /> 개체입니다.</param>
        <summary>기본 초기 용량을 갖고 있고 지정된 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 개체를 사용하는 비어 있는 <see cref="T:System.Collections.IEqualityComparer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 용량을 <xref:System.Collections.Specialized.NameValueCollection> 개체가 요소 수는는 <xref:System.Collections.Specialized.NameValueCollection> 보유할 수 있습니다. 요소에 추가 되는 <xref:System.Collections.Specialized.NameValueCollection>, 용량을 증가 시켜 자동으로 내부 배열을 다시 할당 하 여 필요에 따라 합니다.  
  
 컬렉션의 크기를 예상할 수 있는 경우에 여러 요소를 추가 하는 동안 크기 조정 작업을 수행할 필요가 없습니다 초기 용량을 지정 합니다 <xref:System.Collections.Specialized.NameValueCollection>합니다.  
  
 <xref:System.Collections.IEqualityComparer> 개체 해시 코드 공급자 및 비교자를 결합 합니다.  키에 대 한 해시 코드를 분배 하는 해시 코드 공급자는 <xref:System.Collections.Specialized.NameValueCollection>합니다.  두 키가 같은지 여부를 결정 하는 비교자입니다.  
  
 이 생성자는 o (1) 작업입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEqualityComparer" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Culture의 영향을 받지 않는 문자열 작업 수행</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameValueCollection (System.Collections.Specialized.NameValueCollection col);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Specialized.NameValueCollection col) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (col As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameValueCollection(System::Collections::Specialized::NameValueCollection ^ col);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameValueCollection : System.Collections.Specialized.NameValueCollection -&gt; System.Collections.Specialized.NameValueCollection" Usage="new System.Collections.Specialized.NameValueCollection col" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="col" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="col">새 <see cref="T:System.Collections.Specialized.NameValueCollection" />으로 복사할 <see cref="T:System.Collections.Specialized.NameValueCollection" />입니다.</param>
        <summary>지정된 <see cref="T:System.Collections.Specialized.NameValueCollection" />의 엔트리를 초기 용량이 복사되는 엔트리의 수와 같고 소스 컬렉션과 같은 해시 코드 공급자 및 같은 비교자를 사용하는 새 <see cref="T:System.Collections.Specialized.NameValueCollection" />에 복사합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 용량을 <xref:System.Collections.Specialized.NameValueCollection> 요소입니다는 <xref:System.Collections.Specialized.NameValueCollection> 보유할 수 있습니다. 요소에 추가 되는 <xref:System.Collections.Specialized.NameValueCollection>, 용량을 증가 시켜 자동으로 내부 배열을 다시 할당 하 여 필요에 따라 합니다.  
  
 컬렉션의 크기를 예상할 수 있는 경우에 여러 요소를 추가 하는 동안 크기 조정 작업을 수행할 필요가 없습니다 초기 용량을 지정 합니다 <xref:System.Collections.Specialized.NameValueCollection>합니다.  
  
 키에 대 한 해시 코드를 분배 하는 해시 코드 공급자는 <xref:System.Collections.Specialized.NameValueCollection>합니다. 기본 해시 코드 공급자는 <xref:System.Collections.CaseInsensitiveHashCodeProvider>합니다.  
  
 두 키가 같은지 여부를 결정 하는 비교자입니다. 기본 비교자는는 <xref:System.Collections.CaseInsensitiveComparer>합니다.  
  
 새 요소의 <xref:System.Collections.Specialized.NameValueCollection> 소스로 동일한 순서로 정렬 되며 <xref:System.Collections.Specialized.NameValueCollection>합니다.  
  
 이 생성자는 (`n`) 작업, 여기서 `n` 에 있는 요소의 수는 `col`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="col" />가 <see langword="null" />입니다.</exception>
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Culture의 영향을 받지 않는 문자열 작업 수행</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameValueCollection (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameValueCollection(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameValueCollection : int -&gt; System.Collections.Specialized.NameValueCollection" Usage="new System.Collections.Specialized.NameValueCollection capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><see cref="T:System.Collections.Specialized.NameValueCollection" />에 포함될 수 있는 초기 엔트리 수입니다.</param>
        <summary>비어 있는 상태이고 지정한 초기 용량을 가지며 대/소문자를 구분하지 않는 기본 해시 코드 공급자와 대/소문자를 구분하지 않는 기본 비교자를 사용하는 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 용량을 <xref:System.Collections.Specialized.NameValueCollection> 요소입니다는 <xref:System.Collections.Specialized.NameValueCollection> 보유할 수 있습니다. 요소에 추가 되는 <xref:System.Collections.Specialized.NameValueCollection>, 용량을 증가 시켜 자동으로 내부 배열을 다시 할당 하 여 필요에 따라 합니다.  
  
 컬렉션의 크기를 예상할 수 있는 경우에 여러 요소를 추가 하는 동안 크기 조정 작업을 수행할 필요가 없습니다 초기 용량을 지정 합니다 <xref:System.Collections.Specialized.NameValueCollection>합니다.  
  
 키에 대 한 해시 코드를 분배 하는 해시 코드 공급자는 <xref:System.Collections.Specialized.NameValueCollection>합니다. 기본 해시 코드 공급자는 <xref:System.Collections.CaseInsensitiveHashCodeProvider>합니다.  
  
 두 키가 같은지 여부를 결정 하는 비교자입니다. 기본 비교자는는 <xref:System.Collections.CaseInsensitiveComparer>합니다.  
  
 이 생성자는 O (`n`) 작업, 여기서 `n` 는 `capacity`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity" />가 0보다 작은 경우</exception>
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Culture의 영향을 받지 않는 문자열 작업 수행</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameValueCollection (System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IHashCodeProvider hashProvider, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hashProvider As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameValueCollection(System::Collections::IHashCodeProvider ^ hashProvider, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameValueCollection : System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Specialized.NameValueCollection" Usage="new System.Collections.Specialized.NameValueCollection (hashProvider, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Please use NameValueCollection(IEqualityComparer) instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="hashProvider" Type="System.Collections.IHashCodeProvider" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hashProvider"><see cref="T:System.Collections.IHashCodeProvider" />의 모든 키에 해시 코드를 제공하는 <see cref="T:System.Collections.Specialized.NameValueCollection" />입니다.</param>
        <param name="comparer">두 키가 같은지 여부를 확인하는 데 사용하는 <see cref="T:System.Collections.IComparer" />입니다.</param>
        <summary>비어 있는 상태이고 기본 초기 용량을 가지며 지정된 해시 코드 공급자와 지정된 비교자를 사용하는 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 용량을 <xref:System.Collections.Specialized.NameValueCollection> 요소입니다는 <xref:System.Collections.Specialized.NameValueCollection> 보유할 수 있습니다. 요소에 추가 되는 <xref:System.Collections.Specialized.NameValueCollection>, 용량을 증가 시켜 자동으로 내부 배열을 다시 할당 하 여 필요에 따라 합니다.  
  
 컬렉션의 크기를 예상할 수 있는 경우에 여러 요소를 추가 하는 동안 크기 조정 작업을 수행할 필요가 없습니다 초기 용량을 지정 합니다 <xref:System.Collections.Specialized.NameValueCollection>합니다.  
  
 키에 대 한 해시 코드를 분배 하는 해시 코드 공급자는 <xref:System.Collections.Specialized.NameValueCollection>합니다. 기본 해시 코드 공급자는 <xref:System.Collections.CaseInsensitiveHashCodeProvider>합니다.  
  
 두 키가 같은지 여부를 결정 하는 비교자입니다. 기본 비교자는는 <xref:System.Collections.CaseInsensitiveComparer>합니다.  
  
 이 생성자는 o (1) 작업입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Culture의 영향을 받지 않는 문자열 작업 수행</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameValueCollection (int capacity, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameValueCollection(int capacity, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameValueCollection : int * System.Collections.IEqualityComparer -&gt; System.Collections.Specialized.NameValueCollection" Usage="new System.Collections.Specialized.NameValueCollection (capacity, equalityComparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="capacity"><see cref="T:System.Collections.Specialized.NameValueCollection" /> 개체에 포함될 수 있는 초기 엔트리 수입니다.</param>
        <param name="equalityComparer">두 키가 같은지 여부를 확인하고 컬렉션의 키에 대한 해시 코드를 생성하는 데 사용할 <see cref="T:System.Collections.IEqualityComparer" /> 개체입니다.</param>
        <summary>지정된 초기 용량을 갖고 있고 지정된 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 개체를 사용하는 비어 있는 <see cref="T:System.Collections.IEqualityComparer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 용량을 <xref:System.Collections.Specialized.NameValueCollection> 개체가 요소 수는는 <xref:System.Collections.Specialized.NameValueCollection> 보유할 수 있습니다. 요소에 추가 되는 <xref:System.Collections.Specialized.NameValueCollection>, 용량을 증가 시켜 자동으로 내부 배열을 다시 할당 하 여 필요에 따라 합니다.  
  
 컬렉션의 크기를 예상할 수 있는 경우에 여러 요소를 추가 하는 동안 크기 조정 작업을 수행할 필요가 없습니다 초기 용량을 지정 합니다 <xref:System.Collections.Specialized.NameValueCollection>합니다.  
  
 <xref:System.Collections.IEqualityComparer> 개체 해시 코드 공급자 및 비교자를 결합 합니다.  키에 대 한 해시 코드를 분배 하는 해시 코드 공급자는 <xref:System.Collections.Specialized.NameValueCollection>합니다.  두 키가 같은지 여부를 결정 하는 비교자입니다.  
  
 이 생성자는 (`n`) 작업, 여기서 `n` 는 `capacity` 매개 변수입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity" />가 0보다 작은 경우</exception>
        <altmember cref="T:System.Collections.IEqualityComparer" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Culture의 영향을 받지 않는 문자열 작업 수행</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameValueCollection (int capacity, System.Collections.Specialized.NameValueCollection col);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.Specialized.NameValueCollection col) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, col As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameValueCollection(int capacity, System::Collections::Specialized::NameValueCollection ^ col);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameValueCollection : int * System.Collections.Specialized.NameValueCollection -&gt; System.Collections.Specialized.NameValueCollection" Usage="new System.Collections.Specialized.NameValueCollection (capacity, col)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="col" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="capacity"><see cref="T:System.Collections.Specialized.NameValueCollection" />에 포함될 수 있는 초기 엔트리 수입니다.</param>
        <param name="col">새 <see cref="T:System.Collections.Specialized.NameValueCollection" />으로 복사할 <see cref="T:System.Collections.Specialized.NameValueCollection" />입니다.</param>
        <summary>지정된 <see cref="T:System.Collections.Specialized.NameValueCollection" />의 엔트리를 새 <see cref="T:System.Collections.Specialized.NameValueCollection" />에 복사합니다. 이 컬렉션은 지정된 초기 용량을 가지거나 복사되는 엔트리의 수와 같은 초기 용량을 가지며 대/소문자를 구분하지 않는 기본 해시 코드 공급자와 대/소문자를 구분하지 않는 기본 비교자를 사용합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 용량을 <xref:System.Collections.Specialized.NameValueCollection> 요소입니다는 <xref:System.Collections.Specialized.NameValueCollection> 보유할 수 있습니다. 요소에 추가 되는 <xref:System.Collections.Specialized.NameValueCollection>, 용량을 증가 시켜 자동으로 내부 배열을 다시 할당 하 여 필요에 따라 합니다.  
  
 컬렉션의 크기를 예상할 수 있는 경우에 여러 요소를 추가 하는 동안 크기 조정 작업을 수행할 필요가 없습니다 초기 용량을 지정 합니다 <xref:System.Collections.Specialized.NameValueCollection>합니다.  
  
 키에 대 한 해시 코드를 분배 하는 해시 코드 공급자는 <xref:System.Collections.Specialized.NameValueCollection>합니다. 기본 해시 코드 공급자는 <xref:System.Collections.CaseInsensitiveHashCodeProvider>합니다.  
  
 두 키가 같은지 여부를 결정 하는 비교자입니다. 기본 비교자는는 <xref:System.Collections.CaseInsensitiveComparer>합니다.  
  
 이 생성자는 O (`n`) 작업, 여기서 `n` 는 `capacity`합니다.  경우의 요소 수가 `col` 보다 크면 `capacity`,이 생성자가는 O (`n` + `m`) 작업을 여기서 `n` 는 `capacity` 및 `m` 입니다 요소에서 `col`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity" />가 0보다 작은 경우</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="col" />가 <see langword="null" />입니다.</exception>
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Culture의 영향을 받지 않는 문자열 작업 수행</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NameValueCollection (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NameValueCollection(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameValueCollection : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Collections.Specialized.NameValueCollection" Usage="new System.Collections.Specialized.NameValueCollection (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info">새 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 인스턴스를 serialize하는 데 필요한 정보가 들어 있는 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 개체입니다.</param>
        <param name="context">새 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 인스턴스와 관련되어 있는 serialize된 스트림의 소스 및 대상이 들어 있는 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 개체입니다.</param>
        <summary>직렬화할 수 있으며 지정된 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 및 <see cref="T:System.Runtime.Serialization.StreamingContext" />를 사용하는 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 o (1) 작업입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Culture의 영향을 받지 않는 문자열 작업 수행</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameValueCollection (int capacity, System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.IHashCodeProvider hashProvider, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, hashProvider As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameValueCollection(int capacity, System::Collections::IHashCodeProvider ^ hashProvider, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameValueCollection : int * System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Specialized.NameValueCollection" Usage="new System.Collections.Specialized.NameValueCollection (capacity, hashProvider, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Please use NameValueCollection(Int32, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="hashProvider" Type="System.Collections.IHashCodeProvider" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="capacity"><see cref="T:System.Collections.Specialized.NameValueCollection" />에 포함될 수 있는 초기 엔트리 수입니다.</param>
        <param name="hashProvider"><see cref="T:System.Collections.IHashCodeProvider" />의 모든 키에 해시 코드를 제공하는 <see cref="T:System.Collections.Specialized.NameValueCollection" />입니다.</param>
        <param name="comparer">두 키가 같은지 여부를 확인하는 데 사용하는 <see cref="T:System.Collections.IComparer" />입니다.</param>
        <summary>비어 있는 상태이고 지정된 초기 용량을 가지며 지정된 해시 코드 공급자와 지정된 비교자를 사용하는 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 용량을 <xref:System.Collections.Specialized.NameValueCollection> 요소입니다는 <xref:System.Collections.Specialized.NameValueCollection> 보유할 수 있습니다. 요소에 추가 되는 <xref:System.Collections.Specialized.NameValueCollection>, 용량을 증가 시켜 자동으로 내부 배열을 다시 할당 하 여 필요에 따라 합니다.  
  
 컬렉션의 크기를 예상할 수 있는 경우에 여러 요소를 추가 하는 동안 크기 조정 작업을 수행할 필요가 없습니다 초기 용량을 지정 합니다 <xref:System.Collections.Specialized.NameValueCollection>합니다.  
  
 키에 대 한 해시 코드를 분배 하는 해시 코드 공급자는 <xref:System.Collections.Specialized.NameValueCollection>합니다. 기본 해시 코드 공급자는 <xref:System.Collections.CaseInsensitiveHashCodeProvider>합니다.  
  
 두 키가 같은지 여부를 결정 하는 비교자입니다. 기본 비교자는는 <xref:System.Collections.CaseInsensitiveComparer>합니다.  
  
 이 생성자는 O (`n`) 작업, 여기서 `n` 는 `capacity`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity" />가 0보다 작은 경우</exception>
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Culture의 영향을 받지 않는 문자열 작업 수행</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>현재 <see cref="T:System.Collections.Specialized.NameValueCollection" />에 엔트리를 추가합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Collections.Specialized.NameValueCollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Collections.Specialized.NameValueCollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (c As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Collections::Specialized::NameValueCollection ^ c);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="nameValueCollection.Add c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="c">현재 <see cref="T:System.Collections.Specialized.NameValueCollection" />으로 복사할 <see cref="T:System.Collections.Specialized.NameValueCollection" />입니다.</param>
        <summary>지정된 <see cref="T:System.Collections.Specialized.NameValueCollection" />의 엔트리를 현재 <see cref="T:System.Collections.Specialized.NameValueCollection" />으로 복사합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우에 키 `c` 대상에 이미 <xref:System.Collections.Specialized.NameValueCollection> 인스턴스에 연결 된 값 `c` 대상에 동일한 키와 연결 된 값의 기존 쉼표로 구분 된 목록에 추가 됩니다 <xref:System.Collections.Specialized.NameValueCollection> 인스턴스.  
  
 하는 경우 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> 이미 용량과 용량의 <xref:System.Collections.Specialized.NameValueCollection> 자동으로 내부 배열을 다시 할당 하 여 증가 하는 새 요소가 추가 되기 전에 기존 요소를 새 배열에 복사 됩니다.  
  
 경우 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> 작습니다 용량 보다이 메서드는 o (1) 작업입니다. 이 메서드는 O가 용량을 늘려야 하는 새 요소를 수용할 수 있도록 하는 경우 (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">컬렉션이 읽기 전용입니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="c" />가 <see langword="null" />입니다.</exception>
        <altmember cref="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string -&gt; unit&#xA;override this.Add : string * string -&gt; unit" Usage="nameValueCollection.Add (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">추가할 엔트리의 <see cref="T:System.String" /> 키입니다. 키는 <see langword="null" />이 될 수 있습니다.</param>
        <param name="value">추가할 엔트리의 <see cref="T:System.String" /> 값입니다. 값은 <see langword="null" />이 될 수 있습니다.</param>
        <summary>지정된 이름과 값을 가지는 엔트리를 <see cref="T:System.Collections.Specialized.NameValueCollection" />에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정된 된 키를 대상에 이미 있으면 <xref:System.Collections.Specialized.NameValueCollection> 인스턴스를 지정된 된 값은 폼에 있는 값의 기존 쉼표로 구분 된 목록에 추가할 `"value1,value2,value3"`합니다. 값은 대상에 동일한 키를 사용 하 여 연결 <xref:System.Collections.Specialized.NameValueCollection> 인스턴스.  
  
 하는 경우 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> 이미 용량과 용량의 <xref:System.Collections.Specialized.NameValueCollection> 자동으로 내부 배열을 다시 할당 하 여 증가 하는 새 요소가 추가 되기 전에 기존 요소를 새 배열에 복사 됩니다.  
  
 경우 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> 작습니다 용량 보다이 메서드는 o (1) 작업입니다. 이 메서드는 O가 용량을 늘려야 하는 새 요소를 수용할 수 있도록 하는 경우 (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">컬렉션이 읽기 전용입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllKeys">
      <MemberSignature Language="C#" Value="public virtual string[] AllKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AllKeys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.NameValueCollection.AllKeys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllKeys As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ AllKeys { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllKeys : string[]" Usage="System.Collections.Specialized.NameValueCollection.AllKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Collections.Specialized.NameValueCollection" />의 모든 키를 가져옵니다.</summary>
        <value><see cref="T:System.String" />의 모든 키를 포함하는 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 빈 컬렉션 비어 있으면 <xref:System.String> 배열을 `null`합니다.  
  
 반환 된 배열이 <xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A> 성능 향상을 위해 캐시 되 고는 컬렉션이 변경 될 때 자동으로 새로 고침 됩니다. 파생된 클래스를 호출 하 여 캐시 된 버전을 무효화할 수 <xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A>시켜 만들어야 배열 강제 적용 합니다.  
  
 이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)" />
        <altmember cref="M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="nameValueCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>캐시된 배열을 무효로 만들고 <see cref="T:System.Collections.Specialized.NameValueCollection" />에서 모든 엔트리를 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 방법은 O(1) 작업에 설명 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">컬렉션이 읽기 전용입니다.</exception>
        <altmember cref="M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dest As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(Array ^ dest, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : Array * int -&gt; unit" Usage="nameValueCollection.CopyTo (dest, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest"><see cref="T:System.Array" />에서 복사한 요소의 대상인 일차원 <see cref="T:System.Collections.Specialized.NameValueCollection" />입니다. <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
        <param name="index"><paramref name="dest" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
        <summary>대상 배열의 지정된 인덱스에서 시작하여 전체 <see cref="T:System.Collections.Specialized.NameValueCollection" />을 호환되는 1차원 <see cref="T:System.Array" />에 복사합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정된 된 배열의 호환 되는 형식 이어야 합니다.  
  
 이 메서드는 <xref:System.Array.Copy%2A?displayProperty=nameWithType> 요소를 복사 합니다.  
  
 이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dest" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />가 0보다 작습니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="dest" />가 다차원 배열인 경우  
  
또는 
소스 <see cref="T:System.Collections.Specialized.NameValueCollection" />의 요소 수가 대상 <paramref name="dest" />의 <paramref name="index" />부터 끝까지 사용 가능한 공간보다 큽니다.</exception>
        <exception cref="T:System.InvalidCastException">소스 <see cref="T:System.Collections.Specialized.NameValueCollection" />의 형식을 대상 <paramref name="dest" />의 형식으로 자동 캐스팅할 수 없습니다.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Get">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>하나의 쉼표로 구분된 목록에 결합된 <see cref="T:System.Collections.Specialized.NameValueCollection" />의 지정된 엔트리에서 값을 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual string Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Get(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Get(int index);" />
      <MemberSignature Language="F#" Value="abstract member Get : int -&gt; string&#xA;override this.Get : int -&gt; string" Usage="nameValueCollection.Get index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">컬렉션에서 가져올 값이 들어 있는 엔트리의 0부터 시작하는 인덱스입니다.</param>
        <summary>하나의 쉼표로 구분된 목록에 결합된 <see cref="T:System.Collections.Specialized.NameValueCollection" />의 지정된 인덱스에서 값을 가져옵니다.</summary>
        <returns><see cref="T:System.String" />의 지정된 인덱스에 있는 값의 쉼표로 구분된 목록이 들어 있는 <see cref="T:System.Collections.Specialized.NameValueCollection" />이거나, 없는 경우 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 O (`n`) 작업을 여기서 `n` 지정 된 인덱스 값입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />가 컬렉션의 유효한 인덱스 범위를 벗어납니다.</exception>
        <altmember cref="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)" />
        <altmember cref="P:System.Collections.Specialized.NameValueCollection.AllKeys" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Culture의 영향을 받지 않는 문자열 작업 수행</related>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual string Get (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Get(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Get(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member Get : string -&gt; string&#xA;override this.Get : string -&gt; string" Usage="nameValueCollection.Get name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">가져올 값이 들어 있는 엔트리의 <see cref="T:System.String" /> 키입니다. 키는 <see langword="null" />이 될 수 있습니다.</param>
        <summary>하나의 쉼표로 구분된 목록에 결합된 <see cref="T:System.Collections.Specialized.NameValueCollection" />에서 지정된 키와 관련된 값을 가져옵니다.</summary>
        <returns><see cref="T:System.String" />에서 지정된 키와 관련된 값의 쉼표로 구분된 목록이 들어 있는 <see cref="T:System.Collections.Specialized.NameValueCollection" />이거나, 없는 경우 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  이 메서드가 반환 `null` 다음과 같은 경우: 1) 지정한 키가 없으면; 및 2) 하는 경우 지정된 된 키를 찾아 관련된 값은 `null`합니다. 이 메서드는 두 경우를 구분 하지 않습니다.  
  
 이 메서드는 O (`n`) 작업을 여기서 `n` 지정된 된 키와 연결 된 값입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)" />
        <altmember cref="P:System.Collections.Specialized.NameValueCollection.AllKeys" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Culture의 영향을 받지 않는 문자열 작업 수행</related>
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public virtual string GetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKey (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetKey(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetKey : int -&gt; string&#xA;override this.GetKey : int -&gt; string" Usage="nameValueCollection.GetKey index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">컬렉션에서 가져올 키의 0부터 시작하는 인덱스입니다.</param>
        <summary><see cref="T:System.Collections.Specialized.NameValueCollection" />의 지정한 인덱스에서 키를 가져옵니다.</summary>
        <returns><see cref="T:System.String" />의 지정된 인덱스에 있는 키가 들어 있는 <see cref="T:System.Collections.Specialized.NameValueCollection" />이거나, 없는 경우 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 방법은 O(1) 작업에 설명 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />가 컬렉션의 유효한 인덱스 범위를 벗어납니다.</exception>
        <altmember cref="P:System.Collections.Specialized.NameValueCollection.AllKeys" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValues">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Collections.Specialized.NameValueCollection" />의 지정된 엔트리에서 값을 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public virtual string[] GetValues (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetValues(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValues (index As Integer) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetValues(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetValues : int -&gt; string[]&#xA;override this.GetValues : int -&gt; string[]" Usage="nameValueCollection.GetValues index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">컬렉션에서 가져올 값이 들어 있는 엔트리의 0부터 시작하는 인덱스입니다.</param>
        <summary><see cref="T:System.Collections.Specialized.NameValueCollection" />의 지정된 인덱스에서 값을 가져옵니다.</summary>
        <returns><see cref="T:System.String" />의 지정된 인덱스에 있는 값이 들어 있는 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 배열이거나, 해당 배열이 없는 경우 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 O (`n`) 작업을 여기서 `n` 지정 된 인덱스 값입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />가 컬렉션의 유효한 인덱스 범위를 벗어납니다.</exception>
        <altmember cref="M:System.Collections.Specialized.NameValueCollection.Get(System.String)" />
        <altmember cref="P:System.Collections.Specialized.NameValueCollection.AllKeys" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Culture의 영향을 받지 않는 문자열 작업 수행</related>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public virtual string[] GetValues (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetValues(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValues (name As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetValues(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetValues : string -&gt; string[]&#xA;override this.GetValues : string -&gt; string[]" Usage="nameValueCollection.GetValues name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">가져올 값이 들어 있는 엔트리의 <see cref="T:System.String" /> 키입니다. 키는 <see langword="null" />이 될 수 있습니다.</param>
        <summary><see cref="T:System.Collections.Specialized.NameValueCollection" />에서 지정된 키와 관련된 값을 가져옵니다.</summary>
        <returns><see cref="T:System.String" />의 지정된 키와 관련된 값이 들어 있는 <see cref="T:System.Collections.Specialized.NameValueCollection" />이거나, 없는 경우 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  이 메서드가 반환 `null` 다음과 같은 경우: 1) 지정한 키가 없으면; 및 2) 하는 경우 지정된 된 키를 찾아 관련된 값은 `null`합니다. 이 메서드는 두 경우를 구분 하지 않습니다.  
  
 이 메서드는 O (`n`) 작업을 여기서 `n` 지정된 된 키와 연결 된 값입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.NameValueCollection.Get(System.String)" />
        <altmember cref="P:System.Collections.Specialized.NameValueCollection.AllKeys" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Culture의 영향을 받지 않는 문자열 작업 수행</related>
      </Docs>
    </Member>
    <Member MemberName="HasKeys">
      <MemberSignature Language="C#" Value="public bool HasKeys ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasKeys() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.HasKeys" />
      <MemberSignature Language="VB.NET" Value="Public Function HasKeys () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasKeys();" />
      <MemberSignature Language="F#" Value="member this.HasKeys : unit -&gt; bool" Usage="nameValueCollection.HasKeys " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Collections.Specialized.NameValueCollection" />에 <see langword="null" />이 아닌 키가 들어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <returns><see cref="T:System.Collections.Specialized.NameValueCollection" />에 <see langword="null" />이 아닌 키가 들어 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 방법은 O(1) 작업에 설명 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateCachedArrays">
      <MemberSignature Language="C#" Value="protected void InvalidateCachedArrays ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvalidateCachedArrays() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvalidateCachedArrays ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvalidateCachedArrays();" />
      <MemberSignature Language="F#" Value="member this.InvalidateCachedArrays : unit -&gt; unit" Usage="nameValueCollection.InvalidateCachedArrays " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컬렉션의 캐시된 배열을 <see langword="null" />로 다시 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환 된 배열이 <xref:System.Collections.Specialized.NameValueCollection.AllKeys%2A> 성능 향상을 위해 캐시 되 고는 컬렉션이 변경 될 때 자동으로 새로 고침 됩니다. 파생된 클래스를 호출 하 여 캐시 된 버전을 무효화할 수 <xref:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays%2A>시켜 만들어야 배열 강제 적용 합니다.  
  
 이 방법은 O(1) 작업에 설명 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Specialized.NameValueCollection.AllKeys" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Collections.Specialized.NameValueCollection" />의 지정된 엔트리를 가져오거나 설정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[int] { System::String ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : string" Usage="System.Collections.Specialized.NameValueCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">컬렉션에 있는 엔트리의 인덱스(0부터 시작)입니다.</param>
        <summary><see cref="T:System.Collections.Specialized.NameValueCollection" />의 지정된 인덱스에 있는 엔트리를 가져옵니다.</summary>
        <value>컬렉션의 지정된 인덱스에 있는 값의 쉼표로 구분된 목록이 들어 있는 <see cref="T:System.String" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 `myCollection[index]` 구문을 사용하여 컬렉션의 특정 요소에 액세스하는 기능을 제공합니다.  
  
 이 속성을 설정하려고 한 경우 지정 된 인덱스 값을 설정 하려면 `Item[GetKey(index)]`합니다.  
  
 C# 언어 키워드를 사용 하 여 구현 하는 대신 인덱서를 정의 하는 <xref:System.Collections.Specialized.NameValueCollection.Item%2A> 속성입니다. Visual Basic에서는 동일한 인덱싱 기능을 제공하는 <xref:System.Collections.Specialized.NameValueCollection.Item%2A>을 기본 속성으로 구현합니다.  
  
 지정 된 인덱스 값을 검색 하는 (`n`) 작업을 여기서 `n` 값입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />가 컬렉션의 유효한 인덱스 범위를 벗어납니다.</exception>
        <altmember cref="Overload:System.Collections.Specialized.NameValueCollection.Get" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Culture의 영향을 받지 않는 문자열 작업 수행</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.NameValueCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ name); void set(System::String ^ name, System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string with get, set" Usage="System.Collections.Specialized.NameValueCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">찾을 엔트리의 <see cref="T:System.String" /> 키입니다. 키는 <see langword="null" />이 될 수 있습니다.</param>
        <summary><see cref="T:System.Collections.Specialized.NameValueCollection" />에서 지정된 키를 가지는 엔트리를 가져오거나 설정합니다.</summary>
        <value>지정된 키와 연결된 값이 있으면 쉼표로 구분된 해당 값의 목록이 포함된 <see cref="T:System.String" />이고, 그렇지 않으면 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 `myCollection[name]` 구문을 사용하여 컬렉션의 특정 요소에 액세스하는 기능을 제공합니다.  
  
 컬렉션에서 지정된 된 키가 이미 있는 경우 지정된 된 값을 사용 하 여 기존 값 목록을 덮어씁니다이 속성을 설정 합니다. 값의 기존 목록에 새 값을 추가, 사용 된 <xref:System.Collections.Specialized.NameValueCollection.Add%2A> 메서드.  
  
 지정된 된 키 컬렉션에 없으면이 속성을 설정할 지정 된 키와 지정된 된 값을 사용 하 여 새 항목을 만듭니다.  
  
> [!CAUTION]
>  이 속성은 반환 `null` 다음과 같은 경우: 1) 지정한 키가 없으면; 및 2) 하는 경우 지정된 된 키를 찾아 관련된 값은 `null`합니다. 이 속성은 두 가지 경우를 구분 하지 않습니다.  
  
 C# 언어 키워드를 사용 하 여 구현 하는 대신 인덱서를 정의 하는 <xref:System.Collections.Specialized.NameValueCollection.Item%2A> 속성입니다. Visual Basic에서는 동일한 인덱싱 기능을 제공하는 <xref:System.Collections.Specialized.NameValueCollection.Item%2A>을 기본 속성으로 구현합니다.  
  
 검색 하거나 지정된 된 키와 연결 된 값이 설정 되는 O (`n`) 작업을 여기서 `n` 값입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">읽기 전용 컬렉션을 수정하려고 시도한 경우</exception>
        <altmember cref="Overload:System.Collections.Specialized.NameValueCollection.Get" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Culture의 영향을 받지 않는 문자열 작업 수행</related>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; unit&#xA;override this.Remove : string -&gt; unit" Usage="nameValueCollection.Remove name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">제거할 엔트리의 <see cref="T:System.String" /> 키입니다. 키는 <see langword="null" />이 될 수 있습니다.</param>
        <summary><see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스에서 지정한 키를 가지는 엔트리를 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Collections.Specialized.NameValueCollection> 지정된 된 키를 사용 하 여 요소를 포함 하지 않습니다는 <xref:System.Collections.Specialized.NameValueCollection> 그대로 유지 됩니다. 예외가 throw되지 않습니다.

 지정 하는 경우는 `null` 값을 합니다 `name` 매개 변수를 사용 하 여 항목을 `null` 키가 제거 되는 경우 찾을 수.
  
 목록처럼 연속된 요소로 구성된 컬렉션에서는 제거된 요소 다음에 있는 요소를 위로 이동하여 빈 자리를 채웁니다. 컬렉션에 인덱스가 지정된 경우 이동되는 요소의 인덱스도 업데이트됩니다. 요소가 해시 테이블 같은 버킷으로 개념적으로 그룹화되어 있는 컬렉션에는 이러한 동작이 적용되지 않습니다.  
  
 이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">컬렉션이 읽기 전용입니다.</exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Culture의 영향을 받지 않는 문자열 작업 수행</related>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public virtual void Set (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Set (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Set(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Set : string * string -&gt; unit&#xA;override this.Set : string * string -&gt; unit" Usage="nameValueCollection.Set (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">새 값을 추가할 엔트리의 <see cref="T:System.String" /> 키입니다. 키는 <see langword="null" />이 될 수 있습니다.</param>
        <param name="value">지정된 엔트리에 추가할 새 값을 나타내는 <see cref="T:System.Object" />입니다. 값은 <see langword="null" />이 될 수 있습니다.</param>
        <summary><see cref="T:System.Collections.Specialized.NameValueCollection" />에 엔트리의 값을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정된 된 키 컬렉션에 이미 있는 경우이 메서드 지정된 된 값을 사용 하 여 기존 목록을 값을 덮어씁니다. 값의 기존 목록에 새 값을 추가, 사용 된 <xref:System.Collections.Specialized.NameValueCollection.Add%2A> 메서드.  
  
 지정된 된 키 컬렉션에 없으면이 메서드는 지정 된 키와 지정된 된 값을 사용 하 여 새 항목을 만듭니다.  
  
 이 방법은 O(1) 작업에 설명 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">컬렉션이 읽기 전용입니다.</exception>
        <altmember cref="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">Culture의 영향을 받지 않는 문자열 작업 수행</related>
      </Docs>
    </Member>
  </Members>
</Type>