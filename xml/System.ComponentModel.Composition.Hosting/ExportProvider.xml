<Type Name="ExportProvider" FullName="System.ComponentModel.Composition.Hosting.ExportProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d863cafd1a554f6db28964cde0826c6296842370" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39836676" /></Metadata><TypeSignature Language="C#" Value="public abstract class ExportProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExportProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.ExportProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExportProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExportProvider abstract" />
  <TypeSignature Language="F#" Value="type ExportProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>지정된 <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> 개체와 일치하는 내보내기를 검색합니다.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExportProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExportProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; ExportsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; ExportsChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ExportsChanged As EventHandler(Of ExportsChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::ComponentModel::Composition::Hosting::ExportsChangeEventArgs ^&gt; ^ ExportsChanged;" />
      <MemberSignature Language="F#" Value="member this.ExportsChanged : EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; " Usage="member this.ExportsChanged : System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" />의 내보내기가 변경될 때 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportsChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; ExportsChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; ExportsChanging" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ExportsChanging As EventHandler(Of ExportsChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::ComponentModel::Composition::Hosting::ExportsChangeEventArgs ^&gt; ^ ExportsChanging;" />
      <MemberSignature Language="F#" Value="member this.ExportsChanging : EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; " Usage="member this.ExportsChanging : System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>제공된 내보내기를 변경할 때 발생됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExport&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 내보내기를 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExport&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Lazy&lt;T&gt; GetExport&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Lazy`1&lt;!!T&gt; GetExport&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport(Of T) () As Lazy(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; Lazy&lt;T&gt; ^ GetExport();" />
      <MemberSignature Language="F#" Value="member this.GetExport : unit -&gt; Lazy&lt;'T&gt;" Usage="exportProvider.GetExport " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">반환할 <see cref="T:System.Lazy`1" /> 개체의 형식 매개 변수입니다. 계약 이름은 이 형식 매개 변수에서도 파생됩니다.</typeparam>
        <summary>지정된 형식 매개 변수에서 파생된 계약 이름을 갖는 내보내기를 반환합니다. 일치하는 내보내기가 정확히 하나가 아니면 예외가 throw됩니다.</summary>
        <returns>지정된 형식 매개 변수에서 파생된 계약 이름을 갖는 내보내기입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 계약 이름은 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`입니다.  
  
 계약 이름을 사용 하 여 비교를 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><see cref="T:System.Lazy`1" /> 개체에 <paramref name="T" />에서 파생된 계약 이름을 사용하는 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 개체가 없습니다.  
  
또는 
<see cref="T:System.Lazy`1" /> 개체에 <paramref name="T" />에서 파생된 계약 이름을 사용하는 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 개체가 두 개 이상 있습니다.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 개체가 삭제되었습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetExport&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Lazy&lt;T&gt; GetExport&lt;T&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Lazy`1&lt;!!T&gt; GetExport&lt;T&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport(Of T) (contractName As String) As Lazy(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; Lazy&lt;T&gt; ^ GetExport(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExport : string -&gt; Lazy&lt;'T&gt;" Usage="exportProvider.GetExport contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">반환할 <see cref="T:System.Lazy`1" /> 개체의 형식 매개 변수입니다.</typeparam>
        <param name="contractName">반환할 <see cref="T:System.Lazy`1" /> 개체의 계약 이름이거나, 기본 계약 이름을 사용할 경우 <see langword="null" />이거나 빈 문자열("")입니다.</param>
        <summary>지정된 계약 이름을 가진 내보내기를 반환합니다. 일치하는 내보내기가 정확히 하나가 아니면 예외가 throw됩니다.</summary>
        <returns>지정된 계약 이름을 가진 내보내기입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 계약 이름을 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`입니다.  
  
 계약 이름을 사용 하 여 비교를 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><see cref="T:System.Lazy`1" /> 개체에 <paramref name="T" />에서 파생된 계약 이름을 사용하는 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 개체가 없습니다.  
  
또는 
<see cref="T:System.Lazy`1" /> 개체에 <paramref name="T" />에서 파생된 계약 이름을 사용하는 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 개체가 두 개 이상 있습니다.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 개체가 삭제되었습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetExport&lt;T,TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public Lazy&lt;T,TMetadataView&gt; GetExport&lt;T,TMetadataView&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Lazy`2&lt;!!T, !!TMetadataView&gt; GetExport&lt;T, TMetadataView&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport(Of T, TMetadataView) () As Lazy(Of T, TMetadataView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TMetadataView&gt;&#xA; Lazy&lt;T, TMetadataView&gt; ^ GetExport();" />
      <MemberSignature Language="F#" Value="member this.GetExport : unit -&gt; Lazy&lt;'T, 'MetadataView&gt;" Usage="exportProvider.GetExport " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;T,TMetadataView&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">반환할 <see cref="T:System.Lazy`2" /> 개체의 형식 매개 변수입니다. 계약 이름은 이 형식 매개 변수에서도 파생됩니다.</typeparam>
        <typeparam name="TMetadataView">반환할 <see cref="T:System.Lazy`2" /> 개체의 메타데이터 뷰 형식입니다.</typeparam>
        <summary>지정된 형식 매개 변수에서 파생된 계약 이름을 갖는 내보내기를 반환합니다. 일치하는 내보내기가 정확히 하나가 아니면 예외가 throw됩니다.</summary>
        <returns>System.Lazy`2</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 계약 이름은 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`입니다.  
  
 계약 이름을 사용 하 여 비교를 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><see cref="T:System.Lazy`2" /> 개체에 <paramref name="T" />에서 파생된 계약 이름을 사용하는 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 개체가 없습니다.  
  
또는 
<see cref="T:System.Lazy`2" /> 개체에 <paramref name="T" />에서 파생된 계약 이름을 사용하는 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 개체가 두 개 이상 있습니다.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 개체가 삭제되었습니다.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="TMetadataView" />가 유효한 메타데이터 보기 형식이 아닙니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetExport&lt;T,TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public Lazy&lt;T,TMetadataView&gt; GetExport&lt;T,TMetadataView&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Lazy`2&lt;!!T, !!TMetadataView&gt; GetExport&lt;T, TMetadataView&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport(Of T, TMetadataView) (contractName As String) As Lazy(Of T, TMetadataView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TMetadataView&gt;&#xA; Lazy&lt;T, TMetadataView&gt; ^ GetExport(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExport : string -&gt; Lazy&lt;'T, 'MetadataView&gt;" Usage="exportProvider.GetExport contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;T,TMetadataView&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">반환할 <see cref="T:System.Lazy`2" /> 개체의 형식 매개 변수입니다.</typeparam>
        <typeparam name="TMetadataView">반환할 <see cref="T:System.Lazy`2" /> 개체의 메타데이터 뷰 형식입니다.</typeparam>
        <param name="contractName">반환할 <see cref="T:System.Lazy`2" /> 개체의 계약 이름이거나, 기본 계약 이름을 사용할 경우 <see langword="null" />이거나 빈 문자열("")입니다.</param>
        <summary>지정된 계약 이름을 가진 내보내기를 반환합니다. 일치하는 내보내기가 정확히 하나가 아니면 예외가 throw됩니다.</summary>
        <returns>지정된 계약 이름을 가진 내보내기입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 계약 이름을 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`입니다.  
  
 계약 이름을 사용 하 여 비교를 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><see cref="T:System.Lazy`2" /> 개체에 <paramref name="T" />에서 파생된 계약 이름을 사용하는 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 개체가 없습니다.  
  
또는 
<see cref="T:System.Lazy`2" /> 개체에 <paramref name="T" />에서 파생된 계약 이름을 사용하는 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 개체가 두 개 이상 있습니다.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 개체가 삭제되었습니다.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="TMetadataView" />가 유효한 메타데이터 보기 형식이 아닙니다.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExportedValue&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>내보낸 개체를 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetExportedValue&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetExportedValue&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValue(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetExportedValue();" />
      <MemberSignature Language="F#" Value="member this.GetExportedValue : unit -&gt; 'T" Usage="exportProvider.GetExportedValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">반환할 내보낸 개체의 형식입니다. 계약 이름은 이 형식 매개 변수에서도 파생됩니다.</typeparam>
        <summary>지정된 형식 매개 변수에서 파생된 계약 이름을 갖는 내보낸 개체를 반환합니다. 일치하는 내보낸 개체가 정확히 하나가 아니면 예외가 throw됩니다.</summary>
        <returns>지정된 형식 매개 변수에서 파생된 계약 이름을 갖는 내보낸 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 계약 이름은 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`입니다.  
  
 계약 이름을 사용 하 여 비교를 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />에 <paramref name="T" />에서 파생된 계약 이름을 사용하는 내보낸 개체가 없습니다.  
  
또는 
<see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />에 <paramref name="T" />에서 파생된 계약 이름을 사용하는 내보낸 개체가 두 개 이상 있습니다.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 개체가 삭제되었습니다.</exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException">내보낸 내부 개체를 <paramref name="T" />로 캐스팅할 수 없습니다.</exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException">컴퍼지션 중 오류가 발생한 경우. <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" />에 발생한 오류의 컬렉션이 포함된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetExportedValue&lt;T&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetExportedValue&lt;T&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValue(Of T) (contractName As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetExportedValue(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExportedValue : string -&gt; 'T" Usage="exportProvider.GetExportedValue contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">반환할 내보낸 개체의 형식입니다.</typeparam>
        <param name="contractName">반환할 내보낸 개체의 계약 이름이거나, 기본 계약 이름을 사용할 경우 <see langword="null" />이거나 빈 문자열("")입니다.</param>
        <summary>지정된 계약 이름을 가진 내보낸 개체를 반환합니다. 일치하는 내보낸 개체가 정확히 하나가 아니면 예외가 throw됩니다.</summary>
        <returns>지정된 계약 이름을 가진 내보낸 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 계약 이름을 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`입니다.  
  
 계약 이름을 사용 하 여 비교를 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />에 <paramref name="T" />에서 파생된 계약 이름을 사용하는 내보낸 개체가 없습니다.  
  
또는 
<see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />에 <paramref name="T" />에서 파생된 계약 이름을 사용하는 내보낸 개체가 두 개 이상 있습니다.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 개체가 삭제되었습니다.</exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException">내보낸 내부 개체를 <paramref name="T" />로 캐스팅할 수 없습니다.</exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException">컴퍼지션 중 오류가 발생한 경우. <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" />에 발생한 오류의 컬렉션이 포함된 경우</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExportedValueOrDefault&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 내보낸 개체를 가져오거나, 해당 개체를 사용할 수 없는 경우 기본값입니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExportedValueOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetExportedValueOrDefault&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetExportedValueOrDefault&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValueOrDefault(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetExportedValueOrDefault();" />
      <MemberSignature Language="F#" Value="member this.GetExportedValueOrDefault : unit -&gt; 'T" Usage="exportProvider.GetExportedValueOrDefault " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">반환할 내보낸 개체의 형식입니다. 계약 이름은 이 형식 매개 변수에서도 파생됩니다.</typeparam>
        <summary>지정된 형식 매개 변수에서 파생된 계약 이름을 갖는 내보낸 개체 또는 지정된 형식의 기본값을 가져오거나, 일치하는 내보낸 개체가 두 개 이상인 경우 예외를 throw합니다.</summary>
        <returns><paramref name="T" />에서 파생된 계약 이름을 갖는 내보낸 개체(있는 경우)이거나, <paramref name="T" />의 기본값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드가 반환에 대 한 적절 한 기본값 내보낸된 개체가 없으면 `T`; 예를 들어 정수 형식에 대해 0 `false` 부울 형식에 대 한 및 `null` 참조 형식에 대 한 합니다.  
  
 계약 이름은 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`입니다.  
  
 계약 이름을 사용 하 여 비교를 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />에 <paramref name="T" />에서 파생된 계약 이름을 사용하는 내보낸 개체가 두 개 이상 있습니다.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 개체가 삭제되었습니다.</exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException">내보낸 내부 개체를 <paramref name="T" />로 캐스팅할 수 없습니다.</exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException">컴퍼지션 중 오류가 발생한 경우. <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" />에 발생한 오류의 컬렉션이 포함된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetExportedValueOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetExportedValueOrDefault&lt;T&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetExportedValueOrDefault&lt;T&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValueOrDefault(Of T) (contractName As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetExportedValueOrDefault(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExportedValueOrDefault : string -&gt; 'T" Usage="exportProvider.GetExportedValueOrDefault contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">반환할 내보낸 개체의 형식입니다.</typeparam>
        <param name="contractName">반환할 내보낸 개체의 계약 이름이거나, 기본 계약 이름을 사용할 경우 <see langword="null" />이거나 빈 문자열("")입니다.</param>
        <summary>지정된 계약 이름을 갖는 내보낸 개체 또는 지정된 형식의 기본값을 가져오거나, 일치하는 내보낸 개체가 두 개 이상인 경우 예외를 throw합니다.</summary>
        <returns>지정된 계약 이름을 갖는 내보낸 개체(있는 경우)이거나, <paramref name="T" />의 기본값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드가 반환에 대 한 적절 한 기본값 내보낸된 개체가 없으면 `T`; 예를 들어 정수 형식에 대해 0 `false` 부울 형식에 대 한 및 `null` 참조 형식에 대 한 합니다.  
  
 기본 계약 이름을 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`입니다.  
  
 계약 이름을 사용 하 여 비교를 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />에 지정된 계약 이름을 사용하는 내보낸 개체가 두 개 이상 있습니다.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 개체가 삭제되었습니다.</exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException">내보낸 내부 개체를 <paramref name="T" />로 캐스팅할 수 없습니다.</exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException">컴퍼지션 중 오류가 발생한 경우. <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" />에 발생한 오류의 컬렉션이 포함된 경우</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExportedValues&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>하나 이상의 내보낸 개체를 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExportedValues&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;T&gt; GetExportedValues&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetExportedValues&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValues(Of T) () As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetExportedValues();" />
      <MemberSignature Language="F#" Value="member this.GetExportedValues : unit -&gt; seq&lt;'T&gt;" Usage="exportProvider.GetExportedValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">반환할 내보낸 개체의 형식입니다. 계약 이름은 이 형식 매개 변수에서도 파생됩니다.</typeparam>
        <summary>지정된 형식 매개 변수에서 파생된 계약 이름을 갖는 내보낸 개체를 모두 가져옵니다.</summary>
        <returns>지정된 형식 매개 변수에서 파생된 계약 이름을 갖는 내보낸 개체(있는 경우)이거나, 비어 있는 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 계약 이름은 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`입니다.  
  
 계약 이름을 사용 하 여 비교를 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 개체가 삭제되었습니다.</exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException">내보낸 내부 개체 중 하나 이상을 <paramref name="T" />로 캐스팅할 수 없습니다.</exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException">컴퍼지션 중 오류가 발생한 경우. <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" />에 발생한 오류의 컬렉션이 포함된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetExportedValues&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;T&gt; GetExportedValues&lt;T&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetExportedValues&lt;T&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValues(Of T) (contractName As String) As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetExportedValues(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExportedValues : string -&gt; seq&lt;'T&gt;" Usage="exportProvider.GetExportedValues contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">반환할 내보낸 개체의 형식입니다.</typeparam>
        <param name="contractName">반환할 내보낸 개체의 계약 이름이거나, 기본 계약 이름을 사용할 경우 <see langword="null" />이거나 빈 문자열("")입니다.</param>
        <summary>지정된 계약 이름을 갖는 내보낸 개체를 모두 가져옵니다.</summary>
        <returns>지정된 계약 이름을 갖는 내보낸 개체(있는 경우)이거나, 비어 있는 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 계약 이름을 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`입니다.  
  
 계약 이름을 사용 하 여 비교를 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 개체가 삭제되었습니다.</exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException">내보낸 내부 값 중 하나 이상을 <paramref name="T" />로 캐스팅할 수 없습니다.</exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException">컴퍼지션 중 오류가 발생한 경우. <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" />에 발생한 오류의 컬렉션이 포함된 경우</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExports">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 조건과 일치하는 내보내기를 모두 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt; GetExports(class System.ComponentModel.Composition.Primitives.ImportDefinition definition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports (definition As ImportDefinition) As IEnumerable(Of Export)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ GetExports(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition);" />
      <MemberSignature Language="F#" Value="member this.GetExports : System.ComponentModel.Composition.Primitives.ImportDefinition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.Export&gt;" Usage="exportProvider.GetExports definition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="definition">가져올 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 개체의 조건을 정의하는 개체입니다.</param>
        <summary>지정된 가져오기 정의의 조건과 일치하는 내보내기를 모두 가져옵니다.</summary>
        <returns><paramref name="definition" />으로 지정된 조건과 일치하는 모든 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 개체의 컬렉션입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" />가 <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" />이고, 지정한 <see cref="T:System.ComponentModel.Composition.Primitives.Export" />의 조건과 일치하는 <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> 개체가 없습니다.  
  
또는 
 <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" />가 <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> 또는 <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" />이고, 지정한 <see cref="T:System.ComponentModel.Composition.Primitives.Export" />의 조건과 일치하는 <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> 개체가 두 개 이상 있습니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="definition" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt; GetExports(class System.ComponentModel.Composition.Primitives.ImportDefinition definition, class System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ GetExports(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition, System::ComponentModel::Composition::Hosting::AtomicComposition ^ atomicComposition);" />
      <MemberSignature Language="F#" Value="member this.GetExports : System.ComponentModel.Composition.Primitives.ImportDefinition * System.ComponentModel.Composition.Hosting.AtomicComposition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.Export&gt;" Usage="exportProvider.GetExports (definition, atomicComposition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
        <Parameter Name="atomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
      </Parameters>
      <Docs>
        <param name="definition">가져올 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 개체의 조건을 정의하는 개체입니다.</param>
        <param name="atomicComposition">컴퍼지션의 트랜잭션 컨테이너입니다.</param>
        <summary>지정된 가져오기 정의 및 컴퍼지션의 조건과 일치하는 내보내기를 모두 가져옵니다.</summary>
        <returns><paramref name="definition" /> 및 <paramref name="atomicComposition" />으로 지정된 조건과 일치하는 모든 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 개체의 컬렉션입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" />가 <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" />이고, 지정한 <see cref="T:System.ComponentModel.Composition.Primitives.Export" />의 조건과 일치하는 <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> 개체가 없습니다.  
  
또는 
 <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" />가 <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> 또는 <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" />이고, 지정한 <see cref="T:System.ComponentModel.Composition.Primitives.Export" />의 조건과 일치하는 <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> 개체가 두 개 이상 있습니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="definition" />가 <see langword="null" />인 경우  
  
또는 
 <paramref name="atomicComposition" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;object,object&gt;&gt; GetExports (Type type, Type metadataViewType, string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`2&lt;object, object&gt;&gt; GetExports(class System.Type type, class System.Type metadataViewType, string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Lazy&lt;System::Object ^, System::Object ^&gt; ^&gt; ^ GetExports(Type ^ type, Type ^ metadataViewType, System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExports : Type * Type * string -&gt; seq&lt;Lazy&lt;obj, obj&gt;&gt;" Usage="exportProvider.GetExports (type, metadataViewType, contractName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;System.Object,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="metadataViewType" Type="System.Type" />
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">반환할 <see cref="T:System.Lazy`2" /> 개체의 형식 매개 변수입니다.</param>
        <param name="metadataViewType">반환할 <see cref="T:System.Lazy`2" /> 개체의 메타데이터 뷰 형식입니다.</param>
        <param name="contractName">반환할 <see cref="T:System.Lazy`2" /> 개체의 계약 이름이거나, 기본 계약 이름을 사용할 경우 <see langword="null" />이거나 빈 문자열("")입니다.</param>
        <summary>지정된 계약 이름을 갖는 모든 내보내기를 가져옵니다.</summary>
        <returns><paramref name="contractName" />과 일치하는 계약에 대한 모든 <see cref="T:System.Lazy`2" /> 개체의 컬렉션입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 계약 이름을 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `type`입니다.  
  
 계약 이름을 사용 하 여 비교를 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 개체가 삭제되었습니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="type" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="metadataViewType" />가 유효한 메타데이터 보기 형식이 아닙니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;T&gt;&gt; GetExports&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`1&lt;!!T&gt;&gt; GetExports&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports(Of T) () As IEnumerable(Of Lazy(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Collections::Generic::IEnumerable&lt;Lazy&lt;T&gt; ^&gt; ^ GetExports();" />
      <MemberSignature Language="F#" Value="member this.GetExports : unit -&gt; seq&lt;Lazy&lt;'T&gt;&gt;" Usage="exportProvider.GetExports " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">반환할 <see cref="T:System.Lazy`1" /> 개체의 형식 매개 변수입니다. 계약 이름은 이 형식 매개 변수에서도 파생됩니다.</typeparam>
        <summary>지정된 형식 매개 변수에서 파생된 계약 이름을 갖는 내보내기를 모두 가져옵니다.</summary>
        <returns><paramref name="T" />에서 파생된 계약 이름을 갖는 <see cref="T:System.Lazy`1" /> 개체(있는 경우)이거나, 비어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 계약 이름은 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`입니다.  
  
 계약 이름을 사용 하 여 비교를 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 개체가 삭제되었습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;T&gt;&gt; GetExports&lt;T&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`1&lt;!!T&gt;&gt; GetExports&lt;T&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports(Of T) (contractName As String) As IEnumerable(Of Lazy(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Collections::Generic::IEnumerable&lt;Lazy&lt;T&gt; ^&gt; ^ GetExports(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExports : string -&gt; seq&lt;Lazy&lt;'T&gt;&gt;" Usage="exportProvider.GetExports contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">반환할 <see cref="T:System.Lazy`1" /> 개체의 형식 매개 변수입니다.</typeparam>
        <param name="contractName">반환할 <see cref="T:System.Lazy`1" /> 개체의 계약 이름이거나, 기본 계약 이름을 사용할 경우 <see langword="null" />이거나 빈 문자열("")입니다.</param>
        <summary>지정된 계약 이름을 갖는 모든 내보내기를 가져옵니다.</summary>
        <returns>지정된 계약 이름을 갖는 <see cref="T:System.Lazy`1" /> 개체(있는 경우)이거나, 비어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 계약 이름을 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`입니다.  
  
 계약 이름을 사용 하 여 비교를 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 개체가 삭제되었습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports&lt;T,TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;T,TMetadataView&gt;&gt; GetExports&lt;T,TMetadataView&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`2&lt;!!T, !!TMetadataView&gt;&gt; GetExports&lt;T, TMetadataView&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports(Of T, TMetadataView) () As IEnumerable(Of Lazy(Of T, TMetadataView))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TMetadataView&gt;&#xA; System::Collections::Generic::IEnumerable&lt;Lazy&lt;T, TMetadataView&gt; ^&gt; ^ GetExports();" />
      <MemberSignature Language="F#" Value="member this.GetExports : unit -&gt; seq&lt;Lazy&lt;'T, 'MetadataView&gt;&gt;" Usage="exportProvider.GetExports " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;T,TMetadataView&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">반환할 <see cref="T:System.Lazy`2" /> 개체의 형식 매개 변수입니다. 계약 이름은 이 형식 매개 변수에서도 파생됩니다.</typeparam>
        <typeparam name="TMetadataView">반환할 <see cref="T:System.Lazy`2" /> 개체의 메타데이터 뷰 형식입니다.</typeparam>
        <summary>지정된 형식 매개 변수에서 파생된 계약 이름을 갖는 내보내기를 모두 가져옵니다.</summary>
        <returns><paramref name="T" />에서 파생된 계약 이름을 갖는 <see cref="T:System.Lazy`2" /> 개체(있는 경우)이거나, 비어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 계약 이름은 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`입니다.  
  
 계약 이름을 사용 하 여 비교를 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 개체가 삭제되었습니다.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="TMetadataView" />가 유효한 메타데이터 보기 형식이 아닙니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports&lt;T,TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;T,TMetadataView&gt;&gt; GetExports&lt;T,TMetadataView&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`2&lt;!!T, !!TMetadataView&gt;&gt; GetExports&lt;T, TMetadataView&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports(Of T, TMetadataView) (contractName As String) As IEnumerable(Of Lazy(Of T, TMetadataView))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TMetadataView&gt;&#xA; System::Collections::Generic::IEnumerable&lt;Lazy&lt;T, TMetadataView&gt; ^&gt; ^ GetExports(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExports : string -&gt; seq&lt;Lazy&lt;'T, 'MetadataView&gt;&gt;" Usage="exportProvider.GetExports contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;T,TMetadataView&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">반환할 <see cref="T:System.Lazy`2" /> 개체의 형식 매개 변수입니다. 계약 이름은 이 형식 매개 변수에서도 파생됩니다.</typeparam>
        <typeparam name="TMetadataView">반환할 <see cref="T:System.Lazy`2" /> 개체의 메타데이터 뷰 형식입니다.</typeparam>
        <param name="contractName">반환할 <see cref="T:System.Lazy`2" /> 개체의 계약 이름이거나, 기본 계약 이름을 사용할 경우 <see langword="null" />이거나 빈 문자열("")입니다.</param>
        <summary>지정된 계약 이름을 갖는 모든 내보내기를 가져옵니다.</summary>
        <returns>지정된 계약 이름을 갖는 <see cref="T:System.Lazy`2" /> 개체(있는 경우)이거나, 비어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 계약 이름을 호출의 결과 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> 메서드를 `T`입니다.  
  
 계약 이름을 사용 하 여 비교를 <xref:System.StringComparer.Ordinal%2A> 대/소문자 구분, 비 언어적 비교를 수행 하는 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 개체가 삭제되었습니다.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="TMetadataView" />가 유효한 메타데이터 보기 형식이 아닙니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetExportsCore">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; GetExportsCore (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt; GetExportsCore(class System.ComponentModel.Composition.Primitives.ImportDefinition definition, class System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ GetExportsCore(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition, System::ComponentModel::Composition::Hosting::AtomicComposition ^ atomicComposition);" />
      <MemberSignature Language="F#" Value="abstract member GetExportsCore : System.ComponentModel.Composition.Primitives.ImportDefinition * System.ComponentModel.Composition.Hosting.AtomicComposition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.Export&gt;" Usage="exportProvider.GetExportsCore (definition, atomicComposition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
        <Parameter Name="atomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
      </Parameters>
      <Docs>
        <param name="definition">반환할 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 개체의 조건을 정의하는 개체입니다.</param>
        <param name="atomicComposition">컴퍼지션의 트랜잭션 컨테이너입니다.</param>
        <summary>지정된 정의에 의해 정의된 제약 조건과 일치하는 내보내기를 모두 가져옵니다.</summary>
        <returns>지정된 조건과 일치하는 내보내기가 모두 포함되는 컬렉션입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드의 재정의 카디널리티 관련 불일치 오류로 취급 하지 않아야 하 고 이러한 경우 예외를 throw 하지 않아야 합니다. 예를 들어 경우 <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality%2A> 됩니다 <xref:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne> 0 되며 <xref:System.ComponentModel.Composition.Primitives.Export> 지정 된 조건과 일치 하는 개체 <xref:System.ComponentModel.Composition.Primitives.ImportDefinition>, 빈 <xref:System.Collections.Generic.IEnumerable%601> 컬렉션을 반환 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExportsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnExportsChanged (System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnExportsChanged(class System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnExportsChanged (e As ExportsChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnExportsChanged(System::ComponentModel::Composition::Hosting::ExportsChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnExportsChanged : System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs -&gt; unit&#xA;override this.OnExportsChanged : System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs -&gt; unit" Usage="exportProvider.OnExportsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />입니다.</param>
        <summary><see cref="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExportsChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnExportsChanging (System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnExportsChanging(class System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnExportsChanging (e As ExportsChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnExportsChanging(System::ComponentModel::Composition::Hosting::ExportsChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnExportsChanging : System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs -&gt; unit&#xA;override this.OnExportsChanging : System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs -&gt; unit" Usage="exportProvider.OnExportsChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />입니다.</param>
        <summary><see cref="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetExports">
      <MemberSignature Language="C#" Value="public bool TryGetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition, out System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; exports);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetExports(class System.ComponentModel.Composition.Primitives.ImportDefinition definition, class System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition, [out] class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt;&amp; exports) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetExports(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition, System::ComponentModel::Composition::Hosting::AtomicComposition ^ atomicComposition, [Runtime::InteropServices::Out] System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ % exports);" />
      <MemberSignature Language="F#" Value="member this.TryGetExports : System.ComponentModel.Composition.Primitives.ImportDefinition * System.ComponentModel.Composition.Hosting.AtomicComposition *  -&gt; bool" Usage="exportProvider.TryGetExports (definition, atomicComposition, exports)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
        <Parameter Name="atomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
        <Parameter Name="exports" Type="System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="definition">가져올 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 개체의 조건을 정의하는 개체입니다.</param>
        <param name="atomicComposition">컴퍼지션의 트랜잭션 컨테이너입니다.</param>
        <param name="exports">이 메서드가 반환될 경우 <see cref="T:System.ComponentModel.Composition.Primitives.Export" />에 의해 정의된 조건과 일치하는 <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> 개체(있는 경우)의 컬렉션을 포함하며, 그렇지 않은 경우 비어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 개체입니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
        <summary>지정된 가져오기의 조건과 일치하는 내보내기를 모두 가져옵니다.</summary>
        <returns><see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" />가 <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> 또는 <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrMore" />이고, 지정한 <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />의 조건과 일치하는 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 개체가 없는 경우 <see langword="true" />입니다. <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" />가 <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> 또는 <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" />이고 <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />의 조건과 일치하는 <see cref="T:System.ComponentModel.Composition.Primitives.Export" />가 정확히 하나인 경우 <see langword="true" />이고 그렇지 않은 경우 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="definition" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
  </Members>
</Type>