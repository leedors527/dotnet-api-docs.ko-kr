<Type Name="BasicDesignerLoader" FullName="System.ComponentModel.Design.Serialization.BasicDesignerLoader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a83de3ae5b12bdc646e43ce9807a4fa104517712" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53486854" /></Metadata><TypeSignature Language="C#" Value="public abstract class BasicDesignerLoader : System.ComponentModel.Design.Serialization.DesignerLoader, System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BasicDesignerLoader extends System.ComponentModel.Design.Serialization.DesignerLoader implements class System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BasicDesignerLoader&#xA;Inherits DesignerLoader&#xA;Implements IDesignerLoaderService" />
  <TypeSignature Language="C++ CLI" Value="public ref class BasicDesignerLoader abstract : System::ComponentModel::Design::Serialization::DesignerLoader, System::ComponentModel::Design::Serialization::IDesignerLoaderService" />
  <TypeSignature Language="F#" Value="type BasicDesignerLoader = class&#xA;    inherit DesignerLoader&#xA;    interface IDesignerLoaderService" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.DesignerLoader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.IDesignerLoaderService</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" /> 인터페이스의 구현을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 전체 지 속성 형식으로 관련 된 항목이 없는 디자이너 로더를 구현 합니다. <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 텍스트 또는 이진 지 속성을 지정 하지 않습니다 하지만 다음과 같은 기능이 지원지 않습니다.  
  
-   여러 종속성을 로드 합니다.  
  
-   디자이너 내에서 변경 내용을 추적 합니다.  
  
-   유휴 시간을 다시 로드를 지연 합니다.  
  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 디자이너 호스트의 서비스 컨테이너에 두 종류의 서비스를 추가 합니다: 대체 가능한 서비스 및 대체할 수 없는 서비스입니다. 보호 되는 값을 변경 하 여 대체 가능 서비스를 바꿀 수 있습니다 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A> 속성입니다. 해당 구현은 서로 종속 되어 있으므로 대체할 수 없는 서비스를 바꿀 수 없습니다.  
  
 다음 표에서 기본적으로 제공 되는 서비스를 설명 합니다.  
  
|기본 서비스|설명|  
|---------------------|-----------------|  
|<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>|개체는 디자이너가 재 로딩 자체가 유휴 상태일 때 요청을 허용 합니다. 대체할 수 있는 서비스입니다.|  
|<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>|개체 serialize 및 deserialize 하는 데 사용 합니다. 개체 serialization을 수행 해야 하는 serialization 관리자에 추가 된 모든 serialization 공급자를 활용할 수 있도록 serialization 관리자 서비스로 추가 됩니다. 대체할 수 없는 서비스입니다.|  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">시스템 리소스에 대 한 전체 액세스 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다. 연결 된 상태:</permission>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BasicDesignerLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BasicDesignerLoader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public override void BeginLoad (System.ComponentModel.Design.Serialization.IDesignerLoaderHost host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void BeginLoad(class System.ComponentModel.Design.Serialization.IDesignerLoaderHost host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub BeginLoad (host As IDesignerLoaderHost)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void BeginLoad(System::ComponentModel::Design::Serialization::IDesignerLoaderHost ^ host);" />
      <MemberSignature Language="F#" Value="override this.BeginLoad : System.ComponentModel.Design.Serialization.IDesignerLoaderHost -&gt; unit" Usage="basicDesignerLoader.BeginLoad host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
      </Parameters>
      <Docs>
        <param name="host">로드할 디자이너 로더 호스트입니다.</param>
        <summary>로드 프로세스를 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이것은 추상 구현의 <xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A?displayProperty=nameWithType> 메서드. 사용자 지정 클래스에서이 메서드를 재정의할 필요가 없습니다. <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> 메서드는 다음 작업을 수행 합니다.  
  
-   디자인 화면 이미 로드 되지 않은 확인 합니다.  
  
-   이 첫 번째 호출에서 추가 관련 서비스 및 호출 된 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A> 메서드.  
  
-   호출 된 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>, 및 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> 메서드.  
  
 하지 디자이너 로더 서비스가 서비스 컨테이너에서 제거 된 경우 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> 호출을 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A> 및 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> 메서드 대신를 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> 및 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> 메서드. 이 디자이너 로더가 서비스 호출의 경우 이때에서 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> 고 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="host" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">디자이너가 이미 로드되었거나, 다른 디자이너 로더 호스트를 사용하여 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />가 호출된 경우</exception>
        <exception cref="T:System.ObjectDisposedException"><paramref name="host" />이 삭제되었습니다.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="override this.Dispose : unit -&gt; unit" Usage="basicDesignerLoader.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />에서 사용하는 리소스를 해제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 된 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> 메서드가 변경 내용을 디자이너 로더에 플러시하지 않습니다. 저장 될 변경 내용이 호출 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> 호출 하기 전에 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>입니다.  
  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> 사용을 마치면 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>를 호출합니다. <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> 메서드를 사용하면 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>를 사용할 수 없게 됩니다. 호출한 후 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>에 대 한 모든 참조를 해제 해야 합니다 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 가비지 수집기에서 메모리를 회수할 수 있도록 하는 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 차지한 합니다. 자세한 내용은 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 하 고 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  
  
> [!NOTE]
>  <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>를 호출하십시오. 이렇게 하지 않으면 가비지 수집기가 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableComponentNotification">
      <MemberSignature Language="C#" Value="protected virtual bool EnableComponentNotification (bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool EnableComponentNotification(bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EnableComponentNotification (enable As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool EnableComponentNotification(bool enable);" />
      <MemberSignature Language="F#" Value="abstract member EnableComponentNotification : bool -&gt; bool&#xA;override this.EnableComponentNotification : bool -&gt; bool" Usage="basicDesignerLoader.EnableComponentNotification enable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enable"><see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />에 의한 구성 요소 알림을 사용하려면 <see langword="true" />이고, <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />에 의한 구성 요소 알림을 사용하지 않으려면 <see langword="false" />입니다.</param>
        <summary><see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />에 의한 구성 요소 알림을 활성화 또는 비활성화합니다.</summary>
        <returns>이 호출 전에 구성 요소 알림이 설정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="basicDesignerLoader.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>디자이너 로더의 보류 중인 변경 사항을 플러시합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 디자이너 로더가 로드 되지 않은 또는 수정 하는 대로 표시 되지 않은 경우는 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> 메서드가 즉시 반환 됩니다. 그렇지 않으면 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> serialization 세션을 만들려면 serialization 관리자를 요청 하 고 호출 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="member this.GetService : Type -&gt; obj" Usage="basicDesignerLoader.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">서비스의 <see cref="T:System.Type" />입니다.</param>
        <summary>요청한 서비스를 가져옵니다.</summary>
        <returns>요청한 서비스이거나, 요청한 서비스가 없으면 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService%2A> 파생 된 클래스를 허용 하는 도우미 메서드는 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 디자이너 로더 호스트에서 제공 하는 서비스에 액세스 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="basicDesignerLoader.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>서비스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A> 메서드는 처음 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> 가 호출 됩니다. 지금은 디자이너 로더 호스트 하는 데 필요한 모든 서비스를 추가할 수 있습니다. 서비스를 추가 하는 기본 구현을 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 제공 하므로 기본 구현을 호출한 후 기존 서비스를 바꿀 수 있습니다. 재정의 하 여 여기에 추가 하는 모든 사용자 지정 서비스를 제거 해야 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 초기화되지 않은 경우</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 삭제된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="IsReloadNeeded">
      <MemberSignature Language="C#" Value="protected virtual bool IsReloadNeeded ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsReloadNeeded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsReloadNeeded () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsReloadNeeded();" />
      <MemberSignature Language="F#" Value="abstract member IsReloadNeeded : unit -&gt; bool&#xA;override this.IsReloadNeeded : unit -&gt; bool" Usage="basicDesignerLoader.IsReloadNeeded " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>디자이너가 다시 로드될지 여부를 나타냅니다.</summary>
        <returns>디자이너를 다시 로드해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본 구현에서는 항상 <see langword="true" />을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded%2A> 메서드를 사용 하 여 일부 디자이너 로더 다시 로드를 최적화 합니다. 디자이너 로더가 지원 지능형 다시 로드 하는 경우이 메서드를 재정의할 수 있습니다. 일부 디자이너 로더 해당 기본 문서에 대 한 변경 내용을 검색 하 고 디자이너의 다시 로드 하는 실제로 필요한 경우 확인할 수 있습니다. 그렇지 않으면 반환 해야 하는 경우 `false` 이 메서드에서 합니다. 기본 구현에서는 항상 반환 `true`, 호출을 나타내는 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A> 성공적으로 수행 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoaderHost">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.Serialization.IDesignerLoaderHost LoaderHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.IDesignerLoaderHost LoaderHost" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property LoaderHost As IDesignerLoaderHost" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::Serialization::IDesignerLoaderHost ^ LoaderHost { System::ComponentModel::Design::Serialization::IDesignerLoaderHost ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoaderHost : System.ComponentModel.Design.Serialization.IDesignerLoaderHost" Usage="System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.IDesignerLoaderHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>로더 호스트를 가져옵니다.</summary>
        <value><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 메서드에 전달된 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는이 디자이너 로더가 지정한 로더 호스트를 반환 합니다. 이 수 `null` 경우 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> 아직 호출 되지 않은 아니면이 디자이너 로더가 삭제 되었습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 초기화되지 않은 경우</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 삭제된 경우</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
      </Docs>
    </Member>
    <Member MemberName="Loading">
      <MemberSignature Language="C#" Value="public override bool Loading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Loading" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Loading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Loading { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Loading : bool" Usage="System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>디자이너 로더가 디자인 화면을 로드하고 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>디자이너 로더가 디자인 화면을 현재 로드하고 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 클래스를 제공 합니다 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>는 부하 종속성을 지원 합니다. 이 속성은 계정 및가 로드 종속성 반환 `true` 모든 미해결 부하 종속 된 경우.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modified">
      <MemberSignature Language="C#" Value="protected virtual bool Modified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Modified" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property Modified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool Modified { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Modified : bool with get, set" Usage="System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>디자이너가 수정되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>디자이너가 수정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 디자이너 로더가 디자이너 수정 되었다는 사실을 감지 하는 경우를 결정 합니다. 이 속성이 `true` 때 디자이너 로더의 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> 메서드가 호출 되 면 디자이너 로더를 호출 합니다 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginLoad">
      <MemberSignature Language="C#" Value="protected virtual void OnBeginLoad ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeginLoad() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeginLoad ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeginLoad();" />
      <MemberSignature Language="F#" Value="abstract member OnBeginLoad : unit -&gt; unit&#xA;override this.OnBeginLoad : unit -&gt; unit" Usage="basicDesignerLoader.OnBeginLoad " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>로드가 곧 시작된다고 디자이너 로더에 알립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> 메서드를 호출 하 여 로드 프로세스를 시작 합니다. 이 이번에는 로드 하기 위해 필요한 초기화를 수행 해야 합니다. 이 메서드 실제 로드 하는 데 쓰일 수 없습니다. 변경 알림을 사용 하지 않도록 설정 하 고 설정 하는 기본 구현은 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 로드 합니다.  
  
 구현 하는 경우 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> 호출 종속 로드가 지원을 제공 해야 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> 첫 번째 종속 로드가 발생 하는 경우. 호출 된 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> 메서드를 마지막으로 호출한 후의 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> 메서드. 기본적으로 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 구현 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> 하 고이를 수행 합니다. 하는 경우 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> 사용할 수 없는 경우 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> 가 호출 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> 직접 호출 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>합니다.  
  
 사용자 고유의 로더 서비스를 제공 하는 경우 또는 로더 서비스를 제공 하지 않으려는 경우이 메서드를 호출 하는 것에 대 한 담당 합니다. 합니다 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> 메서드는 직접 호출 하 여이 호출을 자동으로 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A> 경우 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> 를 사용할 수 또는 직접 없는 경우.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginUnload">
      <MemberSignature Language="C#" Value="protected virtual void OnBeginUnload ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeginUnload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeginUnload ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeginUnload();" />
      <MemberSignature Language="F#" Value="abstract member OnBeginUnload : unit -&gt; unit&#xA;override this.OnBeginUnload : unit -&gt; unit" Usage="basicDesignerLoader.OnBeginUnload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>언로드가 곧 시작된다고 디자이너 로더에 알립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload%2A> 디자이너 로더가 문서 언로드되려고 할 때 메서드가 호출 됩니다.  
  
 문서 다시 로드 하는 것에 대 한 준비 언로드되기 아니면 문서를 로드 하지 못했습니다. 문서 관련 서비스를 추가한 경우 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> 또는 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>, 여기서 제거 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndLoad">
      <MemberSignature Language="C#" Value="protected virtual void OnEndLoad (bool successful, System.Collections.ICollection errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndLoad(bool successful, class System.Collections.ICollection errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndLoad (successful As Boolean, errors As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndLoad(bool successful, System::Collections::ICollection ^ errors);" />
      <MemberSignature Language="F#" Value="abstract member OnEndLoad : bool * System.Collections.ICollection -&gt; unit&#xA;override this.OnEndLoad : bool * System.Collections.ICollection -&gt; unit" Usage="basicDesignerLoader.OnEndLoad (successful, errors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errors" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful">로드가 성공적으로 완료되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="errors">오류로 보고된 개체(대개, 예외)가 들어 있는 <see cref="T:System.Collections.ICollection" />입니다.</param>
        <summary>로드가 완료되었음을 디자이너 로더에 알립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> 로드 완료 되 면 메서드가 호출 됩니다. 항상 라고를 로드 하는 동안 예외가 발생 하는 경우에 합니다. 변수의 `successful` 로 설정 됩니다 `true` 로드가 성공 하는 경우 또는 `false` 오류가 발생 한 경우. `errors` 컬렉션 오류로 보고 된 개체에 포함 됩니다. 일반적으로 이러한 개체는 예외입니다.  
  
 구현 하는 경우 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> 호출 종속 로드가 지원을 제공 해야 합니다 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> 메서드를 마지막으로 호출한 후의 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> 메서드. 기본적으로 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 구현 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> 하 고이를 수행 합니다. 하는 경우 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> 사용할 수 없는 경우 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> 가 호출 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> 직접 호출 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> 호출한 후 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>합니다.  
  
 모든 종속 로드가 완료 되 면 디자이너 로더 서비스에서이 메서드를 호출 해야 합니다.  에 의해 시작 된는 로드 프로세스를 중지 하는이 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> 메서드. 사용자 고유의 로더 서비스를 제공 하는 경우 또는 로더 서비스를 제공 하지 않으려는 경우이 메서드를 호출 하는 것에 대 한 담당 합니다. 합니다 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> 메서드를 자동으로 호출 하거나 직접 호출 하 여이 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> 메서드 경우 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> 를 사용할 수 또는 직접 없는 경우.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 초기화되지 않은 경우</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 삭제된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="OnModifying">
      <MemberSignature Language="C#" Value="protected virtual void OnModifying ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModifying() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModifying ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModifying();" />
      <MemberSignature Language="F#" Value="abstract member OnModifying : unit -&gt; unit&#xA;override this.OnModifying : unit -&gt; unit" Usage="basicDesignerLoader.OnModifying " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>문서 상태가 곧 수정될 것임을 디자이너 로더에 알립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying%2A> 구성 요소 변경에 대 한 응답에 추가 하는 메서드를 호출 하거나 제거 하 고 디자이너를 나타내는 이벤트를 수정할 수 있습니다. 이 메서드를 재정의 하 여 소스 코드 제어를 구현할 수 있습니다. 에 대 한 호출 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying%2A> 되지는지 않습니다 합니다 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified%2A> 속성은 나중 설정 `true`; 이렇게 하려면 의도 의미일 뿐입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformFlush">
      <MemberSignature Language="C#" Value="protected abstract void PerformFlush (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PerformFlush(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub PerformFlush (serializationManager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void PerformFlush(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager);" />
      <MemberSignature Language="F#" Value="abstract member PerformFlush : System.ComponentModel.Design.Serialization.IDesignerSerializationManager -&gt; unit" Usage="basicDesignerLoader.PerformFlush serializationManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="serializationManager">로드된 디자이너의 상태를 유지하는 데 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</param>
        <summary>디자이너의 모든 변경 사항을 플러시합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A> 디자이너에 변경한 내용을 지 속성을 플러시하지 디자이너 로더가 해야 하는 경우 메서드가 호출 됩니다. 에 대 한 호출에 대 한 응답에서 호출 되는 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="PerformLoad">
      <MemberSignature Language="C#" Value="protected abstract void PerformLoad (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PerformLoad(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub PerformLoad (serializationManager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void PerformLoad(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager);" />
      <MemberSignature Language="F#" Value="abstract member PerformLoad : System.ComponentModel.Design.Serialization.IDesignerSerializationManager -&gt; unit" Usage="basicDesignerLoader.PerformLoad serializationManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="serializationManager">디자이너의 상태를 로드하는 데 사용할 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />입니다.</param>
        <summary>지속성 항목으로부터 디자이너를 로드합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A> 디자이너 로더가 해당 상태를 로드 해야 할 때 메서드가 호출 됩니다. <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A> 전에 호출 되는 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> 메서드. 디자이너 콘텐츠를 로드 하려면이 메서드를 구현 해야 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="PropertyProvider">
      <MemberSignature Language="C#" Value="protected object PropertyProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PropertyProvider" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Property PropertyProvider As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Object ^ PropertyProvider { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PropertyProvider : obj with get, set" Usage="System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>로더에서 사용하는 serialization 관리자의 속성 공급자를 가져오거나 설정합니다.</summary>
        <value>serialization 관리자에 속성을 제공할 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Serialization 관리자 제공을 `Properties` 특정 필요에 맞게 해당 serialization을 사용자 지정 하는 serializer에서 읽을 수 있는 기본 인터페이스의 속성입니다. Serializer에 의해 검사 되는 속성을 사용 하는 직렬 변환기의 형식에 따라 달라 집니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 초기화되지 않은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="protected void Reload (System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions flags);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Reload(valuetype System.ComponentModel.Design.Serialization.BasicDesignerLoader/ReloadOptions flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Reload (flags As BasicDesignerLoader.ReloadOptions)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Reload(System::ComponentModel::Design::Serialization::BasicDesignerLoader::ReloadOptions flags);" />
      <MemberSignature Language="F#" Value="member this.Reload : System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions -&gt; unit" Usage="basicDesignerLoader.Reload flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.ComponentModel.Design.Serialization.BasicDesignerLoader+ReloadOptions" />
      </Parameters>
      <Docs>
        <param name="flags"><see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" /> 값의 비트 조합입니다.</param>
        <summary>디자이너의 다시 로드를 큐에 대기시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A> 디자이너의 다시 로드 요청을 디자이너 로더에 의해 메서드를 호출할 수 있습니다. 다시 로드 하는 유휴 시간에 수행 되므로,이 메서드가 실제로 다시 로드 하지 않습니다 디자이너; 방금 다시 로드를 큐 대기 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" />
      </Docs>
    </Member>
    <Member MemberName="ReloadPending">
      <MemberSignature Language="C#" Value="protected bool ReloadPending { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReloadPending" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ReloadPending As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool ReloadPending { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ReloadPending : bool" Usage="System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>다시 로드 작업이 큐에 대기되었는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> 호출로 다시 로드 요청이 큐에 대기되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" />
      </Docs>
    </Member>
    <Member MemberName="ReportFlushErrors">
      <MemberSignature Language="C#" Value="protected virtual void ReportFlushErrors (System.Collections.ICollection errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReportFlushErrors(class System.Collections.ICollection errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ReportFlushErrors (errors As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ReportFlushErrors(System::Collections::ICollection ^ errors);" />
      <MemberSignature Language="F#" Value="abstract member ReportFlushErrors : System.Collections.ICollection -&gt; unit&#xA;override this.ReportFlushErrors : System.Collections.ICollection -&gt; unit" Usage="basicDesignerLoader.ReportFlushErrors errors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errors" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="errors">오류 개체(대개, 예외)가 들어 있는 <see cref="T:System.Collections.ICollection" />입니다.</param>
        <summary>변경 사항을 플러시하는 동안 발생한 오류를 보고합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors%2A> 메서드는 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> 변경 사항을 플러시하는 동안 하나 이상의 오류가 발생 하는 경우. 값을 `errors` 예외 또는 사용 하 여 개체 컬렉션 일 수 있습니다 <xref:System.Object.ToString%2A> 오류를 설명 하는 값입니다. 기본 구현을 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors%2A> 컬렉션의 마지막 예외를 발생 시킵니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">변경 사항을 플러시하는 동안 하나 이상의 오류가 발생한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SetBaseComponentClassName">
      <MemberSignature Language="C#" Value="protected void SetBaseComponentClassName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetBaseComponentClassName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetBaseComponentClassName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetBaseComponentClassName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.SetBaseComponentClassName : string -&gt; unit" Usage="basicDesignerLoader.SetBaseComponentClassName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">디자인할 구성 요소의 전체 이름을 나타내는 문자열입니다.</param>
        <summary>기본 구성 요소의 전체 클래스 이름을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName%2A> 로드 하는 디자이너에서 디자인 하는 구성 요소의 전체 이름을 설정 하는 동안 메서드를 호출 해야 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency">
      <MemberSignature Language="C#" Value="void IDesignerLoaderService.AddLoadDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" />
      <MemberSignature Language="VB.NET" Value="Sub AddLoadDependency () Implements IDesignerLoaderService.AddLoadDependency" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency() = System::ComponentModel::Design::Serialization::IDesignerLoaderService::AddLoadDependency;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />에서 관리하는 로드 프로세스의 일부로 외부 구성 요소를 등록합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 된 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> 로드 프로세스에 참여 하는 각 외부 개체에 한 번씩 메서드. <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> 메서드 로드 프로세스의 작업을 수행 하는 경우 호출 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 초기화되지 않은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete">
      <MemberSignature Language="C#" Value="void IDesignerLoaderService.DependentLoadComplete (bool successful, System.Collections.ICollection errorCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(bool successful, class System.Collections.ICollection errorCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Sub DependentLoadComplete (successful As Boolean, errorCollection As ICollection) Implements IDesignerLoaderService.DependentLoadComplete" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(bool successful, System::Collections::ICollection ^ errorCollection) = System::ComponentModel::Design::Serialization::IDesignerLoaderService::DependentLoadComplete;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errorCollection" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful">성공적으로 로드하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="errorCollection">로드하는 동안 발생한 오류가 들어 있는 <see cref="T:System.Collections.ICollection" />입니다.</param>
        <summary>종속 로드가 종료되었음을 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> 종속 로드 작업이 완료 되었음을 알리기 위해 호출 됩니다. 호출 된 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> 메서드를 호출 하 여 등록 된 모든 프로세스에 한 번씩를 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> 메서드를 이미 완료 되었습니다.  
  
 경우 종속 로드가 성공 하면 호출자에 게 집합을 `successful` 매개 변수를 `true` 빈 컬렉션을 전달 또는 `null` 에 `errorCollection` 매개 변수입니다. 종속 로드 오류가 발생 하는 경우 호출자에 게 설정 합니다 `successful` 매개 변수를 `false` 실패 한 이유를 나타내는 예외 컬렉션을 전달 합니다 `errorCollection` 매개 변수.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" />가 로드 종속성을 추가하지 않았거나, <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 초기화되지 않은 경우</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />가 삭제된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload">
      <MemberSignature Language="C#" Value="bool IDesignerLoaderService.Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload" />
      <MemberSignature Language="VB.NET" Value="Function Reload () As Boolean Implements IDesignerLoaderService.Reload" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload() = System::ComponentModel::Design::Serialization::IDesignerLoaderService::Reload;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>디자인 문서를 다시 로드합니다.</summary>
        <returns>다시 로드 요청이 받아들여지면 <see langword="true" />이고, 로더가 다시 로드를 허용하지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출할 수 있는 모든 개체는 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23Reload%2A> 로더가 디자인 문서를 다시 로드를 요청 하는 방법입니다. 디자이너 로더를 반환할 수 있습니다 하는 경우 로더 재 로딩을 지원 하 고 다시 로드를 사용 하 여 준수, `true`합니다. 그러지 않으면 반환 `false`를 나타내는 다시 로드가 발생 하지 것입니다. 호출자가 즉시; 발생 하는 다시 로드를 사용할 수 없습니다. 디자이너 로더는이 다른 시간에 예약할 수 있습니다 또는 한 번에 디자이너를 다시 로드를 시도할 수 있습니다.  
  
 디자이너를 다시 로드할 수 없는 경우 호출자에 게 사용자에 게 메시지를 표시할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>