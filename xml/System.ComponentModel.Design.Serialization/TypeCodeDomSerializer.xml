<Type Name="TypeCodeDomSerializer" FullName="System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f14e9f0b34bf08ae3d85680b5436c08133c23ff1" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55356381" /></Metadata><TypeSignature Language="C#" Value="public class TypeCodeDomSerializer : System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeCodeDomSerializer extends System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeCodeDomSerializer&#xA;Inherits CodeDomSerializerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeCodeDomSerializer : System::ComponentModel::Design::Serialization::CodeDomSerializerBase" />
  <TypeSignature Language="F#" Value="type TypeCodeDomSerializer = class&#xA;    inherit CodeDomSerializerBase" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.CodeDomSerializerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DefaultSerializationProvider(typeof(System.ComponentModel.Design.Serialization.CodeDomSerializationProvider))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>개체를 새 형식으로 serialize합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> 클래스와 동일한 작업을 수행을 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>, 새 형식 정의이 클래스를 통해 개체를 직렬화 합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
    <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">동적 소스 코드 생성 및 컴파일</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeCodeDomSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeCodeDomSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public virtual object Deserialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Deserialize (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Deserialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; obj&#xA;override this.Deserialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; obj" Usage="typeCodeDomSerializer.Deserialize (manager, declaration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="manager">serialization에 사용할 serialization 관리자입니다.</param>
        <param name="declaration">serialization에 사용할 형식 선언입니다.</param>
        <summary>지정된 형식 선언을 deserialize합니다.</summary>
        <returns>루트 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> 메서드는 이전에 serialize 된 코드 형식 선언을 deserialize 합니다. 다음 표에서 수행 하는 작업의 기본 구현을 보여 줍니다.  
  
|작업|설명|  
|----------|-----------------|  
|대/소문자 확인|구현에 대 한 검색을 <xref:System.CodeDom.Compiler.CodeDomProvider> 대/소문자 구분 또는 대/소문자 구분 멤버를 처리 하는 경우를 결정 하는 서비스입니다.|  
|문 정렬|모든 멤버 변수와 init 메서드에서 지역 변수는 테이블에 저장 됩니다. Init 메서드에서 각 문 왼쪽 부분에 따라 그룹으로 할당 하거나 특정 변수에서 작동 하는 모든 문은 해당 변수 아래에 그룹화 된 문 컬렉션에 추가 됩니다. 문이 없는 변수는 무시 됩니다.|  
|Deserialization|각 변수에 대 한 문 컬렉션은 변수에 따라 역직렬화 됩니다.|  
  
 다음 표에서 서비스는 <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> 메서드에 필요 합니다.  
  
|서비스|설명|  
|-------------|-----------------|  
|<xref:System.CodeDom.Compiler.CodeDomProvider>|반드시 필요 하지 하는 동안 서비스에 사용 가능한 경우 됩니다 결정 하는 경우 serialization 대/소문자 구분 또는 대/소문자 구분.|  
|<xref:System.ComponentModel.IContainer>|없으면 개체 이름 테이블에 대 한 쿼리를 deserialization 도중 <xref:System.ComponentModel.IContainer> 이루어집니다. 이 쿼리가 성공 하면 개체에 대 한 컨테이너를 확인 합니다. 컨테이너 구성 요소에 필요한 모든 컨테이너 인수에 대해 대체물으로도 사용 됩니다.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" /> 또는 <paramref name="typeDecl" />가 <see langword="null" />인 경우</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">동적 소스 코드 생성 및 컴파일</related>
      </Docs>
    </Member>
    <Member MemberName="GetInitializeMethod">
      <MemberSignature Language="C#" Value="protected virtual System.CodeDom.CodeMemberMethod GetInitializeMethod (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeMemberMethod GetInitializeMethod(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetInitializeMethod (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration, value As Object) As CodeMemberMethod" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::CodeDom::CodeMemberMethod ^ GetInitializeMethod(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializeMethod : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration * obj -&gt; System.CodeDom.CodeMemberMethod&#xA;override this.GetInitializeMethod : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration * obj -&gt; System.CodeDom.CodeMemberMethod" Usage="typeCodeDomSerializer.GetInitializeMethod (manager, declaration, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">serialization에 사용할 serialization 관리자입니다.</param>
        <param name="declaration">Serialization에 사용할 형식 선언입니다.</param>
        <param name="value">serialization에 사용할 값입니다.</param>
        <summary>멤버 serialize에 사용되는 문을 저장하는 메서드를 반환합니다.</summary>
        <returns>지정된 멤버의 모든 초기화 코드를 내보내는 데 사용되는 메서드입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A> 메서드를 지정 된 멤버의 모든 초기화 코드를 내보내는 메서드를 반환 합니다. 기본 구현에서는 빈 생성자를 반환 합니다. 동일한 메서드가 여러 값에 대해 반환 될 경우 동일한 인스턴스 메서드의 반환 되어야 합니다. 사용할 수는 <xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=nameWithType> 사전을 만든 메서드를 기억해 야 합니다. `typeDecl` 매개 변수를 사용 하 여 인프라 메서드를 추가할 수도 있습니다. 예를 들어, 각 개체에 대 한 별도 메서드를 내보내는 하려는 경우에 이러한 모든 메서드를 차례로 호출 하는 단일 메서드가 필요 합니다. 이 메서드는 필요에 따라 코드 형식 선언에 추가할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" />, <paramref name="typeDecl" /> 또는 <paramref name="value" />가 <see langword="null" />입니다.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">동적 소스 코드 생성 및 컴파일</related>
      </Docs>
    </Member>
    <Member MemberName="GetInitializeMethods">
      <MemberSignature Language="C#" Value="protected virtual System.CodeDom.CodeMemberMethod[] GetInitializeMethods (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeMemberMethod[] GetInitializeMethods(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetInitializeMethods (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration) As CodeMemberMethod()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::CodeDom::CodeMemberMethod ^&gt; ^ GetInitializeMethods(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializeMethods : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; System.CodeDom.CodeMemberMethod[]&#xA;override this.GetInitializeMethods : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; System.CodeDom.CodeMemberMethod[]" Usage="typeCodeDomSerializer.GetInitializeMethods (manager, declaration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="manager">serialization에 사용할 serialization 관리자입니다.</param>
        <param name="declaration">Serialization에 사용할 형식 선언입니다.</param>
        <summary>deserialization을 수행하는 동안 해석될 메서드 배열을 반환합니다.</summary>
        <returns>deserialization을 수행하는 동안 해석될 메서드의 <see cref="T:System.CodeDom.CodeMemberMethod" /> 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 구현에서는 생성자를 사용 하 여 단일 요소 배열을 반환 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" /> 또는 <paramref name="typeDecl" />가 <see langword="null" />인 경우</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">동적 소스 코드 생성 및 컴파일</related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeTypeDeclaration Serialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object root, System.Collections.ICollection members);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeTypeDeclaration Serialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object root, class System.Collections.ICollection members) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Serialize (manager As IDesignerSerializationManager, root As Object, members As ICollection) As CodeTypeDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeTypeDeclaration ^ Serialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ root, System::Collections::ICollection ^ members);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.Collections.ICollection -&gt; System.CodeDom.CodeTypeDeclaration&#xA;override this.Serialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.Collections.ICollection -&gt; System.CodeDom.CodeTypeDeclaration" Usage="typeCodeDomSerializer.Serialize (manager, root, members)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="root" Type="System.Object" />
        <Parameter Name="members" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="manager">serialization에 사용할 serialization 관리자입니다.</param>
        <param name="root">serialize할 개체입니다.</param>
        <param name="members">멤버의 선택적 컬렉션입니다. <see langword="null" />이거나 비어 있을 수 있습니다.</param>
        <summary>루트를 정의하는 새로운 형식 선언을 만들어 개체 루트를 serialize합니다.</summary>
        <returns>루트 개체를 정의하는 <see cref="T:System.CodeDom.CodeTypeDeclaration" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> 메서드는 지정 된 루트 개체와 새 형식 정의를 만들려면 멤버의 선택적 컬렉션을 serialize 합니다. 경우는 `members` 값을 포함 하는 컬렉션, 이러한 값은 직렬화 됩니다. 값 자체 멤버 변수 또는 지역 변수도 serialize 될 수 있습니다. 호출 된 개체에 확장 속성을 검색 하 여이 결정이 이루어집니다 `GenerateMember`합니다. 경우 `true`, 멤버 생성 됩니다. 그렇지 않은 경우 로컬 변수 생성 됩니다. 편의 위해는 `members` 컬렉션 루트 개체를 포함할 수 있습니다. 이 경우 루트 개체 멤버 또는 로컬 변수로 추가 되지 않습니다.  
  
 명명 된 개체를 마치는 반환 된 형식의 이름은 루트 개체의 이름에서 가져옵니다. 그렇지 않은 경우 이름을 루트 클래스의 단순 형식 이름에서 만들어집니다.  
  
 다음 표에서 기본 구현에 의해 수행 되는 작업은 <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> 메서드.  
  
|작업|설명|  
|----------|-----------------|  
|상황에 맞는 시드|포함 하 여 데이터와 serialization 컨텍스트가 초기화 된 <xref:System.ComponentModel.Design.Serialization.RootContext> 및 <xref:System.CodeDom.CodeTypeDeclaration>|  
|멤버 직렬화|그런 다음, <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> 의 모든 멤버 및 호출에서는 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>합니다. Serialization에 선택적으로 수행 되므로 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>, 이렇게 하면 serialization 두 번 수행 되지 않습니다.|  
|루트 Serialization|다음으로, 루트 개체 직렬화 되 고 해당 문이 문 컬렉션에 추가 됩니다.|  
|문 통합|모든 개체가 serialize 되 면 후 합니다 <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> 문을 정렬 하 여 메서드와에서 반환 되는 메서드를 추가 합니다 <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>합니다. 모든에서 반환 된 메서드를 호출 하는 생성자가 마지막으로, 만들어집니다 <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>합니다.|  
  
-  
  
 다음 표에서 개체는 <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> 메서드 컨텍스트 스택에 배치 합니다.  
  
|인스턴스|설명|  
|--------------|-----------------|  
|<xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer>|이 직렬 변환기입니다. 클래스를 파생 시키는 경우가 있을 수 있습니다이 클래스에 public 속성을 추가 하는 데 유용 합니다.|  
|<xref:System.CodeDom.CodeTypeDeclaration>|생성 되는 형식입니다. 대부분의 개체에이에 대 한 직접 액세스를 사용할 필요가 없습니다.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="manager" /> 또는 <paramref name="root" />가 <see langword="null" />인 경우</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">동적 소스 코드 생성 및 컴파일</related>
      </Docs>
    </Member>
  </Members>
</Type>