<Type Name="DesignSurfaceManager" FullName="System.ComponentModel.Design.DesignSurfaceManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5dbdfdefcbd4f231e7cdeecf42333017ea9d14e4" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53493809" /></Metadata><TypeSignature Language="C#" Value="public class DesignSurfaceManager : IDisposable, IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignSurfaceManager extends System.Object implements class System.IDisposable, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignSurfaceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignSurfaceManager&#xA;Implements IDisposable, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignSurfaceManager : IDisposable, IServiceProvider" />
  <TypeSignature Language="F#" Value="type DesignSurfaceManager = class&#xA;    interface IServiceProvider&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.ComponentModel.Design.DesignSurface" /> 개체의 컬렉션을 관리합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.ComponentModel.Design.DesignSurfaceManager> 클래스의 컨테이너 되도록 <xref:System.ComponentModel.Design.DesignSurface> 개체입니다. 해당 핸들 이벤트 라우팅을 디자이너, 속성 창 및 기타 전역 개체 간의 공통 서비스 제공 합니다. 사용 하 여 <xref:System.ComponentModel.Design.DesignSurfaceManager> 는 선택 사항이 있지만는 여러 디자이너 창을 하려는 경우 권장 됩니다.  
  
 <xref:System.ComponentModel.Design.DesignSurfaceManager> 클래스는 몇 가지 디자인 타임 서비스를 자동으로 제공 합니다. 보호 된 대체 하 여 이러한 각 서비스를 재정의할 수 있습니다 <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> 속성입니다. 서비스의 이름을 바꾸려면 생성자를 재정의 기본, 호출 및 보호를 통해 변경한 <xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A> 속성입니다. 구현 하는 서비스 컨테이너에 추가 된 모든 서비스는 <xref:System.IDisposable> 인터페이스 디자인 화면 관리자가 삭제 될 때 삭제 됩니다. <xref:System.ComponentModel.Design.DesignSurfaceManager> 클래스를 제공 합니다 <xref:System.ComponentModel.Design.IDesignerEventService> 기본 서비스와 인터페이스입니다. <xref:System.ComponentModel.Design.IDesignerEventService> 디자이너 이벤트에 대 한 전역 이벤트 메커니즘을 제공합니다. 이 메커니즘을 사용 하 여 애플리케이션 디자이너가 활성화 될 때 합리적인 합니다. 서비스 속성 창 등의 전역 개체 선택을 모니터링할 수 있는 단일 위치와 디자이너의 컬렉션 변경 이벤트를 제공 합니다.  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">시스템 리소스에 대 한 전체 액세스 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />합니다. 연결 된 상태:</permission>
    <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurfaceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurfaceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurfaceManager (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parentProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurfaceManager(IServiceProvider ^ parentProvider);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignSurfaceManager : IServiceProvider -&gt; System.ComponentModel.Design.DesignSurfaceManager" Usage="new System.ComponentModel.Design.DesignSurfaceManager parentProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider">부모 서비스 공급자입니다. 디자인 화면 관리자가 서비스 요청을 확인할 수 없을 경우 이 공급자로 서비스 요청이 전달됩니다.</param>
        <summary><see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="ActiveDesignSurface">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignSurface ActiveDesignSurface { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignSurface ActiveDesignSurface" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ActiveDesignSurface As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignSurface ^ ActiveDesignSurface { System::ComponentModel::Design::DesignSurface ^ get(); void set(System::ComponentModel::Design::DesignSurface ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ActiveDesignSurface : System.ComponentModel.Design.DesignSurface with get, set" Usage="System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>활성화된 디자이너를 가져오거나 설정합니다.</summary>
        <value>활성화된 디자이너입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface%2A> 디자이너 창이 활성 창이 될 때마다 디자이너의 사용자 인터페이스에서 속성을 설정 해야 합니다. 이 속성의 기본 구현은 기본 구현의 작동을 <xref:System.ComponentModel.Design.IDesignerEventService> active 이제 새 디자이너를 관심 있는 지원자에 알리는 인터페이스를 합니다. 고유한 구현을 제공 하는 경우 <xref:System.ComponentModel.Design.IDesignerEventService>, 서비스를 적절 하 게에 알리기 위해이 속성을 재정의 해야 합니다. 이 속성 설정할 수 있습니다 `null`, 디자이너가 활성 상태 인지를 나타내는입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveDesignSurfaceChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler ActiveDesignSurfaceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler ActiveDesignSurfaceChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ActiveDesignSurfaceChanged As ActiveDesignSurfaceChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::ActiveDesignSurfaceChangedEventHandler ^ ActiveDesignSurfaceChanged;" />
      <MemberSignature Language="F#" Value="member this.ActiveDesignSurfaceChanged : System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler " Usage="member this.ActiveDesignSurfaceChanged : System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 활성 디자이너가 변경되면 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateDesignSurface">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>디자인 화면의 인스턴스를 만듭니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDesignSurface">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignSurface CreateDesignSurface ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Design.DesignSurface CreateDesignSurface() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDesignSurface () As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignSurface ^ CreateDesignSurface();" />
      <MemberSignature Language="F#" Value="member this.CreateDesignSurface : unit -&gt; System.ComponentModel.Design.DesignSurface" Usage="designSurfaceManager.CreateDesignSurface " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>디자인 화면의 인스턴스를 만듭니다.</summary>
        <returns>새로운 디자인 화면 인스턴스입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
      </Docs>
    </Member>
    <Member MemberName="CreateDesignSurface">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignSurface CreateDesignSurface (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Design.DesignSurface CreateDesignSurface(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDesignSurface (parentProvider As IServiceProvider) As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignSurface ^ CreateDesignSurface(IServiceProvider ^ parentProvider);" />
      <MemberSignature Language="F#" Value="member this.CreateDesignSurface : IServiceProvider -&gt; System.ComponentModel.Design.DesignSurface" Usage="designSurfaceManager.CreateDesignSurface parentProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider">부모 서비스 공급자입니다. 먼저 이 공급자에게 서비스를 요청한 후 디자인 화면 관리자 개체에 오류를 위임하는 병합된 서비스 공급자가 새로 만들어집니다. 이 병합된 공급자는 <see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" /> 메서드에 전달됩니다.</param>
        <summary>디자인 화면의 인스턴스를 만듭니다.</summary>
        <returns>새로운 디자인 화면 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 편리 하 게 디자이너 당 추가 서비스를 추가 하려는 경우는 `parentProvider` 매개 변수를 디자인 화면에 대 한 서비스 공급자를 제공 합니다. 합니다 <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> 메서드를 모두 지정 된 서비스 공급자의 서비스 요청을 충족할 수 있는 병합 된 서비스 공급자를 만듭니다 뿐만 <xref:System.ComponentModel.Design.DesignSurfaceManager> 자체입니다. 합니다 <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> 메서드는 다음이 서비스 공급자에 전달 된 <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> 메서드.  
  
 후 <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> 디자인 화면을 반환 합니다 <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> 메서드를 가져오려고 합니다 <xref:System.ComponentModel.Design.IDesignerEventService>합니다. 메서드가 존재 하 고 서비스의 인스턴스인 경우는 <xref:System.ComponentModel.Design.DesignSurfaceManager> 기본적으로 제공 합니다 <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> 메서드를 발생 시킵니다는 <xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated> 이벤트입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="parentProvider" />가 <see langword="null" />인 경우</exception>
        <block subset="none" type="overrides"><para>이에서 파생 된 클래스의 경우 서비스의 외부 구현을 제공 합니다 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 시킬 클래스는 <see cref="E:System.ComponentModel.Design.IDesignerEventService.DesignerCreated" /> 이벤트.</para></block>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
      </Docs>
    </Member>
    <Member MemberName="CreateDesignSurfaceCore">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.Design.DesignSurface CreateDesignSurfaceCore (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.Design.DesignSurface CreateDesignSurfaceCore(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDesignSurfaceCore (parentProvider As IServiceProvider) As DesignSurface" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::Design::DesignSurface ^ CreateDesignSurfaceCore(IServiceProvider ^ parentProvider);" />
      <MemberSignature Language="F#" Value="abstract member CreateDesignSurfaceCore : IServiceProvider -&gt; System.ComponentModel.Design.DesignSurface&#xA;override this.CreateDesignSurfaceCore : IServiceProvider -&gt; System.ComponentModel.Design.DesignSurface" Usage="designSurfaceManager.CreateDesignSurfaceCore parentProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider">디자인 화면에 전달할 서비스 공급자입니다. <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />의 인스턴스이거나 <see cref="T:System.IServiceProvider" />를 구현하는 개체이며, <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 클래스의 서비스 공급자와 외부에서 전달된 공급자 사이의 병합을 나타냅니다.</param>
        <summary>디자인 화면을 만드는 구현입니다.</summary>
        <returns>새로운 디자인 화면 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A> 메서드는 모두 <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A> 메서드. 이 구현은 실제로 디자인 화면을 만듭니다. 기본 구현은 반환 새 <xref:System.ComponentModel.Design.DesignSurface>합니다. 파생 되는 사용자 지정 개체를 제공 하려면이 메서드를 재정의할 수 있습니다는 <xref:System.ComponentModel.Design.DesignSurface> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="DesignSurfaceCreated">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceCreated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DesignSurfaceCreated As DesignSurfaceEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignSurfaceEventHandler ^ DesignSurfaceCreated;" />
      <MemberSignature Language="F#" Value="member this.DesignSurfaceCreated : System.ComponentModel.Design.DesignSurfaceEventHandler " Usage="member this.DesignSurfaceCreated : System.ComponentModel.Design.DesignSurfaceEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurfaceEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>디자이너가 만들어지면 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignSurfaceDisposed">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceDisposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceDisposed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DesignSurfaceDisposed As DesignSurfaceEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignSurfaceEventHandler ^ DesignSurfaceDisposed;" />
      <MemberSignature Language="F#" Value="member this.DesignSurfaceDisposed : System.ComponentModel.Design.DesignSurfaceEventHandler " Usage="member this.DesignSurfaceDisposed : System.ComponentModel.Design.DesignSurfaceEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurfaceEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>디자이너가 삭제되면 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignSurfaces">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignSurfaceCollection DesignSurfaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignSurfaceCollection DesignSurfaces" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesignSurfaces As DesignSurfaceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::DesignSurfaceCollection ^ DesignSurfaces { System::ComponentModel::Design::DesignSurfaceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignSurfaces : System.ComponentModel.Design.DesignSurfaceCollection" Usage="System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignSurfaceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>디자인 화면 컬렉션을 가져옵니다.</summary>
        <value>현재 디자인 화면 관리자에서 호스팅하는 디자인 화면 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces%2A> 속성은 맨 위에서 직접 구현 <xref:System.ComponentModel.Design.IDesignerEventService>이므로이 속성에 구현을 사용 하 여 해당 서비스의 고유한 구현을 제공 하는 경우.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerEventService" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />에서 사용하는 리소스를 해제합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="designSurfaceManager.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />에서 사용하는 리소스를 해제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 공용 <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> 메서드는 표준을 따르는 <xref:System.IDisposable> 패턴입니다. 디자인 화면 관리자를 제거이 메서드를 호출 합니다. 구현 하는 모든 서비스는 서비스 컨테이너에 삭제 <xref:System.IDisposable> 도 삭제 해야 합니다. 이 메서드의 보호 된 버전이 `virtual` 일반적인 따릅니다 및 <xref:System.IDisposable> 패턴입니다.  
  
> [!NOTE]
>  때문에 <xref:System.ComponentModel.Design.DesignSurfaceManager> 정리, 네이티브 코드가 없는 없는 종료자를 호출 하는 <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>합니다. 호출 해야 할 경우 <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, 종료자를 직접 추가 해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="designSurfaceManager.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
        <summary><see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 공용 <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A> 메서드는 표준을 따르는 <xref:System.IDisposable> 패턴입니다. 디자인 화면 관리자를 제거이 메서드를 호출 합니다. 구현 하는 모든 서비스는 서비스 컨테이너에 삭제 <xref:System.IDisposable> 도 삭제 해야 합니다. 이 메서드의 보호 된 버전이 `virtual` 일반적인 따릅니다 및 <xref:System.IDisposable> 패턴입니다.  
  
> [!NOTE]
>  때문에 <xref:System.ComponentModel.Design.DesignSurfaceManager> 정리, 네이티브 코드가 없는 없는 종료자를 호출 하는 <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>합니다. 호출 해야 할 경우 <xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>, 종료자를 직접 추가 해야 합니다.  
  
 이 메서드는 공용 `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A> 메서드. `Dispose()` 보호 된 호출 `Dispose(Boolean)` 메서드를 `disposing` 매개 변수 설정 `true`합니다. <xref:System.Object.Finalize%2A> 호출 `Dispose` 사용 하 여 `disposing` 로 `false`합니다.  
  
 경우는 `disposing` 매개 변수가 true 이면이 메서드는 관리 되는 개체가 보유 한 모든 리소스를 해제이 <xref:System.ComponentModel.Design.DesignSurfaceManager> 참조 합니다. 이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다. 재정의 하는 경우 <see langword="Dispose(Boolean)" /> 대 한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 해야 <see langword="Dispose" />합니다. 구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />를 참조 하세요 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  
  
에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />를 참조 하십시오 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드 재정의](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="designSurfaceManager.GetService serviceType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">검색할 서비스 형식입니다.</param>
        <summary>디자인 화면 관리자의 서비스 컨테이너에 있는 서비스를 가져옵니다.</summary>
        <returns>제공된 서비스 형식을 구현하거나 이 서비스 형식의 파생 클래스인 개체입니다. 서비스 컨테이너에 서비스가 없으면 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignSurfaceManager.GetService%2A> 메서드를 생성할 때 디자인 화면 관리자에 지정 된 모든 서비스 공급자를 전달 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectionChanged : EventHandler " Usage="member this.SelectionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>전역 선택이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 활성 디자이너의 다양 한 구성 요소 집합이 변경 될 때 이벤트가 발생 합니다. 이 통해 매핑되는 <xref:System.ComponentModel.Design.IDesignerEventService> 인터페이스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceContainer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.ServiceContainer ServiceContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.ServiceContainer ServiceContainer" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ServiceContainer As ServiceContainer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::ServiceContainer ^ ServiceContainer { System::ComponentModel::Design::ServiceContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceContainer : System.ComponentModel.Design.ServiceContainer" Usage="System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ServiceContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>디자인 화면 관리자의 <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />를 가져옵니다.</summary>
        <value>디자인 화면 관리자의 <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />입니다.</value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>클래스에서 상속 된 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 클래스를 추가 하 여 서비스를 제거 합니다.이 속성을 사용할 수 있습니다.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>