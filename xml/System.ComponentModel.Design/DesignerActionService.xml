<Type Name="DesignerActionService" FullName="System.ComponentModel.Design.DesignerActionService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6898f53fe4b0b1b2bc999cccd99f4068e66f77fe" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52612606" /></Metadata><TypeSignature Language="C#" Value="public class DesignerActionService : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignerActionService extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignerActionService" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignerActionService&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerActionService : IDisposable" />
  <TypeSignature Language="F#" Value="type DesignerActionService = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>구성 요소의 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 개체 컬렉션을 관리하는 디자인 타임 서비스를 설정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.ComponentModel.Design.DesignerActionService> 클래스는 컬렉션을 관리 하는 일을 담당 <xref:System.ComponentModel.Design.DesignerActionItem> 디자인 타임에 폼에 있는 구성 요소의 각 인스턴스에 대 한 개체입니다. 이 클래스는 직접적인 밀어넣기 모델 항목을 만들 수 있도록 하며는 주로 사용 하 여 디자인 타임 도구 개발자가 구성 요소 및 사용자 지정 컨트롤 개발도 사용 될 수 있지만.  
  
 디자인 타임 도구 개발자는 구성 요소에 대해 표시할이 목록은 변경 될 때를 결정 하는 항목 목록을 확인 해야 합니다. 스마트 태그 패널 개체와 함께에서 작동 하는 추가 기능을 만들 수도 있습니다.  
  
 고급 구성 요소 개발자가 해야 할 수는 구성 요소와 연결 된 항목을 동적으로 제어 따라서 바꾸거나 표준 끌어오기 모델을 보완 합니다. 예를 들어, 패널 명령 컨텍스트 사용 및 구성 요소의 디자인 타임 상태에 따라 변경할 수 있습니다.  
  
> [!NOTE]
>  하지만 <xref:System.ComponentModel.Design.DesignerActionService> 푸시와 끌어오기 모델 뒤, 후자의 경우 암시적으로 작동 실제로 구동 서비스입니다.  
  
 <xref:System.ComponentModel.Design.DesignerActionService> 에 액세스 하 고 다음 메서드 및 이벤트를 포함 하 여 각 구성 요소에 대 한 항목을 조작에 대 한 간단한 인터페이스를 제공 합니다.  
  
-   <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A> 메서드를 결정 하는지 여부를 <xref:System.ComponentModel.Design.DesignerActionService> 현재 특정 구성 요소를 관리 합니다.  
  
-   <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> 메서드 목록 항목의 열거를 지원 합니다.  
  
-   <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> 메서드를 사용 하면 추가 <xref:System.ComponentModel.Design.DesignerActionList> 또는 <xref:System.ComponentModel.Design.DesignerActionListCollection> 구성 요소 인스턴스에 대 한 기존 항목 집합에 있습니다. 반면,는 <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> 메서드는 구성 요소와 연결 된 항목 목록 중 하나 또는 모두를 제거 합니다.  
  
    > [!NOTE]
    >  <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> 메서드는 구성 요소를 사용 하 여 제어판 항목을 연결 하는 직접 푸시 모델을 나타냅니다. 재정의에 끌어오기 모델을 사용 하는 반면,는 <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> 해당 구성 요소의 디자이너 클래스의 속성입니다. 디자인 환경은 현재 이러한 항목을 추가 하는 일을 담당 <xref:System.ComponentModel.Design.DesignerActionService> 디자인 화면에서 구성 요소를 만들어질 때.  
  
    > [!IMPORTANT]
    >  합니다 <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>, <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>, <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A>, 및 <xref:System.ComponentModel.Design.DesignerActionService.Clear%2A> 메서드만 고려 또는 밀어넣기 모델 항목에 영향을 줍니다.  
  
-   <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> 이벤트 구성 요소에 대 한 항목의 컬렉션을 변경 하는 경우를 나타냅니다.  
  
 구성 요소의 디자인 타임에 바로 가기 메뉴와 해당 패널의 동일한 패널 항목 중 일부를 사용 하는 것이 좋습니다, 위해 상당 수준의 상호 운용성 있으므로 간의 <xref:System.ComponentModel.Design.DesignerActionItem> 개체 및 디자이너 동사입니다.  
  
 구성 요소 디자이너에서 명시적으로 지정 하지 않으면를 <xref:System.ComponentModel.Design.DesignerActionList> (즉, 포함 하지는 재정의 된 <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> 속성), 목록에서 기존 디자이너 동사 생성 됩니다. 으로 지정 된 이러한 동사는 <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> 속성입니다. 이 경우에 내부 동사 목록 클래스는 동사 항목 패널 항목의 컬렉션을 포함 하도록 사용 됩니다.  
  
 원하는 경우는 <xref:System.ComponentModel.Design.DesignerActionMethodItem> 사용할 패널 항목 및 디자인 타임에 바로 가기 메뉴 항목을 모두 설정할 수 있습니다는 `includeAsDesignerVerb` 항목의 생성자에서 매개 변수입니다.  
  
 사용 된 <xref:System.ComponentModel.Design.DesignerActionUIService> 디자이너의 표시를 제어 하 <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.DesignerActionListCollection" />
    <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionItem" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionUIService" />
    <related type="Article" href="https://msdn.microsoft.com/library/0bad6816-922a-4845-b8e3-50e91ec60f13">Windows Forms용 디자이너 명령 및 DesignerAction 개체 모델</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionService (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerActionService(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignerActionService : IServiceProvider -&gt; System.ComponentModel.Design.DesignerActionService" Usage="new System.ComponentModel.Design.DesignerActionService serviceProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">현재 디자인 타임 환경의 서비스 공급자입니다.</param>
        <summary><see cref="T:System.ComponentModel.Design.DesignerActionService" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 서비스 공급자 선택 및 구성 요소 변경 내용을 모니터링 하는 데 필요한 경우 지원 해야 합니다 <xref:System.ComponentModel.Design.IDesignerHost> 및 <xref:System.ComponentModel.Design.IComponentChangeService> 형식입니다. 합니다 <xref:System.ComponentModel.Design.DesignerActionService> 클래스 내부 테이블을 사용 하 여 구성 요소 및 이와 관련 된 관리 <xref:System.ComponentModel.Design.DesignerActionList> 스마트 태그입니다.  
  
 일반적으로 구성 요소 개발자는이 클래스의 인스턴스를 만들 필요가 없습니다. 대신 호출을 통해 기존 인스턴스를 가져올 수 있습니다는 <xref:System.ComponentModel.Component.GetService%2A?displayProperty=nameWithType> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.Dispose" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
        <altmember cref="M:System.ComponentModel.Component.GetService(System.Type)" />
        <related type="Article" href="https://msdn.microsoft.com/library/0bad6816-922a-4845-b8e3-50e91ec60f13">Windows Forms용 디자이너 명령 및 DesignerAction 개체 모델</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>관리되는 스마트 태그의 현재 컬렉션에 하나 이상의 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 개체를 추가합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.ComponentModel.IComponent comp, System.ComponentModel.Design.DesignerActionList actionList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.ComponentModel.IComponent comp, class System.ComponentModel.Design.DesignerActionList actionList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (comp As IComponent, actionList As DesignerActionList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::ComponentModel::IComponent ^ comp, System::ComponentModel::Design::DesignerActionList ^ actionList);" />
      <MemberSignature Language="F#" Value="member this.Add : System.ComponentModel.IComponent * System.ComponentModel.Design.DesignerActionList -&gt; unit" Usage="designerActionService.Add (comp, actionList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
      </Parameters>
      <Docs>
        <param name="comp">스마트 태그에 연결할 <see cref="T:System.ComponentModel.IComponent" />입니다.</param>
        <param name="actionList">추가할 새 스마트 태그 항목이 포함된 <see cref="T:System.ComponentModel.Design.DesignerActionList" />입니다.</param>
        <summary>관리되는 스마트 태그의 현재 컬렉션에 <see cref="T:System.ComponentModel.Design.DesignerActionList" />를 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> 밀어넣기 모델 스마트 태그 항목을 추가 하는 메서드를 나타냅니다. 재정의 의존 하는 대체 끌어오기 모델을 <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> 해당 구성 요소에 대 한 디자이너의 속성입니다.  
  
 추가할 목록에 대 한 검색은이 메서드를 호출 하는 경우 <xref:System.ComponentModel.Design.DesignerActionMethodItem> 사용 하 여 합니다 <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> 속성으로 설정 `true`합니다. 이러한 항목에 대 한 호출을 통해이 구성 요소에 대 한 디자이너 동사 목록에 추가 됩니다는 <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=nameWithType> 메서드.  
  
 스마트 태그는 구성 요소 인스턴스 단위로 관리 됩니다. 관리 되는 컬렉션에 중복 된 항목이 포함 될 수 있습니다.  
  
 이 메서드는 <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> 이벤트입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</exception>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.ActionLists" />
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Remove" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)" />
        <related type="Article" href="https://msdn.microsoft.com/library/0bad6816-922a-4845-b8e3-50e91ec60f13">Windows Forms용 디자이너 명령 및 DesignerAction 개체 모델</related>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.ComponentModel.IComponent comp, System.ComponentModel.Design.DesignerActionListCollection designerActionListCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.ComponentModel.IComponent comp, class System.ComponentModel.Design.DesignerActionListCollection designerActionListCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::ComponentModel::IComponent ^ comp, System::ComponentModel::Design::DesignerActionListCollection ^ designerActionListCollection);" />
      <MemberSignature Language="F#" Value="member this.Add : System.ComponentModel.IComponent * System.ComponentModel.Design.DesignerActionListCollection -&gt; unit" Usage="designerActionService.Add (comp, designerActionListCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
        <Parameter Name="designerActionListCollection" Type="System.ComponentModel.Design.DesignerActionListCollection" />
      </Parameters>
      <Docs>
        <param name="comp">스마트 태그에 연결할 <see cref="T:System.ComponentModel.IComponent" />입니다.</param>
        <param name="designerActionListCollection">추가할 새 스마트 태그 항목이 포함된 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />입니다.</param>
        <summary>관리되는 스마트 태그의 현재 컬렉션에 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />를 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> 밀어넣기 모델 스마트 태그 항목을 추가 하는 메서드를 나타냅니다. 재정의 의존 하는 대체 끌어오기 모델을 <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> 해당 구성 요소에 대 한 디자이너의 속성입니다.  
  
 추가할 목록에 대 한 검색은이 메서드를 호출 하는 경우 <xref:System.ComponentModel.Design.DesignerActionMethodItem> 사용 하 여 합니다 <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> 속성으로 설정 `true`합니다. 이러한 항목에 대 한 호출을 통해이 구성 요소에 대 한 디자이너 동사 목록에 추가 됩니다는 <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=nameWithType> 메서드.  
  
 스마트 태그는 구성 요소 인스턴스 단위로 관리 됩니다. 관리 되는 컬렉션에 중복 된 항목이 포함 될 수 있습니다.  
  
 이 메서드는 <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> 이벤트입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</exception>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.ActionLists" />
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Remove" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)" />
        <related type="Article" href="https://msdn.microsoft.com/library/0bad6816-922a-4845-b8e3-50e91ec60f13">Windows Forms용 디자이너 명령 및 DesignerAction 개체 모델</related>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="designerActionService.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>모든 구성 요소의 관리를 해제하고 밀어넣기 모델 스마트 태그 목록을 모두 지웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignerActionService.Clear%2A> 메서드 내부 테이블에 대 한 구성 요소 및 밀어넣기 모델 스마트 태그 목록 정보를 저장 하는 데 사용을 비웁니다.  
  
> [!CAUTION]
>  이 메서드는 현재 서비스에서 관리 하는 모든 구성 요소와 뿐 아니라 현재 구성 요소에 영향을 주므로이 메서드는 신중 하 게 사용 해야 합니다. 일반적으로 디자인 타임 도구 개발자는 디자인 화면을 다시 설정 하는 경우 해당 합니다. 구성 요소 개발자 중 하나를 사용 해야는 <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> 메서드 대신 개별 스마트 태그를 제거 하려면 항목 나 목록에 포함 합니다.  
  
 <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> 현재 서비스에서 이전에 관리 하는 각 구성 요소에 대 한 이벤트가 발생 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Remove" />
        <related type="Article" href="https://msdn.microsoft.com/library/0bad6816-922a-4845-b8e3-50e91ec60f13">Windows Forms용 디자이너 명령 및 DesignerAction 개체 모델</related>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.ComponentModel.IComponent comp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.ComponentModel.IComponent comp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (comp As IComponent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::ComponentModel::IComponent ^ comp);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.ComponentModel.IComponent -&gt; bool" Usage="designerActionService.Contains comp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="comp">검색할 <see cref="T:System.ComponentModel.IComponent" />입니다.</param>
        <summary>현재 스마트 태그 서비스가 특정 구성 요소의 작업 목록을 관리하는지 여부를 확인합니다.</summary>
        <returns>현재 서비스에서 구성 요소를 관리하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A> 메서드를 가진 구성 요소에 연결 되는 밀어넣기 모델 스마트 태그를 인식 합니다 <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> 메서드.  
  
 동시에 제한 없이 구조적 이지만 <xref:System.ComponentModel.Design.DesignerActionService> 디자인 타임 도구에서 만든 경우 일반적으로 서비스의 단일 인스턴스만 만들어집니다 당 디자인 화면입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="comp" />가 <see langword="null" />인 경우</exception>
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Add" />
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Remove" />
        <related type="Article" href="https://msdn.microsoft.com/library/0bad6816-922a-4845-b8e3-50e91ec60f13">Windows Forms용 디자이너 명령 및 DesignerAction 개체 모델</related>
      </Docs>
    </Member>
    <Member MemberName="DesignerActionListsChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.DesignerActionListsChangedEventHandler DesignerActionListsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignerActionListsChangedEventHandler DesignerActionListsChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DesignerActionListsChanged As DesignerActionListsChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignerActionListsChangedEventHandler ^ DesignerActionListsChanged;" />
      <MemberSignature Language="F#" Value="member this.DesignerActionListsChanged : System.ComponentModel.Design.DesignerActionListsChangedEventHandler " Usage="member this.DesignerActionListsChanged : System.ComponentModel.Design.DesignerActionListsChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListsChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.ComponentModel.Design.DesignerActionList" />가 구성 요소에 대해 제거되거나 추가되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서 연결 된 특수 한 클래스 집합을 보여 줍니다.는 <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> 이벤트입니다.  
  
|특수 형식|설명|  
|----------------------|-----------------|  
|<xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs>|스마트 태그 목록 관리에 관련 된 정보를 추가합니다. 이 클래스에서 특수화 된 <xref:System.EventArgs>합니다.|  
|<xref:System.ComponentModel.Design.DesignerActionListsChangedEventHandler>|연결 된 <xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs> 해당 처리기를 사용 하 여 합니다.|  
|<xref:System.ComponentModel.Design.DesignerActionListsChangedType>|목록 추가 되거나 제거 되었는지 여부를 나타냅니다.|  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionListsChangedType" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventHandler" />
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Add" />
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Remove" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.Clear" />
        <related type="Article" href="https://msdn.microsoft.com/library/0bad6816-922a-4845-b8e3-50e91ec60f13">Windows Forms용 디자이너 명령 및 DesignerAction 개체 모델</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.ComponentModel.Design.DesignerActionService" />에서 사용하는 리소스를 해제합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="designerActionService.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.ComponentModel.Design.DesignerActionService" /> 클래스에서 사용하는 모든 리소스를 해제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> 메서드는 구현 하 여 지정한 메서드에만 <xref:System.IDisposable> 인터페이스입니다. <xref:System.ComponentModel.Design.DesignerActionService>를 사용한 후에 이 메서드를 호출하십시오. 두 가지 주요 작업을 수행합니다.  
  
-   현재 서비스를 호출 하 여 디자인 환경에서 사용 가능한 서비스 목록에서 제거 된 <xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A> 메서드.  
  
-   연결 된 구성 변경 이벤트에 구독을 취소 <xref:System.ComponentModel.Design.IComponentChangeService> 인터페이스입니다.  
  
 <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> 사용을 마치면 <xref:System.ComponentModel.Design.DesignerActionService>를 호출합니다. <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> 메서드를 사용하면 <xref:System.ComponentModel.Design.DesignerActionService>를 사용할 수 없게 됩니다. 호출한 후 <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A>에 대 한 모든 참조를 해제 해야 합니다 <xref:System.ComponentModel.Design.DesignerActionService> 가비지 수집기에서 메모리를 회수할 수 있도록 하는 <xref:System.ComponentModel.Design.DesignerActionService> 차지한 합니다. 자세한 내용은 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 하 고 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  
  
> [!NOTE]
>  <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A>에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.ComponentModel.Design.DesignerActionService>를 호출하십시오. 이렇게 하지 않으면 가비지 수집기가 <xref:System.ComponentModel.Design.DesignerActionService> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.Design.IServiceContainer.RemoveService" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
        <related type="Article" href="https://msdn.microsoft.com/library/0bad6816-922a-4845-b8e3-50e91ec60f13">Windows Forms용 디자이너 명령 및 DesignerAction 개체 모델</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="designerActionService.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
        <summary><see cref="T:System.ComponentModel.Design.DesignerActionService" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> 메서드는 구현 하 여 지정한 메서드에만 <xref:System.IDisposable> 인터페이스입니다. <xref:System.ComponentModel.Design.DesignerActionService>를 사용한 후에 이 메서드를 호출하십시오. 두 가지 주요 작업을 수행합니다.  
  
-   현재 서비스를 호출 하 여 디자인 환경에서 사용 가능한 서비스 목록에서 제거 된 <xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A> 메서드.  
  
-   연결 된 구성 변경 이벤트에 구독을 취소 <xref:System.ComponentModel.Design.IComponentChangeService> 인터페이스입니다.  
  
 이 메서드는 공용 `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A> 메서드. `Dispose()` 보호 된 호출 `Dispose(Boolean)` 메서드를 `disposing` 매개 변수 설정 `true`합니다. <xref:System.Object.Finalize%2A> 호출 `Dispose` 사용 하 여 `disposing` 로 `false`합니다.  
  
 `disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.ComponentModel.Design.DesignerActionService>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다. 이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다. 재정의 하는 경우 <see langword="Dispose(Boolean)" /> 대 한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 해야 <see langword="Dispose" />합니다. 구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />를 참조 하세요 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  
  
에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />를 참조 하십시오 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드 재정의](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))합니다.</para></block>
        <altmember cref="Overload:System.ComponentModel.Design.IServiceContainer.RemoveService" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
        <related type="Article" href="https://msdn.microsoft.com/library/0bad6816-922a-4845-b8e3-50e91ec60f13">Windows Forms용 디자이너 명령 및 DesignerAction 개체 모델</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetComponentActions">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>구성 요소에 연결된 스마트 태그 항목 목록의 컬렉션을 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetComponentActions">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerActionListCollection GetComponentActions (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Design.DesignerActionListCollection GetComponentActions(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetComponentActions (component As IComponent) As DesignerActionListCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignerActionListCollection ^ GetComponentActions(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="member this.GetComponentActions : System.ComponentModel.IComponent -&gt; System.ComponentModel.Design.DesignerActionListCollection" Usage="designerActionService.GetComponentActions component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">스마트 태그에 연결된 구성 요소입니다.</param>
        <summary>구성 요소에 연결된 스마트 태그 항목 목록의 컬렉션을 반환합니다.</summary>
        <returns>지정된 구성 요소에 대한 스마트 태그의 컬렉션입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> 를 호출 하는 것과 같습니다는 <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%28System.ComponentModel.IComponent%2CSystem.ComponentModel.Design.ComponentActionsType%29> 메서드를 사용 하는 `type` 의 매개 변수 <xref:System.ComponentModel.Design.ComponentActionsType.All>합니다. 따라서 반환 된 컬렉션에는 스마트 태그의 밀어넣기 및 끌어오기 목록 모두 포함 됩니다.  
  
 반환 된 <xref:System.ComponentModel.Design.DesignerActionListCollection> 통해 추가 된 항목 목록의 합집합 합니다 <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> 메서드 및 목록에서 가져온는 <xref:System.ComponentModel.Design.DesignerCommandSet> 구성 요소의 사이트에서 가져온 인스턴스.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="comp" />가 <see langword="null" />인 경우</exception>
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Add" />
        <altmember cref="T:System.ComponentModel.Design.DesignerCommandSet" />
        <related type="Article" href="https://msdn.microsoft.com/library/0bad6816-922a-4845-b8e3-50e91ec60f13">Windows Forms용 디자이너 명령 및 DesignerAction 개체 모델</related>
      </Docs>
    </Member>
    <Member MemberName="GetComponentActions">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignerActionListCollection GetComponentActions (System.ComponentModel.IComponent component, System.ComponentModel.Design.ComponentActionsType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.DesignerActionListCollection GetComponentActions(class System.ComponentModel.IComponent component, valuetype System.ComponentModel.Design.ComponentActionsType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetComponentActions (component As IComponent, type As ComponentActionsType) As DesignerActionListCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::Design::DesignerActionListCollection ^ GetComponentActions(System::ComponentModel::IComponent ^ component, System::ComponentModel::Design::ComponentActionsType type);" />
      <MemberSignature Language="F#" Value="abstract member GetComponentActions : System.ComponentModel.IComponent * System.ComponentModel.Design.ComponentActionsType -&gt; System.ComponentModel.Design.DesignerActionListCollection&#xA;override this.GetComponentActions : System.ComponentModel.IComponent * System.ComponentModel.Design.ComponentActionsType -&gt; System.ComponentModel.Design.DesignerActionListCollection" Usage="designerActionService.GetComponentActions (component, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="type" Type="System.ComponentModel.Design.ComponentActionsType" />
      </Parameters>
      <Docs>
        <param name="component">스마트 태그에 연결된 구성 요소입니다.</param>
        <param name="type">연결된 스마트 태그를 필터링하는 데 사용할 <see cref="T:System.ComponentModel.Design.ComponentActionsType" />입니다.</param>
        <summary>구성 요소에 연결된 특정 형식의 스마트 태그 항목 목록에 대한 컬렉션을 반환합니다.</summary>
        <returns>지정된 구성 요소에 대한 지정된 형식의 스마트 태그 컬렉션입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 버전의 오버 로드 된 <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> 방법에 대 한 필터는 `type` 매개 변수를 다음 값 중 하나일 수 있습니다.  
  
|값|설명|  
|-----------|-----------------|  
|<xref:System.ComponentModel.Design.ComponentActionsType.All>|연결 된 모든 스마트 태그입니다.|  
|<xref:System.ComponentModel.Design.ComponentActionsType.Component>|끌어오기 모델 스마트 태그만 지정 합니다.|  
|<xref:System.ComponentModel.Design.ComponentActionsType.Service>|밀어넣기 모델 스마트 태그만 지정 합니다.|  
  
 연결된 된 디자이너 구성 요소에 대 한 끌어오기 모델 스마트 태그 목록을 제공 하지 않는 경우 해당 <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> 메서드를 디자이너의 디자인 타임에 바로 가기 메뉴 항목을 대신 사용 합니다 <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="comp" />가 <see langword="null" />인 경우</exception>
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionListCollection" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.ComponentActionsType" />
        <related type="Article" href="https://msdn.microsoft.com/library/0bad6816-922a-4845-b8e3-50e91ec60f13">Windows Forms용 디자이너 명령 및 DesignerAction 개체 모델</related>
      </Docs>
    </Member>
    <Member MemberName="GetComponentDesignerActions">
      <MemberSignature Language="C#" Value="protected virtual void GetComponentDesignerActions (System.ComponentModel.IComponent component, System.ComponentModel.Design.DesignerActionListCollection actionLists);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetComponentDesignerActions(class System.ComponentModel.IComponent component, class System.ComponentModel.Design.DesignerActionListCollection actionLists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetComponentDesignerActions (component As IComponent, actionLists As DesignerActionListCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetComponentDesignerActions(System::ComponentModel::IComponent ^ component, System::ComponentModel::Design::DesignerActionListCollection ^ actionLists);" />
      <MemberSignature Language="F#" Value="abstract member GetComponentDesignerActions : System.ComponentModel.IComponent * System.ComponentModel.Design.DesignerActionListCollection -&gt; unit&#xA;override this.GetComponentDesignerActions : System.ComponentModel.IComponent * System.ComponentModel.Design.DesignerActionListCollection -&gt; unit" Usage="designerActionService.GetComponentDesignerActions (component, actionLists)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="actionLists" Type="System.ComponentModel.Design.DesignerActionListCollection" />
      </Parameters>
      <Docs>
        <param name="component">스마트 태그에 연결된 구성 요소입니다.</param>
        <param name="actionLists">연결된 스마트 태그를 추가할 컬렉션입니다.</param>
        <summary>구성 요소에 연결된 끌어오기 모델 스마트 태그를 검색합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions%2A> 메서드는에 대 한 도우미 메서드는 <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> 메서드. <xref:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions%2A> 끌어오기 모델에 대 한 검색 태그 형식의 스마트 <xref:System.ComponentModel.Design.ComponentActionsType.Component>, 다음에 제공 된 추가 `actionLists` 컬렉션.  
  
 구성 요소의 개발자를 통해 스마트 태그의 컬렉션을 명시적으로 제공 하지 않는 경우는 <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> 해당 디자이너의 속성을이 메서드는 다시 사용을 통해 가져온 디자인 타임에 바로 가기 메뉴 항목을는 <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> 의 속성을 디자이너입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</exception>
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.GetComponentActions" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.ActionLists" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs" />
        <related type="Article" href="https://msdn.microsoft.com/library/0bad6816-922a-4845-b8e3-50e91ec60f13">Windows Forms용 디자이너 명령 및 DesignerAction 개체 모델</related>
      </Docs>
    </Member>
    <Member MemberName="GetComponentServiceActions">
      <MemberSignature Language="C#" Value="protected virtual void GetComponentServiceActions (System.ComponentModel.IComponent component, System.ComponentModel.Design.DesignerActionListCollection actionLists);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetComponentServiceActions(class System.ComponentModel.IComponent component, class System.ComponentModel.Design.DesignerActionListCollection actionLists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetComponentServiceActions (component As IComponent, actionLists As DesignerActionListCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetComponentServiceActions(System::ComponentModel::IComponent ^ component, System::ComponentModel::Design::DesignerActionListCollection ^ actionLists);" />
      <MemberSignature Language="F#" Value="abstract member GetComponentServiceActions : System.ComponentModel.IComponent * System.ComponentModel.Design.DesignerActionListCollection -&gt; unit&#xA;override this.GetComponentServiceActions : System.ComponentModel.IComponent * System.ComponentModel.Design.DesignerActionListCollection -&gt; unit" Usage="designerActionService.GetComponentServiceActions (component, actionLists)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="actionLists" Type="System.ComponentModel.Design.DesignerActionListCollection" />
      </Parameters>
      <Docs>
        <param name="component">스마트 태그에 연결된 구성 요소입니다.</param>
        <param name="actionLists">연결된 스마트 태그를 추가할 컬렉션입니다.</param>
        <summary>구성 요소에 연결된 밀어넣기 모델 스마트 태그를 검색합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions%2A> 메서드는에 대 한 도우미 메서드는 <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> 메서드. 밀어넣기 모델 스마트 태그 형식에 대 한 검색 <xref:System.ComponentModel.Design.ComponentActionsType.Service>, 다음에 제공 된 추가 `actionLists` 컬렉션입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</exception>
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.GetComponentActions" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
        <related type="Article" href="https://msdn.microsoft.com/library/0bad6816-922a-4845-b8e3-50e91ec60f13">Windows Forms용 디자이너 명령 및 DesignerAction 개체 모델</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>하나 이상의 스마트 태그 목록과 하나 이상의 구성 요소를 분리합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.ComponentModel.Design.DesignerActionList actionList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.ComponentModel.Design.DesignerActionList actionList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (actionList As DesignerActionList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::ComponentModel::Design::DesignerActionList ^ actionList);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.ComponentModel.Design.DesignerActionList -&gt; unit" Usage="designerActionService.Remove actionList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
      </Parameters>
      <Docs>
        <param name="actionList">제거할 스마트 태그 목록입니다.</param>
        <summary>현재 서비스에서 관리하는 모든 구성 요소에서 특정 스마트 태그 목록을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 버전의는 <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> 메서드는 디자인 도구 개발자가 일반적으로 사용, 구성 요소가 현재 디자인 공간에 있는 구성 요소 개발자가 일반적으로 알지 못하는 어떤 다른 때문입니다.  
  
 성공 하면이 메서드를 발생 시킵니다는 <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> 이벤트입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="actionList" />가 <see langword="null" />인 경우</exception>
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Add" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.Clear" />
        <related type="Article" href="https://msdn.microsoft.com/library/0bad6816-922a-4845-b8e3-50e91ec60f13">Windows Forms용 디자이너 명령 및 DesignerAction 개체 모델</related>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.ComponentModel.IComponent comp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.ComponentModel.IComponent comp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (comp As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::ComponentModel::IComponent ^ comp);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.ComponentModel.IComponent -&gt; unit" Usage="designerActionService.Remove comp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="comp">스마트 태그를 분리할 구성 요소입니다.</param>
        <summary>지정된 구성 요소에 연결된 모든 스마트 태그 목록을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 성공 하면 합니다 <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> 메서드를 발생 시킵니다는 <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> 이벤트입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="comp" />가 <see langword="null" />인 경우</exception>
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Add" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.Clear" />
        <related type="Article" href="https://msdn.microsoft.com/library/0bad6816-922a-4845-b8e3-50e91ec60f13">Windows Forms용 디자이너 명령 및 DesignerAction 개체 모델</related>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.ComponentModel.IComponent comp, System.ComponentModel.Design.DesignerActionList actionList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.ComponentModel.IComponent comp, class System.ComponentModel.Design.DesignerActionList actionList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (comp As IComponent, actionList As DesignerActionList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::ComponentModel::IComponent ^ comp, System::ComponentModel::Design::DesignerActionList ^ actionList);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.ComponentModel.IComponent * System.ComponentModel.Design.DesignerActionList -&gt; unit" Usage="designerActionService.Remove (comp, actionList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
      </Parameters>
      <Docs>
        <param name="comp">스마트 태그를 분리할 구성 요소입니다.</param>
        <param name="actionList">제거할 스마트 태그 목록입니다.</param>
        <summary>특정 구성 요소에서 특정 스마트 태그 목록을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 성공 하면 합니다 <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> 메서드를 발생 시킵니다는 <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> 이벤트입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">매개 변수 중 하나 또는 둘 다가 <see langword="null" />입니다.</exception>
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Add" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.Clear" />
        <related type="Article" href="https://msdn.microsoft.com/library/0bad6816-922a-4845-b8e3-50e91ec60f13">Windows Forms용 디자이너 명령 및 DesignerAction 개체 모델</related>
      </Docs>
    </Member>
  </Members>
</Type>