<Type Name="ViewTechnology" FullName="System.ComponentModel.Design.ViewTechnology">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1d4bba1eee80fc5ae1e8bcc53c6d0e389e6addee" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58733421" /></Metadata><TypeSignature Language="C#" Value="public enum ViewTechnology" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ViewTechnology extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ViewTechnology" />
  <TypeSignature Language="VB.NET" Value="Public Enum ViewTechnology" />
  <TypeSignature Language="C++ CLI" Value="public enum class ViewTechnology" />
  <TypeSignature Language="F#" Value="type ViewTechnology = " />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>디자이너 호스트가 지원하는 기술 세트에 대한 식별자를 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 그러나 뷰 어댑터 모델을 대체 하 고 기능을 추가 합니다 <xref:System.ComponentModel.Design.ViewTechnology> ; 기능는 <xref:System.ComponentModel.Design.ViewTechnology> 기능 선택 하면 이전 버전과 호환성 및 향후 사용을 위해 유지 됩니다.
  
 <xref:System.ComponentModel.Design.ViewTechnology> 디자이너 호스팅 문서 표시를 제어 하기 위한 사용 하는 모드를 나타낼 수 있는 식별자를 정의 합니다.  
  
 디자이너 호스팅 환경에 기본값만 사용 해야 합니다. 이전 버전의 합니다 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], <xref:System.ComponentModel.Design.ViewTechnology.Default> 열거형 루트 디자이너에서 지 원하는 UI 모델의 형식을 지정 합니다. 이 모델을 확장할 수 있는 아니므로 대신 사용 해야는 *view 어댑터* 모델입니다. 뷰 어댑터는 다른 형식으로의 개체를 조정 하는 형식입니다.  
  
 예를 들어, HTML 디자이너를 반환할 수 있습니다는 `DemoDOM` 트리를 뷰로 합니다. HTML 디자이너의 기본 뷰 기술을 반환합니다. 호스팅 환경에 Windows Forms에 사용할 수 있는 뷰 어댑터 클래스 해야 합니다. 이러한 클래스는 하나의 변환 수를 `DemoDOM` 호스팅 응용 프로그램을 Windows Forms 컨트롤에이 유형의 디자이너를 지원할 수 있습니다. 어댑터가 없습니다 디자이너에서 반환 된 데이터 형식을 처리할 수 있는지 <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> 메서드를 디자이너의 로드가 실패 하 고 사용자가 오류와 함께 표시 합니다.  
  
 Visual Studio에는 모든 UI 기술에 적응할 수 있도록 뷰 어댑터를 제공 하기 위한 확장 가능한 스키마를 합니다. 타사 기술 공급자는 적절 한 뷰 어댑터를 제공할 수도 있습니다 및 해당 개체 모델은 즉시 사용 가능 합니다.
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.ComponentModel.Design.ViewTechnology.Default> 디자이너에서 클래스입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> 인터페이스입니다.  
  
 [!code-cpp[IRootDesigner Sample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IRootDesigner Sample/CPP/class1.cpp#1)]
 [!code-csharp[IRootDesigner Sample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IRootDesigner Sample/CS/class1.cs#1)]
 [!code-vb[IRootDesigner Sample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IRootDesigner Sample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology Default = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberSignature Language="F#" Value="Default = 2" Usage="System.ComponentModel.Design.ViewTechnology.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>기본 뷰 기술 지원을 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 루트 디자이너 개체의 모든 형식을 반환할 수 있지만 개체는 호스트의 기술에 대 한 어댑터와 호환 되어야 합니다. Visual Studio와 같은 호스팅 환경에는 새로운 뷰 기술 어댑터에 연결 하는 방법을 제공 합니다. Windows Forms 디자이너의 기본 뷰 개체를 <xref:System.Windows.Forms.Control?displayProperty=nameWithType> 인스턴스.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.ComponentModel.Design.ViewTechnology> 디자이너에서 클래스입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.ComponentModel.Design.IRootDesigner> 인터페이스입니다.  
  
 [!code-cpp[IRootDesigner Sample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IRootDesigner Sample/CPP/class1.cpp#1)]
 [!code-csharp[IRootDesigner Sample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IRootDesigner Sample/CS/class1.cs#1)]
 [!code-vb[IRootDesigner Sample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IRootDesigner Sample/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Passthrough">
      <MemberSignature Language="C#" Value="Passthrough" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology Passthrough = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.Passthrough" />
      <MemberSignature Language="VB.NET" Value="Passthrough" />
      <MemberSignature Language="C++ CLI" Value="Passthrough" />
      <MemberSignature Language="F#" Value="Passthrough = 0" Usage="System.ComponentModel.Design.ViewTechnology.Passthrough" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This value has been deprecated. Use ViewTechnology.Default instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("This value has been deprecated. Use ViewTechnology.Default instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>뷰 개체가 개발 환경에 직접 전달되는 모드를 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 뷰 개체가 개발 환경에 필요한 모든 인터페이스를 구현 해야 합니다. Visual Studio 개발 환경에서는 ActiveX 컨트롤, 액티브 문서 또는 Visual Studio VSI (Visual Studio 통합) 프로그램을 통해 사용할 수 있는 IVsWindowPane 인터페이스를 구현 하는 개체에 있는 뷰 개체를 지원 합니다. Visual Studio 개발 환경에서는이 뷰 기술에 대 한 지원을 제공합니다. 이 뷰 기술에 대 한 지원이 모든 개발 환경에서 반드시 사용할 수 없는 경우  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsForms">
      <MemberSignature Language="C#" Value="WindowsForms" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology WindowsForms = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.WindowsForms" />
      <MemberSignature Language="VB.NET" Value="WindowsForms" />
      <MemberSignature Language="C++ CLI" Value="WindowsForms" />
      <MemberSignature Language="F#" Value="WindowsForms = 1" Usage="System.ComponentModel.Design.ViewTechnology.WindowsForms" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This value has been deprecated. Use ViewTechnology.Default instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("This value has been deprecated. Use ViewTechnology.Default instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Windows Forms 컨트롤 개체가 루트 디자이너를 위한 디스플레이를 제공하는 모드를 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 디자이너 호스트를 Windows Forms 컨트롤을 사용 하 여 개발 환경 문서 창을 채웁니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.ComponentModel.Design.ViewTechnology> 디자이너에서 클래스입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.ComponentModel.Design.LocalizationExtenderProvider> 클래스입니다.  
  
 [!code-cpp[LocalizationExtenderProviderExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CPP/class1.cpp#1)]
 [!code-csharp[LocalizationExtenderProviderExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CS/class1.cs#1)]
 [!code-vb[LocalizationExtenderProviderExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/LocalizationExtenderProviderExample/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>