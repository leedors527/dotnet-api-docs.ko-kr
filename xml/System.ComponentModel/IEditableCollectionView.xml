<Type Name="IEditableCollectionView" FullName="System.ComponentModel.IEditableCollectionView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8d11887074c54a7af85492421fa8f02341774506" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37692883" /></Metadata><TypeSignature Language="C#" Value="public interface IEditableCollectionView" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEditableCollectionView" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.IEditableCollectionView" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEditableCollectionView" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEditableCollectionView" />
  <TypeSignature Language="F#" Value="type IEditableCollectionView = interface" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Windows.Data.CollectionView" />가 컬렉션에 편집 기능을 제공하기 위해 구현하는 메서드 및 속성을 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컬렉션 뷰를 구현 하는 경우는 <xref:System.ComponentModel.IEditableCollectionView> 인터페이스를 직접 변경할 수 있습니다 기본 컬렉션을 메서드 및 속성을 사용 하 여 변경할 수 있도록 하는 경우는 <xref:System.ComponentModel.IEditableCollectionView> 컬렉션의 형식에 관계 없이 표시 합니다.  
  
 형식을 <xref:System.Windows.Controls.ItemCollection>, <xref:System.Windows.Data.BindingListCollectionView>, 및 <xref:System.Windows.Data.ListCollectionView> 함께 제공 되는 유형은 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 에서 상속 되는 <xref:System.Windows.Data.CollectionView>합니다.  이러한 형식은 또한 구현 하는 <xref:System.ComponentModel.IEditableCollectionView>이므로 이러한 형식 중 하나를 사용 하는 컬렉션을 편집할 수 있습니다.  <xref:System.Windows.Controls.ItemCollection>특히 흔히 때문에 합니다 <xref:System.Windows.Controls.ItemsControl.Items%2A?displayProperty=nameWithType> 속성이 <xref:System.Windows.Controls.ItemCollection>합니다.  
  
   
  
## Examples  
 다음 예제에서는 정의한 메서드를 사용 하 여 컬렉션에 항목을 추가 하는 방법을 보여 줍니다 <xref:System.ComponentModel.IEditableCollectionView>합니다.  이 애플리케이션 판매에 대 한 항목의 목록을 표시 하 고 사용자 추가, 편집 또는 제거 항목의 옵션을 제공 합니다.  사용자 추가, 항목을 편집 하는 경우 폼 새 항목을 입력 하 라는 메시지가 표시 됩니다.  사용자가 폼을 제출 하는 경우 항목 컬렉션에 커밋됩니다.  사용자가 폼을 취소 하는 경우 항목이 삭제 됩니다. 전체 샘플을 보려면 [IEditableCollectionView 예제를 사용 하 여 컬렉션을 변경](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)합니다.  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public object AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNew () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AddNew();" />
      <MemberSignature Language="F#" Value="abstract member AddNew : unit -&gt; obj" Usage="iEditableCollectionView.AddNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컬렉션에 새 항목을 추가합니다.</summary>
        <returns>컬렉션에 추가되는 새 항목입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> 추가 트랜잭션을 시작 합니다.  호출 해야 <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> 또는 <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> 추가 트랜잭션을 종료 합니다. 새 항목이 컬렉션 뷰에 항상 표시 됩니다. 필터링, 정렬 또는 그룹화 된 적용할 보기를 적용할 새 항목이 <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> 라고 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Window> 새 항목을 추가 하 라는입니다.  호출한 다음 <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> 새 개체를 만들고 설정 합니다 <xref:System.Windows.FrameworkElement.DataContext%2A> 의 <xref:System.Windows.Window> 해당 개체에. 전체 샘플을 보려면 [IEditableCollectionView 예제를 사용 하 여 컬렉션을 변경](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)합니다.  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAddNew">
      <MemberSignature Language="C#" Value="public bool CanAddNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanAddNew" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanAddNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanAddNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanAddNew { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanAddNew : bool" Usage="System.ComponentModel.IEditableCollectionView.CanAddNew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컬렉션에 새 항목을 추가할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>컬렉션에 새 항목을 추가할 수 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.IEditableCollectionView> 다음에 해당할 경우 새 항목을 추가할 수 있습니다.  
  
-   기본 컬렉션에 항목을 추가할 수 있습니다.  예를 들어, 컬렉션이 읽기 전용 이면 <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> 는 `false`합니다.  
  
-   <xref:System.ComponentModel.IEditableCollectionView> 컬렉션에 있는 형식의 개체를 만들 수 있습니다.  예를 들어, 컬렉션 형식의 경우 <xref:System.Collections.ObjectModel.ObservableCollection%601>서 <xref:System.ComponentModel.IEditableCollectionView> 형식의 개체를 만들 수 있어야 `T`합니다.  
  
   
  
## Examples  
 다음 예제에서는 컬렉션에는 항목을 추가할 수 있는지 여부를 확인 합니다.  하는 경우 <xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A> 는 `false`의 예제에서는 사용자 항목을 추가할 수 없습니다.  그렇지 않으면 새 항목을 추가 하 라는 메시지는 양식을 보여 줍니다. 전체 샘플을 보려면 [IEditableCollectionView 예제를 사용 하 여 컬렉션을 변경](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) 합니다.  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCancelEdit">
      <MemberSignature Language="C#" Value="public bool CanCancelEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanCancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanCancelEdit { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanCancelEdit : bool" Usage="System.ComponentModel.IEditableCollectionView.CanCancelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컬렉션 뷰에서 보류 중인 변경 내용을 삭제하고 편집된 개체의 원래 값을 복원할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>컬렉션 뷰에서 보류 중인 변경 내용을 삭제하고 편집된 개체의 원래 값을 복원할 수 있으면 <see langword="true" />이고, 복원할 수 없으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> `true` 뷰의 현재 편집한 항목에 "보류 중인 변경 내용"의 개념을 지원 하는 경우.   예를 들어, 컬렉션 뷰를 반환할 수 있습니다 `true` 편집한 항목을 구현 하는 경우 <xref:System.ComponentModel.IEditableObject>, 보기에 배포 하는 데 사용할 수 있는 항목의 상태에 대 한 정보가 경우 또는 다시 변경 합니다. <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> `false` 경우 뷰 개체의 변경 내용이 되돌릴 수 없습니다.  이 경우 호출 <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> 편집 상태를 종료 하 고 편집 된 개체의 변경 내용이 되돌릴 논리를 제공 하 여 뷰가 있습니다.  
  
   
  
## Examples  
 다음 예제를 가져옵니다 <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> 를 호출 하기 전에 편집된 된 항목의 원래 값을 복원할 수 있는지 여부를 확인 하려면 <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>합니다.  값을 복원할 수 없는 경우 추가 논리를 제공 해야 합니다.  이 예제에서는 호출 하는 경우 값이 복원 됩니다 수 있는 <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>합니다.   전체 샘플을 보려면 [IEditableCollectionView 예제를 사용 하 여 컬렉션을 변경](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)합니다.  
  
 [!code-csharp[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="abstract member CancelEdit : unit -&gt; unit" Usage="iEditableCollectionView.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>편집 트랜잭션을 끝내고 가능한 경우 항목의 원래 값을 복원합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> 설정 <xref:System.ComponentModel.IEditableCollectionView.CurrentEditItem%2A> 에 `null` 컬렉션 뷰를 편집 상태를 종료 하 고 있습니다.  하는 경우 <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> 됩니다 `true`, <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> 도 편집된 된 개체의 원래 값을 복원 합니다.  
  
   
  
## Examples  
 다음 예제를 가져옵니다 <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> 를 호출 하기 전에 편집된 된 항목의 원래 값을 복원할 수 있는지 여부를 확인 하려면 <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>합니다.  값을 복원할 수 없는 경우 추가 논리를 제공 해야 합니다.  이 예제에서는 호출 하는 경우 값이 복원 됩니다 수 있는 <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>합니다. 전체 샘플을 보려면 [IEditableCollectionView 예제를 사용 하 여 컬렉션을 변경](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)합니다.  
  
 [!code-csharp[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelNew">
      <MemberSignature Language="C#" Value="public void CancelNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CancelNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelNew();" />
      <MemberSignature Language="F#" Value="abstract member CancelNew : unit -&gt; unit" Usage="iEditableCollectionView.CancelNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>추가 트랜잭션을 끝내고 보류 중인 새 항목을 삭제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 새 항목을 추가 하 라는 메시지를 표시 하는 폼을 표시 합니다.  예제를 호출 하는 사용자가 폼을 전송 <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> 컬렉션에 항목을 추가 합니다.  사용자가 폼을 취소를 호출 하 여 <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> 항목을 삭제 하도록 합니다. 전체 샘플을 보려면 [IEditableCollectionView 예제를 사용 하 여 컬렉션을 변경](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)합니다.  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemove">
      <MemberSignature Language="C#" Value="public bool CanRemove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRemove" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanRemove" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRemove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRemove { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRemove : bool" Usage="System.ComponentModel.IEditableCollectionView.CanRemove" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컬렉션에서 항목을 제거할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>컬렉션에서 항목을 제거할 수 있으면 <see langword="true" />이고, 제거할 수 없으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> `false` 기본 컬렉션이 읽기 전용인 경우.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> 컬렉션에서 항목을 제거할 수 있는지 여부를 확인 합니다.  이 예제에서는 호출 동작을 확인 하 라는 항목을 제거할 수 있으면 <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> 를 클릭 하면 **예**합니다. 전체 샘플을 보려면 [IEditableCollectionView 예제를 사용 하 여 컬렉션을 변경](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)합니다.  
  
 [!code-csharp[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#removeitem)]
 [!code-vb[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#removeitem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public void CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommitEdit();" />
      <MemberSignature Language="F#" Value="abstract member CommitEdit : unit -&gt; unit" Usage="iEditableCollectionView.CommitEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>편집 트랜잭션을 끝내고 보류 중인 변경 내용을 저장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 기존 항목을 편집 하 라는 메시지는 폼을 만듭니다.  이 예제에서는 호출 하는 사용자가 폼을 전송 <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> 컬렉션에 저장 합니다.  예제를 호출 하는 사용자가 폼을 취소 <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> 에 변경 내용을 취소 합니다. 전체 샘플을 보려면 [IEditableCollectionView 예제를 사용 하 여 컬렉션을 변경](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)합니다.  
  
 [!code-csharp[EditingCollectionsSnippets#EditItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#edititem)]
 [!code-vb[EditingCollectionsSnippets#EditItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#edititem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitNew">
      <MemberSignature Language="C#" Value="public void CommitNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CommitNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommitNew();" />
      <MemberSignature Language="F#" Value="abstract member CommitNew : unit -&gt; unit" Usage="iEditableCollectionView.CommitNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>추가 트랜잭션을 끝내고 보류 중인 새 항목을 저장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 필터링, 정렬 또는 그룹화 된 적용할 합니다 <xref:System.Windows.Data.CollectionView> 새에 적용 됩니다 때 항목 <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> 라고 합니다.  
  
   
  
## Examples  
 다음 예제에서는 새 항목을 추가 하 라는 메시지를 표시 하는 폼을 표시 합니다.  예제를 호출 하는 사용자가 폼을 전송 <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> 컬렉션에 항목을 추가 합니다.  사용자가 폼을 취소를 호출 하 여 <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> 항목을 삭제 하도록 합니다. 전체 샘플을 보려면 [IEditableCollectionView 예제를 사용 하 여 컬렉션을 변경](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)합니다.  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentAddItem">
      <MemberSignature Language="C#" Value="public object CurrentAddItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentAddItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentAddItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentAddItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentAddItem : obj" Usage="System.ComponentModel.IEditableCollectionView.CurrentAddItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 추가 트랜잭션 중에 추가되는 항목을 가져옵니다.</summary>
        <value><see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" />가 <see langword="true" />이면 추가되는 항목이고, 그렇지 않으면 <see langword="null" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentEditItem">
      <MemberSignature Language="C#" Value="public object CurrentEditItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentEditItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentEditItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentEditItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentEditItem : obj" Usage="System.ComponentModel.IEditableCollectionView.CurrentEditItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>편집되는 컬렉션의 항목을 가져옵니다.</summary>
        <value><see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" />이 <see langword="true" />인 경우 편집 중인 컬렉션의 항목이고, 그렇지 않으면 <see langword="null" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditItem">
      <MemberSignature Language="C#" Value="public void EditItem (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EditItem(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EditItem (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EditItem(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member EditItem : obj -&gt; unit" Usage="iEditableCollectionView.EditItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">편집할 항목입니다.</param>
        <summary>지정된 항목에 대해 편집 트랜잭션을 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 기존 항목을 편집 하 라는 메시지는 폼을 만듭니다.  사용자가 폼을 제출 하는 경우 변경 내용을 컬렉션에 커밋됩니다.  사용자가 폼을 취소 하는 경우 변경 내용이 삭제 됩니다. 전체 샘플을 보려면 [IEditableCollectionView 예제를 사용 하 여 컬렉션을 변경](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections) 합니다.  
  
 [!code-csharp[EditingCollectionsSnippets#EditItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#edititem)]
 [!code-vb[EditingCollectionsSnippets#EditItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#edititem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddingNew">
      <MemberSignature Language="C#" Value="public bool IsAddingNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAddingNew" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAddingNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAddingNew { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAddingNew : bool" Usage="System.ComponentModel.IEditableCollectionView.IsAddingNew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>추가 트랜잭션이 진행 중인지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>추가 트랜잭션이 진행 중이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 추가 트랜잭션이 호출 하 여 시작 <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A> 를 호출 하 여 추가 트랜잭션을 종료 <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> 또는 <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditingItem">
      <MemberSignature Language="C#" Value="public bool IsEditingItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditingItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEditingItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditingItem { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEditingItem : bool" Usage="System.ComponentModel.IEditableCollectionView.IsEditingItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>편집 트랜잭션이 진행 중인지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>편집 트랜잭션이 진행 중이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 하 여 편집 트랜잭션을 시작 하기 <xref:System.ComponentModel.IEditableCollectionView.EditItem%2A> 를 호출 하 여 트랜잭션을 종료 <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> 또는 <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewItemPlaceholderPosition">
      <MemberSignature Language="C#" Value="public System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property NewItemPlaceholderPosition As NewItemPlaceholderPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::NewItemPlaceholderPosition NewItemPlaceholderPosition { System::ComponentModel::NewItemPlaceholderPosition get(); void set(System::ComponentModel::NewItemPlaceholderPosition value); };" />
      <MemberSignature Language="F#" Value="member this.NewItemPlaceholderPosition : System.ComponentModel.NewItemPlaceholderPosition with get, set" Usage="System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.NewItemPlaceholderPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컬렉션 뷰에서의 새 항목 자리 표시자 위치를 가져오거나 설정합니다.</summary>
        <value>컬렉션 뷰에서의 새 항목 자리 표시자 위치를 지정하는 열거형 값 중 하나입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit" Usage="iEditableCollectionView.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">제거할 항목입니다.</param>
        <summary>지정된 항목을 컬렉션에서 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 `item` 컬렉션에 없는 <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> 아무 작업도 수행 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> 컬렉션에서 항목을 제거할 수 있는지 여부를 확인 합니다.  이 예제에서는 호출 동작을 확인 하 라는 항목을 제거할 수 있으면 <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> 를 클릭 하면 **예**합니다. 전체 샘플을 보려면 [IEditableCollectionView 예제를 사용 하 여 컬렉션을 변경](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)합니다.  
  
 [!code-csharp[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#removeitem)]
 [!code-vb[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#removeitem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iEditableCollectionView.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">제거할 항목의 위치입니다.</param>
        <summary>컬렉션에서 지정된 위치의 항목을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `index` 컬렉션 뷰를 컬렉션이 아닌에 상대적입니다.  예를 들어 10 개 항목 및 뷰 컬렉션에 있는 경우에 <xref:System.ComponentModel.ICollectionView.Filter%2A> 의 유효한 값을 7 개 항목 표시 되도록 `index` 는 0에서 6 사이입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />가 0보다 작거나 컬렉션 뷰의 항목 수보다 큰 경우</exception>
      </Docs>
    </Member>
  </Members>
</Type>