<Type Name="ConfigurationConverterBase" FullName="System.Configuration.ConfigurationConverterBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fae1c25bcb9d380593bef18d0f4820f3ff9fe408" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56758688" /></Metadata><TypeSignature Language="C#" Value="public abstract class ConfigurationConverterBase : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConfigurationConverterBase extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ConfigurationConverterBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConfigurationConverterBase&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationConverterBase abstract : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type ConfigurationConverterBase = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>구성 변환기 형식의 기본 클래스입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ConfigurationConverterBase> 구성 유형을 변환기에 대 한 기본 클래스입니다. 이러한 형식은 문자열을 변환 하는, 관련 된 강력한 형식의 속성에서 구성 파일에서 찾을 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서 파생 하는 방법을 보여 합니다 <xref:System.Configuration.ConfigurationConverterBase> 클래스를 사용자 지정 만들기 <xref:System.TimeSpan> 변환기입니다. 또한 예제에는 사용자 지정 섹션에서이 형식을 사용 하는 방법을 보여 줍니다.  
  
 다음 코드 예제에는 사용자 지정을 만드는 방법을 보여 줍니다 <xref:System.TimeSpan> 에서 변환기는 <xref:System.Configuration.ConfigurationConverterBase> 클래스입니다.  
  
 [!code-csharp[System.Configuration.TimeSpanMinutesConverter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.TimeSpanMinutesConverter/CS/TimeSpanMinutesConverter.cs#1)]
 [!code-vb[System.Configuration.TimeSpanMinutesConverter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.TimeSpanMinutesConverter/VB/TimeSpanMinutesConverter.vb#1)]  
  
 다음 코드 예제에서는 이전 사용자 지정을 사용 하는 사용자 지정 섹션을 정의 하는 방법을 보여 줍니다. <xref:System.TimeSpan> 변환기입니다.  
  
 [!code-csharp[System.Configuration.ConfigurationConvertersCustomSection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationConvertersCustomSection/CS/ConfigurationConvertersCustomSection.cs#1)]
 [!code-vb[System.Configuration.ConfigurationConvertersCustomSection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationConvertersCustomSection/VB/ConfigurationConvertersCustomSection.vb#1)]  
  
 다음 코드 예제에는 만들고 이전 사용자 지정 섹션을 사용 하 여 구성 파일을 수정 하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Configuration.ConfigurationConverterBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationConverterBase/CS/ConfigurationConverterBase.cs#1)]
 [!code-vb[System.Configuration.ConfigurationConverterBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationConverterBase/VB/ConfigurationConverterBase.vb#1)]  
  
 다음은 인용 이전 예제에 사용 된 구성입니다.  
  
```xml  
<?xml version="1.0" encoding="utf-8"?>  
<configuration>  
  <configSections>  
    <section name="CustomSection"   
      type="Samples.AspNet.CustomSection,   
      ConfigurationConverters,   
      Version=1.0.0.0, Culture=neutral,   
      PublicKeyToken=null"   
      allowDefinition="Everywhere"   
      allowExeDefinition="MachineToApplication"   
      restartOnExternalChanges="true" />  
  </configSections>  
  <CustomSection fileName="default.txt" maxIdleTime="90" />  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.CommaDelimitedStringCollectionConverter" />
    <altmember cref="T:System.Configuration.GenericEnumConverter" />
    <altmember cref="T:System.Configuration.InfiniteIntConverter" />
    <altmember cref="T:System.Configuration.InfiniteTimeSpanConverter" />
    <altmember cref="T:System.Configuration.TimeSpanMinutesConverter" />
    <altmember cref="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter" />
    <altmember cref="T:System.Configuration.TimeSpanSecondsConverter" />
    <altmember cref="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter" />
    <altmember cref="T:System.Configuration.TypeNameConverter" />
    <altmember cref="T:System.Configuration.WhiteSpaceTrimStringConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConfigurationConverterBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationConverterBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ConfigurationConverterBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Configuration.ConfigurationConverterBase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 시스템에서 제공 하는 변환기 종류를 사용 하므로 필요 합니다 <xref:System.Configuration.ConfigurationConverterBase.%23ctor%2A> 생성자는 직접 변환 유형 만들어야 하는 경우.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext ctx, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ ctx, Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="configurationConverterBase.CanConvertFrom (ctx, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ctx">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
        <param name="type">변환할 <see cref="T:System.Type" />입니다.</param>
        <summary>변환이 허용되는지 여부를 확인합니다.</summary>
        <returns>변환이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ConfigurationConverterBase.CanConvertFrom%2A> 메서드는 구성 파일에 사용 되는 값 문자열을 가져오는 강력한 형식의 속성에는 변환을 수행할 수 있는지 여부를 결정 합니다.  
  
   
  
## Examples  
 다음 예제 코드를 재정의 하는 방법을 보여 줍니다 합니다 <xref:System.Configuration.ConfigurationConverterBase.CanConvertFrom%2A> 메서드를 사용자 지정 만들기 <xref:System.TimeSpan> 변환기입니다. 또한이 예제에서는 사용자 지정 섹션에서이 형식을 사용 하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Configuration.TimeSpanMinutesConverter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.TimeSpanMinutesConverter/CS/TimeSpanMinutesConverter.cs#3)]
 [!code-vb[System.Configuration.TimeSpanMinutesConverter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.TimeSpanMinutesConverter/VB/TimeSpanMinutesConverter.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext ctx, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext ctx, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ ctx, Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="configurationConverterBase.CanConvertTo (ctx, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ctx">형식 변환에 사용되는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 개체입니다.</param>
        <param name="type">변환할 대상 형식입니다.</param>
        <summary>변환이 허용되는지 여부를 확인합니다.</summary>
        <returns>변환이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ConfigurationConverterBase.CanConvertTo%2A> 메서드는 관련 된 강력한 형식의 속성에 구성 파일에 포함 된 문자열을 변환할 수 있는지 여부를 결정 합니다.  
  
   
  
## Examples  
 다음 예제 코드를 재정의 하는 방법을 보여 줍니다 합니다 <xref:System.Configuration.ConfigurationConverterBase.CanConvertTo%2A> 메서드를 사용자 지정 만들기 <xref:System.TimeSpan> 변환기입니다. 또한이 예제에서는 사용자 지정 섹션에서이 형식을 사용 하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Configuration.TimeSpanMinutesConverter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.TimeSpanMinutesConverter/CS/TimeSpanMinutesConverter.cs#2)]
 [!code-vb[System.Configuration.TimeSpanMinutesConverter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.TimeSpanMinutesConverter/VB/TimeSpanMinutesConverter.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>