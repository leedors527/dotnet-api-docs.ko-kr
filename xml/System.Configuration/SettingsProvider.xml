<Type Name="SettingsProvider" FullName="System.Configuration.SettingsProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e7f52b620dcf453e22ecba312320a96021be7efa" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56773300" /></Metadata><TypeSignature Language="C#" Value="public abstract class SettingsProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SettingsProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.SettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SettingsProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SettingsProvider abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type SettingsProvider = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>응용 프로그램 설정 아키텍처에서 사용자 지정 설정 공급자를 파생시키기 위한 기본 클래스 역할을 합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정 공급자는 애플리케이션 설정 아키텍처에서 사용 되는 구성 데이터를 저장 하기 위한 메커니즘을 정의 합니다. 단일 기본 설정 공급자를 포함 하는.NET Framework <xref:System.Configuration.LocalFileSettingsProvider>, 로컬 파일 시스템에 구성 데이터를 저장 하는 합니다. 그러나 추상 <xref:System.Configuration.SettingsProvider> 클래스에서 파생하여 대체 스토리지 메커니즘을 만들 수 있습니다. 래퍼 클래스를 사용 하는 공급자를 사용 하 여 래퍼 클래스에 의해 결정 됩니다는 <xref:System.Configuration.SettingsProviderAttribute>합니다. 이 특성을 제공 하지 않으면 기본값인 경우 <xref:System.Configuration.LocalFileSettingsProvider>에 사용 됩니다.  
  
 최소한 사용자 지정 설정 공급자를 만들 때이 클래스의 세 가지 방법에 대 한 구현을 제공 해야 합니다. <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>, <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> 및 <xref:System.Configuration.SettingsProvider.ApplicationName%2A>합니다.  
  
 클라이언트 애플리케이션에 추가할 수 있습니다 더욱 표준화 된 기능 사용자 지정 공급자를 구현 하 여는 <xref:System.Configuration.IApplicationSettingsProvider> 인터페이스입니다. 이 인터페이스의 메서드를 반영 합니다 <xref:System.Configuration.ApplicationSettingsBase> 주로 버전 관리 지원을 사용 하도록 설정 하는 클래스입니다.  
  
 일반적으로 스토리지 리소스 경합을 방지하기 위해 설정 공급자를 단일 인스턴스로 디자인해야 합니다. 공급자도 스레드로부터 안전한 되므로 해야 단일 애플리케이션 도메인에서 여러 래퍼 인스턴스 또는 다른 도메인에 여러 애플리케이션에서 동시에 호출할 수 있습니다.  
  
 설정 공급자를 최소한 세 가지 특성을 인식 해야 합니다 <xref:System.Configuration.ApplicationScopedSettingAttribute>하십시오 <xref:System.Configuration.UserScopedSettingAttribute>, 및 <xref:System.Configuration.DefaultSettingValueAttribute>합니다. 애플리케이션 설정에 적용할 수 있는 특성의 전체 목록을 보려면 [애플리케이션 설정 특성](~/docs/framework/winforms/advanced/application-settings-attributes.md)합니다. 사용자 지정 설정 공급자를 다음과 같이 설정 속성에 적용 된 특성을 확인 합니다.  
  
1.  공급자 특성 사용 권한에 포함 된 요청을 수행할 수, 하는 경우 분명을 수행 해야 합니다.  
  
2.  공급자는 요청을 수행할 수 없습니다, 하는 경우 자동으로 무시 해야 하 합니다.  
  
3.  둘 이상의 속성; 충돌 하는 경우 예를 들어, 둘 다 지정 되 고 속성 <xref:System.Configuration.ApplicationScopedSettingAttribute> 하 고 <xref:System.Configuration.UserScopedSettingAttribute>; 공급자 throw 해야를 <xref:System.Configuration.ConfigurationException>합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
    <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <altmember cref="T:System.Configuration.ConfigurationException" />
    <related type="Article" href="https://msdn.microsoft.com/library/c8eb2ad0-fac6-4ea2-9140-675a4a44d562">애플리케이션 설정 아키텍처</related>
    <related type="Article" href="https://msdn.microsoft.com/library/53caa66c-a9fb-43a5-953c-ad092590098d">애플리케이션 설정 특성</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SettingsProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SettingsProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Configuration.SettingsProvider" /> 클래스의 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 추상 클래스에 대 한이 기본 보호 된 생성자입니다. 파생 된 사용자 지정 설정 공급자 때문에 명시적 생성자를 제공할 필요가 없습니다를 <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> 메서드 일반적으로 모든 초기화를 수행 합니다.  
  
 클라이언트 코드가 일반적으로 직접 인스턴스화하지 않습니다 설정 공급자입니다. 특정 설정 속성에 대 한 설정 공급자를 찾으려면 다음 절차를 사용 하는 대신  
  
1.  호출 된 <xref:System.ComponentModel.Component.GetService%2A> 현재 메서드 <xref:System.ComponentModel.Component> 또는 <xref:System.ComponentModel.ISite> 현재에 대 한 참조를 반환할 <xref:System.Configuration.ISettingsProviderService>합니다.  
  
2.  호출 된 <xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A> 메서드는 <xref:System.Configuration.ISettingsProviderService> 설정 공급자를 반환 하는 첫 번째 단계에서 검색 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
        <altmember cref="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SettingsProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Configuration.SettingsProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 실행되는 응용 프로그램의 이름을 가져오거나 설정합니다.</summary>
        <value>A <see cref="T:System.String" /> 를 포함 하지 않는 전체 경로 또는 확장명을 예를 들어, 애플리케이션의 약식된 이름을 포함 하는 <c>SimpleAppSettings</c>합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Configuration.SettingsProvider.ApplicationName%2A> 및 <xref:System.Configuration.Provider.ProviderBase.Name%2A> 속성 마찬가지로 다른 애플리케이션에서 명명 된 설정 속성을 구분 하는 데 도움이 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Provider.ProviderBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPropertyValues (context As SettingsContext, collection As SettingsPropertyCollection) As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Configuration::SettingsPropertyValueCollection ^ GetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ collection);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; System.Configuration.SettingsPropertyValueCollection" Usage="settingsProvider.GetPropertyValues (context, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">현재 응용 프로그램의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
        <param name="collection">값이 검색될 설정 속성 그룹을 포함하는 <see cref="T:System.Configuration.SettingsPropertyCollection" />입니다.</param>
        <summary>지정된 응용 프로그램 인스턴스와 설정 속성 그룹에 대한 설정 속성 값의 컬렉션을 반환합니다.</summary>
        <returns>지정된 설정 속성 그룹에 대한 값을 포함하는 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A> 특별 한 설정이 처리할 메서드를 구현 합니다, 표시 된 <xref:System.Configuration.SpecialSettingAttribute>뿐 아니라 애플리케이션 및 사용자 설정을 조정 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SpecialSettingAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyValueCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetPropertyValues (context As SettingsContext, collection As SettingsPropertyValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyValueCollection ^ collection);" />
      <MemberSignature Language="F#" Value="abstract member SetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyValueCollection -&gt; unit" Usage="settingsProvider.SetPropertyValues (context, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="context">현재 응용 프로그램의 용도를 설명하는 <see cref="T:System.Configuration.SettingsContext" />입니다.</param>
        <param name="collection">설정할 속성 설정 그룹을 나타내는 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />입니다.</param>
        <summary>지정된 속성 설정 그룹의 값을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ApplicationSettingsBase> 포함 된 <xref:System.Configuration.ApplicationSettingsBase.Save%2A> 메서드를 모든 해당 설정 속성의 값을 유지 하기 위해 호출 됩니다. 이 메서드는 모든 설정을 통해 열거 해당 설정 속성 및 호출을 사용 하 여 연결 된 공급자를 <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> 각각에 대 한 메서드 <xref:System.Configuration.SettingsProvider> 실제 serialization 작업을 수행 하 합니다.  
  
 <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> 보안을 염두에 메서드를 구현 해야 합니다.  
  
-   애플리케이션 설정을 업데이트 하려면 완전히 신뢰할 수 있는 코드만 허용 되어야 합니다. 부분적으로 신뢰할 수 있는 코드는 사용자 애플리케이션 설정을 업데이트할 수 허용 되어야 합니다. 신뢰할 수 없는 코드는 일반적으로 애플리케이션 설정을 업데이트할 수 없습니다.  
  
-   부분적으로 신뢰할 수 있는 애플리케이션에서 사용 할당량 리소스 공격 방지 하기 위해 고려해 야 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
  </Members>
</Type>