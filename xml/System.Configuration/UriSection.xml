<Type Name="UriSection" FullName="System.Configuration.UriSection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c7ad2f80d8c1cf617050dd172d21115ccce77401" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56789225" /></Metadata><TypeSignature Language="C#" Value="public sealed class UriSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UriSection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.UriSection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UriSection&#xA;Inherits ConfigurationSection" />
  <TypeSignature Language="C++ CLI" Value="public ref class UriSection sealed : System::Configuration::ConfigurationSection" />
  <TypeSignature Language="F#" Value="type UriSection = class&#xA;    inherit ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>구성 파일에 있는 Uri 섹션을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기존 <xref:System.Uri?displayProperty=nameWithType> 클래스 식별자 IRI (International Resource) 및 다국어 도메인 이름에 대 한 지원을 제공 하도록 확장 되었습니다. 현재 사용자는 특히 IRI 및 IDN를 사용 하지 않는 한.NET Framework 2.0 동작에서 표시 되지 않습니다. 이 덕분에 .NET Framework 이전 버전과의 애플리케이션 호환성이 제공됩니다.  
  
 IRI 및 IDN에 대 한 구성 설정을 사용 하 여 검색할 수 있습니다는 <xref:System.Configuration.UriSection> 클래스입니다.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/index.md">네트워크 설정 스키마</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.UriSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Configuration.UriSection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기존 <xref:System.Uri?displayProperty=nameWithType> 클래스 식별자 IRI (International Resource) 및 다국어 도메인 이름에 대 한 지원을 제공 하도록 확장 되었습니다. 현재 사용자는 특히 IRI 및 IDN를 사용 하지 않는 한.NET Framework 2.0 동작에서 표시 되지 않습니다. 이 덕분에 .NET Framework 이전 버전과의 애플리케이션 호환성이 제공됩니다.  
  
 IRI 및 IDN에 대 한 구성 설정을 사용 하 여 검색할 수 있습니다는 <xref:System.Configuration.UriSection> 클래스입니다.  
  
 IRI 지원에 대 한 자세한 내용은 설명 섹션을 참조 하세요.를 <xref:System.Uri?displayProperty=nameWithType> 클래스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Idn">
      <MemberSignature Language="C#" Value="public System.Configuration.IdnElement Idn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.IdnElement Idn" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.UriSection.Idn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Idn As IdnElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::IdnElement ^ Idn { System::Configuration::IdnElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Idn : System.Configuration.IdnElement" Usage="System.Configuration.UriSection.Idn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.Configuration.ConfigurationProperty("idn")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.IdnElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Configuration.IdnElement" /> 클래스에 IDN(International Domain Name) 처리에 대한 구성 설정을 포함하는 <see cref="T:System.Uri" /> 개체를 가져옵니다.</summary>
        <value><see cref="T:System.Uri" /> 클래스에서 IDN(International Domain Name) 처리에 대한 구성 설정입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기존 <xref:System.Uri?displayProperty=nameWithType> 클래스 식별자 IRI (International Resource) 및 다국어 도메인 이름에 대 한 지원을 제공 하도록 확장 되었습니다. 현재 사용자는 특히 IRI 및 IDN를 사용 하지 않는 한.NET Framework 2.0 동작에서 표시 되지 않습니다. 이 덕분에 .NET Framework 이전 버전과의 애플리케이션 호환성이 제공됩니다.  
  
 IRI 및 IDN에 대 한 구성 설정을 사용 하 여 검색할 수 있습니다는 <xref:System.Configuration.UriSection> 클래스입니다. <xref:System.Configuration.UriSection.Idn%2A> 속성에서 처리 IDN에 대 한 구성 설정을 반환 합니다 <xref:System.Uri?displayProperty=nameWithType> 클래스입니다.  
  
 IDN 처리가 가능하려면 IRI 처리를 사용하도록 설정해야 합니다. IRI 처리가 사용하지 않도록 설정되면 IDN 처리는 .NET Framework 2.0 동작이 호환성에 사용되고 IDN 이름이 사용되지 않는 기본 설정으로 지정됩니다.  
  
 다국어 도메인 이름 (IDN) 특성만 IDN 처리를 제어합니다. 다른 모든 IRI 처리 (예: 문자 정규화)는 기본적으로 수행 됩니다.  
  
 에 대 한 구성 설정을 합니다 <xref:System.Configuration.IdnElement> 는 한 번 읽을 때 첫 번째 <xref:System.Uri?displayProperty=nameWithType> 클래스 생성 됩니다. 해당 시점 후의 구성 설정 변경 내용은 무시됩니다.  
  
 IRI 지원에 대 한 자세한 내용은 설명 섹션을 참조 하세요.를 <xref:System.Uri?displayProperty=nameWithType> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.IdnElement" />
        <altmember cref="T:System.Configuration.IriParsingElement" />
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/index.md">네트워크 설정 스키마</related>
      </Docs>
    </Member>
    <Member MemberName="IriParsing">
      <MemberSignature Language="C#" Value="public System.Configuration.IriParsingElement IriParsing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.IriParsingElement IriParsing" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.UriSection.IriParsing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IriParsing As IriParsingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::IriParsingElement ^ IriParsing { System::Configuration::IriParsingElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IriParsing : System.Configuration.IriParsingElement" Usage="System.Configuration.UriSection.IriParsing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.Configuration.ConfigurationProperty("iriParsing")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.IriParsingElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Configuration.IriParsingElement" /> 클래스에 IRI(International Resource Identifiers) 구문 분석에 대한 구성 설정을 포함하는 <see cref="T:System.Uri" /> 개체를 가져옵니다.</summary>
        <value><see cref="T:System.Uri" /> 클래스에서 IRI(International Resource Identifiers) 구문 분석에 대한 구성 설정입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기존 <xref:System.Uri?displayProperty=nameWithType> 클래스 식별자 IRI (International Resource) 및 다국어 도메인 이름에 대 한 지원을 제공 하도록 확장 되었습니다. 현재 사용자는 특히 IRI 및 IDN를 사용 하지 않는 한.NET Framework 2.0 동작에서 표시 되지 않습니다. 이 덕분에 .NET Framework 이전 버전과의 애플리케이션 호환성이 제공됩니다.  
  
 IRI 및 IDN에 대 한 구성 설정을 사용 하 여 검색할 수 있습니다는 <xref:System.Configuration.UriSection> 클래스입니다. <xref:System.Configuration.UriSection.IriParsing%2A> 속성의 IRI 구문 분석에 대 한 구성 설정을 반환 합니다 <xref:System.Uri?displayProperty=nameWithType> 클래스입니다.  
  
 IDN 처리가 가능하려면 IRI 처리를 사용하도록 설정해야 합니다. IRI 처리가 사용하지 않도록 설정되면 IDN 처리는 .NET Framework 2.0 동작이 호환성에 사용되고 IDN 이름이 사용되지 않는 기본 설정으로 지정됩니다.  
  
 다국어 도메인 이름 (IDN) 특성만 IDN 처리를 제어합니다. 다른 모든 IRI 처리 (예: 문자 정규화)는 기본적으로 수행 됩니다.  
  
 에 대 한 구성 설정을 합니다 <xref:System.Configuration.IriParsingElement> 는 한 번 읽을 때 첫 번째 <xref:System.Uri?displayProperty=nameWithType> 클래스 생성 됩니다. 해당 시점 후의 구성 설정 변경 내용은 무시됩니다.  
  
 IRI 지원에 대 한 자세한 내용은 설명 섹션을 참조 하세요.를 <xref:System.Uri?displayProperty=nameWithType> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.IdnElement" />
        <altmember cref="T:System.Configuration.IriParsingElement" />
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/index.md">네트워크 설정 스키마</related>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.UriSection.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Configuration.UriSection.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemeSettings">
      <MemberSignature Language="C#" Value="public System.Configuration.SchemeSettingElementCollection SchemeSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.SchemeSettingElementCollection SchemeSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.UriSection.SchemeSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemeSettings As SchemeSettingElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::SchemeSettingElementCollection ^ SchemeSettings { System::Configuration::SchemeSettingElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemeSettings : System.Configuration.SchemeSettingElementCollection" Usage="System.Configuration.UriSection.SchemeSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.Configuration.ConfigurationProperty("schemeSettings")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SchemeSettingElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Configuration.SchemeSettingElementCollection" /> 클래스의 스키마 구문 분석에 대한 구성 설정을 포함하는 <see cref="T:System.Uri" /> 개체를 가져옵니다.</summary>
        <value><see cref="T:System.Uri" /> 클래스의 스키마 구문 분석에 대한 구성 설정입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.UriSection.SchemeSettings%2A> 속성은 제네릭이 아닙니다. GenericUriParserOptions만 = HTTP와 HTTPS 스키마는 지원에 대 한 "DontUnescapePathDotsAndSlashes" 구성 설정입니다. 다른 모든 설정은 무시 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.SchemeSettingElement" />
        <altmember cref="T:System.Configuration.SchemeSettingElementCollection" />
        <altmember cref="T:System.GenericUriParserOptions" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/index.md">네트워크 설정 스키마</related>
      </Docs>
    </Member>
  </Members>
</Type>