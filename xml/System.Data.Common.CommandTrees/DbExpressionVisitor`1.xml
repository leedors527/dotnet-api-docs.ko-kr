<Type Name="DbExpressionVisitor&lt;TResultType&gt;" FullName="System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="97791b4901316d7de334b472671414143f5fd190" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57921576" /></Metadata><TypeSignature Language="C#" Value="public abstract class DbExpressionVisitor&lt;TResultType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbExpressionVisitor`1&lt;TResultType&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbExpressionVisitor(Of TResultType)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TResultType&gt;&#xA;public ref class DbExpressionVisitor abstract" />
  <TypeSignature Language="F#" Value="type DbExpressionVisitor&lt;'ResultType&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResultType" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TResultType">visitor에서 생성되는 결과의 형식입니다.</typeparam>
    <summary>특정 형식의 결과 값을 반환하는 방문자가 구현해야 하는 기본 기능을 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Common.CommandTrees.DbExpressionVisitor%601>는 식 탐색을 설명하는 추상 클래스입니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbExpressionVisitor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbExpressionVisitor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor`1" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Visit">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>식의 방문자 패턴을 구현합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbAndExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbAndExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbAndExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbAndExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbAndExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbAndExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbAndExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbApplyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbApplyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbApplyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbApplyExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbApplyExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbApplyExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbApplyExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbArithmeticExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbArithmeticExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbArithmeticExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbArithmeticExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbArithmeticExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbArithmeticExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbCaseExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbCaseExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCaseExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbCaseExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbCaseExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbCaseExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbCaseExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbCastExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbCastExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCastExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbCastExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbCastExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbCastExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbCastExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbComparisonExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbComparisonExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbComparisonExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbComparisonExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbComparisonExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbComparisonExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbConstantExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbConstantExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbConstantExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbConstantExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbConstantExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbConstantExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbConstantExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbCrossJoinExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbCrossJoinExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbCrossJoinExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbCrossJoinExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbCrossJoinExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbCrossJoinExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbDerefExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbDerefExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDerefExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbDerefExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbDerefExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbDerefExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbDerefExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbDistinctExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbDistinctExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbDistinctExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbDistinctExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbDistinctExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbDistinctExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbElementExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbElementExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbElementExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbElementExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbElementExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbElementExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbElementExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbEntityRefExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbEntityRefExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbEntityRefExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbEntityRefExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbEntityRefExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbEntityRefExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbExceptExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbExceptExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExceptExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbExceptExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbExceptExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbExceptExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbExceptExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 인식되지 않는 형식의 모든 식을 처리합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 인식할 수 없는 형식의 식이 발견되면 호출됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbFilterExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbFilterExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFilterExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbFilterExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbFilterExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbFilterExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbFilterExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbFunctionExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbFunctionExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbFunctionExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbFunctionExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbFunctionExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbFunctionExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbGroupByExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbGroupByExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbGroupByExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbGroupByExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbGroupByExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbGroupByExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbIntersectExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbIntersectExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbIntersectExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbIntersectExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbIntersectExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIntersectExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbIsEmptyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbIsEmptyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbIsEmptyExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbIsEmptyExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbIsEmptyExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIsEmptyExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbIsNullExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbIsNullExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbIsNullExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbIsNullExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbIsNullExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIsNullExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbIsOfExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbIsOfExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbIsOfExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbIsOfExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbIsOfExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIsOfExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbJoinExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbJoinExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbJoinExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbJoinExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbJoinExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbJoinExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbJoinExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public virtual TResultType Visit (System.Data.Common.CommandTrees.DbLambdaExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbLambdaExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Visit (expression As DbLambdaExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResultType Visit(System::Data::Common::CommandTrees::DbLambdaExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbLambdaExpression -&gt; 'ResultType&#xA;override this.Visit : System.Data.Common.CommandTrees.DbLambdaExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbLambdaExpression" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" />의 방문자 패턴 메서드를 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbLikeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbLikeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLikeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbLikeExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbLikeExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbLikeExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbLikeExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbLimitExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbLimitExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLimitExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbLimitExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbLimitExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbLimitExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbLimitExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbNewInstanceExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbNewInstanceExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbNewInstanceExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbNewInstanceExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbNewInstanceExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbNewInstanceExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbNotExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbNotExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNotExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbNotExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbNotExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbNotExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbNotExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbNullExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbNullExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNullExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbNullExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbNullExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbNullExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbNullExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbOfTypeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbOfTypeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbOfTypeExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbOfTypeExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbOfTypeExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbOfTypeExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbOrExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbOrExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOrExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbOrExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbOrExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbOrExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbOrExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbParameterReferenceExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbParameterReferenceExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbParameterReferenceExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbParameterReferenceExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbParameterReferenceExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbParameterReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbProjectExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbProjectExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbProjectExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbProjectExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbProjectExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbProjectExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbProjectExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbPropertyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbPropertyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbPropertyExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbPropertyExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbPropertyExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbPropertyExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbQuantifierExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbQuantifierExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbQuantifierExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbQuantifierExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbQuantifierExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbQuantifierExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbRefExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbRefExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbRefExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbRefExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbRefExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbRefExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbRefKeyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbRefKeyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbRefKeyExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbRefKeyExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbRefKeyExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbRefKeyExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbRelationshipNavigationExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbRelationshipNavigationExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbRelationshipNavigationExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbRelationshipNavigationExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbRelationshipNavigationExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbScanExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbScanExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbScanExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbScanExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbScanExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbScanExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbScanExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbSkipExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbSkipExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSkipExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbSkipExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbSkipExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbSkipExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbSkipExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbSortExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbSortExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSortExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbSortExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbSortExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbSortExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbSortExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbTreatExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbTreatExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbTreatExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbTreatExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbTreatExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbTreatExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbTreatExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbUnionAllExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbUnionAllExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbUnionAllExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbUnionAllExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbUnionAllExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbUnionAllExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract TResultType Visit (System.Data.Common.CommandTrees.DbVariableReferenceExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResultType Visit(class System.Data.Common.CommandTrees.DbVariableReferenceExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Visit (expression As DbVariableReferenceExpression) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TResultType Visit(System::Data::Common::CommandTrees::DbVariableReferenceExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbVariableReferenceExpression -&gt; 'ResultType" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbVariableReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="expression">방문 중인 <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />입니다.</param>
        <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />의 방문자 패턴을 구현합니다.</summary>
        <returns>특정 형식의 결과 값입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>