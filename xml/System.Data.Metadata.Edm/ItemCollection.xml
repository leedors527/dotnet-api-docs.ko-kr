<Type Name="ItemCollection" FullName="System.Data.Metadata.Edm.ItemCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1a85f64dbbef062e36f1e9c81fe7911387922f5a" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51937096" /></Metadata><TypeSignature Language="C#" Value="public abstract class ItemCollection : System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Metadata.Edm.GlobalItem&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ItemCollection extends System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1&lt;class System.Data.Metadata.Edm.GlobalItem&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Metadata.Edm.ItemCollection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ItemCollection&#xA;Inherits ReadOnlyMetadataCollection(Of GlobalItem)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ItemCollection abstract : System::Data::Metadata::Edm::ReadOnlyMetadataCollection&lt;System::Data::Metadata::Edm::GlobalItem ^&gt;" />
  <TypeSignature Language="F#" Value="type ItemCollection = class&#xA;    inherit ReadOnlyMetadataCollection&lt;GlobalItem&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Metadata.Edm.GlobalItem&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">System.Data.Metadata.Edm.GlobalItem</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Data.Metadata.Edm.ObjectItemCollection" />, <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" /> 및 <see cref="T:System.Data.Mapping.StorageMappingItemCollection" /> 클래스의 기본 클래스입니다. <see cref="T:System.Data.Metadata.Edm.ItemCollection" /> 클래스는 추상 클래스이며 메모리 내 메타데이터를 로드 및 유지하는 핵심 API를 제공합니다. 이 클래스는 <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> 클래스에서 파생됩니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 자세한 내용은 [항목 컬렉션 (메타 데이터)](https://msdn.microsoft.com/library/3051a40a-ff45-42f8-8f93-7545e427a404)합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DataSpace">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.DataSpace DataSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Metadata.Edm.DataSpace DataSpace" />
      <MemberSignature Language="DocId" Value="P:System.Data.Metadata.Edm.ItemCollection.DataSpace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSpace As DataSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::DataSpace DataSpace { System::Data::Metadata::Edm::DataSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSpace : System.Data.Metadata.Edm.DataSpace" Usage="System.Data.Metadata.Edm.ItemCollection.DataSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.DataSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 항목 컬렉션과 연결된 데이터 모델을 가져옵니다.</summary>
        <value>이 항목 컬렉션과 연결된 데이터 모델입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 <xref:System.Data.Metadata.Edm.DataSpace.OSpace>에 대해서는 <xref:System.Data.Metadata.Edm.ObjectItemCollection>를 반환하고 <xref:System.Data.Metadata.Edm.DataSpace.CSpace>에 대해서는 <xref:System.Data.Metadata.Edm.EdmItemCollection>를 반환하며 <xref:System.Data.Metadata.Edm.DataSpace.CSSpace>에 대해서는 <xref:System.Data.Mapping.StorageMappingItemCollection>를 반환합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEntityContainer">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 엔터티 컨테이너 이름을 사용하여 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 개체를 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEntityContainer">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EntityContainer GetEntityContainer(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEntityContainer (name As String) As EntityContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EntityContainer ^ GetEntityContainer(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetEntityContainer : string -&gt; System.Data.Metadata.Edm.EntityContainer" Usage="itemCollection.GetEntityContainer name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">엔터티 컨테이너의 이름입니다.</param>
        <summary>지정된 엔터티 컨테이너 이름을 사용하여 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 개체를 반환합니다.</summary>
        <returns>엔터티 컨테이너가 없으면 이 메서드는 null을 반환하고, 그렇지 않으면 첫 번째 엔터티 컨테이너를 반환합니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntityContainer">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EntityContainer GetEntityContainer(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEntityContainer (name As String, ignoreCase As Boolean) As EntityContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EntityContainer ^ GetEntityContainer(System::String ^ name, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="member this.GetEntityContainer : string * bool -&gt; System.Data.Metadata.Edm.EntityContainer" Usage="itemCollection.GetEntityContainer (name, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">엔터티 컨테이너의 이름입니다.</param>
        <param name="ignoreCase">대/소문자를 구분하지 않고 검색하려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</param>
        <summary>지정된 엔터티 컨테이너 이름을 사용하여 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 개체를 반환합니다.</summary>
        <returns>엔터티 컨테이너가 없으면 이 메서드는 null을 반환하고, 그렇지 않으면 첫 번째 엔터티 컨테이너를 반환합니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFunctions">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 이름을 사용하여 이 항목 컬렉션에서 함수의 모든 오버로드를 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFunctions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions (string functionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions(string functionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFunctions (functionName As String) As ReadOnlyCollection(Of EdmFunction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ GetFunctions(System::String ^ functionName);" />
      <MemberSignature Language="F#" Value="member this.GetFunctions : string -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;" Usage="itemCollection.GetFunctions functionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="functionName">함수의 전체 이름입니다.</param>
        <summary>지정된 이름을 사용하여 이 항목 컬렉션에서 함수의 모든 오버로드를 반환합니다.</summary>
        <returns>지정된 이름을 가진 모든 함수가 포함된 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 형식의 컬렉션입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFunctions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions (string functionName, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions(string functionName, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFunctions (functionName As String, ignoreCase As Boolean) As ReadOnlyCollection(Of EdmFunction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ GetFunctions(System::String ^ functionName, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="member this.GetFunctions : string * bool -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;" Usage="itemCollection.GetFunctions (functionName, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="functionName">함수의 전체 이름입니다.</param>
        <param name="ignoreCase">대/소문자를 구분하지 않고 검색하려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</param>
        <summary>지정된 이름을 사용하여 이 항목 컬렉션에서 함수의 모든 오버로드를 반환합니다.</summary>
        <returns>지정된 이름을 가진 모든 함수가 포함된 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 형식의 컬렉션입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFunctions">
      <MemberSignature Language="C#" Value="protected static System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions (System.Collections.Generic.Dictionary&lt;string,System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;&gt; functionCollection, string functionName, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions(class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt;&gt; functionCollection, string functionName, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}},System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetFunctions (functionCollection As Dictionary(Of String, ReadOnlyCollection(Of EdmFunction)), functionName As String, ignoreCase As Boolean) As ReadOnlyCollection(Of EdmFunction)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ GetFunctions(System::Collections::Generic::Dictionary&lt;System::String ^, System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^&gt; ^ functionCollection, System::String ^ functionName, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="static member GetFunctions : System.Collections.Generic.Dictionary&lt;string, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;&gt; * string * bool -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;" Usage="System.Data.Metadata.Edm.ItemCollection.GetFunctions (functionCollection, functionName, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionCollection" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;&gt;" />
        <Parameter Name="functionName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="functionCollection">함수 사전입니다.</param>
        <param name="functionName">함수의 전체 이름입니다.</param>
        <param name="ignoreCase">대/소문자를 구분하지 않고 검색하려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</param>
        <summary>지정된 이름을 사용하여 이 항목 컬렉션에서 함수의 모든 오버로드를 반환합니다.</summary>
        <returns>지정된 이름을 가진 모든 함수가 포함된 ReadOnlyCollection 형식의 컬렉션입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetItem&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ID로 지정된 항목을 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetItem&lt;T&gt; (string identity) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem(Of T As GlobalItem) (identity As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem T GetItem(System::String ^ identity);" />
      <MemberSignature Language="F#" Value="member this.GetItem : string -&gt; 'T (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="itemCollection.GetItem identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">메서드에서 반환하는 형식입니다.</typeparam>
        <param name="identity">항목의 ID입니다.</param>
        <summary>지정된 ID를 사용하여 강력한 형식의 <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> 개체를 반환합니다.</summary>
        <returns>ID로 지정된 항목입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetItem&lt;T&gt; (string identity, bool ignoreCase) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem(Of T As GlobalItem) (identity As String, ignoreCase As Boolean) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem T GetItem(System::String ^ identity, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="member this.GetItem : string * bool -&gt; 'T (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="itemCollection.GetItem (identity, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T">메서드에서 반환하는 형식입니다.</typeparam>
        <param name="identity">항목의 ID입니다.</param>
        <param name="ignoreCase">대/소문자를 구분하지 않고 검색하려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</param>
        <summary>대/소문자를 구분하는 검색 또는 대/소문자를 구분하지 않는 검색 방식으로 지정된 ID를 사용하여 강력한 형식의 <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> 개체를 반환합니다.</summary>
        <returns>ID로 지정된 항목입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; GetItems&lt;T&gt; () where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!!T&gt; GetItems&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.GetItems``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItems(Of T As GlobalItem) () As ReadOnlyCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt; ^ GetItems();" />
      <MemberSignature Language="F#" Value="abstract member GetItems : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;'T (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)&gt; (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)&#xA;override this.GetItems : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;'T (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)&gt; (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="itemCollection.GetItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">메서드에서 반환하는 형식입니다.</typeparam>
        <summary>이 항목 컬렉션에서 지정된 형식의 모든 항목을 반환합니다.</summary>
        <returns>지정된 형식의 모든 항목이 포함된 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 형식의 컬렉션입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 항목 컬렉션에서 지정된 형식 이름과 네임스페이스 이름을 사용하여 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체를 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EdmType GetType(string name, string namespaceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String, namespaceName As String) As EdmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EdmType ^ GetType(System::String ^ name, System::String ^ namespaceName);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * string -&gt; System.Data.Metadata.Edm.EdmType" Usage="itemCollection.GetType (name, namespaceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">형식의 이름입니다.</param>
        <param name="namespaceName">형식의 네임스페이스입니다.</param>
        <summary>이 항목 컬렉션에서 지정된 형식 이름과 네임스페이스 이름을 사용하여 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체를 반환합니다.</summary>
        <returns>이 항목 컬렉션에서 지정된 형식 이름 및 네임스페이스 이름과 일치하는 형식을 나타내는 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체입니다. 일치하는 형식이 없으면 null이 반환됩니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EdmType GetType(string name, string namespaceName, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String, namespaceName As String, ignoreCase As Boolean) As EdmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EdmType ^ GetType(System::String ^ name, System::String ^ namespaceName, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * string * bool -&gt; System.Data.Metadata.Edm.EdmType" Usage="itemCollection.GetType (name, namespaceName, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">형식의 이름입니다.</param>
        <param name="namespaceName">형식의 네임스페이스입니다.</param>
        <param name="ignoreCase">대/소문자를 구분하지 않고 검색하려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</param>
        <summary>이 항목 컬렉션에서 지정된 형식 이름과 네임스페이스 이름을 사용하여 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체를 반환합니다.</summary>
        <returns>이 항목 컬렉션에서 지정된 형식 이름 및 네임스페이스 이름과 일치하는 형식을 나타내는 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체입니다. 일치하는 형식이 없으면 null이 반환됩니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetEntityContainer">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 엔터티 컨테이너 이름을 사용하여 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 개체를 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetEntityContainer">
      <MemberSignature Language="C#" Value="public bool TryGetEntityContainer (string name, out System.Data.Metadata.Edm.EntityContainer entityContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEntityContainer(string name, [out] class System.Data.Metadata.Edm.EntityContainer&amp; entityContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.EntityContainer@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEntityContainer (name As String, ByRef entityContainer As EntityContainer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEntityContainer(System::String ^ name, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EntityContainer ^ % entityContainer);" />
      <MemberSignature Language="F#" Value="member this.TryGetEntityContainer : string *  -&gt; bool" Usage="itemCollection.TryGetEntityContainer (name, entityContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="entityContainer" Type="System.Data.Metadata.Edm.EntityContainer" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">엔터티 컨테이너의 이름입니다.</param>
        <param name="entityContainer">이 메서드의 반환 값에는 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 개체가 포함됩니다. 엔터티 컨테이너가 없으면 이 출력 매개 변수에 null이 포함되고, 그렇지 않으면 첫 번째 엔터티 컨테이너가 포함됩니다.</param>
        <summary>지정된 엔터티 컨테이너 이름을 사용하여 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 개체를 반환합니다. 엔터티 컨테이너가 없으면 출력 매개 변수에 null이 포함되고, 그렇지 않으면 첫 번째 엔터티 컨테이너가 포함됩니다.</summary>
        <returns>검색 조건과 일치하는 엔터티 컨테이너가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntityContainer">
      <MemberSignature Language="C#" Value="public bool TryGetEntityContainer (string name, bool ignoreCase, out System.Data.Metadata.Edm.EntityContainer entityContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEntityContainer(string name, bool ignoreCase, [out] class System.Data.Metadata.Edm.EntityContainer&amp; entityContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.EntityContainer@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEntityContainer (name As String, ignoreCase As Boolean, ByRef entityContainer As EntityContainer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEntityContainer(System::String ^ name, bool ignoreCase, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EntityContainer ^ % entityContainer);" />
      <MemberSignature Language="F#" Value="member this.TryGetEntityContainer : string * bool *  -&gt; bool" Usage="itemCollection.TryGetEntityContainer (name, ignoreCase, entityContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="entityContainer" Type="System.Data.Metadata.Edm.EntityContainer" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">엔터티 컨테이너의 이름입니다.</param>
        <param name="ignoreCase">대/소문자를 구분하지 않고 검색하려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</param>
        <param name="entityContainer">이 메서드의 반환 값에는 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 개체가 포함됩니다. 엔터티 컨테이너가 없으면 이 출력 매개 변수에 null이 포함되고, 그렇지 않으면 첫 번째 엔터티 컨테이너가 포함됩니다.</param>
        <summary>지정된 엔터티 컨테이너 이름을 사용하여 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 개체를 반환합니다. 엔터티 컨테이너가 없으면 이 출력 매개 변수에 null이 포함되고, 그렇지 않으면 첫 번째 엔터티 컨테이너가 포함됩니다.</summary>
        <returns>검색 조건과 일치하는 엔터티 컨테이너가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetItem&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 항목 컬렉션에서 지정된 ID를 사용하여 강력한 형식의 항목을 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetItem&lt;T&gt; (string identity, out T item) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, [out] !!T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetItem(Of T As GlobalItem) (identity As String, ByRef item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem bool TryGetItem(System::String ^ identity, [Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="member this.TryGetItem : string *  -&gt; bool (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="itemCollection.TryGetItem (identity, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T">메서드에서 반환하는 형식입니다.</typeparam>
        <param name="identity">항목의 ID입니다.</param>
        <param name="item">이 메서드가 반환될 때 출력 매개 변수에 <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> 개체가 포함됩니다. 항목 컬렉션에 지정된 ID를 가진 전역 항목이 없으면 출력 매개 변수에 null이 포함됩니다.</param>
        <summary>이 항목 컬렉션에서 지정된 ID를 사용하여 강력한 형식의 <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> 개체를 반환합니다.</summary>
        <returns>검색 조건과 일치하는 항목이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetItem&lt;T&gt; (string identity, bool ignoreCase, out T item) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, bool ignoreCase, [out] !!T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,System.Boolean,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetItem(Of T As GlobalItem) (identity As String, ignoreCase As Boolean, ByRef item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem bool TryGetItem(System::String ^ identity, bool ignoreCase, [Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="member this.TryGetItem : string * bool *  -&gt; bool (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="itemCollection.TryGetItem (identity, ignoreCase, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T">메서드에서 반환하는 형식입니다.</typeparam>
        <param name="identity">항목의 ID입니다.</param>
        <param name="ignoreCase">대/소문자를 구분하지 않고 검색하려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</param>
        <param name="item">이 메서드가 반환될 때 출력 매개 변수에 <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> 개체가 포함됩니다. 항목 컬렉션에 지정된 ID를 가진 전역 항목이 없으면 출력 매개 변수에 null이 포함됩니다.</param>
        <summary>이 항목 컬렉션에서 지정된 ID를 사용하여 강력한 형식의 <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> 개체를 반환합니다.</summary>
        <returns>검색 조건과 일치하는 항목이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 항목 컬렉션에서 지정된 형식 이름과 네임스페이스 이름을 사용하여 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체를 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetType">
      <MemberSignature Language="C#" Value="public bool TryGetType (string name, string namespaceName, out System.Data.Metadata.Edm.EdmType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetType(string name, string namespaceName, [out] class System.Data.Metadata.Edm.EdmType&amp; type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Data.Metadata.Edm.EdmType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetType (name As String, namespaceName As String, ByRef type As EdmType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetType(System::String ^ name, System::String ^ namespaceName, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EdmType ^ % type);" />
      <MemberSignature Language="F#" Value="member this.TryGetType : string * string *  -&gt; bool" Usage="itemCollection.TryGetType (name, namespaceName, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.EdmType" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">형식의 이름입니다.</param>
        <param name="namespaceName">형식의 네임스페이스입니다.</param>
        <param name="type">이 메서드가 반환될 때 이 출력 매개 변수에 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체가 포함됩니다. 이 항목 컬렉션에 지정된 이름과 네임스페이스 이름을 가진 형식이 없으면 이 출력 매개 변수에 null이 포함됩니다.</param>
        <summary>이 항목 컬렉션에서 지정된 형식 이름과 네임스페이스 이름을 사용하여 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체를 반환합니다.</summary>
        <returns>검색 조건과 일치하는 형식이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetType">
      <MemberSignature Language="C#" Value="public bool TryGetType (string name, string namespaceName, bool ignoreCase, out System.Data.Metadata.Edm.EdmType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetType(string name, string namespaceName, bool ignoreCase, [out] class System.Data.Metadata.Edm.EdmType&amp; type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.EdmType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetType (name As String, namespaceName As String, ignoreCase As Boolean, ByRef type As EdmType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetType(System::String ^ name, System::String ^ namespaceName, bool ignoreCase, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EdmType ^ % type);" />
      <MemberSignature Language="F#" Value="member this.TryGetType : string * string * bool *  -&gt; bool" Usage="itemCollection.TryGetType (name, namespaceName, ignoreCase, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.EdmType" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">형식의 이름입니다.</param>
        <param name="namespaceName">형식의 네임스페이스입니다.</param>
        <param name="ignoreCase">대/소문자를 구분하지 않고 검색하려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</param>
        <param name="type">이 메서드가 반환될 때 이 출력 매개 변수에 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체가 포함됩니다. 이 항목 컬렉션에 지정된 이름과 네임스페이스 이름을 가진 형식이 없으면 이 출력 매개 변수에 null이 포함됩니다.</param>
        <summary>이 항목 컬렉션에서 지정된 형식 이름과 네임스페이스 이름을 사용하여 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 개체를 반환합니다.</summary>
        <returns>검색 조건과 일치하는 형식이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>