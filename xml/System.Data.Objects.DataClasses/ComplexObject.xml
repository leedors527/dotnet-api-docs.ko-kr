<Type Name="ComplexObject" FullName="System.Data.Objects.DataClasses.ComplexObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2eb447f2f63842a5a6df793e2457e6817294a384" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55309828" /></Metadata><TypeSignature Language="C#" Value="public abstract class ComplexObject : System.Data.Objects.DataClasses.StructuralObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ComplexObject extends System.Data.Objects.DataClasses.StructuralObject" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.ComplexObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ComplexObject&#xA;Inherits StructuralObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComplexObject abstract : System::Data::Objects::DataClasses::StructuralObject" />
  <TypeSignature Language="F#" Value="type ComplexObject = class&#xA;    inherit StructuralObject" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Objects.DataClasses.StructuralObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract(IsReference=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>복합 형식에 대한 기본 클래스입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.ComplexObject> 복합 형식에 대 한 기본 기능을 구현 합니다. 자세한 내용은 [복합 형식 개체](https://msdn.microsoft.com/library/34d5c570-a891-42b8-80ae-20e96eedc3af)합니다.  
  
 개념적 모델을 사용 하 여 사용자 지정 데이터 클래스를 구현할 때 복합 형식을 나타내는 데이터 클래스에서 상속 하는 것이 좋습니다 <xref:System.Data.Objects.DataClasses.ComplexObject>합니다. 자세한 내용은 [사용자 지정 개체](https://msdn.microsoft.com/library/af6f07ce-2261-4c65-87cf-d018ad082921)합니다.  
  
 복합 형식은 엔터티 형식 또는 다른 복합 형식의 속성일 수 있습니다.  
  
 복합 형식은 엔터티 형식의 비스칼라 속성에서 반환됩니다. 이렇게 하면 스칼라 속성이 엔터티 내에 구성됩니다. 복합 형식은 엔터티와 같이 스칼라 속성 또는 다른 복합 형식 속성으로 이루어집니다. 복합 형식은 연결된 엔터티 형식이 있어야 사용할 수 있습니다. 복합 형식은 키가 없기 때문에 연결된 된 엔터티 형식 없이 복합 형식 개체를 관리할 수 없습니다. 자세한 내용은 [복합 형식 개체](https://msdn.microsoft.com/library/34d5c570-a891-42b8-80ae-20e96eedc3af)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용자 지정 데이터 클래스에에서 `OrderInfo` 에서 상속 <xref:System.Data.Objects.DataClasses.ComplexObject> 매핑되는 및를 `OrderInfo` 개념적 모델에 정의 된 복합 형식입니다.  
  
 [!code-csharp[DP EntityObject Concepts#EntityObject](~/samples/snippets/csharp/VS_Snippets_Data/DP EntityObject Concepts/CS/SalesObjects.cs#entityobject)]
 [!code-vb[DP EntityObject Concepts#EntityObject](~/samples/snippets/visualbasic/VS_Snippets_Data/DP EntityObject Concepts/VB/SalesObjects.vb#entityobject)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-complex-types.md">방법: 복합 형식 (EntityClient)를 반환 하는 쿼리를 실행 합니다.</related>
    <related type="Article" href="https://msdn.microsoft.com/library/b13b24d5-05d1-4746-b0d2-5472796240c6(v=vs.90)">방법: 복합 형식 (Entity Framework)를 사용 하 여 모델 정의</related>
    <related type="Article" href="https://msdn.microsoft.com/library/525ffa1c-524e-40bd-bb80-2929aec8c8d8(v=vs.90)">방법: 복합 형식의 개체 추가 및 수정(Entity Framework)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ComplexObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ComplexObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.Objects.DataClasses.ComplexObject" />의 인스턴스를 만듭니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportPropertyChanged">
      <MemberSignature Language="C#" Value="protected override sealed void ReportPropertyChanged (string property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ReportPropertyChanged(string property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ReportPropertyChanged (property As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ReportPropertyChanged(System::String ^ property);" />
      <MemberSignature Language="F#" Value="override this.ReportPropertyChanged : string -&gt; unit" Usage="complexObject.ReportPropertyChanged property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">변경된 속성의 이름입니다.</param>
        <summary>변경 추적 장치에 복합 개체 속성이 변경되었음을 알립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 엔터티 데이터 모델 도구에서 복합 형식이 생성되면 속성 변경 후 <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged%2A> 메서드가 호출되어 <xref:System.Data.Objects.DataClasses.IEntityChangeTracker>에 있는 캐시된 값을 속성의 원래 값으로 커밋합니다.  
  
 이 메서드는 변경 추적 장치의 <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanged%2A> 메서드를 호출합니다.  
  
 사용자 지정 복합 개체의 속성에 대한 변경 내용을 추적하려면 <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged%2A>을 호출해야 합니다. 복합 개체가 <xref:System.Data.Objects.DataClasses.ComplexObject>에서 상속될 경우 이를 수행합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="property" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ReportPropertyChanging">
      <MemberSignature Language="C#" Value="protected override sealed void ReportPropertyChanging (string property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ReportPropertyChanging(string property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ReportPropertyChanging (property As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ReportPropertyChanging(System::String ^ property);" />
      <MemberSignature Language="F#" Value="override this.ReportPropertyChanging : string -&gt; unit" Usage="complexObject.ReportPropertyChanging property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">변경되는 속성의 이름입니다.</param>
        <summary>변경 추적 장치에 복합 개체에 대한 속성 변경이 보류 중임을 알립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 엔터티 데이터 모델 도구에서 복합 형식이 생성되면 속성 변경 이전에 <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging%2A> 메서드를 호출하여 <xref:System.Data.Objects.DataClasses.IEntityChangeTracker>에 있는 속성 현재 값을 캐시한 후 이 값을 속성의 원래 값으로 사용할 수 있도록 합니다.  
  
 이 메서드는 변경 추적 장치의 <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanging%2A> 메서드를 호출합니다.  
  
 사용자 지정 복합 개체의 속성에 대한 변경 내용을 추적하려면 <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging%2A>을 호출해야 합니다. 복합 개체가 <xref:System.Data.Objects.DataClasses.ComplexObject>에서 상속될 경우 이를 수행합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="property" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
  </Members>
</Type>