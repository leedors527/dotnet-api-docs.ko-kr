<Type Name="EdmRelationshipAttribute" FullName="System.Data.Objects.DataClasses.EdmRelationshipAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="30cfcddf0e53d79ef819a2e670cd695f474933b6" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57954552" /></Metadata><TypeSignature Language="C#" Value="public sealed class EdmRelationshipAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EdmRelationshipAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.EdmRelationshipAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EdmRelationshipAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class EdmRelationshipAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type EdmRelationshipAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>개념적 모델의 연결을 기반으로 두 엔터티 형식 간의 관계를 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 특성은 각 연결에 대해 인스턴스가 하나인 어셈블리 수준에 적용됩니다. 어셈블리에 이 형식의 특성이 여러 개일 수 있습니다.  
  
 특정 연결에 포함된 엔터티 형식의 역할에 대한 세부 사항은 개념 스키마에 정의된 연결과 일치해야 합니다.  
  
 연결에는 역할의 순서가 정의되어 있지 않습니다. 즉, 연결의 관련 End를 정의하는 속성은 원하는 순서로 정의할 수 있습니다.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/bbdc9237-ff4c-4441-9565-31ebc29743e9">CSDL, SSDL 및 MSL 사양</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Data.Objects.DataClasses.EdmRelationshipAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EdmRelationshipAttribute (string relationshipNamespaceName, string relationshipName, string role1Name, System.Data.Metadata.Edm.RelationshipMultiplicity role1Multiplicity, Type role1Type, string role2Name, System.Data.Metadata.Edm.RelationshipMultiplicity role2Multiplicity, Type role2Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string relationshipNamespaceName, string relationshipName, string role1Name, valuetype System.Data.Metadata.Edm.RelationshipMultiplicity role1Multiplicity, class System.Type role1Type, string role2Name, valuetype System.Data.Metadata.Edm.RelationshipMultiplicity role2Multiplicity, class System.Type role2Type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (relationshipNamespaceName As String, relationshipName As String, role1Name As String, role1Multiplicity As RelationshipMultiplicity, role1Type As Type, role2Name As String, role2Multiplicity As RelationshipMultiplicity, role2Type As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EdmRelationshipAttribute(System::String ^ relationshipNamespaceName, System::String ^ relationshipName, System::String ^ role1Name, System::Data::Metadata::Edm::RelationshipMultiplicity role1Multiplicity, Type ^ role1Type, System::String ^ role2Name, System::Data::Metadata::Edm::RelationshipMultiplicity role2Multiplicity, Type ^ role2Type);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.DataClasses.EdmRelationshipAttribute : string * string * string * System.Data.Metadata.Edm.RelationshipMultiplicity * Type * string * System.Data.Metadata.Edm.RelationshipMultiplicity * Type -&gt; System.Data.Objects.DataClasses.EdmRelationshipAttribute" Usage="new System.Data.Objects.DataClasses.EdmRelationshipAttribute (relationshipNamespaceName, relationshipName, role1Name, role1Multiplicity, role1Type, role2Name, role2Multiplicity, role2Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="relationshipNamespaceName" Type="System.String" />
        <Parameter Name="relationshipName" Type="System.String" />
        <Parameter Name="role1Name" Type="System.String" />
        <Parameter Name="role1Multiplicity" Type="System.Data.Metadata.Edm.RelationshipMultiplicity" />
        <Parameter Name="role1Type" Type="System.Type" />
        <Parameter Name="role2Name" Type="System.String" />
        <Parameter Name="role2Multiplicity" Type="System.Data.Metadata.Edm.RelationshipMultiplicity" />
        <Parameter Name="role2Type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="relationshipNamespaceName">이 엔터티가 참여하는 연결에 대한 네임스페이스의 이름입니다.</param>
        <param name="relationshipName">이 엔터티가 참여하는 관계의 이름입니다.</param>
        <param name="role1Name">연결의 한쪽 End에 있는 형식의 역할 이름입니다.</param>
        <param name="role1Multiplicity">"일" 또는 "다"와 같이 연결의 한쪽 End에 있는 다중성을 나타내는 <see cref="T:System.Data.Metadata.Edm.RelationshipMultiplicity" /> 값입니다.</param>
        <param name="role1Type">연결의 한쪽 End에 있는 엔터티의 형식입니다.</param>
        <param name="role2Name">연결의 다른 쪽 End에 있는 형식의 역할 이름입니다.</param>
        <param name="role2Multiplicity">"일" 또는 "다"와 같이 연결의 다른 쪽 End에 있는 다중성을 나타내는 <see cref="T:System.Data.Metadata.Edm.RelationshipMultiplicity" />의 값입니다.</param>
        <param name="role2Type">연결의 다른 쪽 End에 있는 엔터티의 형식입니다.</param>
        <summary><see cref="T:System.Data.Objects.DataClasses.EdmRelationshipAttribute" /> 클래스의 인스턴스를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `typeof` 연산자 (`GetType` Visual Basic의)를 반환 하는 데 사용 되는 <xref:System.Type> 개체에 대 한 개체입니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bbdc9237-ff4c-4441-9565-31ebc29743e9">CSDL, SSDL 및 MSL 사양</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EdmRelationshipAttribute (string relationshipNamespaceName, string relationshipName, string role1Name, System.Data.Metadata.Edm.RelationshipMultiplicity role1Multiplicity, Type role1Type, string role2Name, System.Data.Metadata.Edm.RelationshipMultiplicity role2Multiplicity, Type role2Type, bool isForeignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string relationshipNamespaceName, string relationshipName, string role1Name, valuetype System.Data.Metadata.Edm.RelationshipMultiplicity role1Multiplicity, class System.Type role1Type, string role2Name, valuetype System.Data.Metadata.Edm.RelationshipMultiplicity role2Multiplicity, class System.Type role2Type, bool isForeignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (relationshipNamespaceName As String, relationshipName As String, role1Name As String, role1Multiplicity As RelationshipMultiplicity, role1Type As Type, role2Name As String, role2Multiplicity As RelationshipMultiplicity, role2Type As Type, isForeignKey As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EdmRelationshipAttribute(System::String ^ relationshipNamespaceName, System::String ^ relationshipName, System::String ^ role1Name, System::Data::Metadata::Edm::RelationshipMultiplicity role1Multiplicity, Type ^ role1Type, System::String ^ role2Name, System::Data::Metadata::Edm::RelationshipMultiplicity role2Multiplicity, Type ^ role2Type, bool isForeignKey);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.DataClasses.EdmRelationshipAttribute : string * string * string * System.Data.Metadata.Edm.RelationshipMultiplicity * Type * string * System.Data.Metadata.Edm.RelationshipMultiplicity * Type * bool -&gt; System.Data.Objects.DataClasses.EdmRelationshipAttribute" Usage="new System.Data.Objects.DataClasses.EdmRelationshipAttribute (relationshipNamespaceName, relationshipName, role1Name, role1Multiplicity, role1Type, role2Name, role2Multiplicity, role2Type, isForeignKey)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="relationshipNamespaceName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="relationshipName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="role1Name" Type="System.String" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="role1Multiplicity" Type="System.Data.Metadata.Edm.RelationshipMultiplicity" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="role1Type" Type="System.Type" Index="4" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="role2Name" Type="System.String" Index="5" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="role2Multiplicity" Type="System.Data.Metadata.Edm.RelationshipMultiplicity" Index="6" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="role2Type" Type="System.Type" Index="7" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="isForeignKey" Type="System.Boolean" Index="8" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="relationshipNamespaceName">이 엔터티가 참여하는 연결에 대한 네임스페이스의 이름입니다.</param>
        <param name="relationshipName">이 엔터티가 참여하는 관계의 이름입니다.</param>
        <param name="role1Name">연결의 한쪽 End에 있는 형식의 역할 이름입니다.</param>
        <param name="role1Multiplicity">"일" 또는 "다"와 같이 연결의 한쪽 End에 있는 다중성을 나타내는 <see cref="T:System.Data.Metadata.Edm.RelationshipMultiplicity" /> 값입니다.</param>
        <param name="role1Type">연결의 한쪽 End에 있는 엔터티의 형식입니다.</param>
        <param name="role2Name">연결의 다른 쪽 End에 있는 형식의 역할 이름입니다.</param>
        <param name="role2Multiplicity">"일" 또는 "다"와 같이 연결의 다른 쪽 End에 있는 다중성을 나타내는 <see cref="T:System.Data.Metadata.Edm.RelationshipMultiplicity" />의 값입니다.</param>
        <param name="role2Type">연결의 다른 쪽 End에 있는 엔터티의 형식입니다.</param>
        <param name="isForeignKey">관계가 외래 키 값에 기반하는지 여부를 나타내는 값입니다.</param>
        <summary><see cref="T:System.Data.Objects.DataClasses.EdmRelationshipAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsForeignKey">
      <MemberSignature Language="C#" Value="public bool IsForeignKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsForeignKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.IsForeignKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsForeignKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsForeignKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsForeignKey : bool" Usage="System.Data.Objects.DataClasses.EdmRelationshipAttribute.IsForeignKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>관계가 외래 키 값에 기반하는지 여부를 나타내는 부울 값을 가져옵니다.</summary>
        <value>관계가 외래 키 값에 기반하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bbdc9237-ff4c-4441-9565-31ebc29743e9">CSDL, SSDL 및 MSL 사양</related>
      </Docs>
    </Member>
    <Member MemberName="RelationshipName">
      <MemberSignature Language="C#" Value="public string RelationshipName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationshipName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelationshipName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RelationshipName : string" Usage="System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>관계의 이름입니다.</summary>
        <value>이 <see cref="T:System.String" />에 정의된 관계의 이름인 <see cref="T:System.Data.Objects.DataClasses.EdmRelationshipAttribute" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 관계의 이름을 지정 하 여는 `Name` 특성을 `Association` 개념적 모델에서이 관계를 정의 하는 요소입니다. 자세한 내용은 [CSDL, SSDL 및 MSL 사양](~/docs/framework/data/adonet/ef/language-reference/csdl-ssdl-and-msl-specifications.md)합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bbdc9237-ff4c-4441-9565-31ebc29743e9">CSDL, SSDL 및 MSL 사양</related>
      </Docs>
    </Member>
    <Member MemberName="RelationshipNamespaceName">
      <MemberSignature Language="C#" Value="public string RelationshipNamespaceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipNamespaceName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipNamespaceName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationshipNamespaceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelationshipNamespaceName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RelationshipNamespaceName : string" Usage="System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipNamespaceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>관계의 네임스페이스입니다.</summary>
        <value>관계의 네임스페이스인 <see cref="T:System.String" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 관계의 네임 스페이스에서 지정 합니다 `Namespace` 특성을 `Schema` 개념적 모델에서이 관계를 정의 하는 연결을 포함 하는 요소. 자세한 내용은 [CSDL, SSDL 및 MSL 사양](~/docs/framework/data/adonet/ef/language-reference/csdl-ssdl-and-msl-specifications.md)합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/bbdc9237-ff4c-4441-9565-31ebc29743e9">CSDL, SSDL 및 MSL 사양</related>
      </Docs>
    </Member>
    <Member MemberName="Role1Multiplicity">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.RelationshipMultiplicity Role1Multiplicity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Metadata.Edm.RelationshipMultiplicity Role1Multiplicity" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Multiplicity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Role1Multiplicity As RelationshipMultiplicity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::RelationshipMultiplicity Role1Multiplicity { System::Data::Metadata::Edm::RelationshipMultiplicity get(); };" />
      <MemberSignature Language="F#" Value="member this.Role1Multiplicity : System.Data.Metadata.Edm.RelationshipMultiplicity" Usage="System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Multiplicity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.RelationshipMultiplicity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>관계의 한쪽 End에 있는 다중성입니다.</summary>
        <value>다중성을 나타내는 <see cref="T:System.Data.Metadata.Edm.RelationshipMultiplicity" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 연결의 관련 End를 정의하는 속성은 모든 순서로 정의할 수 있습니다.  
  
 다중성 지정 된를 `Multiplicity` 특성을 `End` 요소는 개념적 모델에서이 관계를 정의 하는 연결에서 합니다. 자세한 내용은 [CSDL, SSDL 및 MSL 사양](~/docs/framework/data/adonet/ef/language-reference/csdl-ssdl-and-msl-specifications.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Role1Name">
      <MemberSignature Language="C#" Value="public string Role1Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Role1Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Role1Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Role1Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Role1Name : string" Usage="System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>관계의 한쪽 End에 있는 역할의 이름입니다.</summary>
        <value>역할의 이름인 <see cref="T:System.String" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 역할 이름이 지정 된 합니다 `Role` 특성을 `End` 요소는 개념적 모델에서이 관계를 정의 하는 연결에서. 자세한 내용은 [CSDL, SSDL 및 MSL 사양](~/docs/framework/data/adonet/ef/language-reference/csdl-ssdl-and-msl-specifications.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Role1Type">
      <MemberSignature Language="C#" Value="public Type Role1Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Role1Type" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Role1Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Role1Type { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Role1Type : Type" Usage="System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>관계의 한쪽 End에 있는 엔터티의 형식입니다.</summary>
        <value>연결의 이쪽 End에 있는 개체의 형식인 <see cref="T:System.Type" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 연결의 관련 End를 정의하는 속성은 모든 순서로 정의할 수 있습니다.  
  
 형식 이름은으로 지정 됩니다는 `Type` 특성을 `End` 요소는 개념적 모델에서이 관계를 정의 하는 연결에서 합니다. 자세한 내용은 [CSDL, SSDL 및 MSL 사양](~/docs/framework/data/adonet/ef/language-reference/csdl-ssdl-and-msl-specifications.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Role2Multiplicity">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.RelationshipMultiplicity Role2Multiplicity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Metadata.Edm.RelationshipMultiplicity Role2Multiplicity" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Multiplicity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Role2Multiplicity As RelationshipMultiplicity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::RelationshipMultiplicity Role2Multiplicity { System::Data::Metadata::Edm::RelationshipMultiplicity get(); };" />
      <MemberSignature Language="F#" Value="member this.Role2Multiplicity : System.Data.Metadata.Edm.RelationshipMultiplicity" Usage="System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Multiplicity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.RelationshipMultiplicity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>관계의 다른 쪽 End에 있는 다중성입니다.</summary>
        <value>다중성을 나타내는 <see cref="T:System.Data.Metadata.Edm.RelationshipMultiplicity" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 연결의 관련 End를 정의하는 속성은 모든 순서로 정의할 수 있습니다.  
  
 다중성 지정 된를 `Multiplicity` 특성을 `End` 요소는 개념적 모델에서이 관계를 정의 하는 연결에서 합니다. 자세한 내용은 [CSDL, SSDL 및 MSL 사양](~/docs/framework/data/adonet/ef/language-reference/csdl-ssdl-and-msl-specifications.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Role2Name">
      <MemberSignature Language="C#" Value="public string Role2Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Role2Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Role2Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Role2Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Role2Name : string" Usage="System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>관계의 다른 쪽 End에 있는 역할의 이름입니다.</summary>
        <value>역할의 이름인 <see cref="T:System.String" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 연결의 관련 End를 정의하는 속성은 모든 순서로 정의할 수 있습니다.  
  
 역할 이름이 지정 된 합니다 `Role` 특성을 `End` 요소는 개념적 모델에서이 관계를 정의 하는 연결에서. 자세한 내용은 [CSDL, SSDL 및 MSL 사양](~/docs/framework/data/adonet/ef/language-reference/csdl-ssdl-and-msl-specifications.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Role2Type">
      <MemberSignature Language="C#" Value="public Type Role2Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Role2Type" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Role2Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Role2Type { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Role2Type : Type" Usage="System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>관계의 다른 쪽 End에 있는 엔터티의 형식입니다.</summary>
        <value>연결의 다른 쪽 End에 있는 개체의 형식인 <see cref="T:System.Type" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 연결의 관련 End를 정의하는 속성은 모든 순서로 정의할 수 있습니다.  
  
 형식 이름은으로 지정 됩니다는 `Type` 특성을 `End` 요소는 개념적 모델에서이 관계를 정의 하는 연결에서 합니다. 자세한 내용은 [CSDL, SSDL 및 MSL 사양](~/docs/framework/data/adonet/ef/language-reference/csdl-ssdl-and-msl-specifications.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>