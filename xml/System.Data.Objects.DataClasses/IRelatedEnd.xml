<Type Name="IRelatedEnd" FullName="System.Data.Objects.DataClasses.IRelatedEnd">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7af70feb0d0602e89126a3e3bd596dacde50e2ea" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57926386" /></Metadata><TypeSignature Language="C#" Value="public interface IRelatedEnd" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRelatedEnd" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.IRelatedEnd" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRelatedEnd" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRelatedEnd" />
  <TypeSignature Language="F#" Value="type IRelatedEnd = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>관계의 End를 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.IRelatedEnd>는 연결의 End를 나타내는 개체의 요구 사항을 정의합니다. 이 인터페이스에서 구현 되는 <xref:System.Data.Objects.DataClasses.RelatedEnd> 클래스입니다. <xref:System.Data.Objects.DataClasses.RelatedEnd> 에 대 한 기본 클래스를 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 고 <xref:System.Data.Objects.DataClasses.EntityReference%601> 클래스입니다.  
  
   
  
## Examples  
 이 항목의 예제는 기반을 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832), 하 여 생성 된를 [엔터티 데이터 모델 마법사](https://msdn.microsoft.com/library/423ec9a7-5464-43b7-a7ef-9f5f000848b5)합니다.  
  
 다음 예제에서는 새 `SalesOrderHeader` 엔터티는 `Contact` 엔터티. 그런 다음 관련된 end를 모두 가져오고는 `Contact` 엔터티 및 표시에 해당 하는 관계의 이름, 소스 역할 이름 및 각 관련된 end에 대 한 대상 역할 이름입니다.  
  
 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>개체를 관련 End에 추가합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Data.Objects.DataClasses.IEntityWithRelationships entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Data.Objects.DataClasses.IEntityWithRelationships entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (entity As IEntityWithRelationships)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Data::Objects::DataClasses::IEntityWithRelationships ^ entity);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Data.Objects.DataClasses.IEntityWithRelationships -&gt; unit" Usage="iRelatedEnd.Add entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Data.Objects.DataClasses.IEntityWithRelationships" />
      </Parameters>
      <Docs>
        <param name="entity">컬렉션에 추가할 개체입니다. <paramref name="entity" />는 <see cref="T:System.Data.Objects.DataClasses.IEntityWithRelationships" />를 구현해야 합니다.</param>
        <summary>개체를 관련 End에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.IRelatedEnd.Add%2A> 메서드는 개체를 관련 End에 추가합니다. @FSHO2@관련 End는 <xref:System.Data.Objects.DataClasses.EntityCollection%601>이어야 합니다.  
  
 원본 개체가 구현 하는 경우 <xref:System.Data.Objects.DataClasses.IEntityWithRelationships> 에서 추적 되 고는 <xref:System.Data.Objects.ObjectStateManager>에 추가 되는 개체도 추적 합니다.  
  
 <xref:System.Data.Objects.DataClasses.RelatedEnd> 클래스는 <xref:System.Data.Objects.DataClasses.IRelatedEnd.Add%2A> 메서드를 명시적으로 구현합니다. <xref:System.Data.Objects.DataClasses.EntityCollection%601> 클래스에서 이 구현을 사용합니다. 자세한 내용은 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A>를 참조하십시오.  
  
 관련된 end가는 <xref:System.Data.Objects.DataClasses.EntityReference%601> 하며 <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> 참조의 속성이 아닙니다 `null`,이 메서드는 예외를 throw 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj -&gt; unit" Usage="iRelatedEnd.Add entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entity">컬렉션에 추가할 개체입니다.</param>
        <summary>개체를 관련 End에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드 오버 로드를 사용 하 여 엔터티 클래스를 구현 하지 않는 <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>합니다. 사용 된 <xref:System.Data.Objects.DataClasses.IRelatedEnd.Add%2A> 메서드를 구현 하는 엔터티 클래스에 대 한 <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>합니다.  
  
 <xref:System.Data.Objects.DataClasses.IRelatedEnd.Add%2A> 메서드는 개체를 관련 End에 추가합니다. @FSHO2@관련 End는 <xref:System.Data.Objects.DataClasses.EntityCollection%601>이어야 합니다.  
  
 <xref:System.Data.Objects.DataClasses.RelatedEnd> 클래스는 <xref:System.Data.Objects.DataClasses.IRelatedEnd.Add%2A> 메서드를 명시적으로 구현합니다. <xref:System.Data.Objects.DataClasses.EntityCollection%601> 클래스에서 이 구현을 사용합니다. 자세한 내용은 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A>를 참조하십시오.  
  
 관련된 end가는 <xref:System.Data.Objects.DataClasses.EntityReference%601> 하며 <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> 참조의 속성이 아닙니다 `null`,이 메서드는 예외를 throw 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Attach">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>연결된 두 개체 간의 관계를 정의합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (System.Data.Objects.DataClasses.IEntityWithRelationships entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Attach(class System.Data.Objects.DataClasses.IEntityWithRelationships entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (entity As IEntityWithRelationships)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(System::Data::Objects::DataClasses::IEntityWithRelationships ^ entity);" />
      <MemberSignature Language="F#" Value="abstract member Attach : System.Data.Objects.DataClasses.IEntityWithRelationships -&gt; unit" Usage="iRelatedEnd.Attach entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Data.Objects.DataClasses.IEntityWithRelationships" />
      </Parameters>
      <Docs>
        <param name="entity">연결 중인 개체입니다. <paramref name="entity" />는 <see cref="T:System.Data.Objects.DataClasses.IEntityWithRelationships" />를 구현해야 합니다.</param>
        <summary>연결된 두 개체 간의 관계를 정의합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.IRelatedEnd.Attach%2A> 메서드는 같은 <xref:System.Data.Objects.ObjectContext> 인스턴스에 연결된 두 개체 간의 관계를 정의하는 데 사용됩니다.  
  
 <xref:System.Data.Objects.DataClasses.RelatedEnd> 클래스는 <xref:System.Data.Objects.DataClasses.IRelatedEnd.Attach%2A> 메서드를 명시적으로 구현합니다. <xref:System.Data.Objects.DataClasses.EntityCollection%601> 클래스에서는 이 구현을 사용하여 연결된 소스 개체와 컬렉션에 연결된 개체 간의 관계를 정의합니다. 자세한 내용은 [연결 및 분리 개체](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Attach(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="abstract member Attach : obj -&gt; unit" Usage="iRelatedEnd.Attach entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entity">연결 중인 개체입니다.</param>
        <summary>연결된 두 개체 간의 관계를 정의합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드 오버 로드를 사용 하 여 엔터티 클래스를 구현 하지 않는 <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>합니다. 사용 된 <xref:System.Data.Objects.DataClasses.IRelatedEnd.Attach%2A> 메서드를 구현 하는 엔터티 클래스에 대 한 <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>합니다.  
  
 <xref:System.Data.Objects.DataClasses.IRelatedEnd.Attach%2A> 메서드는 같은 <xref:System.Data.Objects.ObjectContext> 인스턴스에 연결된 두 개체 간의 관계를 정의하는 데 사용됩니다.  
  
 <xref:System.Data.Objects.DataClasses.RelatedEnd> 클래스는 <xref:System.Data.Objects.DataClasses.IRelatedEnd.Attach%2A> 메서드를 명시적으로 구현합니다. <xref:System.Data.Objects.DataClasses.EntityCollection%601> 클래스에서는 이 구현을 사용하여 연결된 소스 개체와 컬렉션에 연결된 개체 간의 관계를 정의합니다. 자세한 내용은 [연결 및 분리 개체](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSourceQuery">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable CreateSourceQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerable CreateSourceQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSourceQuery () As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ CreateSourceQuery();" />
      <MemberSignature Language="F#" Value="abstract member CreateSourceQuery : unit -&gt; System.Collections.IEnumerable" Usage="iRelatedEnd.CreateSourceQuery " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>관련 End에 속하는 개체를 나타내는 <see cref="T:System.Collections.IEnumerable" />을 반환합니다.</summary>
        <returns>관련 End에 속하는 개체를 나타내는 <see cref="T:System.Collections.IEnumerable" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery%2A> 메서드는 <xref:System.Data.Objects.DataClasses.RelatedEnd> 클래스에서 명시적으로 구현됩니다.  <xref:System.Data.Objects.DataClasses.EntityCollection%601> 및 <xref:System.Data.Objects.DataClasses.EntityReference%601> 클래스는 모두 <xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23CreateSourceQuery%2A> 메서드를 재정의하여, 실행되면 관련 End에 속하는 같은 개체 집합을 반환하는 <xref:System.Data.Objects.ObjectQuery%601>를 반환합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="iRelatedEnd.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>관련 개체의 컬렉션을 반복하는 <see cref="T:System.Collections.IEnumerator" />를 반환합니다.</summary>
        <returns>관련 개체의 컬렉션을 반복하는 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLoaded">
      <MemberSignature Language="C#" Value="public bool IsLoaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoaded" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoaded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoaded { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLoaded : bool" Usage="System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>관련 개체가 모두 로드되었는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>관련 End에 데이터베이스의 모든 관련 엔터티가 들어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.RelatedEnd> 클래스는 <xref:System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded%2A>의 <xref:System.Data.Objects.DataClasses.IRelatedEnd> 메서드를 구현합니다. 자세한 내용은 <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>를 참조하십시오.  
  
 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 및 <xref:System.Data.Objects.DataClasses.EntityReference%601> 클래스는 <xref:System.Data.Objects.DataClasses.RelatedEnd>에서 상속됩니다.  
  
   
  
## Examples  
 [관계 정의 및 관리](https://msdn.microsoft.com/library/2c92c097-56bd-4145-989e-16d92475ecda)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>관련 개체를 이 관련 End에 로드합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Load` 탐색 속성에 의해 노출 되는 관련된 end에서 관련된 개체를 명시적으로 로드 하 라고 합니다. 자세한 내용은 [관련 개체 로드](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896272(v=vs.100))합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.IRelatedEnd.Load" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load();" />
      <MemberSignature Language="F#" Value="abstract member Load : unit -&gt; unit" Usage="iRelatedEnd.Load " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>기본 병합 옵션을 사용하여 관련 개체를 이 관련 End에 로드합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.RelatedEnd> 클래스는 <xref:System.Data.Objects.DataClasses.IRelatedEnd.Load%2A>의 <xref:System.Data.Objects.DataClasses.IRelatedEnd> 메서드를 구현합니다. 자세한 내용은 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>를 참조하십시오.  
  
 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 탐색 속성에 의해 노출 되는 관련된 end에서 관련된 개체를 명시적으로 로드 하 라고 합니다. 자세한 내용은 [관련 개체 로드](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896272(v=vs.100))합니다.  
  
 합니다 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 메서드는 데이터 소스의 여부 관련된 개체를 로드 <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> 는 `true`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.IRelatedEnd.Load(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Data.Objects.MergeOption -&gt; unit" Usage="iRelatedEnd.Load mergeOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption">기존 <see cref="T:System.Data.Objects.MergeOption" />으로 개체를 병합할 때 사용하는 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />입니다.</param>
        <summary>지정된 병합 옵션을 사용하여 관련 개체를 관련 End에 로드합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.RelatedEnd> 클래스는 <xref:System.Data.Objects.DataClasses.IRelatedEnd.Load%2A> 메서드를 구현합니다. <xref:System.Data.Objects.DataClasses.EntityCollection%601> 및 <xref:System.Data.Objects.DataClasses.EntityReference%601> 클래스는 모두 이 구현을 재정의합니다.  
  
 `Load` 탐색 속성에 의해 노출 되는 관련된 end에서 관련된 개체를 명시적으로 로드 하 라고 합니다. 자세한 내용은 [관련 개체 로드](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896272(v=vs.100))합니다.  
  
 합니다 <xref:System.Data.Objects.DataClasses.IRelatedEnd.Load%2A> 메서드는 데이터 소스의 여부 관련된 개체를 로드 <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> 는 `true`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipName">
      <MemberSignature Language="C#" Value="public string RelationshipName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationshipName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelationshipName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RelationshipName : string" Usage="System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 관련 End가 참여하는 관계의 이름을 가져옵니다.</summary>
        <value>이 <see cref="T:System.Data.Objects.DataClasses.IRelatedEnd" />가 참여하는 관계의 이름입니다. 관계 이름은 네임스페이스로 정규화되지 않습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 이 항목의 예제는 기반을 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832), 하 여 생성 된를 [엔터티 데이터 모델 마법사](https://msdn.microsoft.com/library/423ec9a7-5464-43b7-a7ef-9f5f000848b5)합니다.  
  
 다음 예제에서는 새 `SalesOrderHeader` 엔터티는 `Contact` 엔터티. 그런 다음 관련된 end를 모두 가져오고는 `Contact` 엔터티와 각 관련 end의 관계 이름, 소스 역할 이름 및 대상 역할 이름을 표시 합니다.  
  
 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipSet">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.RelationshipSet RelationshipSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.RelationshipSet RelationshipSet" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationshipSet As RelationshipSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::RelationshipSet ^ RelationshipSet { System::Data::Metadata::Edm::RelationshipSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RelationshipSet : System.Data.Metadata.Edm.RelationshipSet" Usage="System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.RelationshipSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>관련 End의 메타데이터에 대한 참조를 반환합니다.</summary>
        <value>관계의 End에 대한 메타데이터를 포함하는 <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> 개체입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>관련 End의 개체 컬렉션에서 개체를 제거합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Data.Objects.DataClasses.IEntityWithRelationships entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Data.Objects.DataClasses.IEntityWithRelationships entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (entity As IEntityWithRelationships) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(System::Data::Objects::DataClasses::IEntityWithRelationships ^ entity);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Data.Objects.DataClasses.IEntityWithRelationships -&gt; bool" Usage="iRelatedEnd.Remove entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Data.Objects.DataClasses.IEntityWithRelationships" />
      </Parameters>
      <Docs>
        <param name="entity">컬렉션에서 제거할 개체입니다. <paramref name="entity" />는 <see cref="T:System.Data.Objects.DataClasses.IEntityWithRelationships" />를 구현해야 합니다.</param>
        <summary>관련 End의 개체 컬렉션에서 개체를 제거합니다.</summary>
        <returns><paramref name="entity" />가 성공적으로 제거되었으면 <see langword="true" />이고, <paramref name="entity" />가 <see cref="T:System.Data.Objects.DataClasses.IRelatedEnd" />의 일부가 아니었으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.IRelatedEnd.Remove%2A> 메서드는 관련 End에서 개체를 제거합니다. @FSHO2@관련 End는 <xref:System.Data.Objects.DataClasses.EntityCollection%601>이어야 합니다.  
  
 <xref:System.Data.Objects.DataClasses.RelatedEnd> 클래스는 <xref:System.Data.Objects.DataClasses.IRelatedEnd.Remove%2A> 메서드를 명시적으로 구현합니다. <xref:System.Data.Objects.DataClasses.EntityCollection%601> 클래스에서 이 구현을 사용합니다. 자세한 내용은 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A>를 참조하십시오.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (entity As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; bool" Usage="iRelatedEnd.Remove entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entity">컬렉션에서 제거할 개체입니다.</param>
        <summary>관련 End의 개체 컬렉션에서 개체를 제거합니다.</summary>
        <returns><paramref name="entity" />가 성공적으로 제거되었으면 <see langword="true" />이고, <paramref name="entity" />가 <see cref="T:System.Data.Objects.DataClasses.IRelatedEnd" />의 일부가 아니었으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드 오버 로드를 사용 하 여 엔터티 클래스를 구현 하지 않는 <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>합니다. 사용 된 <xref:System.Data.Objects.DataClasses.IRelatedEnd.Remove%2A> 메서드를 구현 하는 엔터티 클래스에 대 한 <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>합니다.  
  
 <xref:System.Data.Objects.DataClasses.IRelatedEnd.Remove%2A> 메서드는 관련 End에서 개체를 제거합니다. @FSHO2@관련 End는 <xref:System.Data.Objects.DataClasses.EntityCollection%601>이어야 합니다.  
  
 <xref:System.Data.Objects.DataClasses.RelatedEnd> 클래스는 <xref:System.Data.Objects.DataClasses.IRelatedEnd.Remove%2A> 메서드를 명시적으로 구현합니다. <xref:System.Data.Objects.DataClasses.EntityCollection%601> 클래스에서 이 구현을 사용합니다. 자세한 내용은 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A>를 참조하십시오.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceRoleName">
      <MemberSignature Language="C#" Value="public string SourceRoleName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceRoleName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceRoleName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceRoleName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SourceRoleName : string" Usage="System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>관계의 소스 End에 있는 역할 이름을 가져옵니다.</summary>
        <value>관계의 소스 End에 있는 역할 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Data.Objects.DataClasses.RelatedEnd> 구현 클래스는 <xref:System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName%2A> 속성입니다. 자세한 내용은 <xref:System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName%2A>를 참조하십시오.  
  
 역할 이름이 지정 된 합니다 `Role` 특성을 `End` 요소는 개념적 모델에서이 관계를 정의 하는 연결에서. 자세한 내용은 [Association 요소(CSDL)](https://msdn.microsoft.com/library/c305169a-8af7-432f-9ba7-800a163aed41)를 참조하십시오.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetRoleName">
      <MemberSignature Language="C#" Value="public string TargetRoleName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetRoleName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetRoleName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetRoleName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetRoleName : string" Usage="System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>관계의 대상 End에 있는 역할 이름을 가져옵니다.</summary>
        <value>관계의 대상 End에 있는 역할 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.RelatedEnd> 클래스는 <xref:System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName%2A> 속성을 구현합니다. 자세한 내용은 <xref:System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName%2A>를 참조하십시오.  
  
 역할 이름이 지정 된 합니다 `Role` 특성을 `End` 요소는 개념적 모델에서이 관계를 정의 하는 연결에서. 자세한 내용은 [Association 요소(CSDL)](https://msdn.microsoft.com/library/c305169a-8af7-432f-9ba7-800a163aed41)를 참조하십시오.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>