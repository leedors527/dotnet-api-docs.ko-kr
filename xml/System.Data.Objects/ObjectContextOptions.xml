<Type Name="ObjectContextOptions" FullName="System.Data.Objects.ObjectContextOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec633e2f32776ba7f89513e2120370126073af80" /><Meta Name="ms.sourcegitcommit" Value="e3904cb57bb8e1854a7de1615afac7a569a2064b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/14/2019" /><Meta Name="ms.locfileid" Value="54251988" /></Metadata><TypeSignature Language="C#" Value="public sealed class ObjectContextOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectContextOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectContextOptions" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectContextOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectContextOptions sealed" />
  <TypeSignature Language="F#" Value="type ObjectContextOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Data.Objects.ObjectContext" />의 동작에 영향을 미치는 옵션을 정의합니다.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="LazyLoadingEnabled">
      <MemberSignature Language="C#" Value="public bool LazyLoadingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LazyLoadingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property LazyLoadingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LazyLoadingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LazyLoadingEnabled : bool with get, set" Usage="System.Data.Objects.ObjectContextOptions.LazyLoadingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>탐색 속성을 액세스할 때 관련 개체가 자동으로 로드되는지 여부를 결정하는 부울 값을 가져오거나 설정합니다.</summary>
        <value>지연된 로드(lazy loading)를 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyCreationEnabled">
      <MemberSignature Language="C#" Value="public bool ProxyCreationEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProxyCreationEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContextOptions.ProxyCreationEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ProxyCreationEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProxyCreationEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ProxyCreationEnabled : bool with get, set" Usage="System.Data.Objects.ObjectContextOptions.ProxyCreationEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>지속성을 무시하는 사용자 지정 데이터 클래스에 대해 프록시 인스턴스를 만들지 여부를 결정하는 부울 값을 가져오거나 설정합니다.</summary>
        <value>프록시가 만들어지면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseConsistentNullReferenceBehavior">
      <MemberSignature Language="C#" Value="public bool UseConsistentNullReferenceBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseConsistentNullReferenceBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContextOptions.UseConsistentNullReferenceBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property UseConsistentNullReferenceBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseConsistentNullReferenceBehavior { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseConsistentNullReferenceBehavior : bool with get, set" Usage="System.Data.Objects.ObjectContextOptions.UseConsistentNullReferenceBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>일관된 NullReference 동작을 사용할지 여부를 결정하는 부울 값을 가져오거나 설정합니다.</summary>
        <value>일관적 NullReference 동작을 사용해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 플래그 설정 된 경우 `false`의 값 속성을 설정 하는 다음을 <xref:System.Data.Objects.DataClasses.EntityReference%601> null 외래 키 관계에 대 한 null 이미 경우 영향을 주지 것입니다. 이 플래그 설정 된 경우 `true`, null이 되어 수 FK 및 값이 현재 null 하는 경우에 삭제에 대 한 관계 항상 인해 값을 null로 설정 합니다. 기본값은 `false` ObjectContext를 사용 하는 경우 및 `true` DbContext를 사용 하는 경우.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCSharpNullComparisonBehavior">
      <MemberSignature Language="C#" Value="public bool UseCSharpNullComparisonBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCSharpNullComparisonBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContextOptions.UseCSharpNullComparisonBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCSharpNullComparisonBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCSharpNullComparisonBehavior { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseCSharpNullComparisonBehavior : bool with get, set" Usage="System.Data.Objects.ObjectContextOptions.UseCSharpNullComparisonBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>C# NullComparison 동작을 사용할지 여부를 결정하는 부울 값을 가져오거나 설정합니다.</summary>
        <value>C# NullComparison 동작을 사용해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLegacyPreserveChangesBehavior">
      <MemberSignature Language="C#" Value="public bool UseLegacyPreserveChangesBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseLegacyPreserveChangesBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectContextOptions.UseLegacyPreserveChangesBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property UseLegacyPreserveChangesBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseLegacyPreserveChangesBehavior { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseLegacyPreserveChangesBehavior : bool with get, set" Usage="System.Data.Objects.ObjectContextOptions.UseLegacyPreserveChangesBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>레거시 PreserveChanges 동작을 사용할지 여부를 결정하는 부울 값을 가져오거나 설정합니다.</summary>
        <value>레거시 PreserveChanges 동작을 사용해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>