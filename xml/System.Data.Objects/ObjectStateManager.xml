<Type Name="ObjectStateManager" FullName="System.Data.Objects.ObjectStateManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cfa35b1135a2cea11e58ef4e49ceb0984b48e613" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57925018" /></Metadata><TypeSignature Language="C#" Value="public class ObjectStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectStateManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectStateManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectStateManager" />
  <TypeSignature Language="F#" Value="type ObjectStateManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>엔터티 형식 인스턴스 및 관계 인스턴스에 대한 개체 상태 및 ID 관리를 유지 관리합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.ObjectStateManager>는 쿼리 결과를 추적하고 겹치는 여러 쿼리 결과를 병합하는 논리를 제공합니다. 또한 사용자가 개체를 삽입, 삭제 또는 수정할 때 메모리 내 변경 내용 추적을 수행하고 업데이트용 변경 집합을 제공합니다. 이 변경 집합은 변경 내용 처리기에서 사용되며 수정된 내용을 유지합니다.  
  
 이 클래스는 일반적으로 응용 프로그램에서 직접 사용되지 않고 <xref:System.Data.Objects.ObjectContext>에서 사용됩니다.  
  
   
  
## Examples  
 이러한 예제를 기반으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.  
  
 다음 예제에서는 <xref:System.Data.Objects.ObjectStateManager>의 <xref:System.Data.Objects.ObjectContext>를 가져오고 상태 관리자를 사용하여 컨텍스트의 개체에 액세스합니다.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectstatemanager)]
 [!code-vb[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectstatemanager)]  
  
 다음 예제에서는 반환되는 <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29>에 대해 <xref:System.Data.Objects.ObjectStateManager> 메서드를 사용하여 해당 엔터티 키를 기반으로 개체를 가져옵니다.  
  
 [!code-csharp[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#applyitemupdates)]
 [!code-vb[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#applyitemupdates)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectStateManager (System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectStateManager(System::Data::Metadata::Edm::MetadataWorkspace ^ metadataWorkspace);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectStateManager : System.Data.Metadata.Edm.MetadataWorkspace -&gt; System.Data.Objects.ObjectStateManager" Usage="new System.Data.Objects.ObjectStateManager metadataWorkspace" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="metadataWorkspace" Type="System.Data.Metadata.Edm.MetadataWorkspace" />
      </Parameters>
      <Docs>
        <param name="metadataWorkspace">매핑 및 메타데이터 정보를 제공하는 <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />입니다.</param>
        <summary><see cref="T:System.Data.Objects.ObjectStateManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeObjectState">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeObjectState (object entity, System.Data.EntityState entityState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeObjectState(object entity, valuetype System.Data.EntityState entityState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeObjectState(System.Object,System.Data.EntityState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ ChangeObjectState(System::Object ^ entity, System::Data::EntityState entityState);" />
      <MemberSignature Language="F#" Value="member this.ChangeObjectState : obj * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.ChangeObjectState (entity, entityState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="entityState" Type="System.Data.EntityState" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entity">상태를 변경해야 할 개체입니다.</param>
        <param name="entityState">개체의 새 상태입니다.</param>
        <summary>특정 개체에 대한 <see cref="T:System.Data.Objects.ObjectStateEntry" />의 상태를 지정된 <paramref name="entityState" />로 변경합니다.</summary>
        <returns>제공된 <paramref name="entity" />에 대한 <see cref="T:System.Data.Objects.ObjectStateEntry" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 된 <xref:System.Data.Objects.ObjectStateManager.ChangeObjectState%2A> 개체의 상태를 변경 하는 방법 <xref:System.Data.EntityState.Deleted> 삭제할 제약 조건된 관계의 관련된 개체를 야기 하지 않습니다.  
  
 개체의 상태를 변경 하는 경우에 관련된 개체가 개체 그래프에 적용 되지 않습니다.  
  
 변경 하는 경우는 <xref:System.Data.EntityState> 는 엔터티 개체 항목의 <xref:System.Data.EntityState.Modified>, 개체의 모든 속성은 현재 또는 원래 값에 관계 없이 수정 된 것으로 표시 됩니다.  
  
 경우는 <xref:System.Data.EntityState> 엔터티 개체의 항목으로 변경 됩니다 <xref:System.Data.EntityState.Added>를 <xref:System.Data.EntityState.Deleted>, 또는 <xref:System.Data.EntityState.Detached>, 개체에 대 한 관계 항목도 업데이트 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="entity" />가 <see langword="null" />일 경우</exception>
        <exception cref="T:System.InvalidOperationException">개체가 분리되지 않고 상태 관리자에 항목이 없는 경우.  
  
또는 
상태를 다른 모든 <see cref="F:System.Data.EntityState.Detached" />에서 <see cref="T:System.Data.EntityState" />로 변경하려 하는 경우  
  
또는 
<paramref name="state" />가 유효한 <see cref="T:System.Data.EntityState" /> 값이 아닌 경우</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ChangeRelationshipState">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>두 엔터티 개체 간 지정된 관계의 상태를 변경합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 외래 키 연결을 기반으로 하는 관계에는 이 메서드를 사용할 수 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangeRelationshipState">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeRelationshipState (object sourceEntity, object targetEntity, string navigationProperty, System.Data.EntityState relationshipState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeRelationshipState(object sourceEntity, object targetEntity, string navigationProperty, valuetype System.Data.EntityState relationshipState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeRelationshipState (sourceEntity As Object, targetEntity As Object, navigationProperty As String, relationshipState As EntityState) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ ChangeRelationshipState(System::Object ^ sourceEntity, System::Object ^ targetEntity, System::String ^ navigationProperty, System::Data::EntityState relationshipState);" />
      <MemberSignature Language="F#" Value="member this.ChangeRelationshipState : obj * obj * string * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.ChangeRelationshipState (sourceEntity, targetEntity, navigationProperty, relationshipState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEntity" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetEntity" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="navigationProperty" Type="System.String" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="relationshipState" Type="System.Data.EntityState" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceEntity">관계의 한쪽 End에 있는 소스 엔터티의 <see cref="T:System.Data.EntityKey" /> 또는 개체 인스턴스입니다.</param>
        <param name="targetEntity">관계의 다른 쪽 End에 있는 대상 엔터티의 <see cref="T:System.Data.EntityKey" /> 또는 개체 인스턴스입니다.</param>
        <param name="navigationProperty">지정된 <paramref name="sourceEntity" />을 반환하는 <paramref name="targetEntity" />에 대한 탐색 속성의 이름입니다.</param>
        <param name="relationshipState">지정된 관계의 요청된 <see cref="T:System.Data.EntityState" />입니다.</param>
        <summary>두 관련 개체와 탐색 속성의 이름에 따라 지정된 두 엔터티 개체 간 관계의 상태를 변경합니다.</summary>
        <returns>변경된 관계에 대한 <see cref="T:System.Data.Objects.ObjectStateEntry" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정한 관계의 양쪽 끝에서 개체에 대 한 항목에 있어야 합니다.는 <xref:System.Data.Objects.ObjectStateManager>합니다.  
  
> [!NOTE]
>  외래 키 연결을 기반으로 하는 관계에는 이 메서드를 사용할 수 없습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> 또는 <paramref name="target" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">관계 상태를 <see cref="F:System.Data.EntityState.Deleted" /> 또는 <see cref="F:System.Data.EntityState.Detached" /> 이외의 상태로 변경하려 하거나, <paramref name="source" /> 또는 <paramref name="target" />이 <see cref="F:System.Data.EntityState.Deleted" /> 상태인 경우  
  
또는 
관계 상태를 <see cref="F:System.Data.EntityState.Added" /> 또는 <see cref="F:System.Data.EntityState.Detached" /> 이외의 상태로 변경하려 하거나, <paramref name="source" /> 또는 <paramref name="target" />이 <see cref="F:System.Data.EntityState.Added" /> 상태인 경우  
  
또는 
<paramref name="state" />가 유효한 <see cref="T:System.Data.EntityState" /> 값이 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeRelationshipState">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeRelationshipState (object sourceEntity, object targetEntity, string relationshipName, string targetRoleName, System.Data.EntityState relationshipState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeRelationshipState(object sourceEntity, object targetEntity, string relationshipName, string targetRoleName, valuetype System.Data.EntityState relationshipState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeRelationshipState (sourceEntity As Object, targetEntity As Object, relationshipName As String, targetRoleName As String, relationshipState As EntityState) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ ChangeRelationshipState(System::Object ^ sourceEntity, System::Object ^ targetEntity, System::String ^ relationshipName, System::String ^ targetRoleName, System::Data::EntityState relationshipState);" />
      <MemberSignature Language="F#" Value="member this.ChangeRelationshipState : obj * obj * string * string * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.ChangeRelationshipState (sourceEntity, targetEntity, relationshipName, targetRoleName, relationshipState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEntity" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetEntity" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="relationshipName" Type="System.String" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetRoleName" Type="System.String" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="relationshipState" Type="System.Data.EntityState" Index="4" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceEntity">관계의 한쪽 End에 있는 소스 엔터티의 <see cref="T:System.Data.EntityKey" /> 또는 개체 인스턴스입니다.</param>
        <param name="targetEntity">관계의 다른 쪽 End에 있는 대상 엔터티의 <see cref="T:System.Data.EntityKey" /> 또는 개체 인스턴스입니다.</param>
        <param name="relationshipName">관계의 이름입니다.</param>
        <param name="targetRoleName">관계의 <paramref name="targetEntity" /> End에 있는 역할 이름입니다.</param>
        <param name="relationshipState">지정된 관계의 요청된 <see cref="T:System.Data.EntityState" />입니다.</param>
        <summary>두 관련 개체와 관계의 속성에 따라 지정된 두 엔터티 개체 간 관계의 상태를 변경합니다.</summary>
        <returns>변경된 관계에 대한 <see cref="T:System.Data.Objects.ObjectStateEntry" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정한 관계의 양쪽 끝에서 개체에 대 한 항목에 있어야 합니다.는 <xref:System.Data.Objects.ObjectStateManager>합니다.  
  
> [!NOTE]
>  이 메서드는 외래 키 연결을 기반으로 하는 관계에 대 한 지원 되지 않습니다. 자세한 내용은 참조 하세요. [정 및 관계 관리](https://msdn.microsoft.com/library/2c92c097-56bd-4145-989e-16d92475ecda)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> 또는 <paramref name="target" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">관계 상태를 <see cref="F:System.Data.EntityState.Deleted" /> 또는 <see cref="F:System.Data.EntityState.Detached" /> 이외의 상태로 변경하려 하거나, <paramref name="source" /> 또는 <paramref name="target" />이 <see cref="F:System.Data.EntityState.Deleted" /> 상태인 경우  
  
또는 
관계 상태를 <see cref="F:System.Data.EntityState.Added" /> 또는 <see cref="F:System.Data.EntityState.Detached" /> 이외의 상태로 변경하려 하거나, <paramref name="source" /> 또는 <paramref name="target" />이 <see cref="F:System.Data.EntityState.Added" /> 상태인 경우  
  
또는 
<paramref name="state" />가 유효한 <see cref="T:System.Data.EntityState" /> 값이 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeRelationshipState&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeRelationshipState&lt;TEntity&gt; (TEntity sourceEntity, object targetEntity, System.Linq.Expressions.Expression&lt;Func&lt;TEntity,object&gt;&gt; navigationPropertySelector, System.Data.EntityState relationshipState) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeRelationshipState&lt;class TEntity&gt;(!!TEntity sourceEntity, object targetEntity, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TEntity, object&gt;&gt; navigationPropertySelector, valuetype System.Data.EntityState relationshipState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeRelationshipState(Of TEntity As Class) (sourceEntity As TEntity, targetEntity As Object, navigationPropertySelector As Expression(Of Func(Of TEntity, Object)), relationshipState As EntityState) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class System::Data::Objects::ObjectStateEntry ^ ChangeRelationshipState(TEntity sourceEntity, System::Object ^ targetEntity, System::Linq::Expressions::Expression&lt;Func&lt;TEntity, System::Object ^&gt; ^&gt; ^ navigationPropertySelector, System::Data::EntityState relationshipState);" />
      <MemberSignature Language="F#" Value="member this.ChangeRelationshipState : 'Entity * obj * System.Linq.Expressions.Expression&lt;Func&lt;'Entity, obj&gt;&gt; * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry (requires 'Entity : null)" Usage="objectStateManager.ChangeRelationshipState (sourceEntity, targetEntity, navigationPropertySelector, relationshipState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="sourceEntity" Type="TEntity" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetEntity" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="navigationPropertySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntity,System.Object&gt;&gt;" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="relationshipState" Type="System.Data.EntityState" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity"><paramref name="sourceEntity" /> 개체의 엔터티 형식입니다.</typeparam>
        <param name="sourceEntity">관계의 한쪽 End에 있는 소스 엔터티의 <see cref="T:System.Data.EntityKey" /> 또는 개체 인스턴스입니다.</param>
        <param name="targetEntity">관계의 다른 쪽 End에 있는 대상 엔터티의 <see cref="T:System.Data.EntityKey" /> 또는 개체 인스턴스입니다.</param>
        <param name="navigationPropertySelector">지정된 <paramref name="sourceEntity" />을 반환하는 <paramref name="targetEntity" />에 대한 탐색 속성을 선택하는 LINQ 식입니다.</param>
        <param name="relationshipState">지정된 관계의 요청된 <see cref="T:System.Data.EntityState" />입니다.</param>
        <summary>두 관련 개체와 탐색 속성을 정의하는 LINQ 식에 따라 지정된 두 엔터티 개체 간 관계의 상태를 변경합니다.</summary>
        <returns>변경된 관계에 대한 <see cref="T:System.Data.Objects.ObjectStateEntry" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정한 관계의 양쪽 끝에서 개체에 대 한 항목에 있어야 합니다.는 <xref:System.Data.Objects.ObjectStateManager>합니다.  
  
> [!NOTE]
>  이 메서드는 외래 키 연결을 기반으로 하는 관계에 대 한 지원 되지 않습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />, <paramref name="target" /> 또는 <paramref name="selector" />가 <see langword="null" />인 경우.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="selector" /> 형식이 잘못되었거나 탐색 속성을 반환할 수 없습니다.</exception>
        <exception cref="T:System.InvalidOperationException">관계 상태를 <see cref="F:System.Data.EntityState.Deleted" /> 또는 <see cref="F:System.Data.EntityState.Detached" /> 이외의 상태로 변경하려 하거나, <paramref name="source" /> 또는 <paramref name="target" />이 <see cref="F:System.Data.EntityState.Deleted" /> 상태인 경우  
  
또는 
관계 상태를 <see cref="F:System.Data.EntityState.Added" /> 또는 <see cref="F:System.Data.EntityState.Detached" /> 이외의 상태로 변경하려 하거나, <paramref name="source" /> 또는 <paramref name="target" />이 <see cref="F:System.Data.EntityState.Added" /> 상태인 경우  
  
또는 
<paramref name="state" />가 유효한 <see cref="T:System.Data.EntityState" /> 값이 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectStateEntries">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectStateEntry&gt; GetObjectStateEntries (System.Data.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Objects.ObjectStateEntry&gt; GetObjectStateEntries(valuetype System.Data.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntries(System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectStateEntries (state As EntityState) As IEnumerable(Of ObjectStateEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Data::Objects::ObjectStateEntry ^&gt; ^ GetObjectStateEntries(System::Data::EntityState state);" />
      <MemberSignature Language="F#" Value="member this.GetObjectStateEntries : System.Data.EntityState -&gt; seq&lt;System.Data.Objects.ObjectStateEntry&gt;" Usage="objectStateManager.GetObjectStateEntries state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectStateEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Data.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">반환되는 <see cref="T:System.Data.EntityState" /> 개체를 필터링하는 데 사용되는 <see cref="T:System.Data.Objects.ObjectStateEntry" />입니다.</param>
        <summary>지정된 상태의 개체 또는 관계에 대한 <see cref="T:System.Data.Objects.ObjectStateEntry" /> 개체 컬렉션을 반환합니다.</summary>
        <returns>지정된 <see cref="T:System.Data.Objects.ObjectStateEntry" />의 <see cref="T:System.Data.EntityState" /> 개체 컬렉션입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.EntityState>는 비트 필드이므로 여러 <xref:System.Data.EntityState> 값의 비트 OR 연산을 수행하여 한 번의 호출로 여러 상태의 상태 항목을 검색할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="state" />가 <see cref="F:System.Data.EntityState.Detached" />일 경우</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObjectStateEntry">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>특정 개체 또는 관계 항목에 대한 <see cref="T:System.Data.Objects.ObjectStateEntry" />를 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObjectStateEntry">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry GetObjectStateEntry (System.Data.EntityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry GetObjectStateEntry(class System.Data.EntityKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectStateEntry (key As EntityKey) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ GetObjectStateEntry(System::Data::EntityKey ^ key);" />
      <MemberSignature Language="F#" Value="member this.GetObjectStateEntry : System.Data.EntityKey -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.GetObjectStateEntry key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="key"><see cref="T:System.Data.EntityKey" /></param>
        <summary>지정된 키를 사용하여 개체 또는 관계 항목에 대한 <see cref="T:System.Data.Objects.ObjectStateEntry" />를 반환합니다.</summary>
        <returns>지정된 <see cref="T:System.Data.Objects.ObjectStateEntry" />의 해당 <see cref="T:System.Data.EntityKey" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29> 반환 하는 방법을 <xref:System.Data.Objects.ObjectStateEntry> 을 처리할 필요 없이 개체를 <xref:System.InvalidOperationException> 에 의해 발생 합니다 <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Data.EntityKey%29> 메서드.  
  
   
  
## Examples  
 이 항목의 예제는 기준으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다. @FSHO2@예제에서는 <xref:System.Data.Objects.ObjectStateEntry>로부터 지정한 <xref:System.Data.EntityKey>에 대한 <xref:System.Data.Objects.ObjectStateManager>를 가져옵니다. 그런 다음의 현재 값을 가져오고는 `SalesOrderHeader.PurchaseOrderNumber` 속성인 속성의 값을 변경 하 고 수정 된 속성의 컬렉션을 열거 합니다.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectStateEntry](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectstateentry)]
 [!code-vb[DP ObjectServices Concepts#ObjectStateEntry](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectstateentry)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="key" />가 <see langword="null" />일 경우</exception>
        <exception cref="T:System.ArgumentException">지정된 <paramref name="key" />를 상태 관리자에서 찾을 수 없는 경우.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Data.EntityKey" />에 지정된 <see cref="T:System.Data.Objects.ObjectStateManager" />의 엔터티가 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectStateEntry">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry GetObjectStateEntry (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry GetObjectStateEntry(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectStateEntry (entity As Object) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ GetObjectStateEntry(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetObjectStateEntry : obj -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.GetObjectStateEntry entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">검색한 <see cref="T:System.Object" />가 속하는 <see cref="T:System.Data.Objects.ObjectStateEntry" />입니다.</param>
        <summary>지정된 개체에 대한 <see cref="T:System.Data.Objects.ObjectStateEntry" />를 반환합니다.</summary>
        <returns>지정된 <see cref="T:System.Data.Objects.ObjectStateEntry" />의 해당 <see cref="T:System.Object" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Object%2CSystem.Data.Objects.ObjectStateEntry%40%29> 반환 하는 방법을 <xref:System.Data.Objects.ObjectStateEntry> 을 처리할 필요 없이 개체를 <xref:System.InvalidOperationException> 에 의해 발생 합니다 <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Object%29> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">지정된 <see cref="T:System.Object" />에 대한 엔터티가 <see cref="T:System.Data.Objects.ObjectStateManager" />에 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipManager">
      <MemberSignature Language="C#" Value="public System.Data.Objects.DataClasses.RelationshipManager GetRelationshipManager (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.DataClasses.RelationshipManager GetRelationshipManager(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetRelationshipManager(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipManager (entity As Object) As RelationshipManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::DataClasses::RelationshipManager ^ GetRelationshipManager(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipManager : obj -&gt; System.Data.Objects.DataClasses.RelationshipManager" Usage="objectStateManager.GetRelationshipManager entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.DataClasses.RelationshipManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entity"><see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />를 반환할 개체입니다.</param>
        <summary>지정된 개체에서 사용되는 <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />를 반환합니다.</summary>
        <returns>지정된 개체에 대한 <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출를 <xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A> 호출할 때와 동일 합니다 <xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A> 메서드를이 메서드가 반환 하는 대신 예외가 발생 한다는 점을 제외 하면 `false`.  
  
 호출을 <xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A> 처리를 방지 하는 방법 합니다 <xref:System.InvalidOperationException> 발생 하는 경우를 <xref:System.Data.Objects.DataClasses.RelationshipManager> 제공 된 엔터티에 대 한 반환 될 수 없습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />가 지정된 <paramref name="entity" />에 대해 반환될 수 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="MetadataWorkspace">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.MetadataWorkspace MetadataWorkspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.MetadataWorkspace MetadataWorkspace" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectStateManager.MetadataWorkspace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MetadataWorkspace As MetadataWorkspace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::MetadataWorkspace ^ MetadataWorkspace { System::Data::Metadata::Edm::MetadataWorkspace ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MetadataWorkspace : System.Data.Metadata.Edm.MetadataWorkspace" Usage="System.Data.Objects.ObjectStateManager.MetadataWorkspace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.MetadataWorkspace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 상태 관리자와 연결된 <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />를 가져옵니다.</summary>
        <value>이 <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />와 연결된 <see cref="T:System.Data.Objects.ObjectStateManager" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Metadata.Edm.MetadataWorkspace> 클래스는 응용 프로그램의 컨텍스트에서 또는 런타임에 EDM(엔터티 데이터 모델) 메타데이터와 상호 작용하는 데 사용할 수 있는 중앙 프로그래밍 인터페이스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectStateManagerChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler ObjectStateManagerChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler ObjectStateManagerChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectStateManagerChanged As CollectionChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CollectionChangeEventHandler ^ ObjectStateManagerChanged;" />
      <MemberSignature Language="F#" Value="member this.ObjectStateManagerChanged : System.ComponentModel.CollectionChangeEventHandler " Usage="member this.ObjectStateManagerChanged : System.ComponentModel.CollectionChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>상태 관리자에서 엔터티가 추가되거나 제거될 때 발생합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetObjectStateEntry">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>특정 개체 또는 관계 항목에 대한 <see cref="T:System.Data.Objects.ObjectStateEntry" /> 개체를 반환하려고 시도합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetObjectStateEntry">
      <MemberSignature Language="C#" Value="public bool TryGetObjectStateEntry (System.Data.EntityKey key, out System.Data.Objects.ObjectStateEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectStateEntry(class System.Data.EntityKey key, [out] class System.Data.Objects.ObjectStateEntry&amp; entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectStateEntry (key As EntityKey, ByRef entry As ObjectStateEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectStateEntry(System::Data::EntityKey ^ key, [Runtime::InteropServices::Out] System::Data::Objects::ObjectStateEntry ^ % entry);" />
      <MemberSignature Language="F#" Value="member this.TryGetObjectStateEntry : System.Data.EntityKey *  -&gt; bool" Usage="objectStateManager.TryGetObjectStateEntry (key, entry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.EntityKey" />
        <Parameter Name="entry" Type="System.Data.Objects.ObjectStateEntry" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">지정된 <see cref="T:System.Data.EntityKey" />입니다.</param>
        <param name="entry">이 메서드가 반환될 때 지정된 <see cref="T:System.Data.Objects.ObjectStateEntry" />의 <see cref="T:System.Data.EntityKey" />가 포함됩니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
        <summary>지정된 <see cref="T:System.Data.Objects.ObjectStateEntry" />를 사용하여 개체 또는 관계에 대한 해당 <see cref="T:System.Data.EntityKey" />를 검색하려고 시도합니다.</summary>
        <returns>지정된 <see cref="T:System.Data.Objects.ObjectStateEntry" />의 해당 <see cref="T:System.Data.EntityKey" />가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />인 부울 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29> 메서드에서 발생하는 <xref:System.Data.Objects.ObjectStateEntry>을 처리할 필요 없이 <xref:System.InvalidOperationException> 메서드를 사용하여 <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Data.EntityKey%29>를 반환합니다.  
  
   
  
## Examples  
 이 항목의 예제를 기반으로 합니다 [AdventureWorks Sales 모델](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.  
  
 예제에서는 지정된 <xref:System.Data.Objects.ObjectStateEntry>에 대한 해당 <xref:System.Data.EntityKey>를 검색하려고 시도합니다.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectstatemanager)]
 [!code-vb[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectstatemanager)]  
  
 다음 예제에서는 반환되는 <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29>에 대해 <xref:System.Data.Objects.ObjectStateManager> 메서드를 사용하여 해당 엔터티 키를 기반으로 개체를 가져옵니다.  
  
 [!code-csharp[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#applyitemupdates)]
 [!code-vb[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#applyitemupdates)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see langword="null" />(Visual Basic인 경우, <see langword="Nothing" />) 값은 <paramref name="key" />에 제공됩니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetObjectStateEntry">
      <MemberSignature Language="C#" Value="public bool TryGetObjectStateEntry (object entity, out System.Data.Objects.ObjectStateEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectStateEntry(object entity, [out] class System.Data.Objects.ObjectStateEntry&amp; entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectStateEntry (entity As Object, ByRef entry As ObjectStateEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectStateEntry(System::Object ^ entity, [Runtime::InteropServices::Out] System::Data::Objects::ObjectStateEntry ^ % entry);" />
      <MemberSignature Language="F#" Value="member this.TryGetObjectStateEntry : obj *  -&gt; bool" Usage="objectStateManager.TryGetObjectStateEntry (entity, entry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="entry" Type="System.Data.Objects.ObjectStateEntry" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entity">검색한 <see cref="T:System.Object" />가 속하는 <see cref="T:System.Data.Objects.ObjectStateEntry" />입니다.</param>
        <param name="entry">이 메서드가 반환될 때 지정된 <see cref="T:System.Data.Objects.ObjectStateEntry" />에 대한 <see cref="T:System.Data.EntityKey" />가 포함됩니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
        <summary>지정된 <see cref="T:System.Data.Objects.ObjectStateEntry" />에 대한 해당 <see cref="T:System.Object" />를 검색하려고 시도합니다.</summary>
        <returns>지정된 개체의 해당 <see cref="T:System.Data.Objects.ObjectStateEntry" />가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />인 부울 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Object%2CSystem.Data.Objects.ObjectStateEntry%40%29> 메서드에서 발생하는 <xref:System.Data.Objects.ObjectStateEntry>을 처리할 필요 없이 <xref:System.InvalidOperationException> 메서드를 사용하여 <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Object%29>를 반환합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetRelationshipManager">
      <MemberSignature Language="C#" Value="public bool TryGetRelationshipManager (object entity, out System.Data.Objects.DataClasses.RelationshipManager relationshipManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetRelationshipManager(object entity, [out] class System.Data.Objects.DataClasses.RelationshipManager&amp; relationshipManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetRelationshipManager (entity As Object, ByRef relationshipManager As RelationshipManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetRelationshipManager(System::Object ^ entity, [Runtime::InteropServices::Out] System::Data::Objects::DataClasses::RelationshipManager ^ % relationshipManager);" />
      <MemberSignature Language="F#" Value="member this.TryGetRelationshipManager : obj *  -&gt; bool" Usage="objectStateManager.TryGetRelationshipManager (entity, relationshipManager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="relationshipManager" Type="System.Data.Objects.DataClasses.RelationshipManager" RefType="out" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entity"><see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />를 반환할 개체입니다.</param>
        <param name="relationshipManager">이 메서드가 반환될 때 <paramref name="entity" />에 대한 <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />가 포함됩니다.</param>
        <summary>지정된 개체에서 사용되는 <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />를 반환합니다.</summary>
        <returns><see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> 인스턴스가 제공된 <paramref name="entity" />에 대해 반환되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A> 메서드는 가져오는 데는 <xref:System.Data.Objects.DataClasses.RelationshipManager> 지 속성 무시 개체에 대 한 합니다. 개체가 구현 하는 경우 <xref:System.Data.Objects.DataClasses.IEntityWithRelationships> 에서 상속 하거나 <xref:System.Data.Objects.DataClasses.EntityObject>의 <xref:System.Data.Objects.DataClasses.RelationshipManager> 에서 액세스 하는 <xref:System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager%2A> 속성입니다.  
  
 합니다 <xref:System.Data.Objects.DataClasses.RelationshipManager> 개체의 경우에 반환 될 수 없습니다는 <xref:System.Data.EntityState.Detached> 상태입니다.  
  
 호출를 <xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A> 호출할 때와 동일 합니다 <xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A> 메서드를 제외 하 고이 메서드가 반환 `false` 예외를 발생 시키는 대신 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>