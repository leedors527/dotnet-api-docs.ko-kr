<Type Name="OleDbDataAdapter" FullName="System.Data.OleDb.OleDbDataAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="315a8b0686eee5431498d486a203f23343bdac36" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57944456" /></Metadata><TypeSignature Language="C#" Value="public sealed class OleDbDataAdapter : System.Data.Common.DbDataAdapter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbDataAdapter extends System.Data.Common.DbDataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OleDbDataAdapter&#xA;Inherits DbDataAdapter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OleDbDataAdapter sealed : System::Data::Common::DbDataAdapter, ICloneable" />
  <TypeSignature Language="F#" Value="type OleDbDataAdapter = class&#xA;    inherit DbDataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface ICloneable&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.IDbDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("RowUpdated")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OleDbDataAdapterToolboxItem, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Data.DataSet" />을 채우고 데이터 소스를 업데이트하는 데 사용되는 데이터 명령 집합 및 데이터베이스 연결을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Data.OleDb.OleDbDataAdapter> 사이의 연결 다리 역할을 <xref:System.Data.DataSet> 및 데이터 원본을 검색 하 고 데이터를 저장 합니다. <xref:System.Data.OleDb.OleDbDataAdapter> 를 사용 하 여이 연결을 제공 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 에 데이터 원본에서 데이터를 로드 하는 <xref:System.Data.DataSet>, 및 사용 <xref:System.Data.Common.DbDataAdapter.Update%2A> 에서 변경한 내용을 보낼는 <xref:System.Data.DataSet> 데이터 소스에 다시 합니다.  
  
 경우는 <xref:System.Data.OleDb.OleDbDataAdapter> 채웁니다는 <xref:System.Data.DataSet>, 만들어집니다 적절 한 테이블 및 열 반환된 된 데이터에 아직 존재 하지 않는 경우. 하지만, 기본 키 정보 포함 되지 암시적으로 생성된 된 스키마에 있는 경우가 아니면 합니다 <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> 속성이 <xref:System.Data.MissingSchemaAction.AddWithKey>합니다. 할 수도 있습니다는 <xref:System.Data.OleDb.OleDbDataAdapter> 의 스키마를 만들기는 <xref:System.Data.DataSet>를 사용 하 여 데이터를 채우기 전에 기본 키 정보를 포함 하 여 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>. 자세한 내용은 [기존 제약 조건 데이터 세트에 추가](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md)를 참조하세요.  
  
 참고가 기본 테이블 또는 기본 키 정보 MSDataShape 공급자를 비롯 한 일부 OLE DB 공급자를 반환 하지 않습니다. 따라서 합니다 <xref:System.Data.OleDb.OleDbDataAdapter> 올바르게 설정할 수 없습니다 합니다 <xref:System.Data.DataTable.PrimaryKey%2A> 속성을 만든 <xref:System.Data.DataTable>합니다. 이러한 경우에 명시적으로 지정 해야 테이블에 대 한 기본 키를 <xref:System.Data.DataSet>입니다.  
  
 <xref:System.Data.OleDb.OleDbDataAdapter> 도 포함 되어 있습니다 합니다 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>, 및 <xref:System.Data.Common.DataAdapter.TableMappings%2A> 속성을 로드 하 고 데이터의 업데이트를 용이 하 게 합니다.  
  
 인스턴스를 만들면 <xref:System.Data.OleDb.OleDbDataAdapter>, 속성은 초기 값으로 설정 됩니다. 이러한 값의 목록을 보려면 참조는 <xref:System.Data.OleDb.OleDbDataAdapter> 생성자입니다.  
  
   
  
## Examples  
 다음 예제에서는 합니다 <xref:System.Data.OleDb.OleDbCommand>, <xref:System.Data.OleDb.OleDbDataAdapter> 및 <xref:System.Data.OleDb.OleDbConnection>Access 데이터 원본에서 레코드를 선택 하 고 채우는로 <xref:System.Data.DataSet> 선택한 행과 합니다. 채워진 <xref:System.Data.DataSet> 반환 됩니다. 이렇게 하려면 메서드 초기화 되는지를 <xref:System.Data.DataSet>, 연결 문자열 및 쿼리 문자열 SQL SELECT 문입니다.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Dataadapter를 사용 하 여 작업</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Dataadapter를 사용 하 여 작업</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스를 만들면 <xref:System.Data.OleDb.OleDbDataAdapter>, 다음 읽기/쓰기 속성은 다음 초기 값으로 설정 됩니다.  
  
|속성|초기 값|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 속성에 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OleDb.OleDbDataAdapter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Dataadapter를 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter (System.Data.OleDb.OleDbCommand selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.OleDb.OleDbCommand selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommand As OleDbCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter(System::Data::OleDb::OleDbCommand ^ selectCommand);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbDataAdapter : System.Data.OleDb.OleDbCommand -&gt; System.Data.OleDb.OleDbDataAdapter" Usage="new System.Data.OleDb.OleDbDataAdapter selectCommand" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommand" Type="System.Data.OleDb.OleDbCommand" />
      </Parameters>
      <Docs>
        <param name="selectCommand">SELECT 문 또는 저장 프로시저이고 <see cref="T:System.Data.OleDb.OleDbCommand" />의 <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> 속성으로 설정되는 <see cref="T:System.Data.OleDb.OleDbDataAdapter" />입니다.</param>
        <summary><see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 속성으로서 지정된 <see cref="T:System.Data.OleDb.OleDbCommand" />를 사용하여 <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 구현의 합니다 <xref:System.Data.OleDb.OleDbDataAdapter> 생성자 집합 합니다 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 속성에 지정 된 값을는 `selectCommand` 매개 변수.  
  
 인스턴스를 만들면 <xref:System.Data.OleDb.OleDbDataAdapter>, 다음 읽기/쓰기 속성은 다음 초기 값으로 설정 됩니다.  
  
|속성|초기 값|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 속성에 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OleDb.OleDbDataAdapter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Dataadapter를 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter (string selectCommandText, System.Data.OleDb.OleDbConnection selectConnection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, class System.Data.OleDb.OleDbConnection selectConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnection As OleDbConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter(System::String ^ selectCommandText, System::Data::OleDb::OleDbConnection ^ selectConnection);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbDataAdapter : string * System.Data.OleDb.OleDbConnection -&gt; System.Data.OleDb.OleDbDataAdapter" Usage="new System.Data.OleDb.OleDbDataAdapter (selectCommandText, selectConnection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnection" Type="System.Data.OleDb.OleDbConnection" />
      </Parameters>
      <Docs>
        <param name="selectCommandText"><see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />의 <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 속성에서 사용될 SQL SELECT 문이나 저장 프로시저인 문자열입니다.</param>
        <param name="selectConnection">연결을 나타내는 <see cref="T:System.Data.OleDb.OleDbConnection" />입니다.</param>
        <summary><see cref="T:System.Data.OleDb.OleDbDataAdapter" />를 사용하여 <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 구현의 합니다 <xref:System.Data.OleDb.OleDbDataAdapter> 열고 닫습니다는 <xref:System.Data.OleDb.OleDbConnection> 열려 있지 않으면입니다. 이 호출 해야 하는 응용 프로그램에 유용할 수 있습니다 합니다 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 메서드를 두 개 이상의 <xref:System.Data.OleDb.OleDbDataAdapter> 개체입니다. 경우는 <xref:System.Data.OleDb.OleDbConnection> 가 이미 열려 명시적으로 호출 해야 <xref:System.Data.OleDb.OleDbConnection.Close%2A> 또는 **Dispose** 를 닫습니다.  
  
 인스턴스를 만들면 <xref:System.Data.OleDb.OleDbDataAdapter>, 다음 읽기/쓰기 속성은 다음 초기 값으로 설정 됩니다.  
  
|속성|초기 값|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 속성에 별도 호출을 통해 이러한 속성 중 하나의 값을 변경할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OleDb.OleDbDataAdapter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Dataadapter를 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbDataAdapter (string selectCommandText, string selectConnectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, string selectConnectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OleDbDataAdapter(System::String ^ selectCommandText, System::String ^ selectConnectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.OleDb.OleDbDataAdapter : string * string -&gt; System.Data.OleDb.OleDbDataAdapter" Usage="new System.Data.OleDb.OleDbDataAdapter (selectCommandText, selectConnectionString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="selectCommandText"><see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />의 <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> 속성에서 사용될 SQL SELECT 문이나 저장 프로시저인 문자열입니다.</param>
        <param name="selectConnectionString">연결 문자열입니다.</param>
        <summary><see cref="T:System.Data.OleDb.OleDbDataAdapter" />를 사용하여 <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 오버 로드는 <xref:System.Data.OleDb.OleDbDataAdapter> 생성자를 사용 합니다 `selectConnectionString` 매개 변수를 설정 합니다 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 속성. 그러나 연결이 열리지 않습니다. 여전히 명시적으로 열어야 연결 합니다.  
  
 인스턴스를 만들면 <xref:System.Data.OleDb.OleDbDataAdapter>, 다음 읽기/쓰기 속성은 다음 초기 값으로 설정 됩니다.  
  
|속성|초기 값|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 속성에 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OleDb.OleDbDataAdapter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.OleDbDataAdapter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Dataadapter를 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="oleDbDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="oleDbDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ DeleteCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_DeleteCommand")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 집합에서 레코드를 삭제하는 SQL 문이나 저장 프로시저를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Data.OleDb.OleDbCommand" />의 삭제된 행에 해당하는 데이터 소스의 레코드를 삭제하는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 동안 사용된 <see cref="T:System.Data.DataSet" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 중 <xref:System.Data.Common.DbDataAdapter.Update%2A>이면이 속성은 설정 되지 않으며 기본 키 정보에는 <xref:System.Data.DataSet>, <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> 설정 하는 경우 자동으로 생성할 수 있습니다 합니다 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 속성을 사용 하 여는 <xref:System.Data.OleDb.OleDbCommandBuilder>합니다. 설정 되지 않은 모든 추가 명령에서 생성 되는 다음을 <xref:System.Data.OleDb.OleDbCommandBuilder>입니다. 이 세대 논리에 키 열 정보가 필요 합니다 <xref:System.Data.DataSet>합니다. 자세한 내용은 [commandbuilder를 사용 하를 사용 하 여 명령 생성](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)합니다.  
  
 때 <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> 할당 된 이전에 만든 <xref:System.Data.OleDb.OleDbCommand>는 <xref:System.Data.OleDb.OleDbCommand> 복제 되지 않습니다. 합니다 <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> 이전에 만든에 대 한 참조를 유지 관리 <xref:System.Data.OleDb.OleDbCommand> 개체입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OleDb.OleDbDataAdapter> 가져오거나 설정 합니다 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 및 <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> 속성입니다. 이미 만들었다고 가정 하는 <xref:System.Data.OleDb.OleDbConnection> 개체입니다.  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Dataadapter를 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="oleDbDataAdapter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ADO <see langword="Recordset" /> 또는 <see langword="Record" /> 개체의 행과 일치하는 <see cref="T:System.Data.DataSet" />의 행을 추가하거나 새로 고칩니다.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Dataadapter를 사용 하 여 작업</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataTable dataTable, object ADODBRecordSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataTable dataTable, object ADODBRecordSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataTable ^ dataTable, System::Object ^ ADODBRecordSet);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * obj -&gt; int" Usage="oleDbDataAdapter.Fill (dataTable, ADODBRecordSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="ADODBRecordSet" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataTable">레코드와 스키마(필요한 경우)로 채울 <see cref="T:System.Data.DataTable" />입니다.</param>
        <param name="ADODBRecordSet">ADO <see langword="Recordset" />이나 <see langword="Record" /> 개체입니다.</param>
        <summary>지정된 <see cref="T:System.Data.DataTable" /> 및 ADO 개체를 사용하여 ADO <see langword="Recordset" /> 또는 <see langword="Record" /> 개체의 행과 일치하는 <see cref="T:System.Data.DataTable" />의 행을 추가하거나 새로 고칩니다.</summary>
        <returns><see cref="T:System.Data.DataTable" />에 성공적으로 새로 고쳐진 행의 수를 반환합니다. 여기에는 행을 반환하지 않는 문의 영향을 받는 행은 포함되지 않습니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ADO.NET 데이터 개체 (ADO (ActiveX) 사이의 링크는 단방향 작업에는 ADO에서 데이터를 복사할 수 있습니다를 <xref:System.Data.DataSet>, 있지만 ADO.NET에서 데이터에 대 한 업데이트를 처리 해야 합니다.  
  
 이 오버 로드 된 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 메서드는 입력을 닫지 않습니다 `Recordset` 완료 되 면는 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 작업 합니다.  
  
 이 구현의 여러 결과 반환 하는 SQL 문을 일괄 처리할 때 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 고 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 첫 번째 결과 대 한 스키마 정보를 검색 하는 OLE DB.NET Framework 데이터 공급자에 대 한 합니다.  
  
 합니다 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 지정된 된 대상에 행을 추가 하는 작업 <xref:System.Data.DataTable> 개체를 <xref:System.Data.DataSet>만들기는 <xref:System.Data.DataTable> 경우 이미 없는 개체입니다. 만들 때를 <xref:System.Data.DataTable> 개체는 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 작업은 일반적으로 열 이름 메타 데이터만 만듭니다. 그러나 경우 합니다 <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> 속성이 `AddWithKey`, 적절 한 기본 키와 제약 조건도 만들어집니다.  
  
 사용할 수는 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 메서드를 여러 번에 동일한 <xref:System.Data.DataTable>입니다. 기본 키가 있는 경우 들어오는 행이 이미 존재 하는 일치 하는 행과 병합 됩니다. 들어오는 행에 추가 된 기본 키가 없으면는 <xref:System.Data.DataTable>합니다. 기본 키 정보가 있는 경우 중복 행 조정 되어에서 한 번만 표시 합니다 <xref:System.Data.DataTable> 에 해당 하는 <xref:System.Data.DataSet>합니다. 통해 기본 키 정보를 설정할 수 있습니다 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, 지정 하 여는 <xref:System.Data.DataTable.PrimaryKey%2A> 의 속성을 <xref:System.Data.DataTable>, 하거나 설정 하 여를 <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> 속성을 `AddWithKey`.  
  
 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 가 OUTER JOIN의 결과를 반환하면 `DataAdapter` 는 결과 <xref:System.Data.DataTable.PrimaryKey%2A> 에 대해 <xref:System.Data.DataTable>값을 설정하지 않습니다. 중복 행 계산은 되도록 기본 키를 명시적으로 정의 해야 합니다. 자세한 내용은 [기본 키 정의](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)합니다.  
  
 .NET Framework Data provider for OLE DB에서 제대로 작동 하려면 `AddWithKey` 네이티브 OLE DB 공급자가 DBPROP_UNIQUEROWS 속성을 설정 하 여 필요한 기본 키 정보를 가져옵니다 하 고 다음 열은 기본 키를 확인 필요 DBCOLUMN_KEYCOLUMN을 검사 하 여 열을 `IColumnsRowset`입니다. 사용자 각 primary key 제약 조건 수 명시적으로 설정 하는 또는 <xref:System.Data.DataTable>합니다. 이렇게 하면 대신 기존 레코드와 일치 하는 들어오는 레코드가 업데이트 되었는지 추가 합니다.  
  
 경우는 <xref:System.Data.OleDb.OleDbDataAdapter> 에서 중복 열을 채우는 동안는 <xref:System.Data.DataTable>, 패턴을 사용 하 여 후속 열에 대 한 이름을 생성 "*columnname*1", "*columnname*2", "*columnname*3", 및 등입니다. 빈 열 이름에 추가 됩니다는 <xref:System.Data.DataTable>, "1", "2", "3", 등에 이후 빈 열에 대 한 다음 빈 문자열을 사용 하 여 첫 번째 열에 대 한 합니다.  
  
 Ado에서 값 `Recordset` 또는 `Record` 저장소에 대 한 런타임 형식 개체는 일반적인 변환할된 언어는 <xref:System.Data.DataSet>합니다.  
  
> [!CAUTION]
>  이 오버 로드 된 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 메서드를 암시적으로 호출 하지 않습니다 `Close` 채우기 작업이 완료 되 면 ADO 개체에서. 따라서 항상 호출할 `Close` ADO를 사용 하 여 작업을 마쳤으면 `Recordset` 또는 `Record` 개체입니다. 이렇게 하면 데이터 원본에 대 한 기본 연결을 적시에 해제 되 고도 기존 참조 계속 존재 하는 경우 가비지 수집기에서 회수 되는지 관리 되지 않는 ADO 개체 때문에 가능한 액세스 위반을 방지 합니다.  
  
 `DataAdapter`에서 `TableMappings.Add` 메서드를 호출하고 원본 테이블 매개 변수를 빈 문자열로 명시적으로 매핑하면 원본 테이블을 사용하여 데이터 세트가 채워지지만 데이터 세트에는 아무것도 채워지지 않습니다. 예를 들어, 다음 예제에서에서 `rDataSet` nothing으로 채워집니다.  
  
```  
rAdapter.TableMappings.Add("source table", "");  
rAdapter.Fill(rDataSet, "source table");     
```  
  
 이 예제에서는 어떻게 여러 결과 처리할 때 결과 건너뛸 수 있습니다.  
  
 다음 예제에서는 <xref:System.Data.OleDb.OleDbDataAdapter> 를 입력 하는 <xref:System.Data.DataTable> ADO를 사용 하 여 `Recordset`입니다. 이 예에서는 ADO 만들었다고 가정 `Recordset`합니다.  
  
```vb  
Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()  
     Dim custDS As DataSet = New DataSet  
     Dim custTable As DataTable = New DataTable("Customers")  
     custTable.Columns.Add("CustomerID", Type.GetType("System.String"))  
     custTable.Columns.Add("CompanyName", Type.GetType("System.String"))  
     custDS.Tables.Add(custTable)  
     'Use ADO objects from ADO library (msado15.dll) imported  
     ' as.NET library ADODB.dll using TlbImp.exe  
     Dim adoConn As ADODB.Connection = New ADODB.Connection()  
     Dim adoRS As ADODB.Recordset = New ADODB.Recordset()  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1)  
     adoRS.Open("SELECT CustomerID, CompanyName FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)  
     custDA.Fill(custTable, adoRS)  
     adoRS.Close()  
     adoConn.Close()  
```  
  
```csharp  
OleDbDataAdapter custDA = new OleDbDataAdapter();  
     DataSet custDS = new DataSet();  
     DataTable custTable = new DataTable("Customers");  
     custTable.Columns.Add("CustomerID", typeof(String));  
     custTable.Columns.Add("CompanyName", typeof(String));  
     custDS.Tables.Add(custTable);  
     //Use ADO objects from ADO library (msado15.dll) imported  
     //  as.NET library ADODB.dll using TlbImp.exe  
     ADODB.Connection adoConn = new ADODB.Connection();  
     ADODB.Recordset adoRS = new ADODB.Recordset();  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1);  
     adoRS.Open("SELECT CustomerID, CompanyName FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);  
     custDA.Fill(custTable, adoRS);  
     adoRS.Close();  
     adoConn.Close();  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Dataadapter를 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, object ADODBRecordSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, object ADODBRecordSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, System::Object ^ ADODBRecordSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * obj * string -&gt; int" Usage="oleDbDataAdapter.Fill (dataSet, ADODBRecordSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="ADODBRecordSet" Type="System.Object" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">레코드와 스키마(필요한 경우)로 채울 <see cref="T:System.Data.DataSet" />입니다.</param>
        <param name="ADODBRecordSet">ADO <see langword="Recordset" />이나 <see langword="Record" /> 개체입니다.</param>
        <param name="srcTable">테이블 매핑에 사용되는 소스 테이블입니다.</param>
        <summary>지정된 <see cref="T:System.Data.DataSet" />, ADO 개체 및 소스 테이블 이름을 사용하여 ADO <see langword="Recordset" /> 또는 <see langword="Record" /> 개체의 행과 일치하는 <see cref="T:System.Data.DataSet" />의 행을 추가하거나 새로 고칩니다.</summary>
        <returns><see cref="T:System.Data.DataSet" />에 성공적으로 추가했거나 새로 고친 행의 수를 반환합니다. 여기에는 행을 반환하지 않는 문의 영향을 받는 행은 포함되지 않습니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ADO.NET 데이터 개체 (ADO (ActiveX) 사이의 링크는 단방향 작업에는 ADO에서 데이터를 복사할 수 있습니다를 <xref:System.Data.DataSet>, 있지만 ADO.NET에서 데이터에 대 한 업데이트를 처리 해야 합니다.  
  
 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 메서드를 호출 하 여 여러 결과를 반복 합니다.는 `NextRecordset` 메서드를 `Recordset`, 입력을 닫는 `Recordset` 완료 되 면를 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 작업.  
  
 합니다 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 지정된 된 대상에 행을 추가 하는 작업 <xref:System.Data.DataTable> 개체를 <xref:System.Data.DataSet>만들기는 <xref:System.Data.DataTable> 경우 이미 없는 개체입니다. 만들 때를 <xref:System.Data.DataTable> 개체는 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 작업은 일반적으로 열 이름 메타 데이터만 만듭니다. 그러나 경우 합니다 <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> 속성이 `AddWithKey`, 적절 한 기본 키와 제약 조건도 만들어집니다.  
  
 기본 키 정보가 있는 경우 중복 행 조정 되어에서 한 번만 표시 합니다 <xref:System.Data.DataTable> 에 해당 하는 <xref:System.Data.DataSet>합니다. 통해 기본 키 정보를 설정할 수 있습니다 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, 지정 하 여는 <xref:System.Data.DataTable.PrimaryKey%2A> 의 속성을 <xref:System.Data.DataTable>, 하거나 설정 하 여를 <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> 속성을 `AddWithKey`.  
  
 .NET Framework Data provider for OLE DB에서 제대로 작동 하려면 `AddWithKey` DBPROP_UNIQUEROWS 속성을 설정 하 여 필요한 기본 키 정보를 가져오려면 다음 열에 기본 키가 확인을 네이티브 OLE DB provider가 필요 DBCOLUMN_KEYCOLUMN을 검사 하 여 열을 **IColumnsRowset**합니다. 사용자 각 primary key 제약 조건 수 명시적으로 설정 하는 또는 <xref:System.Data.DataTable>합니다. 이렇게 하면 기존 레코드와 일치하는 들어오는 레코드가 추가되지 않고 업데이트됩니다.  
  
 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 가 OUTER JOIN의 결과를 반환하면 `DataAdapter` 는 결과 <xref:System.Data.DataTable.PrimaryKey%2A> 에 대해 <xref:System.Data.DataTable>값을 설정하지 않습니다. 중복 행 계산은 되도록 기본 키를 명시적으로 정의 해야 합니다. 자세한 내용은 [기본 키 정의](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)합니다.  
  
 경우는 `Recordset` 의 시작 하기 전에 닫혀는 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 작업, 오류가 발생 하지 않습니다. 이것이 필요한 여러 결과 처리에 대 한 행을 반환 하지 않는 쿼리 표시 되기 때문에 닫힌 여 `Recordset`입니다. 합니다 <xref:System.Data.OleDb.OleDbDataAdapter> 호출 `NextRecordset` 닫힌에서 `Recordset` 처리를 계속 합니다.  
  
 오류가 발생 하기 전에 추가 된 행에 남아 데이터 집합을 채우는 동안 오류가 발생 합니다 <xref:System.Data.DataSet>합니다. 작업의 나머지 부분을 중단 합니다.  
  
 경우는 <xref:System.Data.Common.DbDataAdapter> 개체를 채우는 동안 중복 된 열을 발견 한 <xref:System.Data.DataTable>, 패턴을 사용 하 여 후속 열에 대 한 이름을 생성 "*columnname*1","*columnname*2" " *columnname*3", 및 등입니다. 놓 이기는 들어오는 데이터에 명명 되지 않은 열을 포함 하는 경우는 <xref:System.Data.DataSet> "column1", "Column2" 등에 따라 합니다. 여러 결과 집합에 추가 될 때를 <xref:System.Data.DataSet> 각 결과 집합을 별도 테이블에 배치 됩니다. 추가 결과 집합이 지정한 테이블 이름 (예를 들어, "Table", "Table1", "Table2", 및 등입니다.)를 정수 값을 추가 하 여 이름이 지정 됩니다. 열 및 테이블 이름을 사용 하는 응용 프로그램은 이러한 명명 패턴을 사용 하 여 충돌이 발생 하지 않도록 확인 해야 합니다.  
  
 Ado에서 값 `Recordset` 또는 `Record` 저장소에 대 한 런타임 형식 개체는 일반적인 변환할된 언어는 <xref:System.Data.DataSet>합니다.  
  
> [!NOTE]
>  이 오버 로드 된 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 메서드를 암시적으로 호출 `Close` 채우기 작업이 완료 되 면 ADO 개체에서.  
  
 다음 예제에서는 <xref:System.Data.OleDb.OleDbDataAdapter> 맞게를 <xref:System.Data.DataSet> ADO를 사용 하 여 `Recordset` ADO 즉 `Record` 개체입니다. 이 예에서는 ADO 만들었다고 가정 `RecordSet` 고 `Record` 개체입니다.  
  
```vb  
Dim custDA As OleDbDataAdapter = New OleDbDataAdapter()  
     Dim custDS As DataSet = New DataSet  
     'Use ADO objects from ADO library (msado15.dll) imported  
     ' as.NET library ADODB.dll using TlbImp.exe  
     Dim adoConn As ADODB.Connection = New ADODB.Connection()  
     Dim adoRS As ADODB.Recordset = New ADODB.Recordset()  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1)  
     adoRS.Open("SELECT * FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1)  
     custDA.Fill(custDS, adoRS, "Customers")  
     adoConn.Close()  
```  
  
```csharp  
OleDbDataAdapter custDA = new OleDbDataAdapter();  
     DataSet custDS = new DataSet();  
     //Use ADO objects from ADO library (msado15.dll) imported  
     // as.NET library ADODB.dll using TlbImp.exe  
     ADODB.Connection adoConn = new ADODB.Connection();  
     ADODB.Recordset adoRS = new ADODB.Recordset();  
     adoConn.Open("Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;Integrated Security=SSPI;", "", "", -1);  
     adoRS.Open("SELECT * FROM Customers", adoConn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockReadOnly, 1);  
     custDA.Fill(custDS, adoRS, "Customers");  
     adoConn.Close();  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">소스 테이블이 잘못된 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Dataadapter를 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ InsertCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_InsertCommand")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스에 새 레코드를 삽입하는 데 사용되는 SQL 문 또는 저장 프로시저를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Data.OleDb.OleDbCommand" />의 새 행에 해당하는 데이터 소스의 레코드를 삽입하는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 동안 사용된 <see cref="T:System.Data.DataSet" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 중 <xref:System.Data.Common.DbDataAdapter.Update%2A>이면이 속성은 설정 되지 않으며 기본 키 정보에는 <xref:System.Data.DataSet>, <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> 설정 하는 경우 자동으로 생성할 수 있습니다 합니다 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 속성을 사용 하 여는 <xref:System.Data.OleDb.OleDbCommandBuilder>합니다. 설정 되지 않은 모든 추가 명령에서 생성 되는 다음을 <xref:System.Data.OleDb.OleDbCommandBuilder>입니다. 이 세대 논리에 키 열 정보가 필요 합니다 <xref:System.Data.DataSet>합니다. 자세한 내용은 [commandbuilder를 사용 하를 사용 하 여 명령 생성](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)합니다.  
  
 때 <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> 할당 된 이전에 만든 <xref:System.Data.OleDb.OleDbCommand>는 <xref:System.Data.OleDb.OleDbCommand> 복제 되지 않습니다. 합니다 <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> 이전에 만든에 대 한 참조를 유지 관리 <xref:System.Data.OleDb.OleDbCommand> 개체입니다.  
  
> [!NOTE]
>  행을 반환 하는이 명령 실행 하는 경우 이러한 행에 추가할 수 있습니다는 <xref:System.Data.DataSet> 설정 하는 방법에 따라 합니다 <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> 의 속성을 <xref:System.Data.OleDb.OleDbCommand> 개체.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OleDb.OleDbDataAdapter> 가져오거나 설정 합니다 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 및 <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> 속성입니다. 이미 만들었다고 가정 하는 <xref:System.Data.OleDb.OleDbConnection> 개체입니다.  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Dataadapter를 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="oleDbDataAdapter.OnRowUpdated value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="oleDbDataAdapter.OnRowUpdating value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdated">
      <MemberSignature Language="C#" Value="public event System.Data.OleDb.OleDbRowUpdatedEventHandler RowUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OleDb.OleDbRowUpdatedEventHandler RowUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdated As OleDbRowUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OleDb::OleDbRowUpdatedEventHandler ^ RowUpdated;" />
      <MemberSignature Language="F#" Value="member this.RowUpdated : System.Data.OleDb.OleDbRowUpdatedEventHandler " Usage="member this.RowUpdated : System.Data.OleDb.OleDbRowUpdatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_RowUpdated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbRowUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스에 대해 명령이 실행된 후에 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />를 수행하는 동안 발생합니다. 업데이트가 시도되어 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하는 경우 <xref:System.Data.Common.DbDataAdapter.Update%2A>를 업데이트 하는 데이터 행 마다 발생 하는 두 개의 이벤트가 있습니다. 실행 순서는 다음과 같습니다.  
  
1.  값을 <xref:System.Data.DataRow> 매개 변수 값으로 이동 됩니다.  
  
2.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 이벤트가 발생합니다.  
  
3.  명령을 실행합니다.  
  
4.  명령으로 설정 되어 있으면 `FirstReturnedRecord`, 첫 번째 반환 결과에 위치한는 <xref:System.Data.DataRow>합니다.  
  
5.  에 배치 됩니다 출력 매개 변수가 있는 경우는 <xref:System.Data.DataRow>합니다.  
  
6.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 이벤트가 발생합니다.  
  
7.  <xref:System.Data.DataRow.AcceptChanges%2A>이 호출됩니다.  
  
   
  
## Examples  
 다음 예제에서는 합니다 <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> 및 <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated> 되는 이벤트입니다.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Dataadapter를 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName="RowUpdating">
      <MemberSignature Language="C#" Value="public event System.Data.OleDb.OleDbRowUpdatingEventHandler RowUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OleDb.OleDbRowUpdatingEventHandler RowUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdating As OleDbRowUpdatingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OleDb::OleDbRowUpdatingEventHandler ^ RowUpdating;" />
      <MemberSignature Language="F#" Value="member this.RowUpdating : System.Data.OleDb.OleDbRowUpdatingEventHandler " Usage="member this.RowUpdating : System.Data.OleDb.OleDbRowUpdatingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_RowUpdating")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbRowUpdatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스에 대해 명령이 실행되기 전에 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />를 수행하는 동안 발생합니다. 업데이트가 시도되어 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하는 경우 <xref:System.Data.Common.DbDataAdapter.Update%2A>를 업데이트 하는 데이터 행 마다 발생 하는 두 개의 이벤트가 있습니다. 실행 순서는 다음과 같습니다.  
  
1.  값을 <xref:System.Data.DataRow> 매개 변수 값으로 이동 됩니다.  
  
2.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 이벤트가 발생합니다.  
  
3.  명령을 실행합니다.  
  
4.  명령으로 설정 되어 있으면 `FirstReturnedRecord`, 첫 번째 반환 결과에 위치한는 <xref:System.Data.DataRow>합니다.  
  
5.  에 배치 됩니다 출력 매개 변수가 있는 경우는 <xref:System.Data.DataRow>합니다.  
  
6.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 이벤트가 발생합니다.  
  
7.  <xref:System.Data.DataRow.AcceptChanges%2A>이 호출됩니다.  
  
   
  
## Examples  
 다음 예제에서는 합니다 <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> 및 <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdated> 되는 이벤트입니다.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.RowUpdated Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.RowUpdated Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Dataadapter를 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ SelectCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_SelectCommand")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스의 레코드를 선택하는 데 사용하는 SQL 문이나 저장 프로시저를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Data.OleDb.OleDbCommand" />에 있는 위치에 대한 데이터 소스에서 레코드를 선택하는 <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> 동안 사용하는 <see cref="T:System.Data.DataSet" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 할당 된 이전에 만든 <xref:System.Data.OleDb.OleDbCommand>는 <xref:System.Data.OleDb.OleDbCommand> 복제 되지 않습니다. 합니다 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 이전에 만든에 대 한 참조를 유지 관리 <xref:System.Data.OleDb.OleDbCommand> 개체입니다.  
  
 경우는 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 없는 행을 반환에 테이블이 추가 되는 <xref:System.Data.DataSet>, 예외가 발생 하지 않습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OleDb.OleDbDataAdapter> 가져오거나 설정 합니다 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 및 <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> 속성입니다. 이미 만들었다고 가정 하는 <xref:System.Data.OleDb.OleDbConnection> 개체입니다.  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/cc952ca2-ec19-46ab-9189-15174b52cb74">Dataadapter를 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Data.IDbDataAdapter.DeleteCommand" />를 참조하십시오.</summary>
        <value>업데이트를 수행하는 동안 데이터 집합의 삭제된 행에 대한 데이터 소스에서 레코드를 삭제하는 데 사용되는 <see cref="T:System.Data.IDbCommand" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Data.OleDb.OleDbDataAdapter> 인스턴스가 <xref:System.Data.IDbDataAdapter> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Data.IDbDataAdapter.InsertCommand" />를 참조하십시오.</summary>
        <value>업데이트를 수행하는 동안 데이터 소스에서 데이터 집합에 배치할 레코드를 삽입하는 데 사용되는 <see cref="T:System.Data.IDbCommand" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Data.OleDb.OleDbDataAdapter> 인스턴스가 <xref:System.Data.IDbDataAdapter> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Data.IDbDataAdapter.SelectCommand" />를 참조하십시오.</summary>
        <value>업데이트를 수행하는 동안 데이터 소스에서 데이터 집합에 배치할 레코드를 선택하는 데 사용되는 <see cref="T:System.Data.IDbCommand" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Data.OleDb.OleDbDataAdapter> 인스턴스가 <xref:System.Data.IDbDataAdapter> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Data.IDbDataAdapter.UpdateCommand" />를 참조하십시오.</summary>
        <value>업데이트를 수행하는 동안 데이터 집합의 수정된 행에 대한 레코드를 데이터 소스에서 업데이트하는 데 사용되는 <see cref="T:System.Data.IDbCommand" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Data.OleDb.OleDbDataAdapter> 인스턴스가 <xref:System.Data.IDbDataAdapter> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.ICloneable.Clone" />를 참조하십시오.</summary>
        <returns>이 인스턴스의 복사본인 새 <see cref="T:System.Object" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Data.OleDb.OleDbDataAdapter> 인스턴스가 <xref:System.ICloneable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As OleDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OleDb::OleDbCommand ^ UpdateCommand { System::Data::OleDb::OleDbCommand ^ get(); void set(System::Data::OleDb::OleDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.OleDb.OleDbCommand with get, set" Usage="System.Data.OleDb.OleDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_UpdateCommand")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스의 레코드를 업데이트하는 데 사용되는 SQL 문 또는 저장 프로시저를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Data.DataSet" />에서 수정된 행에 해당하는 데이터 소스의 레코드를 업데이트하기 위해 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 중에 사용되는 <see cref="T:System.Data.OleDb.OleDbCommand" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 중 <xref:System.Data.Common.DbDataAdapter.Update%2A>이면이 속성은 설정 되지 않으며 기본 키 정보에는 <xref:System.Data.DataSet>, <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> 설정 하는 경우 자동으로 생성할 수 있습니다 합니다 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 속성을 사용 하 여는 <xref:System.Data.OleDb.OleDbCommandBuilder>합니다. 설정 되지 않은 모든 추가 명령에서 생성 되는 다음을 <xref:System.Data.OleDb.OleDbCommandBuilder>입니다. 이 세대 논리에 키 열 정보가 필요 합니다 <xref:System.Data.DataSet>합니다. 자세한 내용은 [commandbuilder를 사용 하를 사용 하 여 명령 생성](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)합니다.  
  
 때 <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> 할당 된 이전에 만든 <xref:System.Data.OleDb.OleDbCommand>는 <xref:System.Data.OleDb.OleDbCommand> 복제 되지 않습니다. 합니다 <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> 이전에 만든에 대 한 참조를 유지 관리 <xref:System.Data.OleDb.OleDbCommand> 개체입니다.  
  
> [!NOTE]
>  행을 반환 하는이 명령 실행 하는 경우 이러한 행으로 병합 될 수 있습니다는 <xref:System.Data.DataSet> 설정 하는 방법에 따라 합니다 <xref:System.Data.OleDb.OleDbCommand.UpdatedRowSource%2A> 의 속성을 <xref:System.Data.OleDb.OleDbCommand> 개체.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OleDb.OleDbDataAdapter> 가져오거나 설정 합니다 <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> 및 <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> 속성입니다. 이미 만들었다고 가정 하는 <xref:System.Data.OleDb.OleDbConnection> 개체입니다.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>