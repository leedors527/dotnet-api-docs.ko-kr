<Type Name="OracleBFile" FullName="System.Data.OracleClient.OracleBFile">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b62b47ebbd4288efc649a5d233361390eac84293" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57943296" /></Metadata><TypeSignature Language="C#" Value="public sealed class OracleBFile : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleBFile extends System.IO.Stream implements class System.Data.SqlTypes.INullable, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleBFile" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleBFile&#xA;Inherits Stream&#xA;Implements ICloneable, INullable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleBFile sealed : System::IO::Stream, ICloneable, System::Data::SqlTypes::INullable" />
  <TypeSignature Language="F#" Value="type OracleBFile = class&#xA;    inherit Stream&#xA;    interface ICloneable&#xA;    interface INullable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.SqlTypes.INullable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Oracle <see langword="BFILE" /> 데이터 형식으로 작업하도록 설계된 관리되는 <see cref="T:System.Data.OracleClient.OracleBFile" /> 개체를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oracle `BFILE` 데이터 형식은 Oracle `LOB` 4gb의 최대 크기를 사용 하 여 이진 데이터에 대 한 참조를 포함 하는 데이터 형식입니다. Oracle `BFILE` 다른 Oracle에서 다른 `LOB` 서버의 대신 운영 체제의 물리적 파일에 데이터가 저장 되는 데이터 형식입니다. `BFILE` 데이터 형식은 데이터에 대 한 읽기 전용 액세스를 제공 합니다. 따라서에서 상속 된 쓰기 지향 메서드는 <xref:System.IO.Stream> 클래스는 지원 되지 않습니다.  
  
 다른 특성을 `BFILE` 구별 되는 데이터 형식을 `LOB` 기원후는:  
  
-   구조화되지 않은 데이터를 포함합니다.  
  
-   서버측 청크를 지원합니다.  
  
-   참조 복사 의미를 사용합니다. 예를 들어 복사 작업을 수행 하는 `BFILE`만 `BFILE` (즉, 파일에 대 한 참조) 로케이터 복사 됩니다. 파일의 데이터는 복사되지 않습니다.  
  
 합니다 `BFILE` 참조에 대 한 데이터 형식을 사용 해야 `LOB`크기가 큰 s 따라서 데이터베이스에 저장 하기에 적합 하지 합니다. 사용에 대 한 클라이언트, 서버 및 통신 오버 헤드가 `BFILE` 데이터 형식에 비해는 `LOB` 데이터 형식입니다. 액세스 하는 것이 효율적 이기는 `BFILE` 적은 양의 데이터를 획득 해야 하는 경우. 액세스 데이터베이스에 상주 하는 것이 효율적 이기 `LOB`s 전체 개체를 얻어야 하는 경우.  
  
 NULL이 아닌 각 <xref:System.Data.OracleClient.OracleBFile> 개체가 기본 물리적 파일의 위치를 정의 하는 두 엔터티를 사용 하 여 연결 합니다.  
  
-   파일 시스템의 디렉터리에 대한 데이터베이스 별칭인 Oracle DIRECTORY 개체입니다.  
  
-   DIRECTORY 개체와 연관된 디렉터리에 위치하는 원본 파일 이름입니다.  
  
 후는 `BFILE` 가 만들어지면 해당 형식의 로케이터를 검색할 수 있습니다는 <xref:System.Data.OracleClient.OracleBFile> 사용 하 여 개체를 <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> 또는 <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> 메서드.  
  
 가져올는 <xref:System.Data.OracleClient.OracleBFile> 개체를 호출 합니다 <xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A> 메서드.  
  
 되는 실제 파일을 <xref:System.Data.OracleClient.OracleBFile> 개체가 연결 되어 사용 하 여 않아도 액세스 하려고 할 때 까지는 존재 합니다. 응용 프로그램에 바인딩할 수 있는 <xref:System.Data.OracleClient.OracleBFile> 존재 하지 않는 파일에 필요한 위치에 물리적 파일을 만들고 다음 호출 <xref:System.Data.OracleClient.OracleBFile.Read%2A>합니다.  
  
 닫힌에 액세스 하려고 <xref:System.Data.OracleClient.OracleBFile> 를 사용 하는 <xref:System.Data.OracleClient.OracleBFile.Read%2A> 또는 <xref:System.Data.OracleClient.OracleBFile.Seek%2A> 메서드 다시 열릴은 <xref:System.Data.OracleClient.OracleBFile> 스트림이 자동으로 합니다.  
  
 다음 C# 예제를 만드는 방법을 보여 줍니다.는 `BFILE` Oracle에 테이블을 선택한 다음의 형태로 검색는 <xref:System.Data.OracleClient.OracleBFile> 개체입니다. 사용 예제에 <xref:System.Data.OracleClient.OracleDataReader> 개체 및 <xref:System.Data.OracleClient.OracleBFile> <xref:System.Data.OracleClient.OracleBFile.Seek%2A> 및 <xref:System.Data.OracleClient.OracleBFile.Read%2A> 메서드.  
  
 [!code-csharp[DataWorks OracleClient.BFile#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OracleClient.BFile/CS/source.cs#1)]  
  
 만들기 및 Oracle을 사용 하는 방법에 대 한 자세한 내용은 `BFILE`, Oracle 설명서에서 해당 항목을 참조 하세요.  
  
> [!NOTE]
>  `BeginWrite`, `EndWrite`, 및 `WriteByte` 에서 상속 되는 메서드를 `System.IO.Stream` 클래스에서 지원 되지 않습니다는 `BFILE` 데이터 형식이 읽기 전용이 됩니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Data.OracleClient.OracleBFile.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="BFILE" /> 스트림을 읽을 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see langword="false" />이 닫혀 있거나 삭제되었으면 <see langword="BFILE" />이고, 그렇지 않으면 <see langword="true" />입니다. <see cref="F:System.Data.OracleClient.OracleBFile.Null" />에 대해 항상 <see langword="true" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Data.OracleClient.OracleBFile.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>앞으로 검색 및 뒤로 검색 작업이 수행될 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see langword="false" />이 닫혀 있거나 삭제되었으면 <see langword="BFILE" />이고, 그렇지 않으면 <see langword="true" />입니다. <see cref="F:System.Data.OracleClient.OracleBFile.Null" />에 대해 항상 <see langword="true" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Data.OracleClient.OracleBFile.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>개체가 쓰기를 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>Oracle <see langword="false" /> 데이터 형식이 읽기 전용이기 때문에 항상 <see langword="BFILE" />를 반환합니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="oracleBFile.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>원래 개체와 같은 실제 파일과 관련된 이 <see cref="T:System.Data.OracleClient.OracleBFile" /> 개체의 복사본을 만듭니다.</summary>
        <returns>원래 <see langword="OracleBFile" /> 개체와 같은 실제 파일과 관련된 새 <see cref="T:System.Data.OracleClient.OracleBFile" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 속성 <xref:System.Data.OracleClient.OracleBFile> 개체는 처음에 원래 개체의 동일한 값을 갖습니다. 그러나 후 합니다 <xref:System.Data.OracleClient.OracleBFile.Clone%2A> 완료 되 면 각 <xref:System.Data.OracleClient.OracleBFile> 개체는 다른 별개입니다. 예를 들어,의 값을 변경 합니다 <xref:System.Data.OracleClient.OracleBFile.Position%2A> 속성을 원래 <xref:System.Data.OracleClient.OracleBFile> 의 값을 변경 하지 않습니다 <xref:System.Data.OracleClient.OracleBFile.Position%2A> 복사본에서.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As OracleConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleConnection ^ Connection { System::Data::OracleClient::OracleConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.OracleClient.OracleConnection" Usage="System.Data.OracleClient.OracleBFile.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.OracleClient.OracleConnection" />의 이 인스턴스에서 사용되는 <see cref="T:System.Data.OracleClient.OracleBFile" />을 가져옵니다.</summary>
        <value>데이터 소스와의 연결입니다. 기본값은 null입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 <see cref="T:System.Data.OracleClient.OracleBFile" />에서 대상 <see cref="T:System.Data.OracleClient.OracleLob" />로 데이터를 복사합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destination As OracleLob) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(System::Data::OracleClient::OracleLob ^ destination);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Data.OracleClient.OracleLob -&gt; int64" Usage="oracleBFile.CopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
      </Parameters>
      <Docs>
        <param name="destination">대상 <see cref="T:System.Data.OracleClient.OracleLob" />입니다.</param>
        <summary>이 <see cref="T:System.Data.OracleClient.OracleBFile" />의 전체 내용을 대상 <see cref="T:System.Data.OracleClient.OracleLob" />의 시작으로 복사합니다.</summary>
        <returns>복사한 바이트 수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 원본의 기본 데이터 형식이 <xref:System.Data.OracleClient.OracleBFile> 및 대상을 <xref:System.Data.OracleClient.OracleLob> 호환 되어야 합니다. 대상 이진 데이터를 복사할 수 없습니다는 예를 들어 <xref:System.Data.OracleClient.OracleLob> 문자 데이터 형식을 포함 합니다.  
  
 대상에 쓰기 권한이 있어야 합니다 <xref:System.Data.OracleClient.OracleLob> 에 대 한는 <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> 작업이 올바르게 실행 되도록 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">대상 <see langword="OracleLob" />가 null 개체 참조인 경우</exception>
        <exception cref="T:System.InvalidOperationException">대상이 null <see langword="OracleLob" />인 경우  
  
또는 
이 <see langword="OracleBFile" />과 관련된 연결이 닫힌 경우</exception>
        <exception cref="T:System.ObjectDisposedException"><see langword="OracleBFile" /> 개체가 닫히거나 삭제된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination, int64 destinationOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destination As OracleLob, destinationOffset As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(System::Data::OracleClient::OracleLob ^ destination, long destinationOffset);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Data.OracleClient.OracleLob * int64 -&gt; int64" Usage="oracleBFile.CopyTo (destination, destinationOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="destination">대상 <see cref="T:System.Data.OracleClient.OracleLob" />입니다.</param>
        <param name="destinationOffset">복사할 대상 오프셋입니다.</param>
        <summary>이 <see cref="T:System.Data.OracleClient.OracleBFile" />의 전체 내용을 지정된 오프셋에서 대상 <see cref="T:System.Data.OracleClient.OracleLob" />로 복사합니다.</summary>
        <returns>복사한 바이트 수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 원본의 기본 데이터 형식이 <xref:System.Data.OracleClient.OracleBFile> 및 대상을 <xref:System.Data.OracleClient.OracleLob> 호환 되어야 합니다. 대상 이진 데이터를 복사할 수 없습니다는 예를 들어 <xref:System.Data.OracleClient.OracleLob> 문자 데이터 형식을 포함 합니다.  
  
 대상에 쓰기 권한이 있어야 합니다 <xref:System.Data.OracleClient.OracleLob> 에 대 한는 <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> 작업이 올바르게 실행 되도록 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">대상 <see langword="OracleLob" />가 null 개체 참조인 경우</exception>
        <exception cref="T:System.InvalidOperationException">대상이 null <see langword="OracleLob" />인 경우  
  
또는 
이 <see langword="OracleBFile" />과 관련된 연결이 닫힌 경우</exception>
        <exception cref="T:System.ObjectDisposedException"><see langword="OracleBFile" /> 개체가 닫히거나 삭제된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(int64 sourceOffset, class System.Data.OracleClient.OracleLob destination, int64 destinationOffset, int64 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (sourceOffset As Long, destination As OracleLob, destinationOffset As Long, amount As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(long sourceOffset, System::Data::OracleClient::OracleLob ^ destination, long destinationOffset, long amount);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : int64 * System.Data.OracleClient.OracleLob * int64 * int64 -&gt; int64" Usage="oracleBFile.CopyTo (sourceOffset, destination, destinationOffset, amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceOffset" Type="System.Int64" />
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
        <Parameter Name="amount" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="sourceOffset">복사할 소스 오프셋입니다.</param>
        <param name="destination">대상 <see cref="T:System.Data.OracleClient.OracleLob" />입니다.</param>
        <param name="destinationOffset">복사할 대상 오프셋입니다.</param>
        <param name="amount">복사할 데이터 양(바이트)입니다.</param>
        <summary>지정된 양의 데이터, 소스 오프셋 및 대상 오프셋으로 이 <see cref="T:System.Data.OracleClient.OracleBFile" />에서 대상 <see cref="T:System.Data.OracleClient.OracleLob" />로 복사합니다.</summary>
        <returns>복사한 바이트 수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 원본의 기본 데이터 형식이 <xref:System.Data.OracleClient.OracleBFile> 및 대상을 <xref:System.Data.OracleClient.OracleLob> 호환 되어야 합니다. 대상 이진 데이터를 복사할 수 없습니다는 예를 들어 <xref:System.Data.OracleClient.OracleLob> 문자 데이터 형식을 포함 합니다.  
  
 대상에 쓰기 권한이 있어야 합니다 <xref:System.Data.OracleClient.OracleLob> 에 대 한는 <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> 작업이 올바르게 실행 되도록 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">양 매개 변수의 값이 0보다 작거나 4GB보다 큰 경우</exception>
        <exception cref="T:System.ArgumentNullException">대상 <see langword="OracleLob" />가 null 개체 참조인 경우</exception>
        <exception cref="T:System.InvalidOperationException">대상이 null <see langword="OracleLob" />인 경우  
  
또는 
이 <see langword="OracleBFile" />과 관련된 연결이 닫힌 경우</exception>
        <exception cref="T:System.ObjectDisposedException"><see langword="OracleBFile" /> 개체가 닫히거나 삭제된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="DirectoryName">
      <MemberSignature Language="C#" Value="public string DirectoryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.DirectoryName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectoryName : string" Usage="System.Data.OracleClient.OracleBFile.DirectoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.OracleClient.OracleBFile" /> 개체와 관련된 DIRECTORY 개체의 이름을 가져옵니다.</summary>
        <value>DIRECTORY 개체의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 NULL이 아닌 각 <xref:System.Data.OracleClient.OracleBFile> 개체는 기본 실제 파일의 위치를 정의 하는 두 엔터티를 사용 하 여 연결 합니다.  
  
-   파일 시스템의 디렉터리에 대한 데이터베이스 별칭인 Oracle DIRECTORY 개체입니다.  
  
-   DIRECTORY 개체와 연관된 디렉터리에 위치하는 원본 파일 이름입니다.  
  
 <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> 속성 Oracle 데이터베이스에서 디렉터리 개체의 이름을 반환 합니다.  
  
 만들기 및 Oracle을 사용 하는 방법에 대 한 자세한 내용은 `BFILE`, Oracle 설명서에서 해당 항목을 참조 하세요.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">닫혀 있거나 삭제된 <see langword="DirectoryName" /> 개체에서 <see langword="OracleBFile" />을 호출하려고 한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="oracleBFile.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 개체에서 사용하는 모든 리소스를 해제합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="oracleBFile.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExists">
      <MemberSignature Language="C#" Value="public bool FileExists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FileExists" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.FileExists" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileExists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FileExists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.FileExists : bool" Usage="System.Data.OracleClient.OracleBFile.FileExists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>운영 체제에 <see langword="BFILE" /> 데이터를 포함하는 실제 파일이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see langword="true" /> 데이터를 포함하는 실제 파일이 있으면 <see langword="BFILE" />이고 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Data.OracleClient.OracleBFile" /> 개체가 닫히거나 삭제된 경우</exception>
        <exception cref="T:System.InvalidOperationException"><see langword="BFILE" />과 관련된 연결이 닫힌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string" Usage="System.Data.OracleClient.OracleBFile.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>경로가 없는 <see langword="BFILE" /> 이름을 가져옵니다.</summary>
        <value>BFILE 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 <xref:System.Data.OracleClient.OracleBFile.Null>, 빈 문자열이 반환 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Data.OracleClient.OracleBFile" /> 개체가 닫히거나 삭제된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="oracleBFile.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 지원되지 않습니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.IsNull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNull : bool" Usage="System.Data.OracleClient.OracleBFile.IsNull" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.SqlTypes.INullable.IsNull</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.OracleClient.OracleBFile" />가 <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> 스트림인지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="T:System.Data.OracleClient.OracleBFile" />이 <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> 스트림이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Data.OracleClient.OracleBFile.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.OracleClient.OracleBFile" /> 개체와 관련된 실제 파일의 크기를 바이트 단위로 반환하는 값을 가져옵니다.</summary>
        <value>실제 파일의 크기(바이트)를 나타내는 long 값입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">스트림이 닫히거나 삭제된 후에 메서드가 호출된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.Data.OracleClient.OracleBFile Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.OracleClient.OracleBFile Null" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleBFile.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As OracleBFile " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::OracleClient::OracleBFile ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.Data.OracleClient.OracleBFile" Usage="System.Data.OracleClient.OracleBFile.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>실제 파일에 바인딩되지 않는 null <see cref="T:System.Data.OracleClient.OracleBFile" /> 개체를 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleBFile.Null> 비교 작업을 수행 하려는 경우에 유용할 수 있습니다는 <xref:System.Data.OracleClient.OracleBFile> null 허용 여부를 확인 하려면.  
  
 읽기 작업을 수행 하려는 모든 시도 <xref:System.Data.OracleClient.OracleBFile.Null> 개체는 성공 하지만 데이터를 반환 하지 않습니다. 쓰기 작업을 수행 하려는 모든 시도 <xref:System.Data.OracleClient.OracleBFile.Null> 예외를 생성 하는 개체입니다. 선택 하는 `BFILE` null 값이 포함 된 열을 반환 합니다 <xref:System.Data.OracleClient.OracleBFile.Null>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Data.OracleClient.OracleBFile.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.OracleClient.OracleBFile" /> 스트림에서 현재 읽기 위치를 가져옵니다.</summary>
        <value><see cref="T:System.Data.OracleClient.OracleBFile" /> 스트림 내의 현재 위치입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스트림의 길이 초과 하는 위치를 검색 하는 것은 지원 되지 않습니다.  
  
 `Position` 속성 않습니다를 추적 하지는 소비 된 생략 되었거나 스트림을 또는 둘 다에서 바이트 수입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">음수이거나 스트림의 길이보다 큰 수로 위치를 설정하려고 한 경우</exception>
        <exception cref="T:System.ObjectDisposedException">스트림이 닫히거나 삭제된 후에 메서드가 호출된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="oracleBFile.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">바이트 배열입니다. 이 메서드는 지정된 바이트 배열의 값이 <paramref name="offset" />과 (<paramref name="offset" /> + <paramref name="count" />) 사이에서 현재 원본으로부터 읽어온 바이트로 교체된 상태로 반환됩니다.</param>
        <param name="offset">현재 스트림에서 읽은 데이터를 저장하기 시작하는 <paramref name="buffer" />의 바이트 오프셋(0부터 시작)입니다.</param>
        <param name="count">현재 스트림에서 읽을 최대 바이트 수입니다.</param>
        <summary>현재 <see cref="T:System.Data.OracleClient.OracleBFile" /> 스트림에서 바이트의 시퀀스를 읽은 다음 읽은 바이트 수만큼 스트림 내에서 위치를 앞으로 이동합니다.</summary>
        <returns>버퍼로 읽어온 총 바이트 수입니다. 이 바이트 수는 현재 바이트가 충분하지 않은 경우 요청된 바이트 수보다 작을 수 있으며 파일의 끝에 도달하면 0이 됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Data.OracleClient.OracleBFile.Read%2A> 메서드 읽을 최대 `count` 현재에서 바이트 스트림 및에서 저장할 `buffer` 부터 `offset`합니다. 스트림 내의 현재 위치는; 읽은 바이트 수 만큼 앞 그러나 예외가 발생 하는 경우 스트림 내의 현재 위치 변경 되지 않습니다. <xref:System.Data.OracleClient.OracleBFile.Read%2A> 읽은 바이트 수를 반환 합니다. 위치가 스트림의 맨 끝에 현재 있는 경우에 반환 값은 0으로 지정 합니다. <xref:System.Data.OracleClient.OracleBFile.Read%2A> 데이터가 없는 이벤트 최소한 1 바이트의 데이터를 읽을 수 있을 때까지 차단 됩니다. <xref:System.Data.OracleClient.OracleBFile.Read%2A> 파일의 끝에 도달 하는 경우에 0을 반환 합니다. <xref:System.Data.OracleClient.OracleBFile.Read%2A> 스트림의 맨 끝에 도달 하지 않은 경우에 요청 된 것 보다 적은 바이트를 반환할 수 있습니다.  
  
 닫힌에 액세스 하려고 <xref:System.Data.OracleClient.OracleBFile> 를 사용 하는 <xref:System.Data.OracleClient.OracleBFile.Read%2A> 또는 <xref:System.Data.OracleClient.OracleBFile.Seek%2A> 메서드 다시 열릴은 <xref:System.Data.OracleClient.OracleBFile> 스트림이 자동으로 합니다.  
  
 다음 C# 예제에서는 Oracle 테이블에이 스키마를 가정합니다.  
  
```  
(col1 number, col2 BFILE)  
```  
  
 예제를 사용 하 여는 <xref:System.Data.OracleClient.OracleBFile.Read%2A> 및 <xref:System.Data.OracleClient.OracleBFile.Seek%2A> 액세스 하는 메서드는 <xref:System.Data.OracleClient.OracleBFile> 개체입니다.  
  
```csharp  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
            OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="offset" /> 및 <paramref name="count" />의 합계가 버퍼 길이보다 큽니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> 또는 <paramref name="count" />가 음수입니다.</exception>
        <exception cref="T:System.InvalidOperationException"><see langword="BFILE" />과 관련된 연결이 닫힌 경우</exception>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <exception cref="T:System.ObjectDisposedException">스트림이 닫히거나 삭제된 후에 메서드가 호출된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="oracleBFile.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">원본에 상대적인 바이트 오프셋입니다. <paramref name="offset" />이 음수인 경우 새 위치는 <paramref name="origin" />에 의해 지정된 바이트 수만큼 <paramref name="offset" />으로 지정된 위치 앞에 옵니다. <paramref name="offset" />이 0인 경우 새 위치는 <paramref name="origin" />으로 지정된 위치입니다. <paramref name="offset" />이 양수인 경우 새 위치는 <paramref name="origin" />에 의해 지정된 바이트 수만큼 <paramref name="offset" />으로 지정된 위치 뒤에 옵니다.</param>
        <param name="origin">새 위치를 가져오는 데 사용되는 참조 위치를 나타내는 <see langword="System.IO.SeekOrigin" /> 형식의 값입니다.</param>
        <summary>현재 <see cref="T:System.Data.OracleClient.OracleBFile" /> 스트림에서 위치를 설정합니다.</summary>
        <returns>현재 스트림 내의 새 위치입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 `offset` 가 음수인 경우 새 위치에 지정 된 위치를 앞에 야 하는 데 필요한는 `origin` 으로 지정 된 바이트 수 만큼 `offset`입니다. 하는 경우 `offset` 가 0 이면 새 위치가 지정 된 위치 하는 데 필요한 `origin`합니다. 하는 경우 `offset` 이 양수인 경우 새 위치는 지정 된 위치 뒤에 필요한 `origin` 으로 지정 된 바이트 수 만큼 `offset`입니다.  
  
 스트림의 길이 초과 하는 위치를 검색 하는 것은 지원 되지 않습니다.  
  
 닫힌에 액세스 하려고 <xref:System.Data.OracleClient.OracleBFile> 를 사용 하는 <xref:System.Data.OracleClient.OracleBFile.Read%2A> 또는 <xref:System.Data.OracleClient.OracleBFile.Seek%2A> 메서드 다시 열릴은 <xref:System.Data.OracleClient.OracleBFile> 스트림이 자동으로 합니다.  
  
 다음 C# 예제에서는 Oracle 테이블에이 스키마를 가정합니다.  
  
```  
(col1 number, col2 BFILE)  
```  
  
 예제를 사용 하 여는 <xref:System.Data.OracleClient.OracleBFile.Read%2A> 및 <xref:System.Data.OracleClient.OracleBFile.Seek%2A> 액세스 하는 메서드는 <xref:System.Data.OracleClient.OracleBFile> 개체입니다.  
  
```csharp  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
            OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">음수이거나 스트림의 길이보다 큰 수로 위치를 설정하려고 한 경우</exception>
        <exception cref="T:System.ObjectDisposedException">스트림이 닫히거나 삭제된 후에 메서드가 호출된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SetFileName">
      <MemberSignature Language="C#" Value="public void SetFileName (string directory, string file);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFileName(string directory, string file) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFileName (directory As String, file As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFileName(System::String ^ directory, System::String ^ file);" />
      <MemberSignature Language="F#" Value="member this.SetFileName : string * string -&gt; unit" Usage="oracleBFile.SetFileName (directory, file)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory">실제 파일을 포함하는 디렉터리 개체의 별칭입니다.</param>
        <param name="file">운영 체제에 있는 파일 이름입니다.</param>
        <summary>운영 체제에서 다른 파일에 <see cref="T:System.Data.OracleClient.OracleBFile" /> 개체를 바인딩합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A> 성공 하려면 트랜잭션 내에서 작업 해야 합니다. 호출 <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A> 에 `BFILE` 연결을 <xref:System.Data.OracleClient.OracleBFile> 개체를 다른 파일을 사용 하 여 하지만 Oracle 테이블을 업데이트 하지 않습니다. 호출한 후 Oracle 테이블을 업데이트 하려면 <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>를 호출 해야 합니다는 `Update` 메서드는 <xref:System.Data.OracleClient.OracleDataAdapter> 고 그런 다음 트랜잭션을 커밋합니다.  
  
 검색 한 후는 <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> 또는 <xref:System.Data.OracleClient.OracleBFile.FileName%2A> 에 캐시 되며 속성을 합니다 <xref:System.Data.OracleClient.OracleBFile> 개체 및 복제 된 영향을 받지 않습니다 <xref:System.Data.OracleClient.OracleBFile> 개체에 대 한 호출 <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, 또는 변경 하 여는 `BFILE` 데이터베이스에. 즉, 이러한 나타나지 않을 수 있습니다의 실제 값은 `BFILE` 서버에는 개체입니다.  
  
 또한 두 속성 중 하나를 검색 (<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> 또는 <xref:System.Data.OracleClient.OracleBFile.FileName%2A>) 서버에서 검색 되어 캐시에서 두 속성 값을 <xref:System.Data.OracleClient.OracleBFile> 개체입니다.  
  
 다음 C# 예제에서는 Oracle 테이블에이 스키마를 가정합니다.  
  
```  
(col1 number, col2 BFILE)  
```  
  
 예제를 사용 하 여 보여 줍니다.는 <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, <xref:System.Data.OracleClient.OracleBFile.Read%2A> 및 <xref:System.Data.OracleClient.OracleBFile.Seek%2A> 액세스 하는 메서드는 <xref:System.Data.OracleClient.OracleBFile> 개체입니다.  
  
```csharp  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
        OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
            command.Transaction = connection.BeginTransaction();  
            BFile.SetFileName("TESTDIR", "File1.jpg");  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">작업이 트랜잭션 내부에 있지 않은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="oracleBFile.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">현재 지원되지 않습니다.</param>
        <summary>현재 지원되지 않습니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">호출된 메서드가 지원되지 않거나, 호출된 기능을 지원하지 않는 스트림에 읽기, 검색 또는 쓰기를 수행하려고 할 때 throw되는 예외입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Data.OracleClient.OracleBFile.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Array" /> 데이터를 포함하는 <see cref="T:System.Byte" /> 형식의 <see cref="T:System.Data.OracleClient.OracleBFile" />를 가져옵니다.</summary>
        <value><see cref="T:System.Array" /> 데이터를 포함하는 <see cref="T:System.Byte" /> 형식의 <see cref="T:System.Data.OracleClient.OracleBFile" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Data.OracleClient.OracleBFile.Value%2A> 속성 전체를 읽고 `BFILE` 번입니다.  
  
> [!NOTE]
>  사용 하는 이점은 `BFILE`가 많은 양의 데이터를 클라이언트에 청크로 검색할 수 있습니다. 그러나 사용 하는 경우 <xref:System.Data.OracleClient.OracleBFile.Value%2A>을를 응용 프로그램의 오버 헤드를 크게 높일 수 있는 하나의 연속적인 청크로 BFILE 열에 대 한 모든 데이터를 가져와야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="oracleBFile.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">현재 지원되지 않습니다.</param>
        <param name="offset">현재 지원되지 않습니다.</param>
        <param name="count">현재 지원되지 않습니다.</param>
        <summary>현재 지원되지 않습니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">호출된 메서드가 지원되지 않거나, 호출된 기능을 지원하지 않는 스트림에 읽기, 검색 또는 쓰기를 수행하려고 할 때 throw되는 예외입니다.</exception>
      </Docs>
    </Member>
  </Members>
</Type>