<Type Name="OracleCommand" FullName="System.Data.OracleClient.OracleCommand">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cfed5abf95356057a5be5b4929b5c39fc681cb81" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57930702" /></Metadata><TypeSignature Language="C#" Value="public sealed class OracleCommand : System.Data.Common.DbCommand, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleCommand extends System.Data.Common.DbCommand implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleCommand&#xA;Inherits DbCommand&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleCommand sealed : System::Data::Common::DbCommand, ICloneable" />
  <TypeSignature Language="F#" Value="type OracleCommand = class&#xA;    inherit DbCommand&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommand</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("RecordsAffected")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("OracleCommand has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleCommandDesigner, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleCommandDesigner, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>데이터베이스에서 실행할 SQL 문 또는 저장 프로시저를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 형식은 사용 되지 않으며.NET Framework의 이후 버전에서 제거 됩니다. 자세한 내용은 [Oracle 및 ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md)합니다.  
  
 <xref:System.Data.OracleClient.OracleCommand> 클래스는 데이터 원본에 대해 명령을 실행 하기 위한 메서드를 제공 합니다.  
  
|항목|설명|  
|----------|-----------------|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>|행을 반환 하는 명령을 실행 합니다.|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A>|<xref:System.Data.OracleClient.OracleCommand.Connection%2A>에 대해 SQL 문을 실행하고 영향을 받는 행의 수를 반환합니다.|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>|SQL 삽입, 삭제, 업데이트 및 SET 문과 같은 명령을 실행합니다.|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>|.NET Framework 데이터 형식으로 데이터베이스에서 단일 값 (예를 들어 집계 값)을 검색합니다.|  
|<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A>|Oracle 고유 데이터 형식으로 데이터베이스에서 단일 값 (예를 들어 집계 값)을 검색합니다.|  
  
 다시 설정할 수 있습니다 합니다 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 속성 및 재사용을 <xref:System.Data.OracleClient.OracleCommand> 개체입니다.  
  
 명령의 실행 결과 심각한 경우 <xref:System.Data.OracleClient.OracleException>, <xref:System.Data.OracleClient.OracleConnection> 닫힐 수 있습니다. 그러나 사용자는 연결을 다시 열고 계속할 수 있습니다.  
  
> [!NOTE]
>  달리 합니다 **명령** 다른.NET Framework 데이터 공급자 (SQL Server, OLE DB 및 ODBC)의 개체를 <xref:System.Data.OracleClient.OracleCommand> 개체를 지원 하지 않습니다는 <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> 속성. 명령 제한 시간을 설정 해도 효과가 없습니다 하 고 반환 되는 값은 항상 0입니다.  
  
   
  
## Examples  
 다음 예제에서는 합니다 <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> 메서드의 <xref:System.Data.OracleClient.OracleCommand>를 함께 <xref:System.Data.OracleClient.OracleDataReader> 및 <xref:System.Data.OracleClient.OracleConnection>, 테이블에서 행을 선택 합니다.  
  
 [!code-csharp[Classic WebData OracleCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">명령을 사용 하 여 작업</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Data.OracleClient.OracleCommand" />의 새 인스턴스를 초기화합니다.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">명령을 사용 하 여 작업</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.OracleClient.OracleCommand" />의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 생성자는 모든 필드를 기본값으로 초기화합니다. 다음 표에서 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Data.OracleClient.OracleCommand>합니다.  
  
|속성|초기 값|  
|----------------|-------------------|  
|<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>|빈 문자열 ("")|  
|<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OracleClient.OracleCommand.Connection%2A>|null|  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OracleClient.OracleCommand> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">명령을 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleCommand : string -&gt; System.Data.OracleClient.OracleCommand" Usage="new System.Data.OracleClient.OracleCommand commandText" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandText">쿼리 텍스트입니다.</param>
        <summary>쿼리 텍스트를 사용하여 <see cref="T:System.Data.OracleClient.OracleCommand" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">명령을 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.OracleClient.OracleConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, connection As OracleConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText, System::Data::OracleClient::OracleConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleCommand : string * System.Data.OracleClient.OracleConnection -&gt; System.Data.OracleClient.OracleCommand" Usage="new System.Data.OracleClient.OracleCommand (commandText, connection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
      </Parameters>
      <Docs>
        <param name="commandText">쿼리 텍스트입니다.</param>
        <param name="connection">데이터베이스에 대한 연결을 나타내는 <see cref="T:System.Data.OracleClient.OracleConnection" /> 개체입니다.</param>
        <summary>쿼리 텍스트와 <see cref="T:System.Data.OracleClient.OracleCommand" /> 개체를 사용하여 <see cref="T:System.Data.OracleClient.OracleConnection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 <xref:System.Data.OracleClient.OracleCommand>합니다.  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand2/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">명령을 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection, System.Data.OracleClient.OracleTransaction tx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.OracleClient.OracleConnection connection, class System.Data.OracleClient.OracleTransaction tx) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, connection As OracleConnection, tx As OracleTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleCommand(System::String ^ commandText, System::Data::OracleClient::OracleConnection ^ connection, System::Data::OracleClient::OracleTransaction ^ tx);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleCommand : string * System.Data.OracleClient.OracleConnection * System.Data.OracleClient.OracleTransaction -&gt; System.Data.OracleClient.OracleCommand" Usage="new System.Data.OracleClient.OracleCommand (commandText, connection, tx)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
        <Parameter Name="tx" Type="System.Data.OracleClient.OracleTransaction" />
      </Parameters>
      <Docs>
        <param name="commandText">쿼리 텍스트입니다.</param>
        <param name="connection">데이터베이스에 대한 연결을 나타내는 <see cref="T:System.Data.OracleClient.OracleConnection" /> 개체입니다.</param>
        <param name="tx"><see cref="T:System.Data.OracleClient.OracleCommand" />가 실행되는 <see cref="T:System.Data.OracleClient.OracleTransaction" />입니다.</param>
        <summary>쿼리 텍스트, <see cref="T:System.Data.OracleClient.OracleCommand" /> 개체 및 <see cref="T:System.Data.OracleClient.OracleConnection" />을 사용하여 <see cref="T:System.Data.OracleClient.OracleTransaction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서이 구현의 인스턴스에 대 한 초기 속성 값이 표시는 <xref:System.Data.OracleClient.OracleCommand>합니다.  
  
|속성|초기 값|  
|----------------|-------------------|  
|<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.OracleClient.OracleCommand.Connection%2A>|새 <xref:System.Data.OracleClient.OracleConnection> 는 값을 `connection` 매개 변수입니다.|  
  
 관련된 속성을 설정 하 여 이러한 매개 변수 값을 변경할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OracleClient.OracleCommand> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData OracleCommand.OracleCommand3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand3/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.OracleCommand3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.OracleCommand3/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">명령을 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Cancel();" />
      <MemberSignature Language="F#" Value="override this.Cancel : unit -&gt; unit" Usage="oracleCommand.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.OracleClient.OracleCommand" />의 실행을 취소합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 가 취소할 경우 아무 일도 발생 합니다. 그러나 진행 중인 명령이 있는 경우 취소 동작이 실패하더라도 예외가 생성되지 않습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OracleClient.OracleCommand>를 실행 한 다음 실행을 취소 합니다. 이를 위해 메서드는 SQL SELECT 문 문자열과 데이터베이스에 연결 하는 데 문자열로 전달 됩니다.  
  
 [!code-csharp[Classic WebData OracleCommand.Cancel#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Cancel/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Cancel#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Cancel/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">명령을 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="oracleCommand.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Data.OracleClient.OracleCommand" /> 개체의 복사본을 만듭니다.</summary>
        <returns>모든 속성 값이 원본과 같은 새 <see cref="T:System.Data.OracleClient.OracleCommand" /> 개체입니다.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">명령을 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public override string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandText : string with get, set" Usage="System.Data.OracleClient.OracleCommand.CommandText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Oracle.Design.OracleCommandTextEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Oracle.Design.OracleCommandTextEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Oracle.Design.OracleCommandTextEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스에서 실행할 SQL 문 또는 저장 프로시저를 가져오거나 설정합니다.</summary>
        <value>실행할 SQL 문 또는 저장 프로시저입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> 속성이 `StoredProcedure`, <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 저장된 프로시저의 이름으로 속성을 설정 해야 합니다. 사용자는 저장된 프로시저 이름에 특수 문자가 포함 된 경우 이스케이프 문자 구문을 사용 하는 데 필요한 수 있습니다. Execute 메서드 중 하나를 호출 하면이 저장된 프로시저를 실행 하는 명령입니다.  
  
 SQL 문에 매개 변수를 전달 하 여 호출에 대 한.NET Framework Data Provider for Oracle 물음표 (?) 자리 표시자를 지원 하지 않습니다는 <xref:System.Data.OracleClient.OracleCommand> 의 `CommandType.Text`합니다. 이 경우 명명 된 매개 변수를 사용 합니다. 예:  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 호출 하 여 때 명명 된 SQL 문에서 매개 변수를 사용 하 여는 <xref:System.Data.OracleClient.OracleCommand> 의 `CommandType.Text`, 콜론 (:)를 사용 하 여 매개 변수 이름 앞에 야 합니다. 그러나 저장된 프로시저 또는 코드에서 다른 곳에서 명명된 된 매개 변수를 참조할 때 (추가 하는 경우에 예를 들어 <xref:System.Data.OracleClient.OracleParameter> 개체는 <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> 속성), 콜론 (:)를 사용 하 여 명명 된 매개 변수를 붙이지 마십시오. .NET Framework Data Provider for Oracle은 콜론을 자동으로 제공합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OracleClient.OracleCommand> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData OracleCommand.CommandText#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandText/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.CommandText#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandText/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">명령을 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public override int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CommandTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTimeout : int with get, set" Usage="System.Data.OracleClient.OracleCommand.CommandTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>명령 실행을 종료하고 오류를 생성하기 전 대기 시간을 가져오거나 설정합니다.</summary>
        <value>명령이 실행될 때까지 대기하는 시간(초)입니다. 기본값은 30초입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ArgumentException> 경우에 생성 되는 할당 된 <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> 속성 값이 0 보다 작습니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">명령을 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public override System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberSignature Language="F#" Value="member this.CommandType : System.Data.CommandType with get, set" Usage="System.Data.OracleClient.OracleCommand.CommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> 속성을 해석하는 방법을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Data.CommandType" /> 값 중 하나입니다. 기본값은 <see langword="Text" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> 속성이로 설정 되어 `StoredProcedure`를 설정 해야는 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 전체 Oracle 호출 구문에 대 한 속성. Execute 메서드 중 하나를 호출 하면 다음 명령이이 저장된 프로시저 실행 (예를 들어 <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> 또는 <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>).  
  
 <xref:System.Data.OracleClient.OracleCommand.Connection%2A>하십시오 <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> 및 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 현재 연결 execute 또는 fetch 작업을 수행 하는 경우 속성을 설정할 수 없습니다.  
  
 SQL 문에 매개 변수를 전달 하 여 호출에 대 한.NET Framework Data Provider for Oracle 물음표 (?) 자리 표시자를 지원 하지 않습니다는 <xref:System.Data.OracleClient.OracleCommand> 의 `CommandType.Text`합니다. 이 경우 명명 된 매개 변수를 사용 합니다. 예:  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 호출 하 여 때 명명 된 SQL 문에서 매개 변수를 사용 하 여는 <xref:System.Data.OracleClient.OracleCommand> 의 `CommandType.Text`, 콜론 (:)를 사용 하 여 매개 변수 이름 앞에 야 합니다. 그러나 저장된 프로시저 또는 코드에서 다른 곳에서 명명된 된 매개 변수를 참조할 때 (추가 하는 경우에 예를 들어 <xref:System.Data.OracleClient.OracleParameter> 개체는 <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> 속성), 콜론 (:)를 사용 하 여 명명 된 매개 변수를 붙이지 마십시오. .NET Framework Data Provider for Oracle은 콜론을 자동으로 제공합니다.  
  
   
  
## Examples  
 다음 예제에서는 파생된 클래스의 인스턴스를 만들고 <xref:System.Data.OracleClient.OracleCommand> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData OracleCommand.CommandType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandType/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.CommandType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.CommandType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">값이 유효한 <see cref="T:System.Data.CommandType" />이 아닙니다.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">명령을 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As OracleConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleConnection ^ Connection { System::Data::OracleClient::OracleConnection ^ get(); void set(System::Data::OracleClient::OracleConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.OracleClient.OracleConnection with get, set" Usage="System.Data.OracleClient.OracleCommand.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.OracleClient.OracleCommand" />의 이 인스턴스에서 사용되는 <see cref="T:System.Data.OracleClient.OracleConnection" />을 가져오거나 설정합니다.</summary>
        <value>데이터 소스와의 연결입니다. 기본값은 null입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정할 수 없습니다는 <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>, 및 <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 현재 연결 execute 또는 fetch 작업을 수행 하는 경우 속성입니다.  
  
 트랜잭션이 처리되는 중에 <xref:System.Data.OracleClient.OracleCommand.Connection%2A>을 설정한 경우 <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> 속성이 null이 아니면 <xref:System.InvalidOperationException>이 생성됩니다. 설정 하는 경우 <xref:System.Data.OracleClient.OracleCommand.Connection%2A> 트랜잭션이 커밋 또는 롤백 후 및 <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> 속성이 null을 <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> 속성을 null 값으로 설정 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OracleClient.OracleCommand> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData OracleCommand.Connection#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Connection/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Connection#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Connection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">트랜잭션을 진행하는 동안 <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> 속성이 변경되었습니다.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">명령을 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameter CreateDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbParameter CreateDbParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.CreateDbParameter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbParameter () As DbParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbParameter ^ CreateDbParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateDbParameter : unit -&gt; System.Data.Common.DbParameter" Usage="oracleCommand.CreateDbParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As OracleParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleParameter ^ CreateParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateParameter : unit -&gt; System.Data.OracleClient.OracleParameter" Usage="oracleCommand.CreateParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.OracleClient.OracleParameter" /> 개체의 새 인스턴스를 만듭니다.</summary>
        <returns><see cref="T:System.Data.OracleClient.OracleParameter" /> 개체</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Data.OracleClient.OracleCommand.CreateParameter%2A> 메서드는 강력한 형식의 버전의 <xref:System.Data.IDbCommand.CreateParameter%2A>합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">명령을 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); void set(System::Data::Common::DbConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbConnection : System.Data.Common.DbConnection with get, set" Usage="System.Data.OracleClient.OracleCommand.DbConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbParameterCollection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbParameterCollection DbParameterCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbParameterCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbParameterCollection ^ DbParameterCollection { System::Data::Common::DbParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbParameterCollection : System.Data.Common.DbParameterCollection" Usage="System.Data.OracleClient.OracleCommand.DbParameterCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction DbTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction DbTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DbTransaction" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbTransaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbTransaction ^ DbTransaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbTransaction : System.Data.Common.DbTransaction with get, set" Usage="System.Data.OracleClient.OracleCommand.DbTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeVisible">
      <MemberSignature Language="C#" Value="public override bool DesignTimeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeVisible" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.DesignTimeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DesignTimeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DesignTimeVisible : bool with get, set" Usage="System.Data.OracleClient.OracleCommand.DesignTimeVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>명령 개체를 사용자 지정된 인터페이스 컨트롤에서 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>명령 개체를 컨트롤에 표시해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">명령을 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader ExecuteDbDataReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReader (behavior As CommandBehavior) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ ExecuteDbDataReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDbDataReader : System.Data.CommandBehavior -&gt; System.Data.Common.DbDataReader" Usage="oracleCommand.ExecuteDbDataReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public override int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ExecuteNonQuery();" />
      <MemberSignature Language="F#" Value="override this.ExecuteNonQuery : unit -&gt; int" Usage="oracleCommand.ExecuteNonQuery " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Data.OracleClient.OracleCommand.Connection" />에 대해 SQL 문을 실행하고 영향을 받는 행의 수를 반환합니다.</summary>
        <returns>UPDATE, INSERT 및 DELETE 문의 경우, 반환 값은 해당 명령의 영향을 받는 행의 수입니다. CREATE TABLE 및 DROP TABLE 문의 경우 반환 값은 0입니다. 다른 형식의 문의 경우에는 반환 값이 -1입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수 있습니다 <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> 카탈로그 작업 (예를 들어 데이터베이스의 구조를 쿼리 또는 테이블과 같은 데이터베이스 개체 만들기)를 수행 하거나 사용 하지 않고 데이터베이스에 데이터를 변경 하는 <xref:System.Data.DataSet>에서 UPDATE, INSERT, 실행 또는 삭제 문입니다.  
  
 하지만 <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> 행을 출력 매개 변수를 반환 하지 않거나 데이터로 채워진 매개 변수에 매핑된 값을 반환 합니다.  
  
 UPDATE, INSERT 및 DELETE 문의 경우, 반환 값은 해당 명령의 영향을 받는 행의 수입니다. CREATE TABLE 및 DROP TABLE 문의 경우 반환 값은 0입니다. 다른 형식의 문의 경우에는 반환 값이 -1입니다. 롤백이 발생 하는 경우 반환 값-1 이기도 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OracleClient.OracleCommand> 한 다음 사용 하 여 실행 <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>합니다. 예제는 SQL 문 (예: 업데이트, 삽입 또는 삭제) 하는 문자열 및 데이터베이스에 연결 하는 데 문자열로 전달 됩니다.  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteNonQuery#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteNonQuery/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteNonQuery#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteNonQuery/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">연결이 존재하지 않습니다.  
  
또는 
연결이 열려 있지 않습니다.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">명령을 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteOracleNonQuery">
      <MemberSignature Language="C#" Value="public int ExecuteOracleNonQuery (out System.Data.OracleClient.OracleString rowid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteOracleNonQuery([out] valuetype System.Data.OracleClient.OracleString&amp; rowid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteOracleNonQuery (ByRef rowid As OracleString) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteOracleNonQuery([Runtime::InteropServices::Out] System::Data::OracleClient::OracleString % rowid);" />
      <MemberSignature Language="F#" Value="member this.ExecuteOracleNonQuery :  -&gt; int" Usage="oracleCommand.ExecuteOracleNonQuery rowid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowid" Type="System.Data.OracleClient.OracleString" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rowid">서버에 있는 실제 행 ID의 base64 문자열 표현입니다.</param>
        <summary><see cref="P:System.Data.OracleClient.OracleCommand.Connection" />에 대해 SQL 문을 실행하고 영향을 받는 행의 수를 반환합니다.</summary>
        <returns>UPDATE, INSERT 및 DELETE 문의 경우, 반환 값은 해당 명령의 영향을 받는 행의 수입니다. CREATE TABLE 및 DROP TABLE 문의 경우 반환 값은 0입니다. 다른 형식의 문의 경우에는 반환 값이 -1입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수 있습니다 <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> 카탈로그 작업 (예를 들어 데이터베이스의 구조를 쿼리 또는 테이블과 같은 데이터베이스 개체 만들기)를 수행 하거나 사용 하지 않고 데이터베이스에 데이터를 변경 하는 <xref:System.Data.DataSet>에서 UPDATE, INSERT, 실행 또는 삭제 문입니다.  
  
 <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> 다른 <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> 반환에 `rowid` 정확히 하나의 행에 영향을 주는 INSERT, DELETE 또는 UPDATE 문을 실행 하는 경우 출력 매개 변수로 합니다. 이 통해 후속, 관련 쿼리의 성능을 향상 시킬 수 있도록 하는 Oracle 데이터베이스에서 행을 고유 하 게 식별 하는 수 있습니다.  
  
 하지만 <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A> 행을 출력 매개 변수를 반환 하지 않거나 데이터로 채워진 매개 변수에 매핑된 값을 반환 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">연결이 존재하지 않습니다.  
  
또는 
연결이 열려 있지 않습니다.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">명령을 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteOracleScalar">
      <MemberSignature Language="C#" Value="public object ExecuteOracleScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ExecuteOracleScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteOracleScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteOracleScalar();" />
      <MemberSignature Language="F#" Value="member this.ExecuteOracleScalar : unit -&gt; obj" Usage="oracleCommand.ExecuteOracleScalar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>쿼리를 실행하고 쿼리에서 반환된 결과 집합의 첫 번째 행의 첫 번째 열을 Oracle 고유 데이터 형식으로 반환합니다. 추가 열이나 행은 무시됩니다.</summary>
        <returns>Oracle 고유 데이터 형식인 결과 집합의 첫 행의 첫 열 또는 결과가 <see langword="REF CURSOR" />인 경우 null 참조입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> 데이터베이스에서 단일 값 (예를 들어 집계 값)을 검색 하는 방법입니다. 사용 하 여 보다 적은 코드가 필요 합니다 <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> 메서드를 반환 하는 데이터에서 단일 값을 생성 하는 데 필요한 작업을 수행을 <xref:System.Data.OracleClient.OracleDataReader>입니다.  
  
 일반적인 <xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A> 쿼리는 다음 C# 예제와 같이 형식을 지정할 수 있습니다.  
  
```  
command.CommandText = "SELECT COUNT(*) AS NumberOfRegions FROM Region";  
count = command.ExecuteOracleScalar();  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">명령을 사용 하 여 작업</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="P:System.Data.OracleClient.OracleCommand.CommandText" />를 <see cref="P:System.Data.OracleClient.OracleCommand.Connection" />에 보내고 <see cref="T:System.Data.OracleClient.OracleDataReader" />를 빌드합니다.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">명령을 사용 하 여 작업</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As OracleDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleDataReader ^ ExecuteReader();" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : unit -&gt; System.Data.OracleClient.OracleDataReader" Usage="oracleCommand.ExecuteReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Data.OracleClient.OracleCommand.CommandText" />를 <see cref="P:System.Data.OracleClient.OracleCommand.Connection" />에 보내고 <see cref="T:System.Data.OracleClient.OracleDataReader" />를 빌드합니다.</summary>
        <returns><see cref="T:System.Data.OracleClient.OracleDataReader" /> 개체</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> 속성이 `StoredProcedure`, <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 저장된 프로시저의 이름으로 속성을 설정 해야 합니다. 호출할 때 다음이 저장된 프로시저를 실행 명령을 <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>합니다.  
  
 둘 이상의 <xref:System.Data.OracleClient.OracleDataReader> 어느 시점에서 열 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OracleClient.OracleCommand>, 다음 데이터 원본에 연결 하는 데 문자열과 SQL SELECT 문 하는 문자열을 전달 하 여 실행 합니다.  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteReader1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteReader1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">명령을 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As OracleDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : System.Data.CommandBehavior -&gt; System.Data.OracleClient.OracleDataReader" Usage="oracleCommand.ExecuteReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior"><see cref="T:System.Data.CommandBehavior" /> 값 중 하나입니다.</param>
        <summary><see cref="P:System.Data.OracleClient.OracleCommand.CommandText" />를 <see cref="P:System.Data.OracleClient.OracleCommand.Connection" />에 보내고 <see cref="T:System.Data.CommandBehavior" /> 값 중 하나를 사용하여 <see cref="T:System.Data.OracleClient.OracleDataReader" />를 빌드합니다.</summary>
        <returns><see cref="T:System.Data.OracleClient.OracleDataReader" /> 개체</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 단일 행만 반환할 SQL 문의 예상 되는 경우 `SingleRow` 으로 <xref:System.Data.CommandBehavior> 값에는 응용 프로그램의 성능을 향상 시킬 수 있습니다.  
  
 경우는 <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> 속성이 `StoredProcedure`, <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 저장된 프로시저의 이름으로 속성을 설정 해야 합니다. 호출할 때 다음이 저장된 프로시저를 실행 명령을 <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>합니다.  
  
 <xref:System.Data.OracleClient.OracleDataReader> 큰 이진 값 효율적으로 읽을 수 있도록 하는 특수 모드를 지원 합니다. 자세한 내용은 참조는 `SequentialAccess` 에 대 한 설정 <xref:System.Data.CommandBehavior>합니다.  
  
 둘 이상의 <xref:System.Data.OracleClient.OracleDataReader> 어느 시점에서 열 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OracleClient.OracleCommand>, 한 다음 데이터베이스에 연결 하는 데 문자열과 SQL SELECT 문 하는 문자열을 전달 하 여 실행 합니다. <xref:System.Data.CommandBehavior> 그런 다음로 <xref:System.Data.CommandBehavior.CloseConnection>합니다.  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteReader2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader2/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteReader2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteReader2/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">명령을 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public override object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ExecuteScalar();" />
      <MemberSignature Language="F#" Value="override this.ExecuteScalar : unit -&gt; obj" Usage="oracleCommand.ExecuteScalar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>쿼리를 실행하고 쿼리에서 반환된 결과 집합의 첫 번째 행의 첫 번째 열을 .NET Framework 데이터 형식으로 반환합니다. 추가 열이나 행은 무시됩니다.</summary>
        <returns>.NET Framework 데이터 형식인 결과 집합의 첫 행의 첫 열 또는 결과 집합이 비어 있거나 결과가 <see langword="REF CURSOR" />인 경우 null 참조입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> 데이터베이스에서 단일 값 (예를 들어 집계 값)을 검색 하는 방법입니다. 사용 하 여 보다 적은 코드가 필요 합니다 <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> 메서드를 반환 하는 데이터에서 단일 값을 생성 하는 데 필요한 작업을 수행을 <xref:System.Data.OracleClient.OracleDataReader>입니다.  
  
 일반적인 <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> 쿼리는 다음 C# 예제와 같이 형식을 지정할 수 있습니다.  
  
```  
CommandText = "SELECT COUNT(*) FROM Region";  
Int32 count = (int32) ExecuteScalar();  
```  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OracleClient.OracleCommand> 를 사용 하 여 다음 실행 <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>합니다. 예제는 집계 결과 반환 하는 SQL 문 문자열과 데이터베이스에 연결 하는 데 문자열에 전달 됩니다.  
  
 [!code-csharp[Classic WebData OracleCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteScalar/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OracleCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.ExecuteScalar/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">명령을 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As OracleParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleParameterCollection ^ Parameters { System::Data::OracleClient::OracleParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Data.OracleClient.OracleParameterCollection" Usage="System.Data.OracleClient.OracleCommand.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.OracleClient.OracleParameterCollection" />를 가져옵니다.</summary>
        <value>SQL 문 또는 저장 프로시저의 매개 변수 기본값은 빈 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> 속성이 `StoredProcedure`, <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> 저장된 프로시저의 이름으로 속성을 설정 해야 합니다. 사용자는 저장된 프로시저 이름에 특수 문자가 포함 된 경우 이스케이프 문자 구문을 사용 하는 데 필요한 수 있습니다. Execute 메서드 중 하나를 호출 하면이 저장된 프로시저를 실행 하는 명령입니다.  
  
 SQL 문에 매개 변수를 전달 하 여 호출에 대 한.NET Framework Data Provider for Oracle 물음표 (?) 자리 표시자를 지원 하지 않습니다는 <xref:System.Data.OracleClient.OracleCommand> 의 `CommandType.Text`합니다. 이 경우 명명 된 매개 변수를 사용 합니다. 예:  
  
```  
SELECT * FROM Customers WHERE CustomerID = :pCustomerID  
```  
  
 호출 하 여 때 명명 된 SQL 문에서 매개 변수를 사용 하 여는 <xref:System.Data.OracleClient.OracleCommand> 의 `CommandType.Text`, 콜론 (:)를 사용 하 여 매개 변수 이름 앞에 야 합니다. 그러나 저장된 프로시저 또는 코드에서 다른 곳에서 명명된 된 매개 변수를 참조할 때 (추가 하는 경우에 예를 들어 <xref:System.Data.OracleClient.OracleParameter> 개체는 <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> 속성), 콜론 (:)를 사용 하 여 명명 된 매개 변수를 붙이지 마십시오. .NET Framework Data Provider for Oracle은 콜론을 자동으로 제공합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.OracleClient.OracleCommand> 해당 매개 변수를 표시 합니다. 이렇게 하려면 메서드에 전달 됩니다는 <xref:System.Data.OracleClient.OracleConnection>, 배열 및 SQL SELECT 문에 쿼리 문자열 <xref:System.Data.OracleClient.OracleParameter> 개체입니다.  
  
 [!code-csharp[Classic WebData OracleCommand.Parameters#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Parameters/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleCommand.Parameters#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleCommand.Parameters/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">명령을 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public override void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Prepare();" />
      <MemberSignature Language="F#" Value="override this.Prepare : unit -&gt; unit" Usage="oracleCommand.Prepare " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>데이터 소스에 명령의 준비 버전이나 컴파일 버전을 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 하기 전에 <xref:System.Data.OracleClient.OracleCommand.Prepare%2A>를 준비 하는 문을 각 매개 변수의 데이터 형식을 지정 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Data.OracleClient.OracleCommand.Connection" />이 설정되지 않은 경우  
  
또는 
<see cref="P:System.Data.OracleClient.OracleCommand.Connection" />이 <see cref="M:System.Data.OracleClient.OracleConnection.Open" />이 아닌 경우</exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">명령을 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName="ResetCommandTimeout">
      <MemberSignature Language="C#" Value="public void ResetCommandTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCommandTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.ResetCommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCommandTimeout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCommandTimeout();" />
      <MemberSignature Language="F#" Value="member this.ResetCommandTimeout : unit -&gt; unit" Usage="oracleCommand.ResetCommandTimeout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Data.OracleClient.OracleCommand.CommandTimeout" /> 속성을 기본값으로 다시 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본값은 <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> 30 초입니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">명령을 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.CreateParameter">
      <MemberSignature Language="C#" Value="System.Data.IDbDataParameter IDbCommand.CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbDataParameter System.Data.IDbCommand.CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.System#Data#IDbCommand#CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Function CreateParameter () As IDbDataParameter Implements IDbCommand.CreateParameter" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbDataParameter ^ System.Data.IDbCommand.CreateParameter() = System::Data::IDbCommand::CreateParameter;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.CreateParameter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbDataParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.IDbDataParameter" /> 개체의 새 인스턴스를 만듭니다.</summary>
        <returns>IDbDataParameter 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
자세한 내용은 <xref:System.Data.IDbCommand.CreateParameter>를 참조하십시오.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.ExecuteReader">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDbCommand.ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDbCommand.ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.System#Data#IDbCommand#ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Function ExecuteReader () As IDataReader Implements IDbCommand.ExecuteReader" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDbCommand.ExecuteReader() = System::Data::IDbCommand::ExecuteReader;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteReader</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Data.IDbCommand.Connection" />에 대해 <see cref="P:System.Data.IDbCommand.CommandText" />를 실행하고 <see cref="P:System.Data.IDataReader" />를 빌드합니다.</summary>
        <returns><see cref="P:System.Data.IDataReader" /> 개체</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.ExecuteReader">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDbCommand.ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDbCommand.ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Function ExecuteReader (behavior As CommandBehavior) As IDataReader Implements IDbCommand.ExecuteReader" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDbCommand.ExecuteReader(System::Data::CommandBehavior behavior) = System::Data::IDbCommand::ExecuteReader;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="behavior"><see cref="P:System.Data.CommandBehavior" /> 값 중 하나입니다.</param>
        <summary><see cref="P:System.Data.IDbCommand.CommandText" />에 대해 <see cref="P:System.Data.IDbCommand.Connection" />를 실행하고 <see cref="P:System.Data.IDataReader" /> 값 중 하나를 사용하여 <see cref="P:System.Data.CommandBehavior" />를 빌드합니다.</summary>
        <returns><see cref="P:System.Data.IDataReader" /> 개체</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
자세한 내용은 <xref:System.Data.IDbCommand.ExecuteReader%2A>를 참조하십시오.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As OracleTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleTransaction ^ Transaction { System::Data::OracleClient::OracleTransaction ^ get(); void set(System::Data::OracleClient::OracleTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transaction : System.Data.OracleClient.OracleTransaction with get, set" Usage="System.Data.OracleClient.OracleCommand.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.OracleClient.OracleTransaction" />가 실행되는 <see cref="T:System.Data.OracleClient.OracleCommand" />을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Data.OracleClient.OracleTransaction" />입니다. 기본값은 null입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정할 수 없습니다는 <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> 속성을 특정 값으로 이미 설정 되어 있으며 명령을 실행 하는 프로세스입니다. 트랜잭션 속성을 설정 하는 경우는 <xref:System.Data.OracleClient.OracleTransaction> 동일 하 게 연결 되지 않은 개체 <xref:System.Data.OracleClient.OracleConnection> 으로 <xref:System.Data.OracleClient.OracleCommand> 개체 다음에 문을 실행 하려고 하면 예외가 throw 됩니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">명령을 사용 하 여 작업</related>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedRowSource : System.Data.UpdateRowSource with get, set" Usage="System.Data.OracleClient.OracleCommand.UpdatedRowSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="Update" /> 메서드가 명령 결과를 <see cref="T:System.Data.DataRow" />에 적용하는 방식을 지정하는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Data.UpdateRowSource" /> 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본값 <xref:System.Data.UpdateRowSource> 값이 `Both` 명령이 자동으로 생성 하지 않는 한 (의 경우와 <xref:System.Data.OracleClient.OracleCommandBuilder>)를 경우 기본값은 `None`합니다.  
  
 사용에 대 한 자세한 내용은 합니다 <xref:System.Data.UpdateRowSource> 속성을 참조 하세요 [DataAdapter 매개 변수](~/docs/framework/data/adonet/dataadapter-parameters.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">입력한 값이 <see cref="T:System.Data.UpdateRowSource" /> 값 중 하나가 아닌 경우</exception>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">명령을 사용 하 여 작업</related>
      </Docs>
    </Member>
  </Members>
</Type>