<Type Name="DataServiceContext" FullName="System.Data.Services.Client.DataServiceContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6aad2b6a8e1b14ed1924b6f3825e4caf9643d32e" /><Meta Name="ms.sourcegitcommit" Value="e28b7b371ead27d99e20387b8243f09b0cdb9fb3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/12/2019" /><Meta Name="ms.locfileid" Value="59541777" /></Metadata><TypeSignature Language="C#" Value="public class DataServiceContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataServiceContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.Client.DataServiceContext" />
  <TypeSignature Language="VB.NET" Value="Public Class DataServiceContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataServiceContext" />
  <TypeSignature Language="F#" Value="type DataServiceContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services.Client</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Data.Services.Client.DataServiceContext" />는 데이터 서비스의 런타임 컨텍스트를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]는 상태를 저장하지 않지만 <xref:System.Data.Services.Client.DataServiceContext>는 그렇지 않습니다. 업데이트 관리와 같은 기능을 지원하기 위해 클라이언트에 대한 상태가 상호 작용 간에 유지됩니다. 이 클래스와 데이터 서비스에 대한 특정 HTTP 요청을 나타내는 <xref:System.Data.Services.Client.DataServiceQuery> 클래스는 클라이언트 라이브러리의 두 가지 주요 클래스입니다.  
  
   
  
## Examples  
 다음 예제에서는 서비스 참조 추가 도구에서 생성된 <xref:System.Data.Services.Client.DataServiceContext>를 사용하여 Northwind 데이터 서비스에 대해 모든 고객을 반환하는 쿼리를 암시적으로 실행하는 방법을 보여 줍니다. 요청한 `Customers` 엔터티 집합의 URI는 컨텍스트에 의해 자동으로 결정됩니다. 열거가 수행될 때 암시적으로 쿼리가 실행됩니다. 완료 하면 Northwind 데이터 서비스를 만들는 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] 합니다.  
  
 [!code-csharp[Astoria Northwind Client#GetAllCustomers](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#getallcustomers)]
 [!code-vb[Astoria Northwind Client#GetAllCustomers](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#getallcustomers)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/21075e50-8917-413e-a8ea-35a0f6e65aa5">.NET Framework 클라이언트 라이브러리 (WCF Data Services)를 사용 하 여 작업</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceContext (Uri serviceRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri serviceRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceRoot As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceContext(Uri ^ serviceRoot);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceContext : Uri -&gt; System.Data.Services.Client.DataServiceContext" Usage="new System.Data.Services.Client.DataServiceContext serviceRoot" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceRoot" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="serviceRoot">데이터 서비스의 루트를 식별하는 절대 URI입니다.</param>
        <summary>지정된 <see cref="T:System.Data.Services.Client.DataServiceContext" />를 사용하여 <paramref name="serviceRoot" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 클라이언트 라이브러리에서는 `baseURI`가 데이터 서비스의 루트를 가리키는 것으로 가정하지만 요청을 실행하여 이를 확인하지는 않습니다. `baseURI`가 서비스 루트를 식별하지 않으면 클라이언트 라이브러리의 동작이 정의되지 않습니다.  
  
 뒤에 슬래시가 있는 URI는 후행 문자가 없는 URI와 동일합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serviceRoot" />가 null인 경우.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="serviceRoot" />가 절대 URI가 아닌 경우 
또는 
<paramref name="serviceRoot" />는 쿼리 또는 쿼리 조각 없이 잘 구성된 URI인 경우.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddLink">
      <MemberSignature Language="C#" Value="public void AddLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AddLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLink (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.AddLink : obj * string * obj -&gt; unit" Usage="dataServiceContext.AddLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">새 링크의 원본 개체입니다.</param>
        <param name="sourceProperty">관련 개체를 반환하는 원본 개체의 탐색 속성 이름입니다.</param>
        <param name="target">새 링크를 통해 원본 개체와 관련된 개체입니다.</param>
        <summary><see cref="T:System.Data.Services.Client.DataServiceContext" />에서 추적 중인 개체 집합에 지정된 링크를 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 관련 원본 및 대상 개체 간에 새 링크가 있고 이 링크가 지정된 원본 속성으로 표현됨을 <xref:System.Data.Services.Client.DataServiceContext>에 알립니다. <xref:System.Data.Services.Client.DataServiceContext>는 다음에 <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>를 호출할 때 데이터 서비스로 전송할 새로 만든 링크 집합에 이 링크를 추가합니다.  
  
 링크는 단방향 관계입니다. 연결에서 양방향 이기 때문에 한 일 연결을 호출 해야 하거나 <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A> 역방향 링크를 만들려면 다시 및 다 대 일 연결 호출 해야 <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> 연결의 한쪽 끝에 참조 링크를 만듭니다.  
  
 대상 개체는 `sourceProperty` 매개 변수 또는 해당 형식의 하위 형식으로 식별되는 형식이어야 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A> 및 <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> 메서드를 사용하여 관계를 정의하는 링크를 만드는 방법을 보여 줍니다. 이 예제에서는 `Order_Details` 개체에 대한 탐색 속성도 명시적으로 설정됩니다. 이 예제에서는 <xref:System.Data.Services.Client.DataServiceContext> 완료 하면 만들어지는 Northwind 데이터 서비스에 따라 서비스 참조 추가 도구에서 생성 된 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#AddOrderDetailToOrder](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#addorderdetailtoorder)]
 [!code-vb[Astoria Northwind Client#AddOrderDetailToOrder](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#addorderdetailtoorder)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />, <paramref name="sourceProperty" /> 또는 <paramref name="target" />이 null인 경우</exception>
        <exception cref="T:System.InvalidOperationException">링크가 이미 있는 경우  
  
또는 
<paramref name="source" /> 또는 <paramref name="target" /> 개체가 <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> 또는 <see cref="F:System.Data.Services.Client.EntityStates.Deleted" /> 상태인 경우  
  
또는 
<paramref name="sourceProperty" />가 컬렉션이 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public void AddObject (string entitySetName, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddObject(string entitySetName, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AddObject(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddObject (entitySetName As String, entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddObject(System::String ^ entitySetName, System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.AddObject : string * obj -&gt; unit" Usage="dataServiceContext.AddObject (entitySetName, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entitySetName">리소스를 추가할 엔터티 집합의 이름입니다.</param>
        <param name="entity"><see cref="T:System.Data.Services.Client.DataServiceContext" />에서 추적할 개체입니다.</param>
        <summary><see cref="T:System.Data.Services.Client.DataServiceContext" />에서 추적 중인 개체 집합에 지정된 개체를 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 개체는 <xref:System.Data.Services.Client.DataServiceContext> 상태로 <xref:System.Data.Services.Client.EntityStates.Added>의 추적 집합에 추가됩니다. <xref:System.Data.Services.Client.DataServiceContext>는 다음에 <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>를 호출할 때 HTTP POST로 개체를 삽입합니다. 이 메서드는 지정된 엔터티와 관련된 개체를 <xref:System.Data.Services.Client.DataServiceContext>에 추가하지 않습니다. <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>에 대한 별도의 호출을 통해 각 개체를 추가해야 합니다.  
  
 메서드는 지정 된 엔터티 집합에 연결 된 데이터 서비스 인지 확인 하지 않습니다 합니다 <xref:System.Data.Services.Client.DataServiceContext> 또는 추가 된 개체에 필요한 속성을 추가 하는 데 필요한 지정 된 `entity set`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="entitySetName" /> 또는 <paramref name="entity" />가 null인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="entitySetName" />이 비어 있는 경우  
  
또는 
<paramref name="entity" />에 키 속성이 정의되어 있지 않은 경우</exception>
        <exception cref="T:System.InvalidOperationException">엔터티가 컨텍스트에서 이미 추적 중인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRelatedObject">
      <MemberSignature Language="C#" Value="public void AddRelatedObject (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRelatedObject(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AddRelatedObject(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRelatedObject (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRelatedObject(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.AddRelatedObject : obj * string * obj -&gt; unit" Usage="dataServiceContext.AddRelatedObject (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">컨텍스트에서 추적 중인 부모 개체입니다.</param>
        <param name="sourceProperty">두 엔터티 간의 연결에 따라 관련 개체를 반환하는 탐색 속성의 이름입니다.</param>
        <param name="target">추가되는 관련 개체입니다.</param>
        <summary>컨텍스트에 관련 개체를 추가하고 단일 요청에서 두 개체 간의 관계를 정의하는 링크를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceContext.AddRelatedObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>의 세 메서드를 호출하는 대신 <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> 메서드를 호출하여 관련 개체를 추가할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyingChanges">
      <MemberSignature Language="C#" Value="public bool ApplyingChanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyingChanges" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.ApplyingChanges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplyingChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyingChanges { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplyingChanges : bool" Usage="System.Data.Services.Client.DataServiceContext.ApplyingChanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.Services.Client.DataServiceContext" />가 현재 추적된 개체에 변경 내용을 적용하고 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>현재 변경 내용이 적용되고 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachLink">
      <MemberSignature Language="C#" Value="public void AttachLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AttachLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachLink (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.AttachLink : obj * string * obj -&gt; unit" Usage="dataServiceContext.AttachLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">새 링크의 원본 개체입니다.</param>
        <param name="sourceProperty">원본 및 대상 개체 간의 링크를 나타내는 원본 개체의 속성 이름입니다.</param>
        <param name="target">이 호출에서 지정한 원본 개체에 바인딩된 링크의 대상 개체입니다. 대상 개체는 원본 속성 또는 하위 형식으로 식별되는 형식이어야 합니다.</param>
        <summary>엔터티 개체 간의 관계를 정의하는 지정된 링크의 추적을 시작하도록 <see cref="T:System.Data.Services.Client.DataServiceContext" />에 알립니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />, <paramref name="sourceProperty" /> 또는 <paramref name="target" />이 null인 경우</exception>
        <exception cref="T:System.InvalidOperationException">두 엔터티 간의 링크가 이미 있는 경우  
  
또는 
<paramref name="source" /> 또는 <paramref name="target" />이 <see cref="F:System.Data.Services.Client.EntityStates.Added" /> 또는 <see cref="F:System.Data.Services.Client.EntityStates.Deleted" /> 상태인 경우</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AttachTo">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 리소스의 추적을 시작하도록 <see cref="T:System.Data.Services.Client.DataServiceContext" />에 알리고 지정된 리소스 집합 내의 리소스 위치를 제공합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AttachTo">
      <MemberSignature Language="C#" Value="public void AttachTo (string entitySetName, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachTo(string entitySetName, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AttachTo(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachTo (entitySetName As String, entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachTo(System::String ^ entitySetName, System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.AttachTo : string * obj -&gt; unit" Usage="dataServiceContext.AttachTo (entitySetName, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entitySetName">리소스가 들어 있는 집합의 이름입니다.</param>
        <param name="entity"><see cref="T:System.Data.Services.Client.DataServiceContext" />에서 추적할 리소스입니다. 리소스는 변경되지 않은 상태로 연결됩니다.</param>
        <summary>지정된 리소스에 대한 추적을 시작하도록 <see cref="T:System.Data.Services.Client.DataServiceContext" />에 알리고 지정된 리소스 집합 내에서 리소스의 위치를 제공합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 엔터티가 개체 그래프의 일부인 경우 이 작업은 그래프를 트래버스하여 관련 개체를 추가하지 못합니다. 이 작업은 부분 작업입니다.  
  
 이 메서드는 지정된 엔터티 집합이 <xref:System.Data.Services.Client.DataServiceContext>와 연관된 데이터 서비스에서 발생하는지 여부를 확인하지 않습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="entity" /> 또는 <paramref name="entitySetName" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="entitySetName" />이 빈 문자열인 경우  
  
또는 
<paramref name="entity" />에 키 속성이 정의되어 있지 않은 경우.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="entity" />가 이미 컨텍스트에 의해 추적되고 있는 경우.</exception>
      </Docs>
    </Member>
    <Member MemberName="AttachTo">
      <MemberSignature Language="C#" Value="public void AttachTo (string entitySetName, object entity, string etag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachTo(string entitySetName, object entity, string etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AttachTo(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachTo (entitySetName As String, entity As Object, etag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachTo(System::String ^ entitySetName, System::Object ^ entity, System::String ^ etag);" />
      <MemberSignature Language="F#" Value="member this.AttachTo : string * obj * string -&gt; unit" Usage="dataServiceContext.AttachTo (entitySetName, entity, etag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="etag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entitySetName">엔터티가 연결된 엔터티 집합의 이름이 들어 있는 문자열 값입니다.</param>
        <param name="entity">추가할 엔터티입니다.</param>
        <param name="etag">데이터 서비스에서 엔터티를 마지막으로 검색한 때의 엔터티 상태를 나타내는 etag 값입니다. 이 값은 불투명 문자열로 처리되므로 클라이언트 라이브러리에서 이 값에 대한 유효성 검사를 수행하지 않습니다.</param>
        <summary>지정된 리소스의 추적을 시작하도록 <see cref="T:System.Data.Services.Client.DataServiceContext" />에 알리고 지정된 리소스 집합 내의 리소스 위치를 제공합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 호출하면 지정된 엔터티의 추적을 시작하도록 <xref:System.Data.Services.Client.DataServiceContext>에 알리고 엔터티가 속한 엔터티 집합을 식별합니다.  
  
 엔터티가 개체 그래프의 일부인 경우 이 작업은 그래프를 트래버스하여 관련 개체를 추가하지 못합니다. 개체는 변경되지 않은 상태로 <xref:System.Data.Services.Client.DataServiceContext>에 추가됩니다. 이 메서드는 지정된 엔터티 집합이 <xref:System.Data.Services.Client.DataServiceContext>와 연관된 데이터 서비스에서 발생하는지 여부를 확인하지 않습니다.  
  
 etag와 함께 오버로드를 사용하면 지정한 etag가 새로 연결된 엔터티와 연결됩니다. 그런 다음 etag가 HTTP 의미 체계에 따라 해당 엔터티에 대한 모든 후속 업데이트 또는 쿼리 작업과 함께 데이터 서비스에 전송됩니다. etag 값을 수동으로 생성하지 않는 좋지만 이 오버로드를 제공하면 serialize 및 저장되었을 수 있는 엔터티를 관련 동시성 메타데이터와 함께 다시 연결할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="entitySetName" />가 <see langword="null" />일 경우  
  
또는 
<paramref name="entity" />가 <see langword="null" />일 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="entitySetName" />이 빈 문자열인 경우  
  
또는 
공급된 개체에 키 속성이 없는 경우.</exception>
        <exception cref="T:System.InvalidOperationException">공급된 개체가 이미 컨텍스트에 의해 추적되고 있는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri" Usage="System.Data.Services.Client.DataServiceContext.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>대상 데이터 서비스의 루트를 식별하는 절대 URI를 가져옵니다.</summary>
        <value>T 데이터 서비스의 루트를 식별하는 절대 URI입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 뒤에 슬래시가 있는 URI는 후행 문자가 없는 URI와 동일합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginExecute&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>데이터 서비스에 특정 URI를 실행하라는 요청을 비동기적으로 보냅니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginExecute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute&lt;T&gt; (System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt; continuation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute&lt;T&gt;(class System.Data.Services.Client.DataServiceQueryContinuation`1&lt;!!T&gt; continuation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Data.Services.Client.DataServiceQueryContinuation{``0},System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute(Of T) (continuation As DataServiceQueryContinuation(Of T), callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; IAsyncResult ^ BeginExecute(System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ continuation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginExecute : System.Data.Services.Client.DataServiceQueryContinuation&lt;'T&gt; * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginExecute (continuation, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt;" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T">쿼리에서 반환되는 형식입니다.</typeparam>
        <param name="continuation">데이터 서비스에서 반환할 다음 데이터 페이지를 나타내는 <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> 개체입니다.</param>
        <param name="callback">결과를 클라이언트 소비에 사용할 수 있는 경우에 호출할 대리자입니다.</param>
        <param name="state">콜백에 전달된 사용자 정의 상태 개체입니다.</param>
        <summary>데이터 서비스에 페이징된 쿼리 결과의 다음 데이터 페이지를 검색하라는 요청을 비동기적으로 보냅니다.</summary>
        <returns>작업 상태를 나타내는 <see cref="T:System.IAsyncResult" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 제공된 <xref:System.Data.Services.Client.DataServiceQueryContinuation%601> 개체에는 실행할 경우 쿼리 결과의 다음 데이터 페이지를 반환하는 URI가 포함되어 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExecute&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute&lt;TElement&gt; (Uri requestUri, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute&lt;TElement&gt;(class System.Uri requestUri, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Uri,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute(Of TElement) (requestUri As Uri, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; IAsyncResult ^ BeginExecute(Uri ^ requestUri, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginExecute : Uri * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginExecute (requestUri, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TElement">쿼리에서 반환되는 형식입니다.</typeparam>
        <param name="requestUri">쿼리 요청을 보낼 URI입니다. URI는 유효한 모든 데이터 서비스 URI가 될 수 있으며, <c>$</c> 쿼리 매개 변수를 포함할 수 있습니다.</param>
        <param name="callback">결과를 클라이언트 소비에 사용할 수 있는 경우에 호출할 대리자입니다.</param>
        <param name="state">콜백에 전달된 사용자 정의 상태 개체입니다.</param>
        <summary>서비스의 결과를 기다리는 동안 이 호출로 인해 처리가 차단되지 않도록 비동기적으로 요청을 보냅니다.</summary>
        <returns>비동기 작업의 상태를 추적하는 데 사용되는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환된 <xref:System.IAsyncResult> 개체는 비동기 작업이 완료된 시점을 확인하는 데 사용됩니다. 자세한 내용은 [비동기 작업](~/docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md)합니다.  
  
 <xref:System.Data.Services.Client.DataServiceContext.BeginExecute%2A> 메서드는 <xref:System.Data.Services.Client.DataServiceContext.Execute%2A>와 동일한 의미 체계를 사용하지만 서비스의 결과를 기다리는 동안 이 호출로 인해 처리가 차단되지 않도록 비동기적으로 요청을 보냅니다. 제공된 콜백은 표준 시작-끝 비동기 패턴에 따라 쿼리 결과가 검색되면 호출됩니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.Services.Client.DataServiceQuery%601.BeginExecute%2A> 메서드 호출을 통해 쿼리를 시작하여 비동기 쿼리를 실행하는 방법을 보여 줍니다. 인라인 대리자는 <xref:System.Data.Services.Client.DataServiceQuery%601.EndExecute%2A> 메서드를 호출하여 쿼리 결과를 표시합니다. 이 예제에서는 <xref:System.Data.Services.Client.DataServiceContext> 완료 하면 만들어지는 Northwind 데이터 서비스에 따라 서비스 참조 추가 도구에서 생성 된 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#ExecuteQueryAsync](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#executequeryasync)]
 [!code-vb[Astoria Northwind Client#ExecuteQueryAsync](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#executequeryasync)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/902a2dc1-d0e9-4b00-90a8-becc4cb1f6a7">방법: 비동기 데이터 서비스 쿼리 (WCF Data Services)를 실행 합니다.</related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteBatch">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteBatch (AsyncCallback callback, object state, params System.Data.Services.Client.DataServiceRequest[] queries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteBatch(class System.AsyncCallback callback, object state, class System.Data.Services.Client.DataServiceRequest[] queries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginExecuteBatch(System.AsyncCallback,System.Object,System.Data.Services.Client.DataServiceRequest[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteBatch (callback As AsyncCallback, state As Object, ParamArray queries As DataServiceRequest()) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteBatch(AsyncCallback ^ callback, System::Object ^ state, ... cli::array &lt;System::Data::Services::Client::DataServiceRequest ^&gt; ^ queries);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteBatch : AsyncCallback * obj * System.Data.Services.Client.DataServiceRequest[] -&gt; IAsyncResult" Usage="dataServiceContext.BeginExecuteBatch (callback, state, queries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="queries" Type="System.Data.Services.Client.DataServiceRequest[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="callback">일괄 요청에 대한 응답을 받을 때 호출되는 대리자입니다.</param>
        <param name="state">컨텍스트 데이터를 콜백 메서드에 전달하는 데 사용된 사용자 정의 상태 개체입니다.</param>
        <param name="queries">일괄 요청에 포함할 쿼리 요청의 배열입니다.</param>
        <summary>쿼리 그룹을 일괄적으로 데이터 서비스에 비동기적으로 제출합니다.</summary>
        <returns>비동기 작업의 상태를 추적하는 데 사용되는 <see cref="T:System.IAsyncResult" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환된 <xref:System.IAsyncResult> 개체는 비동기 작업이 완료된 시점을 확인하는 데 사용됩니다. 자세한 내용은 [비동기 작업](~/docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md)합니다.  
  
 쿼리는 <xref:System.Data.Services.Client.DataServiceRequest%601> 인스턴스로 지정됩니다. 전체 일괄 처리 요청의 응답을 나타내는 <xref:System.Data.Services.Client.DataServiceResponse>를 반환합니다. 개별 쿼리 응답은 <xref:System.Data.Services.Client.DataServiceResponse> 인스턴스를 열거하여 액세스할 수 있는 <xref:System.Data.Services.Client.DataServiceResponse> 개체로 표현됩니다.  
  
 이 메서드가 반환되면 일괄 처리 요청에 대한 모든 HTTP 응답을 네트워크 스트림에서 읽었지만 응답이 처리되지 않은 것입니다. 응답의 지정된 엔터티가 열거될 때까지 이 엔터티에 대해 ID 확인 또는 개체 구체화가 수행되지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetReadStream">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetReadStream (object entity, System.Data.Services.Client.DataServiceRequestArgs args, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetReadStream(object entity, class System.Data.Services.Client.DataServiceRequestArgs args, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginGetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetReadStream (entity As Object, args As DataServiceRequestArgs, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetReadStream(System::Object ^ entity, System::Data::Services::Client::DataServiceRequestArgs ^ args, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginGetReadStream : obj * System.Data.Services.Client.DataServiceRequestArgs * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginGetReadStream (entity, args, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="args" Type="System.Data.Services.Client.DataServiceRequestArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">검색할 이진 속성이 있는 엔터티입니다.</param>
        <param name="args">HTTP 요청 메시지에 대한 설정이 포함된 <see cref="T:System.Data.Services.Client.DataServiceRequestArgs" /> 클래스의 인스턴스입니다.</param>
        <param name="callback">결과를 클라이언트 소비에 사용할 수 있는 경우에 호출할 대리자입니다.</param>
        <param name="state">콜백에 전달된 사용자 정의 상태 개체입니다.</param>
        <summary>지정된 엔터티의 이진 속성 데이터를 지정된 메시지 헤더와 함께 데이터 스트림으로 비동기적으로 가져옵니다.</summary>
        <returns>비동기 작업의 상태를 추적하는 데 사용되는 <see cref="T:System.IAsyncResult" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A> 메서드는 비동기적으로 요청 된 이진 속성을 포함 하는 데이터 스트림을 요청 `entity`합니다.  
  
 AtomPub 프로토콜에는 `entity` 가 미디어 링크 항목이 고 이진 속성은 연결된 된 미디어 리소스입니다.  
  
 `args`에 설정된 헤더에 대해서는 유효성 검사가 수행되지 않습니다. 따라서 요청의 의미를 변경하는 방식으로 HTTP 헤더를 변경하지 마십시오.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">메서드에 제공된 하나 이상의 매개 변수가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="entity" />가 이 <see cref="T:System.Data.Services.Client.DataServiceContext" />에 의해 추적되지 않는 경우  
  
또는 
<paramref name="entity" />가 <see cref="F:System.Data.Services.Client.EntityStates.Added" /> 상태에 있는 경우  
  
또는 
<paramref name="entity" />가 미디어 링크 항목이 아니고 이진 속성을 포함하지 않는 경우</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoadProperty">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>데이터 서비스에서 지정된 속성 값을 로드하는 작업을 시작합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoadProperty">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadProperty (object entity, string propertyName, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadProperty(object entity, string propertyName, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadProperty (entity As Object, propertyName As String, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadProperty(System::Object ^ entity, System::String ^ propertyName, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoadProperty : obj * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginLoadProperty (entity, propertyName, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">로드할 속성을 포함하는 엔터티입니다.</param>
        <param name="propertyName">로드할 지정된 엔터티의 속성 이름입니다.</param>
        <param name="callback">요청에 대한 응답을 받은 경우에 호출되는 대리자입니다.</param>
        <param name="state">콜백 메서드에 컨텍스트 데이터를 전달하는 데 사용되는 사용자 정의 상태 개체입니다.</param>
        <summary>데이터 서비스에서 지정된 속성의 값을 비동기적으로 로드합니다.</summary>
        <returns>비동기 작업의 상태를 나타내는 <see langword="IAsyncResult" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 호출하면 속성 값을 검색하는 네트워크 작업이 호출됩니다. 지정된 속성은 연결 또는 링크를 나타내는 속성을 포함하여 엔터티의 속성 중 하나일 수 있습니다. 속성이 연결, 링크 또는 지연된 속성을 나타내는 경우 이 메서드를 호출하면 클라이언트에 관련 리소스를 지연 로드하는 방법이 제공됩니다. 엔터티가 수정된 상태인 경우 속성 값은 관련 엔터티를 로드하고 해당 엔터티와 모든 링크를 변경되지 않은 상태로 표시합니다.  
  
 속성이 이미 로드된 경우 이 메서드를 호출하면 속성 값을 새로 고칠 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadProperty">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadProperty (object entity, string propertyName, System.Data.Services.Client.DataServiceQueryContinuation continuation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadProperty(object entity, string propertyName, class System.Data.Services.Client.DataServiceQueryContinuation continuation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadProperty (entity As Object, propertyName As String, continuation As DataServiceQueryContinuation, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadProperty(System::Object ^ entity, System::String ^ propertyName, System::Data::Services::Client::DataServiceQueryContinuation ^ continuation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoadProperty : obj * string * System.Data.Services.Client.DataServiceQueryContinuation * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginLoadProperty (entity, propertyName, continuation, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">로드할 속성을 포함하는 엔터티입니다.</param>
        <param name="propertyName">로드할 지정된 엔터티의 속성 이름입니다.</param>
        <param name="continuation">데이터 서비스에서 반환할 다음 관련 엔터티 데이터 페이지를 나타내는 <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> 개체입니다.</param>
        <param name="callback">결과를 클라이언트 소비에 사용할 수 있는 경우에 호출할 대리자입니다.</param>
        <param name="state">콜백에 전달된 사용자 정의 상태 개체입니다.</param>
        <summary>제공된 쿼리 연속 개체를 사용하여 데이터 서비스에서 다음 관련 엔터티 페이지를 비동기적으로 로드합니다.</summary>
        <returns>작업 상태를 나타내는 <see cref="T:System.IAsyncResult" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 제공된 <xref:System.Data.Services.Client.DataServiceQueryContinuation%601> 개체에는 실행할 경우 쿼리 결과의 다음 데이터 페이지를 반환하는 URI가 포함되어 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadProperty">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadProperty (object entity, string propertyName, Uri nextLinkUri, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadProperty(object entity, string propertyName, class System.Uri nextLinkUri, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.Uri,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadProperty (entity As Object, propertyName As String, nextLinkUri As Uri, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadProperty(System::Object ^ entity, System::String ^ propertyName, Uri ^ nextLinkUri, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoadProperty : obj * string * Uri * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginLoadProperty (entity, propertyName, nextLinkUri, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="nextLinkUri" Type="System.Uri" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">로드할 속성을 포함하는 엔터티입니다.</param>
        <param name="propertyName">로드할 지정된 엔터티의 속성 이름입니다.</param>
        <param name="nextLinkUri">다음 결과 페이지를 로드하는 데 사용되는 URI입니다.</param>
        <param name="callback">결과를 클라이언트 소비에 사용할 수 있는 경우에 호출할 대리자입니다.</param>
        <param name="state">콜백에 전달된 사용자 정의 상태 개체입니다.</param>
        <summary>제공된 다음 링크 URI를 사용하여 데이터 서비스에서 관련 엔터티 페이지를 비동기적으로 로드합니다.</summary>
        <returns>비동기 작업의 상태를 추적하는 데 사용되는 <see cref="T:System.IAsyncResult" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `entity`가 <xref:System.Data.Services.Client.EntityStates.Unchanged> 또는 <xref:System.Data.Services.Client.EntityStates.Modified> 상태이면 관련 엔터티가 <xref:System.Data.Services.Client.EntityStates.Unchanged> 상태로 로드되고 엔터티 간의 관계도 <xref:System.Data.Services.Client.EntityStates.Unchanged> 상태로 만들어집니다.  
  
 `entity`가 <xref:System.Data.Services.Client.EntityStates.Deleted> 상태이면 관련 엔터티가 <xref:System.Data.Services.Client.EntityStates.Unchanged> 상태로 로드되고 엔터티 간의 링크가 <xref:System.Data.Services.Client.EntityStates.Deleted> 상태로 만들어집니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginSaveChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>변경 내용이 마지막으로 저장된 이후에 <see cref="T:System.Data.Services.Client.DataServiceContext" />에서 수집된 데이터 서비스에 대한 보류 중인 변경 내용을 전송합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSaveChanges">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSaveChanges (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSaveChanges(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSaveChanges (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSaveChanges(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSaveChanges : AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginSaveChanges (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">작업이 완료되면 호출할 대리자입니다.</param>
        <param name="state">콜백 메서드에 컨텍스트 데이터를 전달하는 데 사용되는 사용자 정의 상태 개체입니다.</param>
        <summary>변경 내용이 마지막으로 저장된 이후에 <see cref="T:System.Data.Services.Client.DataServiceContext" />에서 수집된 데이터 서비스에 대한 보류 중인 변경 내용을 비동기적으로 전송합니다.</summary>
        <returns>비동기 작업의 상태를 나타내는 <see langword="IAsyncResult" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceContext> <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.AttachTo%2A>, <xref:System.Data.Services.Client.DataServiceContext.AttachLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.DeleteLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.Detach%2A> 또는 <xref:System.Data.Services.Client.DataServiceContext.DetachLink%2A>를 호출하면 변경 내용이 추가됩니다.  
  
 변경 내용은 <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> 메서드와 마찬가지로 HTTP 요청당 하나의 변경 작업씩 데이터 서비스로 전송됩니다.  
  
 작업을 처리하는 동안 오류가 발생하면 데이터 서비스에서 추가 작업이 처리되지 않습니다. 대신, 실행된 작업, 결과 및 오류로 인해 시도되지 않은 작업을 클라이언트에 알리는 응답이 생성됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSaveChanges">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSaveChanges (System.Data.Services.Client.SaveChangesOptions options, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSaveChanges(valuetype System.Data.Services.Client.SaveChangesOptions options, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.Data.Services.Client.SaveChangesOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSaveChanges (options As SaveChangesOptions, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSaveChanges(System::Data::Services::Client::SaveChangesOptions options, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSaveChanges : System.Data.Services.Client.SaveChangesOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginSaveChanges (options, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Data.Services.Client.SaveChangesOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="options">클라이언트에서 보류 중인 변경 내용 집합을 저장할 수 있는 방법에 대한 옵션입니다.</param>
        <param name="callback">작업이 완료되면 호출할 대리자입니다.</param>
        <param name="state">콜백 메서드에 컨텍스트 데이터를 전달하는 데 사용되는 사용자 정의 상태 개체입니다.</param>
        <summary>변경 내용이 마지막으로 저장된 이후에 <see cref="T:System.Data.Services.Client.DataServiceContext" />에서 수집된 데이터 서비스에 대한 보류 중인 변경 내용을 비동기적으로 전송합니다.</summary>
        <returns>비동기 작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceContext> <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.AttachTo%2A>, <xref:System.Data.Services.Client.DataServiceContext.AttachLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.DeleteLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.Detach%2A> 또는 <xref:System.Data.Services.Client.DataServiceContext.DetachLink%2A>를 호출하면 변경 내용이 추가됩니다.  
  
 <xref:System.Data.Services.Client.SaveChangesOptions.Batch>가 설정된 경우에는 보류 중인 모든 변경 내용이 일괄 처리로 단일 변경 집합에 포함되어 단일 HTTP 요청으로 데이터 서비스에 전송됩니다. 이렇게 하려면 대상 서비스에서 일괄 처리를 지원해야 합니다.  
  
 <xref:System.Data.Services.Client.SaveChangesOptions.Batch>가 설정되지 않은 경우  
  
-   변경 내용이 <xref:System.Data.Services.Client.DataServiceContext.SaveChanges> 메서드와 마찬가지로 HTTP 요청당 하나의 작업씩 데이터 서비스로 전송됩니다.  
  
-   <xref:System.Data.Services.Client.OperationResponse.StatusCode%2A>가 항상 200입니다.  
  
-   <xref:System.Data.Services.Client.OperationResponse.Headers%2A> 속성이 빈 컬렉션을 반환합니다.  
  
 <xref:System.Data.Services.Client.SaveChangesOptions.ContinueOnError>가 설정된 경우  
  
-   변경 집합의 작업을 처리하는 동안 오류가 발생한 경우 해당 변경 집합의 후속 작업은 시도되지 않습니다. 그러나 일괄 처리의 다음 변경 집합은 데이터 서비스에서 계속 처리됩니다.  
  
-   <xref:System.Data.Services.Client.SaveChangesOptions.Batch>가 설정된 경우에는 모든 작업이 단일 변경 집합에 배치되므로 이 옵션을 설정할 수 없습니다.  
  
 <xref:System.Data.Services.Client.SaveChangesOptions.ContinueOnError>가 설정되지 않은 경우  
  
-   작업을 처리하는 동안 오류가 발생하면 데이터 서비스에서 추가 작업이 처리되지 않습니다.  
  
 실행된 작업과 그 결과, 오류로 인해 시도되지 않은 작업을 클라이언트에 알리는 응답이 생성됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelRequest">
      <MemberSignature Language="C#" Value="public void CancelRequest (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelRequest(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.CancelRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelRequest (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelRequest(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.CancelRequest : IAsyncResult -&gt; unit" Usage="dataServiceContext.CancelRequest asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">취소 중인 작업의 <see cref="T:System.IAsyncResult" /> 개체입니다.</param>
        <summary>제공된 <see cref="T:System.IAsyncResult" /> 개체와 연결된 작업을 취소하려고 시도합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IAsyncResult> 매개 변수에 전달되는 `asyncResult` 개체는 작업이 비동기적으로 실행될 때 반환되는 개체입니다. 자세한 내용은 [비동기 작업](~/docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md)합니다. 이 요청이 처리 될 때까지 <xref:System.Data.Services.Client.DataServiceContext> 인스턴스는 예측 가능한 상태가 아닙니다. <xref:System.Data.Services.Client.DataServiceContext> 때 안전 하 게 사용할 수 있습니다는 <xref:System.IAsyncResult.IsCompleted%2A> 의 속성을 `asyncResult` 값을 반환 합니다 `true`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateQuery&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceQuery&lt;T&gt; CreateQuery&lt;T&gt; (string entitySetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceQuery`1&lt;!!T&gt; CreateQuery&lt;T&gt;(string entitySetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.CreateQuery``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateQuery(Of T) (entitySetName As String) As DataServiceQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Data::Services::Client::DataServiceQuery&lt;T&gt; ^ CreateQuery(System::String ^ entitySetName);" />
      <MemberSignature Language="F#" Value="member this.CreateQuery : string -&gt; System.Data.Services.Client.DataServiceQuery&lt;'T&gt;" Usage="dataServiceContext.CreateQuery entitySetName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">쿼리에서 반환되는 형식입니다.</typeparam>
        <param name="entitySetName">URI를 확인하는 문자열입니다.</param>
        <summary>지정된 제네릭 형식의 데이터에 대한 데이터 서비스 쿼리를 만듭니다.</summary>
        <returns>데이터 서비스 쿼리를 나타내는 새 <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> 인스턴스입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Data.Services.Client.DataServiceContext.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.Services.Client.DataServiceContext" /> 개체를 사용하여 만든 각 쿼리에서 사용되는 인증 정보를 가져오거나 설정합니다.</summary>
        <value>웹 클라이언트 인증을 위한 자격 증명을 검색하는 기본 인증 인터페이스입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataNamespace">
      <MemberSignature Language="C#" Value="public string DataNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.DataNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property DataNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataNamespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataNamespace : string with get, set" Usage="System.Data.Services.Client.DataServiceContext.DataNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Atom 페이로드에 대한 메타데이터 항목 외의 데이터 항목의 XML 네임스페이스를 가져오거나 설정합니다.</summary>
        <value>ATOM 형식 페이로드의 데이터 항목에 대한 XML 네임스페이스를 나타내는 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 기본값은 기본 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] 네임스페이스 `http://schemas.microsoft.com/ado/2007/08/dataservices`입니다.  
  
 이 속성은 데이터 서비스의 콘텐츠를 구문 분석하는 데 사용된 네임스페이스 및 데이터 서비스에 전달된 콘텐츠를 생성하는 데 사용된 네임스페이스 모두에 적용됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteLink">
      <MemberSignature Language="C#" Value="public void DeleteLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.DeleteLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteLink (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.DeleteLink : obj * string * obj -&gt; unit" Usage="dataServiceContext.DeleteLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">삭제되도록 표시할 링크의 소스 개체입니다.</param>
        <param name="sourceProperty">소스 개체에서 대상 개체에 액세스하는 데 사용되는 탐색 속성의 이름입니다.</param>
        <param name="target">링크에 관련되어 소스 개체에 바인딩된 대상 개체입니다. 대상 개체는 원본 속성 또는 하위 형식으로 식별되는 형식이어야 합니다.</param>
        <summary><see cref="T:System.Data.Services.Client.DataServiceContext" />에서 추적하는 링크 목록에서 링크 상태를 삭제됨으로 변경합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceContext>에서 추적 중인 모든 링크는 현재 상태에 관계없이 분리할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />, <paramref name="sourceProperty" /> 또는 <paramref name="target" />이 null인 경우</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="source" /> 또는 <paramref name="target" />이 <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> 또는 <see cref="F:System.Data.Services.Client.EntityStates.Added" /> 상태에 있을 경우.  
  
또는 
<paramref name="sourceProperty" />이 컬렉션이 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteObject">
      <MemberSignature Language="C#" Value="public void DeleteObject (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteObject(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.DeleteObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteObject (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteObject(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.DeleteObject : obj -&gt; unit" Usage="dataServiceContext.DeleteObject entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">삭제된 상태로 변경할 추적되는 엔터티입니다.</param>
        <summary><see cref="T:System.Data.Services.Client.DataServiceContext" />에서 삭제되도록 지정한 개체의 상태를 변경합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정된 엔터티의 모든 링크도 삭제된 것으로 표시됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="entity" />가 <see langword="null" />일 경우</exception>
        <exception cref="T:System.InvalidOperationException">개체가 <see cref="T:System.Data.Services.Client.DataServiceContext" />에 의해 추적되고 있지 않은 경우.</exception>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public bool Detach (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Detach(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.Detach(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Detach (entity As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Detach(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.Detach : obj -&gt; bool" Usage="dataServiceContext.Detach entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity"><see cref="T:System.Data.Services.Client.DataServiceContext" />에서 분리할 추적되는 엔터티입니다.</param>
        <summary><see cref="T:System.Data.Services.Client.DataServiceContext" />에서 추적하고 있는 엔터티 목록에서 엔터티를 제거합니다.</summary>
        <returns>지정된 엔터티가 분리되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 개체가 분리되면 더 이상 <xref:System.Data.Services.Client.DataServiceContext>에서 추적되지 않습니다.  
  
 <xref:System.Data.Services.Client.DataServiceContext.Detach%2A> 메서드를 호출하여 <xref:System.Data.Services.Client.EntityStates>에 관계없이 모든 개체를 분리할 수 있습니다.  
  
 지정된 엔터티를 분리한 후 이 메서드는 해당 엔터티와 관련된 모든 링크도 분리합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="entity" />가 <see langword="null" />일 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="DetachLink">
      <MemberSignature Language="C#" Value="public bool DetachLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DetachLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.DetachLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DetachLink (source As Object, sourceProperty As String, target As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DetachLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.DetachLink : obj * string * obj -&gt; bool" Usage="dataServiceContext.DetachLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">삭제되도록 표시할 링크에 관여하는 소스 개체입니다.</param>
        <param name="sourceProperty">소스 및 대상 간의 링크에서 소스를 나타내는 소스 개체의 속성 이름입니다.</param>
        <param name="target">링크에 관련되어 소스 개체에 바인딩된 대상 개체입니다. 대상 개체는 원본 속성 또는 하위 형식으로 식별되는 형식이어야 합니다.</param>
        <summary><see cref="T:System.Data.Services.Client.DataServiceContext" />에서 추적하는 링크 목록에서 지정된 링크를 제거합니다.</summary>
        <returns>지정된 엔터티가 분리되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceContext>에서 추적 중인 모든 링크는 현재 상태에 관계없이 분리할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" /> 또는 <paramref name="sourceProperty" />이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="sourceProperty" />이 빈 문자열인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="EndExecute&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TElement&gt; EndExecute&lt;TElement&gt; (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt; EndExecute&lt;TElement&gt;(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndExecute``1(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecute(Of TElement) (asyncResult As IAsyncResult) As IEnumerable(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TElement&gt; ^ EndExecute(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecute : IAsyncResult -&gt; seq&lt;'Element&gt;" Usage="dataServiceContext.EndExecute asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <typeparam name="TElement">쿼리에서 반환되는 형식입니다.</typeparam>
        <param name="asyncResult"><see cref="T:System.IAsyncResult" /> 개체</param>
        <summary><see cref="M:System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Uri,System.AsyncCallback,System.Object)" />을 완료하기 위해 호출됩니다.</summary>
        <returns>쿼리 작업에서 반환하는 결과입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 제공된 콜백은 표준 시작-끝 비동기 패턴에 따라 쿼리 결과가 검색되면 호출됩니다. 자세한 내용은 [비동기 작업](~/docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md)합니다.  
  
 콜백이 호출되면 모든 결과를 HTTP 스트림에서 읽었지만 결과가 처리되지 않은 것입니다. 즉, 로컬 사용자 쪽 개체가 구체화되거나 수정되지 않았고 ID 확인이 수행되지 않았습니다. <xref:System.Data.Services.Client.DataServiceContext.EndExecute%2A>가 호출되면 <xref:System.Data.Services.Client.DataServiceResponse>가 만들어져 반환되었지만 결과가 아직 처리되지 않은 것입니다. 사용자가 결과를 열거하는 경우에만 ID 확인, 개체 구체화 및 조작이 수행됩니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.Services.Client.DataServiceQuery%601.BeginExecute%2A> 메서드 호출을 통해 쿼리를 시작하여 비동기 쿼리를 실행하는 방법을 보여 줍니다. 인라인 대리자는 <xref:System.Data.Services.Client.DataServiceQuery%601.EndExecute%2A> 메서드를 호출하여 쿼리 결과를 표시합니다. 이 예제에서는 <xref:System.Data.Services.Client.DataServiceContext> 완료 하면 만들어지는 Northwind 데이터 서비스에 따라 서비스 참조 추가 도구에서 생성 된 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#ExecuteQueryAsync](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#executequeryasync)]
 [!code-vb[Astoria Northwind Client#ExecuteQueryAsync](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#executequeryasync)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" />가 <see langword="null" />일 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" />가 이 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 인스턴스에서 시작되지 않은 경우  
  
또는 
<see cref="M:System.Data.Services.Client.DataServiceContext.EndExecute``1(System.IAsyncResult)" /> 메서드가 이미 호출된 경우</exception>
        <exception cref="T:System.InvalidOperationException">요청을 실행하는 동안 오류가 발생하거나 응답 메시지의 내용을 개체로 변환하는 경우.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/902a2dc1-d0e9-4b00-90a8-becc4cb1f6a7">방법: 비동기 데이터 서비스 쿼리 (WCF Data Services)를 실행 합니다.</related>
      </Docs>
    </Member>
    <Member MemberName="EndExecuteBatch">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse EndExecuteBatch (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse EndExecuteBatch(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndExecuteBatch(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecuteBatch (asyncResult As IAsyncResult) As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ EndExecuteBatch(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecuteBatch : IAsyncResult -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.EndExecuteBatch asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">비동기 작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" />입니다.</param>
        <summary><see cref="M:System.Data.Services.Client.DataServiceContext.BeginExecuteBatch(System.AsyncCallback,System.Object,System.Data.Services.Client.DataServiceRequest[])" />을 완료하기 위해 호출됩니다.</summary>
        <returns>일괄 처리의 결과를 나타내는<see langword="DataServiceResult" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 쿼리 그룹을 일괄적으로 데이터 서비스에 제출합니다. 개별 쿼리 응답은 <xref:System.Data.Services.Client.DataServiceResponse>에서 파생된 <xref:System.Data.Services.Client.OperationResponse> 개체로 표현되며 <xref:System.Data.Services.Client.DataServiceResponse> 인스턴스에서 액세스할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetReadStream">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceStreamResponse EndGetReadStream (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceStreamResponse EndGetReadStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndGetReadStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetReadStream (asyncResult As IAsyncResult) As DataServiceStreamResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceStreamResponse ^ EndGetReadStream(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndGetReadStream : IAsyncResult -&gt; System.Data.Services.Client.DataServiceStreamResponse" Usage="dataServiceContext.EndGetReadStream asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceStreamResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">이진 데이터 스트림이 포함된 <see cref="M:System.Data.Services.Client.DataServiceContext.BeginGetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.AsyncCallback,System.Object)" /> 작업의 결과입니다.</param>
        <summary>이진 속성을 스트림으로 검색하는 비동기적 작업을 완료하기 위해 호출됩니다.</summary>
        <returns>메타데이터와 함께 응답 스트림을 포함하는 <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" />의 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceContext.EndGetReadStream%2A> 메서드는 <xref:System.Data.Services.Client.DataServiceContext.BeginGetReadStream%2A> 메서드에서 결과를 받기 위해 호출됩니다.  
  
 <xref:System.Data.Services.Client.DataServiceContext.EndGetReadStream%2A> 메서드는 <xref:System.Data.Services.Client.DataServiceContext.BeginGetReadStream%2A> 메서드에서 응답을 받을 때까지 완료되지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoadProperty">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse EndLoadProperty (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse EndLoadProperty(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndLoadProperty(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndLoadProperty (asyncResult As IAsyncResult) As QueryOperationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::QueryOperationResponse ^ EndLoadProperty(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndLoadProperty : IAsyncResult -&gt; System.Data.Services.Client.QueryOperationResponse" Usage="dataServiceContext.EndLoadProperty asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">비동기 작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" />입니다.</param>
        <summary><see cref="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.AsyncCallback,System.Object)" /> 작업을 완료하기 위해 호출됩니다.</summary>
        <returns>로드 작업에 대한 응답입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 요청하는 동안 또는 데이터 서비스의 응답을 처리하는 동안 오류가 발생하면 예외가 throw됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSaveChanges">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse EndSaveChanges (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse EndSaveChanges(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndSaveChanges(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSaveChanges (asyncResult As IAsyncResult) As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ EndSaveChanges(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndSaveChanges : IAsyncResult -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.EndSaveChanges asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">비동기 작업의 상태를 나타내는 <see cref="T:System.IAsyncResult" />입니다.</param>
        <summary><see cref="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)" /> 작업을 완료하기 위해 호출됩니다.</summary>
        <returns>일괄 작업의 결과를 나타내는 <see cref="T:System.Data.Services.Client.DataServiceResponse" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일괄 처리 작업의 결과를 보려면 <xref:System.Data.Services.Client.DataServiceResponse.BatchStatusCode%2A>를 검사해야 합니다. <xref:System.Data.Services.Client.DataServiceResponse> 열거자가 반환하는 작업 개체에서 개별 작업 결과를 검색할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Entities">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.EntityDescriptor&gt; Entities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Services.Client.EntityDescriptor&gt; Entities" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.Entities" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entities As ReadOnlyCollection(Of EntityDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Services::Client::EntityDescriptor ^&gt; ^ Entities { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Services::Client::EntityDescriptor ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Entities : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.EntityDescriptor&gt;" Usage="System.Data.Services.Client.DataServiceContext.Entities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.EntityDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.Services.Client.DataServiceContext" />에 의해 현재 추적되고 있는 모든 리소스의 목록을 가져옵니다.</summary>
        <value><see cref="T:System.Data.Services.Client.EntityDescriptor" />에 의해 현재 추적되고 있는 모든 리소스를 나타내는 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 개체의 목록입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 추적 중인 리소스가 없는 경우 요소가 없는 목록이 반환됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Execute&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>특정 URI 실행 요청을 데이터 서비스에 보냅니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Execute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse&lt;T&gt; Execute&lt;T&gt; (System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt; continuation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse`1&lt;!!T&gt; Execute&lt;T&gt;(class System.Data.Services.Client.DataServiceQueryContinuation`1&lt;!!T&gt; continuation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.Execute``1(System.Data.Services.Client.DataServiceQueryContinuation{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute(Of T) (continuation As DataServiceQueryContinuation(Of T)) As QueryOperationResponse(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Data::Services::Client::QueryOperationResponse&lt;T&gt; ^ Execute(System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ continuation);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Data.Services.Client.DataServiceQueryContinuation&lt;'T&gt; -&gt; System.Data.Services.Client.QueryOperationResponse&lt;'T&gt;" Usage="dataServiceContext.Execute continuation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">쿼리에서 반환되는 형식입니다.</typeparam>
        <param name="continuation">데이터 서비스에서 반환할 다음 데이터 페이지를 나타내는 <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> 개체입니다.</param>
        <summary>페이지 단위 쿼리 결과에서 다음 데이터 페이지를 검색하라는 요청을 데이터 서비스에 보냅니다.</summary>
        <returns>쿼리 결과의 다음 데이터 페이지를 포함하는 응답입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 제공된 <xref:System.Data.Services.Client.DataServiceQueryContinuation%601> 개체에는 실행할 경우 쿼리 결과의 다음 데이터 페이지를 반환하는 URI가 포함되어 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">요청을 실행하는 동안 오류가 발생하거나 응답 메시지의 내용을 개체로 변환하는 경우.</exception>
      </Docs>
    </Member>
    <Member MemberName="Execute&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TElement&gt; Execute&lt;TElement&gt; (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt; Execute&lt;TElement&gt;(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.Execute``1(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute(Of TElement) (requestUri As Uri) As IEnumerable(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TElement&gt; ^ Execute(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.Execute : Uri -&gt; seq&lt;'Element&gt;" Usage="dataServiceContext.Execute requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <typeparam name="TElement">쿼리에서 반환하는 형식입니다.</typeparam>
        <param name="requestUri">쿼리 요청을 보낼 URI입니다. URI는 모든 유효한 데이터 서비스 URI가 될 수 있으며 $ 쿼리 매개 변수를 포함할 수 있습니다.</param>
        <summary>특정 URI 실행 요청을 데이터 서비스에 보냅니다.</summary>
        <returns>쿼리 작업의 결과입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceContext.Execute%2A> 메서드는 URI로 데이터 서비스를 쿼리하는 데 사용됩니다. 이 메서드를 호출하면 데이터 서비스에 대한 HTTP GET 요청이 실행됩니다. 절대 또는 상대 요청 URI를 지정할 수 있습니다.  
  
 `requestUri`가 절대 URI인 경우 이 메서드에서는 URI가 <xref:System.Data.Services.Client.DataServiceContext>를 생성할 때 지정한 것과 동일한 데이터 서비스를 가리키는지 확인합니다. `requestUri`가 상대 URI인 경우 이 메서드에서는 선행 슬래시를 제거하고 `requestUri`를 생성할 때 제공한 URI에 <xref:System.Data.Services.Client.DataServiceContext>를 추가합니다. <xref:System.Data.Services.Client.DataServiceContext> 생성자에 전달된 URI 뒤에 슬래시(없는 경우)가 추가됩니다.  
  
 이 메서드가 반환되면 요청에 대한 전체 HTTP 응답을 네트워크 스트림에서 읽었지만 응답이 처리되지 않은 것입니다. 응답의 지정된 엔터티가 열거될 때까지 이 엔터티에 대해 ID 확인 및 전체 개체 구체화가 수행되지 않습니다.  
  
   
  
## Examples  
 다음 예제에서는 `do…while` 루프를 사용하여 데이터 서비스의 페이징 결과에서 `Customers` 엔터티를 로드합니다. <xref:System.Data.Services.Client.DataServiceContext.Execute%2A> 메서드는 데이터의 다음 페이지를 받기 위해 다음 연결 URI를 사용하여 호출됩니다.  
  
 [!code-csharp[Astoria Northwind Client#GetCustomersPaged](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#getcustomerspaged)]
 [!code-vb[Astoria Northwind Client#GetCustomersPaged](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#getcustomerspaged)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.WebException">응답이 요청에서 <paramref name="requestUri" />로 수신되지 않는 경우.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="requestUri" />가 <see langword="null" />일 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="requestUri" />가 데이터 서비스에 유효한 URI가 아닌 경우.</exception>
        <exception cref="T:System.InvalidOperationException">요청을 실행하는 동안 오류가 발생하거나 응답 메시지의 내용을 개체로 변환하는 경우.</exception>
        <exception cref="T:System.Data.Services.Client.DataServiceQueryException">데이터 서비스가 HTTP 404를 반환하는 경우: 리소스를 찾을 수 없음 오류</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/32f9b588-c832-44c4-a7e0-fcce635df59a">지연 콘텐츠 로드(WCF Data Services)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/bb786ea4-f3ef-4ad3-9a41-3a0b7feb6a1f">방법: 페이징 결과 로드 (WCF 데이터 Services)</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse ExecuteBatch (params System.Data.Services.Client.DataServiceRequest[] queries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse ExecuteBatch(class System.Data.Services.Client.DataServiceRequest[] queries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.ExecuteBatch(System.Data.Services.Client.DataServiceRequest[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteBatch (ParamArray queries As DataServiceRequest()) As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ ExecuteBatch(... cli::array &lt;System::Data::Services::Client::DataServiceRequest ^&gt; ^ queries);" />
      <MemberSignature Language="F#" Value="member this.ExecuteBatch : System.Data.Services.Client.DataServiceRequest[] -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.ExecuteBatch queries" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queries" Type="System.Data.Services.Client.DataServiceRequest[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="queries">쿼리를 구성하는 <see cref="T:System.Data.Services.Client.DataServiceRequest" /> 개체의 배열입니다.</param>
        <summary>쿼리 그룹을 일괄적으로 데이터 서비스에 제출합니다.</summary>
        <returns>일괄 작업에 대한 응답입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 쿼리는 <xref:System.Data.Services.Client.DataServiceRequest%601> 인스턴스로 지정됩니다. 전체 일괄 처리 요청의 응답을 나타내는 <xref:System.Data.Services.Client.DataServiceResponse>를 반환합니다. 개별 쿼리 응답은 <xref:System.Data.Services.Client.OperationResponse> 인스턴스를 열거하여 액세스할 수 있는 개별 <xref:System.Data.Services.Client.DataServiceResponse> 개체로 표현됩니다.  
  
 이 메서드가 반환되면 일괄 처리 요청에 대한 전체 HTTP 응답을 네트워크 스트림에서 읽었지만 응답이 처리되지 않은 것입니다. 응답의 지정된 엔터티가 열거될 때까지 이 엔터티에 대해 ID 확인 또는 개체 구체화가 수행되지 않습니다.  
  
   
  
## Examples  
 다음 예제에서는 Northwind 데이터 서비스에서 <xref:System.Data.Services.Client.DataServiceContext.ExecuteBatch*> 개체와 <xref:System.Data.Services.Client.DataServiceRequest%601> 개체를 모두 반환하는 쿼리가 포함된 `Customers` 개체 배열을 실행하는 `Products` 메서드를 호출하는 방법을 보여 줍니다. 반환된 <xref:System.Data.Services.Client.QueryOperationResponse%601>의 <xref:System.Data.Services.Client.DataServiceResponse> 개체 컬렉션이 열거되고 각 <xref:System.Data.Services.Client.QueryOperationResponse%601>에 포함되어 있는 개체 컬렉션도 열거됩니다. 이 예제에서는 <xref:System.Data.Services.Client.DataServiceContext> 완료 하면 만들어지는 Northwind 데이터 서비스에 따라 서비스 참조 추가 도구에서 생성 된 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#BatchQuery](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#batchquery)]
 [!code-vb[Astoria Northwind Client#BatchQuery](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#batchquery)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/3b4db7df-bd33-43a1-8ea4-63a18e131f97">방법: 일괄 처리 (WCF Data Services)에서 쿼리를 실행 합니다.</related>
      </Docs>
    </Member>
    <Member MemberName="GetEntityDescriptor">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.EntityDescriptor GetEntityDescriptor (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.EntityDescriptor GetEntityDescriptor(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetEntityDescriptor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEntityDescriptor (entity As Object) As EntityDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::EntityDescriptor ^ GetEntityDescriptor(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetEntityDescriptor : obj -&gt; System.Data.Services.Client.EntityDescriptor" Usage="dataServiceContext.GetEntityDescriptor entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.EntityDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">엔터티 설명자를 반환할 개체입니다.</param>
        <summary>제공된 엔터티 개체에 대한 <see cref="T:System.Data.Services.Client.EntityDescriptor" />를 가져옵니다.</summary>
        <returns><paramref name="entity" />에 대한 <see cref="T:System.Data.Services.Client.EntityDescriptor" /> 인스턴스이거나, 개체에 대한 <see cref="T:System.Data.Services.Client.EntityDescriptor" />가 없는 경우 <see langword="null" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLinkDescriptor">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.LinkDescriptor GetLinkDescriptor (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.LinkDescriptor GetLinkDescriptor(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetLinkDescriptor(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLinkDescriptor (source As Object, sourceProperty As String, target As Object) As LinkDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::LinkDescriptor ^ GetLinkDescriptor(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.GetLinkDescriptor : obj * string * obj -&gt; System.Data.Services.Client.LinkDescriptor" Usage="dataServiceContext.GetLinkDescriptor (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.LinkDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">링크의 소스 개체입니다.</param>
        <param name="sourceProperty"><paramref name="source" /> 개체에서 관련 개체를 반환하는 탐색 속성의 이름입니다.</param>
        <param name="target">관련된 엔터티입니다.</param>
        <summary>두 엔터티 간의 관계를 정의하는 특정 링크에 대한 <see cref="T:System.Data.Services.Client.LinkDescriptor" />를 가져옵니다.</summary>
        <returns>지정된 관계에 대한 <see cref="T:System.Data.Services.Client.LinkDescriptor" /> 인스턴스이거나, 관계에 대한 <see cref="T:System.Data.Services.Client.LinkDescriptor" />가 없는 경우 <see langword="null" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataUri">
      <MemberSignature Language="C#" Value="public Uri GetMetadataUri ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri GetMetadataUri() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetMetadataUri" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataUri () As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ GetMetadataUri();" />
      <MemberSignature Language="F#" Value="member this.GetMetadataUri : unit -&gt; Uri" Usage="dataServiceContext.GetMetadataUri " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>.edmx 메타데이터 위치의 URI를 가져옵니다.</summary>
        <returns>생성자에 전달된 기본 URI로 식별되는 데이터 서비스에 대한 .edmx 형식의 메타데이터 설명의 위치를 식별하는 URI입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 생성자에 전달된 URI를 단일 경로 세그먼트(`/$metadata`)와 함께 반환합니다. 이 메서드를 호출하면 메타데이터 URI를 동적으로 검색하는 네트워크 작업이 생성될 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetReadStream">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 엔터티의 이진 속성 데이터를 데이터 스트림으로 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetReadStream">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceStreamResponse GetReadStream (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceStreamResponse GetReadStream(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadStream (entity As Object) As DataServiceStreamResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceStreamResponse ^ GetReadStream(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetReadStream : obj -&gt; System.Data.Services.Client.DataServiceStreamResponse" Usage="dataServiceContext.GetReadStream entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceStreamResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">검색할 이진 속성이 있는 엔터티입니다.</param>
        <summary>지정된 엔터티의 이진 속성 데이터를 데이터 스트림으로 가져옵니다.</summary>
        <returns>응답을 나타내는 <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" />의 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A> 메서드는 동기적으로 요청 된 이진 속성을 포함 하는 데이터 스트림을 요청 `entity`합니다.  
  
 AtomPub 프로토콜에는 `entity` 가 미디어 링크 항목이 고 이진 속성은 연결된 된 미디어 리소스입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="entity" />이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="entity" />가 이 <see cref="T:System.Data.Services.Client.DataServiceContext" />에 의해 추적되지 않는 경우  
  
또는 
<paramref name="entity" />가 <see cref="F:System.Data.Services.Client.EntityStates.Added" /> 상태에 있는 경우  
  
또는 
<paramref name="entity" />가 미디어 링크 항목이 아니고 이진 속성을 포함하지 않는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReadStream">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceStreamResponse GetReadStream (object entity, System.Data.Services.Client.DataServiceRequestArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceStreamResponse GetReadStream(object entity, class System.Data.Services.Client.DataServiceRequestArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadStream (entity As Object, args As DataServiceRequestArgs) As DataServiceStreamResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceStreamResponse ^ GetReadStream(System::Object ^ entity, System::Data::Services::Client::DataServiceRequestArgs ^ args);" />
      <MemberSignature Language="F#" Value="member this.GetReadStream : obj * System.Data.Services.Client.DataServiceRequestArgs -&gt; System.Data.Services.Client.DataServiceStreamResponse" Usage="dataServiceContext.GetReadStream (entity, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceStreamResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="args" Type="System.Data.Services.Client.DataServiceRequestArgs" />
      </Parameters>
      <Docs>
        <param name="entity">검색할 이진 속성이 있는 엔터티입니다.</param>
        <param name="args">HTTP 요청 메시지에 대한 설정이 포함된 <see cref="T:System.Data.Services.Client.DataServiceRequestArgs" /> 클래스의 인스턴스입니다.</param>
        <summary>지정된 엔터티의 이진 속성 데이터를 지정된 메시지 헤더와 함께 데이터 스트림으로 가져옵니다.</summary>
        <returns>응답을 나타내는 <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" />의 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A> 메서드는 동기적으로 요청 된 이진 속성을 포함 하는 데이터 스트림을 요청 `entity`합니다.  
  
 AtomPub 프로토콜에는 `entity` 가 미디어 링크 항목이 고 이진 속성은 연결된 된 미디어 리소스입니다.  
  
 `args`에 설정된 헤더에 대해서는 유효성 검사가 수행되지 않습니다. 따라서 요청의 의미를 변경하는 방식으로 HTTP 헤더를 변경하지 마십시오.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="entity" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="args" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="entity" />가 이 <see cref="T:System.Data.Services.Client.DataServiceContext" />에 의해 추적되지 않는 경우  
  
또는 
<paramref name="entity" />가 <see cref="F:System.Data.Services.Client.EntityStates.Added" /> 상태에 있는 경우  
  
또는 
<paramref name="entity" />가 미디어 링크 항목이 아니고 이진 속성을 포함하지 않는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReadStream">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceStreamResponse GetReadStream (object entity, string acceptContentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceStreamResponse GetReadStream(object entity, string acceptContentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadStream (entity As Object, acceptContentType As String) As DataServiceStreamResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceStreamResponse ^ GetReadStream(System::Object ^ entity, System::String ^ acceptContentType);" />
      <MemberSignature Language="F#" Value="member this.GetReadStream : obj * string -&gt; System.Data.Services.Client.DataServiceStreamResponse" Usage="dataServiceContext.GetReadStream (entity, acceptContentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceStreamResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="acceptContentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entity">검색할 이진 속성이 있는 엔터티입니다.</param>
        <param name="acceptContentType">Accept 헤더에 지정되었으며 데이터 서비스에서 요청된 데이터의 콘텐츠 형식입니다.</param>
        <summary>지정된 엔터티에 대한 이진 속성 데이터를 지정된 Accept 메시지 헤더와 함께 데이터 스트림으로 가져옵니다.</summary>
        <returns>응답을 나타내는 <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" />의 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `acceptContentType` 매개 변수는 Accept HTTP 헤더에 대 한 유효한 값 이어야 합니다.  
  
 합니다 <xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A> 메서드는 동기적으로 요청 된 이진 속성을 포함 하는 데이터 스트림을 요청 `entity`합니다.  
  
 AtomPub 프로토콜에는 `entity` 가 미디어 링크 항목이 고 이진 속성은 연결된 된 미디어 리소스입니다.  
  
 `acceptContentType`에 설정된 헤더에 대해서는 유효성 검사가 수행되지 않습니다. 따라서 요청의 의미를 변경하는 방식으로 이 HTTP 헤더를 변경하지 마십시오.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="entity" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="acceptContentType" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="entity" />가 이 <see cref="T:System.Data.Services.Client.DataServiceContext" />에 의해 추적되지 않는 경우  
  
또는 
<paramref name="entity" />가 <see cref="F:System.Data.Services.Client.EntityStates.Added" /> 상태에 있는 경우  
  
또는 
<paramref name="entity" />가 미디어 링크 항목이 아니고 이진 속성을 포함하지 않는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReadStreamUri">
      <MemberSignature Language="C#" Value="public Uri GetReadStreamUri (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri GetReadStreamUri(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetReadStreamUri(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadStreamUri (entity As Object) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ GetReadStreamUri(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetReadStreamUri : obj -&gt; Uri" Usage="dataServiceContext.GetReadStreamUri entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">검색할 이진 속성이 있는 엔터티입니다.</param>
        <summary>이진 속성 데이터를 데이터 스트림으로 반환하는 데 사용되는 URI를 가져옵니다.</summary>
        <returns>이진 데이터 스트림의 읽기 URL입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정된 `entity`가 미디어 링크 항목이고 <xref:System.Data.Services.Client.DataServiceContext.GetReadStreamUri%2A> 메서드가 미디어 리소스 내용에 액세스하는 데 사용되는 URI를 반환하는 경우  
  
 이 URI는 미디어 리소스 내용을 읽기 위한 GET 요청에만 사용됩니다. POST, PUT 또는 DELETE 요청에는 응답하지 않을 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">지정된 엔터티가 <see langword="null" />인 경우.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="entity" />가 이 <see cref="T:System.Data.Services.Client.DataServiceContext" />에 의해 추적되지 않는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="IgnoreMissingProperties">
      <MemberSignature Language="C#" Value="public bool IgnoreMissingProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreMissingProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.IgnoreMissingProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreMissingProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreMissingProperties { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreMissingProperties : bool with get, set" Usage="System.Data.Services.Client.DataServiceContext.IgnoreMissingProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>형식에서 읽어온 속성을 클라이언트 쪽 형식의 속성에 매핑해야 하는지 여부를 가져오거나 설정합니다.</summary>
        <value>형식에서 읽어온 속성을 클라이언트 쪽 형식의 속성에 매핑해야 하는지 여부를 나타내는 부울 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 `true`, 속성 형식에서 클라이언트 유형의 속성을 매핑할 수 없는 경우에 구체화가 성공 합니다. 경우 `false`, 속성이 일치 하지 않으면 개체 구체화 동안 예외가 발생 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreResourceNotFoundException">
      <MemberSignature Language="C#" Value="public bool IgnoreResourceNotFoundException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreResourceNotFoundException" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.IgnoreResourceNotFoundException" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreResourceNotFoundException As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreResourceNotFoundException { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreResourceNotFoundException : bool with get, set" Usage="System.Data.Services.Client.DataServiceContext.IgnoreResourceNotFoundException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 서비스에서 404 오류(리소스를 찾을 수 없음)가 반환될 때 예외가 발생되는지 여부를 가져오거나 설정합니다.</summary>
        <value><see langword="true" />로 설정되어 있으면 데이터 서비스가 HTTP 404: 리소스를 찾을 수 없음 오류를 반환할 때 클라이언트 라이브러리가 <see cref="T:System.Data.Services.Client.DataServiceQueryException" />을 발생시키는 대신 빈 집합을 반환합니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Links">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.LinkDescriptor&gt; Links { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Services.Client.LinkDescriptor&gt; Links" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.Links" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Links As ReadOnlyCollection(Of LinkDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Services::Client::LinkDescriptor ^&gt; ^ Links { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Services::Client::LinkDescriptor ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Links : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.LinkDescriptor&gt;" Usage="System.Data.Services.Client.DataServiceContext.Links" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.LinkDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.Services.Client.DataServiceContext" /> 개체에 의해 현재 추적되고 있는 모든 연결 또는 링크의 컬렉션을 가져옵니다.</summary>
        <value><see cref="T:System.Data.Services.Client.LinkDescriptor" /> 개체에 의해 현재 추적되고 있는 모든 연결 또는 링크를 나타내는 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 개체의 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 현재 추적 중인 링크가 없는 경우 요소가 없는 목록이 반환됩니다. 컬렉션은 읽기 전용입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadProperty">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>데이터 서비스에서 지연 콘텐츠를 로드합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadProperty">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse LoadProperty (object entity, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse LoadProperty(object entity, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadProperty (entity As Object, propertyName As String) As QueryOperationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::QueryOperationResponse ^ LoadProperty(System::Object ^ entity, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string -&gt; System.Data.Services.Client.QueryOperationResponse" Usage="dataServiceContext.LoadProperty (entity, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entity">로드할 속성을 포함하는 엔터티입니다.</param>
        <param name="propertyName">로드할 지정된 엔터티의 속성 이름입니다.</param>
        <summary>데이터 서비스에서 지정된 속성에 대한 지연 콘텐츠를 로드합니다.</summary>
        <returns>로드 작업에 대한 응답입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 호출하면 속성 값을 가져오는 네트워크 작업이 호출됩니다. 지정된 속성은 연결 또는 링크를 나타내는 속성을 포함하여 엔터티의 속성 중 하나일 수 있습니다.  
  
 속성이 연결, 링크 또는 지연된 속성을 나타내는 경우 이 메서드를 호출하면 클라이언트에 관련 리소스를 지연 로드하는 방법이 제공됩니다.  
  
 엔터티가 변경되거나 수정된 상태인 경우 속성 값은 관련 엔터티를 로드하고 해당 엔터티를 변경되지 않은 링크와 함께 변경되지 않은 상태로 표시합니다.  
  
 속성이 이미 로드된 경우 이 메서드를 호출하면 속성 값을 새로 고칠 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 반환되는 각 `Customers` 인스턴스와 관련된 `Orders` 개체를 명시적으로 로드하는 방법을 보여 줍니다. 이 예제에서는 <xref:System.Data.Services.Client.DataServiceContext> 완료 하면 만들어지는 Northwind 데이터 서비스에 따라 서비스 참조 추가 도구에서 생성 된 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#LoadRelatedOrderCustomer](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#loadrelatedordercustomer)]
 [!code-vb[Astoria Northwind Client#LoadRelatedOrderCustomer](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#loadrelatedordercustomer)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadProperty">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse LoadProperty (object entity, string propertyName, System.Data.Services.Client.DataServiceQueryContinuation continuation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse LoadProperty(object entity, string propertyName, class System.Data.Services.Client.DataServiceQueryContinuation continuation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadProperty (entity As Object, propertyName As String, continuation As DataServiceQueryContinuation) As QueryOperationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::QueryOperationResponse ^ LoadProperty(System::Object ^ entity, System::String ^ propertyName, System::Data::Services::Client::DataServiceQueryContinuation ^ continuation);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string * System.Data.Services.Client.DataServiceQueryContinuation -&gt; System.Data.Services.Client.QueryOperationResponse" Usage="dataServiceContext.LoadProperty (entity, propertyName, continuation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation" />
      </Parameters>
      <Docs>
        <param name="entity">로드할 속성을 포함하는 엔터티입니다.</param>
        <param name="propertyName">로드할 지정된 엔터티의 속성 이름입니다.</param>
        <param name="continuation">데이터 서비스에서 로드할 관련 엔터티의 다음 페이지를 나타내는 <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> 개체입니다.</param>
        <summary>제공된 쿼리 연속 개체를 사용하여 데이터 서비스에서 관련 엔터티의 다음 페이지를 로드합니다.</summary>
        <returns>관련 엔터티 데이터의 다음 페이지를 포함하는 응답입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `entity`가 <xref:System.Data.Services.Client.EntityStates.Unchanged> 또는 <xref:System.Data.Services.Client.EntityStates.Modified> 상태이면 관련 엔터티가 <xref:System.Data.Services.Client.EntityStates.Unchanged> 상태의 개체로 로드되고 링크도 <xref:System.Data.Services.Client.EntityStates.Unchanged> 상태로 제공됩니다.  
  
 `entity`가 <xref:System.Data.Services.Client.EntityStates.Deleted> 상태이면 관련 엔터티가 <xref:System.Data.Services.Client.EntityStates.Unchanged> 상태의 개체로 로드되고 링크가 <xref:System.Data.Services.Client.EntityStates.Deleted> 상태로 제공됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="entity" />가 <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> 또는 <see cref="F:System.Data.Services.Client.EntityStates.Added" /> 상태에 있습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadProperty">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse LoadProperty (object entity, string propertyName, Uri nextLinkUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse LoadProperty(object entity, string propertyName, class System.Uri nextLinkUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadProperty (entity As Object, propertyName As String, nextLinkUri As Uri) As QueryOperationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::QueryOperationResponse ^ LoadProperty(System::Object ^ entity, System::String ^ propertyName, Uri ^ nextLinkUri);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string * Uri -&gt; System.Data.Services.Client.QueryOperationResponse" Usage="dataServiceContext.LoadProperty (entity, propertyName, nextLinkUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="nextLinkUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="entity">로드할 속성을 포함하는 엔터티입니다.</param>
        <param name="propertyName">로드할 지정된 엔터티의 속성 이름입니다.</param>
        <param name="nextLinkUri">다음 결과 페이지를 로드하는 데 사용되는 URI입니다.</param>
        <summary>제공된 다음 링크 URI를 사용하여 관련 엔터티의 페이지를 로드합니다.</summary>
        <returns>요청 결과가 포함된 <see cref="T:System.Data.Services.Client.QueryOperationResponse`1" />의 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `entity`가 <xref:System.Data.Services.Client.EntityStates.Unchanged> 또는 <xref:System.Data.Services.Client.EntityStates.Modified> 상태이면 관련 엔터티가 <xref:System.Data.Services.Client.EntityStates.Unchanged> 상태로 로드되고 엔터티 간의 관계도 <xref:System.Data.Services.Client.EntityStates.Unchanged> 상태로 만들어집니다.  
  
 `entity`가 <xref:System.Data.Services.Client.EntityStates.Deleted> 상태이면 관련 엔터티가 <xref:System.Data.Services.Client.EntityStates.Unchanged> 상태로 로드되고 엔터티 간의 링크가 <xref:System.Data.Services.Client.EntityStates.Deleted> 상태로 만들어집니다.  
  
   
  
## Examples  
 다음 예제에서는 각 `Orders` 엔터티와 관련된 `Customers` 엔터티를 반환하고, `do…while` 루프를 사용하여 `Customers` 엔터티 페이지를 로드하고, 중첩된 `while` 루프를 사용하여 데이터 서비스에서 관련된 `Orders` 엔터티 페이지를 로드합니다. <xref:System.Data.Services.Client.DataServiceContext.LoadProperty%2A> 메서드는 관련된 `Orders` 엔터티 페이지를 로드하는 데 사용됩니다.  
  
 [!code-csharp[Astoria Northwind Client#GetCustomersPagedNested](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#getcustomerspagednested)]
 [!code-vb[Astoria Northwind Client#GetCustomersPagedNested](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#getcustomerspagednested)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="entity" />가 <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> 또는 <see cref="F:System.Data.Services.Client.EntityStates.Added" /> 상태인 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/bb786ea4-f3ef-4ad3-9a41-3a0b7feb6a1f">방법: 페이징 결과 로드 (WCF 데이터 Services)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/32f9b588-c832-44c4-a7e0-fcce635df59a">지연 콘텐츠 로드(WCF Data Services)</related>
      </Docs>
    </Member>
    <Member MemberName="LoadProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse&lt;T&gt; LoadProperty&lt;T&gt; (object entity, string propertyName, System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt; continuation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse`1&lt;!!T&gt; LoadProperty&lt;T&gt;(object entity, string propertyName, class System.Data.Services.Client.DataServiceQueryContinuation`1&lt;!!T&gt; continuation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.LoadProperty``1(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadProperty(Of T) (entity As Object, propertyName As String, continuation As DataServiceQueryContinuation(Of T)) As QueryOperationResponse(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Data::Services::Client::QueryOperationResponse&lt;T&gt; ^ LoadProperty(System::Object ^ entity, System::String ^ propertyName, System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ continuation);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string * System.Data.Services.Client.DataServiceQueryContinuation&lt;'T&gt; -&gt; System.Data.Services.Client.QueryOperationResponse&lt;'T&gt;" Usage="dataServiceContext.LoadProperty (entity, propertyName, continuation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">로드할 컬렉션의 요소 형식입니다.</typeparam>
        <param name="entity">로드할 속성을 포함하는 엔터티입니다.</param>
        <param name="propertyName">로드할 지정된 엔터티의 속성 이름입니다.</param>
        <param name="continuation">데이터 서비스에서 로드할 관련 엔터티의 다음 페이지를 나타내는 <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> 개체입니다.</param>
        <summary>제공된 제네릭 쿼리 연속 개체를 사용하여 데이터 서비스에서 관련 엔터티의 다음 페이지를 로드합니다.</summary>
        <returns>관련 엔터티 데이터의 다음 페이지를 포함하는 응답입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `entity`가 <xref:System.Data.Services.Client.EntityStates.Unchanged> 또는 <xref:System.Data.Services.Client.EntityStates.Modified> 상태이면 관련 엔터티가 <xref:System.Data.Services.Client.EntityStates.Unchanged> 상태의 개체로 로드되고 링크도 <xref:System.Data.Services.Client.EntityStates.Unchanged> 상태로 제공됩니다.  
  
 `entity`가 <xref:System.Data.Services.Client.EntityStates.Deleted> 상태이면 관련 엔터티가 <xref:System.Data.Services.Client.EntityStates.Unchanged> 상태의 개체로 로드되고 링크가 <xref:System.Data.Services.Client.EntityStates.Deleted> 상태로 제공됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="entity" />가 <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> 또는 <see cref="F:System.Data.Services.Client.EntityStates.Added" /> 상태에 있습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="MergeOption">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.MergeOption MergeOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Services.Client.MergeOption MergeOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.MergeOption" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeOption As MergeOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Client::MergeOption MergeOption { System::Data::Services::Client::MergeOption get(); void set(System::Data::Services::Client::MergeOption value); };" />
      <MemberSignature Language="F#" Value="member this.MergeOption : System.Data.Services.Client.MergeOption with get, set" Usage="System.Data.Services.Client.DataServiceContext.MergeOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.MergeOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 서비스에서 엔터티를 받기 위한 동기화 옵션을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Data.Services.Client.MergeOption" /> 열거형의 멤버 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 개체를 구체화하기 전에 클라이언트의 deserialization 구성 요소에서 이 값을 읽습니다. 데이터 서비스에 대한 모든 쿼리 또는 업데이트를 실행하기 전에 이 속성을 적절한 구체화 옵션으로 설정하십시오. 기본값은 <xref:System.Data.Services.Client.MergeOption.AppendOnly>입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadingEntity">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; ReadingEntity;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; ReadingEntity" />
      <MemberSignature Language="DocId" Value="E:System.Data.Services.Client.DataServiceContext.ReadingEntity" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReadingEntity As EventHandler(Of ReadingWritingEntityEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Data::Services::Client::ReadingWritingEntityEventArgs ^&gt; ^ ReadingEntity;" />
      <MemberSignature Language="F#" Value="member this.ReadingEntity : EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; " Usage="member this.ReadingEntity : System.EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>엔터티 데이터를 엔터티 개체로 완전히 읽어온 후 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceContext.ReadingEntity> 이벤트는 엔터티 데이터를 모든 중첩된 엔터티와 함께 대상 개체로 완전히 읽어 온 후에 발생합니다. 추적 이외의 인 경우 <xref:System.Data.Services.Client.MergeOption.NoTracking>, 이벤트가 발생 하기 전에 개체를 연결 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveName">
      <MemberSignature Language="C#" Value="public Func&lt;Type,string&gt; ResolveName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Type, string&gt; ResolveName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.ResolveName" />
      <MemberSignature Language="VB.NET" Value="Public Property ResolveName As Func(Of Type, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;Type ^, System::String ^&gt; ^ ResolveName { Func&lt;Type ^, System::String ^&gt; ^ get(); void set(Func&lt;Type ^, System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResolveName : Func&lt;Type, string&gt; with get, set" Usage="System.Data.Services.Client.DataServiceContext.ResolveName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Type,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 서비스에 엔터티를 보낼 때 클라이언트 라이브러리에서 사용하는 기본 형식 확인 전략을 재정의하는 함수를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Data.Services.Client.DataServiceContext" />의 이름이 들어 있는 문자열을 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 클라이언트 라이브러리에서 사용하는 기본 형식 확인을 재정의할 수 있도록 합니다. 클라이언트 응용프로그램 내에서 형식을 네임스페이스로 정규화된 형식 이름으로 확인하는 데 사용되는 함수를 식별하는 대리자로 이 속성을 설정합니다. 그러면 클라이언트에서 서버의 응답에 제공된 형식 이름과 클라이언트 쪽 형식 간에 사용자 지정 매핑을 수행할 수 있습니다.  
  
> [!NOTE]
>  이 메서드를 사용하면 지정된 형식에 대해 Atom 또는 JSON과 같은 대상 표현으로 serialize된 엔터티 이름을 재정의할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveType">
      <MemberSignature Language="C#" Value="public Func&lt;string,Type&gt; ResolveType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;string, class System.Type&gt; ResolveType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.ResolveType" />
      <MemberSignature Language="VB.NET" Value="Public Property ResolveType As Func(Of String, Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::String ^, Type ^&gt; ^ ResolveType { Func&lt;System::String ^, Type ^&gt; ^ get(); void set(Func&lt;System::String ^, Type ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResolveType : Func&lt;string, Type&gt; with get, set" Usage="System.Data.Services.Client.DataServiceContext.ResolveType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.String,System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 서비스에서 엔터티를 받을 때 클라이언트 라이브러리에서 사용하는 기본 형식 확인 옵션을 재정의하는 데 사용되는 함수를 가져오거나 설정합니다.</summary>
        <value>클라이언트 라이브러리에서 사용하는 기본 형식 확인 옵션을 재정의하는 데 사용되는 재정의 함수를 식별하는 함수 대리자입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 클라이언트 라이브러리에서 사용하는 기본 형식 확인 전략을 재정의할 수 있도록 합니다. 네임스페이스로 정규화된 형식 이름을 클라이언트 응용프로그램 내의 형식으로 확인하는 함수를 식별하는 대리자로 이 속성을 설정합니다. 그러면 클라이언트에서 서버의 응답에 제공된 형식 이름과 클라이언트 쪽 형식 간에 사용자 지정 매핑을 수행할 수 있습니다.  
  
 또한 형식 확인 재지정을 통해 형식 이름과 형식 간의 사용자 지정 매핑 전략을 삽입할 수도 있습니다. 이렇게 해도 응답이 식별된 형식으로 구체화되는 방식에는 영향을 주지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Data.Services.Client.DataServiceContext" />에서 추적하고 있는 변경 내용을 저장소에 저장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceResponse>를 호출하여 발생하는 상태, 헤더 및 오류가 포함된 <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse SaveChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse SaveChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SaveChanges" />
      <MemberSignature Language="VB.NET" Value="Public Function SaveChanges () As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ SaveChanges();" />
      <MemberSignature Language="F#" Value="member this.SaveChanges : unit -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.SaveChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.Services.Client.DataServiceContext" />에서 추적하고 있는 변경 내용을 저장소에 저장합니다.</summary>
        <returns><see cref="T:System.Data.Services.Client.DataServiceResponse" />를 호출하여 발생하는 상태, 헤더 및 오류가 포함된 <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse SaveChanges (System.Data.Services.Client.SaveChangesOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse SaveChanges(valuetype System.Data.Services.Client.SaveChangesOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SaveChanges(System.Data.Services.Client.SaveChangesOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function SaveChanges (options As SaveChangesOptions) As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ SaveChanges(System::Data::Services::Client::SaveChangesOptions options);" />
      <MemberSignature Language="F#" Value="member this.SaveChanges : System.Data.Services.Client.SaveChangesOptions -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.SaveChanges options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Data.Services.Client.SaveChangesOptions" />
      </Parameters>
      <Docs>
        <param name="options">구체화 옵션을 지정하는 <see cref="T:System.Data.Services.Client.MergeOption" /> 열거형의 멤버입니다.</param>
        <summary><see cref="T:System.Data.Services.Client.DataServiceContext" />에서 추적하고 있는 변경 내용을 저장소에 저장합니다.</summary>
        <returns><see cref="T:System.Data.Services.Client.DataServiceResponse" />를 호출하여 발생하는 상태, 헤더 및 오류가 포함된 <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 작업이 아래 순서 대로 데이터 서비스에 전송 됩니다.  
  
1.  <xref:System.Data.Services.Client.DataServiceContext.DeleteLink%2A>  
  
2.  <xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A>  
  
3.  <xref:System.Data.Services.Client.DataServiceContext.UpdateObject%2A>  
  
4.  <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>  
  
5.  <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> 및 <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesDefaultOptions">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.SaveChangesOptions SaveChangesDefaultOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Services.Client.SaveChangesOptions SaveChangesDefaultOptions" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.SaveChangesDefaultOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveChangesDefaultOptions As SaveChangesOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Client::SaveChangesOptions SaveChangesDefaultOptions { System::Data::Services::Client::SaveChangesOptions get(); void set(System::Data::Services::Client::SaveChangesOptions value); };" />
      <MemberSignature Language="F#" Value="member this.SaveChangesDefaultOptions : System.Data.Services.Client.SaveChangesOptions with get, set" Usage="System.Data.Services.Client.DataServiceContext.SaveChangesDefaultOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.SaveChangesOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.Services.Client.SaveChangesOptions" /> 메서드에서 사용하는 <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" /> 값을 가져오거나 설정합니다.</summary>
        <value>변경 내용 저장 작업에 대한 현재 옵션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용하면 병합 및 대체 의미 체계와 같은 옵션을 <xref:System.Data.Services.Client.DataServiceContext>에 대해 한 번만 설정한 다음 필요에 따라 <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> 오버로드 중 하나를 호출하여 재정의할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendingRequest">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Data.Services.Client.SendingRequestEventArgs&gt; SendingRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Data.Services.Client.SendingRequestEventArgs&gt; SendingRequest" />
      <MemberSignature Language="DocId" Value="E:System.Data.Services.Client.DataServiceContext.SendingRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SendingRequest As EventHandler(Of SendingRequestEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Data::Services::Client::SendingRequestEventArgs ^&gt; ^ SendingRequest;" />
      <MemberSignature Language="F#" Value="member this.SendingRequest : EventHandler&lt;System.Data.Services.Client.SendingRequestEventArgs&gt; " Usage="member this.SendingRequest : System.EventHandler&lt;System.Data.Services.Client.SendingRequestEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Data.Services.Client.SendingRequestEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>새 <see cref="T:System.Net.HttpWebRequest" />가 만들어지면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceContext.SendingRequest> 이벤트는 필요한 속성 값이 개체에 설정되기 전에 발생합니다. 보장  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLink">
      <MemberSignature Language="C#" Value="public void SetLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SetLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLink (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.SetLink : obj * string * obj -&gt; unit" Usage="dataServiceContext.SetLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">새 링크의 원본 개체입니다.</param>
        <param name="sourceProperty">새 링크의 대상 개체를 식별하는 소스 개체의 속성입니다.</param>
        <param name="target">이 메서드를 호출하여 초기화되는 새 링크에 관련된 자식 개체입니다. 대상 개체는 <paramref name="sourceProperty" /> 매개 변수로 식별된 형식의 하위 형식이어야 합니다. <paramref name="target" />이 null로 설정된 경우 이 호출은 링크 삭제 작업을 나타냅니다.</param>
        <summary>지정된 개체 간에 새 링크가 있고 이 링크가 <paramref name="sourceProperty" /> 매개 변수로 지정한 속성으로 표시된다는 것을 <see cref="T:System.Data.Services.Client.DataServiceContext" />에 알립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 링크는 <xref:System.Data.Services.Client.EntityStates.Added> 상태로 만들어집니다. <xref:System.Data.Services.Client.DataServiceContext>는 다음에 <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>를 호출할 때 데이터 서비스로 전송할 새로 만든 링크 집합에 이 새 링크를 추가합니다.  
  
 대상 인수가 null인 경우 sourceProperty로 표현된 링크를 제거하거나 삭제해야 합니다(링크는 <xref:System.Data.Services.Client.EntityStates.Deleted> 상태로 전환됨).  
  
 링크는 단방향 관계입니다. 후방 포인터 양방향 연결을 나타내는 있으면이 메서드를 호출 해야 다시에 알리기 위해는 <xref:System.Data.Services.Client.DataServiceContext> 두 번째 링크  
  
 이 메서드에서는 다중성이 1인 관계 즉, 원본 속성이 개체 참조인 관계에만 링크를 추가할 수 있습니다. 예를 들어 `Person` 클래스가 `Person` 속성을 통해 다른 `Friend`에 연결된 경우 이 호출을 사용하여 `Person`을 `Person`에 연결할 수 있습니다. 표시된 `sourceProperty`의 카디널리티 관계가 1보다 큰 경우 이 메서드는 예외를 throw합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A> 및 <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> 메서드를 사용하여 관계를 정의하는 링크를 만드는 방법을 보여 줍니다. 이 예제에서는 `Order_Details` 개체에 대한 탐색 속성도 명시적으로 설정됩니다.  
  
 [!code-csharp[Astoria Northwind Client#AddOrderDetailToOrder](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#addorderdetailtoorder)]
 [!code-vb[Astoria Northwind Client#AddOrderDetailToOrder](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#addorderdetailtoorder)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />, <paramref name="sourceProperty" /> 또는 <paramref name="target" />가 null인 경우.</exception>
        <exception cref="T:System.InvalidOperationException">지정된 링크가 이미 있는 경우  
  
또는 
<paramref name="source" /> 또는 <paramref name="target" />으로 공급되는 개체가 <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> 또는 <see cref="F:System.Data.Services.Client.EntityStates.Deleted" /> 상태에 있는 경우.  
  
또는 
<paramref name="sourceProperty" />가 관련된 단일 개체에 대한 참조를 정의하는 탐색 속성이 아닌 경우.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSaveStream">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>새 데이터 스트림을 엔터티의 이진 속성으로 설정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSaveStream">
      <MemberSignature Language="C#" Value="public void SetSaveStream (object entity, System.IO.Stream stream, bool closeStream, System.Data.Services.Client.DataServiceRequestArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSaveStream(object entity, class System.IO.Stream stream, bool closeStream, class System.Data.Services.Client.DataServiceRequestArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SetSaveStream(System.Object,System.IO.Stream,System.Boolean,System.Data.Services.Client.DataServiceRequestArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSaveStream(System::Object ^ entity, System::IO::Stream ^ stream, bool closeStream, System::Data::Services::Client::DataServiceRequestArgs ^ args);" />
      <MemberSignature Language="F#" Value="member this.SetSaveStream : obj * System.IO.Stream * bool * System.Data.Services.Client.DataServiceRequestArgs -&gt; unit" Usage="dataServiceContext.SetSaveStream (entity, stream, closeStream, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="closeStream" Type="System.Boolean" />
        <Parameter Name="args" Type="System.Data.Services.Client.DataServiceRequestArgs" />
      </Parameters>
      <Docs>
        <param name="entity">데이터 스트림이 할당되는 이진 속성이 있는 엔터티입니다.</param>
        <param name="stream">이진 데이터를 읽어올 <see cref="T:System.IO.Stream" />입니다.</param>
        <param name="closeStream"><see cref="T:System.Boolean" /> 메서드가 완료될 때 데이터 스트림이 닫히는지 여부를 결정하는 <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" /> 값입니다.</param>
        <param name="args">HTTP 요청 메시지에 대한 설정이 포함된 <see cref="T:System.Data.Services.Client.DataServiceRequestArgs" /> 클래스의 인스턴스입니다.</param>
        <summary>요청 메시지에 지정된 설정을 사용하여 새 데이터 스트림을 엔터티의 이진 속성으로 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> 와 연결 된 미디어 리소스인 이진 스트림을 설정 하는 메서드를 `entity`, 미디어 링크 항목 이라고 합니다.  
  
 <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> 메서드를 호출하면 엔터티가 미디어 링크 항목으로 표시됩니다. 또한 다음에 <xref:System.Data.Services.Client.EntityStates.Modified> 메서드를 호출할 때 해당 스트림이 데이터 서비스에 전송되도록 엔터티 상태가 <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>가 설정됩니다.  
  
 <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> 메서드는 <xref:System.IO.Stream>을 끝까지 읽습니다. <xref:System.IO.Stream.Seek%2A> 작업은 <xref:System.IO.Stream>에서 시도되지 않습니다.  
  
 때 `closeStream` 됩니다 `true`, <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> 메서드를 반환 하기 전에 스트림을 닫습니다. 오류가 발생하고 스트림을 읽을 때도 스트림이 닫힙니다.  
  
 `entity`에 <xref:System.Data.Services.Client.MediaEntryAttribute>가 적용되면 미디어 리소스는 데이터 스트림이 될 수 없습니다. `entity`에 대한 데이터 스트림을 설정하기 전에 이 특성을 제거하십시오.  
  
 `args`에 설정된 헤더에 대해서는 유효성 검사가 수행되지 않습니다. 따라서 요청의 의미를 변경하는 방식으로 HTTP 헤더를 변경하지 마십시오.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">메서드에 제공된 하나 이상의 매개 변수가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="entity" />가 이 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 인스턴스에 의해 추적되지 않는 경우  
  
또는 
<paramref name="entity" />에 <see cref="T:System.Data.Services.Client.MediaEntryAttribute" />가 적용된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SetSaveStream">
      <MemberSignature Language="C#" Value="public void SetSaveStream (object entity, System.IO.Stream stream, bool closeStream, string contentType, string slug);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSaveStream(object entity, class System.IO.Stream stream, bool closeStream, string contentType, string slug) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SetSaveStream(System.Object,System.IO.Stream,System.Boolean,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSaveStream(System::Object ^ entity, System::IO::Stream ^ stream, bool closeStream, System::String ^ contentType, System::String ^ slug);" />
      <MemberSignature Language="F#" Value="member this.SetSaveStream : obj * System.IO.Stream * bool * string * string -&gt; unit" Usage="dataServiceContext.SetSaveStream (entity, stream, closeStream, contentType, slug)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="closeStream" Type="System.Boolean" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="slug" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entity">데이터 스트림이 할당되는 이진 속성이 있는 엔터티입니다.</param>
        <param name="stream">이진 데이터를 읽어올 <see cref="T:System.IO.Stream" />입니다.</param>
        <param name="closeStream"><see cref="T:System.Boolean" /> 메서드가 완료될 때 데이터 스트림이 닫히는지 여부를 결정하는 <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" /> 값입니다.</param>
        <param name="contentType">요청 메시지에 대한 Content-Type 헤더 값입니다.</param>
        <param name="slug">요청 메시지에 대한 Slug 헤더 값입니다.</param>
        <summary>새 데이터 스트림을 엔터티의 이진 속성으로 설정합니다. 지정된 Content-Type 및 Slug 헤더가 요청 메시지에 포함됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> 와 연결 된 미디어 리소스인 이진 스트림을 설정 하는 메서드를 `entity`, 미디어 링크 항목 이라고 합니다.  
  
 <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> 메서드를 호출하면 엔터티가 미디어 링크 항목으로 표시됩니다. 또한 다음에 <xref:System.Data.Services.Client.EntityStates.Modified> 메서드를 호출할 때 해당 스트림이 데이터 서비스에 전송되도록 엔터티 상태가 <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>가 설정됩니다.  
  
 <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> 메서드는 <xref:System.IO.Stream>을 끝까지 읽습니다. <xref:System.IO.Stream.Seek%2A> 작업은 <xref:System.IO.Stream>에서 시도되지 않습니다.  
  
 때 `closeStream` 됩니다 `true`, <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> 메서드를 반환 하기 전에 스트림을 닫습니다. 오류가 발생하고 스트림을 읽을 때도 스트림이 닫힙니다.  
  
 `entity`에 <xref:System.Data.Services.Client.MediaEntryAttribute>가 적용되면 미디어 리소스는 데이터 스트림이 될 수 없습니다. `entity`에 대한 데이터 스트림을 설정하기 전에 이 특성을 제거하십시오.  
  
 `contentType` 및 `slug`에 설정된 헤더에 대해서는 유효성 검사가 수행되지 않습니다. 따라서 요청의 의미를 변경하는 방식으로 이러한 HTTP 헤더를 변경하지 마십시오.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">메서드에 제공된 하나 이상의 매개 변수가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="entity" />가 이 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 인스턴스에 의해 추적되지 않는 경우  
  
또는 
<see langword="entity" />에 <see cref="T:System.Data.Services.Client.MediaEntryAttribute" />가 적용된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Data.Services.Client.DataServiceContext.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 서비스에 대한 기본 HTTP 요청에 사용하는 제한 시간 옵션을 가져오거나 설정합니다.</summary>
        <value>서비스 요청의 제한 시간이 만료되기 전까지의 시간 간격을 나타내는 정수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 값이 전달 된 <xref:System.Net.HttpWebRequest.Timeout> 속성은 기본 <xref:System.Net.HttpWebRequest> 개체입니다. 대상 데이터 서비스에 대해 실행한 쿼리 또는 업데이트 작업이 요청에 적용되려면 먼저 이 값을 설정해야 합니다. 데이터 서비스에 대한 요청 간에 값을 변경할 수 없지만 새 값은 다음 데이터 서비스 요청에서 적용됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntity&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetEntity&lt;TEntity&gt; (Uri identity, out TEntity entity) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEntity&lt;class TEntity&gt;(class System.Uri identity, [out] !!TEntity&amp; entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.TryGetEntity``1(System.Uri,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEntity(Of TEntity As Class) (identity As Uri, ByRef entity As TEntity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class bool TryGetEntity(Uri ^ identity, [Runtime::InteropServices::Out] TEntity % entity);" />
      <MemberSignature Language="F#" Value="member this.TryGetEntity : Uri *  -&gt; bool (requires 'Entity : null)" Usage="dataServiceContext.TryGetEntity (identity, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.Uri" />
        <Parameter Name="entity" Type="TEntity" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">엔터티의 형식입니다.</typeparam>
        <param name="identity">검색할 추적되는 엔터티의 URI입니다.</param>
        <param name="entity">검색할 엔터티입니다.</param>
        <summary><see cref="T:System.Data.Services.Client.DataServiceContext" />에서 추적하는 엔터티의 URI에 대한 참조를 통해 이 엔터티에 대한 검색을 테스트합니다.</summary>
        <returns><paramref name="resourceUri" />에서 엔터티를 찾으면 엔터티가 출력 매개 변수 <paramref name="entity" />에 반환되고 true가 반환됩니다. 엔터티가 없으면 false가 반환됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 엔터티가 <xref:System.Data.Services.Client.EntityStates.Detached> 또는 <xref:System.Data.Services.Client.EntityStates.Added> 상태인 경우에는 URI가 없으므로 이 메서드를 사용하여 검색할 수 없습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" />가 <see langword="null" />일 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetUri">
      <MemberSignature Language="C#" Value="public bool TryGetUri (object entity, out Uri identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetUri(object entity, [out] class System.Uri&amp; identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.TryGetUri(System.Object,System.Uri@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetUri (entity As Object, ByRef identity As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetUri(System::Object ^ entity, [Runtime::InteropServices::Out] Uri ^ % identity);" />
      <MemberSignature Language="F#" Value="member this.TryGetUri : obj *  -&gt; bool" Usage="dataServiceContext.TryGetUri (entity, identity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="identity" Type="System.Uri" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entity"><paramref name="identity" />로 식별된 엔터티입니다.</param>
        <param name="identity">엔터티의 URI입니다.</param>
        <summary>지정된 엔터티와 연결된 정식 URI(사용 가능한 경우)를 검색합니다.</summary>
        <returns>정식 URI가 출력 매개 변수에 반환되는 경우 true를 반환합니다. 지정된 엔터티가 <see cref="T:System.Data.Services.Client.DataServiceContext" />에서 추적되지 않거나 추가된 상태인 경우 URI를 사용할 수 없으며 false가 반환됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.EntityStates.Added> 상태의 개체에는 아직 URI가 없습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="entity" />가 <see langword="null" />일 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="TypeScheme">
      <MemberSignature Language="C#" Value="public Uri TypeScheme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri TypeScheme" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.TypeScheme" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeScheme As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ TypeScheme { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeScheme : Uri with get, set" Usage="System.Data.Services.Client.DataServiceContext.TypeScheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서비스에서 사용하는 형식 스키마를 나타내는 데 사용되는 URI를 가져오거나 설정합니다.</summary>
        <value>형식 스키마가 들어 있는 <see cref="T:System.Uri" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Atom 페이로드에서 반환 값은 엔터티 형식을 찾는 데 사용되는 범주 요소의 스키마 특성입니다. 기본값은 `http://schemas.microsoft.com/ado/2007/08/dataservices/scheme`입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateObject">
      <MemberSignature Language="C#" Value="public void UpdateObject (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateObject(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.UpdateObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateObject (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateObject(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.UpdateObject : obj -&gt; unit" Usage="dataServiceContext.UpdateObject entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity"><see cref="F:System.Data.Services.Client.EntityStates.Modified" /> 상태에 할당할 추적되는 엔터티입니다.</param>
        <summary><see cref="T:System.Data.Services.Client.DataServiceContext" />에서 지정한 개체의 상태를 <see cref="F:System.Data.Services.Client.EntityStates.Modified" />로 변경합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 기존 개체를 검색하고 수정한 다음 <xref:System.Data.Services.Client.DataServiceContext.UpdateObject%2A>의 <xref:System.Data.Services.Client.DataServiceContext> 메서드를 호출하여 컨텍스트의 항목을 업데이트됨으로 표시합니다. <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>를 호출하면 HTTP 병합 메시지가 데이터 서비스로 전송됩니다. 이 예제에서는 <xref:System.Data.Services.Client.DataServiceContext> 완료 하면 만들어지는 Northwind 데이터 서비스에 따라 서비스 참조 추가 도구에서 생성 된 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#ModifyCustomer](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#modifycustomer)]
 [!code-vb[Astoria Northwind Client#ModifyCustomer](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#modifycustomer)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="entity" />가 <see langword="null" />일 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="entity" />는 <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> 상태에 있습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="UsePostTunneling">
      <MemberSignature Language="C#" Value="public bool UsePostTunneling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePostTunneling" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.UsePostTunneling" />
      <MemberSignature Language="VB.NET" Value="Public Property UsePostTunneling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsePostTunneling { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsePostTunneling : bool with get, set" Usage="System.Data.Services.Client.DataServiceContext.UsePostTunneling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사후 터널링을 사용할지 여부를 나타내는 부울 값을 가져오거나 설정합니다.</summary>
        <value>사후 터널링을 사용할지 여부를 나타내는 부울 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 데이터 서비스에 전송된 만들기, 업데이트 및 삭제 요청에서 프로토콜의 사후 터널링 기능을 사용할지 여부를 제어합니다. True로 설정하면 터널링이 사용되고, False로 설정하면 표준 HTTP 메서드가 사용됩니다.  
  
 이 속성의 기본값은 false입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WritingEntity">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; WritingEntity;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; WritingEntity" />
      <MemberSignature Language="DocId" Value="E:System.Data.Services.Client.DataServiceContext.WritingEntity" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WritingEntity As EventHandler(Of ReadingWritingEntityEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Data::Services::Client::ReadingWritingEntityEventArgs ^&gt; ^ WritingEntity;" />
      <MemberSignature Language="F#" Value="member this.WritingEntity : EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; " Usage="member this.WritingEntity : System.EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>엔터티가 요청 메시지에서 XML로 완전히 serialize된 후 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceContext.WritingEntity> 이벤트를 처리하면 전송되기 전에 요청의 XML을 변경할 수 있습니다.  
  
 제공된 <xref:System.Data.Services.Client.DataServiceContext.WritingEntity> 값에 <xref:System.Data.Services.Client.DataServiceContext.BeginSaveChanges%28System.Data.Services.Client.SaveChangesOptions%2CSystem.AsyncCallback%2CSystem.Object%29>를 포함하지 않고 <xref:System.Data.Services.Client.SaveChangesOptions.Batch>를 호출한 경우에는 다른 스레드에서 <xref:System.Data.Services.Client.SaveChangesOptions> 이벤트가 발생할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>