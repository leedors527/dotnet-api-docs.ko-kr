<Type Name="EntityPropertyMappingAttribute" FullName="System.Data.Services.Common.EntityPropertyMappingAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1e8b394044514382629ff071fc98555fc17b3d27" /><Meta Name="ms.sourcegitcommit" Value="e28b7b371ead27d99e20387b8243f09b0cdb9fb3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/12/2019" /><Meta Name="ms.locfileid" Value="59541608" /></Metadata><TypeSignature Language="C#" Value="public sealed class EntityPropertyMappingAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EntityPropertyMappingAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.Common.EntityPropertyMappingAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityPropertyMappingAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityPropertyMappingAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type EntityPropertyMappingAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services.Client</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>WCF Data Services에서 반환하는 피드의 엔터티 요소와 엔터티 형식의 속성 간에 사용자 지정 매핑을 지정하는 특성입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute> 리플렉션 공급자의 데이터 모델에서 사용자 지정 피드 매핑을 정의 하는 데 사용 됩니다. 이 특성은 클래스를 생성 하는 데 사용 하는 메타 데이터를 데이터 모델의 피드 사용자 지정 매핑이 정의 되어 있는지를 나타내는 경우 생성 된 클라이언트 데이터 서비스 클래스에도 적용 됩니다. 이 정보는 클라이언트 만들기 하 고 사용자 지정 피드를 지 원하는 메시지를 사용할 수 있는지 확인 해야 합니다. 자세한 내용은 [사용자 지정 피드](~/docs/framework/data/wcf/feed-customization-wcf-data-services.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 두 속성 모두에 `Order` 형식 기존 피드 요소에 매핑됩니다. `Product` 형식의 `Item` 속성은 별도 네임스페이스에 있는 사용자 지정 피드 특성에 매핑됩니다.  
  
 [!code-csharp[Astoria Custom Feeds#CustomIQueryableFeeds](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_custom_feeds/cs/orderitems.svc.cs#customiqueryablefeeds)]
 [!code-vb[Astoria Custom Feeds#CustomIQueryableFeeds](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_custom_feeds/vb/orderitems.svc.vb#customiqueryablefeeds)]  
  
 위 예제에서는 URI `http://myservice/OrderItems.svc/Orders(0)?$expand=Items`에 대해 다음 결과를 반환합니다.  
  
 [!code-xml[Astoria Custom Feeds#IQueryableFeedResultInline](~/samples/snippets/xml/VS_Snippets_Misc/astoria_custom_feeds/xml/iqueryablefeedresultinline.xml#iqueryablefeedresultinline)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/7315c6d8-f452-4fb2-a0c1-76ab0593c146">방법: 리플렉션 공급자 (WCF Data Services)를 사용 하 여 데이터 서비스 만들기</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" />의 새 인스턴스를 만듭니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityPropertyMappingAttribute (string sourcePath, System.Data.Services.Common.SyndicationItemProperty targetSyndicationItem, System.Data.Services.Common.SyndicationTextContentKind targetTextContentKind, bool keepInContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sourcePath, valuetype System.Data.Services.Common.SyndicationItemProperty targetSyndicationItem, valuetype System.Data.Services.Common.SyndicationTextContentKind targetTextContentKind, bool keepInContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Common.EntityPropertyMappingAttribute.#ctor(System.String,System.Data.Services.Common.SyndicationItemProperty,System.Data.Services.Common.SyndicationTextContentKind,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourcePath As String, targetSyndicationItem As SyndicationItemProperty, targetTextContentKind As SyndicationTextContentKind, keepInContent As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityPropertyMappingAttribute(System::String ^ sourcePath, System::Data::Services::Common::SyndicationItemProperty targetSyndicationItem, System::Data::Services::Common::SyndicationTextContentKind targetTextContentKind, bool keepInContent);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Common.EntityPropertyMappingAttribute : string * System.Data.Services.Common.SyndicationItemProperty * System.Data.Services.Common.SyndicationTextContentKind * bool -&gt; System.Data.Services.Common.EntityPropertyMappingAttribute" Usage="new System.Data.Services.Common.EntityPropertyMappingAttribute (sourcePath, targetSyndicationItem, targetTextContentKind, keepInContent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourcePath" Type="System.String" />
        <Parameter Name="targetSyndicationItem" Type="System.Data.Services.Common.SyndicationItemProperty" />
        <Parameter Name="targetTextContentKind" Type="System.Data.Services.Common.SyndicationTextContentKind" />
        <Parameter Name="keepInContent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourcePath">피드 항목의 지정된 속성에 매핑되는 엔터티 형식의 속성 이름(문자열)입니다.</param>
        <param name="targetSyndicationItem">속성이 매핑되는 피드의 요소를 나타내는 <see cref="T:System.Data.Services.Common.SyndicationItemProperty" /> 값입니다. <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" />가 <see langword="null" />이 아닌 경우 이 값을 <c>None</c>으로 설정해야 합니다.</param>
        <param name="targetTextContentKind">피드에서 표시할 콘텐츠의 형식을 식별하는 <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetTextContentKind" /> 값입니다.</param>
        <param name="keepInContent">매핑될 속성이 해당 매핑 대상 위치와 피드의 콘텐츠 섹션에 모두 나타나야 하는 경우 <see langword="true" />인 부울 값입니다.</param>
        <summary><see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" />의 새 인스턴스를 만듭니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityPropertyMappingAttribute (string sourcePath, string targetPath, string targetNamespacePrefix, string targetNamespaceUri, bool keepInContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sourcePath, string targetPath, string targetNamespacePrefix, string targetNamespaceUri, bool keepInContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Common.EntityPropertyMappingAttribute.#ctor(System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourcePath As String, targetPath As String, targetNamespacePrefix As String, targetNamespaceUri As String, keepInContent As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityPropertyMappingAttribute(System::String ^ sourcePath, System::String ^ targetPath, System::String ^ targetNamespacePrefix, System::String ^ targetNamespaceUri, bool keepInContent);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Common.EntityPropertyMappingAttribute : string * string * string * string * bool -&gt; System.Data.Services.Common.EntityPropertyMappingAttribute" Usage="new System.Data.Services.Common.EntityPropertyMappingAttribute (sourcePath, targetPath, targetNamespacePrefix, targetNamespaceUri, keepInContent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourcePath" Type="System.String" />
        <Parameter Name="targetPath" Type="System.String" />
        <Parameter Name="targetNamespacePrefix" Type="System.String" />
        <Parameter Name="targetNamespaceUri" Type="System.String" />
        <Parameter Name="keepInContent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourcePath">피드에서 지정된 속성에 매핑되는 엔터티 형식(문자열)의 속성 이름입니다.</param>
        <param name="targetPath">속성이 매핑되는 결과 피드에서 문자열 형식인 대상의 이름입니다.</param>
        <param name="targetNamespacePrefix">이 매개 변수는 <paramref name="targetNamespaceUri" />와 함께 <paramref name="targetPath" /> 요소가 배치될 네임스페이스를 지정합니다.</param>
        <param name="targetNamespaceUri"><c>targetName</c> 속성으로 지정된 요소의 네임스페이스 URI를 문자열로 지정합니다.</param>
        <param name="keepInContent">매핑될 속성이 해당 매핑 대상 위치와 피드의 콘텐츠 섹션에 모두 나타나야 하는 경우 <see langword="true" />인 부울 값입니다.</param>
        <summary>속성을 사용자 지정 피드 요소에 매핑하는 <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" /> 클래스의 인스턴스를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 모두 `targetNamespacePrefix` 나 `targetNamespaceUri` 지정 된 된 `targetName` 기본 네임 스페이스에 배치 됩니다. 경우 `targetNamespacePrefix` 지정 하지 않으면 접두사를 자동으로 생성 됩니다. 하는 경우 `targetNamespacePrefix` 를 지정 하지만 `targetNamespaceUri` 지정 하지 않으면 생성 시 예외가 throw 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepInContent">
      <MemberSignature Language="C#" Value="public bool KeepInContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInContent" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.KeepInContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeepInContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInContent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.KeepInContent : bool" Usage="System.Data.Services.Common.EntityPropertyMappingAttribute.KeepInContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>피드의 콘텐츠 섹션과 매핑된 위치에 속성 값이 모두 반복되어야 하는지 여부를 나타내는 부울 값을 가져옵니다.</summary>
        <value>속성이 피드의 두 위치에 모두 매핑되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />인 <see cref="T:System.Boolean" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 값 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.KeepInContent%2A> 됩니다 `true`, 피드는 이전 버전과 호환 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] 프로토콜 버전 1.0 사용 하는 클라이언트 응용 프로그램입니다. 경우 값 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.KeepInContent%2A>'은 `false`, 데이터 서비스에서 사용 되는 프로토콜 버전 2.0 이상 버전 이어야 합니다. 자세한 내용은 [데이터 서비스 버전 관리](~/docs/framework/data/wcf/data-service-versioning-wcf-data-services.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourcePath">
      <MemberSignature Language="C#" Value="public string SourcePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourcePath" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourcePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourcePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SourcePath : string" Usage="System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>피드의 지정된 요소에 매핑될 신디케이션 항목의 속성 이름을 가져옵니다.</summary>
        <value>속성 이름을 포함하는 문자열 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath%2A> 속성은 복합 형식을 직접 참조할 수 없습니다. 복합 형식의 경우 속성 이름이 백슬래시(`/`) 문자로 구분되는 경로 식을 사용해야 합니다. 엔터티 형식에 대 한 다음 값은 허용 하는 예를 들어 `Person` 정수 속성을 사용 하 여 `Age` 복합 속성 및 `Address`:  
  
-   `Age`  
  
-   `Address/Street`  
  
 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath%2A> 속성은 공백이나 속성 이름에 사용할 수 없는 다른 문자가 포함된 값으로 설정할 수 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNamespacePrefix">
      <MemberSignature Language="C#" Value="public string TargetNamespacePrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetNamespacePrefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetNamespacePrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetNamespacePrefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetNamespacePrefix : string" Usage="System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri" />와 함께 <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" /> 요소가 존재하는 네임스페이스를 지정하는 문자열 값을 가져옵니다.</summary>
        <value>대상 네임스페이스 접두사를 포함하는 문자열 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 모두 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> 나 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> 지정 된 된 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> 기본 네임 스페이스에 배치 됩니다. 경우 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> 지정 하지 않으면 접두사를 자동으로 생성 됩니다. 하는 경우 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> 를 지정 하지만 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> 지정 하지 않으면 생성 시 예외가 throw 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNamespaceUri">
      <MemberSignature Language="C#" Value="public string TargetNamespaceUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetNamespaceUri" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetNamespaceUri As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetNamespaceUri { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetNamespaceUri : string" Usage="System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" /> 속성으로 지정된 요소의 네임스페이스 URI를 지정하는 문자열 값을 가져옵니다.</summary>
        <value>네임스페이스 URI를 포함하는 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 배포 이외의 요소/특성을 매핑할 경우이 속성은 대상 요소/특성에 대 한 네임 스페이스입니다.  
  
 모두 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> 나 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> 지정 된 된 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> 기본 네임 스페이스에 배치 됩니다. 경우 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> 지정 하지 않으면 접두사를 자동으로 생성 됩니다. 하는 경우 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> 를 지정 하지만 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> 지정 하지 않으면 생성 시 예외가 throw 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetPath">
      <MemberSignature Language="C#" Value="public string TargetPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetPath" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetPath : string" Usage="System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>속성이 매핑되는 피드의 사용자 지정 대상 이름을 가져옵니다.</summary>
        <value>대상 XML 요소나 특성을 포함하는 문자열 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> 속성을 설정 합니다 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri%2A> 및 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix%2A> 속성도 설정 해야 합니다.  
  
 값 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> 이어야 합니다 `null` (`Nothing` Visual Basic의) 경우의 값을 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetSyndicationItem%2A> 속성 이외의 다른 항목은 <xref:System.Data.Services.Common.SyndicationItemProperty.CustomProperty>합니다.  
  
 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> 중첩 된 요소가 백슬래시 구분 되는 경로 식 이어야 합니다 (`/`) 및 앰퍼샌드 특성이 지정 됩니다 (`@`). 다음 예제에서 `UnitsInStock/@ReorderLevel` 문자열은 루트 항목 요소의 자식 요소 `ReorderLevel`에 대한 `UnitsInStock` 특성에 속성 값을 매핑합니다.  
  
 [!code-xml[Astoria Custom Feeds#EdmFeedMappedToAttributeSpecific](~/samples/snippets/xml/VS_Snippets_Misc/astoria_custom_feeds/xml/northwind.csdl#edmfeedmappedtoattributespecific)]  
  
 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> 속성에는 공백을 포함할 수 없습니다.  
  
 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> 속성은 true XPath 식으로 표현 되지 않지만 올바른 형식의 XML 요소 및 특성에 지정 된 요소 및 특성 이름을 나타내야 합니다. 잘못 된 값에는 데이터 서비스가 초기화 될 때 발생 하는 예외가 발생 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetSyndicationItem">
      <MemberSignature Language="C#" Value="public System.Data.Services.Common.SyndicationItemProperty TargetSyndicationItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Services.Common.SyndicationItemProperty TargetSyndicationItem" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetSyndicationItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetSyndicationItem As SyndicationItemProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Common::SyndicationItemProperty TargetSyndicationItem { System::Data::Services::Common::SyndicationItemProperty get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetSyndicationItem : System.Data.Services.Common.SyndicationItemProperty" Usage="System.Data.Services.Common.EntityPropertyMappingAttribute.TargetSyndicationItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.Common.SyndicationItemProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> 클래스에서 속성을 가져옵니다.</summary>
        <value><see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 배포 요소를 매핑할 경우이 속성은 배포 항목의 이름입니다.  
  
 이 값 설정 해야 합니다 `None` 경우는 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath%2A> null이 아닙니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetTextContentKind">
      <MemberSignature Language="C#" Value="public System.Data.Services.Common.SyndicationTextContentKind TargetTextContentKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Services.Common.SyndicationTextContentKind TargetTextContentKind" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetTextContentKind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetTextContentKind As SyndicationTextContentKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Common::SyndicationTextContentKind TargetTextContentKind { System::Data::Services::Common::SyndicationTextContentKind get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetTextContentKind : System.Data.Services.Common.SyndicationTextContentKind" Usage="System.Data.Services.Common.EntityPropertyMappingAttribute.TargetTextContentKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.Common.SyndicationTextContentKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" />에 의해 매핑된 속성의 콘텐츠 형식을 가져옵니다.</summary>
        <value>피드 요소의 콘텐츠 형식을 나타내는 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 배포 콘텐츠를 매핑할 경우이 속성은 배포 항목의 콘텐츠 형식입니다.  
  
 <xref:System.Data.Services.Common.SyndicationTextContentKind.Xhtml> 특성의 <xref:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetTextContentKind%2A> 값을 지정하는 경우 속성 값에 올바른 형식의 XML이 포함되도록 해야 합니다. 데이터 서비스는 변환을 수행하지 않고 값을 반환합니다. 반환된 XML의 모든 XML 요소 접두사에 매핑된 피드에 정의된 네임스페이스 URI 및 접두사가 있는지도 확인해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>