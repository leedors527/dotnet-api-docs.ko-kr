<Type Name="SqlCommand" FullName="System.Data.SqlClient.SqlCommand">
  <Metadata><Meta Name="ms.openlocfilehash" Value="011731ef41975cacd6879091c7f60cc0673f2c4f" /><Meta Name="ms.sourcegitcommit" Value="2d0c7dc45e0d0cebcef58c1b1fb3d5c65bfaa866" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/11/2019" /><Meta Name="ms.locfileid" Value="59503647" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlCommand : System.Data.Common.DbCommand, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlCommand extends System.Data.Common.DbCommand implements class System.Data.IDbCommand, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlCommand&#xA;Inherits DbCommand&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlCommand sealed : System::Data::Common::DbCommand, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type SqlCommand = class&#xA;    inherit DbCommand&#xA;    interface IDbCommand&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommand</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDbCommand</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("RecordsAffected")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IDesigner")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.ToolboxItem("System.Drawing.Design.ToolboxItem, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItem(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IDesigner")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.ToolboxItem("System.Drawing.Design.ToolboxItem, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>SQL Server 데이터베이스에 대해 실행할 Transact-SQL 문이나 저장 프로시저를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스가 <xref:System.Data.SqlClient.SqlCommand> 만들어지면 읽기/쓰기 속성은 초기 값으로 설정 됩니다. 이러한 값의 목록을 보려면 참조는 <xref:System.Data.SqlClient.SqlCommand> 생성자입니다.  
  
 <xref:System.Data.SqlClient.SqlCommand> SQL Server 데이터베이스에서 명령을 실행 하기 위한 다음 메서드를 제공 합니다.  
  
|항목|설명|  
|----------|-----------------|  
|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>|이 설명 하는 저장된 프로시저의 Transact-sql 문의 비동기 실행을 시작 <xref:System.Data.SqlClient.SqlCommand>, 일반적으로 INSERT, DELETE, UPDATE, 등의 명령을 실행 하 고 SET 문입니다. 호출할 때마다 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 를 호출 하 여 이루어야 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 일반적으로 별도 스레드에서 작업을 종료 하는 합니다.|  
|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>|이 설명 하는 저장된 프로시저의 Transact-sql 문의 비동기 실행을 시작 <xref:System.Data.SqlClient.SqlCommand> 서버에서 설정 하는 하나 이상의 결과 검색 합니다. 호출할 때마다 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 를 호출 하 여 이루어야 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 일반적으로 별도 스레드에서 작업을 종료 하는 합니다.|  
|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>|이 <xref:System.Data.SqlClient.SqlCommand>가 설명하는 저장 프로시저 또는 Transact-SQL 문의 비동기 실행을 시작합니다. 호출할 때마다 `BeginExecuteXmlReader` 를 호출 하 여 쌍으로 연결할 수 있어야 합니다 `EndExecuteXmlReader`에 별도 스레드에서 일반적으로 작업을 종료 하 고 반환 하는 <xref:System.Xml.XmlReader> 개체입니다.|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>|행을 반환 하는 명령을 실행 합니다. 성능 향상된을 위해 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> TRANSACT-SQL을 사용 하 여 명령을 호출 `sp_executesql` 시스템 저장 프로시저입니다. 따라서 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 의 원하는 효과 사용 하는 경우 없을 TRANSACT-SQL SET 문과 같은 명령을 실행 합니다.|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>|TRANSACT-SQL INSERT, DELETE, UPDATE 및 SET 문과 같은 명령을 실행합니다.|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>|데이터베이스에서 단일 값 (예를 들어 집계 값)을 검색합니다.|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>를 <xref:System.Data.SqlClient.SqlCommand.Connection%2A>에 보내고, <xref:System.Xml.XmlReader> 개체를 빌드합니다.|  
  
 다시 설정할 수 있습니다 합니다 <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 속성 및 재사용을 <xref:System.Data.SqlClient.SqlCommand> 개체입니다. 그러나를 닫아야는 <xref:System.Data.SqlClient.SqlDataReader> 전에 이전 또는 새 명령을 실행할 수 있습니다.  
  
 경우는 <xref:System.Data.SqlClient.SqlException> 메서드를 실행 하 여 생성 되는 <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlConnection> 심각도 19 이하인 경우 열린 상태로 유지 됩니다. 서버 일반적으로 닫습니다 심각도 수준이 20 이상일 경우는 <xref:System.Data.SqlClient.SqlConnection>합니다. 그러나 사용자는 연결을 다시 열고 계속할 수 있습니다.  
  
> [!NOTE]
>  무명, 라고도 서 수 매개 변수는 SQL Server.NET Framework 데이터 공급자가 지원 되지 않습니다.  
  
   
  
## Examples  
 다음 예제는 <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, 및 <xref:System.Data.SqlClient.SqlDataReader>합니다. 이 예제에서는 콘솔에 작성 된 데이터를 읽습니다. 마지막를 <xref:System.Data.SqlClient.SqlDataReader> 차례로 합니다 <xref:System.Data.SqlClient.SqlConnection> 종료할는 `Using` 코드 블록입니다.  
  
 [!code-csharp[Classic WebData SqlCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/VB/source.vb#1)]  
  
 다음 샘플에는 만들고 다양 한 SqlCommand 개체를 실행 하는 방법을 보여 줍니다.  
  
 먼저 다음 스크립트를 실행 하 여 예제 데이터베이스를 만들어야 합니다.  
  
```  
USE [master]  
GO  
  
CREATE DATABASE [MySchool]  
GO  
  
USE [MySchool]  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE procedure [dbo].[CourseExtInfo] @CourseId int  
as  
select c.CourseID,c.Title,c.Credits,d.Name as DepartmentName  
from Course as c left outer join Department as d on c.DepartmentID=d.DepartmentID  
where c.CourseID=@CourseId  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
create procedure [dbo].[DepartmentInfo] @DepartmentId int,@CourseCount int output  
as  
select @CourseCount=Count(c.CourseID)  
from course as c  
where c.DepartmentID=@DepartmentId  
  
select d.DepartmentID,d.Name,d.Budget,d.StartDate,d.Administrator  
from Department as d  
where d.DepartmentID=@DepartmentId  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
Create PROCEDURE [dbo].[GetDepartmentsOfSpecifiedYear]   
@Year int,@BudgetSum money output  
AS  
BEGIN  
        SELECT @BudgetSum=SUM([Budget])  
  FROM [MySchool].[dbo].[Department]  
  Where YEAR([StartDate])=@Year   
  
SELECT [DepartmentID]  
      ,[Name]  
      ,[Budget]  
      ,[StartDate]  
      ,[Administrator]  
  FROM [MySchool].[dbo].[Department]  
  Where YEAR([StartDate])=@Year  
  
END  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Course]([CourseID] [nvarchar](10) NOT NULL,  
[Year] [smallint] NOT NULL,  
[Title] [nvarchar](100) NOT NULL,  
[Credits] [int] NOT NULL,  
[DepartmentID] [int] NOT NULL,  
 CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   
(  
[CourseID] ASC,  
[Year] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Department]([DepartmentID] [int] IDENTITY(1,1) NOT NULL,  
[Name] [nvarchar](50) NOT NULL,  
[Budget] [money] NOT NULL,  
[StartDate] [datetime] NOT NULL,  
[Administrator] [int] NULL,  
 CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   
(  
[DepartmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Person]([PersonID] [int] IDENTITY(1,1) NOT NULL,  
[LastName] [nvarchar](50) NOT NULL,  
[FirstName] [nvarchar](50) NOT NULL,  
[HireDate] [datetime] NULL,  
[EnrollmentDate] [datetime] NULL,  
 CONSTRAINT [PK_School.Student] PRIMARY KEY CLUSTERED   
(  
[PersonID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[StudentGrade]([EnrollmentID] [int] IDENTITY(1,1) NOT NULL,  
[CourseID] [nvarchar](10) NOT NULL,  
[StudentID] [int] NOT NULL,  
[Grade] [decimal](3, 2) NOT NULL,  
 CONSTRAINT [PK_StudentGrade] PRIMARY KEY CLUSTERED   
(  
[EnrollmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
create view [dbo].[EnglishCourse]  
as  
select c.CourseID,c.Title,c.Credits,c.DepartmentID  
from Course as c join Department as d on c.DepartmentID=d.DepartmentID  
where d.Name=N'English'  
  
GO  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  
SET IDENTITY_INSERT [dbo].[Department] ON   
  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  
SET IDENTITY_INSERT [dbo].[Department] OFF  
SET IDENTITY_INSERT [dbo].[Person] ON   
  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (1, N'Hu', N'Nan', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (2, N'Norman', N'Laura', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (3, N'Olivotto', N'Nino', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (4, N'Anand', N'Arturo', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (5, N'Jai', N'Damien', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (6, N'Holt', N'Roger', CAST(0x000097F100000000 AS DateTime), NULL)  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (7, N'Martin', N'Randall', CAST(0x00008B1A00000000 AS DateTime), NULL)  
SET IDENTITY_INSERT [dbo].[Person] OFF  
SET IDENTITY_INSERT [dbo].[StudentGrade] ON   
  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (1, N'C1045', 1, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (2, N'C1045', 2, CAST(3.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (3, N'C1045', 3, CAST(2.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (4, N'C1045', 4, CAST(4.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (5, N'C1045', 5, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (6, N'C1061', 1, CAST(4.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (7, N'C1061', 3, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (8, N'C1061', 4, CAST(2.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (9, N'C1061', 5, CAST(1.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (10, N'C2021', 1, CAST(2.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (11, N'C2021', 2, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (12, N'C2021', 4, CAST(3.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (13, N'C2021', 5, CAST(3.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (14, N'C2042', 1, CAST(2.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (15, N'C2042', 2, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (16, N'C2042', 3, CAST(4.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (17, N'C2042', 5, CAST(3.00 AS Decimal(3, 2)))  
SET IDENTITY_INSERT [dbo].[StudentGrade] OFF  
ALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  
REFERENCES [dbo].[Department] ([DepartmentID])  
GO  
ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  
GO  
ALTER TABLE [dbo].[StudentGrade]  WITH CHECK ADD  CONSTRAINT [FK_StudentGrade_Student] FOREIGN KEY([StudentID])  
REFERENCES [dbo].[Person] ([PersonID])  
GO  
ALTER TABLE [dbo].[StudentGrade] CHECK CONSTRAINT [FK_StudentGrade_Student]  
GO  
```  
  
 다음으로 컴파일 및 다음을 실행 합니다.  
  
```  
using System;  
using System.Data;  
using System.Data.SqlClient;  
using System.Threading.Tasks;  
  
class Program {  
  
   static class SqlHelper {  
      // Set the connection, command, and then execute the command with non query.  
      public static Int32 ExecuteNonQuery(String connectionString, String commandText,  
          CommandType commandType, params SqlParameter[] parameters) {  
         using (SqlConnection conn = new SqlConnection(connectionString)) {  
            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  
               // There're three command types: StoredProcedure, Text, TableDirect. The TableDirect   
               // type is only for OLE DB.    
               cmd.CommandType = commandType;  
               cmd.Parameters.AddRange(parameters);  
  
               conn.Open();  
               return cmd.ExecuteNonQuery();  
            }  
         }  
      }  
  
      // Set the connection, command, and then execute the command and only return one value.  
      public static Object ExecuteScalar(String connectionString, String commandText,  
          CommandType commandType, params SqlParameter[] parameters) {  
         using (SqlConnection conn = new SqlConnection(connectionString)) {  
            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  
               cmd.CommandType = commandType;  
               cmd.Parameters.AddRange(parameters);  
  
               conn.Open();  
               return cmd.ExecuteScalar();  
            }  
         }  
      }  
  
      // Set the connection, command, and then execute the command with query and return the reader.  
      public static SqlDataReader ExecuteReader(String connectionString, String commandText,  
          CommandType commandType, params SqlParameter[] parameters) {  
         SqlConnection conn = new SqlConnection(connectionString);  
  
         using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  
            cmd.CommandType = commandType;  
            cmd.Parameters.AddRange(parameters);  
  
            conn.Open();  
            // When using CommandBehavior.CloseConnection, the connection will be closed when the   
            // IDataReader is closed.  
            SqlDataReader reader = cmd.ExecuteReader(CommandBehavior.CloseConnection);  
  
            return reader;  
         }  
      }  
   }  
  
   static void Main(string[] args) {  
      String connectionString = "Data Source=(local);Initial Catalog=MySchool;Integrated Security=True;Asynchronous Processing=true;";  
  
      CountCourses(connectionString, 2012);  
      Console.WriteLine();  
  
      Console.WriteLine("Following result is the departments that started from 2007:");  
      GetDepartments(connectionString, 2007);  
      Console.WriteLine();  
  
      Console.WriteLine("Add the credits when the credits of course is lower than 4.");  
      AddCredits(connectionString, 4);  
      Console.WriteLine();  
  
      Console.WriteLine("Please press any key to exit...");  
      Console.ReadKey();  
   }  
  
   static void CountCourses(String connectionString, Int32 year) {  
      String commandText = "Select Count([CourseID]) FROM [MySchool].[dbo].[Course] Where Year=@Year";  
      SqlParameter parameterYear = new SqlParameter("@Year", SqlDbType.Int);  
      parameterYear.Value = year;  
  
      Object oValue = SqlHelper.ExecuteScalar(connectionString, commandText, CommandType.Text, parameterYear);  
      Int32 count;  
      if (Int32.TryParse(oValue.ToString(), out count))  
         Console.WriteLine("There {0} {1} course{2} in {3}.", count > 1 ? "are" : "is", count, count > 1 ? "s" : null, year);  
   }  
  
   // Display the Departments that start from the specified year.  
   static void GetDepartments(String connectionString, Int32 year) {  
      String commandText = "dbo.GetDepartmentsOfSpecifiedYear";  
  
      // Specify the year of StartDate  
      SqlParameter parameterYear = new SqlParameter("@Year", SqlDbType.Int);  
      parameterYear.Value = year;  
  
      // When the direction of parameter is set as Output, you can get the value after   
      // executing the command.  
      SqlParameter parameterBudget = new SqlParameter("@BudgetSum", SqlDbType.Money);  
      parameterBudget.Direction = ParameterDirection.Output;  
  
      using (SqlDataReader reader = SqlHelper.ExecuteReader(connectionString, commandText,  
          CommandType.StoredProcedure, parameterYear, parameterBudget)) {  
         Console.WriteLine("{0,-20}{1,-20}{2,-20}{3,-20}", "Name", "Budget", "StartDate",  
             "Administrator");  
         while (reader.Read()) {  
            Console.WriteLine("{0,-20}{1,-20:C}{2,-20:d}{3,-20}", reader["Name"],  
                reader["Budget"], reader["StartDate"], reader["Administrator"]);  
         }  
      }  
      Console.WriteLine("{0,-20}{1,-20:C}", "Sum:", parameterBudget.Value);  
   }  
  
   // If credits of course is lower than the certain value, the method will add the credits.  
   static void AddCredits(String connectionString, Int32 creditsLow) {  
      String commandText = "Update [MySchool].[dbo].[Course] Set Credits=Credits+1 Where Credits<@Credits";  
  
      SqlParameter parameterCredits = new SqlParameter("@Credits", creditsLow);  
  
      Int32 rows = SqlHelper.ExecuteNonQuery(connectionString, commandText, CommandType.Text, parameterCredits);  
  
      Console.WriteLine("{0} row{1} {2} updated.", rows, rows > 1 ? "s" : null, rows > 1 ? "are" : "is");  
   }  
}  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 검색 및 수정</related>
    <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 및 ADO.NET</related>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Data.SqlClient.SqlCommand" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.SqlClient.SqlCommand" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 생성자는 모든 필드를 기본값으로 초기화합니다. 다음 표에서 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Data.SqlClient.SqlCommand>합니다.  
  
|속성|초기 값|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|빈 문자열 ("")|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|Null|  
  
 속성에 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.SqlClient.SqlCommand> 설정의 `CommandTimeout` 속성입니다.  
  
 [!code-csharp[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 검색 및 수정</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 및 ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand cmdText" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cmdText">쿼리 텍스트입니다.</param>
        <summary>쿼리 텍스트를 사용하여 <see cref="T:System.Data.SqlClient.SqlCommand" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스가 <xref:System.Data.SqlClient.SqlCommand> 만들어지면 다음 읽기/쓰기 속성 초기 값으로 설정 됩니다.  
  
|속성|초기 값|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|null|  
  
 속성에 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlCommand>연결 문자열과 명령 텍스트에 전달 합니다.  
  
 [!code-csharp[Classic WebData SqlCommand.SqlCommand1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.SqlCommand1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 연결 및 검색</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.SqlClient.SqlConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As SqlConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText, System::Data::SqlClient::SqlConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string * System.Data.SqlClient.SqlConnection -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand (cmdText, connection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
      </Parameters>
      <Docs>
        <param name="cmdText">쿼리 텍스트입니다.</param>
        <param name="connection">SQL Server의 인스턴스에 대한 연결을 나타내는 <see cref="T:System.Data.SqlClient.SqlConnection" />입니다.</param>
        <summary>쿼리의 텍스트와 <see cref="T:System.Data.SqlClient.SqlConnection" />을 사용하여 <see cref="T:System.Data.SqlClient.SqlCommand" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Data.SqlClient.SqlCommand>합니다.  
  
|속성|초기 값|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|새 <xref:System.Data.SqlClient.SqlConnection> 는 값을 `connection` 매개 변수입니다.|  
  
 관련된 속성을 설정 하 여 이러한 매개 변수 값을 변경할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlCommand> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData SqlCommand.SqlCommand2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.SqlCommand2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 연결 및 검색</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.SqlClient.SqlConnection connection, class System.Data.SqlClient.SqlTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As SqlConnection, transaction As SqlTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText, System::Data::SqlClient::SqlConnection ^ connection, System::Data::SqlClient::SqlTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string * System.Data.SqlClient.SqlConnection * System.Data.SqlClient.SqlTransaction -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand (cmdText, connection, transaction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
        <Parameter Name="transaction" Type="System.Data.SqlClient.SqlTransaction" />
      </Parameters>
      <Docs>
        <param name="cmdText">쿼리 텍스트입니다.</param>
        <param name="connection">SQL Server의 인스턴스에 대한 연결을 나타내는 <see cref="T:System.Data.SqlClient.SqlConnection" />입니다.</param>
        <param name="transaction"><see cref="T:System.Data.SqlClient.SqlCommand" />가 실행되는 <see cref="T:System.Data.SqlClient.SqlTransaction" />입니다.</param>
        <summary>쿼리의 텍스트, <see cref="T:System.Data.SqlClient.SqlConnection" /> 및 <see cref="T:System.Data.SqlClient.SqlTransaction" />을 사용하여 <see cref="T:System.Data.SqlClient.SqlCommand" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Data.SqlClient.SqlCommand>합니다.  
  
|속성|초기 값|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|30|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|새 <xref:System.Data.SqlClient.SqlConnection> 는 값을 `connection` 매개 변수입니다.|  
  
 관련된 속성을 설정 하 여 이러한 매개 변수 값을 변경할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 연결 및 검색</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction, System.Data.SqlClient.SqlCommandColumnEncryptionSetting columnEncryptionSetting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.SqlClient.SqlConnection connection, class System.Data.SqlClient.SqlTransaction transaction, valuetype System.Data.SqlClient.SqlCommandColumnEncryptionSetting columnEncryptionSetting) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As SqlConnection, transaction As SqlTransaction, columnEncryptionSetting As SqlCommandColumnEncryptionSetting)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText, System::Data::SqlClient::SqlConnection ^ connection, System::Data::SqlClient::SqlTransaction ^ transaction, System::Data::SqlClient::SqlCommandColumnEncryptionSetting columnEncryptionSetting);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string * System.Data.SqlClient.SqlConnection * System.Data.SqlClient.SqlTransaction * System.Data.SqlClient.SqlCommandColumnEncryptionSetting -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand (cmdText, connection, transaction, columnEncryptionSetting)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" Index="0" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" Index="1" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="transaction" Type="System.Data.SqlClient.SqlTransaction" Index="2" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="columnEncryptionSetting" Type="System.Data.SqlClient.SqlCommandColumnEncryptionSetting" Index="3" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="cmdText">쿼리 텍스트입니다.</param>
        <param name="connection">SQL Server의 인스턴스에 대한 연결을 나타내는 <see cref="T:System.Data.SqlClient.SqlConnection" />입니다.</param>
        <param name="transaction"><see cref="T:System.Data.SqlClient.SqlCommand" />가 실행되는 <see cref="T:System.Data.SqlClient.SqlTransaction" />입니다.</param>
        <param name="columnEncryptionSetting">암호화 설정입니다. 자세한 내용은 [항상 암호화](/sql/relational-databases/security/encryption/always-encrypted-database-engine)를 참조하세요.</param>
        <summary>지정된 명령 텍스트, 연결, 트랜잭션 및 암호화 설정을 사용하여 <see cref="T:System.Data.SqlClient.SqlCommand" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginExecuteNonQuery">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 <see cref="T:System.Data.SqlClient.SqlCommand" />가 설명하는 저장 프로시저 또는 Transact-SQL 문의 비동기 실행을 시작합니다.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginExecuteNonQuery">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteNonQuery () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteNonQuery();" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteNonQuery : unit -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteNonQuery " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Data.SqlClient.SqlCommand" />가 설명하는 저장 프로시저 또는 Transact-SQL 문의 비동기 실행을 시작합니다.</summary>
        <returns>결과를 폴링하거나 기다리는 데 사용하거나 또는 두 작업 모두 수행하는 데 사용할 수 있는 <see cref="T:System.IAsyncResult" />이며, 이 값은 영향을 받는 행의 수를 반환하는 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />를 호출할 때도 필요합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 비동기적으로 실행 하는 프로세스를 시작 하는 메서드를 [!INCLUDE[tsql](~/includes/tsql-md.md)] 문 또는 다른 작업은 문이 실행 되는 동안 동시에 실행할 수 있도록 행을 반환 하지 않는 저장된 프로시저입니다. 문이 완료 되 면 개발자 호출 해야 합니다는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 메서드 작업을 완료 합니다. 합니다 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 메서드가 즉시 반환 됩니다 (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> 영향을 주지 않습니다 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>), 해당 코드가 실행 될 때까지 있지만 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 메서드 호출에서 해당 실행 해서는 안 동기 또는 비동기 실행을 시작 하는 다른 모든 호출 같은 <xref:System.Data.SqlClient.SqlCommand> 개체입니다. 호출을 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 명령의 실행이 완료 되기 전에 <xref:System.Data.SqlClient.SqlCommand> 실행 완료 될 때까지 차단 하는 개체입니다.  
  
 참고는 명령 텍스트 및 매개 변수는 서버에 동기적으로 전송 합니다. 긴 명령이 나 많은 매개 변수를 보낼 경우이 메서드는 쓰기 작업 동안 차단할 수 있습니다. 메서드는 서버의 응답을 기다리지 않고 즉시 반환 된 명령이 전송 된 후, 읽기는 비동기적입니다.  
  
 이 오버 로드는 콜백 프로시저를 지원 하지 않으므로, 개발자가 해야 하거나 폴링 명령이 완료 되었는지 여부를 확인 하려면를 사용 하 여를 <xref:System.IAsyncResult.IsCompleted%2A> 의 속성을 <xref:System.IAsyncResult> 반환한는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> ; 메서드 또는 완료 될 때까지 대기 하나 이상의 명령을 사용 하는 <xref:System.IAsyncResult.AsyncWaitHandle%2A> 반환 된 속성 <xref:System.IAsyncResult>합니다.  
  
   
  
## Examples  
 다음 콘솔 응용 프로그램에서는 합니다 **AdventureWorks** 샘플 데이터베이스에서 해당 작업을 비동기적으로 수행 합니다. 이 예제에서는 장기 실행 프로세스를 에뮬레이션하기 위해 명령 텍스트에 WAITFOR 문을 삽입합니다. 일반적으로 활동의 실행 속도가 느려질 명령을 걸립니다 되지만 이렇게이 경우 쉽게 비동기 동작을 보여 줍니다.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQuery/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQuery/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되면 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되면 **Char**, **NChar**, **NVarChar**, **VarChar** 또는 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정된 경우 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">명령 텍스트를 실행하는 동안 발생한 오류입니다.  
  
스트리밍 작업 동안 시간이 초과되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.InvalidOperationException">이름/값 쌍 "비동기 처리=true"가 이 <see cref="T:System.Data.SqlClient.SqlCommand" />에 대한 연결을 정의하는 연결 문자열 안에 포함되지 않았습니다.  
  
스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.IO.IOException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.ObjectDisposedException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 연결 및 검색</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteNonQuery">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteNonQuery (AsyncCallback callback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteNonQuery(class System.AsyncCallback callback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteNonQuery (callback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteNonQuery(AsyncCallback ^ callback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteNonQuery : AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteNonQuery (callback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="stateObject" Type="System.Object" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback">명령의 실행이 완료되었을 때 호출되는 <see cref="T:System.AsyncCallback" /> 대리자입니다. 콜백이 필요하지 않도록 지정하려면 <see langword="null" />(Microsoft Visual Basic에서는 <see langword="Nothing" />)을 전달합니다.</param>
        <param name="stateObject">콜백 프로시저에 전달된 사용자 정의 상태 개체입니다. <see cref="P:System.IAsyncResult.AsyncState" /> 속성을 사용하여 콜백 프로시저에서 이 개체를 검색합니다.</param>
        <summary>콜백 프로시저와 상태 정보가 주어진 상태에서 이 <see cref="T:System.Data.SqlClient.SqlCommand" />에서 설명한 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작합니다.</summary>
        <returns>결과를 폴링하거나 기다리는 데 사용하거나 또는 두 작업 모두 수행하는 데 사용할 수 있는 <see cref="T:System.IAsyncResult" />이며, 이 값은 영향을 받는 행의 수를 반환하는 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />를 호출할 때도 필요합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 메서드는 비동기적으로 다른 작업은 문이 실행 되는 동안 동시에 실행할 수 있도록 Transact SQL 문 또는 행을 반환 하지 않는 저장된 프로시저를 실행 하는 프로세스를 시작 합니다. 문이 완료 되 면 개발자 호출 해야 합니다는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 메서드 작업을 완료 합니다. 합니다 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 메서드가 즉시 반환 됩니다 (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> 영향을 주지 않습니다 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>), 해당 코드가 실행 될 때까지 있지만 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 메서드 호출에서 해당 실행 해서는 안 동기 또는 비동기 실행을 시작 하는 다른 모든 호출 같은 <xref:System.Data.SqlClient.SqlCommand> 개체입니다. 호출을 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 명령의 실행이 완료 되기 전에 <xref:System.Data.SqlClient.SqlCommand> 실행 완료 될 때까지 차단 하는 개체입니다.  
  
 합니다 `callback` 매개 변수를 지정할 수는 <xref:System.AsyncCallback> 문이 완료 될 때 호출 되는 대리자입니다. 호출할 수 있습니다는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 메서드에서이 대리자 프로시저 내에서 또는 응용 프로그램 내에서 다른 위치에서. 개체를 전달할 수는 또한 합니다 `asyncStateObject` 콜백 프로시저와 매개 변수를 사용 하 여이 정보를 검색할 수는 <xref:System.IAsyncResult.AsyncState%2A> 속성입니다.  
  
 참고는 명령 텍스트 및 매개 변수는 서버에 동기적으로 전송 합니다. 긴 명령이 나 많은 매개 변수를 보낼 경우이 메서드는 쓰기 작업 동안 차단할 수 있습니다. 메서드는 서버의 응답을 기다리지 않고 즉시 반환 된 명령이 전송 된 후, 읽기는 비동기적입니다.  
  
 콜백 프로시저에서 Microsoft.NET 공용 언어 런타임에서 제공 되는 백그라운드 스레드에서 실행 되므로 응용 프로그램 내에서 스레드 간 상호 작용을 처리 하는 엄격한 접근 방식을 수행 하는 것이 중요 합니다. 예를 들어 작용 해서는에서 양식의 콘텐츠를 사용 하 여 콜백 프로시저; 내 양식을 업데이트할 수 있어야를 전환 해야 하는 폼의 스레드 작업을 수행 하기 위해. 이 항목의 예제에서는이 동작을 보여 줍니다.  
  
 작업을 실행 하는 동안 발생 하는 모든 오류 콜백 프로시저 내의 예외로 throw 됩니다. 주 응용 프로그램이 아니라 콜백 프로시저에서 예외를 처리 해야 합니다. 콜백 프로시저 내의 예외 처리에 대 한 자세한 내용은이 항목의 예제를 참조 하세요.  
  
   
  
## Examples  
 다음 Windows 응용 프로그램의 사용을 보여 줍니다.는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 메서드, (장기 실행 명령을 에뮬레이션) 몇 초 간의 지연이 포함 하는 TRANSACT-SQL 문을 실행 합니다.  
  
 이 예제에는 여러 중요 한 기술을 보여 줍니다. 여기에 별도 스레드에서 폼과 상호 작용 하는 메서드를 호출 합니다. 또한이 예제에서는 사용자가 명령을 여러 번을 동시에 실행을 차단 해야 하는 방법을 설명 하 고 콜백 프로시저 전에 폼을 닫을 있는지 확인 해야 하는 방법을 라고 합니다.  
  
 이 예제를 설정하려면 새 Windows 응용 프로그램을 만듭니다. 배치는 <xref:System.Windows.Forms.Button> 컨트롤 및 <xref:System.Windows.Forms.Label> (각 컨트롤에 대 한 기본 이름을 적용) 폼에서 컨트롤입니다. 환경의 필요에 따라 연결 문자열을 수정 하 고 폼의 클래스에 다음 코드를 추가 합니다.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQueryForm/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQueryForm/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되면 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되면 **Char**, **NChar**, **NVarChar**, **VarChar** 또는 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정된 경우 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">명령 텍스트를 실행하는 동안 발생한 오류입니다.  
  
스트리밍 작업 동안 시간이 초과되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.InvalidOperationException">이름/값 쌍 "비동기 처리=true"가 이 <see cref="T:System.Data.SqlClient.SqlCommand" />에 대한 연결을 정의하는 연결 문자열 안에 포함되지 않았습니다.  
  
스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.IO.IOException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.ObjectDisposedException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 연결 및 검색</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 <see cref="T:System.Data.SqlClient.SqlCommand" />에서 설명하는 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작하고 서버에서 하나 이상의 결과 집합을 검색합니다.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader();" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : unit -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Data.SqlClient.SqlCommand" />에서 설명하는 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작하고 서버에서 하나 이상의 결과 집합을 검색합니다.</summary>
        <returns>결과를 폴링하거나 기다리는 데 사용하거나 또는 두 작업 모두 수행하는 데 사용할 수 있는 <see cref="T:System.IAsyncResult" />이며, 반환된 행을 검색하는 데 사용할 수 있는 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 인스턴스를 반환하는 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />를 호출할 때도 이 값이 필요합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 메서드는 비동기적으로 다른 작업은 문이 실행 되는 동안 동시에 실행할 수 있도록 Transact SQL 문 또는 행을 반환 하는 저장된 프로시저를 실행 하는 프로세스를 시작 합니다. 문이 완료 되 면 개발자 호출 해야 합니다는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 하는 작업을 완료 하 고 검색 메서드는 <xref:System.Data.SqlClient.SqlDataReader> 명령에서 반환 합니다. 합니다 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 메서드를 즉시 반환 하지만 해당 코드가 실행 될 때까지 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 메서드 호출에서 해당 실행 해서는 안 같은 동기 또는 비동기 실행을 시작 하는 다른 모든 호출 <xref:System.Data.SqlClient.SqlCommand> 개체입니다. 호출을 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 명령의 실행이 완료 되기 전에 <xref:System.Data.SqlClient.SqlCommand> 실행 완료 될 때까지 차단 하는 개체입니다.  
  
 참고는 명령 텍스트 및 매개 변수는 서버에 동기적으로 전송 합니다. 긴 명령이 나 많은 매개 변수를 보낼 경우이 메서드는 쓰기 작업 동안 차단할 수 있습니다. 메서드는 서버의 응답을 기다리지 않고 즉시 반환 된 명령이 전송 된 후, 읽기는 비동기적입니다. 비동기 명령 실행 되어도 값 페치는 동기적입니다. 이 즉, 호출 <xref:System.Data.SqlClient.SqlDataReader.Read%2A> 에서 내부 네트워크의 읽기 작업이 중단 하 고 더 많은 데이터가 필요한 경우 중단 될 수 있습니다.  
  
 이 오버 로드는 콜백 프로시저를 지원 하지 않으므로, 개발자가 해야 하거나 폴링 명령이 완료 되었는지 여부를 확인 하려면를 사용 하 여를 <xref:System.IAsyncResult.IsCompleted%2A> 의 속성을 <xref:System.IAsyncResult> 반환한는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> ; 메서드 또는 완료 될 때까지 대기 하나 이상의 명령을 사용 하는 <xref:System.IAsyncResult.AsyncWaitHandle%2A> 반환 된 속성 <xref:System.IAsyncResult>합니다.  
  
 사용 하는 경우 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> XML 데이터에 액세스 하려면 SQL Server는 XML 결과가 반환 코드 보다 큰 2, 033 문자 여러 행의 길이입니다. 이 동작을 방지 하려면 사용 하 여 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> FOR XML 쿼리를 읽을 수 있습니다.
  
   
  
## Examples  
 다음 콘솔 응용 프로그램 데이터 판독기를 비동기적으로 검색 하는 프로세스를 시작 합니다. 결과 기다리는 동안이 간단한 응용 프로그램 루프 상태를 조사 합니다 <xref:System.IAsyncResult.IsCompleted%2A> 속성 값입니다. 코드 검색 프로세스를 완료 하는 즉시는 <xref:System.Data.SqlClient.SqlDataReader> 해당 내용을 표시 합니다.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReader/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되면 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되면 **Char**, **NChar**, **NVarChar**, **VarChar** 또는 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정된 경우 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">명령 텍스트를 실행하는 동안 발생한 오류입니다.  
  
스트리밍 작업 동안 시간이 초과되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.InvalidOperationException">이름/값 쌍 "비동기 처리=true"가 이 <see cref="T:System.Data.SqlClient.SqlCommand" />에 대한 연결을 정의하는 연결 문자열 안에 포함되지 않았습니다.  
  
스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.IO.IOException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.ObjectDisposedException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 연결 및 검색</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader (behavior As CommandBehavior) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : System.Data.CommandBehavior -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="behavior">문 실행 및 데이터 검색 옵션을 나타내는 <see cref="T:System.Data.CommandBehavior" /> 값 중 하나입니다.</param>
        <summary><see cref="T:System.Data.CommandBehavior" /> 값 중 하나를 사용하여 이 <see cref="T:System.Data.SqlClient.SqlCommand" />에서 설명한 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작합니다.</summary>
        <returns>결과를 폴링하거나 기다리는 데 사용하거나 또는 두 작업 모두 수행하는 데 사용할 수 있는 <see cref="T:System.IAsyncResult" />이며, 반환된 행을 검색하는 데 사용할 수 있는 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 인스턴스를 반환하는 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />를 호출할 때도 이 값이 필요합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 메서드는 비동기적으로 다른 작업은 문이 실행 되는 동안 동시에 실행할 수 있도록 Transact SQL 문 또는 행을 반환 하는 저장된 프로시저를 실행 하는 프로세스를 시작 합니다. 문이 완료 되 면 개발자 호출 해야 합니다는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 하는 작업을 완료 하 고 검색 메서드는 <xref:System.Data.SqlClient.SqlDataReader> 명령에서 반환 합니다. 합니다 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 메서드를 즉시 반환 하지만 해당 코드가 실행 될 때까지 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 메서드 호출에서 해당 실행 해서는 안 같은 동기 또는 비동기 실행을 시작 하는 다른 모든 호출 <xref:System.Data.SqlClient.SqlCommand> 개체입니다. 호출을 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 명령의 실행이 완료 되기 전에 <xref:System.Data.SqlClient.SqlCommand> 실행 완료 될 때까지 차단 하는 개체입니다.  
  
 `behavior` 매개 변수는 명령 및 해당 연결의 동작을 제어 하는 옵션을 지정할 수 있습니다. 이러한 값을 함께 결합할 수 있습니다 (프로그래밍 언어를 사용 하 여 `OR` 연산자); 일반적으로 개발자가 사용 하 여는 `CommandBehavior.CloseConnection` 런타임에서 연결이 닫혀 있는지 확인 하는 값 때는 <xref:System.Data.SqlClient.SqlDataReader> 닫혀 합니다.  
  
 참고는 명령 텍스트 및 매개 변수는 서버에 동기적으로 전송 합니다. 긴 명령이 나 많은 매개 변수를 보낼 경우이 메서드는 쓰기 작업 동안 차단할 수 있습니다. 메서드는 서버의 응답을 기다리지 않고 즉시 반환 된 명령이 전송 된 후, 읽기는 비동기적입니다. 비동기 명령 실행 되어도 값 페치는 동기적입니다. 이 즉, 호출 <xref:System.Data.SqlClient.SqlDataReader.Read%2A> 에서 내부 네트워크의 읽기 작업이 중단 하 고 더 많은 데이터가 필요한 경우 중단 될 수 있습니다.  
  
 이 오버 로드는 콜백 프로시저를 지원 하지 않으므로, 개발자가 해야 하거나 폴링 명령이 완료 되었는지 여부를 확인 하려면를 사용 하 여를 <xref:System.IAsyncResult.IsCompleted%2A> 의 속성을 <xref:System.IAsyncResult> 반환한는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> ; 메서드 또는 완료 될 때까지 대기 하나 이상의 명령을 사용 하는 <xref:System.IAsyncResult.AsyncWaitHandle%2A> 반환 된 속성 <xref:System.IAsyncResult>합니다.  
  
 사용 하는 경우 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> XML 데이터에 액세스 하려면 SQL Server XML 결과 보다 큰 반환 코드의 여러 행 2, 033 문자에서 길이입니다. 이 동작을 방지 하려면 사용 하 여 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> FOR XML 쿼리를 읽을 수 있습니다.
  
   
  
## Examples  
 다음 콘솔 응용 프로그램 데이터 판독기를 비동기적으로 검색 하는 프로세스를 시작 합니다. 결과 기다리는 동안이 간단한 응용 프로그램 루프 상태를 조사 합니다 <xref:System.IAsyncResult.IsCompleted%2A> 속성 값입니다. 코드 검색 프로세스가 완료 되 면는 <xref:System.Data.SqlClient.SqlDataReader> 해당 내용을 표시 합니다.  
  
 이 예제에서는 또한 전달 된 `CommandBehavior.CloseConnection` 및 `CommandBehavior.SingleRow` 닫을 때 연결이 동작 매개 변수에 값 반환 된 <xref:System.Data.SqlClient.SqlDataReader> 닫혀 및 최적화 하기 위해 단일 행 결과.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncSimple/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncSimple/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되면 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되면 **Char**, **NChar**, **NVarChar**, **VarChar** 또는 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정된 경우 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">명령 텍스트를 실행하는 동안 발생한 오류입니다.  
  
스트리밍 작업 동안 시간이 초과되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.InvalidOperationException">이름/값 쌍 "비동기 처리=true"가 이 <see cref="T:System.Data.SqlClient.SqlCommand" />에 대한 연결을 정의하는 연결 문자열 안에 포함되지 않았습니다.  
  
스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.IO.IOException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.ObjectDisposedException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 연결 및 검색</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader(class System.AsyncCallback callback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader (callback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader(AsyncCallback ^ callback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader (callback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="stateObject" Type="System.Object" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback">명령의 실행이 완료되었을 때 호출되는 <see cref="T:System.AsyncCallback" /> 대리자입니다. 콜백이 필요하지 않도록 지정하려면 <see langword="null" />(Microsoft Visual Basic에서는 <see langword="Nothing" />)을 전달합니다.</param>
        <param name="stateObject">콜백 프로시저에 전달된 사용자 정의 상태 개체입니다. <see cref="P:System.IAsyncResult.AsyncState" /> 속성을 사용하여 콜백 프로시저에서 이 개체를 검색합니다.</param>
        <summary>콜백 프로시저와 상태 정보가 주어진 상태에서 이 <see cref="T:System.Data.SqlClient.SqlCommand" />에서 설명한 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작하고 서버에서 하나 이상의 결과 집합을 검색합니다.</summary>
        <returns>결과를 폴링하거나 기다리는 데 사용하거나 또는 두 작업 모두 수행하는 데 사용할 수 있는 <see cref="T:System.IAsyncResult" />이며, 반환된 행을 검색하는 데 사용할 수 있는 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 인스턴스를 반환하는 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />를 호출할 때도 이 값이 필요합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 메서드는 비동기적으로 다른 작업은 문이 실행 되는 동안 동시에 실행할 수 있도록 Transact SQL 문 또는 행을 반환 하는 저장된 프로시저를 실행 하는 프로세스를 시작 합니다. 문이 완료 되 면 개발자 호출 해야 합니다는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 하는 작업을 완료 하 고 검색 메서드는 <xref:System.Data.SqlClient.SqlDataReader> 명령에서 반환 합니다. 합니다 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 메서드를 즉시 반환 하지만 해당 코드가 실행 될 때까지 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 메서드 호출에서 해당 실행 해서는 안 같은 동기 또는 비동기 실행을 시작 하는 다른 모든 호출 <xref:System.Data.SqlClient.SqlCommand> 개체입니다. 호출을 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 명령 실행이 완료 되기 전에 원인은 <xref:System.Data.SqlClient.SqlCommand> 실행 완료 될 때까지 차단 하는 개체입니다.  
  
 합니다 `callback` 매개 변수를 지정할 수는 <xref:System.AsyncCallback> 문이 완료 될 때 호출 되는 대리자입니다. 호출할 수 있습니다는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 메서드에서이 대리자 프로시저 내에서 또는 응용 프로그램 내에서 다른 위치에서. 개체를 전달할 수는 또한 합니다 `stateObject` 콜백 프로시저와 매개 변수를 사용 하 여이 정보를 검색할 수는 <xref:System.IAsyncResult.AsyncState%2A> 속성입니다.  
  
 참고는 명령 텍스트 및 매개 변수는 서버에 동기적으로 전송 합니다. 긴 명령이 나 많은 매개 변수를 보낼 경우이 메서드는 쓰기 작업 동안 차단할 수 있습니다. 메서드는 서버의 응답을 기다리지 않고 즉시 반환 된 명령이 전송 된 후, 읽기는 비동기적입니다. 비동기 명령 실행 되어도 값 페치는 동기적입니다. 이 즉, 호출 <xref:System.Data.SqlClient.SqlDataReader.Read%2A> 에서 내부 네트워크의 읽기 작업이 중단 하 고 더 많은 데이터가 필요한 경우 중단 될 수 있습니다.  
  
 콜백 프로시저에서 Microsoft.NET 런타임에서 제공 되는 백그라운드 스레드에서 실행 되므로 응용 프로그램 내에서 스레드 간 상호 작용을 처리 하는 엄격한 접근 방식을 수행 하는 것이 중요 합니다. 예를 들어 작용 해서는에서 양식의 콘텐츠를 사용 하 여 콜백 프로시저; 내 양식을 업데이트할 수 있어야를 전환 해야 하는 폼의 스레드 작업을 수행 하기 위해. 이 항목의 예제에서는이 동작을 보여 줍니다.  
  
 작업을 실행 하는 동안 발생 하는 모든 오류 콜백 프로시저 내의 예외로 throw 됩니다. 주 응용 프로그램이 아니라 콜백 프로시저에서 예외를 처리 해야 합니다. 콜백 프로시저 내의 예외 처리에 대 한 자세한 내용은이 항목의 예제를 참조 하세요.  
  
 사용 하는 경우 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> XML 데이터에 액세스 하려면 SQL Server XML 결과 보다 큰 반환 코드의 여러 행 2, 033 문자에서 길이입니다. 이 동작을 방지 하려면 사용 하 여 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> FOR XML 쿼리를 읽을 수 있습니다.
  
   
  
## Examples  
 다음 Windows 응용 프로그램에서는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 메서드를 사용하여 장기 실행 명령을 에뮬레이션하는 몇 초 간의 지연이 포함된 Transact-SQL 문을 실행하는 방법을 보여 줍니다. 샘플 명령을 비동기적으로 실행 결과 기다리는 동안 폼 응답 남아 있습니다. 이 예제에서는 전달 된 실행 <xref:System.Data.SqlClient.SqlCommand> 개체를 `stateObject` 매개 변수 이렇게 간단 하 게 수를 검색 합니다 <xref:System.Data.SqlClient.SqlCommand> 코드를 호출할 수 있도록 콜백 프로시저 내에서 개체를 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 메서드에 해당 하는 초기 호출 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>합니다.  
  
 이 예제에는 여러 중요 한 기술을 보여 줍니다. 여기에 별도 스레드에서 폼과 상호 작용 하는 메서드를 호출 합니다. 또한이 예제에서는 사용자가 명령을 여러 번을 동시에 실행을 차단 해야 하는 방법을 설명 하 고 콜백 프로시저 전에 폼을 닫을 있는지 확인 해야 하는 방법을 라고 합니다.  
  
 이 예제를 설정하려면 새 Windows 응용 프로그램을 만듭니다. 배치는 <xref:System.Windows.Forms.Button> 컨트롤을 <xref:System.Windows.Forms.DataGridView> 컨트롤 및 <xref:System.Windows.Forms.Label> (각 컨트롤에 대 한 기본 이름을 적용) 폼에서 컨트롤입니다. 환경의 필요에 따라 연결 문자열을 수정 하 고 폼의 클래스에 다음 코드를 추가 합니다.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsync/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsync/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되면 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되면 **Char**, **NChar**, **NVarChar**, **VarChar** 또는 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정된 경우 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">명령 텍스트를 실행하는 동안 발생한 오류입니다.  
  
스트리밍 작업 동안 시간이 초과되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.InvalidOperationException">이름/값 쌍 "비동기 처리=true"가 이 <see cref="T:System.Data.SqlClient.SqlCommand" />에 대한 연결을 정의하는 연결 문자열 안에 포함되지 않았습니다.  
  
스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.IO.IOException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.ObjectDisposedException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 연결 및 검색</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader(class System.AsyncCallback callback, object stateObject, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader (callback As AsyncCallback, stateObject As Object, behavior As CommandBehavior) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader(AsyncCallback ^ callback, System::Object ^ stateObject, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : AsyncCallback * obj * System.Data.CommandBehavior -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader (callback, stateObject, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="stateObject" Type="System.Object" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="2" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback">명령의 실행이 완료되었을 때 호출되는 <see cref="T:System.AsyncCallback" /> 대리자입니다. 콜백이 필요하지 않도록 지정하려면 <see langword="null" />(Microsoft Visual Basic에서는 <see langword="Nothing" />)을 전달합니다.</param>
        <param name="stateObject">콜백 프로시저에 전달된 사용자 정의 상태 개체입니다. <see cref="P:System.IAsyncResult.AsyncState" /> 속성을 사용하여 콜백 프로시저에서 이 개체를 검색합니다.</param>
        <param name="behavior">문 실행 및 데이터 검색 옵션을 나타내는 <see cref="T:System.Data.CommandBehavior" /> 값 중 하나입니다.</param>
        <summary>콜백 프로시저와 상태 정보가 주어진 상태에서 이 <see cref="T:System.Data.SqlClient.SqlCommand" />에서 설명하는 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작하고 <see langword="CommandBehavior" /> 값 중 하나를 사용하여 서버에서 결과 집합을 하나 이상 검색합니다.</summary>
        <returns>결과를 폴링하거나 기다리는 데 사용하거나 또는 두 작업 모두 수행하는 데 사용할 수 있는 <see cref="T:System.IAsyncResult" />이며, 반환된 행을 검색하는 데 사용할 수 있는 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 인스턴스를 반환하는 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />를 호출할 때도 이 값이 필요합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 메서드는 비동기적으로 다른 작업은 문이 실행 되는 동안 동시에 실행할 수 있도록 Transact SQL 문 또는 행을 반환 하는 저장된 프로시저를 실행 하는 프로세스를 시작 합니다. 문이 완료 되 면 개발자 호출 해야 합니다는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 하는 작업을 완료 하 고 검색 메서드는 <xref:System.Data.SqlClient.SqlDataReader> 명령에서 반환 합니다. 합니다 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 메서드를 즉시 반환 하지만 해당 코드가 실행 될 때까지 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 메서드 호출에서 해당 실행 해서는 안 같은 동기 또는 비동기 실행을 시작 하는 다른 모든 호출 <xref:System.Data.SqlClient.SqlCommand> 개체입니다. 호출을 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 명령의 실행이 완료 되기 전에 <xref:System.Data.SqlClient.SqlCommand> 실행 완료 될 때까지 차단 하는 개체입니다.  
  
 합니다 `callback` 매개 변수를 지정할 수는 <xref:System.AsyncCallback> 문이 완료 될 때 호출 되는 대리자입니다. 호출할 수 있습니다는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 메서드에서이 대리자 프로시저 내에서 또는 응용 프로그램 내에서 다른 위치에서. 개체를 전달할 수는 또한 합니다 `stateObject` 콜백 프로시저와 매개 변수를 사용 하 여이 정보를 검색할 수는 <xref:System.IAsyncResult.AsyncState%2A> 속성입니다.  
  
 `behavior` 매개 변수는 명령 및 해당 연결의 동작을 제어 하는 옵션을 지정할 수 있습니다. 이러한 값을 함께 결합할 수 있습니다 (프로그래밍 언어를 사용 하 여 `Or` 연산자); 일반적으로 개발자가 사용 하 여는 `CloseConnection` 런타임에서 연결이 닫혀 있는지 확인 하는 값 때는 <xref:System.Data.SqlClient.SqlDataReader> 닫혀 합니다. 개발자의 동작을 최적화할 수도 있습니다는 <xref:System.Data.SqlClient.SqlDataReader> 를 지정 하 여는 `SingleRow` 알려져 미리 Transact SQL 문 또는 저장된 프로시저에서 단일 행만을 반환 한다는 값입니다.  
  
 참고는 명령 텍스트 및 매개 변수는 서버에 동기적으로 전송 합니다. 긴 명령이 나 많은 매개 변수를 보낼 경우이 메서드는 쓰기 작업 동안 차단할 수 있습니다. 메서드는 서버의 응답을 기다리지 않고 즉시 반환 된 명령이 전송 된 후, 읽기는 비동기적입니다. 비동기 명령 실행 되어도 값 페치는 동기적입니다. 이 즉, 호출 <xref:System.Data.SqlClient.SqlDataReader.Read%2A> 에서 내부 네트워크의 읽기 작업이 중단 하 고 더 많은 데이터가 필요한 경우 중단 될 수 있습니다.  
  
 콜백 프로시저에서 Microsoft.NET 공용 언어 런타임에서 제공 되는 백그라운드 스레드에서 실행 되므로 응용 프로그램 내에서 스레드 간 상호 작용을 처리 하는 엄격한 접근 방식을 수행 하는 것이 중요 합니다. 예를 들어 작용 해서는 콜백 프로시저 내에서 양식의 콘텐츠를 사용 하 여 폼을 업데이트 해야 전환 해야 하는 폼의 스레드 작업을 수행 하기 위해. 이 항목의 예제에서는이 동작을 보여 줍니다.  
  
 작업을 실행 하는 동안 발생 하는 모든 오류 콜백 프로시저 내의 예외로 throw 됩니다. 주 응용 프로그램이 아니라 콜백 프로시저에서 예외를 처리 해야 합니다. 콜백 프로시저 내의 예외 처리에 대 한 자세한 내용은이 항목의 예제를 참조 하세요.  
  
 사용 하는 경우 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> XML 데이터에 액세스 하려면 SQL Server는 XML 결과가 반환 코드 보다 큰 2, 033 문자 여러 행의 길이입니다. 이 동작을 방지 하려면 사용 하 여 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> FOR XML 쿼리를 읽을 수 있습니다.
  
   
  
## Examples  
 다음 Windows 응용 프로그램에서는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 메서드를 사용하여 장기 실행 명령을 에뮬레이션하는 몇 초 간의 지연이 포함된 Transact-SQL 문을 실행하는 방법을 보여 줍니다. 샘플 명령을 비동기적으로 실행 결과 기다리는 동안 폼 응답 남아 있습니다. 이 예제에서는 전달 된 실행 <xref:System.Data.SqlClient.SqlCommand> 개체를 `stateObject` 매개 변수 이렇게 간단 하 게 수를 검색 합니다 <xref:System.Data.SqlClient.SqlCommand> 코드를 호출할 수 있도록 콜백 프로시저 내에서 개체를 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 메서드에 해당 하는 초기 호출 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>합니다.  
  
 이 예제에는 여러 중요 한 기술을 보여 줍니다. 여기에 별도 스레드에서 폼과 상호 작용 하는 메서드를 호출 합니다. 또한이 예제에서는 사용자가 명령을 여러 번을 동시에 실행을 차단 해야 하는 방법을 설명 하 고 콜백 프로시저 전에 폼을 닫을 있는지 확인 해야 하는 방법을 라고 합니다.  
  
 이 예제를 설정하려면 새 Windows 응용 프로그램을 만듭니다. 배치는 <xref:System.Windows.Forms.Button> 컨트롤을 <xref:System.Windows.Forms.DataGridView> 컨트롤 및 <xref:System.Windows.Forms.Label> (각 컨트롤에 대 한 기본 이름을 적용) 폼에서 컨트롤입니다. 환경의 필요에 따라 연결 문자열을 수정 하 고 폼의 클래스에 다음 코드를 추가 합니다.  
  
 이 예제에서는 전달 합니다 `CommandBehavior.CloseConnection` 값을 `behavior` 매개 변수에 반환 된 <xref:System.Data.SqlClient.SqlDataReader> 를 자동으로 닫을 때 해당 연결을 닫습니다.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되면 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되면 **Char**, **NChar**, **NVarChar**, **VarChar** 또는 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정된 경우 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">명령 텍스트를 실행하는 동안 발생한 오류입니다.  
  
스트리밍 작업 동안 시간이 초과되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.InvalidOperationException">이름/값 쌍 "비동기 처리=true"가 이 <see cref="T:System.Data.SqlClient.SqlCommand" />에 대한 연결을 정의하는 연결 문자열 안에 포함되지 않았습니다.  
  
스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.IO.IOException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.ObjectDisposedException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 연결 및 검색</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginExecuteXmlReader">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Data.SqlClient.SqlCommand" />에서 설명한 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작하고 결과를 <see cref="T:System.Xml.XmlReader" /> 개체로 반환합니다.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginExecuteXmlReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteXmlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteXmlReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteXmlReader () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteXmlReader();" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteXmlReader : unit -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteXmlReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.SqlClient.SqlCommand" />에서 설명한 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작하고 결과를 <see cref="T:System.Xml.XmlReader" /> 개체로 반환합니다.</summary>
        <returns>결과를 폴링하거나 기다리는 데 사용하거나 또는 두 작업 모두 수행하는 데 사용할 수 있는 <see cref="T:System.IAsyncResult" />이며, 단일 XML 값을 반환하는 <see langword="EndExecuteXmlReader" />를 호출할 때도 이 값이 필요합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 메서드 다른 작업은 문이 실행 되는 동안 동시에 실행할 수 있도록 XML로 행을 반환 하는 TRANSACT-SQL 문을 비동기적으로 실행 하는 프로세스를 시작 합니다. 문이 완료 되 면 개발자 호출 해야 합니다는 `EndExecuteXmlReader` 메서드는 작업을 완료 하 고 XML을 검색 하는 명령으로 반환 합니다. 합니다 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 메서드를 즉시 반환 하지만 해당 코드가 실행 될 때까지 `EndExecuteXmlReader` 메서드 호출에서 해당 실행 해서는 안 같은 동기 또는 비동기 실행을 시작 하는 다른 모든 호출 <xref:System.Data.SqlClient.SqlCommand> 개체입니다. 호출을 `EndExecuteXmlReader` 명령의 실행이 완료 되기 전에 <xref:System.Data.SqlClient.SqlCommand> 실행 완료 될 때까지 차단 하는 개체입니다.  
  
 <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 속성 유효한 FOR XML 절을 사용 하 여 일반적으로 TRANSACT-SQL 문을 지정 합니다. 그러나 `CommandText` 반환 하는 문을 지정할 수도 있습니다 `ntext` 유효한 XML이 포함 된 데이터입니다.  
  
 일반적인 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 쿼리는 다음 C# 예제와 같이 형식을 지정할 수 있습니다.  
  
```  
SqlCommand command = new SqlCommand("SELECT ContactID, FirstName, LastName FROM dbo.Contact FOR XML AUTO, XMLDATA", SqlConn);  
```  
  
 이 메서드는 단일 열 단일 행 결과 집합을 검색 하려면 데도 사용할 수 있습니다. 이 예제의 경우 둘 이상의 하나의 행이 반환 된 `EndExecuteXmlReader` 메서드 연결은 <xref:System.Xml.XmlReader> 결과의 나머지 부분에서 첫 번째 행 및 삭제를 값으로 설정 합니다.  
  
 다중 활성 결과 집합 (MARS) 기능에 여러 작업이 동일한 연결을 사용할 수 있습니다.  
  
 참고는 명령 텍스트 및 매개 변수는 서버에 동기적으로 전송 합니다. 긴 명령이 나 많은 매개 변수를 보낼 경우이 메서드는 쓰기 작업 동안 차단할 수 있습니다. 메서드는 서버의 응답을 기다리지 않고 즉시 반환 된 명령이 전송 된 후, 읽기는 비동기적입니다. 비동기 명령 실행 되어도 값 페치는 동기적입니다.  
  
 이 오버 로드는 콜백 프로시저를 지원 하지 않으므로, 개발자가 해야 하거나 폴링 사용으로 명령이 완료 되었는지 여부를 확인 하려면를 <xref:System.IAsyncResult.IsCompleted%2A> 의 속성 합니다 <xref:System.IAsyncResult> 반환한를 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> ; 메서드 또는 완료 될 때까지 대기 사용 하 여 하나 이상의 명령의 합니다 <xref:System.IAsyncResult.AsyncWaitHandle%2A> 반환 된 속성 <xref:System.IAsyncResult>합니다.  
  
 사용 하는 경우 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> XML 데이터에 액세스 하려면 SQL Server XML 결과 보다 큰 반환 코드의 여러 행 2, 033 문자에서 길이입니다. 이 동작을 방지 하려면 사용 하 여 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> FOR XML 쿼리를 읽을 수 있습니다.
  
   
  
## Examples  
 다음 콘솔 응용 프로그램 XML 데이터를 비동기적으로 검색 하는 프로세스를 시작 합니다. 결과 기다리는 동안이 간단한 응용 프로그램 루프 상태를 조사 합니다 <xref:System.IAsyncResult.IsCompleted%2A> 속성 값입니다. 프로세스가 완료 되 면 코드는 XML을 검색 하 고 해당 내용이 표시 됩니다.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReader/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되면 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되면 **Char**, **NChar**, **NVarChar**, **VarChar** 또는 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정된 경우 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">명령 텍스트를 실행하는 동안 발생한 오류입니다.  
  
스트리밍 작업 동안 시간이 초과되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.InvalidOperationException">이름/값 쌍 "비동기 처리=true"가 이 <see cref="T:System.Data.SqlClient.SqlCommand" />에 대한 연결을 정의하는 연결 문자열 안에 포함되지 않았습니다.  
  
스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.IO.IOException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.ObjectDisposedException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 연결 및 검색</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteXmlReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteXmlReader (AsyncCallback callback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteXmlReader(class System.AsyncCallback callback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteXmlReader (callback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteXmlReader(AsyncCallback ^ callback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteXmlReader : AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteXmlReader (callback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="stateObject" Type="System.Object" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback">명령의 실행이 완료되었을 때 호출되는 <see cref="T:System.AsyncCallback" /> 대리자입니다. 콜백이 필요하지 않도록 지정하려면 <see langword="null" />(Microsoft Visual Basic에서는 <see langword="Nothing" />)을 전달합니다.</param>
        <param name="stateObject">콜백 프로시저에 전달된 사용자 정의 상태 개체입니다. <see cref="P:System.IAsyncResult.AsyncState" /> 속성을 사용하여 콜백 프로시저에서 이 개체를 검색합니다.</param>
        <summary>콜백 프로시저를 사용하여 이 <see cref="T:System.Data.SqlClient.SqlCommand" />에서 설명한 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작하고 결과를 <see cref="T:System.Xml.XmlReader" /> 개체로 반환합니다.</summary>
        <returns>결과를 폴링하거나 기다리는 데 사용하거나 두 작업을 모두 수행하는 데 사용할 수 있는 <see cref="T:System.IAsyncResult" />이며, 명령의 결과를 XML로 반환하는 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" />를 호출할 때도 이 값이 필요합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 메서드는 비동기적으로 다른 작업은 문이 실행 되는 동안 동시에 실행할 수 있도록 Transact SQL 문 또는 XML로 행을 반환 하는 저장된 프로시저를 실행 하는 프로세스를 시작 합니다. 문이 완료 되 면 개발자 호출 해야 합니다는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> 방법 작업을 완료 하 고 요청한 XML 데이터를 검색 합니다. 합니다 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 메서드를 즉시 반환 하지만 해당 코드가 실행 될 때까지 <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> 메서드 호출에서 해당 실행 해서는 안 같은 동기 또는 비동기 실행을 시작 하는 다른 모든 호출 <xref:System.Data.SqlClient.SqlCommand> 개체입니다. 호출을 <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> 명령의 실행이 완료 되기 전에 <xref:System.Data.SqlClient.SqlCommand> 실행 완료 될 때까지 차단 하는 개체입니다.  
  
 <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 속성 유효한 FOR XML 절을 사용 하 여 일반적으로 TRANSACT-SQL 문을 지정 합니다. 그러나 `CommandText` 유효한 XML이 포함 된 데이터를 반환 하는 문을 지정할 수도 있습니다. 이 메서드는 단일 열 단일 행 결과 집합을 검색 하려면 데도 사용할 수 있습니다. 이 예제의 경우 둘 이상의 하나의 행이 반환 된 <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> 메서드 연결은 <xref:System.Xml.XmlReader> 결과의 나머지 부분에서 첫 번째 행 및 삭제를 값으로 설정 합니다.  
  
 일반적인 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 쿼리는 다음 C# 예제와 같이 형식을 지정할 수 있습니다.  
  
```  
SqlCommand command = new SqlCommand("SELECT ContactID, FirstName, LastName FROM Contact FOR XML AUTO, XMLDATA", SqlConn);  
```  
  
 이 메서드는 단일 열 단일 행 결과 집합을 검색 하려면 데도 사용할 수 있습니다. 이 예제의 경우 둘 이상의 하나의 행이 반환 된 <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> 메서드 연결은 <xref:System.Xml.XmlReader> 결과의 나머지 부분에서 첫 번째 행 및 삭제를 값으로 설정 합니다.  
  
 다중 활성 결과 집합 (MARS) 기능에 여러 작업이 동일한 연결을 사용할 수 있습니다.  
  
 합니다 `callback` 매개 변수를 지정할 수는 <xref:System.AsyncCallback> 문이 완료 될 때 호출 되는 대리자입니다. 호출할 수 있습니다는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> 메서드에서이 대리자 프로시저 내에서 또는 응용 프로그램 내에서 다른 위치에서. 개체를 전달할 수는 또한 합니다 `stateObject` 콜백 프로시저와 매개 변수를 사용 하 여이 정보를 검색할 수는 <xref:System.IAsyncResult.AsyncState%2A> 속성입니다.  
  
 참고는 명령 텍스트 및 매개 변수는 서버에 동기적으로 전송 합니다. 긴 명령이 나 많은 매개 변수를 보낼 경우이 메서드는 쓰기 작업 동안 차단할 수 있습니다. 메서드는 서버의 응답을 기다리지 않고 즉시 반환 된 명령이 전송 된 후, 읽기는 비동기적입니다.  
  
 작업을 실행 하는 동안 발생 하는 모든 오류 콜백 프로시저 내의 예외로 throw 됩니다. 주 응용 프로그램이 아니라 콜백 프로시저에서 예외를 처리 해야 합니다. 콜백 프로시저 내의 예외 처리에 대 한 자세한 내용은이 항목의 예제를 참조 하세요.  
  
 사용 하는 경우 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> XML 데이터에 액세스 하려면 SQL Server는 XML 결과가 반환 코드 보다 큰 2, 033 문자 여러 행의 길이입니다. 이 동작을 방지 하려면 사용 하 여 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> FOR XML 쿼리를 읽을 수 있습니다.
  
   
  
## Examples  
 다음 Windows 응용 프로그램에서는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 메서드를 사용하여 장기 실행 명령을 에뮬레이션하는 몇 초 간의 지연이 포함된 Transact-SQL 문을 실행하는 방법을 보여 줍니다. 이 예제에서는 전달 된 실행 <xref:System.Data.SqlClient.SqlCommand> 개체를 `stateObject` 매개 변수-이렇게 간단 하 게 수를 검색 합니다 <xref:System.Data.SqlClient.SqlCommand> 코드를 호출할 수 있도록 콜백 프로시저 내에서 개체를 <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> 메서드에 해당 하는 초기 호출 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>합니다.  
  
 이 예제에는 여러 중요 한 기술을 보여 줍니다. 여기에 별도 스레드에서 폼과 상호 작용 하는 메서드를 호출 합니다. 또한이 예제에서는 사용자가 명령을 여러 번을 동시에 실행을 차단 해야 하는 방법을 설명 하 고 콜백 프로시저 전에 폼을 닫을 있는지 확인 해야 하는 방법을 라고 합니다.  
  
 이 예제를 설정하려면 새 Windows 응용 프로그램을 만듭니다. 배치는 <xref:System.Windows.Forms.Button> 컨트롤을 <xref:System.Windows.Forms.ListBox> 컨트롤 및 <xref:System.Windows.Forms.Label> (각 컨트롤에 대 한 기본 이름을 적용) 폼에서 컨트롤입니다. 환경의 필요에 따라 연결 문자열을 수정 하 고 폼의 클래스에 다음 코드를 추가 합니다.  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReaderAsync/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReaderAsync/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되면 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되면 **Char**, **NChar**, **NVarChar**, **VarChar** 또는 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정된 경우 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">명령 텍스트를 실행하는 동안 발생한 오류입니다.  
  
스트리밍 작업 동안 시간이 초과되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.InvalidOperationException">이름/값 쌍 "비동기 처리=true"가 이 <see cref="T:System.Data.SqlClient.SqlCommand" />에 대한 연결을 정의하는 연결 문자열 안에 포함되지 않았습니다.  
  
스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.IO.IOException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.ObjectDisposedException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <altmember cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" />
        <altmember cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Cancel();" />
      <MemberSignature Language="F#" Value="override this.Cancel : unit -&gt; unit" Usage="sqlCommand.Cancel " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.Cancel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.SqlClient.SqlCommand" />의 실행을 취소하려고 시도합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 취소할 명령이 없으면 아무 동작도 발생하지 않습니다. 그러나 진행 중인 명령이 있는 경우 취소 동작이 실패하더라도 예외가 생성되지 않습니다.  
  
 일부 드문 경우를 호출 하는 경우에 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>, 호출 <xref:System.Data.SqlClient.SqlDataReader.Close%2A> (암시적 또는 명시적)를 호출 하기 전에 <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>를 호출한 다음 <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>, 취소 명령을 SQL Server로 전송 되지 것입니다 및 결과 집합 계속 한 후 스트림 호출 <xref:System.Data.SqlClient.SqlConnection.Close%2A>합니다. 이 문제를 방지 하려면 호출 하는 <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> 판독기 또는 연결을 닫아야 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> 메서드를 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[Classic WebData SqlCommand.Cancel#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Cancel/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.Cancel#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Cancel/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 연결 및 검색</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlCommand Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlCommand ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Data.SqlClient.SqlCommand" Usage="sqlCommand.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 인스턴스의 복사본인 새 <see cref="T:System.Data.SqlClient.SqlCommand" /> 개체를 만듭니다.</summary>
        <returns>이 인스턴스의 복사본인 새 <see cref="T:System.Data.SqlClient.SqlCommand" /> 개체입니다.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 연결 및 검색</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionSetting">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommandColumnEncryptionSetting ColumnEncryptionSetting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SqlClient.SqlCommandColumnEncryptionSetting ColumnEncryptionSetting" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnEncryptionSetting As SqlCommandColumnEncryptionSetting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCommandColumnEncryptionSetting ColumnEncryptionSetting { System::Data::SqlClient::SqlCommandColumnEncryptionSetting get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionSetting : System.Data.SqlClient.SqlCommandColumnEncryptionSetting" Usage="System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommandColumnEncryptionSetting</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 명령에 대한 열 암호화 설정을 가져오거나 설정합니다.</summary>
        <value>이 명령에 대한 열 암호화 설정입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public override string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandText : string with get, set" Usage="System.Data.SqlClient.SqlCommand.CommandText" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandText</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_CommandText")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스에서 실행할 Transact-SQL 문, 테이블 이름 또는 저장 프로시저를 가져오거나 설정합니다.</summary>
        <value>실행할 Transact-SQL 문이나 저장 프로시저입니다. 기본값은 빈 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> 속성이 `StoredProcedure`, <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 저장된 프로시저의 이름으로 속성을 설정 해야 합니다. 사용자는 저장된 프로시저 이름에 특수 문자가 포함 된 경우 이스케이프 문자 구문을 사용 하는 데 필요한 수 있습니다. 명령 중 하나를 호출 하는 경우이 저장된 프로시저를 실행 합니다 `Execute` 메서드.  
  
 Microsoft.NET Framework Data Provider for SQL Server TRANSACT-SQL 문이나 저장된 프로시저의 명령에 의해 호출에 매개 변수를 전달 하기 위한 물음표 (?) 자리 표시자를 지원 하지 않습니다 `CommandType.Text`합니다. 이 경우 명명 된 매개 변수를 사용 합니다. 예:  
  
```  
SELECT * FROM dbo.Customers WHERE CustomerID = @CustomerID  
```  
  
 자세한 내용은 [구성 매개 변수 및 매개 변수 데이터 형식](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlCommand> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData SqlCommand.CommandText Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.CommandText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.CommandText Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.CommandText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 검색 및 수정</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 및 ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public override int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CommandTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTimeout : int with get, set" Usage="System.Data.SqlClient.SqlCommand.CommandTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(30)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_CommandTimeout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>명령 실행을 종료하고 오류를 생성하기 전 대기 시간을 가져오거나 설정합니다.</summary>
        <value>명령이 실행될 때까지 대기하는 시간(초)입니다. 기본값은 30초입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값이 0 (명령을 실행 하는 때 무기한 대기) 제한이 없음을 나타냅니다.  
  
> [!NOTE]
>  합니다 <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> 와 같은 비동기 메서드 호출 중 무시 됩니다 속성 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>합니다.  
  
 <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> 명령이 컨텍스트 연결에 대해 실행 될 때는 아무런 효과가 없습니다 (한 <xref:System.Data.SqlClient.SqlConnection> 사용 하 여 연 "컨텍스트 연결 = true" 연결 문자열에).  
  
> [!NOTE]
>  이 속성은 명령 실행 하거나 결과 처리 하는 동안 모든 네트워크 읽기의 누적 시간 제한 (메서드를 호출 하는 동안 읽는 모든 네트워크 패킷이)입니다. 첫 번째 행이 반환 되 고 사용자 처리 시간은 포함 되지 않습니다 시간 제한이 발생할 수 있습니다, 그리고 네트워크 읽기 시간입니다.  
>   
>  이면 out 30 초 시간으로 예를 들어 <xref:System.Data.SqlClient.SqlDataReader.Read%2A> 2 개의 네트워크 패킷을 다음 30 초 모두 네트워크 패킷을 읽기에 필요 합니다. 호출 하는 경우 <xref:System.Data.SqlClient.SqlDataReader.Read%2A> 다시 필요한 모든 데이터를 읽는 다른 30 초 해야 합니다.  
  
```  
using System;  
using System.Data.SqlClient;  
///   
public class A {  
   ///   
   public static void Main() {  
      string connectionString = "";  
      // Wait for 5 second delay in the command  
      string queryString = "waitfor delay '00:00:05'";  
      using (SqlConnection connection = new SqlConnection(connectionString)) {  
         connection.Open();  
         SqlCommand command = new SqlCommand(queryString, connection);  
         // Setting command timeout to 1 second  
         command.CommandTimeout = 1;  
         try {  
            command.ExecuteNonQuery();  
         }  
         catch (SqlException e) {  
            Console.WriteLine("Got expected SqlException due to command timeout ");  
            Console.WriteLine(e);  
         }  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 연결 및 검색</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public override System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberSignature Language="F#" Value="member this.CommandType : System.Data.CommandType with get, set" Usage="System.Data.SqlClient.SqlCommand.CommandType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_CommandType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> 속성이 해석될 방법을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Data.CommandType" /> 값 중 하나입니다. 기본값은 <see langword="Text" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정한 경우는 <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> 속성을 `StoredProcedure`를 설정 해야 합니다 <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 속성을 저장된 프로시저의 이름입니다. Execute 메서드 중 하나를 호출 하면이 저장된 프로시저를 실행 하는 명령입니다.  
  
 Microsoft.NET Framework Data Provider for SQL Server는 SQL 문에 매개 변수를 전달 하기 위한 물음표 (?) 자리 표시자를 지원 하지 않거나 저장된 프로시저를 사용 하 여 호출을 <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> 의 <xref:System.Data.CommandType.Text>합니다. 이 경우 명명 된 매개 변수를 사용 합니다. 예:  
  
 SELECT * FROM Customers WHERE CustomerID = @CustomerID  
  
 자세한 내용은 [구성 매개 변수 및 매개 변수 데이터 형식](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlCommand> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">값이 유효한 <see cref="T:System.Data.CommandType" />이 아닙니다.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 검색 및 수정</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 및 ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As SqlConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlConnection ^ Connection { System::Data::SqlClient::SqlConnection ^ get(); void set(System::Data::SqlClient::SqlConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.SqlClient.SqlConnection with get, set" Usage="System.Data.SqlClient.SqlCommand.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_Connection")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.SqlClient.SqlCommand" />의 이 인스턴스에서 사용되는 <see cref="T:System.Data.SqlClient.SqlConnection" />을 가져오거나 설정합니다.</summary>
        <value>데이터 소스와의 연결입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 명령을 실행 하는 동안 throw 됩니다 명령은 기존 트랜잭션에 참여 하는 경우 연결이 변경 되는 <xref:System.InvalidOperationException>합니다.  
  
 <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> 속성이 null이 아니고 트랜잭션이 이미 커밋 또는 롤백된 경우에는 <xref:System.Data.SqlClient.SqlCommand.Transaction%2A>이 null로 설정됩니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlCommand> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData SqlCommand.Connection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Connection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.Connection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Connection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">명령이 트랜잭션에 참여하는 동안 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> 속성이 변경되었습니다.</exception>
        <altmember cref="P:System.Data.SqlClient.SqlCommand.CommandText" />
        <altmember cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" />
        <altmember cref="P:System.Data.SqlClient.SqlCommand.CommandType" />
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameter CreateDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbParameter CreateDbParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.CreateDbParameter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbParameter () As DbParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbParameter ^ CreateDbParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateDbParameter : unit -&gt; System.Data.Common.DbParameter" Usage="sqlCommand.CreateDbParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As SqlParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlParameter ^ CreateParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateParameter : unit -&gt; System.Data.SqlClient.SqlParameter" Usage="sqlCommand.CreateParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.SqlClient.SqlParameter" /> 개체의 새 인스턴스를 만듭니다.</summary>
        <returns><see cref="T:System.Data.SqlClient.SqlParameter" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Data.SqlClient.SqlCommand.CreateParameter%2A> 메서드는 강력한 형식의 버전의 <xref:System.Data.IDbCommand.CreateParameter%2A>합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 연결 및 검색</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); void set(System::Data::Common::DbConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbConnection : System.Data.Common.DbConnection with get, set" Usage="System.Data.SqlClient.SqlCommand.DbConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbParameterCollection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbParameterCollection DbParameterCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DbParameterCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbParameterCollection ^ DbParameterCollection { System::Data::Common::DbParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbParameterCollection : System.Data.Common.DbParameterCollection" Usage="System.Data.SqlClient.SqlCommand.DbParameterCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction DbTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction DbTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DbTransaction" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbTransaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbTransaction ^ DbTransaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbTransaction : System.Data.Common.DbTransaction with get, set" Usage="System.Data.SqlClient.SqlCommand.DbTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeVisible">
      <MemberSignature Language="C#" Value="public override bool DesignTimeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeVisible" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DesignTimeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DesignTimeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DesignTimeVisible : bool with get, set" Usage="System.Data.SqlClient.SqlCommand.DesignTimeVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>명령 개체를 Windows Form 디자이너 컨트롤에서 표시할지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>컨트롤에 명령 개체를 표시할지를 나타내는 값입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="sqlCommand.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndExecuteNonQuery">
      <MemberSignature Language="C#" Value="public int EndExecuteNonQuery (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndExecuteNonQuery(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecuteNonQuery (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndExecuteNonQuery(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecuteNonQuery : IAsyncResult -&gt; int" Usage="sqlCommand.EndExecuteNonQuery asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><see cref="T:System.IAsyncResult" /> 호출에서 반환된 <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />입니다.</param>
        <summary>Transact-SQL 문의 비동기 실행을 완료합니다.</summary>
        <returns>영향을 받는 행 수입니다(<see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" />와 동일한 동작).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 하는 경우 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 실행 하는 [!INCLUDE[tsql](~/includes/tsql-md.md)] 를 호출 해야 문을 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 작업을 완료 하기 위해. 명령을 실행 하는 프로세스를 하지 않은 경우 아직 완료 작업이 완료 될 때까지이 메서드 차단 합니다. 명령을 사용 하 여 해당 작업을 완료는 사용자를 <xref:System.IAsyncResult> 에서 반환한 인스턴스를 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 메서드. 콜백 프로시저에 대 한 호출에 지정 된 경우 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>,이 메서드를 호출 해야 합니다.  
  
   
  
## Examples  
 사용을 보여 주는 예는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 메서드를 참조 하세요 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" /> 매개 변수는 null(Microsoft Visual Basic의 <see langword="Nothing" />)입니다.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> 단일 명령 실행에 대해 두 번 이상 호출되었거나, 실행 메서드에 대해 메서드가 일치하지 않습니다(예: 코드가 <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />에 대한 호출 실행을 완료하기 위해 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />를 호출함).</exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" />에 지정된 시간이 경과되었으며 <see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />로 지정된 비동기 작업이 완료되지 않았습니다.  
  
상황에 따라서는 <see cref="T:System.IAsyncResult" />를 <see langword="IsCompleted" />로 잘못 설정할 수 있습니다. 이 상황이 발생하고 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />가 호출되면 <see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" />에 지정된 시간이 경과되었고 <see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />로 지정된 비동기 작업이 완료되지 않은 경우 EndExecuteNonQuery로 인해 SqlException 오류가 발생할 수 있습니다. 이 상황을 해결하려면 CommandTimeout의 값을 높이거나 비동기 작업에 의해 수행되는 작업을 줄여야 합니다.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 연결 및 검색</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="EndExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlDataReader EndExecuteReader (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlDataReader EndExecuteReader(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecuteReader (asyncResult As IAsyncResult) As SqlDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlDataReader ^ EndExecuteReader(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecuteReader : IAsyncResult -&gt; System.Data.SqlClient.SqlDataReader" Usage="sqlCommand.EndExecuteReader asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><see cref="T:System.IAsyncResult" /> 호출에서 반환된 <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader" />입니다.</param>
        <summary>요청된 <see cref="T:System.Data.SqlClient.SqlDataReader" />를 반환하는 Transact-SQL 문의 비동기 실행을 완료합니다.</summary>
        <returns>요청된 행을 검색하는 데 사용할 수 있는 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 하는 경우 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> TRANSACT-SQL 문을 실행 하려면 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 작업을 완료 하기 위해. 명령을 실행 하는 프로세스를 하지 않은 경우 아직 완료 작업이 완료 될 때까지이 메서드 차단 합니다. 명령을 사용 하 여 해당 작업을 완료는 사용자를 <xref:System.IAsyncResult> 에서 반환한 인스턴스를 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 메서드. 콜백 프로시저에 대 한 호출에 지정 된 경우 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>,이 메서드를 호출 해야 합니다.  
  
   
  
## Examples  
 사용을 보여 주는 예는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 메서드를 참조 하세요 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" /> 매개 변수는 null(Microsoft Visual Basic의 <see langword="Nothing" />)입니다.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /> 단일 명령 실행에 대해 두 번 이상 호출되었거나, 실행 메서드에 대해 메서드가 일치하지 않습니다(예: 코드가 <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />에 대한 호출 실행을 완료하기 위해 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />를 호출함).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 연결 및 검색</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="EndExecuteXmlReader">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader EndExecuteXmlReader (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader EndExecuteXmlReader(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecuteXmlReader (asyncResult As IAsyncResult) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ EndExecuteXmlReader(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecuteXmlReader : IAsyncResult -&gt; System.Xml.XmlReader" Usage="sqlCommand.EndExecuteXmlReader asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><see cref="T:System.IAsyncResult" /> 호출에서 반환된 <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />입니다.</param>
        <summary>요청된 데이터를 XML로 반환하는 Transact-SQL 문의 비동기 실행을 완료합니다.</summary>
        <returns>결과 XML 데이터를 가져오는 데 사용할 수 있는 <see cref="T:System.Xml.XmlReader" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 하는 경우 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> TRANSACT-SQL 문을 실행 하려면 <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> 작업을 완료 하기 위해. 명령을 실행 하는 프로세스를 하지 않은 경우 아직 완료 작업이 완료 될 때까지이 메서드 차단 합니다. 명령을 사용 하 여 해당 작업을 완료는 사용자를 <xref:System.IAsyncResult> 에서 반환한 인스턴스를 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 메서드. 콜백 프로시저에 대 한 호출에 지정 된 경우 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>,이 메서드를 호출 해야 합니다.  
  
   
  
## Examples  
 사용을 보여 주는 예는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> 메서드를 참조 하세요 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" /> 매개 변수는 null(Microsoft Visual Basic의 <see langword="Nothing" />)입니다.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /> 단일 명령 실행에 대해 두 번 이상 호출되었거나, 실행 메서드에 대해 메서드가 일치하지 않습니다(예: 코드가 <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />에 대한 호출 실행을 완료하기 위해 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" />를 호출함).</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 연결 및 검색</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader ExecuteDbDataReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReader (behavior As CommandBehavior) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ ExecuteDbDataReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDbDataReader : System.Data.CommandBehavior -&gt; System.Data.Common.DbDataReader" Usage="sqlCommand.ExecuteDbDataReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReaderAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt; ExecuteDbDataReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Data.Common.DbDataReader&gt; ExecuteDbDataReaderAsync(valuetype System.Data.CommandBehavior behavior, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task&lt;System::Data::Common::DbDataReader ^&gt; ^ ExecuteDbDataReaderAsync(System::Data::CommandBehavior behavior, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDbDataReaderAsync : System.Data.CommandBehavior * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;" Usage="sqlCommand.ExecuteDbDataReaderAsync (behavior, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public override int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ExecuteNonQuery();" />
      <MemberSignature Language="F#" Value="override this.ExecuteNonQuery : unit -&gt; int" Usage="sqlCommand.ExecuteNonQuery " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteNonQuery</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>연결에 대한 Transact-SQL 문을 실행하고 영향을 받는 행의 수를 반환합니다.</summary>
        <returns>영향을 받은 행 수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> 카탈로그 작업 (예를 들어 데이터베이스의 구조를 쿼리 또는 테이블과 같은 데이터베이스 개체 만들기)를 수행 하거나 사용 하지 않고 데이터베이스에 데이터를 변경 하는 <xref:System.Data.DataSet> UPDATE, INSERT 또는 DELETE를 실행 하 여 문입니다.  
  
 하지만 <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> 행이 없는, 출력 매개 변수를 반환 하거나 반환 값 매개 변수에 매핑된 데이터 채워집니다.  
  
 UPDATE, INSERT 및 DELETE 문의 경우, 반환 값은 해당 명령의 영향을 받는 행의 수입니다. 다른 형식의 문의 경우에는 반환 값이 -1입니다.

삽입 또는 업데이트 되는 테이블에 트리거가 있는지, 반환 값은 insert 또는 update 작업 및 트리거 또는 트리거 영향을 받는 행 수가 모두 영향을 받는 행 수가 포함 됩니다.

SET NOCOUNT ON 설정 된 경우 (앞 또는 명령을 실행 하는 일환으로 명령 실행 하 여 시작 하는 트리거의 일부로) 연결에서 반환 되는 영향을 받는 행의 수에 영향을 주는 중지 하는 개별 문의 영향을 받는 행이이 m에 의해 메서드입니다.

문이 없습니다 수에는 포함 하는 검색 되 면 반환 값은-1입니다. 롤백이 발생 하는 경우 반환 값-1 이기도 합니다.



## Examples  
 다음 예에서는 <xref:System.Data.SqlClient.SqlCommand> 를 사용 하 여 다음 실행 <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>합니다. 예제는 TRANSACT-SQL 문 (예: 업데이트, 삽입 또는 삭제) 하는 문자열 및 데이터 원본에 연결 하는 데 문자열로 전달 됩니다.  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되면 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되면 **Char**, **NChar**, **NVarChar**, **VarChar** 또는 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정된 경우 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">잠긴 행에 대해 명령을 실행하는 동안 예외가 발생했습니다. Microsoft .NET Framework 버전 1.0을 사용하는 경우에는 이 예외가 생성되지 않습니다.  
  
스트리밍 작업 동안 시간이 초과되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.IO.IOException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.InvalidOperationException">스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.ObjectDisposedException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 검색 및 수정</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 및 ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQueryAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ExecuteNonQueryAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ExecuteNonQueryAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ExecuteNonQueryAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteNonQueryAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="sqlCommand.ExecuteNonQueryAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">취소 명령입니다.</param>
        <summary>연결에 대해 [!INCLUDE[tsql](~/includes/tsql-md.md)] 문을 실행하고 영향을 받는 행의 수를 반환하는 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" />의 비동기 버전입니다. 취소 토큰은 명령 제한 시간이 경과하기 전에 작업을 중단하는 요청에 사용할 수 있습니다.  예외는 반환된 작업 개체를 통해 보고됩니다.</summary>
        <returns>비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 비동기 프로그래밍에.NET Framework Data Provider for SQL Server에 대 한 자세한 내용은 참조 하세요. [비동기 프로그래밍](~/docs/framework/data/adonet/asynchronous-programming.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되면 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되면 **Char**, **NChar**, **NVarChar**, **VarChar** 또는 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정된 경우 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</exception>
        <exception cref="T:System.InvalidOperationException">작업 완료 전에 동일한 인스턴스에 대해 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" />를 두 번 이상 호출  
  
스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
 <see langword="Context Connection=true" /> 연결 문자열에 지정되어 있습니다.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.  
  
스트리밍 작업 동안 시간이 초과되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.IO.IOException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.ObjectDisposedException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고, <see cref="T:System.Data.SqlClient.SqlDataReader" />를 빌드합니다.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As SqlDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlDataReader ^ ExecuteReader();" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : unit -&gt; System.Data.SqlClient.SqlDataReader" Usage="sqlCommand.ExecuteReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고, <see cref="T:System.Data.SqlClient.SqlDataReader" />를 빌드합니다.</summary>
        <returns><see cref="T:System.Data.SqlClient.SqlDataReader" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> 속성이 `StoredProcedure`, <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 저장된 프로시저의 이름으로 속성을 설정 해야 합니다. 명령이 호출 하는 경우이 저장된 프로시저를 실행 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>합니다.  
  
> [!NOTE]
>  트랜잭션 교착 상태가 발생 될 때까지 예외가 throw 되지 않을 수 있습니다 <xref:System.Data.SqlClient.SqlDataReader.Read%2A> 라고 합니다.  
  
 다중 활성 결과 집합 (MARS) 기능은 동일한 연결을 사용 하 여 여러 동작을 허용 합니다.  
  
 사용 하는 경우 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> XML 데이터에 액세스 하려면 SQL Server는 XML 결과가 반환 코드 보다 큰 2, 033 문자 여러 행의 길이입니다. 이 동작을 방지 하려면 사용 하 여 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> FOR XML 쿼리를 읽을 수 있습니다.
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlCommand>, 다음 TRANSACT-SQL SELECT 문 문자열과 데이터 원본에 연결 하는 데 문자열을 전달 하 여 실행 합니다.  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteReader Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteReader Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되면 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되면 **Char**, **NChar**, **NVarChar**, **VarChar** 또는 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정된 경우 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">잠긴 행에 대해 명령을 실행하는 동안 예외가 발생했습니다. Microsoft .NET Framework 버전 1.0을 사용하는 경우에는 이 예외가 생성되지 않습니다.  
  
스트리밍 작업 동안 시간이 초과되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.InvalidOperationException">연결의 현재 상태가 닫힘입니다. <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /> 열린 <see cref="T:System.Data.SqlClient.SqlConnection" />이 필요합니다.  
  
스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.IO.IOException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.ObjectDisposedException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 검색 및 수정</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 및 ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As SqlDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : System.Data.CommandBehavior -&gt; System.Data.SqlClient.SqlDataReader" Usage="sqlCommand.ExecuteReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior"><see cref="T:System.Data.CommandBehavior" /> 값 중 하나입니다.</param>
        <summary><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고, <see cref="T:System.Data.CommandBehavior" /> 값 중 하나를 사용하여 <see cref="T:System.Data.SqlClient.SqlDataReader" />를 빌드합니다.</summary>
        <returns><see cref="T:System.Data.SqlClient.SqlDataReader" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> 속성이 `StoredProcedure`, <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 저장된 프로시저의 이름으로 속성을 설정 해야 합니다. 명령이 호출 하는 경우이 저장된 프로시저를 실행 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>합니다.  
  
> [!NOTE]
>  사용 하 여 <xref:System.Data.CommandBehavior.SequentialAccess> 큰 값 및 이진 데이터를 검색 합니다. 그렇지 않은 경우는 <xref:System.OutOfMemoryException> 발생할 수 있으며 연결이 닫힙니다.  
  
 다중 활성 결과 집합 (MARS) 기능은 동일한 연결을 사용 하 여 여러 동작을 허용 합니다.  
  
 사용 하는 경우 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> XML 데이터에 액세스 하려면 SQL Server는 XML 결과가 반환 코드 보다 큰 2, 033 문자 여러 행의 길이입니다. 이 동작을 방지 하려면 사용 하 여 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> FOR XML 쿼리를 읽을 수 있습니다.
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlCommand>, 다음 TRANSACT-SQL SELECT 문 문자열과 데이터 원본에 연결 하는 데 문자열을 전달 하 여 실행 합니다. <xref:System.Data.CommandBehavior> <xref:System.Data.CommandBehavior.CloseConnection>으로 설정됩니다.  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteReader2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader2/CS/mysample.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteReader2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader2/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되면 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되면 **Char**, **NChar**, **NVarChar**, **VarChar** 또는 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정된 경우 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">스트리밍 작업 동안 시간이 초과되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.IO.IOException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.InvalidOperationException">스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.ObjectDisposedException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 연결 및 검색</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReaderAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 <see cref="T:System.Data.SqlClient.SqlCommand" />에서 설명한 [!INCLUDE[tsql](~/includes/tsql-md.md)] 문이나 저장 프로시저의 비동기 실행을 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 비동기 프로그래밍에.NET Framework Data Provider for SQL Server에 대 한 자세한 내용은 참조 하세요. [비동기 프로그래밍](~/docs/framework/data/adonet/asynchronous-programming.md)합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReaderAsync () As Task(Of SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync();" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고 <see cref="T:System.Data.SqlClient.SqlDataReader" />를 작성하는 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />의 비동기 버전입니다. 예외는 반환된 작업 개체를 통해 보고됩니다.</summary>
        <returns>비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 비동기 프로그래밍에.NET Framework Data Provider for SQL Server에 대 한 자세한 내용은 참조 하세요. [비동기 프로그래밍](~/docs/framework/data/adonet/asynchronous-programming.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되면 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되면 **Char**, **NChar**, **NVarChar**, **VarChar** 또는 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정된 경우 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</exception>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Data.CommandBehavior" /> 값이 잘못되었습니다.</exception>
        <exception cref="T:System.InvalidOperationException">작업 완료 전에 동일한 인스턴스에 대해 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync" />를 두 번 이상 호출  
  
스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
 <see langword="Context Connection=true" /> 연결 문자열에 지정되어 있습니다.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.  
  
스트리밍 작업 동안 시간이 초과되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.IO.IOException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.ObjectDisposedException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReaderAsync (behavior As CommandBehavior) As Task(Of SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : System.Data.CommandBehavior -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="behavior">문 실행 및 데이터 검색을 위한 옵션입니다.  <see langword="Default" />로 설정하면 <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" />는 전체 작업을 반환하기 전에 전체 행을 읽습니다.</param>
        <summary><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고 <see cref="T:System.Data.SqlClient.SqlDataReader" />를 작성하는 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />의 비동기 버전입니다. 예외는 반환된 작업 개체를 통해 보고됩니다.</summary>
        <returns>비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 비동기 프로그래밍에.NET Framework Data Provider for SQL Server에 대 한 자세한 내용은 참조 하세요. [비동기 프로그래밍](~/docs/framework/data/adonet/asynchronous-programming.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되면 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되면 **Char**, **NChar**, **NVarChar**, **VarChar** 또는 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정된 경우 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</exception>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Data.CommandBehavior" /> 값이 잘못되었습니다.</exception>
        <exception cref="T:System.InvalidOperationException">작업 완료 전에 동일한 인스턴스에 대해 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" />를 두 번 이상 호출  
  
스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
 <see langword="Context Connection=true" /> 연결 문자열에 지정되어 있습니다.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.  
  
스트리밍 작업 동안 시간이 초과되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.IO.IOException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.ObjectDisposedException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">취소 명령입니다.</param>
        <summary><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고 <see cref="T:System.Data.SqlClient.SqlDataReader" />를 작성하는 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />의 비동기 버전입니다.  
  
취소 토큰은 명령 제한 시간이 경과하기 전에 작업을 중단하는 요청에 사용할 수 있습니다.  예외는 반환된 작업 개체를 통해 보고됩니다.</summary>
        <returns>비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 비동기 프로그래밍에.NET Framework Data Provider for SQL Server에 대 한 자세한 내용은 참조 하세요. [비동기 프로그래밍](~/docs/framework/data/adonet/asynchronous-programming.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되면 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되면 **Char**, **NChar**, **NVarChar**, **VarChar** 또는 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정된 경우 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</exception>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Data.CommandBehavior" /> 값이 잘못되었습니다.</exception>
        <exception cref="T:System.InvalidOperationException">작업 완료 전에 동일한 인스턴스에 대해 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />를 두 번 이상 호출  
  
스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
 <see langword="Context Connection=true" /> 연결 문자열에 지정되어 있습니다.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.  
  
스트리밍 작업 동안 시간이 초과되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.IO.IOException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.ObjectDisposedException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync(valuetype System.Data.CommandBehavior behavior, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync(System::Data::CommandBehavior behavior, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : System.Data.CommandBehavior * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync (behavior, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="behavior">문 실행 및 데이터 검색을 위한 옵션입니다.  <see langword="Default" />로 설정하면 <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" />는 전체 작업을 반환하기 전에 전체 행을 읽습니다.</param>
        <param name="cancellationToken">취소 명령입니다.</param>
        <summary><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고 다음을 빌드하는 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />의 비동기 버전입니다. <see cref="T:System.Data.SqlClient.SqlDataReader" />  
  
취소 토큰은 명령 제한 시간이 경과하기 전에 작업을 중단하는 요청에 사용할 수 있습니다.  예외는 반환된 작업 개체를 통해 보고됩니다.</summary>
        <returns>비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 비동기 프로그래밍에.NET Framework Data Provider for SQL Server에 대 한 자세한 내용은 참조 하세요. [비동기 프로그래밍](~/docs/framework/data/adonet/asynchronous-programming.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되면 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되면 **Char**, **NChar**, **NVarChar**, **VarChar** 또는 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정된 경우 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</exception>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Data.CommandBehavior" /> 값이 잘못되었습니다.</exception>
        <exception cref="T:System.InvalidOperationException">작업 완료 전에 동일한 인스턴스에 대해 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />를 두 번 이상 호출  
  
스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
 <see langword="Context Connection=true" /> 연결 문자열에 지정되어 있습니다.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.  
  
스트리밍 작업 동안 시간이 초과되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.IO.IOException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.ObjectDisposedException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public override object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ExecuteScalar();" />
      <MemberSignature Language="F#" Value="override this.ExecuteScalar : unit -&gt; obj" Usage="sqlCommand.ExecuteScalar " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteScalar</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>쿼리를 실행하고 쿼리에서 반환된 결과 집합에서 첫 번째 행의 첫 번째 열을 반환합니다. 다른 열이나 행은 무시됩니다.</summary>
        <returns>결과 집합에서 첫 번째 행의 첫 번째 열이거나, 결과 집합이 비어 있을 경우 null 참조(Visual Basic에서는 <see langword="Nothing" />)입니다. 최대 2,033자를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> 데이터베이스에서 단일 값 (예를 들어 집계 값)을 검색 하는 방법입니다. 사용 하 여 보다 적은 코드가 필요 합니다 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 메서드를 반환 하는 데이터를 사용 하 여 단일 값을 생성 해야 하는 작업을 수행을 <xref:System.Data.SqlClient.SqlDataReader>입니다.  
  
 일반적인 <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> 쿼리는 다음 C# 예제와 같이 형식을 지정할 수 있습니다.  
  
```  
cmd.CommandText = "SELECT COUNT(*) FROM dbo.region";  
Int32 count = (Int32) cmd.ExecuteScalar();  
```  
  
   
  
## Examples  
 다음 예에서는 <xref:System.Data.SqlClient.SqlCommand> 를 사용 하 여 다음 실행 <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>합니다. 예제는 테이블에 삽입 될 새 값을 나타내는 문자열 및 데이터 원본에 연결 하는 데 문자열로 전달 됩니다. 함수 반환 새 **Identity** 새 행이 삽입 된 경우 열 값, 0에 실패 합니다.  
  
 [!code-csharp[DataWorks SqlCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.ExecuteScalar/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.ExecuteScalar/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되면 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되면 **Char**, **NChar**, **NVarChar**, **VarChar** 또는 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정된 경우 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">잠긴 행에 대해 명령을 실행하는 동안 예외가 발생했습니다. Microsoft .NET Framework 버전 1.0을 사용하는 경우에는 이 예외가 생성되지 않습니다.  
  
스트리밍 작업 동안 시간이 초과되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.InvalidOperationException">스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.IO.IOException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.ObjectDisposedException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 연결 및 검색</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalarAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;object&gt; ExecuteScalarAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ExecuteScalarAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ ExecuteScalarAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteScalarAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="sqlCommand.ExecuteScalarAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">취소 명령입니다.</param>
        <summary>쿼리를 비동기적으로 실행하고 쿼리에서 반환된 결과 집합의 첫 번째 행의 첫 번째 열을 반환하는 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalar" />의 비동기 버전입니다. 다른 열이나 행은 무시됩니다.  
  
취소 토큰은 명령 제한 시간이 경과하기 전에 작업을 중단하는 요청에 사용할 수 있습니다. 예외는 반환된 작업 개체를 통해 보고됩니다.</summary>
        <returns>비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 비동기 프로그래밍에.NET Framework Data Provider for SQL Server에 대 한 자세한 내용은 참조 하세요. [비동기 프로그래밍](~/docs/framework/data/adonet/asynchronous-programming.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되면 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되면 **Char**, **NChar**, **NVarChar**, **VarChar** 또는 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정된 경우 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</exception>
        <exception cref="T:System.InvalidOperationException">작업 완료 전에 동일한 인스턴스에 대해 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" />를 두 번 이상 호출  
  
스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
 <see langword="Context Connection=true" /> 연결 문자열에 지정되어 있습니다.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.  
  
스트리밍 작업 동안 시간이 초과되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.IO.IOException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.ObjectDisposedException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteXmlReader">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader ExecuteXmlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader ExecuteXmlReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteXmlReader () As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ ExecuteXmlReader();" />
      <MemberSignature Language="F#" Value="member this.ExecuteXmlReader : unit -&gt; System.Xml.XmlReader" Usage="sqlCommand.ExecuteXmlReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고, <see cref="T:System.Xml.XmlReader" /> 개체를 빌드합니다.</summary>
        <returns><see cref="T:System.Xml.XmlReader" /> 개체</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 **XmlReader** 이 반환한 메서드는 비동기 작업을 지원 하지 않습니다.

 합니다 <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 속성은 일반적으로 지정을 [!INCLUDE[tsql](~/includes/tsql-md.md)] 유효한 FOR XML 절을 사용 하 여 문을 합니다. 그러나 <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 반환 하는 문을 지정할 수도 있습니다 `ntext` 또는 `nvarchar` 유효한 XML 또는 정의 된 열의 내용을 포함 하는 데이터는 `xml` 데이터 형식입니다.  
  
 일반적인 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 쿼리는 다음 Microsoft Visual C# 예제와 같이 형식을 지정할 수 있습니다.  
  
```  
SqlCommand command = new SqlCommand("SELECT * FROM dbo.Customers FOR XML AUTO, XMLDATA", SqlConn);  
```  
  
 이 메서드는 XML 데이터가 포함 된 단일 열 단일 행 결과 집합을 검색 하려면 데도 사용할 수 있습니다. 이 예제의 경우 둘 이상의 하나의 행이 반환 된 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 메서드 연결은 <xref:System.Xml.XmlReader> 결과의 나머지 부분에서 첫 번째 행 및 삭제를 값으로 설정 합니다.  
  
 다중 활성 결과 집합 (MARS) 기능은 동일한 연결을 사용 하 여 여러 동작을 허용 합니다.  
  
 사용 하는 경우 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> XML 데이터에 액세스 하려면 SQL Server는 XML 결과가 반환 코드 보다 큰 2, 033 문자 여러 행의 길이입니다. 이 동작을 방지 하려면 사용 하 여 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> FOR XML 쿼리를 읽을 수 있습니다.


## Examples  
 다음 예에서는 <xref:System.Data.SqlClient.SqlCommand> 를 사용 하 여 다음 실행 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>합니다. 이 예제에서는 XML 선택 Transact SQL 문 문자열과 데이터 원본에 연결 하는 데 문자열로 전달 됩니다.  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteXmlReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteXmlReader/CS/mysample.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteXmlReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteXmlReader/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되면 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되면 **Char**, **NChar**, **NVarChar**, **VarChar** 또는 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정된 경우 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">잠긴 행에 대해 명령을 실행하는 동안 예외가 발생했습니다. Microsoft .NET Framework 버전 1.0을 사용하는 경우에는 이 예외가 생성되지 않습니다.  
  
스트리밍 작업 동안 시간이 초과되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.InvalidOperationException">스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.IO.IOException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.ObjectDisposedException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 연결 및 검색</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteXmlReaderAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Data.SqlClient.SqlCommand" />에서 설명한 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작하고 결과를 <see cref="T:System.Xml.XmlReader" /> 개체로 반환합니다.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteXmlReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt; ExecuteXmlReaderAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Xml.XmlReader&gt; ExecuteXmlReaderAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteXmlReaderAsync () As Task(Of XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Xml::XmlReader ^&gt; ^ ExecuteXmlReaderAsync();" />
      <MemberSignature Language="F#" Value="member this.ExecuteXmlReaderAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;" Usage="sqlCommand.ExecuteXmlReaderAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고 <see cref="T:System.Xml.XmlReader" /> 개체를 빌드하는 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />의 비동기 버전입니다.  
  
예외는 반환된 작업 개체를 통해 보고됩니다.</summary>
        <returns>비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

합니다 **XmlReader** 이 반환한 메서드는 비동기 작업을 지원 하지 않습니다.

비동기 프로그래밍에.NET Framework Data Provider for SQL Server에 대 한 자세한 내용은 참조 하세요. [비동기 프로그래밍](~/docs/framework/data/adonet/asynchronous-programming.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되면 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되면 **Char**, **NChar**, **NVarChar**, **VarChar** 또는 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정된 경우 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</exception>
        <exception cref="T:System.InvalidOperationException">작업 완료 전에 동일한 인스턴스에 대해 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" />를 두 번 이상 호출  
  
스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
 <see langword="Context Connection=true" /> 연결 문자열에 지정되어 있습니다.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.  
  
스트리밍 작업 동안 시간이 초과되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.IO.IOException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.ObjectDisposedException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteXmlReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt; ExecuteXmlReaderAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Xml.XmlReader&gt; ExecuteXmlReaderAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Xml::XmlReader ^&gt; ^ ExecuteXmlReaderAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ExecuteXmlReaderAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;" Usage="sqlCommand.ExecuteXmlReaderAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">취소 명령입니다.</param>
        <summary><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고 <see cref="T:System.Xml.XmlReader" /> 개체를 빌드하는 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />의 비동기 버전입니다.  
  
취소 토큰은 명령 제한 시간이 경과하기 전에 작업을 중단하는 요청에 사용할 수 있습니다.  예외는 반환된 작업 개체를 통해 보고됩니다.</summary>
        <returns>비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

합니다 **XmlReader** 이 반환한 메서드는 비동기 작업을 지원 하지 않습니다.

비동기 프로그래밍에.NET Framework Data Provider for SQL Server에 대 한 자세한 내용은 참조 하세요. [비동기 프로그래밍](~/docs/framework/data/adonet/asynchronous-programming.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되면 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되면 **Char**, **NChar**, **NVarChar**, **VarChar** 또는 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.  
  
<see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정된 경우 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</exception>
        <exception cref="T:System.InvalidOperationException">작업 완료 전에 동일한 인스턴스에 대해 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" />를 두 번 이상 호출  
  
스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.  
  
 <see langword="Context Connection=true" /> 연결 문자열에 지정되어 있습니다.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.  
  
스트리밍 작업 동안 시간이 초과되었습니다. 스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.IO.IOException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <exception cref="T:System.ObjectDisposedException">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.  스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Notification">
      <MemberSignature Language="C#" Value="public System.Data.Sql.SqlNotificationRequest Notification { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Sql.SqlNotificationRequest Notification" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Notification" />
      <MemberSignature Language="VB.NET" Value="Public Property Notification As SqlNotificationRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Sql::SqlNotificationRequest ^ Notification { System::Data::Sql::SqlNotificationRequest ^ get(); void set(System::Data::Sql::SqlNotificationRequest ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Notification : System.Data.Sql.SqlNotificationRequest with get, set" Usage="System.Data.SqlClient.SqlCommand.Notification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Sql.SqlNotificationRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 명령에 바인딩된 <see cref="T:System.Data.Sql.SqlNotificationRequest" /> 개체를 지정하는 값을 가져오거나 설정합니다.</summary>
        <value>null(기본값)로 설정하면 알림을 요청할 수 없습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 명령 적용에 대 한 실행 되기 전에이 속성에 대 한 값을 설정 해야 합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">쿼리 알림 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 연결 및 검색</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="NotificationAutoEnlist">
      <MemberSignature Language="C#" Value="public bool NotificationAutoEnlist { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotificationAutoEnlist" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist" />
      <MemberSignature Language="VB.NET" Value="Public Property NotificationAutoEnlist As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotificationAutoEnlist { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotificationAutoEnlist : bool with get, set" Usage="System.Data.SqlClient.SqlCommand.NotificationAutoEnlist" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>응용 프로그램에서 일반적인 <see cref="T:System.Data.SqlClient.SqlDependency" /> 개체의 쿼리 알림을 자동으로 받을지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see langword="true" /> 응용 프로그램에서 쿼리 알림을 자동으로 받아야 하는 경우 그렇지 않으면 <see langword="false" />합니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 기능은 SQL Server에 대 한 ASP 페이지에서 실행 되는 모든 명령에 대 한 알림을 수신 하도록 ASP.NET 응용 프로그램에서 사용 됩니다. 따라서 ASP.NET을 페이지를 렌더링 하는 데 사용 하는 쿼리를 다른 결과가 생성 될 때까지 페이지를 캐싱할 수 있습니다. 자동 인 리스트 먼 트 합니다.  
  
 쿼리 알림을 지원 된 버전의 SQL Server에만이 속성이 적용 됩니다. 이전 버전에서는이 속성을 설정 `true` 응용 프로그램에 영향이 없습니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/query-notifications-in-sql-server.md">쿼리 알림 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 연결 및 검색</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As SqlParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlParameterCollection ^ Parameters { System::Data::SqlClient::SqlParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Data.SqlClient.SqlParameterCollection" Usage="System.Data.SqlClient.SqlCommand.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_Parameters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.SqlClient.SqlParameterCollection" />를 가져옵니다.</summary>
        <value>Transact-SQL 문이나 저장 프로시저의 매개 변수입니다. 기본값은 빈 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Microsoft.NET Framework Data Provider for SQL Server는 SQL 문이나 저장된 프로시저의 명령에 의해 호출에 매개 변수 전달에 대 한 물음표 (?) 자리 표시자를 지원 하지 않습니다 `CommandType.Text`합니다. 이 경우 명명 된 매개 변수를 사용 합니다. 예:  
  
 SELECT * FROM Customers WHERE CustomerID = @CustomerID  
  
> [!NOTE]
>  컬렉션의 매개 변수를 실행할 수는 쿼리의 요구 사항과 일치 하지 않는 경우 오류가 발생할 수 있습니다.  
  
 자세한 내용은 [구성 매개 변수 및 매개 변수 데이터 형식](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 만드는 방법을 보여 줍니다.는 <xref:System.Data.SqlClient.SqlCommand> 매개 변수를 추가 하 고는 <xref:System.Data.SqlClient.SqlParameterCollection>합니다.  
  
 [!code-csharp[DataWorks SqlParameterCollection.AddWithValue#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParameterCollection.AddWithValue/CS/source.cs#1)]
 [!code-vb[DataWorks SqlParameterCollection.AddWithValue#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParameterCollection.AddWithValue/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 연결 및 검색</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public override void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Prepare();" />
      <MemberSignature Language="F#" Value="override this.Prepare : unit -&gt; unit" Usage="sqlCommand.Prepare " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.Prepare</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>SQL Server 인스턴스의 명령에 사용할 버전을 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> 로 설정 된 `StoredProcedure`에 대 한 호출 <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> 이 작동 하지 않을 수 있지만 성공 해야 합니다.  
  
 호출 하기 전에 <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>를 준비 하는 문을 각 매개 변수의 데이터 형식을 지정 합니다. 가변 길이 데이터 형식의 각 매개 변수에 대해 설정 해야 합니다는 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 필요한 최대 크기 속성입니다. <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> 이러한 조건이 충족 되지 않는 경우 오류를 반환 합니다.  
  
> [!NOTE]
>  TRANSACT-SQL을 실행 하 여 데이터베이스 컨텍스트를 변경할 경우 `USE <database>` 문을 호출 하 여 합니다 <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A> 메서드를 <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> 를 두 번째로 호출 해야 합니다.  
  
 호출 하는 경우는 `Execute` 메서드를 호출한 후 <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>, 지정 된 값 보다 큰 모든 매개 변수 값을 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 속성 자동으로 매개 변수의 원래 지정 된 크기로 잘리고 잘림 오류가 반환 됩니다.  
  
 출력 매개 변수 (준비) 하는 여부는 사용자 지정 데이터 형식이 있어야 합니다. 가변 길이 데이터 형식에 지정할 경우 최대 지정 해야 <xref:System.Data.SqlClient.SqlParameter.Size%2A>합니다.  
  
 Visual Studio 2010 이전의 <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> 에서 예외가 발생 했습니다.  Visual Studio 2010부터,이 메서드가 예외를 throw 하지 않습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> 메서드를 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[Classic WebData SqlCommand.Prepare#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Prepare/CS/Source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.Prepare#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Prepare/VB/Source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 연결 및 검색</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ResetCommandTimeout">
      <MemberSignature Language="C#" Value="public void ResetCommandTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCommandTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ResetCommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCommandTimeout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCommandTimeout();" />
      <MemberSignature Language="F#" Value="member this.ResetCommandTimeout : unit -&gt; unit" Usage="sqlCommand.ResetCommandTimeout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> 속성을 기본값으로 다시 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본값은 <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> 30 초입니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 연결 및 검색</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="StatementCompleted">
      <MemberSignature Language="C#" Value="public event System.Data.StatementCompletedEventHandler StatementCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.StatementCompletedEventHandler StatementCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StatementCompleted As StatementCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::StatementCompletedEventHandler ^ StatementCompleted;" />
      <MemberSignature Language="F#" Value="member this.StatementCompleted : System.Data.StatementCompletedEventHandler " Usage="member this.StatementCompleted : System.Data.StatementCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.StatementCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Transact-SQL 문의 실행이 완료될 때 발생합니다.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.CreateParameter">
      <MemberSignature Language="C#" Value="System.Data.IDbDataParameter IDbCommand.CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbDataParameter System.Data.IDbCommand.CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.System#Data#IDbCommand#CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Function CreateParameter () As IDbDataParameter Implements IDbCommand.CreateParameter" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbDataParameter ^ System.Data.IDbCommand.CreateParameter() = System::Data::IDbCommand::CreateParameter;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.CreateParameter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbDataParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.SqlClient.SqlParameter" /> 개체의 새 인스턴스를 만듭니다.</summary>
        <returns><see cref="T:System.Data.SqlClient.SqlParameter" /> 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.ExecuteReader">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDbCommand.ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDbCommand.ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.System#Data#IDbCommand#ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Function ExecuteReader () As IDataReader Implements IDbCommand.ExecuteReader" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDbCommand.ExecuteReader() = System::Data::IDbCommand::ExecuteReader;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteReader</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고, <see cref="T:System.Data.SqlClient.SqlDataReader" />를 빌드합니다.</summary>
        <returns><see cref="T:System.Data.SqlClient.SqlDataReader" /> 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbCommand.ExecuteReader">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDbCommand.ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDbCommand.ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Function ExecuteReader (behavior As CommandBehavior) As IDataReader Implements IDbCommand.ExecuteReader" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDbCommand.ExecuteReader(System::Data::CommandBehavior behavior) = System::Data::IDbCommand::ExecuteReader;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="behavior"><see cref="T:System.Data.CommandBehavior" /> 값 중 하나입니다.</param>
        <summary><see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고, <see cref="T:System.Data.CommandBehavior" /> 값 중 하나를 사용하여 <see cref="T:System.Data.SqlClient.SqlDataReader" />를 빌드합니다.</summary>
        <returns><see cref="T:System.Data.SqlClient.SqlDataReader" /> 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 인스턴스의 복사본인 새 <see cref="T:System.Data.SqlClient.SqlCommand" /> 개체를 만듭니다.</summary>
        <returns>이 인스턴스의 복사본인 새 <see cref="T:System.Data.SqlClient.SqlCommand" /> 개체입니다.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlTransaction ^ Transaction { System::Data::SqlClient::SqlTransaction ^ get(); void set(System::Data::SqlClient::SqlTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transaction : System.Data.SqlClient.SqlTransaction with get, set" Usage="System.Data.SqlClient.SqlCommand.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_Transaction")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.SqlClient.SqlTransaction" />가 실행되는 <see cref="T:System.Data.SqlClient.SqlCommand" />을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Data.SqlClient.SqlTransaction" /> 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정할 수 없습니다는 <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> 속성을 특정 값으로 이미 설정 되어 있으며 명령을 실행 하는 프로세스입니다. 트랜잭션 속성을 설정 하는 경우는 <xref:System.Data.SqlClient.SqlTransaction> 동일 하 게 연결 되지 않은 개체 <xref:System.Data.SqlClient.SqlConnection> 으로 <xref:System.Data.SqlClient.SqlCommand> 개체를 다음 번에 문을 실행 하려고 하면 예외가 발생 합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/local-transactions.md">트랜잭션 수행</related>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 연결 및 검색</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedRowSource : System.Data.UpdateRowSource with get, set" Usage="System.Data.SqlClient.SqlCommand.UpdatedRowSource" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.UpdatedRowSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbCommand_UpdatedRowSource")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.Common.DbDataAdapter" />의 **Update** 메서드에 의해 사용될 때 명령 결과가 <see cref="T:System.Data.DataRow" />에 적용되는 방법을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Data.UpdateRowSource" /> 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본값 <xref:System.Data.UpdateRowSource> 값이 **둘 다** 명령이 자동으로 생성 하지 않는 한 (의 경우와 <xref:System.Data.SqlClient.SqlCommandBuilder>), 경우 기본값은 **None**합니다.  
  
 사용에 대 한 자세한 내용은 합니다 **UpdatedRowSource** 속성을 참조 하십시오 [DataAdapter 매개 변수](~/docs/framework/data/adonet/dataadapter-parameters.md)합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md">ADO.NET에서 데이터 연결 및 검색</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
  </Members>
</Type>
