<Type Name="SqlConnection" FullName="System.Data.SqlClient.SqlConnection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e96fea078cabf5ca5fdf5fd76c48fb885e03a1c2" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65003868" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlConnection : System.Data.Common.DbConnection, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlConnection extends System.Data.Common.DbConnection implements class System.Data.IDbConnection, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlConnection&#xA;Inherits DbConnection&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlConnection sealed : System::Data::Common::DbConnection, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type SqlConnection = class&#xA;    inherit DbConnection&#xA;    interface IDbConnection&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDbConnection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("InfoMessage")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>SQL Server 데이터베이스에 대한 연결을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection> 개체는 SQL Server 데이터 원본에 고유한 세션을 나타냅니다. 클라이언트/서버 데이터베이스 시스템을 사용 하 여 서버에 대 한 네트워크 연결과 같습니다. <xref:System.Data.SqlClient.SqlConnection> 와 함께 사용 됩니다 <xref:System.Data.SqlClient.SqlDataAdapter> 고 <xref:System.Data.SqlClient.SqlCommand> Microsoft SQL Server 데이터베이스에 연결할 때 성능을 향상 시키기 위해. 모든 제 3 자 SQL Server 제품 및 다른 OLE DB에서 지 원하는 데이터 원본을 사용 하 여 <xref:System.Data.OleDb.OleDbConnection>입니다.  
  
 인스턴스를 만들면 <xref:System.Data.SqlClient.SqlConnection>, 모든 속성은 초기 값으로 설정 됩니다. 이러한 값의 목록을 보려면 참조는 <xref:System.Data.SqlClient.SqlConnection> 생성자입니다.  
  
 참조 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> 목록은 연결 문자열 키워드입니다.  
  
 경우는 <xref:System.Data.SqlClient.SqlConnection> 이동의 범위를 닫을 수 없습니다. 따라서 명시적으로 닫아야 연결 호출한 `Close` 또는 `Dispose`합니다. `Close` 및 `Dispose` 기능적으로 동일 합니다. 값 연결 풀링 `Pooling` 로 설정 된 `true` 또는 `yes`, 기본 연결이 연결 풀으로 반환 됩니다. 다른 한편으로 하는 경우 `Pooling` 로 설정 된 `false` 또는 `no`, 실제로 닫혀 기본 서버에 연결 합니다.  
  
> [!NOTE]
>  연결이 연결 풀에서 반환될 경우에는 실제로 해제된 것이 아니므로 연결이 연결 풀에서 반입되거나 연결 풀로 반환되는 경우 서버에서 로그인 및 로그아웃 이벤트가 발생하지 않습니다. 자세한 내용은 [SQL Server 연결 풀링(ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md)을 참조하세요.  
  
 연결이 닫혀 항상 되도록 내에서 연결을 엽니다는 `using` 차단, 다음 코드 조각에 표시 된 대로 합니다. 이렇게 하면 코드 블록을 종료 하는 경우 연결이 자동으로 닫힙니다.  
  
```vb  
Using connection As New SqlConnection(connectionString)  
    connection.Open()  
    ' Do work here; connection closed on following line.  
End Using  
  
```  
  
```csharp  
using (SqlConnection connection = new SqlConnection(connectionString))  
    {  
        connection.Open();  
        // Do work here; connection closed on following line.  
    }  
```  
  
> [!NOTE]
>  고성능 애플리케이션을 배포 하려면 연결 풀링을 사용 해야 합니다. .NET Framework Data Provider for SQL Server를 사용 하면 일부 설정을 수정할 수 있지만 공급자를 자동으로 관리 하기 때문에 연결 풀링을 사용 하도록 필요가 없습니다. 자세한 내용은 [SQL Server 연결 풀링(ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md)을 참조하세요.  
  
 경우는 <xref:System.Data.SqlClient.SqlException> 메서드를 실행 하 여 생성 되는 <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlConnection> 심각도 19 이하인 경우 열린 상태로 유지 됩니다. 서버 일반적으로 닫습니다 심각도 수준이 20 이상일 경우는 <xref:System.Data.SqlClient.SqlConnection>합니다. 그러나 사용자는 연결을 다시 열고 계속할 수 있습니다.  
  
 인스턴스를 만드는 애플리케이션을 <xref:System.Data.SqlClient.SqlConnection> 개체는 모든 직접 및 간접 호출자가 선언적 또는 명령적 보안이 요구를 설정 하 여 코드에 충분 한 권한이 필요할 수 있습니다. <xref:System.Data.SqlClient.SqlConnection> 보안 요청을 사용 하 여 <xref:System.Data.SqlClient.SqlClientPermission> 개체입니다. 사용자가 해당 코드를 사용 하 여 충분 한 권한이 있는지 확인할 수는 <xref:System.Data.SqlClient.SqlClientPermissionAttribute> 개체입니다. 사용자와 관리자가 이용할 수 있습니다 합니다 [Caspol.exe (코드 액세스 보안 정책 도구)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md) 컴퓨터, 사용자 및 엔터프라이즈 수준 보안 정책을 수정할 수 있습니다. 자세한 내용은 [.NET의 보안](~/docs/standard/security/index.md)을 참조하세요. 보안 요청을 사용 하는 방법을 보여주는 예제를 참조 하세요 [코드 액세스 보안 및 ADO.NET](~/docs/framework/data/adonet/code-access-security.md)합니다.  
  
 서버에서 경고 및 정보 메시지를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [연결 이벤트](~/docs/framework/data/adonet/connection-events.md)합니다. SQL Server 엔진 오류 및 오류 메시지에 대 한 자세한 내용은 참조 하세요. [데이터베이스 엔진 이벤트 및 오류](/sql/relational-databases/errors-events/database-engine-events-and-errors)합니다.
  
> [!CAUTION]
>  공유 메모리 대신 TCP를 강제할 수 있습니다. tcp를 접두사로 사용 하 여 수행할 수 있습니다: 연결의 서버 이름에 문자열 하거나 사용할 수 있습니다 localhost입니다.  
  
   
  
## Examples  
 다음 예제는 <xref:System.Data.SqlClient.SqlCommand> 및 <xref:System.Data.SqlClient.SqlConnection>합니다. <xref:System.Data.SqlClient.SqlConnection> 열고로 설정 합니다 <xref:System.Data.SqlClient.SqlCommand.Connection%2A> 에 대 한는 <xref:System.Data.SqlClient.SqlCommand>. 이 예제에서는 호출 <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>합니다. 이를 위해를 <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> 연결 문자열과 쿼리 문자열로 전달 되는 [!INCLUDE[tsql](~/includes/tsql-md.md)] 문. 코드를 사용 하 여 종료 될 때 연결이 자동으로 닫히면 블록입니다.  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">데이터 원본에 연결(ADO.NET)</related>
    <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 및 ADO.NET</related>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Data.SqlClient.SqlConnection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.SqlClient.SqlConnection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 인스턴스가 <xref:System.Data.SqlClient.SqlConnection> 만들어지면 읽기/쓰기 속성의 관련된 키워드를 사용 하 여 구체적으로 설정 되어 있지 않으면 다음 초기 값으로 설정 됩니다는 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> 속성입니다.  
  
|속성|초기 값|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>|빈 문자열 ("")|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.SqlClient.SqlConnection.Database%2A>|빈 문자열 ("")|  
|<xref:System.Data.SqlClient.SqlConnection.DataSource%2A>|빈 문자열 ("")|  
  
 사용 하 여 이러한 속성에 대 한 값을 변경할 수는 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> 속성입니다. <xref:System.Data.SqlClient.SqlConnectionStringBuilder> 클래스 만들고 연결 문자열의 내용을 관리 하기 위한 기능을 제공 합니다.  
  
   
  
## Examples  
 다음 예제는 <xref:System.Data.SqlClient.SqlConnection>합니다.  
  
 [!code-csharp[Classic WebData SqlConnection.SqlConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.SqlConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">데이터 원본에 연결(ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 및 ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlConnection : string -&gt; System.Data.SqlClient.SqlConnection" Usage="new System.Data.SqlClient.SqlConnection connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">SQL Server 데이터베이스를 여는 데 사용되는 연결입니다.</param>
        <summary>연결 문자열을 포함한 문자열이 제공된 경우 <see cref="T:System.Data.SqlClient.SqlConnection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 인스턴스가 <xref:System.Data.SqlClient.SqlConnection> 만들어지면 읽기/쓰기 속성의 관련된 키워드를 사용 하 여 구체적으로 설정 되어 있지 않으면 다음 초기 값으로 설정 됩니다는 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> 속성입니다.  
  
|속성|초기 값|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>|`connectionString`|  
|<xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.SqlClient.SqlConnection.Database%2A>|빈 문자열 ("")|  
|<xref:System.Data.SqlClient.SqlConnection.DataSource%2A>|빈 문자열 ("")|  
  
 사용 하 여 이러한 속성에 대 한 값을 변경할 수는 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> 속성입니다. <xref:System.Data.SqlClient.SqlConnection> 클래스 만들고 연결 문자열의 내용을 관리 하기 위한 기능을 제공 합니다.  
  
   
  
## Examples  
 다음 예제는 <xref:System.Data.SqlClient.SqlConnection>합니다.  
  
 [!code-csharp[Classic WebData SqlConnection.SqlConnection1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.SqlConnection1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.SqlConnection1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">데이터 원본에 연결(ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnection (string connectionString, System.Data.SqlClient.SqlCredential credential);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class System.Data.SqlClient.SqlCredential credential) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, credential As SqlCredential)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ credential);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public SqlConnection (string connectionString, System.Data.SqlClient.SqlCredential cred);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class System.Data.SqlClient.SqlCredential cred) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, cred As SqlCredential)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlConnection(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ cred);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlConnection : string * System.Data.SqlClient.SqlCredential -&gt; System.Data.SqlClient.SqlConnection" Usage="new System.Data.SqlClient.SqlConnection (connectionString, credential)" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlConnection : string * System.Data.SqlClient.SqlCredential -&gt; System.Data.SqlClient.SqlConnection" Usage="new System.Data.SqlClient.SqlConnection (connectionString, cred)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="credential" Type="System.Data.SqlClient.SqlCredential" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cred" Type="System.Data.SqlClient.SqlCredential" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="connectionString">연결 문자열 키워드 <see langword="Integrated Security = true" />, <see langword="UserId" /> 또는 <see langword="Password" />를 사용하지 않거나 <see langword="ContextConnection = true" />를 사용하지 않는 연결 문자열입니다.</param>
        <param name="credential"><see cref="T:System.Data.SqlClient.SqlCredential" /> 개체입니다. <paramref name="credential" />이 null인 경우 <see cref="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)" />은 <see cref="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)" />과 기능적으로 동일합니다.</param>
        <param name="cred">To be added.</param>
        <summary>연결 문자열이 지정되면 <see cref="T:System.Data.SqlClient.SqlConnection" /> 클래스의 새 인스턴스를 초기화합니다. 연결 문자열은 사용자 ID와 암호를 포함하는 <see langword="Integrated Security = true" /> 및 <see cref="T:System.Data.SqlClient.SqlCredential" /> 개체를 사용하지 않습니다.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="AccessToken">
      <MemberSignature Language="C#" Value="public string AccessToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessToken" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.AccessToken" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessToken As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessToken { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessToken : string with get, set" Usage="System.Data.SqlClient.SqlConnection.AccessToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>연결용 액세스 토큰을 가져오거나 설정합니다.</summary>
        <value>연결용 액세스 토큰입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberSignature Language="F#" Value="override this.BeginDbTransaction : System.Data.IsolationLevel -&gt; System.Data.Common.DbTransaction" Usage="sqlConnection.BeginDbTransaction isolationLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>데이터베이스 트랜잭션을 시작합니다.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction();" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : unit -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>데이터베이스 트랜잭션을 시작합니다.</summary>
        <returns>새 트랜잭션을 나타내는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 SQL Server 구현의 BEGIN TRANSACTION에 매핑됩니다.  
  
 명시적으로 커밋 또는 사용 하 여 트랜잭션을 롤백합니다 해야 합니다 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> 또는 <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> 메서드. SQL Server 트랜잭션 관리 모델에 대 한.NET Framework Data Provider를 올바르게 수행 했는지, SQL Server에서 제공 하는 것과 같은 다른 트랜잭션 관리 모델을 사용 하지 마십시오.  
  
> [!NOTE]
>  격리 수준을 지정 하지 않으면, 기본 격리 수준이 사용 됩니다. 사용 하 여 격리 수준을 지정 하는 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> 메서드를 오버 로드를 사용 하 여 합니다 `iso` 매개 변수 (<xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>). 트랜잭션에 대 한 설정 된 격리 수준 트랜잭션이 완료 된 후 연결이 닫히거나 삭제 될 때까지 유지 됩니다. 격리 수준을 설정 **스냅숏** snapshot 격리 수준을 해제 되어 없는 데이터베이스에서 예외를 throw 하지 않습니다. 트랜잭션의 기본 격리 수준을 사용 하 여 완료 됩니다.  
  
> [!CAUTION]
>  트랜잭션이 시작 되 고 서버의 수준 16 또는 더 높은 오류를 발생 하는 경우 트랜잭션이 롤백되지 것입니다 다시까지 <xref:System.Data.SqlClient.SqlDataReader.Read%2A> 메서드가 실행 됩니다. 예외가 발생 하지 않습니다 **ExecuteReader**합니다.  
  
> [!CAUTION]
>  쿼리에서 많은 양의 데이터 및 호출을 반환 하는 경우 `BeginTransaction`, <xref:System.Data.SqlClient.SqlException> SQL Server에서 MARS를 사용 하는 경우 병렬 트랜잭션은 허용 하지 않으므로 throw 됩니다. 이 문제를 방지 하려면 항상 연결 트랜잭션 명령, 연결 또는 둘 다를 사용 하 여 판독기를 열기 전에 합니다.  
  
 SQL Server 트랜잭션에 대 한 자세한 내용은 참조 하세요. [트랜잭션 (Transact SQL)](/sql/t-sql/language-elements/transactions-transact-sql)합니다.
  
   
  
## Examples  
 다음 예제는 <xref:System.Data.SqlClient.SqlConnection> 및 <xref:System.Data.SqlClient.SqlTransaction>합니다. 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, 및 <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> 메서드.  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">MARS(Multiple Active Result Sets)를 사용하는 경우 병렬 트랜잭션은 허용되지 않습니다.</exception>
        <exception cref="T:System.InvalidOperationException">병렬 트랜잭션은 지원되지 않습니다.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">트랜잭션 및 동시성</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">데이터 원본에 연결(ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 및 ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction (System.Data.IsolationLevel iso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction(valuetype System.Data.IsolationLevel iso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (iso As IsolationLevel) As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction(System::Data::IsolationLevel iso);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : System.Data.IsolationLevel -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction iso" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iso" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="iso">트랜잭션이 실행되어야 하는 격리 수준입니다.</param>
        <summary>지정된 격리 수준으로 데이터베이스 트랜잭션을 시작합니다.</summary>
        <returns>새 트랜잭션을 나타내는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 SQL Server 구현의 BEGIN TRANSACTION에 매핑됩니다.  
  
 명시적으로 커밋 또는 사용 하 여 트랜잭션을 롤백합니다 해야 합니다 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> 또는 <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> 메서드. SQL Server 트랜잭션 관리 모델에 대 한.NET Framework Data Provider를 올바르게 수행 했는지, SQL Server에서 제공 하는 것과 같은 다른 트랜잭션 관리 모델을 사용 하지 마십시오.  
  
> [!NOTE]
> 트랜잭션이 커밋 또는 롤백, 트랜잭션의 격리 수준 자동 커밋 모드 (SQL Server 기본값)에 있는 모든 후속 명령에 대 한 유지 됩니다. 이 격리 수준 유지 하 고 행을 위해서는 다른 사용자가 잠금 REPEATABLE READ와 같은 예기치 않은 결과 생성할 수 있습니다. 격리 수준 (READ COMMITTED) 기본값으로 다시 설정 하려면 다음을 실행 합니다 [!INCLUDE[tsql](~/includes/tsql-md.md)] 트랜잭션 격리 수준 READ COMMITTED 설정 문 또는 호출 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType> 올 즉시 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType>합니다. SQL Server 격리 수준에 대 한 자세한 내용은 참조 하세요. [트랜잭션 격리 수준](/sql/t-sql/language-elements/transaction-isolation-levels)합니다.
  
 SQL Server 트랜잭션에 대 한 자세한 내용은 참조 하세요. [트랜잭션 (Transact SQL)](/sql/t-sql/language-elements/transactions-transact-sql)합니다.
  
> [!CAUTION]
>  쿼리에서 많은 양의 데이터 및 호출을 반환 하는 경우 `BeginTransaction`, <xref:System.Data.SqlClient.SqlException> SQL Server에서 MARS를 사용 하는 경우 병렬 트랜잭션은 허용 하지 않으므로 throw 됩니다. 이 문제를 방지 하려면 항상 연결 트랜잭션 명령, 연결 또는 둘 다를 사용 하 여 판독기를 열기 전에 합니다.  
  
   
  
## Examples  
 다음 예제는 <xref:System.Data.SqlClient.SqlConnection> 및 <xref:System.Data.SqlClient.SqlTransaction>합니다. 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, 및 <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> 메서드.  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">MARS(Multiple Active Result Sets)를 사용하는 경우 병렬 트랜잭션은 허용되지 않습니다.</exception>
        <exception cref="T:System.InvalidOperationException">병렬 트랜잭션은 지원되지 않습니다.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">트랜잭션(ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">데이터 원본에 연결(ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction (string transactionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction(string transactionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (transactionName As String) As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction(System::String ^ transactionName);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : string -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction transactionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="transactionName">트랜잭션 이름입니다.</param>
        <summary>지정된 트랜잭션 이름으로 데이터베이스 트랜잭션을 시작합니다.</summary>
        <returns>새 트랜잭션을 나타내는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 SQL Server 구현의 BEGIN TRANSACTION에 매핑됩니다.  
  
 길이 `transactionName` 매개 변수는 32 자를 초과할 수 없습니다; 그렇지 않으면 예외가 throw 됩니다.  
  
 값을 `transactionName` 에 대 한 이후 호출에서 매개 변수를 사용할 수 있습니다 <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> 및를 `savePoint` 의 매개 변수는 <xref:System.Data.SqlClient.SqlTransaction.Save%2A> 메서드.  
  
 명시적으로 커밋 또는 사용 하 여 트랜잭션을 롤백합니다 해야 합니다 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> 또는 <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> 메서드. 되도록 하는 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 데이터 공급자에 대 한 SQL Server 트랜잭션 관리 모델 올바르게 사용 하지 않도록 SQL Server를 제공한 것과 같은 다른 트랜잭션 관리 모델입니다.  
  
 SQL Server 트랜잭션에 대 한 자세한 내용은 참조 하세요. [트랜잭션 (Transact SQL)](/sql/t-sql/language-elements/transactions-transact-sql)합니다.
  
> [!CAUTION]
>  쿼리에서 많은 양의 데이터 및 호출을 반환 하는 경우 `BeginTransaction`, <xref:System.Data.SqlClient.SqlException> SQL Server에서 MARS를 사용 하는 경우 병렬 트랜잭션은 허용 하지 않으므로 throw 됩니다. 이 문제를 방지 하려면 항상 연결 트랜잭션 명령, 연결 또는 둘 다를 사용 하 여 판독기를 열기 전에 합니다.  
  
   
  
## Examples  
 다음 예제는 <xref:System.Data.SqlClient.SqlConnection> 및 <xref:System.Data.SqlClient.SqlTransaction>합니다. 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, 및 <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> 메서드.  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">MARS(Multiple Active Result Sets)를 사용하는 경우 병렬 트랜잭션은 허용되지 않습니다.</exception>
        <exception cref="T:System.InvalidOperationException">병렬 트랜잭션은 지원되지 않습니다.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">트랜잭션(ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">데이터 원본에 연결(ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction BeginTransaction (System.Data.IsolationLevel iso, string transactionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlTransaction BeginTransaction(valuetype System.Data.IsolationLevel iso, string transactionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (iso As IsolationLevel, transactionName As String) As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlTransaction ^ BeginTransaction(System::Data::IsolationLevel iso, System::String ^ transactionName);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : System.Data.IsolationLevel * string -&gt; System.Data.SqlClient.SqlTransaction" Usage="sqlConnection.BeginTransaction (iso, transactionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iso" Type="System.Data.IsolationLevel" />
        <Parameter Name="transactionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="iso">트랜잭션이 실행되어야 하는 격리 수준입니다.</param>
        <param name="transactionName">트랜잭션 이름입니다.</param>
        <summary>지정된 격리 수준과 트랜잭션 이름으로 데이터베이스 트랜잭션을 시작합니다.</summary>
        <returns>새 트랜잭션을 나타내는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 명령은 SQL Server 구현의 BEGIN TRANSACTION에 매핑됩니다.  
  
 값을 `transactionName` 에 대 한 이후 호출에서 매개 변수를 사용할 수 있습니다 <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> 및를 `savePoint` 의 매개 변수는 <xref:System.Data.SqlClient.SqlTransaction.Save%2A> 메서드.  
  
 명시적으로 커밋 또는 사용 하 여 트랜잭션을 롤백합니다 해야 합니다 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A> 또는 <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> 메서드. SQL Server 트랜잭션 관리 모델을 올바르게 수행 했는지, SQL Server에서 제공 하는 것과 같은 다른 트랜잭션 관리 모델을 사용 하지 마십시오.  
  
> [!NOTE]
>  트랜잭션이 커밋 또는 롤백, 트랜잭션의 격리 수준 자동 커밋 모드 (SQL Server 기본값)에 있는 모든 후속 명령에 대 한 유지 됩니다. 이 격리 수준 유지 하 고 행을 위해서는 다른 사용자가 잠금 REPEATABLE READ와 같은 예기치 않은 결과 생성할 수 있습니다. 격리 수준 (READ COMMITTED) 기본값으로 다시 설정 하려면 다음을 실행 합니다 [!INCLUDE[tsql](~/includes/tsql-md.md)] 트랜잭션 격리 수준 READ COMMITTED 설정 문 또는 호출 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType> 올 즉시 <xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType>합니다. SQL Server 격리 수준에 대 한 자세한 내용은 참조 하세요. [트랜잭션 격리 수준](/sql/t-sql/language-elements/transaction-isolation-levels)합니다.
  
 SQL Server 트랜잭션에 대 한 자세한 내용은 참조 하세요. [트랜잭션 (Transact SQL)](/sql/t-sql/language-elements/transactions-transact-sql)합니다.
  
> [!CAUTION]
>  쿼리에서 많은 양의 데이터 및 호출을 반환 하는 경우 `BeginTransaction`, <xref:System.Data.SqlClient.SqlException> SQL Server에서 MARS를 사용 하는 경우 병렬 트랜잭션은 허용 하지 않으므로 throw 됩니다. 이 문제를 방지 하려면 항상 연결 트랜잭션 명령, 연결 또는 둘 다를 사용 하 여 판독기를 열기 전에 합니다.  
  
   
  
## Examples  
 다음 예제는 <xref:System.Data.SqlClient.SqlConnection> 및 <xref:System.Data.SqlClient.SqlTransaction>합니다. 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, 및 <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> 메서드.  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">MARS(Multiple Active Result Sets)를 사용하는 경우 병렬 트랜잭션은 허용되지 않습니다.</exception>
        <exception cref="T:System.InvalidOperationException">병렬 트랜잭션은 지원되지 않습니다.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">트랜잭션(ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">데이터 원본에 연결(ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string database);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string database) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (database As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ database);" />
      <MemberSignature Language="F#" Value="override this.ChangeDatabase : string -&gt; unit" Usage="sqlConnection.ChangeDatabase database" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.ChangeDatabase(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="database" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="database">현재 데이터베이스 대신 사용할 데이터베이스의 이름입니다.</param>
        <summary>열려 있는 <see cref="T:System.Data.SqlClient.SqlConnection" />의 현재 데이터베이스를 변경합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 제공 되는 값을 `database` 매개 변수는 올바른 데이터베이스 이름 이어야 합니다. `database` 매개 변수는 null 값, 빈 문자열 또는 공백 문자로 된 문자열을 포함할 수 없습니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlConnection> 하 고 해당 읽기 전용 속성 중 일부를 표시 합니다.  
  
 [!code-csharp[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">데이터베이스 이름이 올바르지 않은 경우</exception>
        <exception cref="T:System.InvalidOperationException">연결이 열려 있지 않습니다.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">데이터베이스를 변경할 수 없습니다.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">데이터 원본에 연결(ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 및 ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ChangePassword">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>SQL Server 암호를 변경합니다.</summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public static void ChangePassword (string connectionString, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangePassword(string connectionString, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangePassword (connectionString As String, newPassword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangePassword(System::String ^ connectionString, System::String ^ newPassword);" />
      <MemberSignature Language="F#" Value="static member ChangePassword : string * string -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ChangePassword (connectionString, newPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="newPassword" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="connectionString">원하는 서버에 연결하는 데 충분한 정보가 포함된 연결 문자열입니다. 연결 문자열은 사용자 ID와 현재 암호를 포함해야 합니다.</param>
        <param name="newPassword">설정할 새 암호입니다. 이 암호는 서버에 설정된 최소 길이, 특정 문자 요구 사항 등의 암호 보안 정책을 따라야 합니다.</param>
        <summary>연결 문자열에 지정된 사용자의 SQL Server 암호를 제공된 새 암호로 변경합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SQL Server를 Windows Server에서 사용 하는 경우 개발자가 기존 암호를 변경 하려면 현재 및 새 암호를 제공 하는 클라이언트 애플리케이션을 수 있는 기능을 활용을 걸릴 수 있습니다. 응용 프로그램 이전 만료 및 관리자 작업 없이이 작업을 완료할 수 하는 경우 초기 로그인 중 새 암호를 사용자에 게 확인 하는 등의 기능을 구현할 수 있습니다.  
  
 <xref:System.Data.SqlClient.SqlConnection.ChangePassword%2A> 메서드는 제공 된 지정 된 사용자에 대 한 SQL Server 암호를 변경 `connectionString` 에서 제공 되는 값 매개 변수는 `newPassword` 매개 변수입니다. 연결 문자열에 통합된 보안에 대 한 옵션을 포함 하는 경우 (즉, "Integrated Security = True" 이거나 이와 동등한), 예외가 throw 됩니다.  
  
 호출 암호가 만료 되었음을 확인 하는 <xref:System.Data.SqlClient.SqlConnection.Open%2A> 메서드를 발생 시킵니다는 <xref:System.Data.SqlClient.SqlException>합니다. 연결 문자열에 포함 된 암호를 재설정 해야를 표시 하려면를 <xref:System.Data.SqlClient.SqlException.Number%2A> 속성 예외에 대 한 상태 값 18487 또는 18488이 포함 됩니다. 첫 번째 값 (18487) 암호 만료 (18488) 두 번째 로그인 시 암호를 재설정할 수 해야 나타냅니다 나타냅니다.  
  
 이 메서드 서버에 자체 연결, 암호 변경 요청을 열고 완료 하는 즉시 연결을 닫습니다. 이 연결에서 검색 되지 않으며 SQL Server 연결 풀으로 반환 합니다.  
  
   
  
## Examples  
 다음은 암호를 변경 하는 간단한 예제입니다.  
  
```csharp
class Program {  
   static void Main(string[] args) {  
      System.Data.SqlClient.SqlConnection.ChangePassword(  
        "Data Source=a_server;Initial Catalog=a_database;UID=user;PWD=old_password",   
       "new_password");  
   }  
}  
  
```  
  
```vb
Module Module1  
    Sub Main()  
System.Data.SqlClient.SqlConnection.ChangePassword(  
        "Data Source=a_server;Initial Catalog=a_database;UID=user;PWD=old_password",   
       "new_password")  
    End Sub  
End Module  
  
```  
  
 다음 콘솔 애플리케이션에서 사용자의 암호를 변경 하 여 현재 암호 만료 되었기 때문에 관련 된 문제를 보여 줍니다.  
  
 [!code-csharp[DataWorks SqlConnection.ChangePassword#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlConnection.ChangePassword/CS/source.cs#1)]
 [!code-vb[DataWorks SqlConnection.ChangePassword#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlConnection.ChangePassword/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">연결 문자열에는 통합된 보안을 사용 하는 옵션이 포함 됩니다.  
  
또는 
<paramref name="newPassword" /> 128 자를 초과 합니다.</exception>
        <exception cref="T:System.ArgumentNullException">중 하나는 <paramref name="connectionString" /> 또는 <paramref name="newPassword" /> 매개 변수가 null입니다.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/745c5f95-2f02-4674-b378-6d51a7ec2490">연결 문자열(ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">데이터 원본에 연결(ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 용.NET Framework 데이터 공급자 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public static void ChangePassword (string connectionString, System.Data.SqlClient.SqlCredential credential, System.Security.SecureString newPassword);" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangePassword(string connectionString, class System.Data.SqlClient.SqlCredential credential, class System.Security.SecureString newPassword) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangePassword (connectionString As String, credential As SqlCredential, newPassword As SecureString)" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangePassword(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ credential, System::Security::SecureString ^ newPassword);" FrameworkAlternate="dotnet-plat-ext-2.1;netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="F#" Value="static member ChangePassword : string * System.Data.SqlClient.SqlCredential * System.Security.SecureString -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ChangePassword (connectionString, credential, newPassword)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-3.0" />
      <MemberSignature Language="C#" Value="public static void ChangePassword (string connectionString, System.Data.SqlClient.SqlCredential credential, System.Security.SecureString newSecurePassword);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangePassword(string connectionString, class System.Data.SqlClient.SqlCredential credential, class System.Security.SecureString newSecurePassword) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangePassword (connectionString As String, credential As SqlCredential, newSecurePassword As SecureString)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangePassword(System::String ^ connectionString, System::Data::SqlClient::SqlCredential ^ credential, System::Security::SecureString ^ newSecurePassword);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="static member ChangePassword : string * System.Data.SqlClient.SqlCredential * System.Security.SecureString -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ChangePassword (connectionString, credential, newSecurePassword)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)" FrameworkAlternate="netcore-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="credential" Type="System.Data.SqlClient.SqlCredential" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="newPassword" Type="System.Security.SecureString" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
        <Parameter Name="newSecurePassword" Type="System.Security.SecureString" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="connectionString">서버에 연결하는 데 충분한 정보가 포함된 연결 문자열입니다. 연결 문자열에서 <see langword="Integrated Security = true" />, <see langword="UserId" />, <see langword="Password" /> 또는 <see langword="ContextConnection = true" /> 연결 문자열 키워드 중 하나를 사용해서는 안 됩니다.</param>
        <param name="credential"><see cref="T:System.Data.SqlClient.SqlCredential" /> 개체입니다.</param>
        <param name="newPassword">새 암호입니다.<paramref name="newPassword" />는 는 읽기 전용이어야 합니다. 암호는 서버에 설정된 최소 길이, 특정 문자 요구 사항 등의 암호 보안 정책도 따라야 합니다.</param>
        <param name="newSecurePassword">To be added.</param>
        <summary><see cref="T:System.Data.SqlClient.SqlCredential" /> 개체에 지정된 사용자에 대한 SQL Server 암호를 변경합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">연결 문자열의 조합이 포함 <see langword="UserId" />하십시오 <see langword="Password" />, 또는 <see langword="Integrated Security=true" />합니다.

또는 
연결 문자열에 <see langword="Context Connection=true" />입니다.  

또는

<paramref name="newSecurePassword" />(또는 <paramref name="newPassword" />)가 128자보다 긴 경우

또는

<paramref name="newSecurePassword" />(또는 <paramref name="newPassword" />)가 읽기 전용이 아닌 경우

또는

<paramref name="newSecurePassword" />(또는 <paramref name="newPassword" />)가 빈 문자열인 경우</exception>
        <exception cref="T:System.ArgumentNullException">매개 변수 중 하나(<paramref name="connectionString" />, <paramref name="credential" />, 또는 <paramref name="newSecurePassword" />)가 null입니다.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ClearAllPools">
      <MemberSignature Language="C#" Value="public static void ClearAllPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearAllPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ClearAllPools" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearAllPools ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearAllPools();" />
      <MemberSignature Language="F#" Value="static member ClearAllPools : unit -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ClearAllPools " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>연결 풀을 비웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.ClearAllPools%2A> 다시 설정 하거나 비우고 연결 풀. 적절 하 게 표시 되 고 때 (풀으로 반환 되 고) 대신 무시 됩니다 호출 시 사용 하 여에 연결 되어 있는 경우 <xref:System.Data.SqlClient.SqlConnection.Close%2A> 에서도 호출 됩니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">SQL Server 연결 풀링(ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ClearPool">
      <MemberSignature Language="C#" Value="public static void ClearPool (System.Data.SqlClient.SqlConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearPool(class System.Data.SqlClient.SqlConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearPool (connection As SqlConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearPool(System::Data::SqlClient::SqlConnection ^ connection);" />
      <MemberSignature Language="F#" Value="static member ClearPool : System.Data.SqlClient.SqlConnection -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.ClearPool connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="connection">풀에서 지울 <see cref="T:System.Data.SqlClient.SqlConnection" />입니다.</param>
        <summary>지정된 연결과 관련된 연결 풀을 비웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.ClearPool%2A> 연관 된 연결 풀 지웁니다는 `connection`합니다. 추가 연결에 연결 된 경우 `connection` 는 호출 시 사용에서 적절 하 게 표시 되는 및이 때 (풀으로 반환 되 고) 대신 삭제 됩니다 <xref:System.Data.SqlClient.SqlConnection.Close%2A> 에서도 호출 됩니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">SQL Server 연결 풀링(ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ClientConnectionId">
      <MemberSignature Language="C#" Value="public Guid ClientConnectionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ClientConnectionId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ClientConnectionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientConnectionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ClientConnectionId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientConnectionId : Guid" Usage="System.Data.SqlClient.SqlConnection.ClientConnectionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>연결 시도 성공 또는 실패 여부와 관계없이 가장 최근에 연결 시도된 연결 ID입니다.</summary>
        <value>가장 최근에 연결 시도된 연결 ID입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.ClientConnectionId%2A> 또한 연결 하는 서버의 버전에 관계 없이 작동 되지만 확장된 이벤트 로그 및 연결 링 버퍼 오류에 대 한 항목 수에 [!INCLUDE[sskatmai_r2](~/includes/sskatmai-r2-md.md)] 및 이전 버전입니다.  
  
 연결 ID 로깅이 확장된 이벤트를 사용 하는 경우 서버에서 실패가 발생 하는 경우를 확인 하려면 확장된 이벤트 로그에서 연결 ID를 찾을 수 있습니다. 연결 링 버퍼에서 연결 ID를 찾을 수도 있습니다 ([연결 링 버퍼를 사용 하 여 SQL Server 2008의 연결 문제 해결](https://go.microsoft.com/fwlink/?LinkId=207752)) 특정 연결 오류입니다. 연결 ID를 연결 링 버퍼에 없는 경우에 네트워크 오류를 가정할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="sqlConnection.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>데이터베이스에 대한 연결을 닫습니다. 열린 연결을 닫기 위해 기본적으로 이 메서드를 사용합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.Close%2A> 메서드 보류 중인 트랜잭션을 모두 롤백합니다. 그런 다음 연결 풀에 대 한 연결을 해제 하거나 연결 풀링을 사용 하지 않도록 설정 하는 경우 연결을 닫습니다.  
  
> [!NOTE]
>  트랜잭션을 사용 하 여 시작 보류 [!INCLUDE[tsql](~/includes/tsql-md.md)] 또는 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A> 연결 풀링을 사용 하는 경우 연결을 재설정 때 자동으로 롤백됩니다. 연결 풀링이 꺼져 있으면 트랜잭션이 롤백됩니다 후 `SqlConnection.Close` 라고 합니다. 통해 시작 된 트랜잭션은 <xref:System.Transactions> 을 통해 제어 됩니다 합니다 `System.Transactions` 인프라에 영향을 받지 않습니다 `SqlConnection.Close`합니다.  
  
 애플리케이션에서 호출할 수 <xref:System.Data.SqlClient.SqlConnection.Close%2A> 번 이상. 예외가 생성 됩니다.  
  
 경우는 <xref:System.Data.SqlClient.SqlConnection> 이동의 범위를 닫을 수 없습니다. 따라서 명시적으로 닫아야 연결 호출한 `Close` 또는 `Dispose`합니다. `Close` 및 `Dispose` 기능적으로 동일 합니다. 값 연결 풀링 `Pooling` 로 설정 된 `true` 또는 `yes`, 기본 연결이 연결 풀으로 반환 됩니다. 반면에 경우 `Pooling` 로 설정 된 `false` 또는 `no`, 기본 서버에 대 한 연결이 닫혀 있습니다.  
  
> [!NOTE]
>  연결이 연결 풀에서 반환될 경우에는 실제로 해제된 것이 아니므로 연결이 연결 풀에서 반입되거나 연결 풀로 반환되는 경우 서버에서 로그인 및 로그아웃 이벤트가 발생하지 않습니다. 자세한 내용은 [SQL Server 연결 풀링(ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md)을 참조하세요.  
  
> [!CAUTION]
>  호출 하지 마세요 `Close` 하거나 `Dispose` 연결, DataReader에서 또는 다른 관리 개체에는 `Finalize` 클래스의 메서드. 종료자에서는 클래스에 직접 속한 관리 되지 않는 리소스만 해제 해야 합니다. 클래스에 관리되지 않는 리소스가 없는 경우 클래스 정의에 `Finalize` 메서드를 포함하지 마세요. 자세한 내용은 [가비지 수집](~/docs/standard/garbage-collection/index.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.SqlClient.SqlConnection>엽니다, 해당 속성의 일부를 표시 합니다. 연결 끝에 자동으로 닫혀는 `using` 블록입니다.  
  
 [!code-csharp[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">연결을 여는 동안 발생한 연결 수준 오류입니다.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">SQL Server 연결 풀링(ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">데이터 원본에 연결(ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 및 ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionKeyCacheTtl">
      <MemberSignature Language="C#" Value="public static TimeSpan ColumnEncryptionKeyCacheTtl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan ColumnEncryptionKeyCacheTtl" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ColumnEncryptionKeyCacheTtl As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan ColumnEncryptionKeyCacheTtl { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionKeyCacheTtl : TimeSpan with get, set" Usage="System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">항상 암호화</see> 기능에 대한 열 암호화 키 캐시에 있는 열 암호화 키 항목에 대한 Time-To-Live를 가져오거나 설정합니다. 기본값은 2시간입니다. 0은 캐싱이 전혀 수행되지 않음을 의미합니다.</summary>
        <value>시간 간격입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionQueryMetadataCacheEnabled">
      <MemberSignature Language="C#" Value="public static bool ColumnEncryptionQueryMetadataCacheEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ColumnEncryptionQueryMetadataCacheEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ColumnEncryptionQueryMetadataCacheEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool ColumnEncryptionQueryMetadataCacheEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionQueryMetadataCacheEnabled : bool with get, set" Usage="System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see href="https://docs.microsoft.com/sql/relational-databases/security/encryption/always-encrypted-database-engine">항상 암호화</see>가 설정된 데이터베이스에 대해 실행되는 매개 변수가 있는 쿼리에 대해 쿼리 메타데이터 캐싱이 사용되도록 설정(true)되는지 또는 사용되지 않도록 설정(false)되는지를 나타내는 값을 가져오거나 설정합니다. 기본값은 true입니다.</summary>
        <value>쿼리 메타데이터 캐싱이 사용되도록 설정되면 true이고, 그렇지 않으면 false입니다. 기본값은 true입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 매개 변수가 있는 쿼리에 대 한 SqlClient 왕복 SQL Server에 매개 변수 메타 데이터에 대 한 암호화 해야 하는 매개 변수를 보려면 방법과 (어떤 키 및 알고리즘을 사용할 수 해야) 합니다. 동일한 쿼리를 여러 번 호출 하는 애플리케이션, 하는 경우 대 한 추가 왕복 애플리케이션 성능이 저하 될 때마다 서버에 설정 됩니다.  
  
 사용 하 여 **ColumnEncryptionQueryMetadataCacheEnabled** 동일한 쿼리가 여러 번 호출 되는 경우 true로 설정 하 고, 서버에 왕복 수 한 번만 합니다. 캐시는 2000 쿼리로 설정 되어 있는지를 구성할 수 없는 최대 크기 매개를 변수가 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionTrustedMasterKeyPaths">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,System.Collections.Generic.IList&lt;string&gt;&gt; ColumnEncryptionTrustedMasterKeyPaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IDictionary`2&lt;string, class System.Collections.Generic.IList`1&lt;string&gt;&gt; ColumnEncryptionTrustedMasterKeyPaths" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ColumnEncryptionTrustedMasterKeyPaths As IDictionary(Of String, IList(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::IList&lt;System::String ^&gt; ^&gt; ^ ColumnEncryptionTrustedMasterKeyPaths { System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::IList&lt;System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionTrustedMasterKeyPaths : System.Collections.Generic.IDictionary&lt;string, System.Collections.Generic.IList&lt;string&gt;&gt;" Usage="System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Collections.Generic.IList&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터베이스 서버에 대한 신뢰할 수 있는 키 경로 목록을 설정할 수 있습니다. 애플리케이션 쿼리를 처리하는 동안 드라이버가 목록에 없는 키 경로를 수신하면 쿼리가 실패합니다. 이 속성은 손상된 SQL Server가 가짜 키 경로를 제공하여 키 저장소 자격 증명이 누출되게 하는 보안 공격에 대해 추가적인 보호를 제공합니다.</summary>
        <value>열 암호화를 위한 신뢰할 수 있는 마스터 키 경로의 목록입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.Data.SqlClient.SqlConnection.ConnectionString" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_ConnectionString")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlConnectionStringEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SQL Server 데이터베이스를 여는 데 사용되는 문자열을 가져오거나 설정합니다.</summary>
        <value>초기 연결을 설정하는 데 필요한 소스 데이터베이스 이름 및 다른 매개 변수를 포함하는 연결 문자열입니다. 기본값은 빈 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> OLE DB 연결 문자열을 유사 하지만 동일 하지 않습니다. 반환 되는 연결 문자열은 사용자가 설정한 동일 OLE DB 또는 ADO와 달리 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>, 보안 정보 Persist Security Info 값 설정 된 경우 빼기 `false` (기본값). .NET Framework Data Provider for SQL Server를 유지 하지 않거나 Persist Security Info를 설정 하지 않으면 연결 문자열에 암호를 반환 `true`합니다.  

 사용할 수는 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> 속성을 데이터베이스에 연결 합니다. 다음 예제에서는 일반적인 연결 문자열을 보여 줍니다.  
  
```  
"Persist Security Info=False;Integrated Security=true;Initial Catalog=Northwind;server=(local)"  
```  
  
 새 <xref:System.Data.SqlClient.SqlConnectionStringBuilder> 런타임에 유효한 연결 문자열을 생성 합니다. 자세한 내용은 [연결 문자열 작성기](~/docs/framework/data/adonet/connection-string-builders.md)를 참조하세요.  
  
 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> 연결이 닫힌 경우에 속성을 설정할 수 있습니다. 대부분의 연결 문자열 값에 해당 읽기 전용 속성이 있습니다. 연결 문자열을 설정 하면 오류가 발견 된 경우를 제외 하 고 이러한 속성 업데이트 됩니다. 이 경우 어떤 속성도 업데이트 됩니다. <xref:System.Data.SqlClient.SqlConnection> 속성에 포함 된 설정만 반환 된 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>합니다.  
  
 로컬 컴퓨터에 연결 하려면 서버에 대 한 "(local)"을 지정 합니다. 서버 이름을 지정 하지 않으면 경우 로컬 컴퓨터의 기본 인스턴스에 연결을 시도 합니다.  
  
 다시 설정 하 여 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> 닫힌된 연결 다시 설정 암호에 포함 되는 모든 연결 문자열 값 (및 관련된 속성). 예를 들어, 포함 하는 연결 문자열을 설정 하는 경우 "데이터베이스 = AdventureWorks"를 다시 설정 하도록 연결 문자열 및 "데이터 원본 = myserver; 통합된 보안 = true", <xref:System.Data.SqlClient.SqlConnection.Database%2A> 속성을 더 이상 "AdventureWorks"로 설정 됩니다.  
  
 연결 문자열 설정 된 후에 즉시 구문 분석 됩니다. 구문 분석할 때, 런타임 예외를 같은 구문에서 오류가 발견 되 면 <xref:System.ArgumentException>에 생성 됩니다. 연결 설정 하려고 시도 하는 경우에 다른 오류를 찾을 수 있습니다.  
  
 연결 문자열의 기본 형식은 일련의 세미콜론으로 구분 된 키워드/값 쌍을 포함 합니다. 각 키워드와 해당 값은 등호(=)로 연결됩니다. 세미콜론, 작은따옴표, 또는 큰따옴표 문자를 포함 하는 값에 포함 하려면 값을 큰따옴표로 묶어야 합니다. 값을 세미콜론 및 큰따옴표 문자를 포함 하는 경우 값을 따옴표로 묶을 수 있습니다. 작은따옴표 값 큰따옴표 문자로 시작 하는 경우에 유용 이기도 합니다. 반대로, 값은 작은따옴표를 사용 하 여 시작 하는 경우 큰따옴표를 사용할 수 있습니다. 작은따옴표 및 큰따옴표 문자를 포함 하는 값, 값 내에서 발생 될 때마다 값을 묶을 때 사용 하는 인용 부호 문자를 배가 되어야 합니다.  
  
 문자열 값에 선행 또는 후행 공백을 포함 하려면 값을 작은따옴표 또는 큰따옴표로 묶어야 합니다. 따옴표로 묶은 경우에 정수, 부울, 또는 열거형된 값 주위의 모든 선행 또는 후행 공백이 무시 됩니다. 그러나 문자열 리터럴 키워드 또는 값을 내부에 공백 유지 됩니다. 구분 기호를 사용 하지 않고 연결 문자열에서 작은따옴표 또는 큰따옴표를 사용할 수 있습니다 (예를 들어, 데이터 원본 = my'Server 또는 데이터 원본 내 "Server =)는 인용 부호 문자 값의 첫 번째 또는 마지막 문자가 아닌 경우.  
  
 키워드는 대/소문자 구분 하지 않습니다.  
  
 다음 표에서 키워드 값에 대 한 유효한 이름을 표시 합니다 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>합니다.  
  
|키워드|기본|설명|  
|-------------|-------------|-----------------|  
|Addr|N/A|동의어 **데이터 원본**입니다.|  
|Address|N/A|동의어 **데이터 원본**입니다.|  
|App|N/A|동의어 **애플리케이션 이름**입니다.|  
|Application Name|N/A|'.NET SQLClient Data Provider' 없는 애플리케이션 이름을 제공 하는 경우 애플리케이션의 이름입니다.<br /><br /> 애플리케이션 이름은 128 자를 사용할 수 있습니다 또는 작습니다.|  
|`ApplicationIntent`|`ReadWrite`|서버에 연결할 때 애플리케이션 작업 유형을 선언합니다. 가능한 값은 `ReadOnly`와 `ReadWrite`입니다. 예를 들어 다음과 같습니다.<br /><br /> `ApplicationIntent=ReadOnly`<br /><br /> Always On 가용성 그룹의 SqlClient 지원에 대한 자세한 내용은 [고가용성 및 재해 복구에 대한 SqlClient 지원](~/docs/framework/data/adonet/sql/sqlclient-support-for-high-availability-disaster-recovery.md)을 참조하십시오.|  
|Asynchronous Processing<br /><br /> 또는<br /><br /> Async|' f a l '|때 `true`, 이면 비동기 작업을 지원 합니다. 인식되는 값은 `true`, `false`, `yes` 및 `no`입니다.<br /><br /> 부터는이 속성이 무시 됩니다 [!INCLUDE[net_v45](~/includes/net-v45-md.md)]합니다. 비동기 프로그래밍에 대 한 SqlClient 지원에 대 한 자세한 내용은 참조 하세요. [비동기 프로그래밍](~/docs/framework/data/adonet/asynchronous-programming.md)합니다.|  
|AttachDBFilename<br /><br /> 또는<br /><br /> 확장 속성<br /><br /> 또는<br /><br /> 초기 파일 이름|N/A|연결할 수 있는 데이터베이스의 전체 경로 이름을 포함 하는 주 데이터베이스 파일의 이름입니다. AttachDBFilename는 확장명이.mdf 인 주 데이터 파일 에서만 지원 됩니다.<br /><br /> AttachDBFileName 키의 값을 연결 문자열에 지정 하는 경우 데이터베이스 연결 및 연결에 대 한 기본 데이터베이스가 됩니다.<br /><br /> 이 키를 지정 하지 고 이전에 연결 된 데이터베이스는 데이터베이스 다시 연결할 수 됩니다. 이전에 연결된 된 데이터베이스 연결에 대 한 기본 데이터베이스로 사용 됩니다.<br /><br /> AttachDBFileName 키와 함께이 키를 지정 하는 경우이 키의 값을 별칭으로 사용 됩니다. 그러나 다른 연결 된 데이터베이스의 이름을 이미 사용 하는 경우 연결이 실패 합니다.<br /><br /> DataDirectory 대체 문자열을 사용 하 여 절대 또는 상대 경로 수. 있습니다 DataDirectory를 사용 하는 경우는 대체 문자열이 가리키는 디렉터리의 하위 디렉터리 내의 데이터베이스 파일 존재 해야 합니다. **참고:**  원격 서버, HTTP 및 UNC 경로 이름은 지원 되지 않습니다. <br /><br /> 데이터베이스 이름은 'database' 키워드 (또는 해당 별칭 중 하나)를 사용 하 여 다음과 같이 지정 해야 합니다.<br /><br /> <code>"AttachDbFileName=&#124;DataDirectory&#124;\data\YourDB.mdf;integrated security=true;database=YourDatabase"</code><br /><br /> 로그 파일이 데이터 파일과 같은 디렉터리에 있고 주 데이터 파일을 연결할 때 'database' 키워드가 사용되면 오류가 생성됩니다. 이 경우에는 로그 파일을 제거해야 합니다. 데이터베이스가 연결되면 새 로그 파일이 실제 경로에 따라 자동으로 생성됩니다.|  
|Authentication|N/A|에 사용 되는 인증 방법을 [SQL Database에서 사용 하 여 Azure Active Directory 인증을 연결할](https://azure.microsoft.com/documentation/articles/sql-database-aad-authentication/#7-connect-to-your-database-by-using-azure-active-directory-identities)합니다.<br /><br /> 올바른 값은 다음과 같습니다.<br /><br /> Active Directory 통합, Active Directory 암호를 Sql 암호입니다.|  
|Column Encryption Setting|N/A|사용 하거나 사용 하지 않도록 설정 [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine?view=sql-server-2017) 연결에 대 한 기능입니다.|  
|Connect Timeout<br /><br /> 또는<br /><br /> Connection Timeout<br /><br /> 또는<br /><br /> 시간 제한|15|시간 (초)의 길이를 종료 하 고 오류를 생성 하기 전에 서버에 연결 될 때까지 기다립니다.<br /><br /> Connection LifeTime유효한 값은 0 보다 크거나 2147483647 작거나 같습니다.<br /><br /> Azure SQL Database에 대 한 연결을 열 때 연결 제한 시간을 30 초로 설정 합니다.|  
|에서 지정한 값을 초과하면 연결이 제거됩니다Connection Lifetime<br /><br /> 또는<br /><br /> Load Balance Timeout|0|연결이 풀로 반환되면 연결을 만든 시간을 현재 시간과 비교하여 이 시간 간격(초)이 `Connection Lifetime`에서 지정한 값을 초과하는 경우 연결이 제거됩니다. 이는 클러스터링된 구성에서 실행 중인 서버와 방금 온라인 상태가 된 서버 사이에 로드 균형 조정을 강제로 조정하는 데 유용합니다.<br /><br /> 값 영(0)은 최대 연결 제한 시간이 풀링된 연결입니다.|  
|ConnectRetryCount|1|컨트롤 클라이언트 유휴 연결 실패가 식별 한 후 다시 연결 수가 시도 합니다. 유효한 값은 0에서 255입니다. 기본값은 1입니다. 0 이면 (사용 안 함 연결 복원 력)를 다시 연결 하지 마십시오.<br /><br /> 유휴 연결 복원 력에 대 한 자세한 내용은 참조 하세요. [기술 문서-유휴 연결 복원 력](https://go.microsoft.com/fwlink/?LinkId=393996)합니다.|  
|ConnectRetryInterval|10|각 연결 다시 시도 (ConnectRetryCount) 사이의 시간을 지정 합니다. 유효한 값은 1 ~ 60 초 (기본값 = 10), 첫 번째 다시 시도 후 적용 합니다. 연결이 끊어진된 감지 되 면 클라이언트는 즉시; 다시 연결 하려고 시도 첫 번째 다시 연결을 시도 이며 ConnectRetryCount가 0 보다 큰 경우에 발생 합니다. 첫 번째 다시 연결 시도가 실패할 경우 ConnectRetryCount 1 보다 크면 클라이언트는 두 번째 및 후속 재연결 시도 하려는 ConnectRetryInterval 대기 합니다.<br /><br /> 유휴 연결 복원 력에 대 한 자세한 내용은 참조 하세요. [기술 문서-유휴 연결 복원 력](https://go.microsoft.com/fwlink/?LinkId=393996)합니다.|  
|Context Connection|' f a l '|`true` SQL Server에 대 한 프로세스에 연결을 설정할 수 해야 합니다.|  
|Current Language<br /><br /> 또는<br /><br /> 언어|N/A|데이터베이스 서버 경고 또는 오류 메시지에 사용 된 언어를 설정 합니다.<br /><br /> 언어 이름은 128 자를 사용할 수 미만입니다.|  
|Data Source<br /><br /> 또는<br /><br /> 서버<br /><br /> 또는<br /><br /> Address<br /><br /> 또는<br /><br /> Addr<br /><br /> 또는<br /><br /> 네트워크 주소|N/A|연결할 SQL Server 인스턴스의 이름 또는 네트워크 주소입니다. 서버 이름 뒤의 포트 번호를 지정할 수 있습니다.<br /><br /> `server=tcp:servername, portnumber`<br /><br /> 로컬 인스턴스를 지정할 때 항상 (local) 사용 합니다. 프로토콜을 강제 적용 하려면 다음 접두사 중 하나를 추가 합니다.<br /><br /> `np:(local),  tcp:(local), lpc:(local)`<br /><br /> 부터 [!INCLUDE[net_v45](~/includes/net-v45-md.md)], 다음과 같이 LocalDB 데이터베이스를 연결할 수 있습니다.<br /><br /> `server=(localdb)\\myInstance`<br /><br /> LocalDB에 대 한 자세한 내용은 참조 하세요. [LocalDB에 대 한 SqlClient 지원](~/docs/framework/data/adonet/sql/sqlclient-support-for-localdb.md)합니다.<br /><br /> **데이터 원본** TCP 형식 또는 명명 된 파이프 형식을 사용 해야 합니다.<br /><br /> TCP 형식은 아래와 같습니다.<br /><br /> -tcp:\<호스트 이름 >\\< 인스턴스 이름\><br />-tcp:\<호스트 이름 >,\<TCP/IP 포트 번호 ><br /><br /> TCP 형식 접두사로 시작 해야 합니다 "tcp:" 데이터베이스 인스턴스의 호스트 이름 및 인스턴스 이름에 지정 된 대로 그 합니다. Azure SQL Database에 연결할 때이 형식이 적용 되었습니다. TCP은 프로토콜 없음이 지정 된 경우 Azure SQL Database에 대 한 연결에 대 한 자동으로 선택 됩니다.<br /><br /> 다음 방법 중 하나에 호스트 이름을 지정 해야 합니다.<br /><br /> -Netbios 이름<br />-IPv4Address<br />-IPv6Address<br /><br /> 데이터베이스 인스턴스에 호스팅되어 있는 특정 TCP/IP 포트 번호를 확인 하도록 인스턴스 이름이 사용 됩니다. 또는 TCP/IP 포트 번호를 직접 지정도 허용 됩니다. 인스턴스 이름을 모두 포트 번호 없는 경우 기본 데이터베이스 인스턴스가 사용 됩니다.<br /><br /> 명명 된 파이프 형식은 다음과 같습니다.<br /><br /> -np:\\\\< 호스트 이름\>\pipe\\< 파이프 이름\><br /><br /> 명명 된 파이프 형식 접두사로 시작 해야 합니다 "np:" 뒤에 명명 된 파이프 이름이 고 합니다.<br /><br /> 다음 방법 중 하나에 호스트 이름을 지정 해야 합니다.<br /><br /> -Netbios 이름<br />-IPv4Address<br />-IPv6Address<br /><br /> .NET Framework 애플리케이션을 연결 된 데이터베이스 인스턴스를 식별 하는 파이프 이름을 사용 됩니다.<br /><br /> 하는 경우의 값을 **네트워크** 키를 지정 접두사 "tcp:" 및 "np:" 지정할 수 없습니다. **참고:**  할 수 있습니다 TCP 공유 메모리를 대신 사용 하거나 앞 **tcp:** 연결 문자열 또는 사용 하 여 서버 이름 **localhost**합니다.|  
|Encrypt|' f a l '|때 `true`, SQL Server 서버에 설치 된 인증서는 클라이언트와 서버 간에 전송 되는 모든 데이터에 대 한 SSL 암호화를 사용 합니다. 인식되는 값은 `true`, `false`, `yes` 및 `no`입니다. 자세한 내용은 [연결 문자열 구문](~/docs/framework/data/adonet/connection-string-syntax.md)합니다.<br /><br /> 부터는 [!INCLUDE[net_v45](~/includes/net-v45-md.md)]때 `TrustServerCertificate` isfalse 및 `Encrypt` 가 true 이면 연결 문자열에 지정 된 서버 이름 (또는 IP 주소)는 SQL Server SSL 인증서의 서버 이름 (또는 IP 주소) 정확히 일치 해야 합니다. 그렇지 않으면 연결을 시도할 경우 실패합니다. 해당 주체가 와일드 카드 문자 (*)로 시작 하는 인증서에 대 한 지원에 대 한 자세한 내용은 [서버 인증에 대 한 서버 인증서에서 사용 하는 와일드 카드를 허용](https://support.microsoft.com/kb/258858)합니다.|  
|Enlist|'true'|`true` SQL Server 연결 풀러는 만들기 스레드의 현재 트랜잭션 컨텍스트에 연결을 자동으로 참여를 나타냅니다.|  
|Failover Partner|N/A|데이터베이스 미러링이 구성 되어 장애 조치 파트너 서버의 이름입니다.<br /><br /> 이 키의 값이 "", 한 다음 **Initial Catalog** 있어야 해당 값이 아니어야 하 고 ""입니다.<br /><br /> 서버 이름은 128 자를 사용할 수 있습니다 또는 작습니다.<br /><br /> 지정 하는 경우 데이터베이스 미러링에 대 한 장애 조치 파트너 하지만 장애 조치 파트너 서버 구성 되지 않았습니다 고 주 서버 (Server 키워드를 사용 하 여 지정 됨)를 사용할 수 없는 다음 연결이 실패 합니다.<br /><br /> 데이터베이스 미러링에 대 한 장애 조치 파트너가 되 고 주 서버를 구성 되지 않았습니다 지정 하는 경우 주 서버를 사용할 수 있는 경우 주 서버 (Server 키워드를 사용 하 여 지정 됨)에 연결 성공 합니다.|  
|Initial Catalog<br /><br /> 또는<br /><br /> 데이터베이스|N/A|데이터베이스의 이름입니다.<br /><br /> 데이터베이스 이름은 128 자를 사용할 수 있습니다 또는 작습니다.|  
|Integrated Security<br /><br /> 또는<br /><br /> Trusted_Connection|' f a l '|때 `false`, 사용자 ID와 암호는 연결에 지정 됩니다. 때 `true`, 현재 Windows 계정 자격 증명을 인증에 사용 됩니다.<br /><br /> 인식 되는 값은 `true`, `false`를 `yes`를 `no`, 및 `sspi` (권장 사항)은 `true`합니다.<br /><br /> 사용자 ID 및 암호 지정 되 고 통합 하는 경우 보안이 true를 사용자 ID로 설정 하 고 암호 무시 되 고 통합 보안이 사용 됩니다.<br /><br /> <xref:System.Data.SqlClient.SqlCredential> SQL Server 인증을 사용 하는 연결에 대 한 자격 증명을 지정 하 여 더욱 안전 하 게 됩니다 (`Integrated Security=false`).|  
|Max Pool Size|100|풀에 허용 되는 연결의 최대 수입니다.<br /><br /> 유효한 값 이며 1 보다 크거나 같은 경우 값 보다 작거나 **최소 풀 크기** 오류를 생성 합니다.|  
|Min Pool Size|0|연결 풀에 허용 되는 최소 수입니다.<br /><br /> 유효한 값을 0 보다 크거나 됩니다. 이 필드에 영 (0) 최소 연결이 없는 처음에 열린 것을 의미 합니다.<br /><br /> 값 보다 큰 **최대 풀 크기** 오류를 생성 합니다.|  
|MultipleActiveResultSets|' f a l '|때 `true`, 애플리케이션에서 여러 활성 결과 집합 (MARS)를 유지할 수 있습니다. 때 `false`, 애플리케이션을 처리 하거나 해당 연결에서 다른 일괄 작업을 실행할 수 있습니다 하나의 일괄 처리에서 모든 결과 집합을 취소 해야 합니다.<br /><br /> 인식 되는 값은 `true` 고 `false`입니다.<br /><br /> 자세한 내용은 [MARS(여러 활성 결과 집합)](~/docs/framework/data/adonet/sql/multiple-active-result-sets-mars.md)를 참조하세요.|  
|`MultiSubnetFailover`|false|항상 지정 `multiSubnetFailover=True` 가용성 그룹 수신기는 SQL Server 2012 (또는 이상) 가용성 그룹 또는 SQL Server 2012 (또는 이상) 장애 조치 클러스터 인스턴스를 연결할 때. `multiSubnetFailover=True` SqlClient를 더 빠르게 검색 하 고 (현재) 활성 서버 연결을 구성 합니다. 가능한 값은 `Yes` 하 고 `No`를 `True` 하 고 `False` 또는 `1` 및 `0`합니다. 예를 들어 다음과 같습니다.<br /><br /> `MultiSubnetFailover=True`<br /><br /> 기본값은 `False`입니다. 항상 Ag에 대 한 SqlClient의 지원에 대 한 자세한 내용은 참조 하세요. [High Availability, Disaster Recovery에 대 한 SqlClient 지원](~/docs/framework/data/adonet/sql/sqlclient-support-for-high-availability-disaster-recovery.md)합니다.|  
|Network Library<br /><br /> 또는<br /><br /> 네트워크<br /><br /> 또는<br /><br /> Net|N/A|SQL Server 인스턴스에 연결 하는 데 사용 되는 네트워크 라이브러리입니다. 지원되는 값은 다음과 같습니다.<br /><br /> dbnmpntw (명명 된 파이프)<br /><br /> dbmsrpcn (멀티 프로토콜, Windows RPC)<br /><br /> dbmsadsn (Apple 설명)<br /><br /> dbmsgnet (VIA)<br /><br /> dbmslpcn (공유 메모리)<br /><br /> dbmsspxn (IPX/SPX)<br /><br /> dbmssocn (TCP/IP)<br /><br /> Dbmsvinn (Banyan Vines)<br /><br /> 해당하는 네트워크 DLL이 연결하는 시스템에 설치되어 있어야 합니다. 네트워크를 지정 하지 않으면 및 로컬 서버를 사용 하는 경우 (예를 들어, "." 또는 "(local)"), 공유 메모리가 사용 됩니다. 이 예제에서 네트워크 라이브러리는 Win32 Winsock TCP/IP(dbmssocn)이며 사용 중인 포트는 1433입니다.<br /><br /> `Network Library=dbmssocn;Data Source=000.000.000.000,1433;`|  
|Packet Size|8000|SQL Server의 인스턴스와 통신 하는 데 네트워크 패킷의 바이트 크기입니다.<br /><br /> 패킷 크기는 512 보다 크거나 수 및 32768입니다.|  
|Password<br /><br /> 또는<br /><br /> PWD|N/A|SQL Server 계정 로그온에 대 한 암호입니다. 권장 되지 않습니다. 높은 수준의 보안을 유지 하려면 좋습니다 사용 하 여 `Integrated Security` 또는 `Trusted_Connection` 키워드 대신 사용합니다. <xref:System.Data.SqlClient.SqlCredential> SQL Server 인증을 사용 하는 연결에 대 한 자격 증명을 지정 하려면 보다 안전한 방법입니다.<br /><br /> 암호는 128자 미만여야 합니다.|  
|Persist Security Info<br /><br /> 또는<br /><br /> PersistSecurityInfo|'false'|로 설정 하면 `false` 또는 `no` (권장 사항) 연결이 열려 있거나 열린 상태에서 였 경우 암호와 같은 보안 관련 정보는 연결의 일부로 반환 되지 않습니다. 연결 문자열을 다시 암호를 포함 한 모든 연결 문자열 값을 다시 설정 합니다. 인식되는 값은 `true`, `false`, `yes` 및 `no`입니다.|  
|PoolBlockingPeriod|자동|연결 풀 차단 기간 동작을 설정합니다. 참조 <xref:System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod> 세부 정보에 대 한 속성입니다.|  
|Pooling|'true'|이 키의 값은 새로 만든 변수가 true로 설정 된 경우 연결 애플리케이션을 닫을 때 풀에 추가 됩니다. 동일한 연결을 열려면 다음을 시도할 때에서 해당 연결 풀에서 그려집니다.<br /><br /> 동일한 연결 문자열에 있는 경우 연결 동일한 간주 됩니다. 다른 연결은 다른 연결 문자열을 가집니다.<br /><br /> 이 키의 값 "true"은 "false", "yes" 또는 "no"입니다.|  
|Replication|' f a l '|`true` 복제가 연결을 사용하여 지원되는 경우|  
|Transaction Binding|Implicit Unbind|연결을 참여 한 제어 `System.Transactions` 트랜잭션.<br /><br /> 가능한 값은 다음과 같습니다.<br /><br /> `Transaction Binding=Implicit Unbind;`<br /><br /> `Transaction Binding=Explicit Unbind;`<br /><br /> 암시적 바인딩 해제 하면 종료 될 때 트랜잭션 으로부터 분리에 대 한 연결 합니다. 연결을 끊은 후 연결에 대한 추가 요청은 자동 커밋 모드로 수행됩니다. `System.Transactions.Transaction.Current` 속성은 트랜잭션이 활성화 상태인 동안 요청을 실행할 때 확인되지 않습니다. 트랜잭션이 종료된 후 추가 요청은 자동 커밋 모드로 수행됩니다.<br /><br /> 시스템에는 트랜잭션을 종료 하는 경우 (사용 하 여 범위에서 블록) 마지막 명령이 완료 되기 전에 throw 됩니다 <xref:System.InvalidOperationException>합니다.<br /><br /> 연결이 트랜잭션에 연결을 닫을 때까지 또는 명시적에 연결 하는 명시적 Unbind 원인 `SqlConnection.TransactionEnlist(null)` 라고 합니다. 부터 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], 암시적 바인딩을 해제 하려면 변경 명시적 바인딩 해제 사용 되지 않습니다. `InvalidOperationException`가 참여한 트랜잭션이 아니거나 참여한 트랜잭션이 활성화되지 않았으면 `Transaction.Current`이 throw됩니다.|  
|TransparentNetworkIPResolution|설명을 참조 하세요.|이 키의 값이 `true`로 설정되면 애플리케이션은 특정 DNS 항목에 대한 모든 IP 주소를 검색하고 목록의 첫 번째 항목과 연결을 시도해야 합니다. 0.5초 이내에 연결되지 않으면 애플리케이션은 다른 모든 항목과 동시에 연결을 시도합니다. 첫 번째 항목과 연결될 경우 애플리케이션은 응답자 IP 주소로 연결을 설정합니다.<br /><br /> 경우는 `MultiSubnetFailover` 키로 설정 됩니다 `true`, `TransparentNetworkIPResolution` 무시 됩니다.<br /><br /> 경우는 `Failover Partner` 키를 설정 `TransparentNetworkIPResolution` 무시 됩니다.<br /><br /> 이 키의 값 이어야 합니다 `true`, `false`하십시오 `yes`, 또는 `no`합니다.<br /><br /> 값이 `yes` 은 값이 동일 하 게 취급 `true`합니다.<br /><br /> 값이 `no` 은 값이 동일 하 게 취급 `false`합니다.<br /><br /> 기본 값을 아래와 같습니다.<br /><br /> <ul><li>`false` 하는 경우:<br /><br /> <ul><li>데이터 원본으로 끝나는 Azure SQL Database에 연결 합니다.<br /><br /> <ul><li>.database.chinacloudapi.cn</li><li>.database.usgovcloudapi.net</li><li>.database.cloudapi.de</li><li>.database.windows.net</li></ul></li><li>`Authentication` ' Active Directory 암호 ' 또는 ' Active Directory 통합 '</li></ul></li><li>다른 모든 경우에서는 `true`입니다.</li></ul>|  
|TrustServerCertificate|' f a l '|로 설정 하면 `true`, SSL은 신뢰의 유효성을 검사 하 고 인증서 체인을 무시 하는 경우 채널을 암호화 하는 데 사용 됩니다. TrustServerCertificate로 설정 되어 있으면 `true` 암호화로 설정 되어 `false`, 채널이 암호화 되지 않습니다. 인식되는 값은 `true`, `false`, `yes` 및 `no`입니다. 자세한 내용은 [연결 문자열 구문](~/docs/framework/data/adonet/connection-string-syntax.md)합니다.|  
|Type System Version|N/A|애플리케이션에 필요한 형식 시스템을 나타내는 문자열 값입니다. 클라이언트 애플리케이션에 사용할 수 있는 기능은 SQL Server 버전과 데이터베이스 호환성 수준에 따라 달라집니다. 클라이언트 애플리케이션이 작성된 Type System Version을 명시적으로 설정하면 다른 버전의 SQL Server를 사용할 경우 애플리케이션이 중단되는 문제를 방지할 수 있습니다. **참고:**  SQL Server에서 in-process로 실행 중인 CLR(공용 언어 런타임) 코드에는 Type System Version을 설정할 수 없습니다. 자세한 내용은 [SQL Server 공용 언어 런타임 통합](~/docs/framework/data/adonet/sql/sql-server-common-language-runtime-integration.md)합니다. <br /><br /> 가능한 값은 다음과 같습니다.<br /><br /> `Type System Version=SQL Server 2012;`<br /><br /> `Type System Version=SQL Server 2008;`<br /><br /> `Type System Version=SQL Server 2005;`<br /><br /> `Type System Version=Latest;`<br /><br /> `Type System Version=SQL Server 2012;` 애플리케이션 버전 11.0.0.0 Microsoft.SqlServer.Types.dll의 필요를 지정 합니다. 다른 `Type System Version` 설정을 Microsoft.SqlServer.Types.dll 10.0.0.0 버전이 필요 합니다.<br /><br /> `Latest` 사용 되지 않으며 사용 하지 않아야 합니다. `Latest`는 `Type System Version=SQL Server 2008;`와 같습니다.|  
|User ID<br /><br /> 또는<br /><br /> UID<br /><br /> 또는|N/A|SQL Server 로그인 계정입니다. 권장 되지 않습니다. 높은 수준의 보안을 유지 하려면 좋습니다 사용 하 여 `Integrated Security` 또는 `Trusted_Connection` 키워드 대신 사용합니다. <xref:System.Data.SqlClient.SqlCredential> SQL Server 인증을 사용 하는 연결에 대 한 자격 증명을 지정 하려면 보다 안전한 방법입니다.<br /><br /> 사용자 ID에 128 자 여야 합니다.이 있습니다.|  
|User Instance|'false'|기본 SQL Server Express 인스턴스로부터 호출자의 계정으로 실행 되는 런타임 시작 인스턴스로 연결을 리디렉션하는지 여부를 나타내는 값입니다.|  
|Workstation ID<br /><br /> 또는<br /><br /> WSID|로컬 컴퓨터 이름|SQL Server에 연결 하는 워크스테이션의 이름입니다.<br /><br /> 가능 해야 하는 128 자 이하의 합니다.|  
  
 다음은 연결 풀링 내 값의 올바른 이름이 포함 된 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>합니다. 자세한 내용은 [SQL Server 연결 풀링(ADO.NET)](~/docs/framework/data/adonet/sql-server-connection-pooling.md)을 참조하세요.  
  
-   Connection Lifetime (또는 Load Balance Timeout)  
  
-   Enlist  
  
-   Max Pool Size  
  
-   Min Pool Size  
  
-   Pooling  
  
 키워드 또는 연결 풀링 하는 부울 값을 필요로 하는 값을 설정 하는 경우 'true' 및 'no' 대신 'f a l' 대신 '예' 사용할 수 있습니다. 정수 값은 문자열로 표시 됩니다.  

> [!NOTE]
>  .NET Framework Data Provider for SQL Server는 SQL Server와 통신 하는 자체 프로토콜을 사용 합니다. 따라서이 지원 하지 않습니다는 ODBC 데이터 원본 이름 (DSN)의 사용은 ODBC 계층을 추가 하지 않기 때문에 SQL Server에 연결할 때.  
  
> [!NOTE]
>  SQL Server에 대 한.NET Framework 데이터 공급자에 대 한 유니버설 데이터 링크 (UDL) 파일 지원 되지 않습니다.  
  
> [!CAUTION]
>  이 릴리스에서 애플리케이션 (예: 연결 문자열에 추가 하는 대화 상자에서 사용자 ID와 암호 정보를 검색 하는 경우) 사용자 입력을 기반으로 연결 문자열을 생성할 때 주의 사용 해야 합니다. 애플리케이션 해야 사용자가 이러한 값에 추가 연결 문자열 매개 변수를 포함할 수 없습니다 (예를 들어 암호를 입력 "에서는 데이터베이스 somedb =" 다른 데이터베이스에 연결 하기 위해). 사용자 입력을 기반으로 하는 연결 문자열을 생성 해야 할 경우 사용 하 여 새 <xref:System.Data.SqlClient.SqlConnectionStringBuilder>, 연결 문자열의 유효성을 검사 하 고이 문제를 해결할 수 있도록 합니다. 참조 [연결 문자열 작성기](~/docs/framework/data/adonet/connection-string-builders.md) 자세한 내용은 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.SqlClient.SqlConnection> 설정의 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> 연결을 열기 전에 속성입니다.  
  
 [!code-csharp[Classic WebData SqlConnection.ConnectionString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.ConnectionString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">잘못된 연결 문자열 인수를 제공했거나 필요한 연결 문자열 인수를 제공하지 않았습니다.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/connection-strings.md">ADO.NET의 연결 문자열</related>
        <related type="Article" href="~/docs/framework/data/adonet/sql-server-connection-pooling.md">SQL Server 연결 풀링(ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/connecting-to-a-data-source.md">데이터 원본에 연결(ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 관리되는 공급자 및 데이터 세트 개발자 센터</related>
        <related type="Article" href="https://msdn.microsoft.com/library/745c5f95-2f02-4674-b378-6d51a7ec2490">ADO.NET의 연결 문자열</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">SQL Server 연결 풀링(ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">데이터 원본에 연결(ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ConnectionTimeout { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionTimeout : int" Usage="System.Data.SqlClient.SqlConnection.ConnectionTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.ConnectionTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_ConnectionTimeout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>시도를 종료하고 오류를 생성하기 전에 연결하는 동안 대기할 시간을 가져옵니다.</summary>
        <value>연결이 열리기 전까지 대기할 시간(초)입니다. 기본값은 15초입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 시간 초과 사용 하 여 연결 대기 시간을 설정할 수 있습니다 합니다 `Connect Timeout` 또는 `Connection Timeout` 연결 문자열 키워드입니다. 값 0은 제한 없음을 나타냄 및 피해 야를 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> 있으므로 연결 시도가 무한정 대기 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.SqlClient.SqlConnection> 설정의 `Connection Timeout` 연결 문자열에 30 초입니다. 코드는 연결을 열고 표시는 <xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A> 콘솔 창에는 속성입니다.  
  
 [!code-csharp[Classic WebData SqlConnection.ConnectionTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.ConnectionTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.ConnectionTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">설정한 값이 0보다 작은 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/745c5f95-2f02-4674-b378-6d51a7ec2490">ADO.NET의 연결 문자열</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">SQL Server 연결 풀링(ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">데이터 원본에 연결(ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlCommand ^ CreateCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateCommand : unit -&gt; System.Data.SqlClient.SqlCommand" Usage="sqlConnection.CreateCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.SqlClient.SqlConnection" />과 연결된 <see cref="T:System.Data.SqlClient.SqlCommand" /> 개체를 만들고 반환합니다.</summary>
        <returns><see cref="T:System.Data.SqlClient.SqlCommand" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[SqlConnection_CreateCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/sqlconnection_createcommand/cs/source.cs#1)]
 [!code-vb[SqlConnection_CreateCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/sqlconnection_createcommand/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateDbCommand : unit -&gt; System.Data.Common.DbCommand" Usage="sqlConnection.CreateDbCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credential">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCredential Credential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCredential Credential" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.Credential" />
      <MemberSignature Language="VB.NET" Value="Public Property Credential As SqlCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCredential ^ Credential { System::Data::SqlClient::SqlCredential ^ get(); void set(System::Data::SqlClient::SqlCredential ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credential : System.Data.SqlClient.SqlCredential with get, set" Usage="System.Data.SqlClient.SqlConnection.Credential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 연결에 대해 <see cref="T:System.Data.SqlClient.SqlCredential" /> 개체를 가져오거나 설정합니다.</summary>
        <value>이 연결에 대한 <see cref="T:System.Data.SqlClient.SqlCredential" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Persist Security Info = true` 값을 검색할 필요 합니다 <xref:System.Data.SqlClient.SqlCredential> 개체를 <xref:System.Data.SqlClient.SqlConnection.Credential%2A>입니다.  
  
 기본값은 <xref:System.Data.SqlClient.SqlConnection.Credential%2A> null입니다.  
  
 <xref:System.InvalidOperationException> 예외가 발생 합니다.  
  
-   경우 <xref:System.Data.SqlClient.SqlConnection.Credential%2A> 에 대해 열린 연결에 설정 됩니다.  
  
-   하는 경우 <xref:System.Data.SqlClient.SqlConnection.Credential%2A> 때 설정 됩니다 `Context Connection=true`합니다.  
  
-   하는 경우 <xref:System.Data.SqlClient.SqlConnection.Credential%2A> 때 설정 됩니다 `Integrated Security = true`합니다.  
  
-   하는 경우 <xref:System.Data.SqlClient.SqlConnection.Credential%2A> 연결 문자열을 사용 하는 경우에 설정 되어 `Password`입니다.  
  
-   하는 경우 <xref:System.Data.SqlClient.SqlConnection.Credential%2A> 연결 문자열을 사용 하는 경우에 설정 되어 `UserID`입니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCredential Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlCredential Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As SqlCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCredential ^ Credentials { System::Data::SqlClient::SqlCredential ^ get(); void set(System::Data::SqlClient::SqlCredential ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Data.SqlClient.SqlCredential with get, set" Usage="System.Data.SqlClient.SqlConnection.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Database : string" Usage="System.Data.SqlClient.SqlConnection.Database" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.Database</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_Database")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 데이터베이스 이름이나 연결이 열린 후 사용할 데이터베이스의 이름을 가져옵니다.</summary>
        <value>현재 데이터베이스 이름이나 연결이 열린 후 사용할 데이터베이스의 이름입니다. 기본값은 빈 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection.Database%2A> 속성을 동적으로 업데이트 합니다. 사용 하 여 현재 데이터베이스를 변경 하는 경우는 [!INCLUDE[tsql](~/includes/tsql-md.md)] 문 또는 <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A> 정보 메시지가 전송 되는 메서드와 속성을 자동으로 업데이트 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlConnection> 하 고 해당 읽기 전용 속성 중 일부를 표시 합니다.  
  
 [!code-csharp[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Database Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Database Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">데이터 원본에 연결(ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/commands-and-parameters.md">명령 및 매개 변수</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : string" Usage="System.Data.SqlClient.SqlConnection.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_DataSource")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>연결할 SQL Server 인스턴스의 이름을 가져옵니다.</summary>
        <value>연결할 SQL Server 인스턴스의 이름입니다. 기본값은 빈 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Data.SqlClient.SqlConnection.DataSource%2A> 속성이 반환 `null` 연결 문자열에 대 한 경우는 <xref:System.Data.SqlClient.SqlConnection> 는 "컨텍스트 연결 = true"입니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlConnection> 하 고 해당 읽기 전용 속성 중 일부를 표시 합니다.  
  
 [!code-csharp[Classic WebData SqlConnection.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">데이터 원본에 연결(ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="DbProviderFactory">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbProviderFactory DbProviderFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbProviderFactory DbProviderFactory" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.DbProviderFactory" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbProviderFactory As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbProviderFactory ^ DbProviderFactory { System::Data::Common::DbProviderFactory ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbProviderFactory : System.Data.Common.DbProviderFactory" Usage="System.Data.SqlClient.SqlConnection.DbProviderFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="sqlConnection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistDistributedTransaction">
      <MemberSignature Language="C#" Value="public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnlistDistributedTransaction(class System.EnterpriseServices.ITransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnlistDistributedTransaction (transaction As ITransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnlistDistributedTransaction(System::EnterpriseServices::ITransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="member this.EnlistDistributedTransaction : System.EnterpriseServices.ITransaction -&gt; unit" Usage="sqlConnection.EnlistDistributedTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.EnterpriseServices.ITransaction" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="transaction">등록할 기존 <see cref="T:System.EnterpriseServices.ITransaction" />에 대한 참조입니다.</param>
        <summary>지정된 트랜잭션에 분산 트랜잭션으로 참여합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 <xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A> 분산된 트랜잭션에 참여 하는 방법입니다. 연결을 참여 하기 때문에 <xref:System.Transactions.Transaction> 인스턴스를 **EnlistTransaction** 에서 사용할 수 있는 기능을 활용 합니다 <xref:System.Transactions> 네임 스페이스 관리에 대 한 분산 트랜잭션 적합하므로 **참여가** 이 목적입니다. 자세한 내용은 [분산 트랜잭션](~/docs/framework/data/adonet/distributed-transactions.md)합니다.  
  
 사용 하 여 기존 분산된 트랜잭션에 인 리스트 먼 트 할 수 있습니다 합니다 **참여가** 메서드 자동 인 리스트 먼 트를 사용 하지 않도록 설정 합니다. 기존 분산된 트랜잭션에 인 리스트 먼 트 하면는 트랜잭션이 커밋되거나 롤백되는 경우 데이터 소스 코드에 의해 수정 된도 커밋 또는 롤백됩니다.  
  
 `EnlistDistributedTransaction` 예외를 반환 합니다 <xref:System.Data.SqlClient.SqlConnection> 사용 하는 트랜잭션이 이미 시작 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>합니다. 그러나 트랜잭션이 데이터 소스에서 시작 된 로컬 트랜잭션 된 경우 (예를 들어 명시적으로 사용 하 여 BEGIN TRANSACTION 문을 실행 하 여는 <xref:System.Data.SqlClient.SqlCommand> 개체), **참여가** 롤백합니다는 로컬 트랜잭션 및 요청에 따라 기존 분산 트랜잭션에 인 리스트 먼 트 합니다. 로컬 트랜잭션이 롤백 되었습니다 및 사용 하 여 시작 되지 않은 로컬 트랜잭션을 관리 하는 일을 담당 받지 <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">트랜잭션(ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberSignature Language="F#" Value="override this.EnlistTransaction : System.Transactions.Transaction -&gt; unit" Usage="sqlConnection.EnlistTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="transaction">등록할 기존 <see cref="T:System.Transactions.Transaction" />에 대한 참조입니다.</param>
        <summary>지정된 트랜잭션에 분산 트랜잭션으로 참여합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 <xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A> 분산된 트랜잭션에 참여 하는 방법입니다. 연결을 참여 하기 때문에 <xref:System.Transactions.Transaction> 인스턴스를 **EnlistTransaction** 에서 사용할 수 있는 기능을 활용 합니다 <xref:System.Transactions> 네임 스페이스 관리에 대 한 분산 트랜잭션 적합하므로 **참여가**를 사용 하는 한 **System.EnterpriseServices.ITransaction** 개체입니다. 약간 다른 의미 체계 역시: 연결을 명시적으로 트랜잭션에 등록 된, 등록을 취소 하거나 수는 첫 번째 트랜잭션이 완료 될 때까지 다른 트랜잭션에 참여 합니다. 분산된 트랜잭션에 대 한 자세한 내용은 참조 하십시오 [분산 트랜잭션을](~/docs/framework/data/adonet/distributed-transactions.md)합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f46570de-9e50-4fe6-8710-a8c31fa8569b">트랜잭션(ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="FireInfoMessageEventOnUserErrors">
      <MemberSignature Language="C#" Value="public bool FireInfoMessageEventOnUserErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FireInfoMessageEventOnUserErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property FireInfoMessageEventOnUserErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FireInfoMessageEventOnUserErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FireInfoMessageEventOnUserErrors : bool with get, set" Usage="System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /> 속성을 가져오거나 설정합니다.</summary>
        <value><see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /> 속성이 설정되었으면 <see langword="true" />이고, 연결되어 있지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정한 경우 <xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A> 하 `true`, 예외는 이제으로 처리 된 것으로 취급 이전에 오류 <xref:System.Data.SqlClient.SqlConnection.InfoMessage> 이벤트입니다. 모든 이벤트는 즉시 시작 하 고 이벤트 처리기에서 처리 됩니다. 경우는 <xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A> 로 설정 된 `false`, 다음 <xref:System.Data.SqlClient.SqlConnection.InfoMessage> 프로시저의 끝에 이벤트를 처리 합니다.  
  
> [!NOTE]
>  심각도 수준이 17 이상인 서버 명령 처리를 중지 하도록 하는 오류를 예외로 처리 해야 합니다. 이 경우 오류가 <xref:System.Data.SqlClient.SqlConnection.InfoMessage> 이벤트에서 처리되는 방법과 상관없이 예외가 throw됩니다.  
  
 작업 이벤트에 대 한 자세한 내용은 참조 하세요. [연결 이벤트](~/docs/framework/data/adonet/connection-events.md)합니다. SQL Server 엔진에서 생성 된 오류에 대 한 자세한 내용은 참조 하세요. [데이터베이스 엔진 오류](/sql/relational-databases/errors-events/database-engine-events-and-errors)합니다.
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5a29de74-acfc-4134-8616-829dd7ce0710">연결 이벤트</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">데이터 원본에 연결(ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 <see cref="T:System.Data.SqlClient.SqlConnection" />의 데이터 소스에 대한 구성표 정보를 반환합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 둘 이상의 버전이 있는 저장된 프로시저에 대 한 스키마 정보를 검색 하려는 경우 최신에 대 한 스키마만 반환 됩니다.
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">데이터베이스에서 스키마 정보 가져오기</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema();" />
      <MemberSignature Language="F#" Value="override this.GetSchema : unit -&gt; System.Data.DataTable" Usage="sqlConnection.GetSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Data.SqlClient.SqlConnection" />의 데이터 소스에 대한 구성표 정보를 반환합니다. 구성표에 대한 자세한 내용은 [SQL Server 구성표 컬렉션](~/docs/framework/data/adonet/sql-server-schema-collections.md)을 참조하세요.</summary>
        <returns>스키마 정보를 포함하는 A <see cref="T:System.Data.DataTable" />입니다.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">데이터베이스에서 스키마 정보 가져오기</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName);" />
      <MemberSignature Language="F#" Value="override this.GetSchema : string -&gt; System.Data.DataTable" Usage="sqlConnection.GetSchema collectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="collectionName">반환할 스키마의 이름을 지정합니다.</param>
        <summary>스키마 이름에 대해 지정된 문자열을 사용하여 이 <see cref="T:System.Data.SqlClient.SqlConnection" />의 데이터 소스에 대한 스키마 정보를 반환합니다.</summary>
        <returns>스키마 정보를 포함하는 A <see cref="T:System.Data.DataTable" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터베이스, 테이블 또는 열 스키마 정보를 해야 할 수 있습니다. 이 샘플:  
  
-   GetSchema를 사용 하 여 스키마 정보를 가져옵니다.  
  
-   스키마 제한을 사용 하 여 지정 된 정보를 가져옵니다.  
  
-   데이터베이스, 테이블 및 열 일부의 스키마 정보를 가져옵니다.  
  
 샘플을 실행 하기 전에 필요한 샘플 데이터베이스를 만들려면 다음을 사용 하 여 [!INCLUDE[tsql](~/includes/tsql-md.md)]:  
  
```  
USE [master]  
GO  
  
CREATE DATABASE [MySchool]   
  
GO  
  
USE [MySchool]  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Course]([CourseID] [nvarchar](10) NOT NULL,  
[Year] [smallint] NOT NULL,  
[Title] [nvarchar](100) NOT NULL,  
[Credits] [int] NOT NULL,  
[DepartmentID] [int] NOT NULL,  
 CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   
(  
[CourseID] ASC,  
[Year] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Department]([DepartmentID] [int] IDENTITY(1,1) NOT NULL,  
[Name] [nvarchar](50) NOT NULL,  
[Budget] [money] NOT NULL,  
[StartDate] [datetime] NOT NULL,  
[Administrator] [int] NULL,  
 CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   
(  
[DepartmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  
  
SET IDENTITY_INSERT [dbo].[Department] ON   
  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  
SET IDENTITY_INSERT [dbo].[Department] OFF  
  
ALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  
REFERENCES [dbo].[Department] ([DepartmentID])  
GO  
ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  
GO  
```  
  
 [데이터베이스에서 스키마 정보 가져오기 방법](https://code.msdn.microsoft.com/How-to-Get-Schema-b66d62e2) Visual Studio 프로젝트에는이 코드 샘플의 C# 및 Visual Basic 버전입니다.  
  
```csharp  
using System;  
using System.Data;  
using System.Data.SqlClient;  
  
class Program {  
   static void Main(string[] args) {  
  
      using (SqlConnection conn = new SqlConnection("Data Source=(local);Initial Catalog=MySchool;Integrated Security=True;Asynchronous Processing=true;")) {  
         conn.Open();  
  
         // Get the Meta Data for Supported Schema Collections  
         DataTable metaDataTable = conn.GetSchema("MetaDataCollections");  
  
         Console.WriteLine("Meta Data for Supported Schema Collections:");  
         ShowDataTable(metaDataTable, 25);  
         Console.WriteLine();  
  
         // Get the schema information of Databases in your instance  
         DataTable databasesSchemaTable = conn.GetSchema("Databases");  
  
         Console.WriteLine("Schema Information of Databases:");  
         ShowDataTable(databasesSchemaTable, 25);  
         Console.WriteLine();  
  
         // First, get schema information of all the tables in current database;  
         DataTable allTablesSchemaTable = conn.GetSchema("Tables");  
  
         Console.WriteLine("Schema Information of All Tables:");  
         ShowDataTable(allTablesSchemaTable, 20);  
         Console.WriteLine();  
  
         // You can specify the Catalog, Schema, Table Name, Table Type to get   
         // the specified table(s).  
         // You can use four restrictions for Table, so you should create a 4 members array.  
         String[] tableRestrictions = new String[4];  
  
         // For the array, 0-member represents Catalog; 1-member represents Schema;   
         // 2-member represents Table Name; 3-member represents Table Type.   
         // Now we specify the Table Name of the table what we want to get schema information.  
         tableRestrictions[2] = "Course";  
  
         DataTable courseTableSchemaTable = conn.GetSchema("Tables", tableRestrictions);  
  
         Console.WriteLine("Schema Information of Course Tables:");  
         ShowDataTable(courseTableSchemaTable, 20);  
         Console.WriteLine();  
  
         // First, get schema information of all the columns in current database.  
         DataTable allColumnsSchemaTable = conn.GetSchema("Columns");  
  
         Console.WriteLine("Schema Information of All Columns:");  
         ShowColumns(allColumnsSchemaTable);  
         Console.WriteLine();  
  
         // You can specify the Catalog, Schema, Table Name, Column Name to get the specified column(s).  
         // You can use four restrictions for Column, so you should create a 4 members array.  
         String[] columnRestrictions = new String[4];  
  
         // For the array, 0-member represents Catalog; 1-member represents Schema;   
         // 2-member represents Table Name; 3-member represents Column Name.   
         // Now we specify the Table_Name and Column_Name of the columns what we want to get schema information.  
         columnRestrictions[2] = "Course";  
         columnRestrictions[3] = "DepartmentID";  
  
         DataTable departmentIDSchemaTable = conn.GetSchema("Columns", columnRestrictions);  
  
         Console.WriteLine("Schema Information of DepartmentID Column in Course Table:");  
         ShowColumns(departmentIDSchemaTable);  
         Console.WriteLine();  
  
         // First, get schema information of all the IndexColumns in current database  
         DataTable allIndexColumnsSchemaTable = conn.GetSchema("IndexColumns");  
  
         Console.WriteLine("Schema Information of All IndexColumns:");  
         ShowIndexColumns(allIndexColumnsSchemaTable);  
         Console.WriteLine();  
  
         // You can specify the Catalog, Schema, Table Name, Constraint Name, Column Name to   
         // get the specified column(s).  
         // You can use five restrictions for Column, so you should create a 5 members array.  
         String[] indexColumnsRestrictions = new String[5];  
  
         // For the array, 0-member represents Catalog; 1-member represents Schema;   
         // 2-member represents Table Name; 3-member represents Constraint Name;4-member represents Column Name.   
         // Now we specify the Table_Name and Column_Name of the columns what we want to get schema information.  
         indexColumnsRestrictions[2] = "Course";  
         indexColumnsRestrictions[4] = "CourseID";  
  
         DataTable courseIdIndexSchemaTable = conn.GetSchema("IndexColumns", indexColumnsRestrictions);  
  
         Console.WriteLine("Index Schema Information of CourseID Column in Course Table:");  
         ShowIndexColumns(courseIdIndexSchemaTable);  
         Console.WriteLine();  
      }  
  
      Console.WriteLine("Please press any key to exit...");  
      Console.ReadKey();  
   }  
  
   private static void ShowDataTable(DataTable table, Int32 length) {  
      foreach (DataColumn col in table.Columns) {  
         Console.Write("{0,-" + length + "}", col.ColumnName);  
      }  
      Console.WriteLine();  
  
      foreach (DataRow row in table.Rows) {  
         foreach (DataColumn col in table.Columns) {  
            if (col.DataType.Equals(typeof(DateTime)))  
               Console.Write("{0,-" + length + ":d}", row[col]);  
            else if (col.DataType.Equals(typeof(Decimal)))  
               Console.Write("{0,-" + length + ":C}", row[col]);  
            else  
               Console.Write("{0,-" + length + "}", row[col]);  
         }  
         Console.WriteLine();  
      }  
   }  
  
   private static void ShowDataTable(DataTable table) {  
      ShowDataTable(table, 14);  
   }  
  
   private static void ShowColumns(DataTable columnsTable) {  
      var selectedRows = from info in columnsTable.AsEnumerable()  
                         select new {  
                            TableCatalog = info["TABLE_CATALOG"],  
                            TableSchema = info["TABLE_SCHEMA"],  
                            TableName = info["TABLE_NAME"],  
                            ColumnName = info["COLUMN_NAME"],  
                            DataType = info["DATA_TYPE"]  
                         };  
  
      Console.WriteLine("{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}", "TableCatalog", "TABLE_SCHEMA",  
          "TABLE_NAME", "COLUMN_NAME", "DATA_TYPE");  
      foreach (var row in selectedRows) {  
         Console.WriteLine("{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}", row.TableCatalog,  
             row.TableSchema, row.TableName, row.ColumnName, row.DataType);  
      }  
   }  
  
   private static void ShowIndexColumns(DataTable indexColumnsTable) {  
      var selectedRows = from info in indexColumnsTable.AsEnumerable()  
                         select new {  
                            TableSchema = info["table_schema"],  
                            TableName = info["table_name"],  
                            ColumnName = info["column_name"],  
                            ConstraintSchema = info["constraint_schema"],  
                            ConstraintName = info["constraint_name"],  
                            KeyType = info["KeyType"]  
                         };  
  
      Console.WriteLine("{0,-14}{1,-11}{2,-14}{3,-18}{4,-16}{5,-8}", "table_schema", "table_name", "column_name", "constraint_schema", "constraint_name", "KeyType");  
      foreach (var row in selectedRows) {  
         Console.WriteLine("{0,-14}{1,-11}{2,-14}{3,-18}{4,-16}{5,-8}", row.TableSchema,  
             row.TableName, row.ColumnName, row.ConstraintSchema, row.ConstraintName, row.KeyType);  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="collectionName" />이 null로 지정되어 있습니다.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">데이터베이스에서 스키마 정보 가져오기</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName, string[] restrictionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String, restrictionValues As String()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName, cli::array &lt;System::String ^&gt; ^ restrictionValues);" />
      <MemberSignature Language="F#" Value="override this.GetSchema : string * string[] -&gt; System.Data.DataTable" Usage="sqlConnection.GetSchema (collectionName, restrictionValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="restrictionValues" Type="System.String[]" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="collectionName">반환할 스키마의 이름을 지정합니다.</param>
        <param name="restrictionValues">요청된 스키마에 대한 제한 값의 집합입니다.</param>
        <summary>스키마 이름에 대해 지정된 문자열과 제한 값에 대해 지정된 문자열 배열을 사용하여 이 <see cref="T:System.Data.SqlClient.SqlConnection" />의 데이터 소스에 대한 스키마 정보를 반환합니다.</summary>
        <returns>스키마 정보를 포함하는 A <see cref="T:System.Data.DataTable" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `restrictionValues` 매개 변수를 제공할 수 있습니다 *n* 수준의 특정 컬렉션에 대 한 제한 컬렉션에서 지정 된 값입니다. 앞의 제한을 설정 하려면 필요한 특정된 제한 값을 설정 하 고 다른 제한 값을 설정 하지 않으려면, `null` 한 다음 값을 지정 하려는 제한에 대 한 적절 한 값을 배치 합니다.  
  
 이러한 예로 "Table" 컬렉션입니다. 다음 값을 전달 해야 하는 "테이블" 컬렉션의 세 가지 제한을-데이터베이스, 소유자, 테이블 이름-하려는 "Carl" 소유자와 연결 된 테이블만 돌아갈 경우: null, "Carl"입니다. 제한 값에 전달 하지 않으면, 해당 제한에 대 한 기본값이 사용 됩니다. 이 전달 하는 대로 동일한 매핑을 `null`, 다른 매개 변수 값에 대 한 빈 문자열을 전달 합니다. 이런 경우, 빈 문자열 ("") 지정된 된 매개 변수의 값으로 간주 됩니다.  
  
 보여 주는 코드 샘플 <xref:System.Data.SqlClient.SqlConnection.GetSchema%2A>를 참조 하세요 <xref:System.Data.SqlClient.SqlConnection.GetSchema%2A>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="collectionName" />이 null로 지정되어 있습니다.</exception>
        <altmember cref="M:System.Data.SqlClient.SqlConnection.GetSchema" />
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-database-schema-information.md">데이터베이스에서 스키마 정보 가져오기</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="InfoMessage">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.SqlInfoMessageEventHandler InfoMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.SqlInfoMessageEventHandler InfoMessage" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlConnection.InfoMessage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InfoMessage As SqlInfoMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::SqlInfoMessageEventHandler ^ InfoMessage;" />
      <MemberSignature Language="F#" Value="member this.InfoMessage : System.Data.SqlClient.SqlInfoMessageEventHandler " Usage="member this.InfoMessage : System.Data.SqlClient.SqlInfoMessageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbConnection_InfoMessage")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlInfoMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SQL Server에서 경고나 정보 메시지를 반환할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 서버에서 보낸 정보 메시지를 처리 하는 클라이언트를 만들어야는 <xref:System.Data.SqlClient.SqlInfoMessageEventHandler> 이 이벤트를 수신 하는 대리자입니다.  
  
 <xref:System.Data.SqlClient.SqlConnection.InfoMessage> 이벤트가 발생할 때 메시지 심각도가 10 사용 하 여 또는 SQL Server에서 반환한는 작습니다. 11 ~ 20 개 사이로 심각도 메시지는 오류 및 메시지 심각도 20을 초과 연결이 끊어집니다가 발생 합니다. SQL Server 오류 수준에 대 한 자세한 내용은 참조 하세요. [데이터베이스 엔진 오류 심각도](/sql/relational-databases/errors-events/database-engine-error-severities)합니다.
  
 자세한 내용 및 예제를 참조 하세요 [연결 이벤트](~/docs/framework/data/adonet/connection-events.md)합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5a29de74-acfc-4134-8616-829dd7ce0710">연결 이벤트 사용</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="OnStateChange">
      <MemberSignature Language="C#" Value="protected override void OnStateChange (System.Data.StateChangeEventArgs stateChange);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStateChange(class System.Data.StateChangeEventArgs stateChange) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.OnStateChange(System.Data.StateChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStateChange (stateChange As StateChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStateChange(System::Data::StateChangeEventArgs ^ stateChange);" />
      <MemberSignature Language="F#" Value="override this.OnStateChange : System.Data.StateChangeEventArgs -&gt; unit" Usage="sqlConnection.OnStateChange stateChange" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateChange" Type="System.Data.StateChangeEventArgs" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="stateChange">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" />
      <MemberSignature Language="F#" Value="override this.Open : unit -&gt; unit" Usage="sqlConnection.Open " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.Open</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />로 지정된 속성 설정을 사용하여 데이터베이스 연결을 엽니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlConnection> 사용 가능한 경우 연결 풀에서 열려 있는 연결을 그립니다. 그렇지 않은 경우 SQL Server 인스턴스에 새 연결을 설정 합니다.  
  
> [!NOTE]
>  경우는 <xref:System.Data.SqlClient.SqlConnection> 이동의 범위, 닫혀 있지 않습니다. 따라서 명시적으로 닫아야 연결 호출 하 여 <xref:System.Data.SqlClient.SqlConnection.Close%2A>입니다.  
  
> [!NOTE]
>  TCP/IP가 아닌 프로토콜을 사용 하 여 SQL Server의 인스턴스에 연결 하려는 경우 1433 이외의 포트 번호를 지정 하는 경우는 <xref:System.Data.SqlClient.SqlConnection.Open%2A> 메서드가 실패 합니다. 1433 이외의 포트 번호를 지정 하려면 포함 "server = machinename, 포트 번호" 연결 문자열을 사용 하 여 TCP/IP 프로토콜에서.  
  
> [!NOTE]
>  .NET Framework Data Provider for SQL Server "허용을 호출 하 여 관리 되지 않는 어셈블리" 설정 보안 권한이 필요 (<xref:System.Security.Permissions.SecurityPermission> 사용 하 여 <xref:System.Security.Permissions.SecurityPermissionFlag> 로 설정 `UnmanagedCode`)를 엽니다는 <xref:System.Data.SqlClient.SqlConnection> SQL 디버깅 사용 합니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlConnection>, 열리고 해당 속성의 일부를 표시 합니다. 연결 끝에 자동으로 닫혀는 `using` 블록입니다.  
  
 [!code-csharp[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.Open Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.Open Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">데이터 원본이나 서버를 지정하지 않고 연결을 열 수 없습니다.  
  
또는 
연결이 이미 열려 있습니다.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">연결을 여는 동안 발생한 연결 수준 오류입니다. <see cref="P:System.Data.SqlClient.SqlException.Number" /> 속성에 값 18487 또는 18488이 포함되는 경우 지정된 암호가 만료되었거나 다시 설정해야 함을 나타냅니다. 자세한 내용은 <see cref="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" /> 메서드를 참조하세요.  
  
app.config 파일의 <see langword="&lt;system.data.localdb&gt;" /> 태그가 잘못되었거나 알 수 없는 요소입니다.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><see langword="&lt;localdbinstances&gt;" /> 섹션에 이름이 같은 2개의 항목이 있습니다.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/745c5f95-2f02-4674-b378-6d51a7ec2490">ADO.NET의 연결 문자열</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7e51d44e-7c4e-4040-9332-f0190fe36f07">SQL Server 연결 풀링(ADO.NET)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">데이터 원본에 연결(ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="OpenAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task OpenAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task OpenAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ OpenAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.OpenAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlConnection.OpenAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">취소 명령입니다.</param>
        <summary>비동기 버전 <see cref="M:System.Data.SqlClient.SqlConnection.Open" />, 데이터베이스 연결을 지정 하는 속성 설정을 사용 하 여 열리는 <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" />합니다. 취소 토큰은 연결 제한 시간이 경과하기 전에 작업을 중단하는 요청에 사용할 수 있습니다.  예외는 반환된 작업을 통해 전파됩니다. 연결하지 못하고 연결 제한 시간이 경과하는 경우 반환된 작업이 예외와 함께 오류가 발생한 것으로 표시됩니다. 구현은 풀링된 연결 및 풀링되지 않은 연결에 대한 호출 스레드를 차단하지 않고 Task를 반환합니다.</summary>
        <returns>비동기 작업(operation)을 나타내는 작업(task)입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출한 후 <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A>, <xref:System.Data.SqlClient.SqlConnection.State%2A> 반환 해야 합니다 <xref:System.Data.ConnectionState.Connecting> 반환 될 때까지 <xref:System.Threading.Tasks.Task> 완료 됩니다. 그런 다음 연결 성공 했으면 <xref:System.Data.SqlClient.SqlConnection.State%2A> 반환 해야 <xref:System.Data.ConnectionState.Open>합니다. 연결이 실패 하는 경우 <xref:System.Data.SqlClient.SqlConnection.State%2A> 돌아가야 <xref:System.Data.ConnectionState.Closed>합니다.  
  
 에 대 한 호출 <xref:System.Data.SqlClient.SqlConnection.Close%2A> 시도가 취소 또는 해당 닫기 <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A> 호출 합니다.  
  
 비동기 프로그래밍에.NET Framework Data Provider for SQL Server에 대 한 자세한 내용은 참조 하세요. [비동기 프로그래밍](~/docs/framework/data/adonet/asynchronous-programming.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">작업 완료 전에 동일한 인스턴스에 대해 <see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" />를 두 번 이상 호출  
  
 <see langword="Context Connection=true" />가 연결 문자열에 지정되어 있습니다.  
  
연결을 사용할 수 없습니다는 연결 풀에서 연결 제한 시간 경과 하기 전에 합니다.</exception>
        <exception cref="T:System.Data.SqlClient.SqlException">연결을 여는 동안 발생한 SQL Server에서 반환되는 오류입니다.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="PacketSize">
      <MemberSignature Language="C#" Value="public int PacketSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PacketSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.PacketSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PacketSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PacketSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PacketSize : int" Usage="System.Data.SqlClient.SqlConnection.PacketSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_PacketSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SQL Server의 인스턴스와 통신하는 데 사용하는 네트워크 패킷의 크기(바이트)를 가져옵니다.</summary>
        <value>네트워크 패킷의 크기(바이트)입니다. 기본값은 8000입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 애플리케이션 대량 복사 작업을 수행 하거나 많은 양의 텍스트 또는 이미지 데이터를 하는 경우 더 적은 네트워크 하면 되므로 기본 효율성을 향상 시킬 수 있습니다 보다 큰 패킷 크기를 읽기 및 쓰기 작업입니다. 애플리케이션을 보내고 소량의 정보를 수신, 512 바이트 패킷 크기를 설정할 수 있습니다 (패킷 크기 값을 사용 하 여는 <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>), 대부분의 데이터 전송 작업에 충분 한 합니다. 대부분의 애플리케이션에 대 한 기본 패킷 크기 적합 합니다.  
  
 <xref:System.Data.SqlClient.SqlConnection.PacketSize%2A> 512에서 32767 바이트의 범위에 값이 될 수 있습니다. 값이이 범위를 벗어난 경우 예외가 생성 됩니다.  
  
 8000 패킷을 훨씬 더 효율적으로 SinglePage 할당자에 SQL Server의 전반적인 확장성을 감소 하는 대신 SQL Server 인스턴스에서 다중 페이지 할당자를 사용 하면 보다 큰 수로 기본값을 설정 합니다. SQL Server 메모리를 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [메모리 관리 아키텍처 가이드](/sql/relational-databases/memory-management-architecture-guide)합니다.
  
   
  
## Examples  
 다음 예에서는 <xref:System.Data.SqlClient.SqlConnection>, 설정을 비롯는 `Packet Size` 연결 문자열에는 512입니다. 표시 된 <xref:System.Data.SqlClient.SqlConnection.PacketSize%2A> 및 <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A> 콘솔 창에서 속성입니다.  
  
 [!code-csharp[Classic WebData SqlConnection.PacketSize Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.PacketSize Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.PacketSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.PacketSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">데이터 원본에 연결(ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="RegisterColumnEncryptionKeyStoreProviders">
      <MemberSignature Language="C#" Value="public static void RegisterColumnEncryptionKeyStoreProviders (System.Collections.Generic.IDictionary&lt;string,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt; customProviders);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterColumnEncryptionKeyStoreProviders(class System.Collections.Generic.IDictionary`2&lt;string, class System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt; customProviders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterColumnEncryptionKeyStoreProviders (customProviders As IDictionary(Of String, SqlColumnEncryptionKeyStoreProvider))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterColumnEncryptionKeyStoreProviders(System::Collections::Generic::IDictionary&lt;System::String ^, System::Data::SqlClient::SqlColumnEncryptionKeyStoreProvider ^&gt; ^ customProviders);" />
      <MemberSignature Language="F#" Value="static member RegisterColumnEncryptionKeyStoreProviders : System.Collections.Generic.IDictionary&lt;string, System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt; -&gt; unit" Usage="System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders customProviders" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customProviders" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider&gt;" Index="0" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="customProviders">사용자 지정 공급자</param>
        <summary>사용자 지정 암호화 키 저장소 공급자를 등록합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetStatistics">
      <MemberSignature Language="C#" Value="public void ResetStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.ResetStatistics" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetStatistics ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetStatistics();" />
      <MemberSignature Language="F#" Value="member this.ResetStatistics : unit -&gt; unit" Usage="sqlConnection.ResetStatistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>통계 수집을 활성화하면 모든 값이 0으로 다시 설정됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 통계 수집이 사용 되지 않으며이 메서드는, 하는 경우 오류가 throw 됩니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/429c9d09-92ac-46ec-829a-fbff0a9575a2">SQL Server용 공급자 통계(ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="RetrieveStatistics">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary RetrieveStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionary RetrieveStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.RetrieveStatistics" />
      <MemberSignature Language="VB.NET" Value="Public Function RetrieveStatistics () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionary ^ RetrieveStatistics();" />
      <MemberSignature Language="F#" Value="member this.RetrieveStatistics : unit -&gt; System.Collections.IDictionary" Usage="sqlConnection.RetrieveStatistics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>메서드가 호출된 시점에서 통계의 이름 값 쌍 컬렉션을 반환합니다.</summary>
        <returns><see cref="T:System.Collections.DictionaryEntry" /> 항목에 대한 <see cref="T:System.Collections.IDictionary" /> 형식의 참조를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 호출 하는 경우 검색 된 값에 현재 지점에서 해당 시간. 연결을 사용 하 여 계속 하는 경우 값은 올바르지 않습니다. 최신 값을 가져오는 메서드를 다시 실행 해야 합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/429c9d09-92ac-46ec-829a-fbff0a9575a2">SQL Server용 공급자 통계(ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServerVersion : string" Usage="System.Data.SqlClient.SqlConnection.ServerVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_ServerVersion")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>클라이언트가 연결될 SQL Server 인스턴스의 버전을 포함한 문자열을 가져옵니다.</summary>
        <value>SQL Server 인스턴스의 버전입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 폼의 버전이 *# #. # #. # # #*, 여기서 처음 두 숫자는 주 버전, 다음 두 자리는 부 버전, 되며 마지막 4 자리 릴리스 버전입니다. 폼의 문자열은 *major.minor.build*주요 여기서 부는 정확히 두 자리로 및 빌드 정확히 네 자리로 구성 됩니다.  
  
 <xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A> 호출 후에 반환된 작업이 완료되지 않았고 연결이 열려 있지 않은 상태에서 <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A>이 호출되었습니다.  
  
   
  
## Examples  
 다음 예에서는 <xref:System.Data.SqlClient.SqlConnection> 표시는 <xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A> 속성입니다.  
  
 [!code-csharp[Classic WebData ISqlConnection.ServerVersion Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ISqlConnection.ServerVersion Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ISqlConnection.ServerVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ISqlConnection.ServerVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">연결이 닫힌 경우  
  
 <see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" /> 호출 후에 반환된 작업이 완료되지 않았고 연결이 열려 있지 않은 상태에서 <see cref="P:System.Data.SqlClient.SqlConnection.ServerVersion" />이 호출되었습니다.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 및 ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Data.ConnectionState" Usage="System.Data.SqlClient.SqlConnection.State" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbConnection.State</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbConnection_State")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>연결에 수행된 최근 네트워크 작업 중 <see cref="T:System.Data.SqlClient.SqlConnection" />의 상태를 나타냅니다.</summary>
        <value><see cref="T:System.Data.ConnectionState" /> 열거형입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환 된 <xref:System.Data.ConnectionState> 의 상태를 나타내는 열거형은 <xref:System.Data.SqlClient.SqlConnection>합니다. 연결을 닫았다가 값을 새로 고칠 <xref:System.Data.SqlClient.SqlConnection.State%2A>합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9abc3f92-1be3-4e1a-b360-762dc689650e">데이터 원본에 연결(ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="StateChange">
      <MemberSignature Language="C#" Value="public event System.Data.StateChangeEventHandler StateChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.StateChangeEventHandler StateChange" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlConnection.StateChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChange As StateChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::StateChangeEventHandler ^ StateChange;" />
      <MemberSignature Language="F#" Value="member this.StateChange : System.Data.StateChangeEventHandler " Usage="member this.StateChange : System.Data.StateChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbConnection_StateChange")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.StateChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>연결의 상태가 변경 될 때 발생 합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatisticsEnabled">
      <MemberSignature Language="C#" Value="public bool StatisticsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StatisticsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.StatisticsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property StatisticsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StatisticsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StatisticsEnabled : bool with get, set" Usage="System.Data.SqlClient.SqlConnection.StatisticsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="true" />(으)로 설정하면 현재 연결에 대한 통계 수집이 사용하도록 설정됩니다.</summary>
        <value>통계 수집이 사용하도록 설정된 경우 <see langword="true" />이고, 사용하도록 설정되지 않은 경우 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 통계 수집을 사용 하도록 설정 하면 성능에는 사소 하지만 측정 가능한 영향을 주지 않으므로 사용 해야 합니다 필요한 경우에.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/429c9d09-92ac-46ec-829a-fbff0a9575a2">SQL Server용 공급자 통계(ADO.NET)</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.BeginTransaction">
      <MemberSignature Language="C#" Value="System.Data.IDbTransaction IDbConnection.BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbTransaction System.Data.IDbConnection.BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#Data#IDbConnection#BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Function BeginTransaction () As IDbTransaction Implements IDbConnection.BeginTransaction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbTransaction ^ System.Data.IDbConnection.BeginTransaction() = System::Data::IDbConnection::BeginTransaction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.BeginTransaction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>데이터베이스 트랜잭션을 시작합니다.</summary>
        <returns>새 트랜잭션을 나타내는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
트랜잭션이 완료 되 면 명시적으로 커밋하거나를 사용 하 여 트랜잭션을 롤백하는 <xref:System.Data.IDbTransaction.Commit> 또는 <xref:System.Data.IDbTransaction.Rollback> 메서드.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.BeginTransaction">
      <MemberSignature Language="C#" Value="System.Data.IDbTransaction IDbConnection.BeginTransaction (System.Data.IsolationLevel iso);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbTransaction System.Data.IDbConnection.BeginTransaction(valuetype System.Data.IsolationLevel iso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Function BeginTransaction (iso As IsolationLevel) As IDbTransaction Implements IDbConnection.BeginTransaction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbTransaction ^ System.Data.IDbConnection.BeginTransaction(System::Data::IsolationLevel iso) = System::Data::IDbConnection::BeginTransaction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iso" Type="System.Data.IsolationLevel" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="iso"><see cref="T:System.Data.IsolationLevel" /> 값 중 하나입니다.</param>
        <summary>지정된 <see cref="T:System.Data.IsolationLevel" /> 값을 사용하여 데이터베이스 트랜잭션을 시작합니다.</summary>
        <returns>새 트랜잭션을 나타내는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
트랜잭션이 완료 되 면 명시적으로 커밋하거나를 사용 하 여 트랜잭션을 롤백하는 <xref:System.Data.IDbTransaction.Commit> 또는 <xref:System.Data.IDbTransaction.Rollback> 메서드.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.CreateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand IDbConnection.CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbCommand System.Data.IDbConnection.CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#Data#IDbConnection#CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Function CreateCommand () As IDbCommand Implements IDbConnection.CreateCommand" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbCommand ^ System.Data.IDbConnection.CreateCommand() = System::Data::IDbConnection::CreateCommand;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.CreateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>연결과 관련된 명령 개체를 만들고 반환합니다.</summary>
        <returns>연결과 관련된 명령 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlConnection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 인스턴스의 복사본인 새 개체를 만듭니다.</summary>
        <returns>이 인스턴스의 복사본인 새 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Data.SqlClient.SqlConnection> 인스턴스가 <xref:System.ICloneable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 이 멤버는.NET Compact framework 에서만 지원 됩니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
    <Member MemberName="WorkstationId">
      <MemberSignature Language="C#" Value="public string WorkstationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WorkstationId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlConnection.WorkstationId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkstationId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WorkstationId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkstationId : string" Usage="System.Data.SqlClient.SqlConnection.WorkstationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("SqlConnection_WorkstationId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터베이스 클라이언트를 식별하는 문자열을 가져옵니다.</summary>
        <value>데이터베이스 클라이언트를 식별하는 문자열입니다. 지정하지 않으면 클라이언트 컴퓨터의 이름입니다. 어느 것도 지정하지 않으면 이 값은 빈 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 문자열에는 일반적으로 클라이언트의 네트워크 이름을 포함합니다. 합니다 <xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A> 속성에 해당 하는 `Workstation ID` 연결 문자열 속성입니다.  
  
   
  
## Examples  
 다음 예에서는 <xref:System.Data.SqlClient.SqlConnection> 표시는 <xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A> 속성입니다.  
  
 [!code-csharp[Classic WebData SqlConnection.WorkstationId Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.WorkstationId Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.WorkstationId Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.WorkstationId Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/index.md">SQL Server 및 ADO.NET</related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">ADO.NET 개요</related>
      </Docs>
    </Member>
  </Members>
</Type>