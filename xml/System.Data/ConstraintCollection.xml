<Type Name="ConstraintCollection" FullName="System.Data.ConstraintCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="74359aa862a93855079aaa7eac033a9a636ccd0b" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58737869" /></Metadata><TypeSignature Language="C#" Value="public sealed class ConstraintCollection : System.Data.InternalDataCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConstraintCollection extends System.Data.InternalDataCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Data.ConstraintCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConstraintCollection&#xA;Inherits InternalDataCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConstraintCollection sealed : System::Data::InternalDataCollectionBase" />
  <TypeSignature Language="F#" Value="type ConstraintCollection = class&#xA;    inherit InternalDataCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.InternalDataCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.ComponentModel.DefaultEvent("CollectionChanged")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.ConstraintsCollectionEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.ConstraintsCollectionEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.ConstraintsCollectionEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.ConstraintsCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.ConstraintsCollectionEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b7c25-101"><see cref="T:System.Data.DataTable" />에 대한 제약 조건 컬렉션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-101">Represents a collection of constraints for a <see cref="T:System.Data.DataTable" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7c25-102"><xref:System.Data.ConstraintCollection> 를 통해 액세스를 <xref:System.Data.DataTable.Constraints%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-102">The <xref:System.Data.ConstraintCollection> is accessed through the <xref:System.Data.DataTable.Constraints%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="b7c25-103"><xref:System.Data.ConstraintCollection> 둘 다 포함할 수 있습니다 <xref:System.Data.UniqueConstraint> 하 고 <xref:System.Data.ForeignKeyConstraint> 에 대 한 개체는 <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="b7c25-103">The <xref:System.Data.ConstraintCollection> can contain both <xref:System.Data.UniqueConstraint> and <xref:System.Data.ForeignKeyConstraint> objects for the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="b7c25-104"><xref:System.Data.UniqueConstraint> 개체를 사용 하면 특정 열의 데이터는 항상 데이터 무결성을 유지 하기 위해 고유 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-104">A <xref:System.Data.UniqueConstraint> object makes sure that data in a specific column is always unique to preserve the data integrity.</span></span> <span data-ttu-id="b7c25-105">합니다 <xref:System.Data.ForeignKeyConstraint> 관련에서 수행 될 작업을 결정 경우 테이블에서 데이터를 <xref:System.Data.DataTable> 업데이트 되거나 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-105">The <xref:System.Data.ForeignKeyConstraint> determines what will occur in related tables when data in the <xref:System.Data.DataTable> is either updated or deleted.</span></span> <span data-ttu-id="b7c25-106">예를 들어 행이 삭제 되는 <xref:System.Data.ForeignKeyConstraint> 결정 됩니다 (하위) 여부 관련된 행 들도 함께 삭제 또는 일부 다른 작업 과정입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-106">For example, if a row is deleted, the <xref:System.Data.ForeignKeyConstraint> will determine whether the related rows are also deleted (a cascade), or some other course of action.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b7c25-107">추가 하는 경우는 <xref:System.Data.DataRelation> 하기 위해 두 테이블 간의 관계를 만드는 <xref:System.Data.DataSet>모두를 <xref:System.Data.ForeignKeyConstraint> 및 <xref:System.Data.UniqueConstraint> 자동으로 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-107">When you add a <xref:System.Data.DataRelation> that creates a relationship between two tables to a <xref:System.Data.DataSet>, both a <xref:System.Data.ForeignKeyConstraint> and a <xref:System.Data.UniqueConstraint> are created automatically.</span></span> <span data-ttu-id="b7c25-108">합니다 <xref:System.Data.UniqueConstraint> 부모의 기본 키 열에 적용 됩니다 <xref:System.Data.DataTable>, 해당 테이블에는 제약 조건이 추가 되 고 <xref:System.Data.ConstraintCollection>입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-108">The <xref:System.Data.UniqueConstraint> is applied to the primary key column in the parent <xref:System.Data.DataTable>, and the constraint is added to that table's <xref:System.Data.ConstraintCollection>.</span></span> <span data-ttu-id="b7c25-109">합니다 <xref:System.Data.ForeignKeyConstraint> 기본 키 열과 외래 키 열을 적용 하 고 제약 조건을 자식 테이블에 추가 됩니다 <xref:System.Data.ConstraintCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-109">The <xref:System.Data.ForeignKeyConstraint> is applied to the primary key column and the foreign key column, and the constraint is added to the child table's <xref:System.Data.ConstraintCollection>.</span></span>  
  
 <span data-ttu-id="b7c25-110">합니다 <xref:System.Data.ConstraintCollection> 와 같은 표준 컬렉션 메서드를 사용 하 여 <xref:System.Data.ConstraintCollection.Add%2A>를 <xref:System.Data.ConstraintCollection.Clear%2A>, 및 <xref:System.Data.ConstraintCollection.Remove%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-110">The <xref:System.Data.ConstraintCollection> uses standard collection methods such as <xref:System.Data.ConstraintCollection.Add%2A>, <xref:System.Data.ConstraintCollection.Clear%2A>, and <xref:System.Data.ConstraintCollection.Remove%2A>.</span></span> <span data-ttu-id="b7c25-111">또한는 <xref:System.Data.ConstraintCollection.Contains%2A> 메서드를 사용 하 여 컬렉션에 특정 제약 조건이 있는지 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-111">In addition, the <xref:System.Data.ConstraintCollection.Contains%2A> method can be used to look for the existence of a particular constraint in the collection.</span></span>  
  
 <span data-ttu-id="b7c25-112">A <xref:System.Data.UniqueConstraint> 때 생성 되는 <xref:System.Data.DataColumn> 사용 하 여 해당 <xref:System.Data.DataColumn.Unique%2A> 속성이로 설정 `true` 에 추가 됩니다는 <xref:System.Data.DataTable> 개체의 <xref:System.Data.DataColumnCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-112">A <xref:System.Data.UniqueConstraint> is created when a <xref:System.Data.DataColumn> with its <xref:System.Data.DataColumn.Unique%2A> property set to `true` is added to a <xref:System.Data.DataTable> object's <xref:System.Data.DataColumnCollection>.</span></span>  
  
 <span data-ttu-id="b7c25-113">A <xref:System.Data.ForeignKeyConstraint> 때 생성 되는 <xref:System.Data.DataRelation> 에 추가 되는 <xref:System.Data.DataSet> 개체의 <xref:System.Data.DataRelationCollection>.</span><span class="sxs-lookup"><span data-stu-id="b7c25-113">A <xref:System.Data.ForeignKeyConstraint> is created when a <xref:System.Data.DataRelation> is added to a <xref:System.Data.DataSet> object's <xref:System.Data.DataRelationCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7c25-114">첫 번째 예에서는 <xref:System.Data.DataTable>, 추가 <xref:System.Data.DataColumn> (사용 하 여 해당 <xref:System.Data.DataColumn.Unique%2A> 속성이로 설정 `true`)에 <xref:System.Data.DataColumnCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-114">The first example creates a <xref:System.Data.DataTable>, and adds a <xref:System.Data.DataColumn> (with its <xref:System.Data.DataColumn.Unique%2A> property set to `true`) to the <xref:System.Data.DataColumnCollection>.</span></span> <span data-ttu-id="b7c25-115">두 번째 예제에서는 만듭니다는 <xref:System.Data.DataSet>두 개의 <xref:System.Data.DataTable> 개체, 4 개의 열이 및 <xref:System.Data.DataRelation>합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-115">The second example creates a <xref:System.Data.DataSet>, two <xref:System.Data.DataTable> objects, four columns, and a <xref:System.Data.DataRelation>.</span></span> <span data-ttu-id="b7c25-116">제약 조건의 수는 다음 출력 하는 <xref:System.Data.ForeignKeyConstraint> 및 <xref:System.Data.UniqueConstraint> 될 때 생성 되는 <xref:System.Data.DataRelation> 에 추가 되는 <xref:System.Data.DataSet> 개체의 <xref:System.Data.DataRelationCollection.%23ctor%2A>.</span><span class="sxs-lookup"><span data-stu-id="b7c25-116">The count of constraints is then printed to show that a <xref:System.Data.ForeignKeyConstraint> and a <xref:System.Data.UniqueConstraint> are created when a <xref:System.Data.DataRelation> is added to the <xref:System.Data.DataSet> object's <xref:System.Data.DataRelationCollection.%23ctor%2A>.</span></span>  
  
 [!code-csharp[Classic WebData ConstraintCollection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="b7c25-117">이 유형은 다중 스레드 읽기 작업에 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-117">This type is safe for multithreaded read operations.</span></span> <span data-ttu-id="b7c25-118">모든 쓰기 작업을 동기화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-118">You must synchronize any write operations.</span></span></threadsafe>
    <altmember cref="T:System.Data.ForeignKeyConstraint" />
    <altmember cref="T:System.Data.UniqueConstraint" />
    <altmember cref="T:System.Data.DataRelation" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b7c25-119">컬렉션에 <see cref="T:System.Data.Constraint" /> 개체를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-119">Adds a <see cref="T:System.Data.Constraint" /> object to the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Data.Constraint constraint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Data.Constraint constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Data::Constraint ^ constraint);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Data.Constraint -&gt; unit" Usage="constraintCollection.Add constraint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Data.Constraint" />
      </Parameters>
      <Docs>
        <param name="constraint"><span data-ttu-id="b7c25-120">추가할 <see langword="Constraint" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-120">The <see langword="Constraint" /> to add.</span></span></param>
        <summary><span data-ttu-id="b7c25-121">지정된 <see cref="T:System.Data.Constraint" /> 개체를 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-121">Adds the specified <see cref="T:System.Data.Constraint" /> object to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7c25-122">컬렉션 추가 또는 제약 조건을 제거 하 여 성공적으로 변경 되는 <xref:System.Data.ConstraintCollection.CollectionChanged> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-122">If the collection is successfully changed by adding or removing constraints, the <xref:System.Data.ConstraintCollection.CollectionChanged> event occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7c25-123">다음 예제에서는 추가 <xref:System.Data.UniqueConstraint> 에 <xref:System.Data.ConstraintCollection> 의 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-123">The following example adds a <xref:System.Data.UniqueConstraint> to the <xref:System.Data.ConstraintCollection> of a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData ConstraintCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b7c25-124"><paramref name="constraint" /> 인수가 null입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-124">The <paramref name="constraint" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b7c25-125">제약 조건이 이미 이 컬렉션에 속해 있거나 다른 컬렉션에 속해 있는 경우</span><span class="sxs-lookup"><span data-stu-id="b7c25-125">The constraint already belongs to this collection, or belongs to another collection.</span></span></exception>
        <exception cref="T:System.Data.DuplicateNameException"><span data-ttu-id="b7c25-126">컬렉션에 이미 같은 이름의 제약 조건이 있는 경우</span><span class="sxs-lookup"><span data-stu-id="b7c25-126">The collection already has a constraint with the same name.</span></span> <span data-ttu-id="b7c25-127">(대/소문자를 구분하지 않고 비교합니다.)</span><span class="sxs-lookup"><span data-stu-id="b7c25-127">(The comparison is not case-sensitive.)</span></span></exception>
        <altmember cref="T:System.Data.UniqueConstraint" />
        <altmember cref="T:System.Data.ForeignKeyConstraint" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.Constraint Add (string name, System.Data.DataColumn column, bool primaryKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Constraint Add(string name, class System.Data.DataColumn column, bool primaryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (name As String, column As DataColumn, primaryKey As Boolean) As Constraint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Constraint ^ Add(System::String ^ name, System::Data::DataColumn ^ column, bool primaryKey);" />
      <MemberSignature Language="F#" Value="member this.Add : string * System.Data.DataColumn * bool -&gt; System.Data.Constraint" Usage="constraintCollection.Add (name, column, primaryKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="primaryKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b7c25-128"><see langword="UniqueConstraint" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-128">The name of the <see langword="UniqueConstraint" />.</span></span></param>
        <param name="column"><span data-ttu-id="b7c25-129">제약 조건이 적용되는 <see cref="T:System.Data.DataColumn" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-129">The <see cref="T:System.Data.DataColumn" /> to which the constraint applies.</span></span></param>
        <param name="primaryKey"><span data-ttu-id="b7c25-130">열이 기본 키인지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-130">Specifies whether the column should be the primary key.</span></span> <span data-ttu-id="b7c25-131"><see langword="true" />이면 기본 키 열이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-131">If <see langword="true" />, the column will be a primary key column.</span></span></param>
        <summary><span data-ttu-id="b7c25-132">지정된 이름, <see cref="T:System.Data.UniqueConstraint" /> 및 해당 열이 기본 키인지 여부를 나타내는 값이 있는 새 <see cref="T:System.Data.DataColumn" />를 생성하여 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-132">Constructs a new <see cref="T:System.Data.UniqueConstraint" /> with the specified name, <see cref="T:System.Data.DataColumn" />, and value that indicates whether the column is a primary key, and adds it to the collection.</span></span></summary>
        <returns><span data-ttu-id="b7c25-133">새 <see langword="UniqueConstraint" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-133">A new <see langword="UniqueConstraint" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7c25-134"><xref:System.Data.ConstraintCollection.CollectionChanged> 제약 조건이 성공적으로 추가 되 면 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-134">The <xref:System.Data.ConstraintCollection.CollectionChanged> event occurs if the constraint is added successfully.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7c25-135">다음 예제에서는 합니다 <xref:System.Data.ConstraintCollection.Add%2A> 메서드를 만들고 새 <xref:System.Data.UniqueConstraint> 에 <xref:System.Data.ConstraintCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-135">The following example uses the <xref:System.Data.ConstraintCollection.Add%2A> method to create and add a new <xref:System.Data.UniqueConstraint> to a <xref:System.Data.ConstraintCollection>.</span></span>  
  
 [!code-csharp[Classic WebData ConstraintCollection.Add2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.Add2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b7c25-136">제약 조건이 이미 이 컬렉션에 속해 있는 경우</span><span class="sxs-lookup"><span data-stu-id="b7c25-136">The constraint already belongs to this collection.</span></span>  
  
<span data-ttu-id="b7c25-137">-또는-</span><span class="sxs-lookup"><span data-stu-id="b7c25-137">-Or-</span></span> 
<span data-ttu-id="b7c25-138">제약 조건이 다른 컬렉션에 속한 경우</span><span class="sxs-lookup"><span data-stu-id="b7c25-138">The constraint belongs to another collection.</span></span></exception>
        <exception cref="T:System.Data.DuplicateNameException"><span data-ttu-id="b7c25-139">컬렉션에 지정된 이름의 제약 조건이 이미 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="b7c25-139">The collection already has a constraint with the specified name.</span></span> <span data-ttu-id="b7c25-140">(대/소문자를 구분하지 않고 비교합니다.)</span><span class="sxs-lookup"><span data-stu-id="b7c25-140">(The comparison is not case-sensitive.)</span></span></exception>
        <altmember cref="T:System.Data.UniqueConstraint" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.Constraint Add (string name, System.Data.DataColumn primaryKeyColumn, System.Data.DataColumn foreignKeyColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Constraint Add(string name, class System.Data.DataColumn primaryKeyColumn, class System.Data.DataColumn foreignKeyColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (name As String, primaryKeyColumn As DataColumn, foreignKeyColumn As DataColumn) As Constraint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Constraint ^ Add(System::String ^ name, System::Data::DataColumn ^ primaryKeyColumn, System::Data::DataColumn ^ foreignKeyColumn);" />
      <MemberSignature Language="F#" Value="member this.Add : string * System.Data.DataColumn * System.Data.DataColumn -&gt; System.Data.Constraint" Usage="constraintCollection.Add (name, primaryKeyColumn, foreignKeyColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="primaryKeyColumn" Type="System.Data.DataColumn" />
        <Parameter Name="foreignKeyColumn" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b7c25-141"><see cref="T:System.Data.ForeignKeyConstraint" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-141">The name of the <see cref="T:System.Data.ForeignKeyConstraint" />.</span></span></param>
        <param name="primaryKeyColumn"><span data-ttu-id="b7c25-142">기본 키 또는 부모 <see cref="T:System.Data.DataColumn" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-142">The primary key, or parent, <see cref="T:System.Data.DataColumn" />.</span></span></param>
        <param name="foreignKeyColumn"><span data-ttu-id="b7c25-143">외래 키 또는 자식 <see cref="T:System.Data.DataColumn" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-143">The foreign key, or child, <see cref="T:System.Data.DataColumn" />.</span></span></param>
        <summary><span data-ttu-id="b7c25-144">지정된 이름, 부모 열 및 자식 열을 사용하여 새 <see cref="T:System.Data.ForeignKeyConstraint" />를 만들어 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-144">Constructs a new <see cref="T:System.Data.ForeignKeyConstraint" /> with the specified name, parent column, and child column, and adds the constraint to the collection.</span></span></summary>
        <returns><span data-ttu-id="b7c25-145">새 <see langword="ForeignKeyConstraint" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-145">A new <see langword="ForeignKeyConstraint" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7c25-146"><xref:System.Data.ConstraintCollection.CollectionChanged> 제약 조건이 성공적으로 추가 되 면 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-146">The <xref:System.Data.ConstraintCollection.CollectionChanged> event occurs if the constraint is added successfully.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7c25-147">다음 예제에서는 새 <xref:System.Data.ForeignKeyConstraint> 에 <xref:System.Data.ConstraintCollection> 의 한 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-147">The following example adds a new <xref:System.Data.ForeignKeyConstraint> to the <xref:System.Data.ConstraintCollection> of a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData ConstraintCollection.Add3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.Add3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.Constraint Add (string name, System.Data.DataColumn[] columns, bool primaryKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Constraint Add(string name, class System.Data.DataColumn[] columns, bool primaryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (name As String, columns As DataColumn(), primaryKey As Boolean) As Constraint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Constraint ^ Add(System::String ^ name, cli::array &lt;System::Data::DataColumn ^&gt; ^ columns, bool primaryKey);" />
      <MemberSignature Language="F#" Value="member this.Add : string * System.Data.DataColumn[] * bool -&gt; System.Data.Constraint" Usage="constraintCollection.Add (name, columns, primaryKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="columns" Type="System.Data.DataColumn[]" />
        <Parameter Name="primaryKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b7c25-148"><see cref="T:System.Data.UniqueConstraint" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-148">The name of the <see cref="T:System.Data.UniqueConstraint" />.</span></span></param>
        <param name="columns"><span data-ttu-id="b7c25-149">제약 조건이 적용되는 <see cref="T:System.Data.DataColumn" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-149">An array of <see cref="T:System.Data.DataColumn" /> objects to which the constraint applies.</span></span></param>
        <param name="primaryKey"><span data-ttu-id="b7c25-150">열이 기본 키인지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-150">Specifies whether the column should be the primary key.</span></span> <span data-ttu-id="b7c25-151"><see langword="true" />이면 기본 키 열이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-151">If <see langword="true" />, the column will be a primary key column.</span></span></param>
        <summary><span data-ttu-id="b7c25-152">지정된 이름, <see cref="T:System.Data.UniqueConstraint" /> 개체의 배열 및 열이 기본 키인지 여부를 나타내는 값이 있는 새 <see cref="T:System.Data.DataColumn" />를 생성하여 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-152">Constructs a new <see cref="T:System.Data.UniqueConstraint" /> with the specified name, array of <see cref="T:System.Data.DataColumn" /> objects, and value that indicates whether the column is a primary key, and adds it to the collection.</span></span></summary>
        <returns><span data-ttu-id="b7c25-153">새 <see langword="UniqueConstraint" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-153">A new <see langword="UniqueConstraint" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7c25-154"><xref:System.Data.ConstraintCollection.CollectionChanged> 제약 조건이 성공적으로 추가 되 면 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-154">The <xref:System.Data.ConstraintCollection.CollectionChanged> event occurs if the constraint is added successfully.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7c25-155">다음 예제에서는 배열을 <xref:System.Data.DataColumn> 새 만드는 데 사용 되는 개체 <xref:System.Data.UniqueConstraint> 특정에서 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-155">The following example creates an array of <xref:System.Data.DataColumn> objects that are used to create a new <xref:System.Data.UniqueConstraint> in a specific <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData ConstraintCollection.Add1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.Add1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b7c25-156">제약 조건이 이미 이 컬렉션에 속해 있는 경우</span><span class="sxs-lookup"><span data-stu-id="b7c25-156">The constraint already belongs to this collection.</span></span>  
  
<span data-ttu-id="b7c25-157">-또는-</span><span class="sxs-lookup"><span data-stu-id="b7c25-157">-Or-</span></span> 
<span data-ttu-id="b7c25-158">제약 조건이 다른 컬렉션에 속한 경우</span><span class="sxs-lookup"><span data-stu-id="b7c25-158">The constraint belongs to another collection.</span></span></exception>
        <exception cref="T:System.Data.DuplicateNameException"><span data-ttu-id="b7c25-159">컬렉션에 지정된 이름의 제약 조건이 이미 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="b7c25-159">The collection already has a constraint with the specified name.</span></span> <span data-ttu-id="b7c25-160">(대/소문자를 구분하지 않고 비교합니다.)</span><span class="sxs-lookup"><span data-stu-id="b7c25-160">(The comparison is not case-sensitive.)</span></span></exception>
        <altmember cref="T:System.Data.UniqueConstraint" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.Constraint Add (string name, System.Data.DataColumn[] primaryKeyColumns, System.Data.DataColumn[] foreignKeyColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Constraint Add(string name, class System.Data.DataColumn[] primaryKeyColumns, class System.Data.DataColumn[] foreignKeyColumns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (name As String, primaryKeyColumns As DataColumn(), foreignKeyColumns As DataColumn()) As Constraint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Constraint ^ Add(System::String ^ name, cli::array &lt;System::Data::DataColumn ^&gt; ^ primaryKeyColumns, cli::array &lt;System::Data::DataColumn ^&gt; ^ foreignKeyColumns);" />
      <MemberSignature Language="F#" Value="member this.Add : string * System.Data.DataColumn[] * System.Data.DataColumn[] -&gt; System.Data.Constraint" Usage="constraintCollection.Add (name, primaryKeyColumns, foreignKeyColumns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="primaryKeyColumns" Type="System.Data.DataColumn[]" />
        <Parameter Name="foreignKeyColumns" Type="System.Data.DataColumn[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b7c25-161"><see cref="T:System.Data.ForeignKeyConstraint" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-161">The name of the <see cref="T:System.Data.ForeignKeyConstraint" />.</span></span></param>
        <param name="primaryKeyColumns"><span data-ttu-id="b7c25-162">기본 키 열 또는 부모 열인 <see cref="T:System.Data.DataColumn" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-162">An array of <see cref="T:System.Data.DataColumn" /> objects that are the primary key, or parent, columns.</span></span></param>
        <param name="foreignKeyColumns"><span data-ttu-id="b7c25-163">외래 키 열 또는 자식 열인 <see cref="T:System.Data.DataColumn" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-163">An array of <see cref="T:System.Data.DataColumn" /> objects that are the foreign key, or child, columns.</span></span></param>
        <summary><span data-ttu-id="b7c25-164">부모 열과 자식 열의 지정된 배열을 사용하여 새 <see cref="T:System.Data.ForeignKeyConstraint" />를 만들어 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-164">Constructs a new <see cref="T:System.Data.ForeignKeyConstraint" />, with the specified arrays of parent columns and child columns, and adds the constraint to the collection.</span></span></summary>
        <returns><span data-ttu-id="b7c25-165">새 <see langword="ForeignKeyConstraint" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-165">A new <see langword="ForeignKeyConstraint" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7c25-166"><xref:System.Data.ConstraintCollection.CollectionChanged> 제약 조건이 성공적으로 추가 되 면 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-166">The <xref:System.Data.ConstraintCollection.CollectionChanged> event occurs if the constraint is added successfully.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7c25-167">다음 예제에서는 <xref:System.Data.DataColumn> 개체의 두 배열을 만든 다음, 데이터 세트의 두 테이블 간에 두 개의 <xref:System.Data.ForeignKeyConstraint> 관계를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-167">The following example creates two arrays of <xref:System.Data.DataColumn> objects, and then creates two <xref:System.Data.ForeignKeyConstraint> relationships between two tables in a dataset.</span></span>  
  
 [!code-csharp[Classic WebData ConstraintCollection.Add4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.Add4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Data.Constraint[] constraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Data.Constraint[] constraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (constraints As Constraint())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Data::Constraint ^&gt; ^ constraints);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Data.Constraint[] -&gt; unit" Usage="constraintCollection.AddRange constraints" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraints" Type="System.Data.Constraint[]" />
      </Parameters>
      <Docs>
        <param name="constraints"><span data-ttu-id="b7c25-168">컬렉션에 추가할 <see cref="T:System.Data.ConstraintCollection" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-168">An array of <see cref="T:System.Data.ConstraintCollection" /> objects to add to the collection.</span></span></param>
        <summary><span data-ttu-id="b7c25-169">지정된 <see cref="T:System.Data.ConstraintCollection" /> 배열의 요소를 컬렉션의 끝에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-169">Copies the elements of the specified <see cref="T:System.Data.ConstraintCollection" /> array to the end of the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7c25-170">하는 경우 <xref:System.Data.DataTable.BeginInit%2A> 를 호출한 `AddRange` 때까지 컬렉션에 개체를 추가 하지 않습니다 <xref:System.Data.DataTable.EndInit%2A> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-170">If <xref:System.Data.DataTable.BeginInit%2A> has been called, `AddRange` does not add any objects to the collection until <xref:System.Data.DataTable.EndInit%2A> is called.</span></span> <span data-ttu-id="b7c25-171">시간에는 `EndInit` 는 호출 컬렉션 채워집니다에 대 한 최근 호출에 지정 된 항목과 `AddRange`합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-171">At the time that `EndInit` is called, the collection will be populated with the items specified in the most recent call to `AddRange`.</span></span> <span data-ttu-id="b7c25-172">하는 경우 `AddRange` 내에서 여러 번 호출 되는 `BeginInit`  /  `EndInit` 시퀀스에 대 한 최근 호출에 지정 된 항목만 `AddRange` 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-172">If `AddRange` is called multiple times within a `BeginInit` / `EndInit` sequence, only those items specified in the most recent call to `AddRange` are added.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7c25-173">다음 예제에서는 기본 및 외래 키 제약 조건을 만들고에 추가 된 <xref:System.Data.ConstraintCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-173">The following example creates primary and foreign key constraints, and adds them to the <xref:System.Data.ConstraintCollection>.</span></span>  
  
 [!code-csharp[Classic WebData ConstraintCollection.AddRange Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.AddRange Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.AddRange Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.AddRange Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemove">
      <MemberSignature Language="C#" Value="public bool CanRemove (System.Data.Constraint constraint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanRemove(class System.Data.Constraint constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanRemove(System::Data::Constraint ^ constraint);" />
      <MemberSignature Language="F#" Value="member this.CanRemove : System.Data.Constraint -&gt; bool" Usage="constraintCollection.CanRemove constraint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Data.Constraint" />
      </Parameters>
      <Docs>
        <param name="constraint"><span data-ttu-id="b7c25-174">컬렉션에서 제거할 수 있는지 테스트할 <see cref="T:System.Data.Constraint" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-174">The <see cref="T:System.Data.Constraint" /> to be tested for removal from the collection.</span></span></param>
        <summary><span data-ttu-id="b7c25-175"><see cref="T:System.Data.Constraint" />를 제거할 수 있는지 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-175">Indicates whether a <see cref="T:System.Data.Constraint" /> can be removed.</span></span></summary>
        <returns><span data-ttu-id="b7c25-176"><see cref="T:System.Data.Constraint" />를 컬렉션에서 제거할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-176"><see langword="true" /> if the <see cref="T:System.Data.Constraint" /> can be removed from collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7c25-177">기본 동작 때마다를 <xref:System.Data.DataRelation> 에 추가 됩니다을 <xref:System.Data.DataSet>를 추가 하는 것을 <xref:System.Data.ForeignKeyConstraint> 부모 테이블에 및 <xref:System.Data.UniqueConstraint> 자식 테이블에 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-177">The default behavior whenever a <xref:System.Data.DataRelation> is added to a <xref:System.Data.DataSet>, is to add a <xref:System.Data.ForeignKeyConstraint> to the parent table and a <xref:System.Data.UniqueConstraint> to the child table.</span></span> <span data-ttu-id="b7c25-178">합니다 <xref:System.Data.UniqueConstraint> 부모 테이블의 기본 키 열에 적용 되 고 <xref:System.Data.ForeignKeyConstraint> 자식 테이블의 외래 키 열에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-178">The <xref:System.Data.UniqueConstraint> is applied to the primary key column of the parent table, and the <xref:System.Data.ForeignKeyConstraint> is applied to the foreign key column of the child table.</span></span> <span data-ttu-id="b7c25-179">제거 하기 때문에 <xref:System.Data.UniqueConstraint> 제거 하기 전에 <xref:System.Data.ForeignKeyConstraint> 하면 예외가 throw 될 수를 항상 사용 해야는 <xref:System.Data.ConstraintCollection.CanRemove%2A> 메서드를 호출 했는지를 제거 하기 전에 <xref:System.Data.UniqueConstraint> 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-179">Because trying to remove the <xref:System.Data.UniqueConstraint> before removing the <xref:System.Data.ForeignKeyConstraint> causes an exception to be thrown, you should always use the <xref:System.Data.ConstraintCollection.CanRemove%2A> method before calling Remove, to make sure that the <xref:System.Data.UniqueConstraint> can be removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7c25-180">다음 예제에서는 합니다 <xref:System.Data.ConstraintCollection.CanRemove%2A> 결정 하는 방법 여부를 <xref:System.Data.Constraint> 제거 하기 전에 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-180">The following example uses the <xref:System.Data.ConstraintCollection.CanRemove%2A> method to determine whether a <xref:System.Data.Constraint> can be removed, before trying to remove it.</span></span>  
  
 [!code-csharp[Classic WebData ConstraintCollection.CanRemove Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.CanRemove Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.CanRemove Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.CanRemove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="constraintCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b7c25-181"><see cref="T:System.Data.Constraint" /> 개체의 컬렉션을 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-181">Clears the collection of any <see cref="T:System.Data.Constraint" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7c25-182"><xref:System.Data.ConstraintCollection.CollectionChanged> 이 작업에 성공한 경우 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-182">The <xref:System.Data.ConstraintCollection.CollectionChanged> event occurs if this action is successful.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7c25-183">다음 예제에서 모든 제약 조건을 지웁니다는 <xref:System.Data.ConstraintCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-183">The following example clears all constraints from the <xref:System.Data.ConstraintCollection>.</span></span>  
  
 [!code-csharp[Classic WebData ConstraintCollection.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler CollectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.ConstraintCollection.CollectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CollectionChanged As CollectionChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CollectionChangeEventHandler ^ CollectionChanged;" />
      <MemberSignature Language="F#" Value="member this.CollectionChanged : System.ComponentModel.CollectionChangeEventHandler " Usage="member this.CollectionChanged : System.ComponentModel.CollectionChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7c25-184"><see cref="T:System.Data.ConstraintCollection" /> 개체가 추가되거나 제거되어 <see cref="T:System.Data.Constraint" />이 변경될 때마다 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-184">Occurs whenever the <see cref="T:System.Data.ConstraintCollection" /> is changed because of <see cref="T:System.Data.Constraint" /> objects being added or removed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7c25-185">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-185">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7c25-186">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Data.ConstraintCollection.CollectionChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-186">The following example demonstrates how to use the <xref:System.Data.ConstraintCollection.CollectionChanged> event.</span></span>  
  
 [!code-csharp[Classic WebData ConstraintCollection.CollectionChanged Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.CollectionChanged Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.CollectionChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.CollectionChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="constraintCollection.Contains name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b7c25-187">제약 조건의 <see cref="P:System.Data.Constraint.ConstraintName" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-187">The <see cref="P:System.Data.Constraint.ConstraintName" /> of the constraint.</span></span></param>
        <summary><span data-ttu-id="b7c25-188">이름으로 지정된 <see cref="T:System.Data.Constraint" />개체가 컬렉션에 있는지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-188">Indicates whether the <see cref="T:System.Data.Constraint" /> object specified by name exists in the collection.</span></span></summary>
        <returns><span data-ttu-id="b7c25-189">컬렉션에 지정한 제약 조건이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-189"><see langword="true" /> if the collection contains the specified constraint; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7c25-190">사용 합니다 <xref:System.Data.ConstraintCollection.Contains%2A> 결정 하는 방법 여부를 지정 된 <xref:System.Data.Constraint> 컬렉션에서 제거 하기 전에 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-190">Use the <xref:System.Data.ConstraintCollection.Contains%2A> method to determine whether the specified <xref:System.Data.Constraint> exists before trying to remove it from the collection.</span></span> <span data-ttu-id="b7c25-191">사용할 수도 있습니다는 <xref:System.Data.ConstraintCollection.CanRemove%2A> 결정 하는 방법 여부를 <xref:System.Data.Constraint> 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-191">You can also use the <xref:System.Data.ConstraintCollection.CanRemove%2A> method to determine whether a <xref:System.Data.Constraint> can be removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7c25-192">다음 예제에서는 확인 하는지 여부를 지정 된 <xref:System.Data.Constraint> 있는 <xref:System.Data.ConstraintCollection> 해당 삭제 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-192">The following example determines whether the specified <xref:System.Data.Constraint> exists in the <xref:System.Data.ConstraintCollection> before its deletion.</span></span>  
  
 [!code-csharp[Classic WebData ConstraintCollection.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Data.Constraint[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Data.Constraint[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Constraint(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Data::Constraint ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Data.Constraint[] * int -&gt; unit" Usage="constraintCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Data.Constraint[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="b7c25-193">컬렉션에서 복사된 값의 대상인 1차원 <see cref="T:System.Array" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-193">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from the collection.</span></span></param>
        <param name="index"><span data-ttu-id="b7c25-194">삽입을 시작할 배열의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-194">The index of the array at which to start inserting.</span></span></param>
        <summary><span data-ttu-id="b7c25-195">지정한 인덱스에서 시작하는 1차원 <see cref="T:System.Array" /> 인스턴스에 컬렉션 개체를 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-195">Copies the collection objects to a one-dimensional <see cref="T:System.Array" /> instance starting at the specified index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b7c25-196">지정된 <see cref="T:System.Data.Constraint" />의 인덱스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-196">Gets the index of the specified <see cref="T:System.Data.Constraint" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Data.Constraint constraint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Data.Constraint constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Data::Constraint ^ constraint);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Data.Constraint -&gt; int" Usage="constraintCollection.IndexOf constraint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Data.Constraint" />
      </Parameters>
      <Docs>
        <param name="constraint"><span data-ttu-id="b7c25-197">검색할 <see cref="T:System.Data.Constraint" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-197">The <see cref="T:System.Data.Constraint" /> to search for.</span></span></param>
        <summary><span data-ttu-id="b7c25-198">지정된 <see cref="T:System.Data.Constraint" />의 인덱스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-198">Gets the index of the specified <see cref="T:System.Data.Constraint" />.</span></span></summary>
        <returns><span data-ttu-id="b7c25-199">항목이 컬렉션에 있으면 <see cref="T:System.Data.Constraint" />의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-199">The zero-based index of the <see cref="T:System.Data.Constraint" /> if it is in the collection; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7c25-200">사용 하 여 합니다 <xref:System.Data.ConstraintCollection.IndexOf%2A> 메서드를 사용 하 여 사용할 인덱스를 반환 합니다 <xref:System.Data.ConstraintCollection.Contains%2A> 또는 <xref:System.Data.ConstraintCollection.Remove%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b7c25-200">Use the <xref:System.Data.ConstraintCollection.IndexOf%2A> method to return an index to be used with either the <xref:System.Data.ConstraintCollection.Contains%2A> or <xref:System.Data.ConstraintCollection.Remove%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7c25-201">다음 예제에서는 합니다 <xref:System.Data.ConstraintCollection.IndexOf%2A> 의 인덱스를 반환 하는 메서드를 <xref:System.Data.Constraint>입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-201">The following example uses the <xref:System.Data.ConstraintCollection.IndexOf%2A> method to return the index of a <xref:System.Data.Constraint>.</span></span> <span data-ttu-id="b7c25-202">인덱스에 전달 되는 <xref:System.Data.ConstraintCollection.Contains%2A> 메서드를 제거 하기 전에, 컬렉션에 제약 조건이 포함 되는지 여부를 확인 하려면.</span><span class="sxs-lookup"><span data-stu-id="b7c25-202">The index is passed to the <xref:System.Data.ConstraintCollection.Contains%2A> method, before it is removed, to determine whether the collection contains the constraint.</span></span>  
  
 [!code-csharp[Classic WebData ConstraintCollection.IndexOf1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.IndexOf1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.IndexOf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.IndexOf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.ConstraintCollection.Contains(System.String)" />
        <altmember cref="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)" />
        <altmember cref="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string constraintName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string constraintName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.IndexOf(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (constraintName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ constraintName);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : string -&gt; int" Usage="constraintCollection.IndexOf constraintName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraintName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="constraintName"><span data-ttu-id="b7c25-203"><see cref="T:System.Data.Constraint" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-203">The name of the <see cref="T:System.Data.Constraint" />.</span></span></param>
        <summary><span data-ttu-id="b7c25-204">이름으로 지정된 <see cref="T:System.Data.Constraint" />의 인덱스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-204">Gets the index of the <see cref="T:System.Data.Constraint" /> specified by name.</span></span></summary>
        <returns><span data-ttu-id="b7c25-205">인덱스가 컬렉션에 있으면 <see cref="T:System.Data.Constraint" />의 인덱스이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-205">The index of the <see cref="T:System.Data.Constraint" /> if it is in the collection; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7c25-206">사용 하 여 합니다 <xref:System.Data.ConstraintCollection.IndexOf%2A> 메서드를 사용 하 여 사용할 인덱스를 반환 합니다 <xref:System.Data.ConstraintCollection.Contains%2A> 또는 <xref:System.Data.ConstraintCollection.Remove%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b7c25-206">Use the <xref:System.Data.ConstraintCollection.IndexOf%2A> method to return an index to be used with either the <xref:System.Data.ConstraintCollection.Contains%2A> or <xref:System.Data.ConstraintCollection.Remove%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7c25-207">다음 예제에서는 합니다 <xref:System.Data.ConstraintCollection.IndexOf%2A> 의 인덱스를 반환 하는 메서드를 <xref:System.Data.Constraint>입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-207">The following example uses the <xref:System.Data.ConstraintCollection.IndexOf%2A> method to return the index of a <xref:System.Data.Constraint>.</span></span> <span data-ttu-id="b7c25-208">인덱스에 전달 되는 <xref:System.Data.ConstraintCollection.Contains%2A> 메서드를 제거 하기 전에 컬렉션에 제약 조건이 포함 되어 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-208">The index is passed to the <xref:System.Data.ConstraintCollection.Contains%2A> method to determine whether the collection contains the constraint, before removing it.</span></span>  
  
 [!code-csharp[Classic WebData ConstraintCollection.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.ConstraintCollection.Contains(System.String)" />
        <altmember cref="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)" />
        <altmember cref="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b7c25-209">컬렉션에서 지정된 <see cref="T:System.Data.Constraint" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-209">Gets the specified <see cref="T:System.Data.Constraint" /> from the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.Constraint this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Constraint Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.ConstraintCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Constraint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Constraint ^ default[int] { System::Data::Constraint ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Data.Constraint" Usage="System.Data.ConstraintCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="b7c25-210">반환할 제약 조건의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-210">The index of the constraint to return.</span></span></param>
        <summary><span data-ttu-id="b7c25-211">컬렉션에서 지정된 인덱스의 <see cref="T:System.Data.Constraint" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-211">Gets the <see cref="T:System.Data.Constraint" /> from the collection at the specified index.</span></span></summary>
        <value><span data-ttu-id="b7c25-212">지정된 인덱스의 <see cref="T:System.Data.Constraint" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-212">The <see cref="T:System.Data.Constraint" /> at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7c25-213">사용 된 <xref:System.Data.ConstraintCollection.Contains%2A> 특정 제약 조건의 있는지 여부를 테스트 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-213">Use the <xref:System.Data.ConstraintCollection.Contains%2A> method to test for the existence of a specific constraint.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7c25-214">다음 예제에서는 각 <xref:System.Data.Constraint> 에서 <xref:System.Data.ConstraintCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-214">The following example gets each <xref:System.Data.Constraint> from the <xref:System.Data.ConstraintCollection>.</span></span>  
  
 [!code-csharp[Classic WebData ConstraintCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b7c25-215">인덱스 값이 컬렉션의 항목 수보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="b7c25-215">The index value is greater than the number of items in the collection.</span></span></exception>
        <altmember cref="M:System.Data.ConstraintCollection.Contains(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.Constraint this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Constraint Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.ConstraintCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As Constraint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Constraint ^ default[System::String ^] { System::Data::Constraint ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Data.Constraint" Usage="System.Data.ConstraintCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b7c25-216">반환할 제약 조건의 <see cref="P:System.Data.Constraint.ConstraintName" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-216">The <see cref="P:System.Data.Constraint.ConstraintName" /> of the constraint to return.</span></span></param>
        <summary><span data-ttu-id="b7c25-217">컬렉션에서 지정된 이름을 가진 <see cref="T:System.Data.Constraint" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-217">Gets the <see cref="T:System.Data.Constraint" /> from the collection with the specified name.</span></span></summary>
        <value><span data-ttu-id="b7c25-218">지정된 이름을 가진 <see cref="T:System.Data.Constraint" />이고, <see cref="T:System.Data.Constraint" />가 없는 경우 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-218">The <see cref="T:System.Data.Constraint" /> with the specified name; otherwise a null value if the <see cref="T:System.Data.Constraint" /> does not exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7c25-219">사용 된 <xref:System.Data.ConstraintCollection.Contains%2A> 특정 제약 조건의 있는지 여부를 테스트 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-219">Use the <xref:System.Data.ConstraintCollection.Contains%2A> method to test for the existence of a specific constraint.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7c25-220">다음 예제에서는 명명 된 <xref:System.Data.Constraint>합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-220">The following example gets the named <xref:System.Data.Constraint>.</span></span>  
  
 [!code-csharp[Classic WebData ConstraintCollection.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="protected override System.Collections.ArrayList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList List" />
      <MemberSignature Language="DocId" Value="P:System.Data.ConstraintCollection.List" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property List As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::ArrayList ^ List { System::Collections::ArrayList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.List : System.Collections.ArrayList" Usage="System.Data.ConstraintCollection.List" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCollectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCollectionChanged (System.ComponentModel.CollectionChangeEventArgs ccevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCollectionChanged(class System.ComponentModel.CollectionChangeEventArgs ccevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCollectionChanged (ccevent As CollectionChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCollectionChanged(System::ComponentModel::CollectionChangeEventArgs ^ ccevent);" />
      <MemberSignature Language="F#" Value="abstract member OnCollectionChanged : System.ComponentModel.CollectionChangeEventArgs -&gt; unit&#xA;override this.OnCollectionChanged : System.ComponentModel.CollectionChangeEventArgs -&gt; unit" Usage="constraintCollection.OnCollectionChanged ccevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ccevent" Type="System.ComponentModel.CollectionChangeEventArgs" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="ccevent">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b7c25-221"><see cref="T:System.Data.Constraint" />에서 <see cref="T:System.Data.ConstraintCollection" /> 개체를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-221">Removes a <see cref="T:System.Data.Constraint" /> from the <see cref="T:System.Data.ConstraintCollection" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Data.Constraint constraint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Data.Constraint constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Data::Constraint ^ constraint);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Data.Constraint -&gt; unit" Usage="constraintCollection.Remove constraint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Data.Constraint" />
      </Parameters>
      <Docs>
        <param name="constraint"><span data-ttu-id="b7c25-222">제거할 <see cref="T:System.Data.Constraint" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-222">The <see cref="T:System.Data.Constraint" /> to remove.</span></span></param>
        <summary><span data-ttu-id="b7c25-223">지정된 <see cref="T:System.Data.Constraint" />를 컬렉션에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-223">Removes the specified <see cref="T:System.Data.Constraint" /> from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7c25-224">사용 하기 전에 합니다 `Remove` 메서드를 사용할 수는 <xref:System.Data.ConstraintCollection.Contains%2A> 대상 컬렉션에 포함 되어 있는지 확인 하는 방법 <xref:System.Data.Constraint>, 및 <xref:System.Data.ConstraintCollection.CanRemove%2A> 결정 하는 방법 여부를 <xref:System.Data.Constraint> 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-224">Before using the `Remove` method, you can use the <xref:System.Data.ConstraintCollection.Contains%2A> method to determine whether the collection contains the target <xref:System.Data.Constraint>, and the <xref:System.Data.ConstraintCollection.CanRemove%2A> method to determine whether a <xref:System.Data.Constraint> can be removed.</span></span>  
  
 <span data-ttu-id="b7c25-225"><xref:System.Data.ConstraintCollection.CollectionChanged> 제약 조건이 제거 된 경우 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-225">The <xref:System.Data.ConstraintCollection.CollectionChanged> event occurs if the constraint is successfully removed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData ConstraintCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b7c25-226"><paramref name="constraint" /> 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b7c25-226">The <paramref name="constraint" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b7c25-227">제약 조건이 컬렉션에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="b7c25-227">The constraint does not belong to the collection.</span></span></exception>
        <altmember cref="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)" />
        <altmember cref="M:System.Data.ConstraintCollection.Contains(System.String)" />
        <altmember cref="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="constraintCollection.Remove name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b7c25-228">제거할 <see cref="T:System.Data.Constraint" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-228">The name of the <see cref="T:System.Data.Constraint" /> to remove.</span></span></param>
        <summary><span data-ttu-id="b7c25-229">컬렉션에서 이름으로 지정된 <see cref="T:System.Data.Constraint" /> 개체를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-229">Removes the <see cref="T:System.Data.Constraint" /> object specified by name from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7c25-230">사용 하기 전에 합니다 `Remove` 메서드를 사용할 수는 <xref:System.Data.ConstraintCollection.Contains%2A> 대상 컬렉션에 포함 되어 있는지 확인 하는 방법 <xref:System.Data.Constraint>, 및 <xref:System.Data.ConstraintCollection.CanRemove%2A> 결정 하는 방법 여부를 <xref:System.Data.Constraint> 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-230">Before using the `Remove` method, you can use the <xref:System.Data.ConstraintCollection.Contains%2A> method to determine whether the collection contains the target <xref:System.Data.Constraint>, and the <xref:System.Data.ConstraintCollection.CanRemove%2A> method to determine whether a <xref:System.Data.Constraint> can be removed.</span></span>  
  
 <span data-ttu-id="b7c25-231"><xref:System.Data.ConstraintCollection.CollectionChanged> 제약 조건이 제거 된 경우 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-231">The <xref:System.Data.ConstraintCollection.CollectionChanged> event occurs if the constraint is successfully removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7c25-232">다음 예제에서는 제거는 <xref:System.Data.Constraint> 에서 <xref:System.Data.ConstraintCollection> 와 해당 현재 상태에 대 한 테스트 한 후 합니다 <xref:System.Data.ConstraintCollection.Contains%2A> 메서드를 사용 하 여 제거할 수 있는지 여부 및는 <xref:System.Data.ConstraintCollection.CanRemove%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b7c25-232">The following example removes a <xref:System.Data.Constraint> from a <xref:System.Data.ConstraintCollection> after testing for its presence with the <xref:System.Data.ConstraintCollection.Contains%2A> method, and whether it can be removed with the <xref:System.Data.ConstraintCollection.CanRemove%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData ConstraintCollection.Remove1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Remove1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.Remove1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Remove1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)" />
        <altmember cref="M:System.Data.ConstraintCollection.Contains(System.String)" />
        <altmember cref="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="constraintCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="b7c25-233">제거할 <see cref="T:System.Data.Constraint" />의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-233">The index of the <see cref="T:System.Data.Constraint" /> to remove.</span></span></param>
        <summary><span data-ttu-id="b7c25-234">컬렉션에서 지정된 인덱스의 <see cref="T:System.Data.Constraint" /> 개체를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-234">Removes the <see cref="T:System.Data.Constraint" /> object at the specified index from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7c25-235">합니다 <xref:System.Data.ConstraintCollection.IndexOf%2A> 메서드는 특정 인덱스를 반환 합니다. <xref:System.Data.Constraint>합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-235">The <xref:System.Data.ConstraintCollection.IndexOf%2A> method returns the index of a specific <xref:System.Data.Constraint>.</span></span>  
  
 <span data-ttu-id="b7c25-236">사용 하기 전에 합니다 `RemoveAt` 메서드를 사용할 수는 <xref:System.Data.ConstraintCollection.Contains%2A> 대상 컬렉션에 포함 되어 있는지 확인 하는 방법 <xref:System.Data.Constraint>, 및 <xref:System.Data.ConstraintCollection.CanRemove%2A> 결정 하는 방법 여부를 <xref:System.Data.Constraint> 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-236">Before using the `RemoveAt` method, you can use the <xref:System.Data.ConstraintCollection.Contains%2A> method to determine whether the collection contains the target <xref:System.Data.Constraint>, and the <xref:System.Data.ConstraintCollection.CanRemove%2A> method to determine whether a <xref:System.Data.Constraint> can be removed.</span></span>  
  
 <span data-ttu-id="b7c25-237"><xref:System.Data.ConstraintCollection.CollectionChanged> 제약 조건이 제거 된 경우 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b7c25-237">The <xref:System.Data.ConstraintCollection.CollectionChanged> event occurs if the constraint is successfully removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7c25-238">다음 예제에서는 합니다 <xref:System.Data.ConstraintCollection.IndexOf%2A> 함께 메서드를 <xref:System.Data.ConstraintCollection.RemoveAt%2A> 에서 제약 조건을 제거 하는 방법의 <xref:System.Data.ConstraintCollection>.</span><span class="sxs-lookup"><span data-stu-id="b7c25-238">The following example uses the <xref:System.Data.ConstraintCollection.IndexOf%2A> method together with the <xref:System.Data.ConstraintCollection.RemoveAt%2A> method to remove a constraint from the <xref:System.Data.ConstraintCollection>.</span></span>  
  
 [!code-csharp[Classic WebData ConstraintCollection.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b7c25-239">컬렉션에 이 인덱스의 제약 조건이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b7c25-239">The collection does not have a constraint at this index.</span></span></exception>
        <altmember cref="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)" />
        <altmember cref="M:System.Data.ConstraintCollection.Contains(System.String)" />
        <altmember cref="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)" />
      </Docs>
    </Member>
  </Members>
</Type>