<Type Name="DataColumn" FullName="System.Data.DataColumn">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b958ce6822bf70124bf76c4c2b5b5541c6f8b843" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58741453" /></Metadata><TypeSignature Language="C#" Value="public class DataColumn : System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataColumn extends System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class DataColumn&#xA;Inherits MarshalByValueComponent" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataColumn : System::ComponentModel::MarshalByValueComponent" />
  <TypeSignature Language="F#" Value="type DataColumn = class&#xA;    inherit MarshalByValueComponent" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MarshalByValueComponent</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.ComponentModel.DefaultProperty("ColumnName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b290a-101"><see cref="T:System.Data.DataTable" />에 있는 열의 스키마를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-101">Represents the schema of a column in a <see cref="T:System.Data.DataTable" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b290a-102">합니다 <xref:System.Data.DataColumn> 의 스키마를 만들기 위한 기본적인 빌딩 블록을 <xref:System.Data.DataTable>입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-102">The <xref:System.Data.DataColumn> is the fundamental building block for creating the schema of a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="b290a-103">하나 이상의 추가 하 여 스키마를 빌드하면 <xref:System.Data.DataColumn> 개체는 <xref:System.Data.DataColumnCollection>.</span><span class="sxs-lookup"><span data-stu-id="b290a-103">You build the schema by adding one or more <xref:System.Data.DataColumn> objects to the <xref:System.Data.DataColumnCollection>.</span></span> <span data-ttu-id="b290a-104">자세한 내용은 [DataTable에 열 추가](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-104">For more information, see [Adding Columns to a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md).</span></span>  
  
 <span data-ttu-id="b290a-105">각 <xref:System.Data.DataColumn> 에 <xref:System.Data.DataColumn.DataType%2A> 데이터의 종류를 결정 하는 속성을 <xref:System.Data.DataColumn> 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-105">Each <xref:System.Data.DataColumn> has a <xref:System.Data.DataColumn.DataType%2A> property that determines the kind of data the <xref:System.Data.DataColumn> contains.</span></span> <span data-ttu-id="b290a-106">예를 들어 데이터 형식을 문자열, 정수 또는 10 진수를 제한할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-106">For example, you can restrict the data type to integers, or strings, or decimals.</span></span> <span data-ttu-id="b290a-107">때문에 포함 된 데이터는 <xref:System.Data.DataTable> 일반적으로 병합 됩니다 해당 데이터 원본에 다시 데이터 원본에서 데이터 형식이 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-107">Because data that is contained by the <xref:System.Data.DataTable> is typically merged back into its original data source, you must match the data types to those in the data source.</span></span> <span data-ttu-id="b290a-108">자세한 내용은 [ADO.NET의 데이터 형식 매핑을](~/docs/framework/data/adonet/data-type-mappings-in-ado-net.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-108">For more information, see [Data Type Mappings in ADO.NET](~/docs/framework/data/adonet/data-type-mappings-in-ado-net.md).</span></span>  
  
 <span data-ttu-id="b290a-109">와 같은 속성 <xref:System.Data.DataColumn.AllowDBNull%2A>, <xref:System.Data.DataColumn.Unique%2A>, 및 <xref:System.Data.DataColumn.ReadOnly%2A> 항목 및 데이터 무결성을 보장 하도록 함으로써 이러한 데이터의 업데이트에 대 한 제한 배치 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-109">Properties such as <xref:System.Data.DataColumn.AllowDBNull%2A>, <xref:System.Data.DataColumn.Unique%2A>, and <xref:System.Data.DataColumn.ReadOnly%2A> put restrictions on the entry and updating of data, thereby helping to guarantee data integrity.</span></span> <span data-ttu-id="b290a-110">사용할 수도 있습니다는 <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, 및 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 자동 데이터 생성을 제어 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-110">You can also use the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties to control automatic data generation.</span></span> <span data-ttu-id="b290a-111">에 대 한 자세한 내용은 <xref:System.Data.DataColumn.AutoIncrement%2A> 열을 참조 하세요 [AutoIncrement 열 만들기](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-111">For more information about <xref:System.Data.DataColumn.AutoIncrement%2A> columns, see [Creating AutoIncrement Columns](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md).</span></span> <span data-ttu-id="b290a-112">자세한 내용은 [기본 키 정의](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-112">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="b290a-113">있는지 확인할 수 있습니다도 하는 값을 <xref:System.Data.DataColumn> 만들어 고유 됩니다는 <xref:System.Data.UniqueConstraint> 에 추가 하는 <xref:System.Data.ConstraintCollection> 의 <xref:System.Data.DataTable> 는 <xref:System.Data.DataColumn> 속한.</span><span class="sxs-lookup"><span data-stu-id="b290a-113">You can also make sure that values in a <xref:System.Data.DataColumn> are unique by creating a <xref:System.Data.UniqueConstraint> and adding it to the <xref:System.Data.ConstraintCollection> of the <xref:System.Data.DataTable> to which the <xref:System.Data.DataColumn> belongs.</span></span> <span data-ttu-id="b290a-114">자세한 내용은 [DataTable 제약 조건](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-114">For more information, see [DataTable Constraints](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).</span></span>  
  
 <span data-ttu-id="b290a-115">간의 관계를 만들려면 <xref:System.Data.DataColumn> 개체를 만듭니다를 <xref:System.Data.DataRelation> 개체에 추가 하는 <xref:System.Data.DataRelationCollection> 의 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-115">To create a relation between <xref:System.Data.DataColumn> objects, create a <xref:System.Data.DataRelation> object and add it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="b290a-116">사용할 수는 <xref:System.Data.DataColumn.Expression%2A> 의 속성을 <xref:System.Data.DataColumn> 집계 열을 만들거나 열에서 값을 계산 하려면 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-116">You can use the <xref:System.Data.DataColumn.Expression%2A> property of the <xref:System.Data.DataColumn> object to calculate the values in a column, or create an aggregate column.</span></span> <span data-ttu-id="b290a-117">자세한 내용은 [식 열 만들기](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-expression-columns.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-117">For more information, see [Creating Expression Columns](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-expression-columns.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b290a-118">다음 예제는 <xref:System.Data.DataTable> 여러 <xref:System.Data.DataColumn> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-118">The following example creates a <xref:System.Data.DataTable> with several <xref:System.Data.DataColumn> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="b290a-119">이 유형은 다중 스레드 읽기 작업에 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-119">This type is safe for multithreaded read operations.</span></span> <span data-ttu-id="b290a-120">모든 쓰기 작업을 동기화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-120">You must synchronize any write operations.</span></span></threadsafe>
    <altmember cref="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)" />
    <altmember cref="T:System.Data.DataColumnCollection" />
    <altmember cref="P:System.Data.DataTable.Constraints" />
    <altmember cref="T:System.Data.ConstraintCollection" />
    <altmember cref="T:System.Windows.Forms.DataGrid" />
    <altmember cref="T:System.Data.DataRow" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="T:System.Data.DataSet" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
    <altmember cref="T:System.Data.DataRowCollection" />
    <altmember cref="T:System.Data.UniqueConstraint" />
    <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="b290a-121">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="b290a-121">Using DataSets in ADO.NET</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b290a-122"><see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-122">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b290a-123"><see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 형식 문자열로 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-123">Initializes a new instance of a <see cref="T:System.Data.DataColumn" /> class as type string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b290a-124">를 만들면를 <xref:System.Data.DataColumn> 개체에 기본값이 없습니다 <xref:System.Data.DataColumn.ColumnName%2A> 또는 <xref:System.Data.DataColumn.Caption%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-124">When created, a <xref:System.Data.DataColumn> object has no default <xref:System.Data.DataColumn.ColumnName%2A> or <xref:System.Data.DataColumn.Caption%2A>.</span></span> <span data-ttu-id="b290a-125">에 추가 하는 경우는 <xref:System.Data.DataColumnCollection>를 이름을 할당 하지 않은 경우 ("Column1", "Column2" 등)는 기본 이름이 생성 됩니다는 <xref:System.Data.DataColumn.ColumnName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-125">When you add it to a <xref:System.Data.DataColumnCollection>, a default name ("Column1", "Column2", and so on) will be generated if a name has not been assigned to the <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b290a-126">다음 예제에서는 새 <xref:System.Data.DataColumn>, 다양 한 속성을 설정 하 고 추가 된 <xref:System.Data.DataColumnCollection> 에 대 한는 <xref:System.Data.DataTable> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-126">The following example creates a new <xref:System.Data.DataColumn>, sets various properties, and adds it to a <xref:System.Data.DataColumnCollection> for the <xref:System.Data.DataTable> object.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="b290a-127">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="b290a-127">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn columnName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="b290a-128">만들 열의 이름을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-128">A string that represents the name of the column to be created.</span></span> <span data-ttu-id="b290a-129">이 속성 값이 <see langword="null" /> 또는 빈 문자열("")로 설정되면 열 컬렉션에 추가될 때 기본 이름이 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-129">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span></span></param>
        <summary><span data-ttu-id="b290a-130">지정된 열 이름을 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 형식 문자열로 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-130">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class, as type string, using the specified column name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b290a-131">기본적으로 열에 특정 이름이 됩니다는 <xref:System.Data.DataColumn.Caption%2A> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-131">By default, the name specific to a column becomes the <xref:System.Data.DataColumn.Caption%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b290a-132">다음 예제에서는 새 <xref:System.Data.DataColumn> 지정 된 <xref:System.Data.DataColumn.ColumnName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-132">The following example creates a new <xref:System.Data.DataColumn> with a specified <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="b290a-133">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="b290a-133">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, dataType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string * Type -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn (columnName, dataType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="b290a-134">만들 열의 이름을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-134">A string that represents the name of the column to be created.</span></span> <span data-ttu-id="b290a-135">이 속성 값이 <see langword="null" /> 또는 빈 문자열("")로 설정되면 열 컬렉션에 추가될 때 기본 이름이 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-135">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span></span></param>
        <param name="dataType"><span data-ttu-id="b290a-136">지원되는 <see cref="P:System.Data.DataColumn.DataType" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-136">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span></span></param>
        <summary><span data-ttu-id="b290a-137">지정된 열 이름과 데이터 형식을 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-137">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified column name and data type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b290a-138">다음 예제에서는 새 <xref:System.Data.DataColumn> 지정 된 <xref:System.Data.DataColumn.ColumnName%2A> 고 <xref:System.Data.DataColumn.DataType%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-138">The following example creates a new <xref:System.Data.DataColumn> with a specified <xref:System.Data.DataColumn.ColumnName%2A> and <xref:System.Data.DataColumn.DataType%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b290a-139"><paramref name="dataType" />이 지정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="b290a-139">No <paramref name="dataType" /> was specified.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="b290a-140">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="b290a-140">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType, string expr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType, string expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, dataType As Type, expr As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType, System::String ^ expr);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string * Type * string -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn (columnName, dataType, expr)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="expr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="b290a-141">만들 열의 이름을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-141">A string that represents the name of the column to be created.</span></span> <span data-ttu-id="b290a-142">이 속성 값이 <see langword="null" /> 또는 빈 문자열("")로 설정되면 열 컬렉션에 추가될 때 기본 이름이 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-142">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span></span></param>
        <param name="dataType"><span data-ttu-id="b290a-143">지원되는 <see cref="P:System.Data.DataColumn.DataType" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-143">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span></span></param>
        <param name="expr"><span data-ttu-id="b290a-144">이 열을 만드는 데 사용되는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-144">The expression used to create this column.</span></span> <span data-ttu-id="b290a-145">자세한 내용은 <see cref="P:System.Data.DataColumn.Expression" /> 속성을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="b290a-145">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span></span></param>
        <summary><span data-ttu-id="b290a-146">지정된 이름, 데이터 형식 및 식을 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-146">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, and expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b290a-147">다음 예제에서는 계산된 열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-147">The following example creates a computed column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b290a-148"><paramref name="dataType" />이 지정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="b290a-148">No <paramref name="dataType" /> was specified.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="b290a-149">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="b290a-149">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType, string expr, System.Data.MappingType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType, string expr, valuetype System.Data.MappingType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType, System::String ^ expr, System::Data::MappingType type);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string * Type * string * System.Data.MappingType -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn (columnName, dataType, expr, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="expr" Type="System.String" />
        <Parameter Name="type" Type="System.Data.MappingType" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="b290a-150">만들 열의 이름을 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-150">A string that represents the name of the column to be created.</span></span> <span data-ttu-id="b290a-151">이 속성 값이 <see langword="null" /> 또는 빈 문자열("")로 설정되면 열 컬렉션에 추가될 때 기본 이름이 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-151">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span></span></param>
        <param name="dataType"><span data-ttu-id="b290a-152">지원되는 <see cref="P:System.Data.DataColumn.DataType" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-152">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span></span></param>
        <param name="expr"><span data-ttu-id="b290a-153">이 열을 만드는 데 사용되는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-153">The expression used to create this column.</span></span> <span data-ttu-id="b290a-154">자세한 내용은 <see cref="P:System.Data.DataColumn.Expression" /> 속성을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="b290a-154">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span></span></param>
        <param name="type"><span data-ttu-id="b290a-155"><see cref="T:System.Data.MappingType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-155">One of the <see cref="T:System.Data.MappingType" /> values.</span></span></param>
        <summary><span data-ttu-id="b290a-156">열이 특성 열인지 여부를 결정하는 값, 지정된 이름, 데이터 형식 및 식을 사용하여 <see cref="T:System.Data.DataColumn" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-156">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, expression, and value that determines whether the column is an attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b290a-157">합니다 `type` 인수 집합을 <xref:System.Data.DataColumn.ColumnMapping%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-157">The `type` argument sets the <xref:System.Data.DataColumn.ColumnMapping%2A> property.</span></span> <span data-ttu-id="b290a-158">속성은 지정 하는 방법을 <xref:System.Data.DataColumn> 때 매핑되는 <xref:System.Data.DataSet> XML 문서로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-158">The property specifies how a <xref:System.Data.DataColumn> is mapped when a <xref:System.Data.DataSet> is transformed into an XML document.</span></span> <span data-ttu-id="b290a-159">예를 들어 열 이름이 "fName"이 고 포함 된 값이 "Bob" 및 `type` 로 설정 된 `MappingType.Attribute`, XML 요소는 다음과 같을 수:</span><span class="sxs-lookup"><span data-stu-id="b290a-159">For example, if the column is named "fName," and the value it contains is "Bob," and `type` is set to `MappingType.Attribute`, the XML element would be as follows:</span></span>  
  
 <span data-ttu-id="b290a-160">\<Name fName = 'Bob'/></span><span class="sxs-lookup"><span data-stu-id="b290a-160">\<Name fName = 'Bob'/></span></span>  
  
 <span data-ttu-id="b290a-161">열 요소 또는 특성에 매핑되는 방법에 대 한 자세한 내용은 참조는 <xref:System.Data.DataColumn.ColumnMapping%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-161">For more information about how columns are mapped to elements or attributes, see the <xref:System.Data.DataColumn.ColumnMapping%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b290a-162">다음 예제에서는 계산된 열을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-162">The following example constructs a computed column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b290a-163"><paramref name="dataType" />이 지정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="b290a-163">No <paramref name="dataType" /> was specified.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.ColumnMapping" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="b290a-164">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="b290a-164">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AllowDBNull">
      <MemberSignature Language="C#" Value="public bool AllowDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AllowDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDBNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDBNull : bool with get, set" Usage="System.Data.DataColumn.AllowDBNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnAllowNullDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b290a-165">테이블에 속해 있는 행의 이 열에 null 값이 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-165">Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.</span></span></summary>
        <value><span data-ttu-id="b290a-166"><see langword="true" /> null 값이 허용 됩니다. 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-166"><see langword="true" /> if null values are allowed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b290a-167">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-167">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b290a-168">다음 예제에서는 새 <xref:System.Data.DataColumn> 설정 및 해당 <xref:System.Data.DataColumn.AllowDBNull%2A> 속성을 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-168">The following example creates a new <xref:System.Data.DataColumn> and sets its <xref:System.Data.DataColumn.AllowDBNull%2A> property to `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AllowDBNull Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AllowDBNull Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AllowDBNull Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AllowDBNull Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Unique" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="b290a-169">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="b290a-169">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AutoIncrement">
      <MemberSignature Language="C#" Value="public bool AutoIncrement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoIncrement" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrement" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoIncrement { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoIncrement : bool with get, set" Usage="System.Data.DataColumn.AutoIncrement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnAutoIncrementDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b290a-170">테이블에 추가되는 새 행의 열 값이 자동으로 증가되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-170">Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.</span></span></summary>
        <value><span data-ttu-id="b290a-171">열 값이 자동으로 증가되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-171"><see langword="true" /> if the value of the column increments automatically; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b290a-172">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-172">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b290a-173">이 열의 형식을 Int16, Int32 또는 Int64 때 없으면이 속성을 설정 합니다 <xref:System.Data.DataColumn.DataType%2A> Int32 속성은 문자열로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-173">If the type of this column is not Int16, Int32, or Int64 when this property is set, the <xref:System.Data.DataColumn.DataType%2A> property is coerced to Int32.</span></span> <span data-ttu-id="b290a-174">계산된 열이 있으면 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-174">An exception is generated if this is a computed column.</span></span> <span data-ttu-id="b290a-175"><xref:System.Data.DataColumn.Expression%2A> 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-175">The <xref:System.Data.DataColumn.Expression%2A> property is set.</span></span> <span data-ttu-id="b290a-176">증가 된 값을 열 컬렉션에 추가 하는 경우이 열에 대 한 행의 값은 기본값을 사용 하는 경우에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-176">The incremented value is used only if the row's value for this column, when added to the columns collection, is equal to the default value.</span></span>  
  
 <span data-ttu-id="b290a-177">사용 하 여 새 행을 만들 수 있습니다 합니다 <xref:System.Data.DataRow.ItemArray%2A> 의 속성을 <xref:System.Data.DataRow> 클래스 및 값의 배열을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-177">You can create a new row using the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class and passing in an array of values.</span></span> <span data-ttu-id="b290a-178">이 지정 된 열에 대 한 잠재적인 문제를 해당 <xref:System.Data.DataColumn.AutoIncrement%2A> 로 `true`이므로 해당 값이 자동으로 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-178">This is a potential problem for a column with its <xref:System.Data.DataColumn.AutoIncrement%2A> set to `true`, because its value is generated automatically.</span></span> <span data-ttu-id="b290a-179">사용 하는 <xref:System.Data.DataRow.ItemArray%2A> 속성을 현재 위치 `null` 배열에 있는 열의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-179">To use the <xref:System.Data.DataRow.ItemArray%2A> property, place `null` in the column's position in the array.</span></span> <span data-ttu-id="b290a-180">자세한 내용은 참조 하세요. 합니다 <xref:System.Data.DataRow.ItemArray%2A> 의 속성을 <xref:System.Data.DataRow> 클래스.</span><span class="sxs-lookup"><span data-stu-id="b290a-180">For more information, see the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class.</span></span>  
  
 <span data-ttu-id="b290a-181">열 형식이 <xref:System.Data.SqlTypes.SqlInt16> 나 <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.DataColumn.AutoIncrement%2A> 작동 하지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-181">If the type of the column is <xref:System.Data.SqlTypes.SqlInt16> or <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.DataColumn.AutoIncrement%2A> will not work.</span></span> <span data-ttu-id="b290a-182">Int16 또는 Int32를 대신 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-182">Use Int16 or Int32 instead.</span></span>  
  
 <span data-ttu-id="b290a-183">열 형식이 <xref:System.Data.SqlTypes.SqlInt64> 나 <xref:System.Data.SqlTypes.SqlDecimal>, <xref:System.Data.DataColumn.AutoIncrement%2A> 부분적 으로만 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-183">If the type of the column is <xref:System.Data.SqlTypes.SqlInt64> or <xref:System.Data.SqlTypes.SqlDecimal>, <xref:System.Data.DataColumn.AutoIncrement%2A> will only partially work.</span></span> <span data-ttu-id="b290a-184">Int64 또는 10 진수를 대신 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-184">Use Int64 or Decimal instead.</span></span>  
  
 <span data-ttu-id="b290a-185">경우는 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 값 오버플로 검사 하는 표시 되지 않습니다. 현재 값에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-185">When the <xref:System.Data.DataColumn.AutoIncrementStep%2A> value is added to the current value, the overflow check is suppressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b290a-186">다음 예제에서는 합니다 <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, 및 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-186">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b290a-187">열이 계산 열인 경우</span><span class="sxs-lookup"><span data-stu-id="b290a-187">The column is a computed column.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.AutoIncrementSeed" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementStep" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="b290a-188">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="b290a-188">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AutoIncrementSeed">
      <MemberSignature Language="C#" Value="public long AutoIncrementSeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AutoIncrementSeed" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrementSeed" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrementSeed As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long AutoIncrementSeed { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.AutoIncrementSeed : int64 with get, set" Usage="System.Data.DataColumn.AutoIncrementSeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnAutoIncrementSeedDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b290a-189"><see cref="P:System.Data.DataColumn.AutoIncrement" /> 속성이 <see langword="true" />로 설정된 열의 시작 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-189">Gets or sets the starting value for a column that has its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span></span> <span data-ttu-id="b290a-190">기본값은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-190">The default is 0.</span></span></summary>
        <value><span data-ttu-id="b290a-191"><see cref="P:System.Data.DataColumn.AutoIncrement" />의 시작 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-191">The starting value for the <see cref="P:System.Data.DataColumn.AutoIncrement" /> feature.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b290a-192">다음 예제에서는 합니다 <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, 및 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-192">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementStep" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="b290a-193">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="b290a-193">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AutoIncrementStep">
      <MemberSignature Language="C#" Value="public long AutoIncrementStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AutoIncrementStep" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrementStep" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrementStep As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long AutoIncrementStep { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.AutoIncrementStep : int64 with get, set" Usage="System.Data.DataColumn.AutoIncrementStep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnAutoIncrementStepDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b290a-194"><see cref="P:System.Data.DataColumn.AutoIncrement" /> 속성이 <see langword="true" />로 설정된 열에 사용되는 증분을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-194">Gets or sets the increment used by a column with its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="b290a-195">열 값이 자동으로 증가되는 정도를 나타내는 숫자입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-195">The number by which the value of the column is automatically incremented.</span></span> <span data-ttu-id="b290a-196">기본값은 1입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-196">The default is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b290a-197">다음 예제에서는 합니다 <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, 및 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-197">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b290a-198">설정된 값이 0인 경우</span><span class="sxs-lookup"><span data-stu-id="b290a-198">The value set is zero.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementSeed" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="b290a-199">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="b290a-199">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string with get, set" Usage="System.Data.DataColumn.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnCaptionDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b290a-200">열의 캡션을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-200">Gets or sets the caption for the column.</span></span></summary>
        <value><span data-ttu-id="b290a-201">열의 캡션입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-201">The caption of the column.</span></span> <span data-ttu-id="b290a-202">설정하지 않은 경우 <see cref="P:System.Data.DataColumn.ColumnName" /> 값이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-202">If not set, returns the <see cref="P:System.Data.DataColumn.ColumnName" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b290a-203">사용할 수는 <xref:System.Data.DataColumn.Caption%2A> 속성에 대 한 설명 또는 친숙 한 이름을 표시 하는 <xref:System.Data.DataColumn>합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-203">You can use the <xref:System.Data.DataColumn.Caption%2A> property to display a descriptive or friendly name for a <xref:System.Data.DataColumn>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b290a-204">다음 예제에서는 새 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-204">The following example creates a new <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="b290a-205">그런 다음 세 가지 추가 <xref:System.Data.DataColumn> 개체를 <xref:System.Data.DataColumnCollection> 설정 합니다 <xref:System.Data.DataColumn.Caption%2A> 각 속성이 <xref:System.Data.DataColumn>합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-205">It then adds three <xref:System.Data.DataColumn> objects to a <xref:System.Data.DataColumnCollection> and sets the <xref:System.Data.DataColumn.Caption%2A> property for each <xref:System.Data.DataColumn>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Caption Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Caption Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Caption Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Caption Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="b290a-206">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="b290a-206">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CheckNotAllowNull">
      <MemberSignature Language="C#" Value="protected internal void CheckNotAllowNull ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void CheckNotAllowNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.CheckNotAllowNull" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub CheckNotAllowNull ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void CheckNotAllowNull();" />
      <MemberSignature Language="F#" Value="member this.CheckNotAllowNull : unit -&gt; unit" Usage="dataColumn.CheckNotAllowNull " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b290a-207">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-207">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckUnique">
      <MemberSignature Language="C#" Value="protected void CheckUnique ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckUnique() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.CheckUnique" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CheckUnique ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CheckUnique();" />
      <MemberSignature Language="F#" Value="member this.CheckUnique : unit -&gt; unit" Usage="dataColumn.CheckUnique " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b290a-208">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-208">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnMapping">
      <MemberSignature Language="C#" Value="public virtual System.Data.MappingType ColumnMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MappingType ColumnMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ColumnMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ColumnMapping As MappingType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::MappingType ColumnMapping { System::Data::MappingType get(); void set(System::Data::MappingType value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnMapping : System.Data.MappingType with get, set" Usage="System.Data.DataColumn.ColumnMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnMappingDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.MappingType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b290a-209">열의 <see cref="T:System.Data.MappingType" />을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-209">Gets or sets the <see cref="T:System.Data.MappingType" /> of the column.</span></span></summary>
        <value><span data-ttu-id="b290a-210"><see cref="T:System.Data.MappingType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-210">One of the <see cref="T:System.Data.MappingType" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b290a-211"><xref:System.Data.DataColumn.ColumnMapping%2A> 속성에 따라 결정 하는 방법을 <xref:System.Data.DataColumn> 때 매핑되는 <xref:System.Data.DataSet> 사용 하 여 XML 문서를 저장할는 <xref:System.Data.DataSet.WriteXml%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b290a-211">The <xref:System.Data.DataColumn.ColumnMapping%2A> property determines how a <xref:System.Data.DataColumn> is mapped when a <xref:System.Data.DataSet> is saved as an XML document using the <xref:System.Data.DataSet.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="b290a-212">예를 들어 경우는 <xref:System.Data.DataColumn> "customerID" 라는 및 해당 <xref:System.Data.DataColumn.ColumnMapping%2A> 속성이 `MappingType.Element`, 열 값을 다음 XML이 생성 됩니다:</span><span class="sxs-lookup"><span data-stu-id="b290a-212">For example, if a <xref:System.Data.DataColumn> is named "customerID," and its <xref:System.Data.DataColumn.ColumnMapping%2A> property is set to `MappingType.Element`, the column value will produce the following XML:</span></span>  
  
```  
<Customers>  
 <customerID>ALFKI</customerID>  
......  
 </Customers>  
 <Orders>  
 <OrderID>12345</OrderID>  
 <customerID>ALFKI</customerID>  
......  
 </Orders>  
```  
  
 <span data-ttu-id="b290a-213">그러나 동일한 열에 매핑된 경우 `MappingType.Attribute`, 다음 XML이 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-213">However, if the same column is mapped to `MappingType.Attribute`, the following XML is produced:</span></span>  
  
```  
<Customers customerID="ALFKI"........more attributes.....>  
 <Order orderID="1234"....more attributes..../>  
 <Order orderID="1234"....more attributes..../>  
...... More orders for this customer  
 </Customers>  
```  
  
 <span data-ttu-id="b290a-214">사용 하 여를 <xref:System.Data.DataColumn.%23ctor%2A> 포함 하는 생성자를 `type` 인수를 지정 하는 방법을 <xref:System.Data.DataColumn> 매핑된 경우 해당 <xref:System.Data.DataSet> XML 문서로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-214">Use the <xref:System.Data.DataColumn.%23ctor%2A> constructor that contains the `type` argument to specify how the <xref:System.Data.DataColumn> is mapped when its <xref:System.Data.DataSet> is transformed to an XML document.</span></span>  
  
 <span data-ttu-id="b290a-215">합니다 <xref:System.Data.DataColumn.ColumnMapping%2A> 속성은 생성자 인수에 해당 `type`합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-215">The <xref:System.Data.DataColumn.ColumnMapping%2A> property corresponds to the constructor argument `type`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b290a-216">다음 예제에서는 합니다 <xref:System.Data.DataColumn.ColumnMapping%2A> 의 속성을 새 입력 <xref:System.Data.DataColumn>합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-216">The following example sets the <xref:System.Data.DataColumn.ColumnMapping%2A> type property of new <xref:System.Data.DataColumn>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ColumnMapping Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnMapping Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ColumnMapping Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnMapping Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="b290a-217">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="b290a-217">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ColumnName">
      <MemberSignature Language="C#" Value="public string ColumnName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ColumnName" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ColumnName" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ColumnName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnName : string with get, set" Usage="System.Data.DataColumn.ColumnName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnColumnNameDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b290a-218"><see cref="T:System.Data.DataColumnCollection" />의 열 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-218">Gets or sets the name of the column in the <see cref="T:System.Data.DataColumnCollection" />.</span></span></summary>
        <value><span data-ttu-id="b290a-219">열 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-219">The name of the column.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b290a-220">경우는 <xref:System.Data.DataColumn> 은 no가 만들어지면 <xref:System.Data.DataColumn.ColumnName%2A> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-220">When a <xref:System.Data.DataColumn> is created, it has no <xref:System.Data.DataColumn.ColumnName%2A> value.</span></span> <span data-ttu-id="b290a-221">그러나 경우는 <xref:System.Data.DataColumn> 에 추가 됩니다을 <xref:System.Data.DataColumnCollection> 에 대 한는 <xref:System.Data.DataTable> 개체 ("Column1", "Column2" 등)는 기본 이름이 지정 되 고 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-221">However, when the <xref:System.Data.DataColumn> is added to a <xref:System.Data.DataColumnCollection> for a <xref:System.Data.DataTable> object, it is given a default name ("Column1", "Column2", and so on).</span></span>  
  
 <span data-ttu-id="b290a-222">기본적으로 <xref:System.Data.DataColumn.Caption%2A> 값으로 설정 됩니다는 <xref:System.Data.DataColumn.ColumnName%2A> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-222">By default, the <xref:System.Data.DataColumn.Caption%2A> value is set to the <xref:System.Data.DataColumn.ColumnName%2A> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b290a-223">다음 예제에서는 가져옵니다 합니다 <xref:System.Data.DataColumn.ColumnName%2A> 모든 테이블에 있는 모든 열에 대 한는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-223">The following examples gets the <xref:System.Data.DataColumn.ColumnName%2A> for every column in every table in a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="b290a-224">또한이 예에서는 만드는 방법을 <xref:System.Data.DataColumn> 새 <xref:System.Data.DataColumn.ColumnName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-224">The example also shows how to create a <xref:System.Data.DataColumn> with a new <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ColumnName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ColumnName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b290a-225">속성이 <see langword="null" /> 또는 빈 문자열로 설정되어 있고 열이 컬렉션에 속한 경우</span><span class="sxs-lookup"><span data-stu-id="b290a-225">The property is set to <see langword="null" /> or an empty string and the column belongs to a collection.</span></span></exception>
        <exception cref="T:System.Data.DuplicateNameException"><span data-ttu-id="b290a-226">이름이 같은 열이 컬렉션에 이미 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="b290a-226">A column with the same name already exists in the collection.</span></span> <span data-ttu-id="b290a-227">대/소문자를 구분하지 않고 이름을 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-227">The name comparison is not case sensitive.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="b290a-228">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="b290a-228">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public Type DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DataType" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DataType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : Type with get, set" Usage="System.Data.DataColumn.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.ColumnTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnDataTypeDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b290a-229">열에 저장된 데이터 형식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-229">Gets or sets the type of data stored in the column.</span></span></summary>
        <value><span data-ttu-id="b290a-230">열 데이터 형식을 나타내는 <see cref="T:System.Type" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-230">A <see cref="T:System.Type" /> object that represents the column data type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b290a-231">설정 된 <xref:System.Data.DataColumn.DataType%2A> 값이 올바른 생성을 보장 하 고 데이터 원본에서 데이터의 업데이트에 매우 중요 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-231">Setting the <xref:System.Data.DataColumn.DataType%2A> value is very important to guaranteeing the correct creation and updating of data in a data source.</span></span>  
  
 <span data-ttu-id="b290a-232"><xref:System.Data.DataColumn.DataType%2A> 속성은 다음 기본.NET Framework 데이터 형식 지원:</span><span class="sxs-lookup"><span data-stu-id="b290a-232">The <xref:System.Data.DataColumn.DataType%2A> property supports the following base .NET Framework data types:</span></span>  
  
-   <xref:System.Boolean>  
  
-   <xref:System.Byte>  
  
-   <xref:System.Char>  
  
-   <xref:System.DateTime>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Double>  
  
-   <xref:System.Guid>  
  
-   <xref:System.Int16>  
  
-   <xref:System.Int32>  
  
-   <xref:System.Int64>  
  
-   <xref:System.SByte>  
  
-   <xref:System.Single>  
  
-   <xref:System.String>  
  
-   <xref:System.TimeSpan>  
  
-   <xref:System.UInt16>  
  
-   <xref:System.UInt32>  
  
-   <xref:System.UInt64>  
  
 <span data-ttu-id="b290a-233">다음 배열 형식을:</span><span class="sxs-lookup"><span data-stu-id="b290a-233">as well as the following array type:</span></span>  
  
-   `Byte[]`  
  
 <span data-ttu-id="b290a-234">데이터를 저장 하기 시작 된 열 뒤에이 속성을 변경 하는 경우 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-234">An exception is generated when changing this property after the column has begun storing data.</span></span>  
  
 <span data-ttu-id="b290a-235">하는 경우 <xref:System.Data.DataColumn.AutoIncrement%2A> 로 설정 된 `true` 설정 하기 전에 <xref:System.Data.DataColumn.DataType%2A> 속성 설정 하려고 한 형식을 정수 형식 외에, 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-235">If <xref:System.Data.DataColumn.AutoIncrement%2A> is set to `true` before setting the <xref:System.Data.DataColumn.DataType%2A> property, and you try to set the type to anything except an integer type, an exception is generated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b290a-236">데이터 형식의 열 `Byte[]` 이므로, 기본.NET Framework 데이터 형식과 달리, 참조 데이터 형식의 특정 사례에서 특수 처리가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-236">A column of data type `Byte[]` requires special treatment in certain cases since, unlike the base .NET Framework data types, it is a reference data type.</span></span> <span data-ttu-id="b290a-237">데이터 형식의 열 `Byte[]` 로 사용 되는 <xref:System.Data.DataTable.PrimaryKey%2A>, 또는 <xref:System.Data.DataView.Sort%2A> 또는 <xref:System.Data.DataView.RowFilter%2A> 키를 <xref:System.Data.DataView>, 할당 열 값을 변경 해야는 `Byte[]` 열 값을 개별적으로 인스턴스화된 `Byte[]` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-237">If a column of data type `Byte[]` is used as a <xref:System.Data.DataTable.PrimaryKey%2A>, or as a <xref:System.Data.DataView.Sort%2A> or <xref:System.Data.DataView.RowFilter%2A> key for a <xref:System.Data.DataView>, any change to the column value must involve assigning the `Byte[]` column value to a separately instantiated `Byte[]` object.</span></span> <span data-ttu-id="b290a-238">이 할당은 정렬, 필터링 및 기본 키 작업에 의해 사용 되는 내부 인덱스의 업데이트를 트리거하도록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-238">This assignment is required to trigger the update of the internal indexes used by sorting, filtering, and primary key operations.</span></span> <span data-ttu-id="b290a-239">다음 예제에서 이를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-239">This is illustrated by the following example:</span></span>  
  
```csharp  
byte[] columnValue = (byte[])myDataTable.Rows[0][0];  
byte[] newValue = (byte[])columnValue.Clone();  
newValue[1] = 2;  
myDataTable.Rows[0][0] = newValue;  
```  
  
> [!NOTE]
>  <span data-ttu-id="b290a-240">기본.NET Framework 데이터 형식 이외의 데이터 형식으로 열을 정의 하는 것이 가능 하지만 및 `Byte[]`, 이러한 열을 다음 사용 제한에 따라 사용자 정의 형식으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-240">Although it is possible to define a column as data type other than the base .NET Framework data types and `Byte[]`, such a column will be treated as a user-defined type, subject to the following usage restrictions.</span></span> <span data-ttu-id="b290a-241">(사용자 정의 형식에 대 한 자세한 내용은 참조 하세요. [만들기 및 사용자 형식](https://msdn.microsoft.com/library/ec0266d2-7e5b-47e4-938a-85ac9d04fa40).)</span><span class="sxs-lookup"><span data-stu-id="b290a-241">(For more information on user-defined types, see [Creating and Using User-Defined Types](https://msdn.microsoft.com/library/ec0266d2-7e5b-47e4-938a-85ac9d04fa40).)</span></span>  
  
-   <span data-ttu-id="b290a-242">열에 포함 될 수 없습니다는 <xref:System.Data.DataView.RowFilter%2A> 또는 <xref:System.Data.DataTable.Select%2A> 식입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-242">The column cannot be part of a <xref:System.Data.DataView.RowFilter%2A> or <xref:System.Data.DataTable.Select%2A> expression.</span></span>  
  
-   <span data-ttu-id="b290a-243">열 사용 되는 경우는 <xref:System.Data.DataTable.PrimaryKey%2A>, 또는 <xref:System.Data.DataView.Sort%2A> 또는 <xref:System.Data.DataView>를 변경할 수 없는 필드로 간주 해야 합니다; 테이블에 추가 되 면 열 데이터를 변경 하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-243">If the column is used as a <xref:System.Data.DataTable.PrimaryKey%2A>, or as a <xref:System.Data.DataView.Sort%2A> or for a <xref:System.Data.DataView>, it must be treated as an immutable field; the column data must not be changed once it has been added to the table.</span></span>  
  
-   <span data-ttu-id="b290a-244">해당 <xref:System.Data.DataColumn.ColumnMapping%2A> 로 설정할 수 있습니다 `MappingType.Element`합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-244">Its <xref:System.Data.DataColumn.ColumnMapping%2A> can be only set to `MappingType.Element`.</span></span>  
  
-   <span data-ttu-id="b290a-245">열의 데이터 형식이 여야 구현으로 표시 되어야 하는 클래스를 <xref:System.SerializableAttribute>, 필요한 구현 하는 경우는 <xref:System.Runtime.Serialization.ISerializable> 또는 <xref:System.Xml.Serialization.IXmlSerializable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-245">The class that implements the column's data type must be must be marked with the <xref:System.SerializableAttribute>, and if necessary implement the <xref:System.Runtime.Serialization.ISerializable> or <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
-   <span data-ttu-id="b290a-246">변경 내용 추적에 대 한 지원은 제한 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-246">Support for change tracking is limited.</span></span> <span data-ttu-id="b290a-247">활용 하는 <xref:System.Data.DataTable> 클래스의 변경 내용 추적 메커니즘을 열의 데이터 형식을 구현 하는 클래스를 구현 합니다 <xref:System.ComponentModel.IChangeTracking> 인터페이스 또는 알리는 대 한 작업을 맡습니다는 <xref:System.Data.DataRow> 열 값 된 시기 수정 하거나 호출 <xref:System.Data.DataRow.SetModified%2A> 행 또는 열 값 개체를 개별적으로 인스턴스화된 열 값 개체를 할당 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-247">To utilize the <xref:System.Data.DataTable> class' change tracking mechanism, the class that implements the column's data type must either implement the <xref:System.ComponentModel.IChangeTracking> interface, or take over the responsibility for informing the <xref:System.Data.DataRow> when the column value has been modified, either by calling <xref:System.Data.DataRow.SetModified%2A> on the row or by assigning the column value object to a separately instantiated column value object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b290a-248">에 여러 데이터 형식의 열을 추가 하는 다음 예제는 <xref:System.Data.DataTable>, 다음 테이블에 하나의 행을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-248">The following example adds columns of several data types to a <xref:System.Data.DataTable>, and then adds one row to the table.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataType Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataType Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b290a-249">열에 저장된 데이터가 이미 있는 경우</span><span class="sxs-lookup"><span data-stu-id="b290a-249">The column already has data stored.</span></span></exception>
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Type.GetType" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="b290a-250">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="b290a-250">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DateTimeMode">
      <MemberSignature Language="C#" Value="public System.Data.DataSetDateTime DateTimeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataSetDateTime DateTimeMode" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DateTimeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DateTimeMode As DataSetDateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataSetDateTime DateTimeMode { System::Data::DataSetDateTime get(); void set(System::Data::DataSetDateTime value); };" />
      <MemberSignature Language="F#" Value="member this.DateTimeMode : System.Data.DataSetDateTime with get, set" Usage="System.Data.DataColumn.DateTimeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataSetDateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b290a-251">열의 <see langword="DateTimeMode" />를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-251">Gets or sets the <see langword="DateTimeMode" /> for the column.</span></span></summary>
        <value><span data-ttu-id="b290a-252">지정된 열의 <see cref="T:System.Data.DataSetDateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-252">The <see cref="T:System.Data.DataSetDateTime" /> for the specified column.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b290a-253">합니다 <xref:System.Data.DataColumn.DateTimeMode%2A> 행에 추가 된 후에 수정할 수 없습니다는 <xref:System.Data.DataColumn>에서 수정 하는 제외 하 고 <xref:System.Data.DataSetDateTime.Unspecified> 및 <xref:System.Data.DataSetDateTime.UnspecifiedLocal> 또는 그 반대로 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-253">The <xref:System.Data.DataColumn.DateTimeMode%2A> cannot be modified after rows are added to a <xref:System.Data.DataColumn>, except for modifying from <xref:System.Data.DataSetDateTime.Unspecified> and <xref:System.Data.DataSetDateTime.UnspecifiedLocal> or vice-versa.</span></span> <span data-ttu-id="b290a-254">수정 `UnspecifiedLocal` 에 `Unspecified` 반대로 이러한 두 옵션 간의 차이점 serialization 중에 하 고 저장소는 영향을 주지 않습니다 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-254">The modification from `UnspecifiedLocal` to `Unspecified` and vice-versa is allowed as the difference between these two options is only during serialization and does not affect the storage.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="b290a-255">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="b290a-255">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public object DefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultValue : obj with get, set" Usage="System.Data.DataColumn.DefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.DefaultValueTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnDefaultValueDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b290a-256">새 행을 만들 때 열의 기본값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-256">Gets or sets the default value for the column when you are creating new rows.</span></span></summary>
        <value><span data-ttu-id="b290a-257">열의 <see cref="P:System.Data.DataColumn.DataType" />에 적합한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-257">A value appropriate to the column's <see cref="P:System.Data.DataColumn.DataType" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b290a-258">기본값은 열에 자동으로 할당 되는 값을 때를 <xref:System.Data.DataRow> 만들어집니다 (예를 들어, 날짜와 시간을 <xref:System.Data.DataRow> 만들어진 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-258">A default value is the value that is automatically assigned to the column when a <xref:System.Data.DataRow> is created (for example, the date and time when the <xref:System.Data.DataRow> was created.</span></span>  
  
 <span data-ttu-id="b290a-259">때 <xref:System.Data.DataColumn.AutoIncrement%2A> 로 설정 된 true 수 기본값은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-259">When <xref:System.Data.DataColumn.AutoIncrement%2A> is set to true, there can be no default value.</span></span>  
  
 <span data-ttu-id="b290a-260">사용 하 여 새 행을 만들 수 있습니다 합니다 <xref:System.Data.DataRow.ItemArray%2A> 의 속성을 <xref:System.Data.DataRow> 클래스 및 값의 배열을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-260">You can create a new row using the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class and passing the method an array of values.</span></span> <span data-ttu-id="b290a-261">해당 값이 자동으로 생성 하기 때문에 이것이 기본값이 포함 된 열에 대 한 잠재적인 문제입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-261">This is a potential problem for a column with a default value because its value is generated automatically.</span></span> <span data-ttu-id="b290a-262">사용 하는 <xref:System.Data.DataRow.ItemArray%2A> 속성 이러한 열을 사용 하 여 배치 `null` 배열에 있는 열의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-262">To use the <xref:System.Data.DataRow.ItemArray%2A> property with such a column, place `null` in the column's position in the array.</span></span> <span data-ttu-id="b290a-263">자세한 내용은 <xref:System.Data.DataRow.ItemArray%2A> 속성을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="b290a-263">For more information, see the <xref:System.Data.DataRow.ItemArray%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b290a-264">다음 예제에서는 여러 <xref:System.Data.DataColumn> 각 열에 기본값 개체를 다른 데이터 형식, 적절 한 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-264">The following example creates several <xref:System.Data.DataColumn> objects that have different data types, and sets appropriate default values to each column.</span></span>  
  
 [!code-vb[Classic WebData DataColumn.DefaultValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DefaultValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="b290a-265">행을 추가할 때 기본값이 열 데이터 형식의 인스턴스가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="b290a-265">When you are adding a row, the default value is not an instance of the column's data type.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.UniqueConstraint" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="b290a-266">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="b290a-266">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Expression : string with get, set" Usage="System.Data.DataColumn.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnExpressionDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b290a-267">행을 필터링하거나 열의 값을 계산하거나 집계 열을 만드는 데 사용되는 식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-267">Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.</span></span></summary>
        <value><span data-ttu-id="b290a-268">열의 값을 계산하거나 집계 열을 만드는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-268">An expression to calculate the value of a column, or create an aggregate column.</span></span> <span data-ttu-id="b290a-269">식의 반환 형식은 열의 <see cref="P:System.Data.DataColumn.DataType" />에 의해 결정됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-269">The return type of an expression is determined by the <see cref="P:System.Data.DataColumn.DataType" /> of the column.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b290a-270">용도 중 하나는 <xref:System.Data.DataColumn.Expression%2A> 속성이 계산된 열을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-270">One use of the <xref:System.Data.DataColumn.Expression%2A> property is to create calculated columns.</span></span> <span data-ttu-id="b290a-271">예를 들어 세금 값을 계산 하려면 단가 곱하고 특정 지역의 세율을 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-271">For example, to calculate a tax value, the unit price is multiplied by a tax rate of a specific region.</span></span> <span data-ttu-id="b290a-272">세율 영역 마다 다르므로 것이 불가능; 열에 단일 세율을 설정 하려면 대신 값을 사용 하 여 계산 되는 <xref:System.Data.DataColumn.Expression%2A> 다음 섹션에는 Visual Basic 코드에 표시 된 속성:</span><span class="sxs-lookup"><span data-stu-id="b290a-272">Because tax rates vary from region to region, it would be impossible to put a single tax rate in a column; instead, the value is calculated using the <xref:System.Data.DataColumn.Expression%2A> property, as shown in the Visual Basic code in the following section:</span></span>  
  
 <span data-ttu-id="b290a-273">DataSet1.Tables("Products").Columns("tax").Expression = "UnitPrice \* 0.086"</span><span class="sxs-lookup"><span data-stu-id="b290a-273">DataSet1.Tables("Products").Columns("tax").Expression = "UnitPrice \* 0.086"</span></span>  
  
 <span data-ttu-id="b290a-274">두 번째 용도 집계 열을 만드는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-274">A second use is to create an aggregate column.</span></span> <span data-ttu-id="b290a-275">계산된 된 값과 마찬가지로 집계에 있는 행의 전체 집합을 기반으로 작업을 수행 합니다 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-275">Similar to a calculated value, an aggregate performs an operation based on the complete set of rows in the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="b290a-276">간단한 예제 집합에 반환 되는 행의 수를 계산 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-276">A simple example is to count the number of rows returned in the set.</span></span> <span data-ttu-id="b290a-277">이 방법은이 Visual Basic 코드에 표시 된 대로 특정 판매원, 완료 된 트랜잭션의 수를 계산 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-277">This is the method you would use to count the number of transactions completed by a particular salesperson, as shown in this Visual Basic code:</span></span>  
  
```vb  
DataSet1.Tables("Orders").Columns("OrderCount").Expression = "Count(OrderID)"  
```  
  
## <a name="expression-syntax"></a><span data-ttu-id="b290a-278">식 구문</span><span class="sxs-lookup"><span data-stu-id="b290a-278">Expression Syntax</span></span>  
 <span data-ttu-id="b290a-279">식을 만들 때 사용 된 <xref:System.Data.DataColumn.ColumnName%2A> 열을 참조 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-279">When you create an expression, use the <xref:System.Data.DataColumn.ColumnName%2A> property to refer to columns.</span></span> <span data-ttu-id="b290a-280">예를 들어 경우는 <xref:System.Data.DataColumn.ColumnName%2A> 식이 다음과 같을 수는 다른 "Quantity" 및 "UnitPrice", 열 하나에:</span><span class="sxs-lookup"><span data-stu-id="b290a-280">For example, if the <xref:System.Data.DataColumn.ColumnName%2A> for one column is "UnitPrice", and another "Quantity", the expression would be as follows:</span></span>  
  
 <span data-ttu-id="b290a-281">"UnitPrice \* Quantity"</span><span class="sxs-lookup"><span data-stu-id="b290a-281">"UnitPrice \* Quantity"</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b290a-282">식에 사용 되는 열을 해당 열에 대 한 종속성을 식 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-282">If a column is used in an expression, then the expression is said to have a dependency on that column.</span></span> <span data-ttu-id="b290a-283">종속 열을 바꾸거나 제거 하는 경우 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-283">If a dependent column is renamed or removed, no exception is thrown.</span></span> <span data-ttu-id="b290a-284">현재 중단 된 식 열에 액세스할 때 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-284">An exception will be thrown when the now-broken expression column is accessed.</span></span>  
  
 <span data-ttu-id="b290a-285">필터 식을 만들면 작은따옴표를 사용 하 여 문자열을 묶습니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-285">When you create an expression for a filter, enclose strings with single quotation marks:</span></span>  
  
 <span data-ttu-id="b290a-286">"LastName = 'Jones'"</span><span class="sxs-lookup"><span data-stu-id="b290a-286">"LastName = 'Jones'"</span></span>  
  
 <span data-ttu-id="b290a-287">열 이름을 영숫자가 아닌 문자가 포함 된 숫자를 사용 하 여 시작 또는 다음 예약 된 단어 중 하나라도 일치 (대)를 하는 경우 다음 단락에서 설명한 대로 특별 한 처리가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-287">If a column name contains any non-alphanumeric characters or starts with a digit or matches (case-insensitively) any of the following reserved words, it requires special handling, as described in the following paragraphs.</span></span>  
  
 <span data-ttu-id="b290a-288">and</span><span class="sxs-lookup"><span data-stu-id="b290a-288">And</span></span>  
  
 <span data-ttu-id="b290a-289">간에</span><span class="sxs-lookup"><span data-stu-id="b290a-289">Between</span></span>  
  
 <span data-ttu-id="b290a-290">자식</span><span class="sxs-lookup"><span data-stu-id="b290a-290">Child</span></span>  
  
 <span data-ttu-id="b290a-291">False</span><span class="sxs-lookup"><span data-stu-id="b290a-291">False</span></span>  
  
 <span data-ttu-id="b290a-292">입력</span><span class="sxs-lookup"><span data-stu-id="b290a-292">In</span></span>  
  
 <span data-ttu-id="b290a-293">예</span><span class="sxs-lookup"><span data-stu-id="b290a-293">Is</span></span>  
  
 <span data-ttu-id="b290a-294">Like</span><span class="sxs-lookup"><span data-stu-id="b290a-294">Like</span></span>  
  
 <span data-ttu-id="b290a-295">not</span><span class="sxs-lookup"><span data-stu-id="b290a-295">Not</span></span>  
  
 <span data-ttu-id="b290a-296">Null</span><span class="sxs-lookup"><span data-stu-id="b290a-296">Null</span></span>  
  
 <span data-ttu-id="b290a-297">Or</span><span class="sxs-lookup"><span data-stu-id="b290a-297">Or</span></span>  
  
 <span data-ttu-id="b290a-298">부모</span><span class="sxs-lookup"><span data-stu-id="b290a-298">Parent</span></span>  
  
 <span data-ttu-id="b290a-299">True</span><span class="sxs-lookup"><span data-stu-id="b290a-299">True</span></span>  
  
 <span data-ttu-id="b290a-300">양쪽 대괄호에 래핑되어야 합니다 열 이름을 위의 조건 중 하나를 충족 하는 경우 또는 "'" (억음 악센트 기호) 따옴표입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-300">If a column name satisfies one of the above conditions, it must be wrapped in either square brackets or the "\`" (grave accent) quotes.</span></span> <span data-ttu-id="b290a-301">예를 들어 식에서 "열 #" 라는 열을 사용 하려면 하는 #을 작성 하거나 "[열]":</span><span class="sxs-lookup"><span data-stu-id="b290a-301">For example, to use a column named "Column#" in an expression, you would write either "[Column#]":</span></span>  
  
 <span data-ttu-id="b290a-302">총 \* [열 #]</span><span class="sxs-lookup"><span data-stu-id="b290a-302">Total \* [Column#]</span></span>  
  
 <span data-ttu-id="b290a-303">또는 "\`열 #'":</span><span class="sxs-lookup"><span data-stu-id="b290a-303">or "\`Column#\`":</span></span>  
  
 <span data-ttu-id="b290a-304">총 \* \`열 #'</span><span class="sxs-lookup"><span data-stu-id="b290a-304">Total \* \`Column#\`</span></span>  
  
 <span data-ttu-id="b290a-305">대괄호 안에 있는 다음 모든 열 이름이 포함 되어 있으면 ']' 및 '\\'에 문자 (하지만 다른 문자가 아닌) 앞에 백슬래시 앞에 이스케이프 되어야 합니다 ("\\") 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-305">If the column name is enclosed in square brackets then any ']' and '\\' characters (but not any other characters) in it must be escaped by prepending them with the backslash ("\\") character.</span></span> <span data-ttu-id="b290a-306">억음 악센트 문자에 열 이름이 포함 되어 있으면 다음 해당 없어야에 억음 악센트 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-306">If the column name is enclosed in grave accent characters then it must not contain any grave accent characters in it.</span></span> <span data-ttu-id="b290a-307">예를 들어, 이라는 열 "열\\" 작성 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-307">For example, a column named "Column[]\\" would be written:</span></span>  
  
 <span data-ttu-id="b290a-308">총 \* [열 [\\]\\\\]</span><span class="sxs-lookup"><span data-stu-id="b290a-308">Total \* [Column[\\]\\\\]</span></span>  
  
 <span data-ttu-id="b290a-309">또는</span><span class="sxs-lookup"><span data-stu-id="b290a-309">or</span></span>  
  
 <span data-ttu-id="b290a-310">총 \* \`열\\`</span><span class="sxs-lookup"><span data-stu-id="b290a-310">Total \* \`Column[]\\`</span></span>  
  
## <a name="user-defined-values"></a><span data-ttu-id="b290a-311">사용자 정의 값</span><span class="sxs-lookup"><span data-stu-id="b290a-311">User-Defined Values</span></span>  
 <span data-ttu-id="b290a-312">사용자 정의 값 열 값과 비교할 식 내에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-312">User-defined values may be used within expressions to be compared with column values.</span></span> <span data-ttu-id="b290a-313">문자열 값을 단일 따옴표 안에 묶어야 합니다 (및 각 작은따옴표 문자는 문자열 값에 다른 작은따옴표를 사용 하 여 앞에 추가 하 여 이스케이프 처리 해야) 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-313">String values should be enclosed within single quotation marks (and each single quotation character in a string value has to be escaped by prepending it with another single quotation character).</span></span> <span data-ttu-id="b290a-314">날짜 값 파운드 기호 (#) 또는 데이터 공급자에 따라 단일 따옴표 (') 내에 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-314">Date values should be enclosed within pound signs (#) or single quotes (') based on the data provider.</span></span> <span data-ttu-id="b290a-315">10 진수 지 수 표기는 숫자 값에 대 한 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-315">Decimals and scientific notation are permissible for numeric values.</span></span> <span data-ttu-id="b290a-316">예:</span><span class="sxs-lookup"><span data-stu-id="b290a-316">For example:</span></span>  
  
 <span data-ttu-id="b290a-317">"FirstName = 'John'"</span><span class="sxs-lookup"><span data-stu-id="b290a-317">"FirstName = 'John'"</span></span>  
  
 <span data-ttu-id="b290a-318">"가격 < 50.00 ="</span><span class="sxs-lookup"><span data-stu-id="b290a-318">"Price <= 50.00"</span></span>  
  
 <span data-ttu-id="b290a-319">"생년월일 < #1/31/82 #"</span><span class="sxs-lookup"><span data-stu-id="b290a-319">"Birthdate < #1/31/82#"</span></span>  
  
 <span data-ttu-id="b290a-320">열거형 값이 포함 된 열에 대 한 정수 데이터 형식으로 값을 캐스팅 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-320">For columns that contain enumeration values, cast the value to an integer data type.</span></span> <span data-ttu-id="b290a-321">예:</span><span class="sxs-lookup"><span data-stu-id="b290a-321">For example:</span></span>  
  
 <span data-ttu-id="b290a-322">"EnumColumn = 5"</span><span class="sxs-lookup"><span data-stu-id="b290a-322">"EnumColumn = 5"</span></span>  
  
## <a name="parsing-literal-expressions"></a><span data-ttu-id="b290a-323">리터럴 식의 구문 분석</span><span class="sxs-lookup"><span data-stu-id="b290a-323">Parsing Literal Expressions</span></span>  
 <span data-ttu-id="b290a-324">고정 문화권 로캘에서 모든 리터럴 식이 표시 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-324">All literal expressions must be expressed in the invariant culture locale.</span></span> <span data-ttu-id="b290a-325">때 `DataSet` 구문 분석 하 고 리터럴 식 변환 항상 고정 문화권을 현재 문화권이 아닌을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-325">When `DataSet` parses and converts literal expressions, it always uses the invariant culture, not the current culture.</span></span>  
  
 <span data-ttu-id="b290a-326">문자열 리터럴은 작은따옴표 값 주위에 있을 때 식별 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-326">String literals are identified when there are single quotes surrounding the value.</span></span> <span data-ttu-id="b290a-327">예:</span><span class="sxs-lookup"><span data-stu-id="b290a-327">For example:</span></span>  
  
 <span data-ttu-id="b290a-328">사용자 정의 함수</span><span class="sxs-lookup"><span data-stu-id="b290a-328">'John'</span></span>  
  
 <span data-ttu-id="b290a-329">`Boolean` 리터럴은 true 및 false입니다. 식에는 따옴표로 묶이지 않은 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-329">`Boolean` literals are true and false; they are not quoted in expressions.</span></span>  
  
 <span data-ttu-id="b290a-330">`Integer` 리터럴 [+-]? [0-9] +으로 처리할지 `System.Int32`, `System.Int64` 또는 `System.Double`합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-330">`Integer` literals [+-]?[0-9]+ are treated as `System.Int32`, `System.Int64` or `System.Double`.</span></span> <span data-ttu-id="b290a-331">`System.Double` 얼마나 큰 수 인지에 따라 정밀도 떨어질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-331">`System.Double` can lose precision depending on how large the number is.</span></span> <span data-ttu-id="b290a-332">예를 들어 리터럴의 숫자가 2147483650, `DataSet` 숫자를 구문 분석 하려고 먼저는 `Int32`합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-332">For example, if the number in the literal is 2147483650, `DataSet` will first attempt to parse the number as an `Int32`.</span></span> <span data-ttu-id="b290a-333">이 수 너무 크기 때문에 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-333">This will not succeed because the number is too large.</span></span> <span data-ttu-id="b290a-334">이 예제의 `DataSet` 는 숫자를 구문 분석 하는 `Int64`, 성공 하는.</span><span class="sxs-lookup"><span data-stu-id="b290a-334">In this case `DataSet` will parse the number as an `Int64`, which will succeed.</span></span> <span data-ttu-id="b290a-335">Int64의 최대값 보다 큰 숫자 리터럴이 `DataSet` 사용 하 여 리터럴을 구문 분석 하는 `Double`합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-335">If the literal was a number larger than the maximum value of an Int64, `DataSet` will parse the literal using `Double`.</span></span>  
  
 <span data-ttu-id="b290a-336">4.42372 e 같은 과학적 표기법을 사용 하 여 실제 리터럴-30을 사용 하 여 구문 분석 `System.Double`합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-336">Real literals using scientific notation, such as 4.42372E-30, are parsed using `System.Double`.</span></span>  
  
 <span data-ttu-id="b290a-337">소수점으로 사용 하 여 과학적 표기법 없지만 실제 리터럴은 처리 됩니다 `System.Decimal`합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-337">Real literals without scientific notation, but with a decimal point, are treated as `System.Decimal`.</span></span> <span data-ttu-id="b290a-338">지 원하는 최대값 또는 최소값 값을 초과 하는 경우 `System.Decimal`,으로 구문 분석 됩니다는 `System.Double`합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-338">If the number exceeds the maximum or minimum values supported by `System.Decimal`, then it is parsed as a `System.Double`.</span></span> <span data-ttu-id="b290a-339">예:</span><span class="sxs-lookup"><span data-stu-id="b290a-339">For example:</span></span>  
  
 <span data-ttu-id="b290a-340">142526.144524 변환할 수는 `Decimal`합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-340">142526.144524 will be converted to a `Decimal`.</span></span>  
  
 <span data-ttu-id="b290a-341">345262.78036719560925667 취급 됩니다는 `Double`합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-341">345262.78036719560925667 will be treated as a `Double`.</span></span>  
  
## <a name="operators"></a><span data-ttu-id="b290a-342">연산자</span><span class="sxs-lookup"><span data-stu-id="b290a-342">Operators</span></span>  
 <span data-ttu-id="b290a-343">연결 부울 AND, OR 및 NOT 연산자를 사용 하 여 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-343">Concatenation is allowed using Boolean AND, OR, and NOT operators.</span></span> <span data-ttu-id="b290a-344">절을 그룹화 하려면 괄호를 사용 하 고 우선 순위를 강제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-344">You can use parentheses to group clauses and force precedence.</span></span> <span data-ttu-id="b290a-345">AND 연산자는 다른 연산자 보다 우선 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-345">The AND operator has precedence over other operators.</span></span> <span data-ttu-id="b290a-346">예:</span><span class="sxs-lookup"><span data-stu-id="b290a-346">For example:</span></span>  
  
 <span data-ttu-id="b290a-347">(LastName = 'Smith' 또는 LastName = 'Jones') 및 FirstName = 사용자 정의 함수</span><span class="sxs-lookup"><span data-stu-id="b290a-347">(LastName = 'Smith' OR LastName = 'Jones') AND FirstName = 'John'</span></span>  
  
 <span data-ttu-id="b290a-348">비교 식을 만들면 다음 연산자를 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-348">When you create comparison expressions, the following operators are allowed:</span></span>  
  
 \<  
  
 >  
  
 \<=  
  
 >=  
  
 <>  
  
 =  
  
 <span data-ttu-id="b290a-349">IN</span><span class="sxs-lookup"><span data-stu-id="b290a-349">IN</span></span>  
  
 <span data-ttu-id="b290a-350">LIKE</span><span class="sxs-lookup"><span data-stu-id="b290a-350">LIKE</span></span>  
  
 <span data-ttu-id="b290a-351">다음과 같은 산술 연산자는 식에서 에서도 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-351">The following arithmetic operators are also supported in expressions:</span></span>  
  
 <span data-ttu-id="b290a-352">\+ (더하기)</span><span class="sxs-lookup"><span data-stu-id="b290a-352">\+ (addition)</span></span>  
  
 <span data-ttu-id="b290a-353">\-(빼기)</span><span class="sxs-lookup"><span data-stu-id="b290a-353">\- (subtraction)</span></span>  
  
 <span data-ttu-id="b290a-354">\* (곱하기)</span><span class="sxs-lookup"><span data-stu-id="b290a-354">\* (multiplication)</span></span>  
  
 <span data-ttu-id="b290a-355">/ (나누기)</span><span class="sxs-lookup"><span data-stu-id="b290a-355">/ (division)</span></span>  
  
 <span data-ttu-id="b290a-356">% (모듈러스)</span><span class="sxs-lookup"><span data-stu-id="b290a-356">% (modulus)</span></span>  
  
## <a name="string-operators"></a><span data-ttu-id="b290a-357">문자열 연산자</span><span class="sxs-lookup"><span data-stu-id="b290a-357">String Operators</span></span>  
 <span data-ttu-id="b290a-358">문자열을 연결 하려면 사용 된 + 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-358">To concatenate a string, use the + character.</span></span> <span data-ttu-id="b290a-359">값을 <xref:System.Data.DataSet.CaseSensitive%2A> 속성의는 <xref:System.Data.DataSet> 클래스 문자열 비교 시 대/소문자 구분 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-359">The value of the <xref:System.Data.DataSet.CaseSensitive%2A> property of the <xref:System.Data.DataSet> class determines whether string comparisons are case-sensitive.</span></span> <span data-ttu-id="b290a-360">그러나 해당 값을 재정의할 수 있습니다는 <xref:System.Data.DataTable.CaseSensitive%2A> 의 속성을 <xref:System.Data.DataTable> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-360">However, you can override that value with the <xref:System.Data.DataTable.CaseSensitive%2A> property of the <xref:System.Data.DataTable> class.</span></span>  
  
## <a name="wildcard-characters"></a><span data-ttu-id="b290a-361">와일드카드 문자</span><span class="sxs-lookup"><span data-stu-id="b290a-361">Wildcard Characters</span></span>  
 <span data-ttu-id="b290a-362">모두는 \* %LIKE 비교가에서 와일드 카드 문자를 서로 교환해 서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-362">Both the \* and % can be used interchangeably for wildcard characters in a LIKE comparison.</span></span> <span data-ttu-id="b290a-363">LIKE 절에서 문자열을 포함 하는 경우는 \* 또는 %, 해당 문자 () 대괄호로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-363">If the string in a LIKE clause contains a \* or %, those characters should be enclosed in brackets ([]).</span></span> <span data-ttu-id="b290a-364">절에는 대괄호 이면 각 대괄호 문자 (예: [[] 또는 []])에 대괄호로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-364">If a bracket is in the clause, each bracket character should be enclosed in brackets (for example [[] or []]).</span></span> <span data-ttu-id="b290a-365">시작 및 패턴의 끝에 또는 패턴의 끝 또는 패턴의 시작 부분에 와일드 카드는 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-365">A wildcard is allowed at the start and end of a pattern, or at the end of a pattern, or at the start of a pattern.</span></span> <span data-ttu-id="b290a-366">예:</span><span class="sxs-lookup"><span data-stu-id="b290a-366">For example:</span></span>  
  
 <span data-ttu-id="b290a-367">"ItemName 같은 ' \* 제품\*'"</span><span class="sxs-lookup"><span data-stu-id="b290a-367">"ItemName LIKE '\*product\*'"</span></span>  
  
 <span data-ttu-id="b290a-368">"ItemName 같은 ' \* 제품 '"</span><span class="sxs-lookup"><span data-stu-id="b290a-368">"ItemName LIKE '\*product'"</span></span>  
  
 <span data-ttu-id="b290a-369">"ItemName 좋아요 ' 제품 \*'"</span><span class="sxs-lookup"><span data-stu-id="b290a-369">"ItemName LIKE 'product\*'"</span></span>  
  
 <span data-ttu-id="b290a-370">문자열 중간 와일드 카드 문자 허용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-370">Wildcard characters are not allowed in the middle of a string.</span></span> <span data-ttu-id="b290a-371">예를 들어, ' te \* xt' 허용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-371">For example, 'te\*xt' is not allowed.</span></span>  
  
## <a name="parentchild-relation-referencing"></a><span data-ttu-id="b290a-372">부모/자식 관계 참조</span><span class="sxs-lookup"><span data-stu-id="b290a-372">Parent/Child Relation Referencing</span></span>  
 <span data-ttu-id="b290a-373">열 이름 앞에 추가 하 여 부모 테이블 식에서 참조할 수 있습니다 `Parent`합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-373">A parent table may be referenced in an expression by prepending the column name with `Parent`.</span></span> <span data-ttu-id="b290a-374">예를 들어 합니다 `Parent.Price` 부모 테이블의 열 이름이 참조 `Price`합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-374">For example, the `Parent.Price` references the parent table's column named `Price`.</span></span>  
  
 <span data-ttu-id="b290a-375">자식이 둘 이상의 부모 행에 있는 경우 Parent(RelationName)를 사용 합니다. ColumnName입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-375">When a child has more than one parent row, use Parent(RelationName).ColumnName.</span></span> <span data-ttu-id="b290a-376">예를 들어 Parent(RelationName) 합니다. 가격에는 부모 테이블의 열 관계를 통해 price 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-376">For example, the Parent(RelationName).Price references the parent table's column named Price via the relation.</span></span>  
  
 <span data-ttu-id="b290a-377">열 이름 앞에 추가 하 여 식에서 자식 테이블의 열을 참조할 수 있습니다 `Child`합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-377">A column in a child table may be referenced in an expression by prepending the column name with `Child`.</span></span> <span data-ttu-id="b290a-378">그러나 자식 관계는 여러 행을 반환할 수 있습니다, 되므로 자식 열에 대 한 참조는 집계 함수에 포함 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-378">However, because child relationships may return multiple rows, you must include the reference to the child column in an aggregate function.</span></span> <span data-ttu-id="b290a-379">예를 들어 `Sum(Child.Price)` 명명 된 열의 합계를 반환 `Price` 자식 테이블에서입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-379">For example, `Sum(Child.Price)` would return the sum of the column named `Price` in the child table.</span></span>  
  
 <span data-ttu-id="b290a-380">구문은 테이블에 있는 경우 둘 이상의 자식,: `Child(RelationName)`합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-380">If a table has more than one child, the syntax is: `Child(RelationName)`.</span></span> <span data-ttu-id="b290a-381">예를 들어 테이블에 명명 된 두 개의 자식 테이블 `Customers` 하 고 `Orders`, 및 <xref:System.Data.DataRelation> 개체의 이름은 `Customers2Orders`, 참조는 다음과 같은 것:</span><span class="sxs-lookup"><span data-stu-id="b290a-381">For example, if a table has two child tables named `Customers` and `Orders`, and the <xref:System.Data.DataRelation> object is named `Customers2Orders`, the reference would be as follows:</span></span>  
  
 <span data-ttu-id="b290a-382">Avg(Child(Customers2Orders).Quantity)</span><span class="sxs-lookup"><span data-stu-id="b290a-382">Avg(Child(Customers2Orders).Quantity)</span></span>  
  
## <a name="aggregates"></a><span data-ttu-id="b290a-383">집합체</span><span class="sxs-lookup"><span data-stu-id="b290a-383">Aggregates</span></span>  
 <span data-ttu-id="b290a-384">다음 집계 유형이 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-384">The following aggregate types are supported:</span></span>  
  
 <span data-ttu-id="b290a-385">Sum (Sum)</span><span class="sxs-lookup"><span data-stu-id="b290a-385">Sum (Sum)</span></span>  
  
 <span data-ttu-id="b290a-386">평균 (평균)</span><span class="sxs-lookup"><span data-stu-id="b290a-386">Avg (Average)</span></span>  
  
 <span data-ttu-id="b290a-387">Min (최소)</span><span class="sxs-lookup"><span data-stu-id="b290a-387">Min (Minimum)</span></span>  
  
 <span data-ttu-id="b290a-388">최대 (최대)</span><span class="sxs-lookup"><span data-stu-id="b290a-388">Max (Maximum)</span></span>  
  
 <span data-ttu-id="b290a-389">개수 (개수)</span><span class="sxs-lookup"><span data-stu-id="b290a-389">Count (Count)</span></span>  
  
 <span data-ttu-id="b290a-390">StDev (통계적 표준 편차)</span><span class="sxs-lookup"><span data-stu-id="b290a-390">StDev (Statistical standard deviation)</span></span>  
  
 <span data-ttu-id="b290a-391">Var (통계 분산)입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-391">Var (Statistical variance).</span></span>  
  
 <span data-ttu-id="b290a-392">집계는 일반적으로 관계를 따라 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-392">Aggregates are ordinarily performed along relationships.</span></span> <span data-ttu-id="b290a-393">앞에서 설명한 부모/자식 관계 참조에 설명 된 대로 앞에 나열 된 함수 및 자식 테이블 열 중 하나를 사용 하 여 집계 식을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-393">Create an aggregate expression by using one of the functions listed earlier and a child table column as detailed in Parent/Child Relation Referencing that was discussed earlier.</span></span> <span data-ttu-id="b290a-394">예:</span><span class="sxs-lookup"><span data-stu-id="b290a-394">For example:</span></span>  
  
 <span data-ttu-id="b290a-395">Avg(Child.Price)</span><span class="sxs-lookup"><span data-stu-id="b290a-395">Avg(Child.Price)</span></span>  
  
 <span data-ttu-id="b290a-396">Avg(Child(Orders2Details).Price)</span><span class="sxs-lookup"><span data-stu-id="b290a-396">Avg(Child(Orders2Details).Price)</span></span>  
  
 <span data-ttu-id="b290a-397">단일 테이블에서 집계를 수행할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-397">An aggregate can also be performed on a single table.</span></span> <span data-ttu-id="b290a-398">예를 들어 그림의 요약 열에 라는 "Price" 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-398">For example, to create a summary of figures in a column named "Price":</span></span>  
  
 <span data-ttu-id="b290a-399">Sum(Price)</span><span class="sxs-lookup"><span data-stu-id="b290a-399">Sum(Price)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b290a-400">단일 테이블을 사용 하 여 집계를 만드는 경우 group by 기능 것입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-400">If you use a single table to create an aggregate, there would be no group-by functionality.</span></span> <span data-ttu-id="b290a-401">대신 모든 행 열에 동일한 값이 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-401">Instead, all rows would display the same value in the column.</span></span>  
  
 <span data-ttu-id="b290a-402">테이블에 행이 없는 경우 집계 함수를 반환 합니다 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-402">If a table has no rows, the aggregate functions will return `null`.</span></span>  
  
 <span data-ttu-id="b290a-403">데이터 형식을 검사 하 여 항상 확인할 수 있습니다는 <xref:System.Data.DataColumn.DataType%2A> 열 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-403">Data types can always be determined by examining the <xref:System.Data.DataColumn.DataType%2A> property of a column.</span></span> <span data-ttu-id="b290a-404">또한 다음 섹션에 표시 된 변환 함수를 사용 하는 데이터 형식을 변환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-404">You can also convert data types using the Convert function, shown in the following section.</span></span>  
  
 <span data-ttu-id="b290a-405">집계는 단일 열만 적용할 수 있습니다 하 고 다른 식이 없습니다 집계 내에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-405">An aggregate can only be applied to a single column and no other expressions can be used inside the aggregate.</span></span>  
  
## <a name="functions"></a><span data-ttu-id="b290a-406">함수</span><span class="sxs-lookup"><span data-stu-id="b290a-406">Functions</span></span>  
 <span data-ttu-id="b290a-407">다음 함수 에서도 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-407">The following functions are also supported:</span></span>  
  
 `CONVERT`  
  
|||  
|-|-|  
|<span data-ttu-id="b290a-408">설명</span><span class="sxs-lookup"><span data-stu-id="b290a-408">Description</span></span>|<span data-ttu-id="b290a-409">특정 식이 지정된 된.NET Framework 형식으로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-409">Converts particular expression to a specified .NET Framework Type.</span></span>|  
|<span data-ttu-id="b290a-410">구문</span><span class="sxs-lookup"><span data-stu-id="b290a-410">Syntax</span></span>|<span data-ttu-id="b290a-411">Convert(`expression`, `type`)</span><span class="sxs-lookup"><span data-stu-id="b290a-411">Convert(`expression`, `type`)</span></span>|  
|<span data-ttu-id="b290a-412">인수</span><span class="sxs-lookup"><span data-stu-id="b290a-412">Arguments</span></span>|<span data-ttu-id="b290a-413">`expression` --식 변환입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-413">`expression` -- The expression to convert.</span></span><br /><br /> <span data-ttu-id="b290a-414">`type` 값은 변환 되어야 하는--.NET Framework 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-414">`type` -- The .NET Framework type to which the value will be converted.</span></span>|  
  
 <span data-ttu-id="b290a-415">예제: myDataColumn.Expression="Convert (총, 'System.Int32')"</span><span class="sxs-lookup"><span data-stu-id="b290a-415">Example: myDataColumn.Expression="Convert(total, 'System.Int32')"</span></span>  
  
 <span data-ttu-id="b290a-416">모든 변환은 다음과 같은 예외를 사용 하 여 유효한: `Boolean` 을 강제 변환 될 수 있습니다 `Byte`, `SByte`, `Int16`, `Int32`를 `Int64`, `UInt16`를 `UInt32`, `UInt64`, `String` 자체에 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-416">All conversions are valid with the following exceptions: `Boolean` can be coerced to and from `Byte`, `SByte`, `Int16`, `Int32`, `Int64`, `UInt16`, `UInt32`, `UInt64`, `String` and itself only.</span></span> <span data-ttu-id="b290a-417">`Char` 강제 변환 될 수 있습니다 `Int32`, `UInt32`, `String`, 및 자체입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-417">`Char` can be coerced to and from `Int32`, `UInt32`, `String`, and itself only.</span></span> <span data-ttu-id="b290a-418">`DateTime` 강제 변환할 수 `String` 및 자체입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-418">`DateTime` can be coerced to and from `String` and itself only.</span></span> <span data-ttu-id="b290a-419">`TimeSpan` 강제 변환할 수 `String` 및 자체입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-419">`TimeSpan` can be coerced to and from `String` and itself only.</span></span>  
  
 `LEN`  
  
|||  
|-|-|  
|<span data-ttu-id="b290a-420">설명</span><span class="sxs-lookup"><span data-stu-id="b290a-420">Description</span></span>|<span data-ttu-id="b290a-421">문자열의 길이 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-421">Gets the length of a string</span></span>|  
|<span data-ttu-id="b290a-422">구문</span><span class="sxs-lookup"><span data-stu-id="b290a-422">Syntax</span></span>|<span data-ttu-id="b290a-423">LEN (`expression`)</span><span class="sxs-lookup"><span data-stu-id="b290a-423">LEN(`expression`)</span></span>|  
|<span data-ttu-id="b290a-424">인수</span><span class="sxs-lookup"><span data-stu-id="b290a-424">Arguments</span></span>|<span data-ttu-id="b290a-425">`expression` -계산할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-425">`expression` -- The string to be evaluated.</span></span>|  
  
 <span data-ttu-id="b290a-426">예제: myDataColumn.Expression="Len(ItemName)"</span><span class="sxs-lookup"><span data-stu-id="b290a-426">Example: myDataColumn.Expression="Len(ItemName)"</span></span>  
  
 `ISNULL`  
  
|||  
|-|-|  
|<span data-ttu-id="b290a-427">설명</span><span class="sxs-lookup"><span data-stu-id="b290a-427">Description</span></span>|<span data-ttu-id="b290a-428">확인 된 식 또는 대체 값을 식과 반환을 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-428">Checks an expression and either returns the checked expression or a replacement value.</span></span>|  
|<span data-ttu-id="b290a-429">구문</span><span class="sxs-lookup"><span data-stu-id="b290a-429">Syntax</span></span>|<span data-ttu-id="b290a-430">ISNULL(`expression`, `replacementvalue`)</span><span class="sxs-lookup"><span data-stu-id="b290a-430">ISNULL(`expression`, `replacementvalue`)</span></span>|  
|<span data-ttu-id="b290a-431">인수</span><span class="sxs-lookup"><span data-stu-id="b290a-431">Arguments</span></span>|<span data-ttu-id="b290a-432">`expression` 확인 하려면--식입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-432">`expression` -- The expression to check.</span></span><br /><br /> <span data-ttu-id="b290a-433">`replacementvalue` -경우 식이 `null`, `replacementvalue` 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-433">`replacementvalue` -- If expression is `null`, `replacementvalue` is returned.</span></span>|  
  
 <span data-ttu-id="b290a-434">Example: myDataColumn.Expression="IsNull(price, -1)"</span><span class="sxs-lookup"><span data-stu-id="b290a-434">Example: myDataColumn.Expression="IsNull(price, -1)"</span></span>  
  
 `IIF`  
  
|||  
|-|-|  
|<span data-ttu-id="b290a-435">설명</span><span class="sxs-lookup"><span data-stu-id="b290a-435">Description</span></span>|<span data-ttu-id="b290a-436">논리 식의 결과 따라 두 값 중 하나를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-436">Gets one of two values depending on the result of a logical expression.</span></span>|  
|<span data-ttu-id="b290a-437">구문</span><span class="sxs-lookup"><span data-stu-id="b290a-437">Syntax</span></span>|<span data-ttu-id="b290a-438">IIF(`expr`, `truepart`, `falsepart`)</span><span class="sxs-lookup"><span data-stu-id="b290a-438">IIF(`expr`, `truepart`, `falsepart`)</span></span>|  
|<span data-ttu-id="b290a-439">인수</span><span class="sxs-lookup"><span data-stu-id="b290a-439">Arguments</span></span>|<span data-ttu-id="b290a-440">`expr` --평가할 식입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-440">`expr` -- The expression to evaluate.</span></span><br /><br /> <span data-ttu-id="b290a-441">`truepart` -식이 true 인 경우 반환할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-441">`truepart` -- The value to return if the expression is true.</span></span><br /><br /> <span data-ttu-id="b290a-442">`falsepart` -식이 false 인 경우 반환할 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-442">`falsepart` -- The value to return if the expression is false.</span></span>|  
  
 <span data-ttu-id="b290a-443">예: myDataColumn.Expression = "IIF (총 > '비용이 많이 드는', '님' 1000)</span><span class="sxs-lookup"><span data-stu-id="b290a-443">Example: myDataColumn.Expression = "IIF(total>1000, 'expensive', 'dear')</span></span>  
  
 `TRIM`  
  
|||  
|-|-|  
|<span data-ttu-id="b290a-444">설명</span><span class="sxs-lookup"><span data-stu-id="b290a-444">Description</span></span>|<span data-ttu-id="b290a-445">제거 모든 선행 및 후행 공백 문자 \r, \n, \t, ' '</span><span class="sxs-lookup"><span data-stu-id="b290a-445">Removes all leading and trailing blank characters like \r, \n, \t, ' '</span></span>|  
|<span data-ttu-id="b290a-446">구문</span><span class="sxs-lookup"><span data-stu-id="b290a-446">Syntax</span></span>|<span data-ttu-id="b290a-447">TRIM (`expression`)</span><span class="sxs-lookup"><span data-stu-id="b290a-447">TRIM(`expression`)</span></span>|  
|<span data-ttu-id="b290a-448">인수</span><span class="sxs-lookup"><span data-stu-id="b290a-448">Arguments</span></span>|<span data-ttu-id="b290a-449">`expression` --식 trim입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-449">`expression` -- The expression to trim.</span></span>|  
  
 `SUBSTRING`  
  
|||  
|-|-|  
|<span data-ttu-id="b290a-450">설명</span><span class="sxs-lookup"><span data-stu-id="b290a-450">Description</span></span>|<span data-ttu-id="b290a-451">문자열에 지정된 된 지점에서 시작 하 여 지정된 된 길이의 부분 문자열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-451">Gets a sub-string of a specified length, starting at a specified point in the string.</span></span>|  
|<span data-ttu-id="b290a-452">구문</span><span class="sxs-lookup"><span data-stu-id="b290a-452">Syntax</span></span>|<span data-ttu-id="b290a-453">부분 문자열 (`expression`하십시오 `start`, `length`)</span><span class="sxs-lookup"><span data-stu-id="b290a-453">SUBSTRING(`expression`, `start`, `length`)</span></span>|  
|<span data-ttu-id="b290a-454">인수</span><span class="sxs-lookup"><span data-stu-id="b290a-454">Arguments</span></span>|<span data-ttu-id="b290a-455">`expression` 부분 문자열에 대 한--원본 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-455">`expression` -- The source string for the substring.</span></span><br /><br /> <span data-ttu-id="b290a-456">`start` --부분 문자열의 시작 위치를 지정 하는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-456">`start` -- Integer that specifies where the substring starts.</span></span><br /><br /> <span data-ttu-id="b290a-457">`length` --부분 문자열의 길이 지정 하는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-457">`length` -- Integer that specifies the length of the substring.</span></span>|  
  
 <span data-ttu-id="b290a-458">예: myDataColumn.Expression = "(phone, 7, 8)"</span><span class="sxs-lookup"><span data-stu-id="b290a-458">Example: myDataColumn.Expression = "SUBSTRING(phone, 7, 8)"</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b290a-459">다시 설정할 수 있습니다는 <xref:System.Data.DataColumn.Expression%2A> null 값 이나 빈 문자열을 할당 하 여 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-459">You can reset the <xref:System.Data.DataColumn.Expression%2A> property by assigning it a null value or empty string.</span></span> <span data-ttu-id="b290a-460">식 열에서 기본 값이 설정에 모든 이전에 채워진된 행 후 기본 값이 할당 되는 <xref:System.Data.DataColumn.Expression%2A> 속성이 다시 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-460">If a default value is set on the expression column, all previously filled rows are assigned the default value after the <xref:System.Data.DataColumn.Expression%2A> property is reset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b290a-461">다음 예제에서는 세 개의 열에는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-461">The following example creates three columns in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="b290a-462">두 번째 및 세 번째 열 식이 포함 됩니다. 변수 세율을 사용 하 여 세금을 계산 하는 두 번째 및 세 번째 첫 번째 열 값 계산의 결과 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-462">The second and third columns contain expressions; the second calculates tax using a variable tax rate, and the third adds the result of the calculation to the value of the first column.</span></span> <span data-ttu-id="b290a-463">결과 테이블에 표시 됩니다는 <xref:System.Windows.Forms.DataGrid> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-463">The resulting table is displayed in a <xref:System.Windows.Forms.DataGrid> control.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Expression Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Expression Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Expression Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Expression Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b290a-464"><see cref="P:System.Data.DataColumn.AutoIncrement" /> 또는 <see cref="P:System.Data.DataColumn.Unique" /> 속성이 <see langword="true" />로 설정되어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="b290a-464">The <see cref="P:System.Data.DataColumn.AutoIncrement" /> or <see cref="P:System.Data.DataColumn.Unique" /> property is set to <see langword="true" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="b290a-465">CONVERT 함수를 사용하는 동안 식은 문자열로 계산되지만 문자열에 형식 매개 변수로 변환될 수 있는 표현이 포함되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="b290a-465">When you are using the CONVERT function, the expression evaluates to a string, but the string does not contain a representation that can be converted to the type parameter.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="b290a-466">CONVERT 함수를 사용하는 동안 요청된 캐스팅을 수행할 수 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="b290a-466">When you are using the CONVERT function, the requested cast is not possible.</span></span> <span data-ttu-id="b290a-467">가능한 캐스팅에 대한 자세한 내용은 다음 섹션에서 변환 함수를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="b290a-467">See the Conversion function in the following section for detailed information about possible casts.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b290a-468">SUBSTRING 함수를 사용하는 동안 시작 인수가 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="b290a-468">When you use the SUBSTRING function, the start argument is out of range.</span></span>  
  
<span data-ttu-id="b290a-469">-또는-</span><span class="sxs-lookup"><span data-stu-id="b290a-469">-Or-</span></span> 
<span data-ttu-id="b290a-470">SUBSTRING 함수를 사용하는 동안 길이 인수가 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="b290a-470">When you use the SUBSTRING function, the length argument is out of range.</span></span></exception>
        <exception cref="T:System.Exception"><span data-ttu-id="b290a-471">LEN 또는 TRIM 함수를 사용하는 동안 식이 문자열로 계산되지 않는 경우.</span><span class="sxs-lookup"><span data-stu-id="b290a-471">When you use the LEN function or the TRIM function, the expression does not evaluate to a string.</span></span> <span data-ttu-id="b290a-472">여기에는 <see cref="T:System.Char" />로 계산되는 식이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-472">This includes expressions that evaluate to <see cref="T:System.Char" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="b290a-473">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="b290a-473">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProperties">
      <MemberSignature Language="C#" Value="public System.Data.PropertyCollection ExtendedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.PropertyCollection ExtendedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ExtendedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtendedProperties As PropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::PropertyCollection ^ ExtendedProperties { System::Data::PropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProperties : System.Data.PropertyCollection" Usage="System.Data.DataColumn.ExtendedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("ExtendedPropertiesDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b290a-474"><see cref="T:System.Data.DataColumn" />과 관련된 사용자 지정 사용자 정보 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-474">Gets the collection of custom user information associated with a <see cref="T:System.Data.DataColumn" />.</span></span></summary>
        <value><span data-ttu-id="b290a-475">사용자 지정 정보의 <see cref="T:System.Data.PropertyCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-475">A <see cref="T:System.Data.PropertyCollection" /> of custom information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b290a-476"><xref:System.Data.DataColumn.ExtendedProperties%2A> 속성 개체를 사용 하 여 사용자 지정 정보를 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-476">The <xref:System.Data.DataColumn.ExtendedProperties%2A> property lets you store custom information with the object.</span></span> <span data-ttu-id="b290a-477">예를 들어, 데이터를 새로 고쳐야 할 시간을 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-477">For example, you may store a time when the data should be refreshed.</span></span>  
  
 <span data-ttu-id="b290a-478">확장된 속성 유형 이어야 <xref:System.String>합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-478">Extended properties must be of type <xref:System.String>.</span></span> <span data-ttu-id="b290a-479">가 아닌 형식의 속성에 <xref:System.String> 때 유지 되지 않습니다는 <xref:System.Data.DataColumn> XML로 작성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-479">Properties that are not of type <xref:System.String> are not persisted when the <xref:System.Data.DataColumn> is written as XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b290a-480">다음 예제에서는 사용자 지정 속성을 추가 합니다 <xref:System.Data.PropertyCollection> 반환한는 <xref:System.Data.DataColumn.ExtendedProperties%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-480">The following example adds a custom property to the <xref:System.Data.PropertyCollection> returned by the <xref:System.Data.DataColumn.ExtendedProperties%2A> property.</span></span> <span data-ttu-id="b290a-481">두 번째 예제 사용자 지정 속성을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-481">The second example retrieves the custom property.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.PropertyCollection" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="b290a-482">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="b290a-482">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Data.DataColumn.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnMaxLengthDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b290a-483">텍스트 열의 최대 길이를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-483">Gets or sets the maximum length of a text column.</span></span></summary>
        <value><span data-ttu-id="b290a-484">열의 최대 길이(문자 수)입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-484">The maximum length of the column in characters.</span></span> <span data-ttu-id="b290a-485">열 최대 길이가 없는 경우 값은-1 (기본값).</span><span class="sxs-lookup"><span data-stu-id="b290a-485">If the column has no maximum length, the value is -1 (default).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b290a-486"><xref:System.Data.DataColumn.MaxLength%2A> 텍스트가 아닌 열에 대 한 속성은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-486">The <xref:System.Data.DataColumn.MaxLength%2A> property is ignored for non-text columns.</span></span> <span data-ttu-id="b290a-487">A <xref:System.ArgumentException> 할당 하는 경우 예외가 발생 <xref:System.Data.DataColumn.MaxLength%2A> 문자열이 아닌 열에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-487">A <xref:System.ArgumentException> exception is raised if you assign <xref:System.Data.DataColumn.MaxLength%2A> to a non-string column.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="b290a-488">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="b290a-488">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Data.DataColumn.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnNamespaceDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b290a-489"><see cref="T:System.Data.DataColumn" />의 네임스페이스를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-489">Gets or sets the namespace of the <see cref="T:System.Data.DataColumn" />.</span></span></summary>
        <value><span data-ttu-id="b290a-490"><see cref="T:System.Data.DataColumn" />의 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-490">The namespace of the <see cref="T:System.Data.DataColumn" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b290a-491"><xref:System.Data.DataColumn.Namespace%2A> 속성은 읽기 및 쓰기를 XML로 문서화 하는 경우 사용을 <xref:System.Data.DataTable> 에 <xref:System.Data.DataSet> 사용 하 여를 <xref:System.Data.DataSet.ReadXml%2A>, <xref:System.Data.DataSet.WriteXml%2A>, <xref:System.Data.DataSet.ReadXmlSchema%2A>, 또는 <xref:System.Data.DataSet.WriteXmlSchema%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b290a-491">The <xref:System.Data.DataColumn.Namespace%2A> property is used when reading and writing an XML document into a <xref:System.Data.DataTable> in the <xref:System.Data.DataSet> using the <xref:System.Data.DataSet.ReadXml%2A>, <xref:System.Data.DataSet.WriteXml%2A>, <xref:System.Data.DataSet.ReadXmlSchema%2A>, or <xref:System.Data.DataSet.WriteXmlSchema%2A> methods.</span></span>  
  
 <span data-ttu-id="b290a-492">XML 문서의 네임 스페이스는 XML 특성 및 요소를 읽을 때 범위 하는 데 사용 되는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-492">The namespace of an XML document is used to scope XML attributes and elements when read into a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="b290a-493">예를 들어를 <xref:System.Data.DataSet> 스키마가 포함 되어 "myCompany," 네임 스페이스에는 문서에서 읽기 및 데이터를 읽을 하려고 시도 (사용 하 여는 <xref:System.Data.DataSet.ReadXml%2A> 메서드)은 네임 스페이스 "theirCompany." 문서에서</span><span class="sxs-lookup"><span data-stu-id="b290a-493">For example, a <xref:System.Data.DataSet> contains a schema read from a document that has the namespace "myCompany," and an attempt is made to read data (with the <xref:System.Data.DataSet.ReadXml%2A> method) from a document that has the namespace "theirCompany."</span></span> <span data-ttu-id="b290a-494">기존 스키마에 해당 하지 않는 모든 데이터는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-494">Any data that does not correspond to the existing schema will be ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b290a-495">네임스페이스에 데이터가 이미 있는 경우</span><span class="sxs-lookup"><span data-stu-id="b290a-495">The namespace already has data.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="b290a-496">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="b290a-496">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanging(class System.ComponentModel.PropertyChangedEventArgs pcevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanging (pcevent As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanging(System::ComponentModel::PropertyChangedEventArgs ^ pcevent);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanging : System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanging : System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="dataColumn.OnPropertyChanging pcevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcevent" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="pcevent"><span data-ttu-id="b290a-497">매개 변수 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-497">Parameter reference.</span></span></param>
        <summary><span data-ttu-id="b290a-498">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-498">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public int Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ordinal" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ordinal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Ordinal { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Ordinal : int" Usage="System.Data.DataColumn.Ordinal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnOrdinalDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b290a-499"><see cref="T:System.Data.DataColumnCollection" /> 컬렉션에서 0부터 시작하는 열의 위치를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-499">Gets the (zero-based) position of the column in the <see cref="T:System.Data.DataColumnCollection" /> collection.</span></span></summary>
        <value><span data-ttu-id="b290a-500">열 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-500">The position of the column.</span></span> <span data-ttu-id="b290a-501">열이 컬렉션의 멤버가 아니면 -1을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-501">Gets -1 if the column is not a member of a collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b290a-502">다음 예에서는 열의 열 서 수 이름과 데이터 형식을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-502">The following example returns the column name, ordinal, and data type of a column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Ordinal Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Ordinal Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Ordinal Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Ordinal Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="b290a-503">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="b290a-503">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string with get, set" Usage="System.Data.DataColumn.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnPrefixDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b290a-504"><see cref="T:System.Data.DataTable" /> 네임스페이스의 별칭인 XML 접두사를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-504">Gets or sets an XML prefix that aliases the namespace of the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <value><span data-ttu-id="b290a-505"><see cref="T:System.Data.DataTable" /> 네임스페이스의 XML 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-505">The XML prefix for the <see cref="T:System.Data.DataTable" /> namespace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b290a-506">합니다 <xref:System.Data.DataTable.Prefix%2A> 에 대 한 네임 스페이스에 속하는 요소를 식별 하는 XML 문서 전체에서 사용 됩니다는 <xref:System.Data.DataSet> 개체 (에서 설정 된는 <xref:System.Data.DataSet.Namespace%2A> 속성).</span><span class="sxs-lookup"><span data-stu-id="b290a-506">The <xref:System.Data.DataTable.Prefix%2A> is used throughout an XML document to identify elements which belong to the namespace for a <xref:System.Data.DataSet> object (as set by the <xref:System.Data.DataSet.Namespace%2A> property).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="b290a-507">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="b290a-507">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RaisePropertyChanging">
      <MemberSignature Language="C#" Value="protected internal void RaisePropertyChanging (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RaisePropertyChanging(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.RaisePropertyChanging(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RaisePropertyChanging (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void RaisePropertyChanging(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RaisePropertyChanging : string -&gt; unit" Usage="dataColumn.RaisePropertyChanging name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b290a-508">매개 변수 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-508">Parameter reference.</span></span></param>
        <summary><span data-ttu-id="b290a-509">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-509">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Data.DataColumn.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnReadOnlyDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b290a-510">테이블에 행을 추가한 후 열을 변경할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-510">Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.</span></span></summary>
        <value><span data-ttu-id="b290a-511">열이 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-511"><see langword="true" /> if the column is read only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b290a-512">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-512">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b290a-513">다음 예제는 <xref:System.Data.DataColumn> 설정 및 해당 <xref:System.Data.DataColumn.ReadOnly%2A> 속성 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-513">The following example creates a <xref:System.Data.DataColumn> and sets its <xref:System.Data.DataColumn.ReadOnly%2A> property `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b290a-514">속성이 계산 열에서 <see langword="false" />로 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="b290a-514">The property is set to <see langword="false" /> on a computed column.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.Unique" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="b290a-515">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="b290a-515">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetOrdinal">
      <MemberSignature Language="C#" Value="public void SetOrdinal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOrdinal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.SetOrdinal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOrdinal (ordinal As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOrdinal(int ordinal);" />
      <MemberSignature Language="F#" Value="member this.SetOrdinal : int -&gt; unit" Usage="dataColumn.SetOrdinal ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="b290a-516">지정된 서수입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-516">The specified ordinal.</span></span></param>
        <summary><span data-ttu-id="b290a-517"><see cref="T:System.Data.DataColumn" />의 서수나 위치를 지정된 서수나 위치로 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-517">Changes the ordinal or position of the <see cref="T:System.Data.DataColumn" /> to the specified ordinal or position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b290a-518"><xref:System.Data.DataColumn>의 서수나 위치를 지정된 서수나 위치로 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-518">Changes the ordinal or position of the <xref:System.Data.DataColumn> to the specified ordinal or position.</span></span> <span data-ttu-id="b290a-519">서 수가 0 보다 작거나 열-1 (마지막 열의 서 수 초과)의 기존 숫자 보다 큰 다음 잘못 된 <xref:System.ArgumentException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-519">If ordinal is less than 0 or greater than the existing number of columns - 1 (greater than the ordinal of the last column) then an Invalid <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="b290a-520">열의 서 수를 변경 하면 열은 열 컬렉션에서 새 위치로 이동 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-520">When you change a column's ordinal, the column is moved to the new position in the collection of columns.</span></span> <span data-ttu-id="b290a-521">열의 새 서 수에 맞게 이전 및 새 서 수 사이 모든 열 번호가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-521">Any columns between the previous and new ordinal will be renumbered, to adjust for a column's new ordinal.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="b290a-522">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="b290a-522">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ Table { System::Data::DataTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Table : System.Data.DataTable" Usage="System.Data.DataColumn.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnDataTableDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b290a-523">열이 속한 <see cref="T:System.Data.DataTable" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-523">Gets the <see cref="T:System.Data.DataTable" /> to which the column belongs to.</span></span></summary>
        <value><span data-ttu-id="b290a-524"><see cref="T:System.Data.DataTable" />이 속한 <see cref="T:System.Data.DataColumn" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-524">The <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataColumn" /> belongs to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b290a-525">부모 테이블을 반환 하는 다음 예제는 <xref:System.Data.DataColumn> 를 통해 해당 <xref:System.Data.DataColumn.Table%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-525">The following example returns the parent table of a <xref:System.Data.DataColumn> through its <xref:System.Data.DataColumn.Table%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Table Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Table Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Table Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Table Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataTable" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="b290a-526">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="b290a-526">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dataColumn.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b290a-527">열의 <see cref="P:System.Data.DataColumn.Expression" />이 있으면 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-527">Gets the <see cref="P:System.Data.DataColumn.Expression" /> of the column, if one exists.</span></span></summary>
        <returns><span data-ttu-id="b290a-528">속성이 설정되어 있으면 <see cref="P:System.Data.DataColumn.Expression" /> 값을 반환하고, 그렇지 않으면 <see cref="P:System.Data.DataColumn.ColumnName" /> 속성을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-528">The <see cref="P:System.Data.DataColumn.Expression" /> value, if the property is set; otherwise, the <see cref="P:System.Data.DataColumn.ColumnName" /> property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b290a-529">다음 예제에서는 합니다 <xref:System.Data.DataColumn.ToString%2A> 컬렉션의 각 멤버의 기본 문자열을 반환 하도록 속성 <xref:System.Data.DataColumn> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-529">The following example uses the <xref:System.Data.DataColumn.ToString%2A> property to return the default string of each member of a collection of <xref:System.Data.DataColumn> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="b290a-530">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="b290a-530">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Unique">
      <MemberSignature Language="C#" Value="public bool Unique { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Unique" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Unique" />
      <MemberSignature Language="VB.NET" Value="Public Property Unique As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Unique { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Unique : bool with get, set" Usage="System.Data.DataColumn.Unique" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnUniqueDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b290a-531">열의 각 행에 있는 값이 고유해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-531">Gets or sets a value that indicates whether the values in each row of the column must be unique.</span></span></summary>
        <value><span data-ttu-id="b290a-532">값이 고유해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-532"><see langword="true" /> if the value must be unique; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b290a-533">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-533">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b290a-534">이 속성이 false에서 true로 변경 되는 즉시 값이 고유한 지 확인 하려면이 열에 대해 unique 제약 조건을 만들어질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-534">As soon as this property is changed from false to true, a unique constraint will be created on this column to make sure that values are unique.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b290a-535">다음 예제에서는 새 <xref:System.Data.DataColumn>, 해당 속성을 설정 하 고 테이블의 열 컬렉션에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="b290a-535">The following example creates new <xref:System.Data.DataColumn>, sets its properties, and adds it to a table's columns collection.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Unique Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Unique Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Unique Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Unique Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b290a-536">열이 계산 열인 경우</span><span class="sxs-lookup"><span data-stu-id="b290a-536">The column is a calculated column.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
        <altmember cref="T:System.Data.UniqueConstraint" />
        <altmember cref="P:System.Data.DataTable.Constraints" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="b290a-537">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="b290a-537">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>