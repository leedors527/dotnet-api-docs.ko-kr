<Type Name="DataRow" FullName="System.Data.DataRow">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d9c6c073694a8cce8fe7b8101c4fe2b92069eb95" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58684934" /></Metadata><TypeSignature Language="C#" Value="public class DataRow" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataRow extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRow" />
  <TypeSignature Language="VB.NET" Value="Public Class DataRow" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataRow" />
  <TypeSignature Language="F#" Value="type DataRow = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="07f6e-101"><see cref="T:System.Data.DataTable" />의 데이터 행을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-101">Represents a row of data in a <see cref="T:System.Data.DataTable" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-102">합니다 <xref:System.Data.DataRow> 하 고 <xref:System.Data.DataColumn> 개체의 기본 구성 요소는는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-102">The <xref:System.Data.DataRow> and <xref:System.Data.DataColumn> objects are primary components of a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="07f6e-103">사용 합니다 <xref:System.Data.DataRow> 개체와 해당 속성 및 검색 및 평가; 및 삽입, 삭제 및의 값을 업데이트 하는 메서드는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-103">Use the <xref:System.Data.DataRow> object and its properties and methods to retrieve and evaluate; and insert, delete, and update the values in the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="07f6e-104"><xref:System.Data.DataRowCollection> 실제 나타냅니다 <xref:System.Data.DataRow> 개체를 <xref:System.Data.DataTable>, 및 <xref:System.Data.DataColumnCollection> 포함는 <xref:System.Data.DataColumn> 의 스키마를 설명 하는 개체는 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-104">The <xref:System.Data.DataRowCollection> represents the actual <xref:System.Data.DataRow> objects in the <xref:System.Data.DataTable>, and the <xref:System.Data.DataColumnCollection> contains the <xref:System.Data.DataColumn> objects that describe the schema of the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="07f6e-105">사용 하 여 오버 로드 된 <xref:System.Data.DataRow.Item%2A> 반환 값을 설정 하는 속성을 <xref:System.Data.DataColumn>입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-105">Use the overloaded <xref:System.Data.DataRow.Item%2A> property to return or set the value of a <xref:System.Data.DataColumn>.</span></span>  
  
 <span data-ttu-id="07f6e-106">사용 하 여는 <xref:System.Data.DataRow.HasVersion%2A> 하 고 <xref:System.Data.DataRow.IsNull%2A> 특정 행 값의 상태를 확인 하는 속성 및 <xref:System.Data.DataRow.RowState*> 부모를 기준으로 행의 상태를 확인 하려면 속성 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-106">Use the <xref:System.Data.DataRow.HasVersion%2A> and <xref:System.Data.DataRow.IsNull%2A> properties to determine the status of a particular row value, and the <xref:System.Data.DataRow.RowState*> property to determine the state of the row relative to its parent <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="07f6e-107">새 <xref:System.Data.DataRow>를 사용 합니다 <xref:System.Data.DataTable.NewRow%2A> 메서드의 <xref:System.Data.DataTable> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-107">To create a new <xref:System.Data.DataRow>, use the <xref:System.Data.DataTable.NewRow%2A> method of the <xref:System.Data.DataTable> object.</span></span> <span data-ttu-id="07f6e-108">새로 만든 후 <xref:System.Data.DataRow>를 사용 하 여는 <xref:System.Data.DataRowCollection.Add%2A> 새을 추가 하는 방법 <xref:System.Data.DataRow> 에 <xref:System.Data.DataRowCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-108">After creating a new <xref:System.Data.DataRow>, use the <xref:System.Data.DataRowCollection.Add%2A> method to add the new <xref:System.Data.DataRow> to the <xref:System.Data.DataRowCollection>.</span></span> <span data-ttu-id="07f6e-109">마지막으로 호출 합니다 <xref:System.Data.DataRow.AcceptChanges%2A> 메서드는 <xref:System.Data.DataTable> 추가 확인 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-109">Finally, call the <xref:System.Data.DataRow.AcceptChanges%2A> method of the <xref:System.Data.DataTable> object to confirm the addition.</span></span> <span data-ttu-id="07f6e-110">데이터를 추가 하는 방법에 대 한 자세한 내용은 <xref:System.Data.DataTable>를 참조 하세요 [DataTable에 데이터 추가](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-110">For more information about adding data to a <xref:System.Data.DataTable>, see [Adding Data to a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md).</span></span>  
  
 <span data-ttu-id="07f6e-111">삭제할 수 있습니다는 <xref:System.Data.DataRow> 에서 <xref:System.Data.DataRowCollection> 호출 하 여를 <xref:System.Data.DataRowCollection.Remove%2A> 메서드의 <xref:System.Data.DataRowCollection>, 또는 호출 하 여는 <xref:System.Data.DataRow.Delete%2A> 메서드의 <xref:System.Data.DataRow> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-111">You can delete a <xref:System.Data.DataRow> from the <xref:System.Data.DataRowCollection> by calling the <xref:System.Data.DataRowCollection.Remove%2A> method of the <xref:System.Data.DataRowCollection>, or by calling the <xref:System.Data.DataRow.Delete%2A> method of the <xref:System.Data.DataRow> object.</span></span> <span data-ttu-id="07f6e-112"><xref:System.Data.DataRowCollection.Remove%2A> 메서드 컬렉션에서 행을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-112">The <xref:System.Data.DataRowCollection.Remove%2A> method removes the row from the collection.</span></span> <span data-ttu-id="07f6e-113">반대로 <xref:System.Data.DataRow.Delete%2A> 표시는 <xref:System.Data.DataRow> 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-113">In contrast, <xref:System.Data.DataRow.Delete%2A> marks the <xref:System.Data.DataRow> for removal.</span></span> <span data-ttu-id="07f6e-114">호출할 때 실제 제거가 발생 <xref:System.Data.DataRow.AcceptChanges%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-114">The actual removal occurs when you call <xref:System.Data.DataRow.AcceptChanges%2A> method.</span></span> <span data-ttu-id="07f6e-115">호출 하 여 <xref:System.Data.DataRow.Delete%2A>를 실제로 삭제 하기 전에 제거 하도록 표시 된 행을 프로그래밍 방식으로 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-115">By calling <xref:System.Data.DataRow.Delete%2A>, you can programmatically check which rows are marked for removal before actually deleting them.</span></span> <span data-ttu-id="07f6e-116">자세한 내용은 [DataRow 삭제](~/docs/framework/data/adonet/dataset-datatable-dataview/datarow-deletion.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-116">For more information, see [DataRow Deletion](~/docs/framework/data/adonet/dataset-datatable-dataview/datarow-deletion.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-117">다음 예제에서는 새 <xref:System.Data.DataRow> 를 호출 하 여 합니다 <xref:System.Data.DataTable.NewRow%2A> 메서드를 <xref:System.Data.DataTable> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-117">The following example creates a new <xref:System.Data.DataRow> by calling the <xref:System.Data.DataTable.NewRow%2A> method of the <xref:System.Data.DataTable> object.</span></span>  
  
 [!code-csharp[Classic WebData DataRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="07f6e-118">이 유형은 다중 스레드 읽기 작업에 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-118">This type is safe for multithreaded read operations.</span></span> <span data-ttu-id="07f6e-119">모든 쓰기 작업을 동기화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-119">You must synchronize any write operations.</span></span></threadsafe>
    <altmember cref="M:System.Data.DataRow.AcceptChanges" />
    <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
    <altmember cref="T:System.Data.DataColumnCollection" />
    <altmember cref="T:System.Data.DataColumn" />
    <altmember cref="T:System.Data.DataRowView" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
    <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
    <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
    <altmember cref="T:System.Data.DataRowCollection" />
    <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="07f6e-120">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="07f6e-120">Using DataSets in ADO.NET</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal DataRow (System.Data.DataRowBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Data.DataRowBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (builder As DataRowBuilder)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; DataRow(System::Data::DataRowBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="new System.Data.DataRow : System.Data.DataRowBuilder -&gt; System.Data.DataRow" Usage="new System.Data.DataRow builder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Data.DataRowBuilder" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="07f6e-121">작성기입니다</span><span class="sxs-lookup"><span data-stu-id="07f6e-121">builder</span></span></param>
        <summary><span data-ttu-id="07f6e-122">DataRow의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-122">Initializes a new instance of the DataRow.</span></span> <span data-ttu-id="07f6e-123">작성기에서 행을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-123">Constructs a row from the builder.</span></span> <span data-ttu-id="07f6e-124">내부 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-124">Only for internal usage.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChanges">
      <MemberSignature Language="C#" Value="public void AcceptChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcceptChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.AcceptChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcceptChanges();" />
      <MemberSignature Language="F#" Value="member this.AcceptChanges : unit -&gt; unit" Usage="dataRow.AcceptChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07f6e-125"><see cref="M:System.Data.DataRow.AcceptChanges" />가 마지막으로 호출된 이후 이 행에서 변경된 내용을 모두 커밋합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-125">Commits all the changes made to this row since the last time <see cref="M:System.Data.DataRow.AcceptChanges" /> was called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-126">호출할 때 <xref:System.Data.DataRow.AcceptChanges%2A>, <xref:System.Data.DataRow.EndEdit%2A> 암시적으로 메서드는 편집을 끝냅니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-126">When invoking <xref:System.Data.DataRow.AcceptChanges%2A>, the <xref:System.Data.DataRow.EndEdit%2A> method is implicitly called to end any edits.</span></span> <span data-ttu-id="07f6e-127">경우는 <xref:System.Data.DataRow.RowState*> 행의 추가 또는 수정 된는 <xref:System.Data.DataRow.RowState*> 됩니다 Unchanged 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-127">If the <xref:System.Data.DataRow.RowState*> of the row was Added or Modified, the <xref:System.Data.DataRow.RowState*> becomes Unchanged.</span></span> <span data-ttu-id="07f6e-128">경우는 <xref:System.Data.DataRow.RowState*> 된 삭제 된 행이 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-128">If the <xref:System.Data.DataRow.RowState*> was Deleted, the row is removed.</span></span>  
  
 <span data-ttu-id="07f6e-129">자세한 내용은 <xref:System.Data.DataRow.BeginEdit%2A> 메서드를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="07f6e-129">See the <xref:System.Data.DataRow.BeginEdit%2A> method for more information.</span></span>  
  
 <span data-ttu-id="07f6e-130">합니다 <xref:System.Data.DataTable> 클래스에는 <xref:System.Data.DataTable.AcceptChanges%2A> 메서드는 전체 테이블 변경에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-130">The <xref:System.Data.DataTable> class also has an <xref:System.Data.DataTable.AcceptChanges%2A> method which affects changes made to the whole table.</span></span> <span data-ttu-id="07f6e-131">자세한 내용 및 적용 하 고 개별 데이터 행에 대 한 변경을 거부 하는 방법을 보여 주는 코드 예제를 참조 하세요 [AcceptChanges 및 RejectChanges](~/docs/framework/data/adonet/dataset-datatable-dataview/acceptchanges-and-rejectchanges.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-131">For more information and a code example that demonstrates how to accept and reject changes to individual data rows, see [AcceptChanges and RejectChanges](~/docs/framework/data/adonet/dataset-datatable-dataview/acceptchanges-and-rejectchanges.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-132">다음 예제에서는 먼저 새로 만듭니다 <xref:System.Data.DataTable> 하나의 열이 있는 단일 다음 만들고 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-132">The following example first creates a new <xref:System.Data.DataTable> with one column, and then creates a single <xref:System.Data.DataRow>.</span></span> <span data-ttu-id="07f6e-133">로 <xref:System.Data.DataRow> 는 생성, 추가, 수정 및 삭제, 해당 <xref:System.Data.DataRow.RowState*> 출력 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-133">As the <xref:System.Data.DataRow> is created, added, modified, and deleted, its <xref:System.Data.DataRow.RowState*> is printed.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException"><span data-ttu-id="07f6e-134">행이 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-134">The row does not belong to the table.</span></span></exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="07f6e-135">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="07f6e-135">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="dataRow.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07f6e-136"><see cref="T:System.Data.DataRow" /> 개체에 대한 편집 작업을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-136">Starts an edit operation on a <see cref="T:System.Data.DataRow" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-137">사용 된 <xref:System.Data.DataRow.BeginEdit%2A> 메서드를를 <xref:System.Data.DataRow> 편집 모드로 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-137">Use the <xref:System.Data.DataRow.BeginEdit%2A> method to put a <xref:System.Data.DataRow> into edit mode.</span></span> <span data-ttu-id="07f6e-138">이 모드에서는 이벤트 일시 중단 되어, 사용자가 유효성 검사 규칙을 트리거하지 않고 둘 이상의 행으로 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-138">In this mode, events are temporarily suspended, letting the user make changes to more than one row without triggering validation rules.</span></span> <span data-ttu-id="07f6e-139">예를 들어, 총 금액에 대 한 열 값 직불에 대 한 값 같음 인지 확인 하며 신용 행에 열을 하는 경우 사용자는 값을 커밋하고 하려고 할 때까지 행 값의 유효성 검사를 일시 중단을 편집 모드로 각 행을 넣을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-139">For example, if you must make sure that the value of the column for a total amount is equal to the values for the debit and credit columns in a row, you can put each row into edit mode to suspend the validation of the row values until the user tries to commit the values.</span></span>  
  
 <span data-ttu-id="07f6e-140"><xref:System.Data.DataRow.BeginEdit%2A> 메서드는 사용자는 데이터 바인딩된 컨트롤의 값을 변경할 때 암시적으로 호출 됩니다 합니다 <xref:System.Data.DataRow.EndEdit%2A> 메서드를 호출 하면 암시적으로 호출 됩니다는 <xref:System.Data.DataTable.AcceptChanges%2A> 에 대 한 메서드는 <xref:System.Data.DataTable> 개체.</span><span class="sxs-lookup"><span data-stu-id="07f6e-140">The <xref:System.Data.DataRow.BeginEdit%2A> method is called implicitly when the user changes the value of a data-bound control; the <xref:System.Data.DataRow.EndEdit%2A> method is called implicitly when you invoke the <xref:System.Data.DataTable.AcceptChanges%2A> method for the <xref:System.Data.DataTable> object.</span></span> <span data-ttu-id="07f6e-141">이 편집 모드에서의 <xref:System.Data.DataRow> 제안 된 값에 원래 및 새 표현을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-141">While in this edit mode, the <xref:System.Data.DataRow> stores representations of the original and new proposed values.</span></span> <span data-ttu-id="07f6e-142">따라서으로 <xref:System.Data.DataRow.EndEdit%2A> 메서드 호출 되지 않았습니다, 하나를 전달 하 여 원래 또는 제안 된 버전을 검색할 수 있습니다 `DataRowVersion.Original` 또는 `DataRowVersion.Proposed` 에 대 한 합니다 `version` 의 매개 변수는 <xref:System.Data.DataRow.Item%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-142">Therefore, as long as the <xref:System.Data.DataRow.EndEdit%2A> method has not been called, you can retrieve either the original or proposed version by passing either `DataRowVersion.Original` or `DataRowVersion.Proposed` for the `version` parameter of the <xref:System.Data.DataRow.Item%2A> property.</span></span> <span data-ttu-id="07f6e-143">호출 하 여이 시점에서 편집을 취소할 수도 있습니다는 <xref:System.Data.DataRow.CancelEdit%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-143">You can also cancel any edits at this point by invoking the <xref:System.Data.DataRow.CancelEdit%2A> method.</span></span>  
  
 <span data-ttu-id="07f6e-144">행에 원래 또는 제안 된 값을 포함 하는 경우를 확인 하려면 호출을 <xref:System.Data.DataRow.HasVersion%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-144">To see if the row contains an original or proposed value, call the <xref:System.Data.DataRow.HasVersion%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="07f6e-145">합니다 <xref:System.Data.DataRow.BeginEdit%2A> 메서드를 일시 중단 <xref:System.Data.DataTable.RowChanging> 이벤트 하지만 `delete` 작업 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-145">The <xref:System.Data.DataRow.BeginEdit%2A> method temporarily suspends <xref:System.Data.DataTable.RowChanging> events, but the `delete` operation does not.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-146">이 예에서는 간단한 만듭니다 <xref:System.Data.DataTable> 하나를 사용 하 여 <xref:System.Data.DataColumn> 및 5 <xref:System.Data.DataRow> 개체와 <xref:System.Data.UniqueConstraint>합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-146">The example creates a simple <xref:System.Data.DataTable> with one <xref:System.Data.DataColumn> and five <xref:System.Data.DataRow> objects, and a <xref:System.Data.UniqueConstraint>.</span></span> <span data-ttu-id="07f6e-147"><xref:System.Data.DataTable.RowChanged> 행의 값이 변경 되는 경우를 모니터링할 이벤트 처리기도 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-147">A <xref:System.Data.DataTable.RowChanged> event handler is also added to monitor when the row's value is changing.</span></span> <span data-ttu-id="07f6e-148">호출 후 <xref:System.Data.DataRow.BeginEdit%2A> 기존 행의 제약 조건 및 이벤트를 일시적으로 비활성화 되 고 원래 및 제안 된 값이 출력 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-148">After invoking <xref:System.Data.DataRow.BeginEdit%2A> on the existing rows, the constraint and event are temporarily disabled and the original and proposed values are printed.</span></span> <span data-ttu-id="07f6e-149"><xref:System.Data.DataRow.BeginEdit%2A> 동일한 값으로 두 개의 행을 설정 하려면 다시 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-149">The <xref:System.Data.DataRow.BeginEdit%2A> is again invoked to set two rows to the same value.</span></span> <span data-ttu-id="07f6e-150">때 <xref:System.Data.DataRow.EndEdit%2A> 가 호출 된 <xref:System.Data.UniqueConstraint> 동일한 값에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-150">When <xref:System.Data.DataRow.EndEdit%2A> is called, the <xref:System.Data.UniqueConstraint> is enforced on the identical values.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException"><span data-ttu-id="07f6e-151"><see cref="E:System.Data.DataTable.RowChanging" /> 이벤트 내부에서 메서드를 호출한 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-151">The method was called inside the <see cref="E:System.Data.DataTable.RowChanging" /> event.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="07f6e-152">삭제된 행에서 메서드를 호출한 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-152">The method was called upon a deleted row.</span></span></exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="07f6e-153">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="07f6e-153">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="dataRow.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07f6e-154">행의 현재 편집을 취소합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-154">Cancels the current edit on the row.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-155">자세한 내용은 <xref:System.Data.DataRow.BeginEdit%2A> 메서드를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="07f6e-155">See the <xref:System.Data.DataRow.BeginEdit%2A> method for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-156">마지막 행의 열이 하나의 값을 편집 하는 다음 예제는 <xref:System.Windows.Forms.DataGrid> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-156">The following example edits the value of one column in the last row of a <xref:System.Windows.Forms.DataGrid> control.</span></span> <span data-ttu-id="07f6e-157">이 예제에서는 사용 합니다 <xref:System.Data.DataRow.BeginEdit%2A>, <xref:System.Data.DataRow.EndEdit%2A>, 방법 열 값을 편집 하 고 행의 변경 내용을 커밋합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-157">The example uses the <xref:System.Data.DataRow.BeginEdit%2A>, <xref:System.Data.DataRow.EndEdit%2A>, methods to edit the column's value and commit the change to the row.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException"><span data-ttu-id="07f6e-158"><see cref="E:System.Data.DataTable.RowChanging" /> 이벤트 내부에서 메서드를 호출한 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-158">The method was called inside the <see cref="E:System.Data.DataTable.RowChanging" /> event.</span></span></exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="07f6e-159">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="07f6e-159">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ClearErrors">
      <MemberSignature Language="C#" Value="public void ClearErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.ClearErrors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearErrors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearErrors();" />
      <MemberSignature Language="F#" Value="member this.ClearErrors : unit -&gt; unit" Usage="dataRow.ClearErrors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07f6e-160">행의 오류를 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-160">Clears the errors for the row.</span></span> <span data-ttu-id="07f6e-161">여기에는 <see cref="P:System.Data.DataRow.RowError" /> 및 <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />와 함께 설정된 오류가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-161">This includes the <see cref="P:System.Data.DataRow.RowError" /> and errors set with <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-162">사용 하 여 <xref:System.Data.DataRow.SetColumnError%2A> 고 <xref:System.Data.DataRow.GetColumnError%2A> 설정 하 고 개별 열에 대 한 오류를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-162">Use <xref:System.Data.DataRow.SetColumnError%2A> and <xref:System.Data.DataRow.GetColumnError%2A> to set and return errors for individual columns.</span></span>  
  
 <span data-ttu-id="07f6e-163">설정 된 <xref:System.Data.DataRow.RowError%2A> 속성을 전체 행에 적용 되는 오류를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-163">Set the <xref:System.Data.DataRow.RowError%2A> property to set an error that applies to the whole row.</span></span>  
  
 <span data-ttu-id="07f6e-164">열 컬렉션에 대 한 오류가 있는지 확인 하려면 사용 된 <xref:System.Data.DataRow.HasErrors%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-164">To determine whether any errors exist for the columns collection, use the <xref:System.Data.DataRow.HasErrors%2A> method.</span></span> <span data-ttu-id="07f6e-165">결과적으로 사용할 수 있습니다는 <xref:System.Data.DataRow.GetColumnsInError%2A> 오류를 사용 하 여 모든 열을 검색 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-165">Consequently, you can use the <xref:System.Data.DataRow.GetColumnsInError%2A> method to retrieve all the columns with errors.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-166">다음 예제에서는 <xref:System.Data.DataRow.HasErrors%2A> 오류 찾는 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-166">The following example uses the <xref:System.Data.DataRow.HasErrors%2A> to look for errors.</span></span> <span data-ttu-id="07f6e-167">행에 오류가 있는 경우는 <xref:System.Data.DataRow.GetColumnsInError%2A> 메서드 확인 될 수 있는 오류를 사용 하 여 열의 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-167">If the row has errors, the <xref:System.Data.DataRow.GetColumnsInError%2A> method returns the array of columns with errors that can then be resolved.</span></span> <span data-ttu-id="07f6e-168"><xref:System.Data.DataRow.ClearErrors%2A> 다음 메서드는 모든 오류를 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-168">The <xref:System.Data.DataRow.ClearErrors%2A> method is then called to clear all errors.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="07f6e-169">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="07f6e-169">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; unit" Usage="dataRow.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07f6e-170"><see cref="T:System.Data.DataRow" />를 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-170">Deletes the <see cref="T:System.Data.DataRow" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-171">경우는 <xref:System.Data.DataRow.RowState*> 행의 추가 합니다 <xref:System.Data.DataRow.RowState*> 됩니다 `Detached` 호출 하는 경우 테이블에서 행이 제거 되 고 <xref:System.Data.DataRow.AcceptChanges%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-171">If the <xref:System.Data.DataRow.RowState*> of the row is Added, the <xref:System.Data.DataRow.RowState*> becomes `Detached` and the row is removed from the table when you call <xref:System.Data.DataRow.AcceptChanges%2A>.</span></span>  
  
 <span data-ttu-id="07f6e-172">합니다 <xref:System.Data.DataRow.RowState*> 됩니다 `Deleted` 를 사용 하 여 합니다 <xref:System.Data.DataRow.Delete%2A> 기존 메서드 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-172">The <xref:System.Data.DataRow.RowState*> becomes `Deleted` after you use the <xref:System.Data.DataRow.Delete%2A> method on an existing <xref:System.Data.DataRow>.</span></span> <span data-ttu-id="07f6e-173">남아 `Deleted` 호출할 때까지 <xref:System.Data.DataRow.AcceptChanges%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-173">It remains `Deleted` until you call <xref:System.Data.DataRow.AcceptChanges%2A>.</span></span> <span data-ttu-id="07f6e-174">이번에 <xref:System.Data.DataRow> 테이블에서 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-174">At this time, the <xref:System.Data.DataRow> is removed from the table.</span></span>  
  
 <span data-ttu-id="07f6e-175"><xref:System.Data.DataRow.Delete%2A> 호출할 수 없습니다는 foreach 루프에서 반복 하는 동안는 <xref:System.Data.DataRowCollection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-175"><xref:System.Data.DataRow.Delete%2A> should not be called in a foreach loop while iterating through a <xref:System.Data.DataRowCollection> object.</span></span> <span data-ttu-id="07f6e-176"><xref:System.Data.DataRow.Delete%2A> 컬렉션의 상태를 수정합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-176"><xref:System.Data.DataRow.Delete%2A> modifies the state of the collection.</span></span>  
  
 <span data-ttu-id="07f6e-177">호출 하 여 삭제 된 행 삭제를 취소 수 <xref:System.Data.DataRow.RejectChanges%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-177">A deleted row can be undeleted by invoking <xref:System.Data.DataRow.RejectChanges%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="07f6e-178">합니다 <xref:System.Data.DataRow.BeginEdit%2A> 메서드를 일시 중단 <xref:System.Data.DataTable.RowChanging> 이벤트 했지만 삭제 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-178">The <xref:System.Data.DataRow.BeginEdit%2A> method temporarily suspends <xref:System.Data.DataTable.RowChanging> events, but the delete operation does not.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-179">다음 예제에서는 간단한 <xref:System.Data.DataTable> 10 개의 행과 두 열입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-179">The following example creates a simple <xref:System.Data.DataTable> with two columns and ten rows.</span></span> <span data-ttu-id="07f6e-180">여러 삭제 한 후 <xref:System.Data.DataRow> 항목을 합니다 <xref:System.Data.DataRow.Delete%2A> 행 중 하나는 메서드를 호출 하 여 삭제를 취소 <xref:System.Data.DataRow.RejectChanges%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-180">After deleting several <xref:System.Data.DataRow> items with the <xref:System.Data.DataRow.Delete%2A> method, one of the rows is undeleted by invoking <xref:System.Data.DataRow.RejectChanges%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="07f6e-181"><see cref="T:System.Data.DataRow" />가 이미 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-181">The <see cref="T:System.Data.DataRow" /> has already been deleted.</span></span></exception>
        <altmember cref="T:System.Data.DataRowState" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="07f6e-182">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="07f6e-182">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.EndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit();" />
      <MemberSignature Language="F#" Value="member this.EndEdit : unit -&gt; unit" Usage="dataRow.EndEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07f6e-183">행에서 수행 중인 편집을 끝냅니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-183">Ends the edit occurring on the row.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-184">예외가 발생할 경우 예외가 생성 됩니다 속성을 설정 하는 경우는 <xref:System.Data.DataTable.RowChanging> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-184">When you set the property, an exception is generated if an exception occurs in the <xref:System.Data.DataTable.RowChanging> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-185">다음 예제에서는 합니다 <xref:System.Data.DataRow.EndEdit%2A> 의 편집을 종료 하는 방법을 <xref:System.Data.DataRow> 유효성 검사 함수가 true 반환 값입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-185">The following example uses the <xref:System.Data.DataRow.EndEdit%2A> method to end the edit of a <xref:System.Data.DataRow> value if the validation function returns true.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException"><span data-ttu-id="07f6e-186"><see cref="E:System.Data.DataTable.RowChanging" /> 이벤트 내부에서 메서드를 호출한 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-186">The method was called inside the <see cref="E:System.Data.DataTable.RowChanging" /> event.</span></span></exception>
        <exception cref="T:System.Data.ConstraintException"><span data-ttu-id="07f6e-187">제약 조건을 위반하여 편집한 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-187">The edit broke a constraint.</span></span></exception>
        <exception cref="T:System.Data.ReadOnlyException"><span data-ttu-id="07f6e-188">행이 테이블에 속해 있으며 편집 중에 읽기 전용 열의 값을 변경하려고 한 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-188">The row belongs to the table and the edit tried to change the value of a read-only column.</span></span></exception>
        <exception cref="T:System.Data.NoNullAllowedException"><span data-ttu-id="07f6e-189">편집 중에 <see cref="P:System.Data.DataColumn.AllowDBNull" />이 false인 열에 null 값을 지정하려고 한 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-189">The edit tried to put a null value into a column where <see cref="P:System.Data.DataColumn.AllowDBNull" /> is false.</span></span></exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="07f6e-190">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="07f6e-190">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07f6e-191"><see cref="T:System.Data.DataRow" />의 자식 행을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-191">Gets the child rows of a <see cref="T:System.Data.DataRow" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relation As DataRelation) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : System.Data.DataRelation -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation"><span data-ttu-id="07f6e-192">사용할 <see cref="T:System.Data.DataRelation" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-192">The <see cref="T:System.Data.DataRelation" /> to use.</span></span></param>
        <summary><span data-ttu-id="07f6e-193">지정된 <see cref="T:System.Data.DataRow" />을 사용하여 이 <see cref="T:System.Data.DataRelation" />의 자식 행을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-193">Gets the child rows of this <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />.</span></span></summary>
        <returns><span data-ttu-id="07f6e-194"><see cref="T:System.Data.DataRow" /> 개체로 이루어진 배열 또는 길이가 0인 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-194">An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-195"><xref:System.Data.DataTable> 의 컬렉션도 포함 <xref:System.Data.DataRelation> 에서 반환 되는 개체는 <xref:System.Data.DataTable.ChildRelations%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-195">The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.DataRelation> objects that is returned by the <xref:System.Data.DataTable.ChildRelations%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-196">다음 예제에서는 합니다 <xref:System.Data.DataRow.GetChildRows%2A> 자식 반환할 <xref:System.Data.DataRow> 모든 자식에 대 한 개체 <xref:System.Data.DataRelation> 에 <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="07f6e-196">The following example uses the <xref:System.Data.DataRow.GetChildRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="07f6e-197">행의 각 열 값이 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-197">The value of each column in the row is then printed.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="07f6e-198">관계와 행이 같은 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-198">The relation and row do not belong to the same table.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07f6e-199">관계가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-199">The relation is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Data.RowNotInTableException"><span data-ttu-id="07f6e-200">행이 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-200">The row does not belong to the table.</span></span></exception>
        <exception cref="T:System.Data.VersionNotFoundException"><span data-ttu-id="07f6e-201">행에 이 버전의 데이터가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-201">The row does not have this version of data.</span></span></exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="07f6e-202">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="07f6e-202">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relationName As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : string -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName"><span data-ttu-id="07f6e-203">사용할 <see cref="P:System.Data.DataRelation.RelationName" />의 <see cref="T:System.Data.DataRelation" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-203">The <see cref="P:System.Data.DataRelation.RelationName" /> of the <see cref="T:System.Data.DataRelation" /> to use.</span></span></param>
        <summary><span data-ttu-id="07f6e-204"><see cref="T:System.Data.DataRow" />의 지정된 <see cref="P:System.Data.DataRelation.RelationName" />을 사용하여 <see cref="T:System.Data.DataRelation" />의 자식 행을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-204">Gets the child rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</span></span></summary>
        <returns><span data-ttu-id="07f6e-205"><see cref="T:System.Data.DataRow" /> 개체로 이루어진 배열 또는 길이가 0인 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-205">An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-206"><xref:System.Data.DataTable> 의 컬렉션도 포함 <xref:System.Data.DataRelation> 에서 반환 되는 개체는 <xref:System.Data.DataTable.ChildRelations%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-206">The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.DataRelation> objects that is returned by the <xref:System.Data.DataTable.ChildRelations%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="07f6e-207">관계와 행이 같은 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-207">The relation and row do not belong to the same table.</span></span></exception>
        <exception cref="T:System.Data.RowNotInTableException"><span data-ttu-id="07f6e-208">행이 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-208">The row does not belong to the table.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relation As DataRelation, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation"><span data-ttu-id="07f6e-209">사용할 <see cref="T:System.Data.DataRelation" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-209">The <see cref="T:System.Data.DataRelation" /> to use.</span></span></param>
        <param name="version"><span data-ttu-id="07f6e-210">가져올 데이터의 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-210">One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get.</span></span> <span data-ttu-id="07f6e-211">가능한 값은 <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> 및 <see langword="Proposed" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-211">Possible values are <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, and <see langword="Proposed" />.</span></span></param>
        <summary><span data-ttu-id="07f6e-212">지정된 <see cref="T:System.Data.DataRow" />과 <see cref="T:System.Data.DataRelation" />을 사용하여 <see cref="T:System.Data.DataRowVersion" />의 자식 행을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-212">Gets the child rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</span></span></summary>
        <returns><span data-ttu-id="07f6e-213"><see cref="T:System.Data.DataRow" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-213">An array of <see cref="T:System.Data.DataRow" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-214"><xref:System.Data.DataTable> 의 컬렉션도 포함 <xref:System.Data.DataRelation> 에서 반환 되는 개체는 <xref:System.Data.DataTable.ChildRelations%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-214">The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.DataRelation> objects that is returned by the <xref:System.Data.DataTable.ChildRelations%2A> property.</span></span>  
  
 <span data-ttu-id="07f6e-215">사용 합니다 <xref:System.Data.DataRow.HasVersion%2A> 속성을 여부를 <xref:System.Data.DataRowVersion> 존재 한다고 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-215">Use the <xref:System.Data.DataRow.HasVersion%2A> property to determine whether the <xref:System.Data.DataRowVersion> that you want exists.</span></span>  
  
 <span data-ttu-id="07f6e-216">하는 경우 <xref:System.Data.DataRowVersion.Default> 지정 된 경우 사용 되는 버전에 따라 달라 집니다 합니다 <xref:System.Data.DataRow.RowState*> 되는 행의 `GetChildRows` 가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-216">If <xref:System.Data.DataRowVersion.Default> is specified, the version that is used depends on the <xref:System.Data.DataRow.RowState*> of the row on which `GetChildRows` is invoked.</span></span> <span data-ttu-id="07f6e-217">경우 되는 행 `GetChildRows` 가 호출에 `RowState` 의 `Modified`, `New`, 또는 `Unchanged`, <xref:System.Data.DataRowVersion.Current> 행의 버전이 현재 버전의 값을 일치 하는 관련 된 자식 행을 인출 하는 것에 대 한 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-217">If the row on which `GetChildRows` is invoked has a `RowState` of `Modified`, `New`, or `Unchanged`, the <xref:System.Data.DataRowVersion.Current> version of the row is used for fetching related child rows with matching values in their Current versions.</span></span> <span data-ttu-id="07f6e-218">경우 되는 행 `GetChildRows` 가 호출에 `RowState` 의 `Deleted`, <xref:System.Data.DataRowVersion.Original> 행 버전을 원래 버전에 대 한 값을 일치 하는 관련 된 자식 행을 페치하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-218">If the row on which `GetChildRows` is invoked has a `RowState` of `Deleted`, the <xref:System.Data.DataRowVersion.Original> version of the row is used for fetching related child rows with matching values in their original versions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-219">다음 예제에서는 합니다 <xref:System.Data.DataRow.GetChildRows%2A> 자식 반환할 <xref:System.Data.DataRow> 모든 자식에 대 한 개체 <xref:System.Data.DataRelation> 에 <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="07f6e-219">The following example uses the <xref:System.Data.DataRow.GetChildRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="07f6e-220">그런 다음 행에서 지정된 된 버전을 사용 하 여 각 열의 값 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-220">The value of each column with the specified version in the row is then printed.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="07f6e-221">관계와 행이 같은 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-221">The relation and row do not belong to the same table.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07f6e-222"><paramref name="relation" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-222">The <paramref name="relation" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Data.RowNotInTableException"><span data-ttu-id="07f6e-223">행이 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-223">The row does not belong to the table.</span></span></exception>
        <exception cref="T:System.Data.VersionNotFoundException"><span data-ttu-id="07f6e-224">행에 요청한 <see cref="T:System.Data.DataRowVersion" />이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-224">The row does not have the requested <see cref="T:System.Data.DataRowVersion" />.</span></span></exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="07f6e-225">ADO.NET에서 데이터 세트 사용</span><span class="sxs-lookup"><span data-stu-id="07f6e-225">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relationName As String, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : string * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName"><span data-ttu-id="07f6e-226">사용할 <see cref="P:System.Data.DataRelation.RelationName" />의 <see cref="T:System.Data.DataRelation" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-226">The <see cref="P:System.Data.DataRelation.RelationName" /> of the <see cref="T:System.Data.DataRelation" /> to use.</span></span></param>
        <param name="version"><span data-ttu-id="07f6e-227">가져올 데이터의 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-227">One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get.</span></span> <span data-ttu-id="07f6e-228">가능한 값은 <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> 및 <see langword="Proposed" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-228">Possible values are <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, and <see langword="Proposed" />.</span></span></param>
        <summary><span data-ttu-id="07f6e-229"><see cref="T:System.Data.DataRow" />의 지정된 <see cref="P:System.Data.DataRelation.RelationName" />과 <see cref="T:System.Data.DataRelation" />을 사용하여 <see cref="T:System.Data.DataRowVersion" />의 자식 행을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-229">Gets the child rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</span></span></summary>
        <returns><span data-ttu-id="07f6e-230"><see cref="T:System.Data.DataRow" /> 개체로 이루어진 배열 또는 길이가 0인 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-230">An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-231"><xref:System.Data.DataTable> 의 컬렉션도 포함 <xref:System.Data.DataRelation> 에서 반환 되는 개체는 <xref:System.Data.DataTable.ChildRelations%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-231">The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.DataRelation> objects that is returned by the <xref:System.Data.DataTable.ChildRelations%2A> property.</span></span>  
  
 <span data-ttu-id="07f6e-232">사용 합니다 <xref:System.Data.DataRow.HasVersion%2A> 속성을 여부를 <xref:System.Data.DataRowVersion> 존재 한다고 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-232">Use the <xref:System.Data.DataRow.HasVersion%2A> property to determine whether the <xref:System.Data.DataRowVersion> that you want exists.</span></span>  
  
 <span data-ttu-id="07f6e-233">하는 경우 <xref:System.Data.DataRowVersion.Default> 지정 된 경우 사용 되는 버전에 따라 달라 집니다 합니다 <xref:System.Data.DataRow.RowState*> 되는 행의 `GetChildRows` 가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-233">If <xref:System.Data.DataRowVersion.Default> is specified, the version that is used depends on the <xref:System.Data.DataRow.RowState*> of the row on which `GetChildRows` is invoked.</span></span> <span data-ttu-id="07f6e-234">경우 되는 행 `GetChildRows` 가 호출에 `RowState` 의 `Modified`, `New`, 또는 `Unchanged`, <xref:System.Data.DataRowVersion.Current> 행의 버전이 현재 버전의 값을 일치 하는 관련 된 자식 행을 인출 하는 것에 대 한 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-234">If the row on which `GetChildRows` is invoked has a `RowState` of `Modified`, `New`, or `Unchanged`, the <xref:System.Data.DataRowVersion.Current> version of the row is used for fetching related child rows with matching values in their Current versions.</span></span> <span data-ttu-id="07f6e-235">경우 되는 행 `GetChildRows` 가 호출에 `RowState` 의 `Deleted`, <xref:System.Data.DataRowVersion.Original> 행 버전을 원래 버전에 대 한 값을 일치 하는 관련 된 자식 행을 페치하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-235">If the row on which `GetChildRows` is invoked has a `RowState` of `Deleted`, the <xref:System.Data.DataRowVersion.Original> version of the row is used for fetching related child rows with matching values in their original versions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="07f6e-236">관계와 행이 같은 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-236">The relation and row do not belong to the same table.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07f6e-237"><paramref name="relation" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-237">The <paramref name="relation" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Data.RowNotInTableException"><span data-ttu-id="07f6e-238">행이 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-238">The row does not belong to the table.</span></span></exception>
        <exception cref="T:System.Data.VersionNotFoundException"><span data-ttu-id="07f6e-239">행에 요청한 <see cref="T:System.Data.DataRowVersion" />이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-239">The row does not have the requested <see cref="T:System.Data.DataRowVersion" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07f6e-240">열에 대한 오류 설명을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-240">Gets the error description for a column.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (column As DataColumn) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : System.Data.DataColumn -&gt; string" Usage="dataRow.GetColumnError column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column"><span data-ttu-id="07f6e-241"><see cref="T:System.Data.DataColumn" /></span><span class="sxs-lookup"><span data-stu-id="07f6e-241">A <see cref="T:System.Data.DataColumn" />.</span></span></param>
        <summary><span data-ttu-id="07f6e-242">지정된 <see cref="T:System.Data.DataColumn" />의 오류 설명을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-242">Gets the error description of the specified <see cref="T:System.Data.DataColumn" />.</span></span></summary>
        <returns><span data-ttu-id="07f6e-243">오류 설명 텍스트를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-243">The text of the error description.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-244">사용 된 <xref:System.Data.DataRow.SetColumnError%2A> 열 오류를 설정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-244">Use the <xref:System.Data.DataRow.SetColumnError%2A> method to set column errors.</span></span>  
  
 <span data-ttu-id="07f6e-245">열 컬렉션에 대 한 오류가 있는지 확인 하려면 사용 된 <xref:System.Data.DataRow.HasErrors%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-245">To determine whether any errors exist for the columns collection, use the <xref:System.Data.DataRow.HasErrors%2A> method.</span></span> <span data-ttu-id="07f6e-246">결과적으로 사용할 수 있습니다는 <xref:System.Data.DataRow.GetColumnsInError%2A> 오류를 사용 하 여 모든 열을 검색 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-246">Consequently, you can use the <xref:System.Data.DataRow.GetColumnsInError%2A> method to retrieve all the columns with errors.</span></span> <span data-ttu-id="07f6e-247">또는 합니다 <xref:System.Data.DataTable.GetErrors%2A> 메서드는 <xref:System.Data.DataTable> 오류를 사용 하 여 모든 행을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-247">Alternatively, the <xref:System.Data.DataTable.GetErrors%2A> method of the <xref:System.Data.DataTable> returns all rows with errors.</span></span>  
  
 <span data-ttu-id="07f6e-248">사용 하 여 열 컬렉션에 대 한 모든 오류를 지우려면는 <xref:System.Data.DataRow.ClearErrors%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-248">To clear all errors for the columns collection, use the <xref:System.Data.DataRow.ClearErrors%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-249">다음 예제에서는 지정 된 오류 설명을 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-249">The following example sets an error description for a specified <xref:System.Data.DataRow>.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (columnIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : int -&gt; string" Usage="dataRow.GetColumnError columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex"><span data-ttu-id="07f6e-250">열의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-250">The zero-based index of the column.</span></span></param>
        <summary><span data-ttu-id="07f6e-251">지정된 인덱스를 가진 열의 오류 설명을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-251">Gets the error description for the column specified by index.</span></span></summary>
        <returns><span data-ttu-id="07f6e-252">오류 설명 텍스트를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-252">The text of the error description.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-253">사용 된 <xref:System.Data.DataRow.SetColumnError%2A> 열 오류를 설정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-253">Use the <xref:System.Data.DataRow.SetColumnError%2A> method to set column errors.</span></span>  
  
 <span data-ttu-id="07f6e-254">열 컬렉션에 대 한 오류가 있는지 확인 하려면 사용 된 <xref:System.Data.DataRow.HasErrors%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-254">To determine whether any errors exist for the columns collection, use the <xref:System.Data.DataRow.HasErrors%2A> method.</span></span> <span data-ttu-id="07f6e-255">결과적으로 사용할 수 있습니다는 <xref:System.Data.DataRow.GetColumnsInError%2A> 오류를 사용 하 여 모든 열을 검색 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-255">Consequently, you can use the <xref:System.Data.DataRow.GetColumnsInError%2A> method to retrieve all the columns with errors.</span></span>  
  
 <span data-ttu-id="07f6e-256">사용 하 여 열 컬렉션에 대 한 모든 오류를 지우려면는 <xref:System.Data.DataRow.ClearErrors%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-256">To clear all errors for the columns collection, use the <xref:System.Data.DataRow.ClearErrors%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-257">다음 예제에서는 지정 된 오류 설명을 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-257">The following example sets an error description for a specified <xref:System.Data.DataRow>.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="07f6e-258"><paramref name="columnIndex" /> 인수가 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-258">The <paramref name="columnIndex" /> argument is out of range.</span></span></exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (columnName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : string -&gt; string" Usage="dataRow.GetColumnError columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="07f6e-259">열 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-259">The name of the column.</span></span></param>
        <summary><span data-ttu-id="07f6e-260">지정된 이름을 가진 열의 오류 설명을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-260">Gets the error description for a column, specified by name.</span></span></summary>
        <returns><span data-ttu-id="07f6e-261">오류 설명 텍스트를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-261">The text of the error description.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-262">사용 된 <xref:System.Data.DataRow.SetColumnError%2A> 열 오류를 설정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-262">Use the <xref:System.Data.DataRow.SetColumnError%2A> method to set column errors.</span></span>  
  
 <span data-ttu-id="07f6e-263">열 컬렉션에 대 한 오류가 있는지 확인 하려면 사용 된 <xref:System.Data.DataRow.HasErrors%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-263">To determine whether any errors exist for the columns collection, use the <xref:System.Data.DataRow.HasErrors%2A> method.</span></span> <span data-ttu-id="07f6e-264">결과적으로 사용할 수 있습니다는 <xref:System.Data.DataRow.GetColumnsInError%2A> 오류를 사용 하 여 모든 열을 검색 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-264">Consequently, you can use the <xref:System.Data.DataRow.GetColumnsInError%2A> method to retrieve all the columns with errors.</span></span>  
  
 <span data-ttu-id="07f6e-265">사용 하 여 열 컬렉션에 대 한 모든 오류를 지우려면는 <xref:System.Data.DataRow.ClearErrors%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-265">To clear all errors for the columns collection, use the <xref:System.Data.DataRow.ClearErrors%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-266">다음 예제에서는 지정 된 오류 설명을 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-266">The following example sets an error description for a specified <xref:System.Data.DataRow>.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnsInError">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn[] GetColumnsInError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataColumn[] GetColumnsInError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnsInError" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnsInError () As DataColumn()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataColumn ^&gt; ^ GetColumnsInError();" />
      <MemberSignature Language="F#" Value="member this.GetColumnsInError : unit -&gt; System.Data.DataColumn[]" Usage="dataRow.GetColumnsInError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07f6e-267">오류가 있는 열로 이루어진 배열을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-267">Gets an array of columns that have errors.</span></span></summary>
        <returns><span data-ttu-id="07f6e-268">오류가 있는 <see cref="T:System.Data.DataColumn" /> 개체로 이루어진 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-268">An array of <see cref="T:System.Data.DataColumn" /> objects that contain errors.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-269">합니다 <xref:System.Data.DataRow.GetColumnsInError%2A> 수를 줄일 수 있습니다 <xref:System.Data.DataColumn> 오류가 있는 열만 반환 하 여 오류 처리 해야 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-269">The <xref:System.Data.DataRow.GetColumnsInError%2A> lets you reduce the number of <xref:System.Data.DataColumn> objects that must be processed for errors by returning only those columns that have an error.</span></span> <span data-ttu-id="07f6e-270">오류를 사용 하 여 개별 열에 설정할 수는 <xref:System.Data.DataRow.SetColumnError%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-270">Errors can be set to individual columns with the <xref:System.Data.DataRow.SetColumnError%2A> method.</span></span> <span data-ttu-id="07f6e-271">처리의 수를 더 줄이기 위해 검사를 <xref:System.Data.DataRow.HasErrors%2A> 의 속성을 <xref:System.Data.DataRow> 을 확인 하려면 클래스 있는지 여부를 <xref:System.Data.DataRow> 호출 하기 전에 오류가 <xref:System.Data.DataRow.GetColumnsInError%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-271">To further reduce the number of processing, examine the <xref:System.Data.DataRow.HasErrors%2A> property of the <xref:System.Data.DataRow> class to determine whether a <xref:System.Data.DataRow> has errors before invoking <xref:System.Data.DataRow.GetColumnsInError%2A>.</span></span>  
  
 <span data-ttu-id="07f6e-272">사용 된 <xref:System.Data.DataRow.ClearErrors%2A> 모든 오류 행의 선택을 취소 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-272">Use the <xref:System.Data.DataRow.ClearErrors%2A> method to clear all errors on the row.</span></span> <span data-ttu-id="07f6e-273">여기에는 <xref:System.Data.DataRow.RowError%2A>가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-273">This includes the <xref:System.Data.DataRow.RowError%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-274">다음 예제에서는 <xref:System.Data.DataRow.HasErrors%2A> 오류 찾는 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-274">The following example uses the <xref:System.Data.DataRow.HasErrors%2A> to look for errors.</span></span> <span data-ttu-id="07f6e-275">행에 오류가 있는 경우는 <xref:System.Data.DataRow.GetColumnsInError%2A> 메서드 확인 될 수 있는 오류를 사용 하 여 열의 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-275">If the row has errors, the <xref:System.Data.DataRow.GetColumnsInError%2A> method returns the array of columns with errors that can then be resolved.</span></span> <span data-ttu-id="07f6e-276"><xref:System.Data.DataRow.ClearErrors%2A> 다음 메서드는 모든 오류를 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-276">The <xref:System.Data.DataRow.ClearErrors%2A> method is then called to clear all errors.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07f6e-277"><see cref="T:System.Data.DataRow" />의 부모 행을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-277">Gets the parent row of a <see cref="T:System.Data.DataRow" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relation As DataRelation) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : System.Data.DataRelation -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation"><span data-ttu-id="07f6e-278">사용할 <see cref="T:System.Data.DataRelation" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-278">The <see cref="T:System.Data.DataRelation" /> to use.</span></span></param>
        <summary><span data-ttu-id="07f6e-279">지정된 <see cref="T:System.Data.DataRow" />을 사용하여 <see cref="T:System.Data.DataRelation" />의 부모 행을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-279">Gets the parent row of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />.</span></span></summary>
        <returns><span data-ttu-id="07f6e-280">현재 행의 부모 <see cref="T:System.Data.DataRow" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-280">The parent <see cref="T:System.Data.DataRow" /> of the current row.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-281">에 <xref:System.Data.DataSet>, 컬렉션의 모든 부모 <xref:System.Data.DataRelation> 반환한 데이터 집합에 대 한 개체는 <xref:System.Data.DataRow.GetParentRows%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-281">In a <xref:System.Data.DataSet>, the collection of all parent <xref:System.Data.DataRelation> objects for the data set is returned by the <xref:System.Data.DataRow.GetParentRows%2A> method.</span></span>  
  
 <span data-ttu-id="07f6e-282"><xref:System.Data.DataTable> 의 컬렉션도 포함 <xref:System.Data.DataRelation> 반환한 개체는 <xref:System.Data.DataTable.ParentRelations%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-282">The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.DataRelation> objects, returned by the <xref:System.Data.DataTable.ParentRelations%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-283">다음 예제에서는 합니다 <xref:System.Data.DataRow.GetParentRow%2A> 자식 반환할 <xref:System.Data.DataRow> 모든 자식에 대 한 개체 <xref:System.Data.DataRelation> 에 <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="07f6e-283">The following example uses the <xref:System.Data.DataRow.GetParentRow%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="07f6e-284">행의 각 열 값이 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-284">The value of each column in the row is then printed.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07f6e-285"><paramref name="relation" />이 <see cref="T:System.Data.DataTable" />에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-285">The <paramref name="relation" /> does not belong to the <see cref="T:System.Data.DataTable" />.</span></span>  
  
<span data-ttu-id="07f6e-286">또는</span><span class="sxs-lookup"><span data-stu-id="07f6e-286">-or-</span></span>

<span data-ttu-id="07f6e-287">행이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-287">The row is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Data.DataException"><span data-ttu-id="07f6e-288">자식 행에 여러 부모가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-288">A child row has multiple parents.</span></span></exception>
        <exception cref="T:System.Data.InvalidConstraintException"><span data-ttu-id="07f6e-289">이 행이 <see cref="T:System.Data.DataRelation" /> 개체의 자식 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-289">This row does not belong to the child table of the <see cref="T:System.Data.DataRelation" /> object.</span></span></exception>
        <exception cref="T:System.Data.RowNotInTableException"><span data-ttu-id="07f6e-290">행이 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-290">The row does not belong to a table.</span></span></exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relationName As String) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : string -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName"><span data-ttu-id="07f6e-291"><see cref="P:System.Data.DataRelation.RelationName" />의 <see cref="T:System.Data.DataRelation" /></span><span class="sxs-lookup"><span data-stu-id="07f6e-291">The <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</span></span></param>
        <summary><span data-ttu-id="07f6e-292"><see cref="T:System.Data.DataRow" />의 지정된 <see cref="P:System.Data.DataRelation.RelationName" />을 사용하여 <see cref="T:System.Data.DataRelation" />의 부모 행을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-292">Gets the parent row of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</span></span></summary>
        <returns><span data-ttu-id="07f6e-293">현재 행의 부모 <see cref="T:System.Data.DataRow" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-293">The parent <see cref="T:System.Data.DataRow" /> of the current row.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-294">에 <xref:System.Data.DataSet>, 컬렉션의 모든 부모 <xref:System.Data.DataRelation> 반환한 데이터 집합에 대 한 개체는 <xref:System.Data.DataRow.GetParentRows%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-294">In a <xref:System.Data.DataSet>, the collection of all parent <xref:System.Data.DataRelation> objects for the data set is returned by the <xref:System.Data.DataRow.GetParentRows%2A> method.</span></span>  
  
 <span data-ttu-id="07f6e-295"><xref:System.Data.DataTable> 의 컬렉션도 포함 <xref:System.Data.DataRelation> 반환한 개체는 <xref:System.Data.DataTable.ParentRelations%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-295">The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.DataRelation> objects, returned by the <xref:System.Data.DataTable.ParentRelations%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-296">다음 예제에서는 합니다 <xref:System.Data.DataRow.GetParentRow%2A> 각각의 각 부모 행에서 값을 인쇄 하려면 <xref:System.Data.DataRow> 에 <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="07f6e-296">The following example uses the <xref:System.Data.DataRow.GetParentRow%2A> to print a value from each parent row of each <xref:System.Data.DataRow> in a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="07f6e-297">관계와 행이 같은 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-297">The relation and row do not belong to the same table.</span></span></exception>
        <exception cref="T:System.Data.DataException"><span data-ttu-id="07f6e-298">자식 행에 여러 부모가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-298">A child row has multiple parents.</span></span></exception>
        <exception cref="T:System.Data.RowNotInTableException"><span data-ttu-id="07f6e-299">행이 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-299">The row does not belong to the table.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relation As DataRelation, version As DataRowVersion) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation"><span data-ttu-id="07f6e-300">사용할 <see cref="T:System.Data.DataRelation" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-300">The <see cref="T:System.Data.DataRelation" /> to use.</span></span></param>
        <param name="version"><span data-ttu-id="07f6e-301">가져올 데이터의 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-301">One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get.</span></span></param>
        <summary><span data-ttu-id="07f6e-302">지정된 <see cref="T:System.Data.DataRow" />과 <see cref="T:System.Data.DataRelation" />을 사용하여 <see cref="T:System.Data.DataRowVersion" />의 부모 행을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-302">Gets the parent row of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</span></span></summary>
        <returns><span data-ttu-id="07f6e-303">현재 행의 부모 <see cref="T:System.Data.DataRow" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-303">The parent <see cref="T:System.Data.DataRow" /> of the current row.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-304">에 <xref:System.Data.DataSet>, 컬렉션의 모든 부모 <xref:System.Data.DataRelation> 반환한 데이터 집합에 대 한 개체는 <xref:System.Data.DataRow.GetParentRows%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-304">In a <xref:System.Data.DataSet>, the collection of all parent <xref:System.Data.DataRelation> objects for the data set is returned by the <xref:System.Data.DataRow.GetParentRows%2A> method.</span></span>  
  
 <span data-ttu-id="07f6e-305"><xref:System.Data.DataTable> 의 컬렉션도 포함 <xref:System.Data.DataRelation> 반환한 개체는 <xref:System.Data.DataTable.ParentRelations%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-305">The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.DataRelation> objects, returned by the <xref:System.Data.DataTable.ParentRelations%2A> property.</span></span>  
  
 <span data-ttu-id="07f6e-306">사용 합니다 <xref:System.Data.DataRow.HasVersion%2A> 속성을 여부를 <xref:System.Data.DataRowVersion> 존재 한다고 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-306">Use the <xref:System.Data.DataRow.HasVersion%2A> property to determine whether the <xref:System.Data.DataRowVersion> that you want exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-307">다음 예제에서는 합니다 <xref:System.Data.DataRow.GetParentRow%2A> 자식 반환할 <xref:System.Data.DataRow> 모든 자식에 대 한 개체 <xref:System.Data.DataRelation> 에 <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="07f6e-307">The following example uses the <xref:System.Data.DataRow.GetParentRow%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="07f6e-308">행의 각 열 값이 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-308">The value of each column in the row is then printed.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07f6e-309">행이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-309">The row is <see langword="null" />.</span></span>  
  
<span data-ttu-id="07f6e-310">또는</span><span class="sxs-lookup"><span data-stu-id="07f6e-310">-or-</span></span>

<span data-ttu-id="07f6e-311"><paramref name="relation" />이 이 테이블의 부모 관계에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-311">The <paramref name="relation" /> does not belong to this table's parent relations.</span></span></exception>
        <exception cref="T:System.Data.DataException"><span data-ttu-id="07f6e-312">자식 행에 여러 부모가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-312">A child row has multiple parents.</span></span></exception>
        <exception cref="T:System.Data.InvalidConstraintException"><span data-ttu-id="07f6e-313">관계의 자식 테이블이 행이 속한 테이블이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-313">The relation's child table is not the table the row belongs to.</span></span></exception>
        <exception cref="T:System.Data.RowNotInTableException"><span data-ttu-id="07f6e-314">행이 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-314">The row does not belong to a table.</span></span></exception>
        <exception cref="T:System.Data.VersionNotFoundException"><span data-ttu-id="07f6e-315">행에 이 버전의 데이터가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-315">The row does not have this version of data.</span></span></exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relationName As String, version As DataRowVersion) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : string * System.Data.DataRowVersion -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName"><span data-ttu-id="07f6e-316"><see cref="P:System.Data.DataRelation.RelationName" />의 <see cref="T:System.Data.DataRelation" /></span><span class="sxs-lookup"><span data-stu-id="07f6e-316">The <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</span></span></param>
        <param name="version"><span data-ttu-id="07f6e-317"><see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-317">One of the <see cref="T:System.Data.DataRowVersion" /> values.</span></span></param>
        <summary><span data-ttu-id="07f6e-318"><see cref="T:System.Data.DataRow" />의 지정된 <see cref="P:System.Data.DataRelation.RelationName" />과 <see cref="T:System.Data.DataRelation" />을 사용하여 <see cref="T:System.Data.DataRowVersion" />의 부모 행을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-318">Gets the parent row of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</span></span></summary>
        <returns><span data-ttu-id="07f6e-319">현재 행의 부모 <see cref="T:System.Data.DataRow" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-319">The parent <see cref="T:System.Data.DataRow" /> of the current row.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-320">에 <xref:System.Data.DataSet>, 컬렉션의 모든 부모 <xref:System.Data.DataRelation> 반환한 데이터 집합에 대 한 개체는 <xref:System.Data.DataRow.GetParentRows%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-320">In a <xref:System.Data.DataSet>, the collection of all parent <xref:System.Data.DataRelation> objects for the data set is returned by the <xref:System.Data.DataRow.GetParentRows%2A> method.</span></span>  
  
 <span data-ttu-id="07f6e-321"><xref:System.Data.DataTable> 의 컬렉션도 포함 <xref:System.Data.DataRelation> 반환한 개체는 <xref:System.Data.DataTable.ParentRelations%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-321">The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.DataRelation> objects, returned by the <xref:System.Data.DataTable.ParentRelations%2A> property.</span></span>  
  
 <span data-ttu-id="07f6e-322">사용 합니다 <xref:System.Data.DataRow.HasVersion%2A> 속성을 여부를 <xref:System.Data.DataRowVersion> 존재 한다고 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-322">Use the <xref:System.Data.DataRow.HasVersion%2A> property to determine whether the <xref:System.Data.DataRowVersion> that you want exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-323">다음 예제에서는 합니다 <xref:System.Data.DataRow.GetParentRow%2A> 각각의 각 부모 행에서 값을 인쇄 하려면 <xref:System.Data.DataRow> 에 <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="07f6e-323">The following example uses the <xref:System.Data.DataRow.GetParentRow%2A> to print a value from each parent row of each <xref:System.Data.DataRow> in a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="07f6e-324">관계와 행이 같은 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-324">The relation and row do not belong to the same table.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07f6e-325"><paramref name="relation" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-325">The <paramref name="relation" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Data.DataException"><span data-ttu-id="07f6e-326">자식 행에 여러 부모가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-326">A child row has multiple parents.</span></span></exception>
        <exception cref="T:System.Data.RowNotInTableException"><span data-ttu-id="07f6e-327">행이 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-327">The row does not belong to the table.</span></span></exception>
        <exception cref="T:System.Data.VersionNotFoundException"><span data-ttu-id="07f6e-328">행에 요청한 <see cref="T:System.Data.DataRowVersion" />이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-328">The row does not have the requested <see cref="T:System.Data.DataRowVersion" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParentRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07f6e-329"><see cref="T:System.Data.DataRow" />의 부모 행을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-329">Gets the parent rows of a <see cref="T:System.Data.DataRow" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relation As DataRelation) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : System.Data.DataRelation -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation"><span data-ttu-id="07f6e-330">사용할 <see cref="T:System.Data.DataRelation" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-330">The <see cref="T:System.Data.DataRelation" /> to use.</span></span></param>
        <summary><span data-ttu-id="07f6e-331">지정된 <see cref="T:System.Data.DataRow" />을 사용하여 <see cref="T:System.Data.DataRelation" />의 부모 행을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-331">Gets the parent rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />.</span></span></summary>
        <returns><span data-ttu-id="07f6e-332"><see cref="T:System.Data.DataRow" /> 개체로 이루어진 배열 또는 길이가 0인 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-332">An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-333">에 <xref:System.Data.DataSet>, 컬렉션의 모든 부모 <xref:System.Data.DataRelation> 반환한 데이터 집합에 대 한 개체는 <xref:System.Data.DataRow.GetParentRows%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-333">In a <xref:System.Data.DataSet>, the collection of all parent <xref:System.Data.DataRelation> objects for the data set is returned by the <xref:System.Data.DataRow.GetParentRows%2A> method.</span></span>  
  
 <span data-ttu-id="07f6e-334"><xref:System.Data.DataTable> 의 컬렉션도 포함 <xref:System.Data.DataRelation> 반환한 개체는 <xref:System.Data.DataTable.ParentRelations%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-334">The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.DataRelation> objects, returned by the <xref:System.Data.DataTable.ParentRelations%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-335">다음 예제에서는 합니다 <xref:System.Data.DataRow.GetParentRows%2A> 자식 반환할 <xref:System.Data.DataRow> 모든 자식에 대 한 개체 <xref:System.Data.DataRelation> 에 <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="07f6e-335">The following example uses the <xref:System.Data.DataRow.GetParentRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="07f6e-336">행의 각 열 값이 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-336">The value of each column in the row is then printed.</span></span>  
  
 [!code-vb[Classic WebData DataRow.GetParentRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="07f6e-337"><see cref="T:System.Data.DataRelation" />이 이 행의 <see cref="T:System.Data.DataSet" />에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-337">The <see cref="T:System.Data.DataRelation" /> does not belong to this row's <see cref="T:System.Data.DataSet" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07f6e-338">행이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-338">The row is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Data.InvalidConstraintException"><span data-ttu-id="07f6e-339">관계의 자식 테이블이 행이 속한 테이블이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-339">The relation's child table is not the table the row belongs to.</span></span></exception>
        <exception cref="T:System.Data.RowNotInTableException"><span data-ttu-id="07f6e-340">행이 <see cref="T:System.Data.DataTable" />에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-340">The row does not belong to a <see cref="T:System.Data.DataTable" />.</span></span></exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relationName As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : string -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName"><span data-ttu-id="07f6e-341"><see cref="P:System.Data.DataRelation.RelationName" />의 <see cref="T:System.Data.DataRelation" /></span><span class="sxs-lookup"><span data-stu-id="07f6e-341">The <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</span></span></param>
        <summary><span data-ttu-id="07f6e-342"><see cref="T:System.Data.DataRow" />의 지정된 <see cref="P:System.Data.DataRelation.RelationName" />을 사용하여 <see cref="T:System.Data.DataRelation" />의 부모 행을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-342">Gets the parent rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</span></span></summary>
        <returns><span data-ttu-id="07f6e-343"><see cref="T:System.Data.DataRow" /> 개체로 이루어진 배열 또는 길이가 0인 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-343">An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-344">에 <xref:System.Data.DataSet>, 컬렉션의 모든 부모 <xref:System.Data.DataRelation> 반환한 데이터 집합에 대 한 개체는 <xref:System.Data.DataRow.GetParentRows%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-344">In a <xref:System.Data.DataSet>, the collection of all parent <xref:System.Data.DataRelation> objects for the data set is returned by the <xref:System.Data.DataRow.GetParentRows%2A> method.</span></span>  
  
 <span data-ttu-id="07f6e-345"><xref:System.Data.DataTable> 의 컬렉션도 포함 <xref:System.Data.DataRelation> 반환한 개체는 <xref:System.Data.DataTable.ParentRelations%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-345">The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.DataRelation> objects, returned by the <xref:System.Data.DataTable.ParentRelations%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="07f6e-346">관계와 행이 같은 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-346">The relation and row do not belong to the same table.</span></span></exception>
        <exception cref="T:System.Data.RowNotInTableException"><span data-ttu-id="07f6e-347">행이 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-347">The row does not belong to the table.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relation As DataRelation, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation"><span data-ttu-id="07f6e-348">사용할 <see cref="T:System.Data.DataRelation" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-348">The <see cref="T:System.Data.DataRelation" /> to use.</span></span></param>
        <param name="version"><span data-ttu-id="07f6e-349">가져올 데이터의 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-349">One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get.</span></span></param>
        <summary><span data-ttu-id="07f6e-350">지정된 <see cref="T:System.Data.DataRow" />과 <see cref="T:System.Data.DataRelation" />을 사용하여 <see cref="T:System.Data.DataRowVersion" />의 부모 행을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-350">Gets the parent rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</span></span></summary>
        <returns><span data-ttu-id="07f6e-351"><see cref="T:System.Data.DataRow" /> 개체로 이루어진 배열 또는 길이가 0인 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-351">An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-352">에 <xref:System.Data.DataSet>, 컬렉션의 모든 부모 <xref:System.Data.DataRelation> 반환한 데이터 집합에 대 한 개체는 <xref:System.Data.DataRow.GetParentRows%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-352">In a <xref:System.Data.DataSet>, the collection of all parent <xref:System.Data.DataRelation> objects for the data set is returned by the <xref:System.Data.DataRow.GetParentRows%2A> method.</span></span>  
  
 <span data-ttu-id="07f6e-353"><xref:System.Data.DataTable> 의 컬렉션도 포함 <xref:System.Data.DataRelation> 반환한 개체는 <xref:System.Data.DataTable.ParentRelations%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-353">The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.DataRelation> objects, returned by the <xref:System.Data.DataTable.ParentRelations%2A> property.</span></span>  
  
 <span data-ttu-id="07f6e-354">사용 합니다 <xref:System.Data.DataRow.HasVersion%2A> 속성을 여부를 <xref:System.Data.DataRowVersion> 존재 한다고 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-354">Use the <xref:System.Data.DataRow.HasVersion%2A> property to determine whether the <xref:System.Data.DataRowVersion> that you want exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-355">다음 예제에서는 합니다 <xref:System.Data.DataRow.GetParentRows%2A> 자식 반환할 <xref:System.Data.DataRow> 모든 자식에 대 한 개체 <xref:System.Data.DataRelation> 에 <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="07f6e-355">The following example uses the <xref:System.Data.DataRow.GetParentRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="07f6e-356">행의 각 열 값이 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-356">The value of each column in the row is then printed.</span></span>  
  
 [!code-vb[Classic WebData DataRow.GetParentRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="07f6e-357"><see cref="T:System.Data.DataRelation" />이 이 행의 <see cref="T:System.Data.DataSet" />에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-357">The <see cref="T:System.Data.DataRelation" /> does not belong to this row's <see cref="T:System.Data.DataSet" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07f6e-358">행이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-358">The row is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Data.InvalidConstraintException"><span data-ttu-id="07f6e-359">관계의 자식 테이블이 행이 속한 테이블이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-359">The relation's child table is not the table the row belongs to.</span></span></exception>
        <exception cref="T:System.Data.RowNotInTableException"><span data-ttu-id="07f6e-360">행이 <see cref="T:System.Data.DataTable" />에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-360">The row does not belong to a <see cref="T:System.Data.DataTable" />.</span></span></exception>
        <exception cref="T:System.Data.VersionNotFoundException"><span data-ttu-id="07f6e-361">행에 요청한 <see cref="T:System.Data.DataRowVersion" />이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-361">The row does not have the requested <see cref="T:System.Data.DataRowVersion" />.</span></span></exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relationName As String, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : string * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName"><span data-ttu-id="07f6e-362"><see cref="P:System.Data.DataRelation.RelationName" />의 <see cref="T:System.Data.DataRelation" /></span><span class="sxs-lookup"><span data-stu-id="07f6e-362">The <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</span></span></param>
        <param name="version"><span data-ttu-id="07f6e-363">가져올 데이터의 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-363">One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get.</span></span> <span data-ttu-id="07f6e-364">가능한 값은 <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> 및 <see langword="Proposed" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-364">Possible values are <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, and <see langword="Proposed" />.</span></span></param>
        <summary><span data-ttu-id="07f6e-365"><see cref="T:System.Data.DataRow" />의 지정된 <see cref="P:System.Data.DataRelation.RelationName" />과 <see cref="T:System.Data.DataRelation" />을 사용하여 <see cref="T:System.Data.DataRowVersion" />의 부모 행을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-365">Gets the parent rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</span></span></summary>
        <returns><span data-ttu-id="07f6e-366"><see cref="T:System.Data.DataRow" /> 개체로 이루어진 배열 또는 길이가 0인 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-366">An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-367">에 <xref:System.Data.DataSet>, 컬렉션의 모든 부모 <xref:System.Data.DataRelation> 반환한 데이터 집합에 대 한 개체는 <xref:System.Data.DataRow.GetParentRows%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-367">In a <xref:System.Data.DataSet>, the collection of all parent <xref:System.Data.DataRelation> objects for the data set is returned by the <xref:System.Data.DataRow.GetParentRows%2A> method.</span></span>  
  
 <span data-ttu-id="07f6e-368"><xref:System.Data.DataTable> 의 컬렉션도 포함 <xref:System.Data.DataRelation> 반환한 개체는 <xref:System.Data.DataTable.ParentRelations%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-368">The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.DataRelation> objects, returned by the <xref:System.Data.DataTable.ParentRelations%2A> property.</span></span>  
  
 <span data-ttu-id="07f6e-369">사용 합니다 <xref:System.Data.DataRow.HasVersion%2A> 속성을 여부를 <xref:System.Data.DataRowVersion> 존재 한다고 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-369">Use the <xref:System.Data.DataRow.HasVersion%2A> property to determine whether the <xref:System.Data.DataRowVersion> that you want exists.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="07f6e-370">관계와 행이 같은 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-370">The relation and row do not belong to the same table.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07f6e-371"><paramref name="relation" />이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-371">The <paramref name="relation" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Data.RowNotInTableException"><span data-ttu-id="07f6e-372">행이 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-372">The row does not belong to the table.</span></span></exception>
        <exception cref="T:System.Data.VersionNotFoundException"><span data-ttu-id="07f6e-373">행에 요청한 <see cref="T:System.Data.DataRowVersion" />이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-373">The row does not have the requested <see cref="T:System.Data.DataRowVersion" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasErrors">
      <MemberSignature Language="C#" Value="public bool HasErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.HasErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasErrors { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasErrors : bool" Usage="System.Data.DataRow.HasErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07f6e-374">행에 오류가 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-374">Gets a value that indicates whether there are errors in a row.</span></span></summary>
        <value><span data-ttu-id="07f6e-375">컬렉션에 오류가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-375"><see langword="true" /> if the row contains an error; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-376">`HasErrors` 반환 `true` 있으면 <xref:System.Data.DataColumn> 개체 행에서 오류를 포함 또는 경우에는 <xref:System.Data.DataRow.RowError%2A> 속성의는 <xref:System.Data.DataRow> 는 빈 문자열이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-376">`HasErrors` returns `true` if any <xref:System.Data.DataColumn> object in the row contains an error, or if the <xref:System.Data.DataRow.RowError%2A> property of the <xref:System.Data.DataRow> is not an empty string.</span></span>  
  
 <span data-ttu-id="07f6e-377">데이터의 유효성을 검사할 때 오류가 행의 모든 열에 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-377">When validating data, you can set an error on any column in a row.</span></span> <span data-ttu-id="07f6e-378">이런 열에 표시 되는 <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> 컨트롤에서 열이 오류에는 사용자에 게 알리기 위해 빨간색 느낌표가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-378">Such a column, when displayed in the <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> control, is marked with a red exclamation point to signal to the user that the column is in error.</span></span>  
  
 <span data-ttu-id="07f6e-379">사용 하 여 <xref:System.Data.DataRow.SetColumnError%2A> 모든 열에 오류를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-379">Use <xref:System.Data.DataRow.SetColumnError%2A> to set an error on any column.</span></span>  
  
 <span data-ttu-id="07f6e-380">사용 된 <xref:System.Data.DataRow.GetColumnError%2A> 및 `GetColumnsInError` 오류를 사용 하 여 열을 반환 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-380">Use the <xref:System.Data.DataRow.GetColumnError%2A> and `GetColumnsInError` methods to return columns with errors.</span></span>  
  
 <span data-ttu-id="07f6e-381"><xref:System.Data.DataRow.ClearErrors%2A> 메서드는 행에 대 한 모든 오류를 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-381">The <xref:System.Data.DataRow.ClearErrors%2A> method clears all errors for the row.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-382">다음 예제에서는 <xref:System.Data.DataRow.HasErrors%2A> 오류 찾는 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-382">The following example uses the <xref:System.Data.DataRow.HasErrors%2A> to look for errors.</span></span> <span data-ttu-id="07f6e-383">행에 오류가 있는 경우는 <xref:System.Data.DataRow.GetColumnsInError%2A> 메서드 확인 될 수 있는 오류를 사용 하 여 열의 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-383">If the row has errors, the <xref:System.Data.DataRow.GetColumnsInError%2A> method returns the array of columns with errors that can then be resolved.</span></span> <span data-ttu-id="07f6e-384"><xref:System.Data.DataRow.ClearErrors%2A> 다음 메서드는 모든 오류를 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-384">The <xref:System.Data.DataRow.ClearErrors%2A> method is then called to clear all errors.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasVersion">
      <MemberSignature Language="C#" Value="public bool HasVersion (System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasVersion(valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasVersion (version As DataRowVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasVersion(System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.HasVersion : System.Data.DataRowVersion -&gt; bool" Usage="dataRow.HasVersion version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="version"><span data-ttu-id="07f6e-385">행 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-385">One of the <see cref="T:System.Data.DataRowVersion" /> values that specifies the row version.</span></span></param>
        <summary><span data-ttu-id="07f6e-386">지정된 버전이 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-386">Gets a value that indicates whether a specified version exists.</span></span></summary>
        <returns><span data-ttu-id="07f6e-387">버전이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-387"><see langword="true" /> if the version exists; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-388">자세한 내용은 <xref:System.Data.DataRow.BeginEdit%2A> 메서드를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="07f6e-388">See the <xref:System.Data.DataRow.BeginEdit%2A> method for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-389">다음 예제에서는 <xref:System.Data.DataRow.HasVersion%2A> 같은지 여부를 지정 된 열 및 제안 된 값을 확인 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-389">The following example uses the <xref:System.Data.DataRow.HasVersion%2A> method to determine whether the current value of a column and the proposed value are the same.</span></span> <span data-ttu-id="07f6e-390">그렇다면 편집이 취소 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-390">If so, the edit is canceled.</span></span> <span data-ttu-id="07f6e-391">그렇지 않은 경우는 <xref:System.Data.DataRow.AcceptChanges%2A> 메서드는 편집을 끝냅니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-391">Otherwise, the <xref:System.Data.DataRow.AcceptChanges%2A> method is called to end the edit.</span></span>  
  
 [!code-vb[Classic WebData DataRow.HasVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNull">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07f6e-392">지정된 열에 null 값이 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-392">Gets a value that indicates whether the specified column contains a null value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (column As DataColumn) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.IsNull : System.Data.DataColumn -&gt; bool" Usage="dataRow.IsNull column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column"><span data-ttu-id="07f6e-393"><see cref="T:System.Data.DataColumn" /></span><span class="sxs-lookup"><span data-stu-id="07f6e-393">A <see cref="T:System.Data.DataColumn" />.</span></span></param>
        <summary><span data-ttu-id="07f6e-394">지정된 <see cref="T:System.Data.DataColumn" />에 null 값이 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-394">Gets a value that indicates whether the specified <see cref="T:System.Data.DataColumn" /> contains a null value.</span></span></summary>
        <returns><span data-ttu-id="07f6e-395">열에 null 값이 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-395"><see langword="true" /> if the column contains a null value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07f6e-396">다음 예제에서는 출력의 각 테이블의 각 행의 각 열을 <xref:System.Data.DataSet>입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-396">The following example prints each column of each row in each table of a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="07f6e-397">행은 null 값으로 설정 하는 경우에 값을 인쇄 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-397">If the row is set to a null value, the value is not printed.</span></span>  
  
 [!code-vb[Classic WebData DataRow.IsNull2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07f6e-398"><paramref name="column" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-398"><paramref name="column" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Data.RowNotInTableException"><span data-ttu-id="07f6e-399">행이 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-399">The row does not belong to the table.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (columnIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.IsNull : int -&gt; bool" Usage="dataRow.IsNull columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex"><span data-ttu-id="07f6e-400">열의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-400">The zero-based index of the column.</span></span></param>
        <summary><span data-ttu-id="07f6e-401">지정된 인덱스의 열에 null 값이 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-401">Gets a value that indicates whether the column at the specified index contains a null value.</span></span></summary>
        <returns><span data-ttu-id="07f6e-402">열에 null 값이 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-402"><see langword="true" /> if the column contains a null value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07f6e-403">다음 예제에서는 null 값으로 열 값을 변경 하 고 사용 하 여는 <xref:System.Data.DataRow.IsNull%2A> 값이 null 인지 여부를 결정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-403">The following example changes the value of a column to a null value, and then uses the <xref:System.Data.DataRow.IsNull%2A> method to determine whether the value is null.</span></span>  
  
 [!code-vb[Classic WebData DataRow.IsNull Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="07f6e-404"><paramref name="columnIndex" />에 지정된 인덱스에 해당하는 열이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-404">No column corresponds to the index specified by <paramref name="columnIndex" />.</span></span></exception>
        <exception cref="T:System.Data.RowNotInTableException"><span data-ttu-id="07f6e-405">행이 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-405">The row does not belong to the table.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (columnName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.IsNull : string -&gt; bool" Usage="dataRow.IsNull columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="07f6e-406">열 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-406">The name of the column.</span></span></param>
        <summary><span data-ttu-id="07f6e-407">명명된 열에 null 값이 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-407">Gets a value that indicates whether the named column contains a null value.</span></span></summary>
        <returns><span data-ttu-id="07f6e-408">열에 null 값이 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-408"><see langword="true" /> if the column contains a null value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07f6e-409">다음 예제에서는 null 값으로 열 값을 변경 하 고 사용 하 여는 <xref:System.Data.DataRow.IsNull%2A> 값이 null 인지 여부를 결정 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-409">The following example changes the value of a column to a null value, and then uses the <xref:System.Data.DataRow.IsNull%2A> method to determine whether the value is null.</span></span>  
  
 [!code-vb[Classic WebData DataRow.IsNull1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="07f6e-410"><paramref name="columnName" />에서 지정한 열을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-410">The column specified by <paramref name="columnName" /> cannot be found.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07f6e-411"><paramref name="columnName" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-411"><paramref name="columnName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Data.RowNotInTableException"><span data-ttu-id="07f6e-412">행이 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-412">The row does not belong to the table.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (column As DataColumn, version As DataRowVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::Data::DataColumn ^ column, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.IsNull : System.Data.DataColumn * System.Data.DataRowVersion -&gt; bool" Usage="dataRow.IsNull (column, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column"><span data-ttu-id="07f6e-413"><see cref="T:System.Data.DataColumn" /></span><span class="sxs-lookup"><span data-stu-id="07f6e-413">A <see cref="T:System.Data.DataColumn" />.</span></span></param>
        <param name="version"><span data-ttu-id="07f6e-414">행 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-414">One of the <see cref="T:System.Data.DataRowVersion" /> values that specifies the row version.</span></span> <span data-ttu-id="07f6e-415">가능한 값은 <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> 및 <see langword="Proposed" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-415">Possible values are <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, and <see langword="Proposed" />.</span></span></param>
        <summary><span data-ttu-id="07f6e-416">지정된 <see cref="T:System.Data.DataColumn" />과 <see cref="T:System.Data.DataRowVersion" />에 null 값이 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-416">Gets a value that indicates whether the specified <see cref="T:System.Data.DataColumn" /> and <see cref="T:System.Data.DataRowVersion" /> contains a null value.</span></span></summary>
        <returns><span data-ttu-id="07f6e-417">열에 null 값이 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-417"><see langword="true" /> if the column contains a null value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07f6e-418"><paramref name="column" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-418"><paramref name="column" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Data.RowNotInTableException"><span data-ttu-id="07f6e-419">행이 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-419">The row does not belong to the table.</span></span></exception>
        <exception cref="T:System.Data.VersionNotFoundException"><span data-ttu-id="07f6e-420">행에 요청한 <paramref name="version" />이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-420">The row does not have the requested <paramref name="version" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07f6e-421">지정된 열에 저장된 데이터를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-421">Gets or sets data stored in a specified column.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(column As DataColumn) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Data::DataColumn ^] { System::Object ^ get(System::Data::DataColumn ^ column); void set(System::Data::DataColumn ^ column, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Data.DataColumn) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column"><span data-ttu-id="07f6e-422">데이터가 들어 있는 <see cref="T:System.Data.DataColumn" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-422">A <see cref="T:System.Data.DataColumn" /> that contains the data.</span></span></param>
        <summary><span data-ttu-id="07f6e-423">지정된 <see cref="T:System.Data.DataColumn" />에 저장된 데이터를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-423">Gets or sets the data stored in the specified <see cref="T:System.Data.DataColumn" />.</span></span></summary>
        <value><span data-ttu-id="07f6e-424">데이터가 포함된 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-424">An <see cref="T:System.Object" /> that contains the data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-425">예외가 발생할 경우 예외가 생성 됩니다 속성을 설정 하는 경우는 <xref:System.Data.DataTable.ColumnChanging> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-425">When you set the property, an exception is generated if an exception occurs in the <xref:System.Data.DataTable.ColumnChanging> event.</span></span>  
  
 <span data-ttu-id="07f6e-426">즉시 편집 하는 경우 참조 <xref:System.Data.DataRow.EndEdit%2A> 생성 될 수 있는 예외에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-426">If this is an immediate edit, see <xref:System.Data.DataRow.EndEdit%2A> for the exceptions that can be generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-427">다음 예제에서는 사용을 보여 합니다 <xref:System.Data.DataRow.Item%2A> 속성을 가져오고 특정 열 인덱스의 값을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-427">The following examples demonstrate the use of the <xref:System.Data.DataRow.Item%2A> property to get and set the value of a specific column index.</span></span> <span data-ttu-id="07f6e-428">첫 번째 예제에서 사용자가 클릭 하는 행의 첫 번째 열의 값을 가져옵니다는 <xref:System.Windows.Forms.DataGrid> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-428">The first example gets the value of the first column in any row that a user clicks in a <xref:System.Windows.Forms.DataGrid> control.</span></span> <span data-ttu-id="07f6e-429">두 번째 인수로 서 메서드에 전달 된 값을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-429">The second sets a value passed as an argument to the method.</span></span>  
  
 [!code-vb[Classic WebData DataRow.this2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="07f6e-430">열이 이 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-430">The column does not belong to this table.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07f6e-431"><paramref name="column" />가 null인 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-431">The <paramref name="column" /> is null.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="07f6e-432">삭제된 행에 값을 설정하려고 한 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-432">An attempt was made to set a value on a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="07f6e-433">값과 열의 데이터 형식이 일치하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-433">The data types of the value and the column do not match.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnIndex As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int columnIndex); void set(int columnIndex, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex"><span data-ttu-id="07f6e-434">열의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-434">The zero-based index of the column.</span></span></param>
        <summary><span data-ttu-id="07f6e-435">지정된 인덱스를 가진 열에 저장된 데이터를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-435">Gets or sets the data stored in the column specified by index.</span></span></summary>
        <value><span data-ttu-id="07f6e-436">데이터가 포함된 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-436">An <see cref="T:System.Object" /> that contains the data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-437">예외가 발생할 경우 예외가 생성 됩니다 속성을 설정 하는 경우는 <xref:System.Data.DataTable.ColumnChanging> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-437">When you set the property, an exception is generated if an exception occurs in the <xref:System.Data.DataTable.ColumnChanging> event.</span></span>  
  
 <span data-ttu-id="07f6e-438">편집 하는 경우 참조 <xref:System.Data.DataRow.EndEdit%2A> 생성 될 수 있는 예외에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-438">If this is an edit, see <xref:System.Data.DataRow.EndEdit%2A> for the exceptions that can be generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-439">다음 예제에서는 사용을 보여 합니다 <xref:System.Data.DataRow.Item%2A> 속성을 가져오고 특정 열 인덱스의 값을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-439">The following examples demonstrate the use of the <xref:System.Data.DataRow.Item%2A> property to get and set the value of a specific column index.</span></span> <span data-ttu-id="07f6e-440">첫 번째 예제에서 사용자가 클릭 하는 행의 첫 번째 열의 값을 가져옵니다는 <xref:System.Windows.Forms.DataGrid> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-440">The first example gets the value of the first column in any row that a user clicks in a <xref:System.Windows.Forms.DataGrid> control.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.this Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="07f6e-441">삭제된 행에 값을 설정하려고 하는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-441">Occurs when you try to set a value on a deleted row.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="07f6e-442"><paramref name="columnIndex" /> 인수가 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-442">The <paramref name="columnIndex" /> argument is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="07f6e-443">값과 새 값의 <see cref="T:System.Type" /> 설정이 <see cref="P:System.Data.DataColumn.DataType" />과 일치하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-443">Occurs when you set the value and the new value's <see cref="T:System.Type" /> does not match <see cref="P:System.Data.DataColumn.DataType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ columnName); void set(System::String ^ columnName, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="07f6e-444">열 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-444">The name of the column.</span></span></param>
        <summary><span data-ttu-id="07f6e-445">지정된 이름을 가진 열에 저장된 데이터를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-445">Gets or sets the data stored in the column specified by name.</span></span></summary>
        <value><span data-ttu-id="07f6e-446">데이터가 포함된 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-446">An <see cref="T:System.Object" /> that contains the data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-447">예외가 발생할 경우 예외가 생성 됩니다 속성을 설정 하는 경우는 <xref:System.Data.DataTable.ColumnChanging> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-447">When you set the property, an exception is generated if an exception occurs in the <xref:System.Data.DataTable.ColumnChanging> event.</span></span>  
  
 <span data-ttu-id="07f6e-448">즉시 편집 하는 경우 참조 <xref:System.Data.DataRow.EndEdit%2A> 생성 될 수 있는 예외에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-448">If this is an immediate edit, see <xref:System.Data.DataRow.EndEdit%2A> for the exceptions that can be generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-449">다음 예제에서는 사용을 보여 합니다 <xref:System.Data.DataRow.Item%2A> 속성을 가져오고 특정 열 인덱스의 값을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-449">The following examples demonstrate the use of the <xref:System.Data.DataRow.Item%2A> property to get and set the value of a specific column index.</span></span> <span data-ttu-id="07f6e-450">첫 번째 예제에서 사용자가 클릭 하는 행의 첫 번째 열의 값을 가져옵니다는 <xref:System.Windows.Forms.DataGrid> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-450">The first example gets the value of the first column in any row that a user clicks in a <xref:System.Windows.Forms.DataGrid> control.</span></span> <span data-ttu-id="07f6e-451">두 번째 인수로 서 메서드에 전달 된 값을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-451">The second sets a value passed as an argument to the method.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="07f6e-452"><paramref name="columnName" />에서 지정한 열을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-452">The column specified by <paramref name="columnName" /> cannot be found.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="07f6e-453">삭제된 행에 값을 설정하려고 하는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-453">Occurs when you try to set a value on a deleted row.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="07f6e-454">설정한 값에 대해 해당 <see cref="T:System.Type" />이 <see cref="P:System.Data.DataColumn.DataType" />과 일치하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-454">Occurs when you set a value and its <see cref="T:System.Type" /> does not match <see cref="P:System.Data.DataColumn.DataType" />.</span></span></exception>
        <exception cref="T:System.Data.NoNullAllowedException"><span data-ttu-id="07f6e-455"><see cref="P:System.Data.DataColumn.AllowDBNull" />이 <see langword="false" />로 설정된 열에 null 값을 삽입하려고 할 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-455">Occurs when you try to insert a null value into a column where <see cref="P:System.Data.DataColumn.AllowDBNull" /> is set to <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(column As DataColumn, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Data::DataColumn ^, System::Data::DataRowVersion] { System::Object ^ get(System::Data::DataColumn ^ column, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Data.DataColumn * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column"><span data-ttu-id="07f6e-456">열에 대한 정보가 들어 있는 <see cref="T:System.Data.DataColumn" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-456">A <see cref="T:System.Data.DataColumn" /> that contains information about the column.</span></span></param>
        <param name="version"><span data-ttu-id="07f6e-457">원하는 행 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-457">One of the <see cref="T:System.Data.DataRowVersion" /> values that specifies the row version that you want.</span></span> <span data-ttu-id="07f6e-458">가능한 값은 <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> 및 <see langword="Proposed" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-458">Possible values are <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, and <see langword="Proposed" />.</span></span></param>
        <summary><span data-ttu-id="07f6e-459">지정된 <see cref="T:System.Data.DataColumn" />에 저장된 특정 버전의 데이터를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-459">Gets the specified version of data stored in the specified <see cref="T:System.Data.DataColumn" />.</span></span></summary>
        <value><span data-ttu-id="07f6e-460">데이터가 포함된 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-460">An <see cref="T:System.Object" /> that contains the data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-461">합니다 `version` 와 혼동 해서는 안 됩니다는 <xref:System.Data.DataRow.RowState*> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-461">The `version` should not be confused with the <xref:System.Data.DataRow.RowState*> property.</span></span> <span data-ttu-id="07f6e-462">`version` 인수 열의 원래 값을 기준으로 열에 포함 된 데이터의 상태를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-462">The `version` argument describes the state of the data that is contained by the column relative to the column's original value.</span></span>  
  
 <span data-ttu-id="07f6e-463">예외가 발생할 경우 예외가 생성 됩니다 속성을 설정 하는 경우는 <xref:System.Data.DataTable.ColumnChanging> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-463">When you set the property, an exception is generated if an exception occurs in the <xref:System.Data.DataTable.ColumnChanging> event.</span></span>  
  
 <span data-ttu-id="07f6e-464">즉시 편집 하는 경우 참조 <xref:System.Data.DataRow.EndEdit%2A> 생성 될 수 있는 예외에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-464">If this is an immediate edit, see <xref:System.Data.DataRow.EndEdit%2A> for the exceptions that can be generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-465">다음 예제에서 클릭된 된 셀의 현재 값을 가져옵니다는 <xref:System.Windows.Forms.DataGrid> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-465">The following example gets the current value of a clicked cell in the <xref:System.Windows.Forms.DataGrid> control.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.this5 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="07f6e-466">열이 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-466">The column does not belong to the table.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07f6e-467"><paramref name="column" /> 인수에 null이 포함된 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-467">The <paramref name="column" /> argument contains null.</span></span></exception>
        <exception cref="T:System.Data.VersionNotFoundException"><span data-ttu-id="07f6e-468">행에 이 버전의 데이터가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-468">The row does not have this version of data.</span></span></exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(columnIndex As Integer, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int, System::Data::DataRowVersion] { System::Object ^ get(int columnIndex, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(int * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnIndex"><span data-ttu-id="07f6e-469">열의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-469">The zero-based index of the column.</span></span></param>
        <param name="version"><span data-ttu-id="07f6e-470">원하는 행 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-470">One of the <see cref="T:System.Data.DataRowVersion" /> values that specifies the row version that you want.</span></span> <span data-ttu-id="07f6e-471">가능한 값은 <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> 및 <see langword="Proposed" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-471">Possible values are <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, and <see langword="Proposed" />.</span></span></param>
        <summary><span data-ttu-id="07f6e-472">검색할 데이터의 지정된 버전 및 인덱스를 가진 열에 저장된 데이터를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-472">Gets the data stored in the column, specified by index and version of the data to retrieve.</span></span></summary>
        <value><span data-ttu-id="07f6e-473">데이터가 포함된 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-473">An <see cref="T:System.Object" /> that contains the data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-474">수만 만들거나 업데이트할 행을 호출한 후 합니다 <xref:System.Data.DataRow.BeginEdit%2A> 메서드 마찬가지로 <xref:System.Data.DataRow.EndEdit%2A> 편집을 커밋하려면 메서드를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-474">You can only create or update a row after you call the <xref:System.Data.DataRow.BeginEdit%2A> method; similarly, the <xref:System.Data.DataRow.EndEdit%2A> method must be called to commit the edit.</span></span> <span data-ttu-id="07f6e-475">호출한 후는 <xref:System.Data.DataRow.EndEdit%2A> 메서드를 호출 하기 전에 및의 <xref:System.Data.DataRow.AcceptChanges%2A> 메서드 내부 표현 원래 및 새 제안 된 값이 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-475">After you call the <xref:System.Data.DataRow.EndEdit%2A> method, and before you call the <xref:System.Data.DataRow.AcceptChanges%2A> method, internal representations of the original and new proposed values are stored.</span></span> <span data-ttu-id="07f6e-476">따라서 호출할 때까지 <xref:System.Data.DataRow.AcceptChanges%2A>를 사용할 수는 `version` 열의 값의 버전을 해야 하거나 지정 하는 인수를 `DataRowVersion.Original` 또는 `DataRowVersion.Proposed`합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-476">Therefore, until you call the <xref:System.Data.DataRow.AcceptChanges%2A>, you can use the `version` argument to specify which version of a column's value you need, either the `DataRowVersion.Original` or `DataRowVersion.Proposed`.</span></span> <span data-ttu-id="07f6e-477">그러나 가능한 한 즉시 호출 하는 <xref:System.Data.DataRow.AcceptChanges%2A> 메서드를 열의 버전 전환 `DataRowVersion.Original`합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-477">However, as soon as you call the <xref:System.Data.DataRow.AcceptChanges%2A> method, the version of the column reverts to `DataRowVersion.Original`.</span></span> <span data-ttu-id="07f6e-478">새 행 이면 전달할 수도 있습니다 `DataRowVersion.Default` 열의 기본 값을 검색할 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-478">If the row is new, you can also pass `DataRowVersion.Default` for the parameter to retrieve the column's default value.</span></span> <span data-ttu-id="07f6e-479">전달 하는 경우 `DataRowVersion.Current`을 현재 반환 값을 해당 버전이 무엇이 든 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-479">When passing `DataRowVersion.Current`, the property returns the current value, whatever its version may be.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="07f6e-480"><xref:System.Data.DataRow.BeginEdit%2A> 메서드는 데이터 바인딩된 컨트롤의 값을 변경 하거나 암시적으로 호출 됩니다는 <xref:System.Data.DataRow> 개체에 추가 됩니다 합니다 <xref:System.Data.DataRowCollection>; <xref:System.Data.DataRow.EndEdit%2A> 메서드는 다음 메서드를 호출할 때 암시적으로 호출 됩니다:는 <xref:System.Data.DataRow.AcceptChanges%2A> 메서드는 <xref:System.Data.DataRow> 개체를 <xref:System.Data.DataTable.AcceptChanges%2A> 메서드는 <xref:System.Data.DataTable> 개체 또는 <xref:System.Data.DataRow.CancelEdit%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-480">The <xref:System.Data.DataRow.BeginEdit%2A> method is called implicitly when you change the value of a data-bound control or when a <xref:System.Data.DataRow> object is added to the <xref:System.Data.DataRowCollection>; the <xref:System.Data.DataRow.EndEdit%2A> method is called implicitly when you call the following methods: the <xref:System.Data.DataRow.AcceptChanges%2A> method of the <xref:System.Data.DataRow> object, the <xref:System.Data.DataTable.AcceptChanges%2A> method of the <xref:System.Data.DataTable> object, or the <xref:System.Data.DataRow.CancelEdit%2A> method.</span></span>  
  
 <span data-ttu-id="07f6e-481">반면, 합니다 <xref:System.Data.DataRowVersion> 열거형 `Current` 후 데이터의 버전을 반환 합니다 <xref:System.Data.DataRow.EndEdit%2A> 메서드를 호출한 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-481">By contrast, the <xref:System.Data.DataRowVersion> enumeration `Current` returns the version of the data after the <xref:System.Data.DataRow.EndEdit%2A> method has been called.</span></span>  
  
 <span data-ttu-id="07f6e-482">합니다 `version` 인수와 혼동 하지 마십시오는 <xref:System.Data.DataRow.RowState*> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-482">The `version` argument should not be confused with the <xref:System.Data.DataRow.RowState*> property.</span></span> <span data-ttu-id="07f6e-483">`version` 인수 열의 원래 값을 기준으로 열에 포함 된 데이터의 상태를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-483">The `version` argument describes the state of the data that is contained by the column relative to the column's original value.</span></span> <span data-ttu-id="07f6e-484">합니다 <xref:System.Data.DataRow.RowState*> 부모를 기준으로 전체 행의 상태를 설명 하는 속성 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-484">The <xref:System.Data.DataRow.RowState*> property describes the state of the whole row relative to its parent <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="07f6e-485">예외가 발생할 경우 예외가 생성 됩니다 속성을 설정 하는 경우는 <xref:System.Data.DataTable.ColumnChanging> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-485">When you set the property, an exception is generated if an exception occurs in the <xref:System.Data.DataTable.ColumnChanging> event.</span></span>  
  
 <span data-ttu-id="07f6e-486">즉시 편집 하는 경우 참조 <xref:System.Data.DataRow.EndEdit%2A> 생성 될 수 있는 예외에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-486">If this is an immediate edit, see <xref:System.Data.DataRow.EndEdit%2A> for the exceptions that can be generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-487">다음 예제를 통해 열의 현재 값을 가져옵니다 합니다 <xref:System.Data.DataRow.Item%2A> 의 속성을 <xref:System.Data.DataRow> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-487">The following example gets the current value of a column through the <xref:System.Data.DataRow.Item%2A> property of the <xref:System.Data.DataRow> object.</span></span>  
  
 [!code-vb[Classic WebData DataRow.this3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="07f6e-488"><paramref name="columnIndex" /> 인수가 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-488">The <paramref name="columnIndex" /> argument is out of range.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="07f6e-489">값과 열의 데이터 형식이 일치하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-489">The data types of the value and the column do not match.</span></span></exception>
        <exception cref="T:System.Data.VersionNotFoundException"><span data-ttu-id="07f6e-490">행에 이 버전의 데이터가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-490">The row does not have this version of data.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="07f6e-491">삭제된 행에 값을 설정하려고 한 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-491">An attempt was made to set a value on a deleted row.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(columnName As String, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^, System::Data::DataRowVersion] { System::Object ^ get(System::String ^ columnName, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="07f6e-492">열 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-492">The name of the column.</span></span></param>
        <param name="version"><span data-ttu-id="07f6e-493">원하는 행 버전을 지정하는 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-493">One of the <see cref="T:System.Data.DataRowVersion" /> values that specifies the row version that you want.</span></span> <span data-ttu-id="07f6e-494">가능한 값은 <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> 및 <see langword="Proposed" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-494">Possible values are <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, and <see langword="Proposed" />.</span></span></param>
        <summary><span data-ttu-id="07f6e-495">명명된 열에 저장된 특정 버전의 데이터를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-495">Gets the specified version of data stored in the named column.</span></span></summary>
        <value><span data-ttu-id="07f6e-496">데이터가 포함된 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-496">An <see cref="T:System.Object" /> that contains the data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-497">버전을 사용 하 여 혼동 하지 마십시오는 <xref:System.Data.DataRow.RowState*> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-497">The version should not be confused with the <xref:System.Data.DataRow.RowState*> property.</span></span> <span data-ttu-id="07f6e-498">`version` 인수 열의 원래 값을 기준으로 열에 포함 된 데이터의 상태를 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-498">The `version` argument describes the state of the data that is contained by the column relative to the column's original value.</span></span> <span data-ttu-id="07f6e-499">합니다 <xref:System.Data.DataRow.RowState*> 부모를 기준으로 전체 행의 상태를 설명 하는 속성 <xref:System.Data.DataTable>합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-499">The <xref:System.Data.DataRow.RowState*> property describes the state of the whole row relative to its parent <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="07f6e-500">예외가 발생할 경우 예외가 생성 됩니다 속성을 설정 하는 경우는 <xref:System.Data.DataTable.ColumnChanging> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-500">When you set the property, an exception is generated if an exception occurs in the <xref:System.Data.DataTable.ColumnChanging> event.</span></span>  
  
 <span data-ttu-id="07f6e-501">즉시 편집 하는 경우 참조 <xref:System.Data.DataRow.EndEdit%2A> 생성 될 수 있는 예외에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-501">If this is an immediate edit, see <xref:System.Data.DataRow.EndEdit%2A> for the exceptions that can be generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-502">다음 예제에서는의 클릭된 된 셀에 데이터의 현재 버전을 가져옵니다는 <xref:System.Windows.Forms.DataGrid> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-502">The following example gets the current version of data at a clicked cell of a <xref:System.Windows.Forms.DataGrid> control.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.this4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="07f6e-503"><paramref name="columnName" />에서 지정한 열을 찾을 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-503">The column specified by <paramref name="columnName" /> cannot be found.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="07f6e-504">값과 열의 데이터 형식이 일치하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-504">The data types of the value and the column do not match.</span></span></exception>
        <exception cref="T:System.Data.VersionNotFoundException"><span data-ttu-id="07f6e-505">행에 이 버전의 데이터가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-505">The row does not have this version of data.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="07f6e-506">행이 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-506">The row was deleted.</span></span></exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="ItemArray">
      <MemberSignature Language="C#" Value="public object[] ItemArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] ItemArray" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.ItemArray" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemArray As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Object ^&gt; ^ ItemArray { cli::array &lt;System::Object ^&gt; ^ get(); void set(cli::array &lt;System::Object ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemArray : obj[] with get, set" Usage="System.Data.DataRow.ItemArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07f6e-507">배열을 통해 이 행의 모든 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-507">Gets or sets all the values for this row through an array.</span></span></summary>
        <value><span data-ttu-id="07f6e-508"><see cref="T:System.Object" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-508">An array of type <see cref="T:System.Object" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-509">이 속성은 설정 하거나 배열을 통해이 행에 대 한 값을 가져오는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-509">You can use this property to set or get values for this row through an array.</span></span> <span data-ttu-id="07f6e-510">이 속성을 사용 하 여 값을 설정 하는 경우에 배열 같은 크기 및 열 컬렉션으로 순서 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-510">If you use this property to set values, the array must have the same size and ordering as the column collection.</span></span> <span data-ttu-id="07f6e-511">전달 `null` 에 <xref:System.Data.DataRow.ItemArray%2A> 값이 지정 않았음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-511">Passing `null` in the <xref:System.Data.DataRow.ItemArray%2A> indicates that no value was specified.</span></span>  
  
 <span data-ttu-id="07f6e-512">사용자 예외를 생성할 수 있습니다 합니다 <xref:System.Data.DataTable.ColumnChanging> 이벤트 또는 <xref:System.Data.DataTable.RowChanging> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-512">Users can generate exceptions in the <xref:System.Data.DataTable.ColumnChanging> event or the <xref:System.Data.DataTable.RowChanging> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-513">다음 예제에서는 가져오고 사용 하 여 값을 설정 하는 방법을 보여는 <xref:System.Data.DataRow.ItemArray%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-513">The following examples show how to get and set values using the <xref:System.Data.DataRow.ItemArray%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="07f6e-514">배열이 테이블의 열 수보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-514">The array is larger than the number of columns in the table.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="07f6e-515">배열의 값이 해당 <see cref="P:System.Data.DataColumn.DataType" />의 <see cref="T:System.Data.DataColumn" />과 일치하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-515">A value in the array does not match its <see cref="P:System.Data.DataColumn.DataType" /> in its respective <see cref="T:System.Data.DataColumn" />.</span></span></exception>
        <exception cref="T:System.Data.ConstraintException"><span data-ttu-id="07f6e-516">제약 조건을 위반하여 편집한 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-516">An edit broke a constraint.</span></span></exception>
        <exception cref="T:System.Data.ReadOnlyException"><span data-ttu-id="07f6e-517">편집 중에 읽기 전용 열의 값을 변경하려고 한 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-517">An edit tried to change the value of a read-only column.</span></span></exception>
        <exception cref="T:System.Data.NoNullAllowedException"><span data-ttu-id="07f6e-518">편집 중에 <see cref="P:System.Data.DataColumn.AllowDBNull" /> 개체의 <see cref="T:System.Data.DataColumn" />이 <see langword="false" />인 열에 null 값을 지정하려고 한 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-518">An edit tried to put a null value in a column where <see cref="P:System.Data.DataColumn.AllowDBNull" /> of the <see cref="T:System.Data.DataColumn" /> object is <see langword="false" />.</span></span></exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><span data-ttu-id="07f6e-519">행이 삭제된 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-519">The row has been deleted.</span></span></exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="RejectChanges">
      <MemberSignature Language="C#" Value="public void RejectChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RejectChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.RejectChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub RejectChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RejectChanges();" />
      <MemberSignature Language="F#" Value="member this.RejectChanges : unit -&gt; unit" Usage="dataRow.RejectChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07f6e-520"><see cref="M:System.Data.DataRow.AcceptChanges" />를 마지막으로 호출한 이후에 수행된 행의 모든 변경 내용을 취소합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-520">Rejects all changes made to the row since <see cref="M:System.Data.DataRow.AcceptChanges" /> was last called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-521">호출 하는 경우는 <xref:System.Data.DataRow.RejectChanges%2A> 메서드는 <xref:System.Data.DataRow.CancelEdit%2A> 암시적으로 메서드는 편집을 취소 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-521">When you call the <xref:System.Data.DataRow.RejectChanges%2A> method, the <xref:System.Data.DataRow.CancelEdit%2A> method is implicitly called to cancel any edits.</span></span> <span data-ttu-id="07f6e-522">하는 경우 <xref:System.Data.DataRow.RowState*> 삭제 하거나 수정 하 고, 행의 이전 값으로 되돌아갑니다 및 <xref:System.Data.DataRow.RowState*> 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-522">If <xref:System.Data.DataRow.RowState*> is deleted or modified, the row reverts to its previous values, and <xref:System.Data.DataRow.RowState*> becomes unchanged.</span></span> <span data-ttu-id="07f6e-523">경우는 <xref:System.Data.DataRow.RowState*> 에 추가 된 행이 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-523">If the <xref:System.Data.DataRow.RowState*> is added, the row is removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-524">다음 예제에서는 간단한 <xref:System.Data.DataTable> 10 행과 2 열입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-524">The following example creates a simple <xref:System.Data.DataTable> with 2 columns and 10 rows.</span></span> <span data-ttu-id="07f6e-525">여러 후 <xref:System.Data.DataRow> 항목을 사용 하 여 삭제 합니다 <xref:System.Data.DataRow.Delete%2A> 행 중 하나는 메서드를 호출 하 여 삭제를 취소 <xref:System.Data.DataRow.RejectChanges%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-525">After several <xref:System.Data.DataRow> items are deleted with the <xref:System.Data.DataRow.Delete%2A> method, one of the rows is undeleted by invoking <xref:System.Data.DataRow.RejectChanges%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException"><span data-ttu-id="07f6e-526">행이 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-526">The row does not belong to the table.</span></span></exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RowError">
      <MemberSignature Language="C#" Value="public string RowError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RowError" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowError" />
      <MemberSignature Language="VB.NET" Value="Public Property RowError As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RowError { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RowError : string with get, set" Usage="System.Data.DataRow.RowError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07f6e-527">행에 대한 사용자 지정 오류 설명을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-527">Gets or sets the custom error description for a row.</span></span></summary>
        <value><span data-ttu-id="07f6e-528">오류를 설명하는 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-528">The text describing an error.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-529">사용 하 여는 <xref:System.Data.DataRow.HasErrors%2A> 속성을 먼저 확인 여부를 <xref:System.Data.DataRow> 오류가 포함.</span><span class="sxs-lookup"><span data-stu-id="07f6e-529">Uses the <xref:System.Data.DataRow.HasErrors%2A> property to first determine whether a <xref:System.Data.DataRow> contains errors.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-530">다음 예제에서는 10 개의 행에 표시 된 테이블의 오류 텍스트를 <xref:System.Windows.Forms.DataGrid> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-530">The following example sets error text for ten rows of a table displayed in a <xref:System.Windows.Forms.DataGrid> control.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.RowError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataSet.HasErrors" />
      </Docs>
    </Member>
    <Member MemberName="RowState">
      <MemberSignature Language="C#" Value="public System.Data.DataRowState RowState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowState RowState" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowState As DataRowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowState RowState { System::Data::DataRowState get(); };" />
      <MemberSignature Language="F#" Value="member this.RowState : System.Data.DataRowState" Usage="System.Data.DataRow.RowState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07f6e-531"><see cref="T:System.Data.DataRowCollection" />과의 관계와 관련하여 행의 현재 상태를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-531">Gets the current state of the row with regard to its relationship to the <see cref="T:System.Data.DataRowCollection" />.</span></span></summary>
        <value><span data-ttu-id="07f6e-532"><see cref="T:System.Data.DataRowState" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-532">One of the <see cref="T:System.Data.DataRowState" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-533">값을 <xref:System.Data.DataRow.RowState*> 두 가지 요인에 따라 달라 집니다: 행에서 수행 된 작업의 종류 여부에 관계 없이 <xref:System.Data.DataRow.AcceptChanges%2A> 에서 호출한는 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-533">The value of the <xref:System.Data.DataRow.RowState*> depends on two factors: the kind of operation has been performed on the row, and whether <xref:System.Data.DataRow.AcceptChanges%2A> has been called on the <xref:System.Data.DataRow>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-534">다음 예제에서는 먼저 새로 만듭니다 <xref:System.Data.DataTable> 하나의 열이 있는 단일 다음 만들고 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-534">The following example first creates a new <xref:System.Data.DataTable> with one column, and then creates a single <xref:System.Data.DataRow>.</span></span> <span data-ttu-id="07f6e-535">로 <xref:System.Data.DataRow> 는 생성, 추가, 수정 및 삭제, 해당 <xref:System.Data.DataRow.RowState*> 출력 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-535">As the <xref:System.Data.DataRow> is created, added, modified, and deleted, its <xref:System.Data.DataRow.RowState*> is printed.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.RowState Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowState Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="T:System.Data.DataRowView" />
        <altmember cref="M:System.Data.DataRow.Delete" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="M:System.Data.DataRow.SetModified" />
      </Docs>
    </Member>
    <Member MemberName="SetAdded">
      <MemberSignature Language="C#" Value="public void SetAdded ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAdded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetAdded" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAdded ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAdded();" />
      <MemberSignature Language="F#" Value="member this.SetAdded : unit -&gt; unit" Usage="dataRow.SetAdded " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07f6e-536"><see cref="P:System.Data.DataRow.RowState" />의 <see cref="T:System.Data.DataRow" />를 <see langword="Added" />로 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-536">Changes the <see cref="P:System.Data.DataRow.RowState" /> of a <see cref="T:System.Data.DataRow" /> to <see langword="Added" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-537"><xref:System.Data.DataRow.RowState*>의 <xref:System.Data.DataRow>를 `Added`로 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-537">Changes the <xref:System.Data.DataRow.RowState*> of a <xref:System.Data.DataRow> to `Added`.</span></span> <span data-ttu-id="07f6e-538">현재 행 중 하나에 없는 경우는 `Unchanged` 또는 `Added` 상태 이면 throw는 <xref:System.InvalidOperationException> 메시지와 함께 하는 `SetAdded` 에 호출할 수 있습니다를 `DataRow` 인스턴스를 `RowState` 는 `Unchanged`.</span><span class="sxs-lookup"><span data-stu-id="07f6e-538">If the current row is not in either an `Unchanged` or an `Added` state, it throws an <xref:System.InvalidOperationException> with the message that `SetAdded` can only be invoked on a `DataRow` instance where the `RowState` is `Unchanged`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetModified" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07f6e-539">열에 대한 오류 설명을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-539">Sets the error description for a column.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (System.Data.DataColumn column, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(class System.Data.DataColumn column, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (column As DataColumn, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(System::Data::DataColumn ^ column, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : System.Data.DataColumn * string -&gt; unit" Usage="dataRow.SetColumnError (column, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column"><span data-ttu-id="07f6e-540">오류 설명을 설정할 <see cref="T:System.Data.DataColumn" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-540">The <see cref="T:System.Data.DataColumn" /> to set the error description for.</span></span></param>
        <param name="error"><span data-ttu-id="07f6e-541">오류 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-541">The error description.</span></span></param>
        <summary><span data-ttu-id="07f6e-542"><see cref="T:System.Data.DataColumn" />으로 지정된 열에 대한 오류 설명을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-542">Sets the error description for a column specified as a <see cref="T:System.Data.DataColumn" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-543">사용 하 여 오류 설명을 검사 하 여 <xref:System.Data.DataRow.GetColumnError%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-543">To examine error descriptions, use the <xref:System.Data.DataRow.GetColumnError%2A> method.</span></span>  
  
 <span data-ttu-id="07f6e-544">열 컬렉션에 대 한 오류가 있는지 확인 하려면 사용 된 <xref:System.Data.DataRow.HasErrors%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-544">To determine whether any errors exist for the columns collection, use the <xref:System.Data.DataRow.HasErrors%2A> property.</span></span> <span data-ttu-id="07f6e-545">결과적으로 사용할 수 있습니다는 <xref:System.Data.DataRow.GetColumnsInError%2A> 오류를 사용 하 여 모든 열을 검색 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-545">Consequently, you can use the <xref:System.Data.DataRow.GetColumnsInError%2A> method to retrieve all the columns with errors.</span></span>  
  
 <span data-ttu-id="07f6e-546">경우 `null` 또는 빈 문자열 변수로 전달 됩니다 합니다 `error` 매개 변수를 <xref:System.Data.DataRow> 오류가 설정 되지 않은 것 처럼 동작 및 <xref:System.Data.DataRow.HasErrors%2A> 속성은 false를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-546">If `null` or an empty string is passed in as the `error` parameter, the <xref:System.Data.DataRow> behaves as if no error was set and the <xref:System.Data.DataRow.HasErrors%2A> property will return false.</span></span>  
  
 <span data-ttu-id="07f6e-547">전체 행에 대 한 사용자 지정 오류 설명을 설정 하려면 사용 된 <xref:System.Data.DataRow.RowError%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-547">To set a custom error description on the whole row, use the <xref:System.Data.DataRow.RowError%2A> property.</span></span>  
  
 <span data-ttu-id="07f6e-548">열 컬렉션에 대 한 오류가 있는지 확인 하려면 사용 된 <xref:System.Data.DataRow.HasErrors%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-548">To determine whether any errors exist for the columns collection, use the <xref:System.Data.DataRow.HasErrors%2A> method.</span></span>  
  
 <span data-ttu-id="07f6e-549">사용 하 여 열 컬렉션에 대 한 모든 오류를 지우려면는 <xref:System.Data.DataRow.ClearErrors%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-549">To clear all errors for the columns collection, use the <xref:System.Data.DataRow.ClearErrors%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-550">다음 예제에서는 지정 된 오류 설명을 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-550">The following example sets an error description for a specified <xref:System.Data.DataRow>.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (int columnIndex, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(int32 columnIndex, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (columnIndex As Integer, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(int columnIndex, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : int * string -&gt; unit" Usage="dataRow.SetColumnError (columnIndex, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnIndex"><span data-ttu-id="07f6e-551">열의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-551">The zero-based index of the column.</span></span></param>
        <param name="error"><span data-ttu-id="07f6e-552">오류 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-552">The error description.</span></span></param>
        <summary><span data-ttu-id="07f6e-553">지정된 인덱스를 가진 열에 대한 오류 설명을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-553">Sets the error description for a column specified by index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-554">메서드는 지정 된 열에서 사용자 지정 오류 설명을 설정 하려면 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-554">The method is used to set custom error descriptions on specified columns.</span></span> <span data-ttu-id="07f6e-555">사용할 수는 <xref:System.Windows.Forms.ErrorProvider> 오류의 텍스트를 표시 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-555">You can use the <xref:System.Windows.Forms.ErrorProvider> control to display the text of the error.</span></span>  
  
 <span data-ttu-id="07f6e-556">사용 하 여 오류 설명을 검사 하 여 <xref:System.Data.DataRow.GetColumnError%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-556">To examine error descriptions, use the <xref:System.Data.DataRow.GetColumnError%2A> method.</span></span>  
  
 <span data-ttu-id="07f6e-557">열 컬렉션에 대 한 오류가 있는지 확인 하려면 사용 된 <xref:System.Data.DataRow.HasErrors%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-557">To determine whether any errors exist for the columns collection, use the <xref:System.Data.DataRow.HasErrors%2A> property.</span></span> <span data-ttu-id="07f6e-558">결과적으로 사용할 수 있습니다는 <xref:System.Data.DataRow.GetColumnsInError%2A> 오류를 사용 하 여 모든 열을 검색 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-558">Consequently, you can use the <xref:System.Data.DataRow.GetColumnsInError%2A> method to retrieve all the columns with errors.</span></span>  
  
 <span data-ttu-id="07f6e-559">경우 `null` 또는 빈 문자열 변수로 전달 됩니다 합니다 `error` 매개 변수를 <xref:System.Data.DataRow> 오류가 설정 되지 않은 것 처럼 동작 및 <xref:System.Data.DataRow.HasErrors%2A> 속성은 false를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-559">If `null` or an empty string is passed in as the `error` parameter, the <xref:System.Data.DataRow> behaves as if no error was set and the <xref:System.Data.DataRow.HasErrors%2A> property will return false.</span></span>  
  
 <span data-ttu-id="07f6e-560">전체 행에 대 한 사용자 지정 오류 설명을 설정 하려면 사용 된 <xref:System.Data.DataRow.RowError%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-560">To set a custom error description on the whole row, use the <xref:System.Data.DataRow.RowError%2A> property.</span></span>  
  
 <span data-ttu-id="07f6e-561">사용 하 여 열 컬렉션에 대 한 모든 오류를 지우려면는 <xref:System.Data.DataRow.ClearErrors%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-561">To clear all errors for the columns collection, use the <xref:System.Data.DataRow.ClearErrors%2A> method.</span></span>  
  
 <span data-ttu-id="07f6e-562">전체 행에 적용 되는 오류 텍스트를 설정 하려면 설정의 <xref:System.Data.DataRow.RowError%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-562">To set error text that applies to a whole row, set the <xref:System.Data.DataRow.RowError%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-563">다음 예제에서는 지정 된 오류 설명을 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-563">The following example sets an error description for a specified <xref:System.Data.DataRow>.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="07f6e-564"><paramref name="columnIndex" /> 인수가 범위를 벗어난 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-564">The <paramref name="columnIndex" /> argument is out of range</span></span></exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (string columnName, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(string columnName, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (columnName As String, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(System::String ^ columnName, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : string * string -&gt; unit" Usage="dataRow.SetColumnError (columnName, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="07f6e-565">열 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-565">The name of the column.</span></span></param>
        <param name="error"><span data-ttu-id="07f6e-566">오류 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-566">The error description.</span></span></param>
        <summary><span data-ttu-id="07f6e-567">지정된 이름을 가진 열에 대한 오류 설명을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-567">Sets the error description for a column specified by name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-568">열 이름을 사용 하 여 설정 됩니다는 <xref:System.Data.DataColumn.ColumnName%2A> 의 속성을 <xref:System.Data.DataColumn> 클래스.</span><span class="sxs-lookup"><span data-stu-id="07f6e-568">The name of a column is set with the <xref:System.Data.DataColumn.ColumnName%2A> property of the <xref:System.Data.DataColumn> class.</span></span>  
  
 <span data-ttu-id="07f6e-569">사용 하 여 오류 설명을 검사 하 여 <xref:System.Data.DataRow.GetColumnError%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-569">To examine error descriptions, use the <xref:System.Data.DataRow.GetColumnError%2A> method.</span></span>  
  
 <span data-ttu-id="07f6e-570">열 컬렉션에 대 한 오류가 있는지 확인 하려면 사용 된 <xref:System.Data.DataRow.HasErrors%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-570">To determine whether any errors exist for the columns collection, use the <xref:System.Data.DataRow.HasErrors%2A> property.</span></span> <span data-ttu-id="07f6e-571">결과적으로 사용할 수 있습니다는 <xref:System.Data.DataRow.GetColumnsInError%2A> 오류를 사용 하 여 모든 열을 검색 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-571">Consequently, you can use the <xref:System.Data.DataRow.GetColumnsInError%2A> method to retrieve all the columns with errors.</span></span>  
  
 <span data-ttu-id="07f6e-572">경우 `null` 또는 빈 문자열 변수로 전달 됩니다 합니다 `error` 매개 변수를 <xref:System.Data.DataRow> 오류가 설정 되지 않은 것 처럼 동작 및 <xref:System.Data.DataRow.HasErrors%2A> 속성은 false를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-572">If `null` or an empty string is passed in as the `error` parameter, the <xref:System.Data.DataRow> behaves as if no error was set and the <xref:System.Data.DataRow.HasErrors%2A> property will return false.</span></span>  
  
 <span data-ttu-id="07f6e-573">전체 행에 대 한 사용자 지정 오류 설명을 설정 하려면 사용 된 <xref:System.Data.DataRow.RowError%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-573">To set a custom error description on the whole row, use the <xref:System.Data.DataRow.RowError%2A> property.</span></span>  
  
 <span data-ttu-id="07f6e-574">열 컬렉션에 대 한 오류가 있는지 확인 하려면 사용 된 <xref:System.Data.DataRow.HasErrors%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-574">To determine whether any errors exist for the columns collection, use the <xref:System.Data.DataRow.HasErrors%2A> method.</span></span>  
  
 <span data-ttu-id="07f6e-575">사용 하 여 열 컬렉션에 대 한 모든 오류를 지우려면는 <xref:System.Data.DataRow.ClearErrors%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="07f6e-575">To clear all errors for the columns collection, use the <xref:System.Data.DataRow.ClearErrors%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-576">다음 예제에서는 지정 된 오류 설명을 <xref:System.Data.DataRow>합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-576">The following example sets an error description for a specified <xref:System.Data.DataRow>.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetModified">
      <MemberSignature Language="C#" Value="public void SetModified ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetModified" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetModified ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetModified();" />
      <MemberSignature Language="F#" Value="member this.SetModified : unit -&gt; unit" Usage="dataRow.SetModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07f6e-577"><see cref="P:System.Data.DataRow.RowState" />의 <see cref="T:System.Data.DataRow" />를 <see langword="Modified" />로 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-577">Changes the <see cref="P:System.Data.DataRow.RowState" /> of a <see cref="T:System.Data.DataRow" /> to <see langword="Modified" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-578"><xref:System.Data.DataRow.RowState*>의 <xref:System.Data.DataRow>를 `Modified`로 변경합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-578">Changes the <xref:System.Data.DataRow.RowState*> of a <xref:System.Data.DataRow> to `Modified`.</span></span> <span data-ttu-id="07f6e-579">현재 행 중 하나에 없는 경우는 `Unchanged` 또는 `Added` 상태 이면 throw는 <xref:System.InvalidOperationException> 메시지와 함께 하는 `SetModified` 에 호출할 수 있습니다를 `DataRow` 인스턴스를 `RowState` 는 `Unchanged`.</span><span class="sxs-lookup"><span data-stu-id="07f6e-579">If the current row is not in either an `Unchanged` or an `Added` state, it throws an <xref:System.InvalidOperationException> with the message that `SetModified` can only be invoked on a `DataRow` instance where the `RowState` is `Unchanged`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="SetNull">
      <MemberSignature Language="C#" Value="protected void SetNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetNull(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNull (column As DataColumn)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNull(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.SetNull : System.Data.DataColumn -&gt; unit" Usage="dataRow.SetNull column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column"><span data-ttu-id="07f6e-580"><see cref="T:System.Data.DataColumn" /></span><span class="sxs-lookup"><span data-stu-id="07f6e-580">A <see cref="T:System.Data.DataColumn" />.</span></span></param>
        <summary><span data-ttu-id="07f6e-581">지정된 <see cref="T:System.Data.DataColumn" />의 값을 null 값으로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-581">Sets the value of the specified <see cref="T:System.Data.DataColumn" /> to a null value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-582">사용 된 <xref:System.Data.DataRow.IsNull%2A> 열에 null 값이 포함 되어 있는지 확인 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-582">Use the <xref:System.Data.DataRow.IsNull%2A> method to determine whether a column contains a null value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07f6e-583"><see cref="T:System.Data.DataRow" />의 부모 행을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-583">Sets the parent row of a <see cref="T:System.Data.DataRow" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParentRow (parentRow As DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParentRow(System::Data::DataRow ^ parentRow);" />
      <MemberSignature Language="F#" Value="member this.SetParentRow : System.Data.DataRow -&gt; unit" Usage="dataRow.SetParentRow parentRow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="parentRow"><span data-ttu-id="07f6e-584">새 부모 <see cref="T:System.Data.DataRow" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-584">The new parent <see cref="T:System.Data.DataRow" />.</span></span></param>
        <summary><span data-ttu-id="07f6e-585">지정된 새 부모 <see cref="T:System.Data.DataRow" />를 가지는 <see cref="T:System.Data.DataRow" />의 부모 행을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-585">Sets the parent row of a <see cref="T:System.Data.DataRow" /> with specified new parent <see cref="T:System.Data.DataRow" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow, System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow, class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParentRow (parentRow As DataRow, relation As DataRelation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParentRow(System::Data::DataRow ^ parentRow, System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.SetParentRow : System.Data.DataRow * System.Data.DataRelation -&gt; unit" Usage="dataRow.SetParentRow (parentRow, relation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="parentRow"><span data-ttu-id="07f6e-586">새 부모 <see cref="T:System.Data.DataRow" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-586">The new parent <see cref="T:System.Data.DataRow" />.</span></span></param>
        <param name="relation"><span data-ttu-id="07f6e-587">사용할 관계 <see cref="T:System.Data.DataRelation" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-587">The relation <see cref="T:System.Data.DataRelation" /> to use.</span></span></param>
        <summary><span data-ttu-id="07f6e-588">지정된 새 부모 <see cref="T:System.Data.DataRow" />와 <see cref="T:System.Data.DataRow" />을 가지는 <see cref="T:System.Data.DataRelation" />의 부모 행을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-588">Sets the parent row of a <see cref="T:System.Data.DataRow" /> with specified new parent <see cref="T:System.Data.DataRow" /> and <see cref="T:System.Data.DataRelation" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07f6e-589">다음 예제에서는 특정 자식 행의 부모 행을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-589">The following example sets the parent row of a specific child row.</span></span>  
  
 [!code-vb[Classic WebData DataRow.SetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException"><span data-ttu-id="07f6e-590">행 중의 하나가 테이블에 속하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-590">One of the rows does not belong to a table</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07f6e-591">행 중 하나가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-591">One of the rows is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="07f6e-592">관계가 <see cref="T:System.Data.DataRelationCollection" /> 개체의 <see cref="T:System.Data.DataSet" />에 속하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-592">The relation does not belong to the <see cref="T:System.Data.DataRelationCollection" /> of the <see cref="T:System.Data.DataSet" /> object.</span></span></exception>
        <exception cref="T:System.Data.InvalidConstraintException"><span data-ttu-id="07f6e-593">관계의 자식 <see cref="T:System.Data.DataTable" />이 이 행이 속한 테이블이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="07f6e-593">The relation's child <see cref="T:System.Data.DataTable" /> is not the table this row belongs to.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ Table { System::Data::DataTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Table : System.Data.DataTable" Usage="System.Data.DataRow.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07f6e-594">이 행에 스키마가 있는 <see cref="T:System.Data.DataTable" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-594">Gets the <see cref="T:System.Data.DataTable" /> for which this row has a schema.</span></span></summary>
        <value><span data-ttu-id="07f6e-595">이 행이 속한 <see cref="T:System.Data.DataTable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-595">The <see cref="T:System.Data.DataTable" /> to which this row belongs.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07f6e-596"><xref:System.Data.DataRow> 반드시 행의 모든 테이블의 컬렉션에 속하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-596">A <xref:System.Data.DataRow> does not necessarily belong to any table's collection of rows.</span></span> <span data-ttu-id="07f6e-597">이 동작이 발생 경우를 <xref:System.Data.DataRow> 만든 후에 추가 되지 않은 <xref:System.Data.DataRowCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-597">This behavior occurs when the <xref:System.Data.DataRow> has been created but not added to the <xref:System.Data.DataRowCollection>.</span></span> <span data-ttu-id="07f6e-598">경우는 <xref:System.Data.DataRow.RowState*> 속성이 반환 `DataRowState.Detached`, 행이 컬렉션에 없습니다.</span><span class="sxs-lookup"><span data-stu-id="07f6e-598">If the <xref:System.Data.DataRow.RowState*> property returns `DataRowState.Detached`, the row is not in any collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07f6e-599">다음 예제에서는 합니다 <xref:System.Data.DataRow.Table%2A> 의 열 컬렉션에 대 한 참조를 반환 하도록 속성을 <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="07f6e-599">The following example uses the <xref:System.Data.DataRow.Table%2A> property to return a reference to the columns collection of the <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DataRow.Table Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Table Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
  </Members>
</Type>