<Type Name="DataRowExtensions" FullName="System.Data.DataRowExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b9664472f3d1303545c23069ce33f1f706c4b350" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53224180" /></Metadata><TypeSignature Language="C#" Value="public static class DataRowExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataRowExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRowExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DataRowExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataRowExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type DataRowExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Data.DataRow" /> 클래스에 대한 확장 메서드를 정의합니다. 이 클래스는 static 클래스입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet> API의 두 개의 새 메서드를 사용 하 여 확장 되었습니다 합니다 <xref:System.Data.DataRow> 클래스인 <xref:System.Data.DataRowExtensions.Field%2A> 및 <xref:System.Data.DataRowExtensions.SetField%2A>. 폼에 사용할 수 있습니다 [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] 식 및 메서드 쿼리 <xref:System.Data.DataTable> 개체입니다. 내에서 열 값에 액세스 하는 데 권장 되는 메서드는 [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] 식 및 메서드 쿼리 합니다. 자세한 내용은 [제네릭 Field 및 SetField 메서드](~/docs/framework/data/adonet/generic-field-and-setfield-methods-linq-to-dataset.md)합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Field&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Data.DataRow" />의 각 열 값에 대한 강력한 형식의 액세스를 제공합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, column As DataColumn) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * System.Data.DataColumn -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, column)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <typeparam name="T">열의 반환 형식을 지정하는 제네릭 매개 변수입니다.</typeparam>
        <param name="row">확장 메서드에서 <see langword="this" /> 인스턴스 역할을 하는 입력 <see cref="T:System.Data.DataRow" />입니다.</param>
        <param name="column">값을 반환할 열을 지정하는 입력 <see cref="T:System.Data.DataColumn" /> 개체입니다.</param>
        <summary>지정된 행의 각 열 값에 대해 강력한 형식의 액세스를 제공합니다. <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /> 메서드는 nullable 형식도 지원합니다.</summary>
        <returns><paramref name="T" />으로 지정된 <see cref="T:System.Data.DataColumn" />의 <paramref name="column" /> 형식 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet> 클래스 나타냅니다 **null** 값을 <xref:System.DBNull.Value> 의 인스턴스는 <xref:System.DBNull> 클래스.  A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] 식으로 지정 된 열에 액세스를 **null** 값 생성을 <xref:System.InvalidCastException> 런타임 시. 또한 <xref:System.Data.DataSet> nullable 형식을 지원 하지 않습니다. <xref:System.Data.DataRowExtensions.Field%2A> 메서드 nullable 형식으로 열에 액세스 하기 위한 지원을 제공 합니다.  값의 내부를 <xref:System.Data.DataSet> 됩니다 <xref:System.DBNull.Value>, 반환 되는 nullable 형식은의 값이 포함 됩니다 **null**합니다.  
  
 경우 지정 된 값 <xref:System.Data.DataColumn> 됩니다 <xref:System.DBNull.Value> 하 고 `T` 참조 형식 또는 nullable 형식 반환 형식은 **null**. 합니다 <xref:System.Data.DataRowExtensions.Field%2A> 메서드는 반환 되지 <xref:System.DBNull.Value>합니다.  
  
 <xref:System.Data.DataRowExtensions.Field%2A> 메서드 형식 변환을 수행 하지 않습니다. 형식 변환이 필요한 경우 먼저 필요한 열 값을 사용 하 여를 <xref:System.Data.DataRowExtensions.Field%2A> 메서드. 열 값을 다른 형식으로 변환한 해야 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">내부 열의 값 형식을 제네릭 매개 변수 <paramref name="T" />에 지정된 형식으로 캐스팅할 수 없는 경우</exception>
        <exception cref="T:System.IndexOutOfRangeException"><paramref name="column" />에 지정된 열이 <see cref="T:System.Data.DataTable" />가 속한 <see cref="T:System.Data.DataRow" />에 없는 경우</exception>
        <exception cref="T:System.NullReferenceException">nullable이 아닌 형식에 **null** 값이 할당됩니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnIndex As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, int columnIndex);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * int -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">열의 반환 형식을 지정하는 제네릭 매개 변수입니다.</typeparam>
        <param name="row">확장 메서드에서 <see langword="this" /> 인스턴스 역할을 하는 입력 <see cref="T:System.Data.DataRow" />입니다.</param>
        <param name="columnIndex">열 인덱스입니다.</param>
        <summary>지정된 행의 각 열 값에 대해 강력한 형식의 액세스를 제공합니다. <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /> 메서드는 nullable 형식도 지원합니다.</summary>
        <returns><paramref name="T" />으로 지정된 <see cref="T:System.Data.DataColumn" />의 <paramref name="columnIndex" /> 형식 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet> 클래스 나타냅니다 **null** 값을 <xref:System.DBNull.Value> 의 인스턴스는 <xref:System.DBNull> 클래스.  A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] 식으로 지정 된 열에 액세스를 **null** 값 생성을 <xref:System.InvalidCastException> 런타임 시. 또한 <xref:System.Data.DataSet> nullable 형식을 지원 하지 않습니다. <xref:System.Data.DataRowExtensions.Field%2A> 메서드 nullable 형식으로 열에 액세스 하기 위한 지원을 제공 합니다.  값의 내부를 <xref:System.Data.DataSet> 됩니다 <xref:System.DBNull.Value>, 반환 되는 nullable 형식은의 값이 포함 됩니다 **null**합니다.  
  
 경우 지정 된 값 <xref:System.Data.DataColumn> 됩니다 **null** 하 고 `T` 반환 형식은 참조 형식 또는 nullable 형식이 **null**합니다.  합니다 <xref:System.Data.DataRowExtensions.Field%2A> 메서드는 반환 되지 <xref:System.DBNull.Value>합니다.  
  
 <xref:System.Data.DataRowExtensions.Field%2A> 메서드 형식 변환을 수행 하지 않습니다. 형식 변환이 필요한 경우 먼저 필요한 열 값을 사용 하 여를 <xref:System.Data.DataRowExtensions.Field%2A> 메서드. 열 값을 다른 형식으로 변환한 해야 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">내부 열의 값 형식을 제네릭 매개 변수 <paramref name="T" />에 지정된 형식으로 캐스팅할 수 없는 경우</exception>
        <exception cref="T:System.IndexOutOfRangeException"><paramref name="ordinal" />에 지정된 열이 <see cref="T:System.Data.DataTable" />가 속한 <see cref="T:System.Data.DataRow" />에 없는 경우</exception>
        <exception cref="T:System.NullReferenceException">nullable이 아닌 형식에 **null** 값이 할당됩니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnName As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * string -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">열의 반환 형식을 지정하는 제네릭 매개 변수입니다.</typeparam>
        <param name="row">확장 메서드에서 <see langword="this" /> 인스턴스 역할을 하는 입력 <see cref="T:System.Data.DataRow" />입니다.</param>
        <param name="columnName">값을 반환할 열의 이름입니다.</param>
        <summary>지정된 행의 각 열 값에 대해 강력한 형식의 액세스를 제공합니다. <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /> 메서드는 nullable 형식도 지원합니다.</summary>
        <returns><paramref name="T" />으로 지정된 <see cref="T:System.Data.DataColumn" />의 <paramref name="columnName" /> 형식 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet> 클래스 나타냅니다 **null** 값을 <xref:System.DBNull.Value> 의 인스턴스는 <xref:System.DBNull> 클래스. A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] 식으로 지정 된 열에 액세스를 **null** 값 생성을 <xref:System.InvalidCastException> 런타임 시. 또한 <xref:System.Data.DataSet> nullable 형식을 지원 하지 않습니다. <xref:System.Data.DataRowExtensions.Field%2A> 메서드 nullable 형식으로 열에 액세스 하기 위한 지원을 제공 합니다. 값의 내부를 <xref:System.Data.DataSet> 됩니다 <xref:System.DBNull.Value>, 반환 되는 nullable 형식은의 값이 포함 됩니다 **null**합니다.  
  
 경우 지정 된 값 <xref:System.Data.DataColumn> 됩니다 **null** 및 `T` 참조 형식 또는 nullable 형식 반환 유형은 **null**합니다. 합니다 <xref:System.Data.DataRowExtensions.Field%2A> 메서드는 반환 되지 <xref:System.DBNull.Value>합니다.  
  
 <xref:System.Data.DataRowExtensions.Field%2A> 메서드 형식 변환을 수행 하지 않습니다. 형식 변환이 필요한 경우 먼저 필요한 열 값을 사용 하 여를 <xref:System.Data.DataRowExtensions.Field%2A> 메서드. 열 값을 다른 형식으로 변환한 해야 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">내부 열의 값 형식을 제네릭 매개 변수 <paramref name="T" />에 지정된 형식으로 캐스팅할 수 없는 경우</exception>
        <exception cref="T:System.IndexOutOfRangeException"><paramref name="columnName" />에 지정된 열이 <see cref="T:System.Data.DataTable" />가 속한 <see cref="T:System.Data.DataRow" />에 없는 경우</exception>
        <exception cref="T:System.NullReferenceException">nullable이 아닌 형식에 <see langword="null" /> 값이 할당된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, column As DataColumn, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::Data::DataColumn ^ column, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * System.Data.DataColumn * System.Data.DataRowVersion -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, column, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">열의 반환 형식을 지정하는 제네릭 매개 변수입니다.</typeparam>
        <param name="row">확장 메서드에서 <see langword="this" /> 인스턴스 역할을 하는 입력 <see cref="T:System.Data.DataRow" />입니다.</param>
        <param name="column">값을 반환할 열을 지정하는 입력 <see cref="T:System.Data.DataColumn" /> 개체입니다.</param>
        <param name="version">반환할 열 값의 버전을 지정하는 <see langword="Current" /> 또는 <see langword="Original" /> 버전 등의 <see cref="T:System.Data.DataRowVersion" /> 열거형입니다.</param>
        <summary>지정된 행의 각 열 값에 대해 강력한 형식의 액세스를 제공합니다. <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /> 메서드는 nullable 형식도 지원합니다.</summary>
        <returns><paramref name="T" /> 및 <paramref name="column" />에 지정된 <see cref="T:System.Data.DataColumn" />의 <paramref name="version" /> 형식 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet> 클래스 나타냅니다 **null** 값을 <xref:System.DBNull.Value> 의 인스턴스는 <xref:System.DBNull> 클래스.  A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] 식으로 지정 된 열에 액세스를 **null** 값 생성을 <xref:System.InvalidCastException> 런타임 시. 또한 <xref:System.Data.DataSet> nullable 형식을 지원 하지 않습니다. <xref:System.Data.DataRowExtensions.Field%2A> 메서드 nullable 형식으로 열에 액세스 하기 위한 지원을 제공 합니다.  값의 내부를 <xref:System.Data.DataSet> 됩니다 <xref:System.DBNull.Value>, 반환 되는 nullable 형식은의 값이 포함 됩니다 **null**합니다.  
  
 경우는 지정 된 값 <xref:System.Data.DataColumn> isnull 및 `T` 반환 형식은 참조 형식 또는 nullable 형식이 **null**합니다. 합니다 <xref:System.Data.DataRowExtensions.Field%2A> 메서드는 반환 되지 <xref:System.DBNull.Value>합니다.  
  
 <xref:System.Data.DataRowExtensions.Field%2A> 메서드 형식 변환을 수행 하지 않습니다. 형식 변환이 필요한 경우 먼저 필요한 열 값을 사용 하 여를 <xref:System.Data.DataRowExtensions.Field%2A> 메서드. 열 값을 다른 형식으로 변환한 해야 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">내부 열의 값 형식을 제네릭 매개 변수 <paramref name="T" />에 지정된 형식으로 캐스팅할 수 없는 경우</exception>
        <exception cref="T:System.IndexOutOfRangeException"><paramref name="column" />에 지정된 열이 <see cref="T:System.Data.DataTable" />가 속한 <see cref="T:System.Data.DataRow" />에 없는 경우</exception>
        <exception cref="T:System.NullReferenceException">nullable이 아닌 형식에 **null** 값이 할당됩니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, int columnIndex, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnIndex As Integer, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, int columnIndex, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * int * System.Data.DataRowVersion -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnIndex, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">열의 반환 형식을 지정하는 제네릭 매개 변수입니다.</typeparam>
        <param name="row">확장 메서드에서 <see langword="this" /> 인스턴스 역할을 하는 입력 <see cref="T:System.Data.DataRow" />입니다.</param>
        <param name="columnIndex">값을 반환할 열의 서수(0부터 시작)입니다.</param>
        <param name="version">반환할 열 값의 버전을 지정하는 <see langword="Current" /> 또는 <see langword="Original" /> 버전 등의 <see cref="T:System.Data.DataRowVersion" /> 열거형입니다.</param>
        <summary>지정된 행의 각 열 값에 대해 강력한 형식의 액세스를 제공합니다. <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /> 메서드는 nullable 형식도 지원합니다.</summary>
        <returns><paramref name="T" /> 및 <paramref name="ordinal" />에 지정된 <see cref="T:System.Data.DataColumn" />의 <paramref name="version" /> 형식 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet> 클래스 나타냅니다 **null** 값을 <xref:System.DBNull.Value> 의 인스턴스는 <xref:System.DBNull> 클래스.  A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] 식으로 지정 된 열에 액세스를 **null** 값 생성을 <xref:System.InvalidCastException> 런타임 시. 또한 <xref:System.Data.DataSet> nullable 형식을 지원 하지 않습니다. <xref:System.Data.DataRowExtensions.Field%2A> 메서드 nullable 형식으로 열에 액세스 하기 위한 지원을 제공 합니다.  값의 내부를 <xref:System.Data.DataSet> 됩니다 <xref:System.DBNull.Value>, 반환 되는 nullable 형식은의 값이 포함 됩니다 **null**합니다.  
  
 경우는 지정 된 값 <xref:System.Data.DataColumn> isnull 및 `T` 반환 형식은 참조 형식 또는 nullable 형식이 **null**합니다. 합니다 <xref:System.Data.DataRowExtensions.Field%2A> 메서드는 반환 되지 <xref:System.DBNull.Value>합니다.  
  
 <xref:System.Data.DataRowExtensions.Field%2A> 메서드 형식 변환을 수행 하지 않습니다. 형식 변환이 필요한 경우 먼저 필요한 열 값을 사용 하 여를 <xref:System.Data.DataRowExtensions.Field%2A> 메서드. 열 값을 다른 형식으로 변환한 해야 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">내부 열의 값 형식을 제네릭 매개 변수 <paramref name="T" />에 지정된 형식으로 캐스팅할 수 없는 경우</exception>
        <exception cref="T:System.IndexOutOfRangeException"><paramref name="ordinal" />에 지정된 열이 <see cref="T:System.Data.DataTable" />가 속한 <see cref="T:System.Data.DataRow" />에 없는 경우</exception>
        <exception cref="T:System.NullReferenceException">nullable이 아닌 형식에 **null** 값이 할당됩니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, string columnName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, string columnName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnName As String, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::String ^ columnName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * string * System.Data.DataRowVersion -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">열의 반환 형식을 지정하는 제네릭 매개 변수입니다.</typeparam>
        <param name="row">확장 메서드에서 <see langword="this" /> 인스턴스 역할을 하는 입력 <see cref="T:System.Data.DataRow" />입니다.</param>
        <param name="columnName">값을 반환할 열의 이름입니다.</param>
        <param name="version">반환할 열 값의 버전을 지정하는 <see langword="Current" /> 또는 <see langword="Original" /> 버전 등의 <see cref="T:System.Data.DataRowVersion" /> 열거형입니다.</param>
        <summary>지정된 행의 각 열 값에 대해 강력한 형식의 액세스를 제공합니다. <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /> 메서드는 nullable 형식도 지원합니다.</summary>
        <returns><paramref name="T" /> 및 <paramref name="columnName" />에 지정된 <see cref="T:System.Data.DataColumn" />의 <paramref name="version" /> 형식 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet> 클래스 나타냅니다 **null** 값을 <xref:System.DBNull.Value> 의 인스턴스는 <xref:System.DBNull> 클래스.  A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] 식으로 지정 된 열에 액세스를 **null** 값 생성을 <xref:System.InvalidCastException> 런타임 시. 또한 <xref:System.Data.DataSet> nullable 형식을 지원 하지 않습니다. <xref:System.Data.DataRowExtensions.Field%2A> 메서드 nullable 형식으로 열에 액세스 하기 위한 지원을 제공 합니다.  값의 내부를 <xref:System.Data.DataSet> 됩니다 <xref:System.DBNull.Value>, 반환 되는 nullable 형식은의 값이 포함 됩니다 **null**합니다.  
  
 경우는 지정 된 값 <xref:System.Data.DataColumn> isnull 및 `T` 반환 형식은 참조 형식 또는 nullable 형식이 **null**합니다. 합니다 <xref:System.Data.DataRowExtensions.Field%2A> 메서드는 반환 되지 <xref:System.DBNull.Value>합니다.  
  
 <xref:System.Data.DataRowExtensions.Field%2A> 메서드 형식 변환을 수행 하지 않습니다. 형식 변환이 필요한 경우 먼저 필요한 열 값을 사용 하 여를 <xref:System.Data.DataRowExtensions.Field%2A> 메서드. 열 값을 다른 형식으로 변환한 해야 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">내부 열의 값 형식을 제네릭 매개 변수 <paramref name="T" />에 지정된 형식으로 캐스팅할 수 없는 경우</exception>
        <exception cref="T:System.IndexOutOfRangeException"><paramref name="columnName" />에 지정된 열이 <see cref="T:System.Data.DataTable" />가 속한 <see cref="T:System.Data.DataRow" />에 없는 경우</exception>
        <exception cref="T:System.NullReferenceException">nullable이 아닌 형식에 **null** 값이 할당됩니다.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetField&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Data.DataRow" />에서 지정된 열의 새 값을 설정합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, column As DataColumn, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, System::Data::DataColumn ^ column, T value);" />
      <MemberSignature Language="F#" Value="static member SetField : System.Data.DataRow * System.Data.DataColumn * 'T -&gt; unit" Usage="System.Data.DataRowExtensions.SetField (row, column, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">열의 값 형식을 지정하는 제네릭 매개 변수입니다.</typeparam>
        <param name="row">확장 메서드에서 <see langword="this" /> 인스턴스 역할을 하는 입력 <see cref="T:System.Data.DataRow" />입니다.</param>
        <param name="column">입력 <see cref="T:System.Data.DataColumn" />은 검색할 행 값을 지정합니다.</param>
        <param name="value">지정된 열의 새 행 값(<paramref name="T" /> 형식)입니다.</param>
        <summary><see cref="T:System.Data.DataRow" />에서 지정된 열의 새 값을 설정합니다. <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /> 메서드는 nullable 형식도 지원합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 `value` 됩니다 **null**의 <xref:System.Data.DataRowExtensions.SetField%2A> 메서드 변환 합니다 **null** 값을 <xref:System.DBNull.Value> 기본 <xref:System.Data.DataColumn>.  
  
 <xref:System.Data.DataRowExtensions.SetField%2A> 메서드 형식 변환이 수행 되지 않습니다. 그렇다고 해서 형식 변환이 발생하지 않는다는 것은 아닙니다. <xref:System.Data.DataRowExtensions.SetField%2A> 메서드는 [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] 클래스의 <xref:System.Data.DataRow> 동작을 노출합니다. 형식 변환을 수행할 수 없습니다는 <xref:System.Data.DataRow> 개체와 변환 된 값을 다음 행에 저장 됩니다.  
  
 예외를 통해 전달할 수는 <xref:System.Data.DataRowExtensions.SetField%2A> 메서드 내부에서 <xref:System.Data.DataRow> 개체입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="column" />에서 지정한 열을 찾을 수 없는 경우</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="column" />이 **null**입니다.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에 값을 설정하려고 한 경우</exception>
        <exception cref="T:System.InvalidCastException">내부 열의 값 형식을 제네릭 매개 변수 <paramref name="T" />에 지정된 형식으로 캐스팅할 수 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, int columnIndex, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, columnIndex As Integer, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, int columnIndex, T value);" />
      <MemberSignature Language="F#" Value="static member SetField : System.Data.DataRow * int * 'T -&gt; unit" Usage="System.Data.DataRowExtensions.SetField (row, columnIndex, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">열의 값 형식을 지정하는 제네릭 매개 변수입니다.</typeparam>
        <param name="row">확장 메서드에서 <see langword="this" /> 인스턴스 역할을 하는 입력 <see cref="T:System.Data.DataRow" />입니다.</param>
        <param name="columnIndex">값을 설정할 열의 서수(0부터 시작)입니다.</param>
        <param name="value">지정된 열의 새 행 값(<paramref name="T" /> 형식)입니다.</param>
        <summary>메서드가 호출된 <see cref="T:System.Data.DataRow" />에서 지정된 열의 새 값을 설정합니다. <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /> 메서드는 nullable 형식도 지원합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 `value` 됩니다 **null**의 <xref:System.Data.DataRowExtensions.SetField%2A> 메서드 변환 합니다 **null** 값을 <xref:System.DBNull.Value> 기본 <xref:System.Data.DataColumn>.  
  
 <xref:System.Data.DataRowExtensions.SetField%2A> 메서드 형식 변환이 수행 되지 않습니다. 그렇다고 해서 형식 변환이 발생하지 않는다는 것은 아닙니다. <xref:System.Data.DataRowExtensions.SetField%2A> 메서드는 [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] 클래스의 <xref:System.Data.DataRow> 동작을 노출합니다. 형식 변환을 수행할 수 없습니다는 <xref:System.Data.DataRow> 개체와 변환 된 값을 다음 행에 저장 됩니다.  
  
 예외를 통해 전달할 수는 <xref:System.Data.DataRowExtensions.SetField%2A> 메서드 내부에서 <xref:System.Data.DataRow> 개체입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에 값을 설정하려고 한 경우</exception>
        <exception cref="T:System.IndexOutOfRangeException"><paramref name="ordinal" /> 인수가 범위를 벗어난 경우</exception>
        <exception cref="T:System.InvalidCastException">내부 열의 값 형식을 제네릭 매개 변수 <paramref name="T" />에 지정된 형식으로 캐스팅할 수 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, string columnName, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, string columnName, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, columnName As String, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, System::String ^ columnName, T value);" />
      <MemberSignature Language="F#" Value="static member SetField : System.Data.DataRow * string * 'T -&gt; unit" Usage="System.Data.DataRowExtensions.SetField (row, columnName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">열의 값 형식을 지정하는 제네릭 매개 변수입니다.</typeparam>
        <param name="row">확장 메서드에서 <see langword="this" /> 인스턴스 역할을 하는 입력 <see cref="T:System.Data.DataRow" />입니다.</param>
        <param name="columnName">값을 설정할 열의 이름입니다.</param>
        <param name="value">지정된 열의 새 행 값(<paramref name="T" /> 형식)입니다.</param>
        <summary><see cref="T:System.Data.DataRow" />에서 지정된 열의 새 값을 설정합니다. <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /> 메서드는 nullable 형식도 지원합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 `value` 됩니다 **null**의 <xref:System.Data.DataRowExtensions.SetField%2A> 메서드 변환 합니다 **null** 값을 <xref:System.DBNull.Value> 기본 <xref:System.Data.DataColumn>.  
  
 <xref:System.Data.DataRowExtensions.SetField%2A> 메서드 형식 변환이 수행 되지 않습니다. 그렇다고 해서 형식 변환이 발생하지 않는다는 것은 아닙니다. <xref:System.Data.DataRowExtensions.SetField%2A> 메서드는 [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] 클래스의 <xref:System.Data.DataRow> 동작을 노출합니다. 형식 변환을 수행할 수 없습니다는 <xref:System.Data.DataRow> 개체와 변환 된 값을 다음 행에 저장 됩니다.  
  
 예외를 통해 전달할 수는 <xref:System.Data.DataRowExtensions.SetField%2A> 메서드 내부에서 <xref:System.Data.DataRow> 개체입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="columnName" />에서 지정한 열을 찾을 수 없는 경우</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에 값을 설정하려고 한 경우</exception>
        <exception cref="T:System.InvalidCastException">내부 열의 값 형식을 제네릭 매개 변수 <paramref name="T" />에 지정된 형식으로 캐스팅할 수 없는 경우</exception>
      </Docs>
    </Member>
  </Members>
</Type>