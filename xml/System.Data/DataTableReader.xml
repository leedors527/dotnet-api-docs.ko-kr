<Type Name="DataTableReader" FullName="System.Data.DataTableReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d96f365684ba6298910d34f1cda3153f7d6f8e88" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58744497" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataTableReader : System.Data.Common.DbDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataTableReader extends System.Data.Common.DbDataReader" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataTableReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataTableReader&#xA;Inherits DbDataReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTableReader sealed : System::Data::Common::DbDataReader" />
  <TypeSignature Language="F#" Value="type DataTableReader = class&#xA;    inherit DbDataReader" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Data.DataTableReader" />는 하나 이상의 <see cref="T:System.Data.DataTable" /> 개체 내용을 하나 이상의 앞으로만 이동 가능한 읽기 전용 결과 집합 형태로 가져옵니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTableReader> 와 같은 다른 데이터 판독기와 비슷하게 작동 합니다 <xref:System.Data.SqlClient.SqlDataReader>점을 제외 하 고는 <xref:System.Data.DataTableReader> 행에 대해 반복을 제공를 <xref:System.Data.DataTable>. 즉, 캐시에 행을 반복 하기 위한 제공 합니다. 캐시 된 데이터를 수정할 수 있습니다 하는 동안는 <xref:System.Data.DataTableReader> 가 활성 상태인 경우 판독기의 위치를 자동으로 유지 합니다.  
  
 만들 때를 <xref:System.Data.DataTableReader> 에서 <xref:System.Data.DataTable>, 결과 <xref:System.Data.DataTableReader> 개체와 동일한 데이터를 가진 하나의 결과 집합이 포함 되어 있습니다.는 <xref:System.Data.DataTable> 에서 생성 된, 삭제 된 것으로 표시 된 모든 행을 제외 하 고 합니다. 열이 원래와 동일한 순서로 표시 <xref:System.Data.DataTable>합니다. 반환 된 결과의 구조는 원래 스키마와 데이터에 동일한 <xref:System.Data.DataTable>입니다. <xref:System.Data.DataTableReader> 를 호출 하 여 생성 된를 <xref:System.Data.DataSet.CreateDataReader*> 메서드의 <xref:System.Data.DataSet> 경우 개체는 여러 결과 집합을 포함 합니다 <xref:System.Data.DataSet> 둘 이상의 테이블을 포함 합니다. 결과 순서와 동일 합니다 <xref:System.Data.DataTable> 개체를 <xref:System.Data.DataTableCollection> 의 <xref:System.Data.DataSet> 개체.  
  
 반환된 된 결과 집합의 각 현재 버전만 포함 <xref:System.Data.DataRow>; 삭제 표시 된 행은 건너뜁니다.  
  
 합니다 `DataTableReader` 안정적 제공 반복기, 즉 내용의 `DataTableReader` 반복 하는 동안 기본 컬렉션의 크기를 수정 하는 경우 무효화 되지 않습니다. 예를 들어 하나 이상의 대 한 행을 <xref:System.Data.DataTable.Rows%2A> 컬렉션을 삭제 하거나 반복 내의 현재 위치 하는 동안 제거할는 `DataTableReader` 적절 하 게 유지 됩니다 및 반복기를 무효화 하지 않습니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Data.DataTableReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTableReader (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTableReader(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTableReader : System.Data.DataTable -&gt; System.Data.DataTableReader" Usage="new System.Data.DataTableReader dataTable" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable">새 <see cref="T:System.Data.DataTable" />가 결과 집합을 가져오는 <see cref="T:System.Data.DataTableReader" />입니다.</param>
        <summary>제공된 <see cref="T:System.Data.DataTableReader" />의 데이터를 사용하여 <see cref="T:System.Data.DataTable" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTableReader (System.Data.DataTable[] dataTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.DataTable[] dataTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataTables As DataTable())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTableReader(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTableReader : System.Data.DataTable[] -&gt; System.Data.DataTableReader" Usage="new System.Data.DataTableReader dataTables" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" />
      </Parameters>
      <Docs>
        <param name="dataTables">새 <see cref="T:System.Data.DataTable" /> 개체의 결과를 제공하는 <see cref="T:System.Data.DataTableReader" /> 개체의 배열입니다.</param>
        <summary><see cref="T:System.Data.DataTableReader" /> 개체의 제공된 배열을 사용하여 <see cref="T:System.Data.DataTable" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 만들어야 하는 경우는 <xref:System.Data.DataTableReader> 모든 또는 특정에 있는 테이블의 하위 집합에 따라 <xref:System.Data.DataSet>, 호출을 `DataSet`의 <xref:System.Data.DataSet.CreateDataReader*> 메서드. 새 않으려면 <xref:System.Data.DataTableReader> 의 그룹을 기반으로 하는 인스턴스 `DataTable` 않는 인스턴스가 고 그렇지 관련이 생성자를 사용 합니다. 순서 다시 정렬 하려면이 생성자의 활용도 합니다 `DataTables` 내에서 `DataTableReader`이면 해당 원본 내에서 순서 `DataSet` 요구를 충족 하지 않습니다.  
  
   
  
## Examples  
 다음 예에서 TestConstructor 메서드 두 개 만듭니다 <xref:System.Data.DataTable> 인스턴스. 이 생성자를 보여 주기 위해 합니다 <xref:System.Data.DataTableReader> 클래스, 예제에서는 새 `DataTableReader` 두 가지를 포함 하는 배열을 기반으로 `DataTables`, 콘솔에 처음 몇 개의 열에서 콘텐츠를 인쇄 하는 간단한 작업을 수행 하 고 창입니다. 이 애플리케이션을 테스트 하려면 새 콘솔 애플리케이션을 만들고 새로 만든된 파일에 샘플 코드를 붙여넣습니다.  
  
 [!code-csharp[DataWorks DataTableReader.ctor#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.ctor/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.ctor/VB/source.vb#1)]  
  
 콘솔 창에는 다음과 같은 결과가 표시 됩니다.  
  
```  
1 Mary  
2 Andy  
3 Peter  
4 Russ  
1 Wireless Network Card  
2 Hard Drive  
3 Monitor  
4 CPU  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="dataTableReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 <see cref="T:System.Data.DataTableReader" />를 닫습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 `Close()` 닫힌에서 `DataTableReader` 개체 오류가 발생 하지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.DataTableReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.DataTableReader" />의 현재 행에 대한 중첩 수준입니다.</summary>
        <value>현재 행의 중첩 수준이며 항상 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `DataTableReader` 중첩을 지원 하지 않습니다. `Depth` 속성은 항상 0을 반환 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.DataTableReader.FieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 행에 있는 열의 수를 반환합니다.</summary>
        <value>유효한 결과 집합에 배치되지 않으면 0이고, 그렇지 않으면 현재 행에 있는 열의 수입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">닫힌 <see cref="T:System.Data.DataTableReader" />의 필드 수를 검색하려고 한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetBoolean : int -&gt; bool" Usage="dataTableReader.GetBoolean ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">열 서수(0부터 시작)입니다.</param>
        <summary><see cref="T:System.Boolean" />으로 지정된 열 값을 가져옵니다.</summary>
        <returns>지정된 열의 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 변환이 수행 되지 않습니다. 따라서 검색 되는 데이터 이미 여야 부울 값 또는 부울로 강제 변환 하거나 예외가 생성 됩니다.  
  
 호출 <xref:System.Data.DataTableReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값 있는지 확인 합니다.  
  
   
  
## Examples  
 다음 예제에서는 2에 전달 된 기능 내에서 열의 내용을 <xref:System.Data.DataTableReader>합니다. 코드 표시 텍스트 값을 특정 행 내의 열이 null 이면 \<NULL >. 열 내에서 데이터가 올바른 형식이 없는 경우이 예제에서는 각 행에 대 한 오류 메시지를 표시 합니다.  
  
 [!code-csharp[DataWorks DataTableReader.GetBoolean#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBoolean/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetBoolean#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBoolean/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
        <exception cref="T:System.InvalidOperationException">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
        <exception cref="T:System.InvalidCastException">지정된 열에 <see langword="Boolean" />이 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (ordinal As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetByte : int -&gt; byte" Usage="dataTableReader.GetByte ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">열 서수(0부터 시작)입니다.</param>
        <summary>지정된 열의 값에 해당하는 바이트 값을 가져옵니다.</summary>
        <returns>지정된 열의 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 변환이 수행 되지 않습니다. 따라서 검색 된 데이터 바이트 또는 바이트 강제 속해 있어야 합니다.  
  
 호출 <xref:System.Data.DataTableReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값 있는지 확인 합니다.  
  
   
  
## Examples  
 다음 예제에서는 2에 전달 된 기능 내에서 열의 내용을 <xref:System.Data.DataTableReader>합니다. 코드 표시 텍스트 값을 특정 행 내의 열이 null 이면 \<NULL >. 열 내에서 데이터를 없는 경우 올바른 형식의 예제는 각 행에 대 한 오류 메시지를 표시 합니다.  
  
 [!code-csharp[DataWorks DataTableReader.GetByte#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetByte/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetByte#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetByte/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
        <exception cref="T:System.InvalidOperationException">닫힌 <see langword="DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
        <exception cref="T:System.InvalidCastException">지정된 열에 바이트가 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int ordinal, long dataIndex, byte[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 ordinal, int64 dataIndex, unsigned int8[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (ordinal As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int ordinal, long dataIndex, cli::array &lt;System::Byte&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="dataTableReader.GetBytes (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">열 서수(0부터 시작)입니다.</param>
        <param name="dataIndex">읽기 작업을 시작할 필드 내의 인덱스입니다.</param>
        <param name="buffer">바이트 스트림을 읽을 버퍼입니다.</param>
        <param name="bufferIndex">데이터 배치를 시작할 버퍼 내에 있는 인덱스입니다.</param>
        <param name="length">버퍼로 복사할 최대 길이입니다.</param>
        <summary>지정된 열 오프셋에서 시작되는 바이트 스트림을 지정된 버퍼 오프셋에서 시작하는 배열로 버퍼에 읽어 들입니다.</summary>
        <returns>읽은 실제 바이트 수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `GetBytes` 필드에 사용할 수 있는 바이트 수를 반환합니다. 대부분의 경우이 값은 필드의 정확한 길이입니다. 그러나 반환 된 숫자 보다 작을 수도 있습니다 필드의 길이 경우 `GetBytes` 바이트를 얻는 필드에서 이미 사용 되었습니다. 예를 들어 경우 수 있습니다는 <xref:System.Data.DataTableReader> 버퍼로 큰 데이터 구조를 읽고  
  
 버퍼를 전달 하는 경우 `null` (`Nothing` Visual Basic에서), `GetBytes` 바이트, 버퍼 오프셋된 매개 변수에 따라 나머지 크기가 아닌 전체 필드의 길이 반환 합니다.  
  
 변환이 수행 되지 않습니다. 따라서 검색 되는 데이터 있어야 바이트 배열 또는 바이트 배열으로 강제 변환 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.DataTableReader> AdventureWorks 예제 데이터베이스에 각 이미지 검색 C:\ 폴더에 별도 파일로 저장 하는 데이터를 기반으로 합니다. 이 애플리케이션을 테스트 하려면 새 콘솔 애플리케이션, System.Drawing.dll 어셈블리를 참조 하 고 새로 생성된 된 파일에 샘플 코드를 붙여넣습니다.  
  
 [!code-csharp[DataWorks DataTableReader.GetBytes#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBytes/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetBytes#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBytes/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
        <exception cref="T:System.InvalidOperationException">닫힌 <see langword="DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
        <exception cref="T:System.InvalidCastException">지정된 열에 바이트 배열이 없는 경우</exception>
        <altmember cref="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (ordinal As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetChar : int -&gt; char" Usage="dataTableReader.GetChar ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">열 서수(0부터 시작)입니다.</param>
        <summary>지정된 열의 값을 문자로 가져옵니다.</summary>
        <returns>열의 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 변환이 수행 되지 않습니다. 따라서 검색 된 데이터 문자 또는 문자를 강제 속해 있어야 합니다.  
  
 호출 <xref:System.Data.DataTableReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값 있는지 확인 합니다.  
  
   
  
## Examples  
 다음 예제에서는 2 전달 DataTableReader 내에서 열의 내용을 표시 합니다. 코드 표시 텍스트 값을 특정 행 내의 열이 null 이면 \<NULL >. 열 내에서 데이터를 없는 경우 올바른 형식의 예제는 각 행에 대 한 오류 메시지를 표시 합니다.  
  
 [!code-csharp[DataWorks DataTableReader.GetChar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChar/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetChar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChar/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
        <exception cref="T:System.InvalidOperationException">닫힌 <see langword="DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
        <exception cref="T:System.InvalidCastException">지정된 필드에 문자가 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int ordinal, long dataIndex, char[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 ordinal, int64 dataIndex, char[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (ordinal As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int ordinal, long dataIndex, cli::array &lt;char&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="dataTableReader.GetChars (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">열 서수(0부터 시작)입니다.</param>
        <param name="dataIndex">읽기 작업을 시작할 필드 내의 인덱스입니다.</param>
        <param name="buffer">문자 스트림을 읽어올 버퍼입니다.</param>
        <param name="bufferIndex">데이터 배치를 시작할 버퍼 내에 있는 인덱스입니다.</param>
        <param name="length">버퍼로 복사할 최대 길이입니다.</param>
        <summary>지정된 열의 값에 해당하는 문자 배열을 반환합니다.</summary>
        <returns>읽은 실제 문자 수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `GetChars` 필드에 사용할 수 있는 문자 수를 반환합니다. 대부분의 경우이 값은 필드의 정확한 길이입니다. 그러나 반환 된 숫자 보다 작을 수도 있습니다 필드의 길이 경우 `GetChars` 필드에서 문자를 가져올 이미 사용 되었습니다.  
  
 필드의 끝에 도달한 경우 실제 읽은 문자 수가 요청된 된 길이 보다 작은 수입니다. 버퍼는 null을 전달 하는 경우 (`Nothing` Visual Basic에서), `GetChars` 문자 버퍼 오프셋된 매개 변수에 따라 나머지 크기가 아닌 전체 필드의 길이 반환 합니다.  
  
 변환이 수행 되지 않습니다. 따라서 데이터를 검색할 수 있어야 문자 배열 또는 문자 배열에 강제 변환 합니다.  
  
   
  
## Examples  
 다음 예제는 `GetChars` 메서드. `TestGetChars` 메서드에 전달할 필요는 `DataTableReader` 두 개 열의 데이터가 채워진: 첫 번째 열, 두 번째에서 문자의 배열에는 파일 이름입니다. 또한 `TestGetChars` 문자 배열에서 데이터를 읽고 사용할 버퍼 크기를 지정할 수는 `DataTableReader`합니다. `TestGetChars` 데이터의 각 행에 해당 파일을 만듭니다는 `DataTableReader`, 제공 된 데이터를 사용 하 여 첫 번째 열에는 `DataTableReader` 파일 이름으로.  
  
 이 절차의 사용을 보여 줍니다.는 `GetChars` 에 저장 된 데이터를 읽는 메서드는 `DataTable` 문자 배열로 합니다. 다른 유형의 데이터를 사용 하면 합니다 `GetChars` throw 하는 메서드는 `InvalidCastException`합니다.  
  
 [!code-csharp[DataWorks DataTableReader.GetChars#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChars/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChars/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
        <exception cref="T:System.InvalidOperationException">닫힌 <see langword="DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
        <exception cref="T:System.InvalidCastException">지정된 열에 문자 배열이 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDataTypeName : int -&gt; string" Usage="dataTableReader.GetDataTypeName ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">열 서수(0부터 시작)입니다.</param>
        <summary>지정된 열의 데이터 형식을 나타내는 문자열을 가져옵니다.</summary>
        <returns>열의 데이터 형식을 나타내는 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Data.DataTableReader.GetDataTypeName%2A> 메서드는 항상 기본 형식의 반환 <xref:System.Data.DataColumn> 공급자별 형식 대신 합니다.  
  
   
  
## Examples  
 다음 콘솔 애플리케이션 필드 목록과 간단한 형식 이름만 표시 <xref:System.Data.DataTable>:  
  
 [!code-csharp[DataWorks DataTableReader.GetDataTypeName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDataTypeName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDataTypeName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDataTypeName/VB/source.vb#1)]  
  
 콘솔 창에는 다음과 같은 결과가 표시 됩니다.  
  
```  
ID: Int32  
Name: String  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
        <exception cref="T:System.InvalidOperationException">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (ordinal As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDateTime : int -&gt; DateTime" Usage="dataTableReader.GetDateTime ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">열 서수(0부터 시작)입니다.</param>
        <summary>지정된 열의 값에 해당하는 <see cref="T:System.DateTime" /> 개체를 가져옵니다.</summary>
        <returns>지정된 열의 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 변환이 수행 되지 않습니다. 이미 검색 된 데이터 여야 하므로 <xref:System.DateTime> 으로 강제 변환 또는 `DataTime`합니다.  
  
 호출 <xref:System.Data.DataTableReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값 있는지 확인 합니다.  
  
   
  
## Examples  
 다음 예제에서는 2에 전달 된 기능 내에서 열의 내용을 <xref:System.Data.DataTableReader>합니다. 코드 표시 텍스트 값을 특정 행 내의 열이 null 이면 \<NULL >. 열 내에서 데이터를 없는 경우 올바른 형식의 예제는 각 행에 대 한 오류 메시지를 표시 합니다.  
  
 [!code-csharp[DataWorks DataTableReader.GetDateTime#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDateTime/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDateTime#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDateTime/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
        <exception cref="T:System.InvalidOperationException">닫힌 <see langword="DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
        <exception cref="T:System.InvalidCastException">지정된 열에 DateTime 값이 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (ordinal As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDecimal : int -&gt; decimal" Usage="dataTableReader.GetDecimal ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">열 서수(0부터 시작)입니다.</param>
        <summary><see cref="T:System.Decimal" />으로 지정된 열 값을 가져옵니다.</summary>
        <returns>지정된 열의 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 변환이 수행 되지 않습니다. 이미 검색 된 데이터 여야 하므로 <xref:System.Decimal> 으로 강제 변환 또는 `Decimal`합니다.  
  
 호출 <xref:System.Data.DataTableReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값 있는지 확인 합니다.  
  
   
  
## Examples  
 다음 예제에서는 2에 전달 된 기능 내에서 열의 내용을 <xref:System.Data.DataTableReader>합니다. 코드 표시 텍스트 값을 특정 행 내의 열이 null 이면 \<NULL >. 열 내에서 데이터를 없는 경우 올바른 형식의 예제는 각 행에 대 한 오류 메시지를 표시 합니다.  
  
 [!code-csharp[DataWorks DataTableReader.GetDecimal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDecimal/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDecimal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDecimal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
        <exception cref="T:System.InvalidOperationException">닫힌 <see langword="DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
        <exception cref="T:System.InvalidCastException">지정된 열에 <see langword="Decimal" /> 값이 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (ordinal As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDouble : int -&gt; double" Usage="dataTableReader.GetDouble ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">열의 0부터 시작하는 서수입니다.</param>
        <summary>열의 값을 배정밀도 부동 소수점 숫자로 가져옵니다.</summary>
        <returns>지정된 열의 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 변환이 수행 되지 않습니다. 따라서 검색 되는 데이터 이미 배정밀도 부동 소수점 숫자 이거나을 배정밀도 부동 소수점 숫자로 강제 변환 해야 합니다.  
  
 호출 <xref:System.Data.DataTableReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값 있는지 확인 합니다.  
  
   
  
## Examples  
 다음 예제에서는 2에 전달 된 기능 내에서 열의 내용을 <xref:System.Data.DataTableReader>합니다. 코드 표시 텍스트 값을 특정 행 내의 열이 null 이면 \<NULL >. 열 내에서 데이터를 없는 경우 올바른 형식의 예제는 각 행에 대 한 오류 메시지를 표시 합니다.  
  
 [!code-csharp[DataWorks DataTableReader.GetDouble#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDouble/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDouble#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDouble/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
        <exception cref="T:System.InvalidOperationException">닫힌 <see langword="DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
        <exception cref="T:System.InvalidCastException">지정된 열에 배정밀도 부동 소수점 숫자가 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="dataTableReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>항목 컬렉션 전체에서 반복하는 데 사용할 수 있는 열거자를 반환합니다.</summary>
        <returns>항목 컬렉션을 나타내는 <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 열거자의 데이터 읽기에 대 한 허용 된 <xref:System.Data.DataTableReader>합니다. 내부 컬렉션을 수정 하 여 열거자를 사용할 수 없습니다.  
  
 처음에 열거자를 컬렉션의 첫 번째 요소 앞에 배치 됩니다. 이 위치에서, 호출 <xref:System.Collections.IEnumerator.Current%2A> 예외를 throw 합니다. 따라서 `MoveNext`의 값을 읽기 전에 `Current`를 호출하여 열거자를 해당 컬렉션의 첫 번째 요소로 보내야 합니다.  
  
 `Current` 반환을 <xref:System.Data.Common.DbDataRecord>, 될 때까지 동일한 개체를 반환 하 고 <xref:System.Collections.IEnumerator.MoveNext%2A> 또는 <xref:System.Collections.IEnumerator.Reset%2A> 라고 합니다. `MoveNext`는 `Current`를 다음 요소로 설정합니다.  
  
 열거자가 컬렉션에서 마지막 요소 뒤에 배치 하 고 호출 컬렉션의 끝이 전달 된 후 `MoveNext` false를 반환 합니다. 마지막으로 호출 하는 경우 `MoveNext` 반환 `false`호출, `Current` 예외를 throw 합니다. 또한 때문에 <xref:System.Data.DataTableReader> 호출에서 해당 데이터에 대 한 정방향 전용 액세스를 제공 합니다 <xref:System.Collections.IEnumerator.Reset%2A> IEnumerator의 메서드에서 throw를 <xref:System.NotSupportedException>.  
  
 <xref:System.Data.DataTableReader> 안정적인 열거자를 제공 합니다. 즉, 기본 데이터 내에서 발생 하는 행 삭제 또는 추가 하는 경우에, 호출 하 여 반환 된 열거자 <xref:System.Data.DataTableReader.GetEnumerator%2A> 여전히 유효 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Data.DataTableReader.GetEnumerator%2A> 메서드를 사용하는 방법을 보여 줍니다. 여기에 열거자의 동작을 기본 행을 삭제할 때는 <xref:System.Data.DataTable> 열거자를 활성화 합니다.  
  
 [!code-csharp[DataWorks DataTableReader.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetEnumerator/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetEnumerator/VB/source.vb#1)]  
  
 콘솔 창에 다음 텍스트를 표시 하는 절차:  
  
```  
Peter  
Mary  
Russ  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetFieldType : int -&gt; Type" Usage="dataTableReader.GetFieldType ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">열 서수(0부터 시작)입니다.</param>
        <summary>개체의 데이터 형식인 <see cref="T:System.Type" />을 가져옵니다.</summary>
        <returns>개체의 데이터 형식인 <see cref="T:System.Type" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 전달 된 다음 프로시저를 호출을 <xref:System.Data.DataTableReader> 콘솔 창에서 모든 필드 목록과 각 형식에 대 한 전체 이름을 표시 하기 위해 인스턴스.  
  
 [!code-csharp[DataWorks DataTableReader.GetFieldType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFieldType/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetFieldType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFieldType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
        <exception cref="T:System.InvalidOperationException">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 합니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (ordinal As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetFloat : int -&gt; single" Usage="dataTableReader.GetFloat ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">열 서수(0부터 시작)입니다.</param>
        <summary>지정된 열의 값에 해당하는 단정밀도 부동 소수점 숫자를 가져옵니다.</summary>
        <returns>열의 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 변환이 수행 되지 않습니다. 따라서 검색 되는 데이터 이미 단 정밀도 부동 소수점 숫자 이거나을 단 정밀도 부동 소수점 숫자로 강제 변환 해야 합니다.  
  
 호출 <xref:System.Data.DataTableReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값 있는지 확인 합니다.  
  
   
  
## Examples  
 다음 예제에서는 2에 전달 된 기능 내에서 열의 내용을 <xref:System.Data.DataTableReader>합니다. 코드 표시 텍스트 값을 특정 행 내의 열이 null 이면 \<NULL >. 열 내에서 데이터를 없는 경우 올바른 형식의 예제는 각 행에 대 한 오류 메시지를 표시 합니다.  
  
 [!code-csharp[DataWorks DataTableReader.GetFloat#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFloat/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetFloat#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFloat/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
        <exception cref="T:System.InvalidOperationException">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
        <exception cref="T:System.InvalidCastException">지정된 열에 단정밀도 부동 소수점 숫자가 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (ordinal As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetGuid : int -&gt; Guid" Usage="dataTableReader.GetGuid ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">열 서수(0부터 시작)입니다.</param>
        <summary>지정된 열의 값에 해당하는 GUID(Globally Unique ID)를 가져옵니다.</summary>
        <returns>지정된 열의 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 변환이 수행 되지 않습니다. 이미 검색 된 데이터 여야 하므로 <xref:System.Guid> 으로 강제 변환 또는 `Guid`합니다.  
  
 호출 <xref:System.Data.DataTableReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값 있는지 확인 합니다.  
  
   
  
## Examples  
 다음 예제에서는 2 전달 DataTableReader 내에서 열의 내용을 표시 합니다. 코드 표시 텍스트 값을 특정 행 내의 열이 null 이면 \<NULL >. 열 내에서 데이터를 없는 경우 올바른 형식의 예제는 각 행에 대 한 오류 메시지를 표시 합니다.  
  
 [!code-csharp[DataWorks DataTableReader.GetGuid#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetGuid/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetGuid#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetGuid/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
        <exception cref="T:System.InvalidOperationException">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
        <exception cref="T:System.InvalidCastException">지정된 열에 GUID가 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (ordinal As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt16 : int -&gt; int16" Usage="dataTableReader.GetInt16 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">열 서수(0부터 시작)입니다.</param>
        <summary>지정된 열의 값을 16비트 부호 있는 정수로 가져옵니다.</summary>
        <returns>지정된 열의 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 변환이 수행 되지 않습니다. 따라서 검색 되는 데이터 있어야를 <xref:System.Int16> 으로 강제 변환 또는 `Int16`합니다.  
  
 호출 <xref:System.Data.DataTableReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값 있는지 확인 합니다.  
  
   
  
## Examples  
 다음 예제에서는 2에 전달 된 기능 내에서 열의 내용을 <xref:System.Data.DataTableReader>합니다. 코드 표시 텍스트 값을 특정 행 내의 열이 null 이면 \<NULL >. 열 내에서 데이터를 없는 경우 올바른 형식의 예제는 각 행에 대 한 오류 메시지를 표시 합니다.  
  
 [!code-csharp[DataWorks DataTableReader.GetInt16#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt16/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt16#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt16/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
        <exception cref="T:System.InvalidOperationException">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
        <exception cref="T:System.InvalidCastException">지정된 열에 16비트 부호 있는 정수가 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (ordinal As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt32 : int -&gt; int" Usage="dataTableReader.GetInt32 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">열 서수(0부터 시작)입니다.</param>
        <summary>지정된 열의 값에 해당하는 32비트 부호 있는 정수를 가져옵니다.</summary>
        <returns>지정된 열의 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 변환이 수행 되지 않습니다. 따라서 검색 되는 데이터 있어야를 <xref:System.Int32> 으로 강제 변환 또는 `Int32`합니다.  
  
 호출 <xref:System.Data.DataTableReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값 있는지 확인 합니다.  
  
   
  
## Examples  
 다음 예제에서는 2에 전달 된 기능 내에서 열의 내용을 <xref:System.Data.DataTableReader>합니다. 코드 표시 텍스트 값을 특정 행 내의 열이 null 이면 \<NULL >. 열 내에서 데이터를 없는 경우 올바른 형식의 예제는 각 행에 대 한 오류 메시지를 표시 합니다.  
  
 [!code-csharp[DataWorks DataTableReader.GetInt32#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt32/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt32#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt32/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
        <exception cref="T:System.InvalidOperationException">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 합니다.</exception>
        <exception cref="T:System.InvalidCastException">지정된 열에 32비트 부호 있는 정수 값이 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (ordinal As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt64 : int -&gt; int64" Usage="dataTableReader.GetInt64 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">열 서수(0부터 시작)입니다.</param>
        <summary>지정된 열의 값에 해당하는 64비트 부호 있는 정수를 가져옵니다.</summary>
        <returns>지정된 열의 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 변환이 수행 되지 않습니다. 따라서 검색 되는 데이터 있어야를 <xref:System.Int64> 으로 강제 변환 또는 `Int64`합니다.  
  
 호출 <xref:System.Data.DataTableReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값 있는지 확인 합니다.  
  
   
  
## Examples  
 다음 예제에서는 2에 전달 된 기능 내에서 열의 내용을 <xref:System.Data.DataTableReader>합니다. 코드 표시 텍스트 값을 특정 행 내의 열이 null 이면 \<NULL >. 열 내에서 데이터를 없는 경우 올바른 형식의 예제는 각 행에 대 한 오류 메시지를 표시 합니다.  
  
 [!code-csharp[DataWorks DataTableReader.GetInt64#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt64/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt64#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
        <exception cref="T:System.InvalidOperationException">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 합니다.</exception>
        <exception cref="T:System.InvalidCastException">지정된 열에 64비트 부호 있는 정수 값이 없습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetName : int -&gt; string" Usage="dataTableReader.GetName ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">열 서수(0부터 시작)입니다.</param>
        <summary><see cref="T:System.String" />으로 지정된 열 값을 가져옵니다.</summary>
        <returns>지정된 열의 이름입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `GetName` 고 <xref:System.Data.DataTableReader.GetOrdinal%2A> 메서드 역 기능을 제공 합니다. 즉, 호출 `GetOrdinal` 호출의 반환 값에 `GetName` 에 전달 된 원래 매개 변수를 반환 해야 `GetName`; 프로시저를 반대 순서로 호출에 마찬가지입니다.  
  
   
  
## Examples  
 지정 된 모든 열 이름을 나열 하는 프로시저를 포함 하는 다음의 간단한 예제 `DataTableReader`, 및 콘솔 창에 열 서 수 위치입니다.  
  
 [!code-csharp[DataWorks DataTableReader.GetName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetName/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
        <exception cref="T:System.InvalidOperationException">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetOrdinal : string -&gt; int" Usage="dataTableReader.GetOrdinal name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">열 이름입니다.</param>
        <summary>열 이름이 지정된 경우 열 서수를 가져옵니다.</summary>
        <returns>열 서수(0부터 시작)입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 대부분의 메서드를 제공 하므로 합니다 <xref:System.Data.DataTableReader> 클래스는 서 수 열 번호와 함께 사용할 수 있습니다 제공 해야 합니다.는 `GetOrdinal` 열 이름이 지정 된 열 번호를 검색 하는 방법입니다.  
  
 `GetOrdinal` 대/소문자 구분 조회를 먼저 수행합니다. 실패 한 경우에 두 번째는 대/소문자 검색이 수행 됩니다. 열 번호를 찾을 수 없으면는 `IndexOutOfRangeException` throw 됩니다.  
  
 `GetOrdinal` 구분 되지 않습니다 일본어가 나 너비입니다.  
  
 서 수 기반 조회가 명명 된 조회 보다 효율적 이기 때문에 것은 비효율적 호출 `GetOrdinal` 루프 내에서. 호출 하 여 시간을 절약할 `GetOrdinal` 번 및 루프 내에서 사용 하 여 정수 변수에 결과 할당  
  
   
  
## Examples  
 열 이름만 경우 경우에서 열 이름이 사용자가 제공 하 고 열에서 정보를 검색 해야 합니다, 그리고 다음과 같은 절차를 사용 하 여 필요한 정보를 추출 하 합니다. 이 예제에서는 절차 열 이름을 허용 하 고의 현재 행에 대해 해당 열에 포함 된 데이터를 반환 합니다 <xref:System.Data.DataTableReader> :  
  
 [!code-csharp[DataWorks DataTableReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
        <exception cref="T:System.ArgumentException">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificFieldType">
      <MemberSignature Language="C#" Value="public override Type GetProviderSpecificFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetProviderSpecificFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetProviderSpecificFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificFieldType : int -&gt; Type" Usage="dataTableReader.GetProviderSpecificFieldType ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">열 서수(0부터 시작)입니다.</param>
        <summary>지정된 열의 형식을 공급자별 형식으로 가져옵니다.</summary>
        <returns>개체의 데이터 형식인 <see cref="T:System.Type" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때문에 <xref:System.Data.DataTableReader> 항상 내부에 저장 된 형식을 반환 합니다 <xref:System.Data.DataColumn>, 호출 하 여 반환 되는 값을 <xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A> 메서드는 항상 동일한 형식 내에 저장 된 형식으로 반환는 <xref:System.Data.DataTable>합니다. 작업을 수행할 때를 <xref:System.Data.DataTableReader> 클래스를 호출 합니다 <xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A> 메서드를 호출할 때와 동일한 형식을 반환는 <xref:System.Type.GetType%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
        <exception cref="T:System.InvalidOperationException">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
        <altmember cref="M:System.Data.DataTableReader.GetFieldType(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValue">
      <MemberSignature Language="C#" Value="public override object GetProviderSpecificValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetProviderSpecificValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetProviderSpecificValue(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValue : int -&gt; obj" Usage="dataTableReader.GetProviderSpecificValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">값을 검색하는 열의 번호(0부터 시작)입니다.</param>
        <summary>지정된 열의 값을 공급자별 형식으로 가져옵니다.</summary>
        <returns>지정된 열의 값이며 공급자별 형식으로 되어 있습니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때문에 <xref:System.Data.DataTableReader> 항상 내부에 저장 된 형식을 반환 합니다 <xref:System.Data.DataColumn>, 호출 하 여 반환 되는 값을 <xref:System.Data.DataTableReader.GetProviderSpecificValue%2A> 메서드 내에 저장 된 데이터와 동일한 형식의 데이터를 항상 반환를 <xref:System.Data.DataTable>합니다. 작업을 수행할 때를 <xref:System.Data.DataTableReader> 클래스를 호출 합니다 <xref:System.Data.DataTableReader.GetProviderSpecificValue%2A> 메서드 반환 값 및 호출 형식을 동일한를 <xref:System.Data.DataTableReader.GetValue%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
        <exception cref="T:System.InvalidOperationException">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
        <altmember cref="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValues">
      <MemberSignature Language="C#" Value="public override int GetProviderSpecificValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetProviderSpecificValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetProviderSpecificValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValues : obj[] -&gt; int" Usage="dataTableReader.GetProviderSpecificValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values"><see cref="T:System.Data.DataTableReader" />의 열에 대한 형식 정보로 채워질 개체 배열입니다.</param>
        <summary><see cref="T:System.Data.DataTableReader" />의 모든 열에 대한 공급자별 형식 정보를 제공된 배열에 채웁니다.</summary>
        <returns>배열에 복사된 열 값의 개수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때문에 <xref:System.Data.DataTableReader> 항상 내부에 저장 된 형식의 데이터를 반환 합니다 <xref:System.Data.DataColumn>, 호출 하 여 반환 되는 값을 <xref:System.Data.DataTableReader.GetProviderSpecificValues%2A> 메서드는 항상 저장 된 데이터와 동일한 형식을 <xref:System.Data.DataTable>합니다. 작업할 때를 <xref:System.Data.DataTableReader> 클래스를 호출 합니다 <xref:System.Data.DataTableReader.GetProviderSpecificValues%2A> 메서드 호출으로 동일한 형식 및 값을 반환 합니다 <xref:System.Data.DataTableReader.GetValues%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
        <exception cref="T:System.InvalidOperationException">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
        <altmember cref="M:System.Data.DataTableReader.GetValues(System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="override this.GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="dataTableReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.DataTable" />의 열 메타데이터를 정의하는 <see cref="T:System.Data.DataTableReader" />을 반환합니다.</summary>
        <returns>열 메타데이터를 정의하는 <see cref="T:System.Data.DataTable" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 GetSchemaTable 메서드를 다음 순서 대로 각 열에 대 한 메타 데이터를 반환합니다.  
  
|DataReader 열|설명|  
|-----------------------|-----------------|  
|열 이름|이 열의 이름이 나타나는 <xref:System.Data.DataTable>합니다.|  
|ColumnOrdinal|열의 서 수|  
|ColumnSize|-경우 1를 <xref:System.Data.Common.SchemaTableColumn.ColumnSize> (또는 <xref:System.Data.DataColumn.MaxLength%2A>)의 속성을 <xref:System.Data.DataColumn> 확인할 수 없거나 관련;이 고, 그렇지 0 또는 양의 정수를 포함 하는 `MaxLength` 값입니다.|  
|NumericPrecision|열 형식 숫자 형식인 경우 열의 최대 전체 자릿수입니다. 열 형식이 숫자 데이터 형식이 아닌 경우 null 값입니다.|  
|NumericScale|열 데이터 형식에 확장 구성 요소를 경우 소수점 오른쪽 자릿수를 반환 합니다. 그렇지 않으면 null 값을 반환 합니다.|  
|데이터 형식|열의 기본 형식입니다.|  
|ProviderType|표시기 열 데이터 형식입니다. 이 값은 다양 한 경우 열의 데이터 형식을 행, <xref:System.Object>합니다. 이 열에 null 값을 포함할 수 없습니다.|  
|IsLong|`true` 열의 데이터 형식이 <xref:System.String> 고 <xref:System.Data.DataColumn.MaxLength%2A> 속성이-1입니다. 그렇지 않으면 `false`입니다.|  
|AllowDBNull|`true` AllowDbNull 제약 조건이 설정 된 경우 열을 true로 그렇지 않으면 `false`합니다.|  
|IsReadOnly|`true` 이면 열을 수정할 수 없습니다. 그렇지 않으면 `false`합니다.|  
|IsRowVersion|`false`에서 모든 열에 대 한 합니다.|  
|IsUnique|`true`: 각 행에는 <xref:System.Data.DataTable> 이 열에 동일한 값을 가질 수 있습니다. `IsUnique` 이 열에만 적용 되는 UNIQUE 유형의 제약 조건이 있는 경우 또는 자체 열 키를 나타내면 true이 되도록 보장 됩니다. `false`:이 열에 중복 값이 포함 될 수 있습니다는 `DataTable`합니다. 이 칼럼의 기본값은 `false`합니다.|  
|IsKey|`true`: 열이 열 집합 중 하나를 전체적으로 볼 때, 행을 고유 하 게 식별 된 <xref:System.Data.DataTable>합니다. 열 집합이 `IsKey` 로 설정 `true` 의 행을 고유 하 게 식별 해야 합니다는 `DataTable`합니다. 이 열 집합이 열의 최소 집합일은 사항은 없습니다. 이 열 집합에서 생성 될 수 있습니다는 `DataTable` 기본 키나 unique 제약 조건을 고유 인덱스. `false`:이 열은 행을 식별할 필요가 없습니다. 이 값은 `true` 열이 단일 또는 복합 기본 키에 참여 하는 경우. 그렇지 않으면 해당 값은 `false`합니다.|  
|IsAutoIncrement|`true`:이 열을 고정 된 증가분의 새 행에 값을 할당합니다. `false`:이 열은 고정 된 증가분의 새 행에 값을 할당 하지 않습니다. 이 칼럼의 기본값은 `false`합니다.|  
|BaseCatalogName|열이 포함 된 데이터 저장소에 있는 카탈로그의 이름입니다. `Null` 기본 카탈로그 이름을 확인할 수 없습니다 하는 경우. 이 열에 대 한 기본값은을 `null` 값입니다.|  
|BaseSchemaName|이 값은 항상 `Null`합니다.|  
|BaseTableName|<xref:System.Data.DataTable>의 이름입니다.|  
|BaseColumnName|열 이름을 <xref:System.Data.DataTable>합니다.|  
|AutoIncrementSeed|값을 <xref:System.Data.DataTable>의 <xref:System.Data.DataColumn.AutoIncrementSeed%2A> 속성입니다.|  
|AutoIncrementStep|값을 <xref:System.Data.DataTable>의 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 속성입니다.|  
|DefaultValue|값을 <xref:System.Data.DataColumn>의 <xref:System.Data.DataColumn.DefaultValue%2A> 속성입니다.|  
|식|식 문자열의 경우 현재 열이 식 열 및 동일한 식에 사용 하는 모든 열이 속한 `T:System.Data.DataTable` 식 열을 포함 하 고, 그렇지 않으면 `null`합니다.|  
|ColumnMapping|합니다 <xref:System.Data.MappingType> 연관 된 값은 <xref:System.Data.DataColumn>합니다. 형식 중 하나일 수 있습니다 `Attribute`, `Element`하십시오 `Hidden`, 또는 `SimpleContent`. 기본값은 `Element`입니다.|  
|BaseTableNamespace|값을 <xref:System.Data.DataTable>의 <xref:System.Data.DataTable.Namespace%2A> 속성입니다.|  
|BaseColumnNamespace|값을 <xref:System.Data.DataColumn>의 <xref:System.Data.DataColumn.Namespace%2A> 속성입니다.|  
  
   
  
## Examples  
 다음 콘솔 애플리케이션 예제에서는 지정된 된 열에 대 한 스키마 정보를 검색합니다. 전달 합니다 `DisplaySchemaTableInfo` 프로시저는 <xref:System.Data.DataTableReader> 및 내에서 열의 서 수 위치를 나타내는 정수를 `DataTableReader`, 콘솔 창에 대 한 스키마 정보를 출력 하는 절차.  
  
 [!code-csharp[DataWorks DataTableReader.GetSchemaTable#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetSchemaTable/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetSchemaTable#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetSchemaTable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Data.DataTableReader" />가 닫힌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetString : int -&gt; string" Usage="dataTableReader.GetString ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">열 서수(0부터 시작)입니다.</param>
        <summary>지정된 열의 값을 문자열로 가져옵니다.</summary>
        <returns>지정된 열의 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 <xref:System.Data.DataTableReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값 있는지 확인 합니다.  
  
   
  
## Examples  
 다음 예제에서는 2에 전달 된 기능 내에서 열의 내용을 <xref:System.Data.DataTableReader>합니다. 코드 표시 텍스트 값을 특정 행 내의 열이 null 이면 \<NULL >. 올바른 형식의 예제에서는 열 내의 데이터 각 행에 대해 오류 메시지를 표시 합니다.  
  
 [!code-csharp[DataWorks DataTableReader.GetString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetString/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
        <exception cref="T:System.InvalidOperationException">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
        <exception cref="T:System.InvalidCastException">지정된 열에 문자열이 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetValue : int -&gt; obj" Usage="dataTableReader.GetValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">열 서수(0부터 시작)입니다.</param>
        <summary>지정된 열의 값을 네이티브 형식으로 가져옵니다.</summary>
        <returns>지정된 열의 값입니다. 이 메서드는 null 열에 대해 <see langword="DBNull" />을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출할 수 있지만 <xref:System.Data.DataTableReader.IsDBNull%2A> 보려면이 메서드를 호출 하기 전에 null 값이 있는 경우이 작업을 수행할 필요가 없습니다.  
  
   
  
## Examples  
 다음 예에서는 현재 행에 있는 모든 열의 반복을 <xref:System.Data.DataTableReader>, 각 열 및 열 이름을의 내용을 표시 합니다. 일반적으로 하 여 검색할 행 안의 모든 열을 사용 하는 경우는 <xref:System.Data.DataTableReader>를 사용 하는 것이 좋습니다는 <xref:System.Data.DataTableReader.GetValues%2A> 메서드 대신 효율적 이기 때문에 합니다.  
  
 [!code-csharp[DataWorks DataTableReader.GetValue#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValue/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValue/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
        <exception cref="T:System.InvalidOperationException">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 합니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetValues : obj[] -&gt; int" Usage="dataTableReader.GetValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values"><see cref="T:System.Object" />로부터 열 값을 복사해 올 <see cref="T:System.Data.DataTableReader" />의 배열입니다.</param>
        <summary>현재 행의 열 값으로 개체 배열을 채웁니다.</summary>
        <returns>배열에 복사된 열 값의 개수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 대부분의 애플리케이션에 대 한 각 열을 개별적으로 검색 하는 대신 모든 열을 검색는 효율적인 방법을 제공 합니다. 내에서 행의 모든 열 값을 검색 하는 경우는 <xref:System.Data.DataTableReader>, `GetValues` 메서드는 가장 효율적인 솔루션을 제공 합니다.  
  
 전달할 수는 <xref:System.Object> 결과 행에 포함 된 열 수보다 적은 포함 된 배열입니다. 데이터의 양만 `Object` 배열의 배열에 복사 됩니다 보유할 수 있습니다. 전달할 수도 있습니다는 `Object` 배열 길이 보다는 추가 배열 요소를 유지 하는 경우 변경 되지 않은 메서드 호출에서 결과 행에 포함 된 열의 수입니다.  
  
 이 메서드는 배치 `DBNull` null 열에 대 한 출력 배열입니다.  
  
   
  
## Examples  
 다음 예제에서는 배열을 현재 행에서 제공 된 모든 값을 읽을 정확한 크기를 사용 하 여 <xref:System.Data.DataTableReader>입니다. 또한 샘플 작은 또는 사용할 수 있는 열 개수 보다 클 수 있는 고정 크기 배열을 사용 하 여 보여 줍니다.  
  
 [!code-csharp[DataWorks DataTableReader.GetValueObject#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetValueObject#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
        <exception cref="T:System.InvalidOperationException">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 합니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRows : bool" Usage="System.Data.DataTableReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.DataTableReader" />에 하나 이상의 행이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="T:System.Data.DataTableReader" />에 행이 하나 이상 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HasRows` 속성 현재 결과 집합에 대 한 정보를 반환 합니다. 경우는 <xref:System.Data.DataTableReader> 여러 결과가 포함 집합의 값을 검사할 수 있습니다 합니다 `HasRows` 호출한 후에 즉시 속성은 <xref:System.Data.DataTableReader.NextResult%2A> 새 결과 집합에 행이 포함 되어 있는지 확인 하기 위해 메서드.  
  
 사용 하 여는 `HasRows` 호출을 피하기 위해 속성을 <xref:System.Data.DataTableReader.Read%2A> 메서드는 <xref:System.Data.DataTableReader> 현재 결과 집합 내의 행이 없는 경우.  
  
   
  
## Examples  
 다음 예제에서는 두 개의 채웁니다 <xref:System.Data.DataTable> 데이터와 관련 된 인스턴스. 첫 번째 <xref:System.Data.DataTable> 하나의 행을 포함 하 고 두 번째 행이 없는 포함 합니다. 만듭니다는 <xref:System.Data.DataTableReader> 모두 포함 된 <xref:System.Data.DataTable> 개체의 값을 확인 하는 각각의 내용을 표시 하는 PrintData 메서드를 호출 하는 <xref:System.Data.DataTableReader.HasRows%2A> PrintData 호출 하기 전에 각각의 속성입니다.  
  
 [!code-csharp[DataWorks DataTableReader.HasRows#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.HasRows/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.HasRows#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.HasRows/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">닫힌 <see cref="T:System.Data.DataTableReader" />에 대한 정보를 검색하려고 한 경우</exception>
        <altmember cref="M:System.Data.DataTableReader.NextResult" />
        <altmember cref="M:System.Data.DataTableReader.Read" />
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.DataTableReader.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.DataTableReader" />가 닫혀 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="T:System.Data.DataTableReader" />가 닫혔으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTableReader.Close%2A> 유일한 방법은 및 `IsClosed` 및 <xref:System.Data.DataTableReader.RecordsAffected%2A> 후 액세스할 수 있는 속성만 <xref:System.Data.DataTableReader> 닫혔습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.IsDBNull : int -&gt; bool" Usage="dataTableReader.IsDBNull ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">열 서수(0부터 시작)입니다.</param>
        <summary>열의 값이 존재하지 않거나 누락되었는지 여부를 나타내는 값을 가져옵니다.</summary>
        <returns>지정된 열 값이 <see cref="T:System.DBNull" />과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 형식화 된 get 메서드를 호출 하기 전에 null 열 값이 있는 경우를 확인 하려면이 메서드를 호출 (예를 들어 <xref:System.Data.DataTableReader.GetByte%2A>, <xref:System.Data.DataTableReader.GetChar%2A>등) 오류가 발생 하지 않도록 합니다.  
  
   
  
## Examples  
 다음 예제에서는 2에 전달 된 기능 내에서 열의 내용을 <xref:System.Data.DataTableReader>합니다. 코드 표시 텍스트 값을 특정 행 내의 열이 null 이면 \<NULL >. 올바른 형식의 예제에서는 열 내의 데이터 각 행에 대해 오류 메시지를 표시 합니다.  
  
 [!code-csharp[DataWorks DataTableReader.IsDbNull#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.IsDbNull/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.IsDbNull#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.IsDbNull/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
        <exception cref="T:System.InvalidOperationException">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 합니다.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 열의 값을 네이티브 형식으로 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int ordinal] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int ordinal); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.DataTableReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">열 서수(0부터 시작)입니다.</param>
        <summary>열 서수가 지정된 경우, 지정된 열의 값을 네이티브 형식으로 가져옵니다.</summary>
        <value>지정된 열의 네이티브 형식 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 오버 로드에 대 한 <xref:System.Data.DataTableReader.Item%2A> 동일 하 게 동작 합니다 <xref:System.Data.DataTableReader.GetValue%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 제공 된 모든 행의 열이 모두의 내용을 표시 <xref:System.Data.DataTableReader>합니다. 코드를 사용 하 여는 <xref:System.Data.DataTableReader.Item%2A> 메서드 (인덱서, Microsoft C#) 각 열에 포함 된 값을 검색 합니다.  
  
 [!code-csharp[DataWorks DataTableReader.Item#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.Item/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.Item#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.Item/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</exception>
        <altmember cref="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.DataTableReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">열 이름입니다.</param>
        <summary>열 이름이 지정된 경우, 지정된 열의 값을 네이티브 형식으로 가져옵니다.</summary>
        <value>지정된 열의 네이티브 형식 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 대/소문자 구분 조회를 먼저 수행 됩니다. 실패 한 경우에 두 번째는 대/소문자 검색이 수행 됩니다.  
  
 이 메서드는 너비 일본어가 나 구분 안 함.  
  
 이 오버 로드 된 버전의 <xref:System.Data.DataTableReader.Item%2A> 호출에 해당 하는 <xref:System.Data.DataTableReader.GetOrdinal%2A> 메서드를 호출한 이후에 <xref:System.Data.DataTableReader.GetValue%2A> 메서드.  
  
   
  
## Examples  
 지정 된 <xref:System.Data.DataTableReader> 열 이름을 GetValueByName 프로시저는 지정 된 열의 값을 반환 합니다. 이 프로시저를 호출 하기 전에 새로 만들어야 <xref:System.Data.DataTableReader> 인스턴스 및 데이터 행에 행 포인터 위치를 적어도 한 번 읽기 메서드를 호출 합니다.  
  
 [!code-csharp[DataWorks DataTableReader.ItemName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.ItemName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.ItemName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.ItemName/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">지정된 이름이 올바른 열 이름이 아닌 경우</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">삭제된 행에서 데이터를 검색하려고 한 경우</exception>
        <exception cref="T:System.InvalidOperationException">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberSignature Language="F#" Value="override this.NextResult : unit -&gt; bool" Usage="dataTableReader.NextResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.DataTableReader" />를 다음 결과 집합(있을 경우)으로 이동합니다.</summary>
        <returns>다른 결과 집합이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 만들어 생성 될 수 있는 여러 결과 처리 하는 데를 <xref:System.Data.DataTableReader> 위에 <xref:System.Data.DataSet> 두 개 이상의 테이블 또는 두 개 이상 포함 된 배열을 포함 하는 <xref:System.Data.DataTable> 인스턴스.  
  
 새 <xref:System.Data.DataTableReader> 첫 번째 결과에 배치 됩니다.  
  
   
  
## Examples  
 다음 예에서 TestConstructor 메서드 두 개 만듭니다 <xref:System.Data.DataTable> 인스턴스. 이 생성자를 보여 주기 위해 합니다 <xref:System.Data.DataTableReader> 클래스, 예제에서는 새 `DataTableReader` 두 가지를 포함 하는 배열을 기반으로 `DataTables`, 콘솔에 처음 몇 개의 열에서 콘텐츠를 인쇄 하는 간단한 작업을 수행 하 고 창입니다. 이 애플리케이션을 테스트 하려면 새 콘솔 애플리케이션을 만들고 새로 만든된 파일에 샘플 코드를 붙여넣습니다.  
  
 [!code-csharp[DataWorks DataTableReader.NextResult#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.NextResult/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.NextResult#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.NextResult/VB/source.vb#1)]  
  
 콘솔 창에는 다음과 같은 결과가 표시 됩니다.  
  
```  
1 Mary  
2 Andy  
3 Peter  
4 Russ  
1 Wireless Network Card  
2 Hard Drive  
3 Monitor  
4 CPU  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">닫힌 <see cref="T:System.Data.DataTableReader" /> 내의 정보를 탐색하려고 한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="dataTableReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.DataTableReader" />를 다음 레코드로 이동합니다.</summary>
        <returns>읽을 행이 더 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 위치는 <xref:System.Data.DataTableReader> 는 첫 번째 레코드 앞입니다. 호출 해야 하므로 `Read` 데이터 액세스를 시작 합니다.  
  
   
  
## Examples  
 PrintColumns 프로시저의 모든 행을 반복 합니다 <xref:System.Data.DataTableReader>, 콘솔 창에서 각 열의 내용을 표시 합니다.  
  
 [!code-csharp[DataWorks DataTableReader.Read#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.Read/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.Read#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.Read/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">닫힌 <see cref="T:System.Data.DataTableReader" />의 열을 읽거나 액세스하려고 합니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.DataTableReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SQL 문을 실행하여 삽입, 변경 또는 삭제된 열의 수를 가져옵니다.</summary>
        <value><see cref="T:System.Data.DataTableReader" />는 이 속성을 지원하지 않으며 항상 0을 반환합니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>