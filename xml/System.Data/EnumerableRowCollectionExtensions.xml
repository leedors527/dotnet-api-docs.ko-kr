<Type Name="EnumerableRowCollectionExtensions" FullName="System.Data.EnumerableRowCollectionExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="44ed68df5adebb60826e5ffb0d643347acf38d00" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53223229" /></Metadata><TypeSignature Language="C#" Value="public static class EnumerableRowCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EnumerableRowCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.EnumerableRowCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module EnumerableRowCollectionExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnumerableRowCollectionExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type EnumerableRowCollectionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>데이터 행 컬렉션 클래스의 확장 메서드가 들어 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.EnumerableRowCollectionExtensions> 클래스를 정의 하는 정적 확장 메서드를 포함 합니다 <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A> 메서드 및에 대 한 표준 쿼리 연산자는 <xref:System.Data.EnumerableRowCollection%601> 및 <xref:System.Data.OrderedEnumerableRowCollection%601> 클래스.  
  
 이 클래스는 상속 될 수 없습니다 하며 인스턴스화할 수 없습니다.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Data.EnumerableRowCollection`1" />
    <altmember cref="T:System.Data.OrderedEnumerableRowCollection`1" />
    <related type="Article" href="https://msdn.microsoft.com/library/24cda21e-8af8-4632-b519-c404a839b9b2">표준 쿼리 연산자 개요</related>
  </Docs>
  <Members>
    <Member MemberName="Cast&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;TResult&gt; Cast&lt;TResult&gt; (this System.Data.EnumerableRowCollection source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;!!TResult&gt; Cast&lt;TResult&gt;(class System.Data.EnumerableRowCollection source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Cast(Of TResult) (source As EnumerableRowCollection) As EnumerableRowCollection(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;TResult&gt; ^ Cast(System::Data::EnumerableRowCollection ^ source);" />
      <MemberSignature Language="F#" Value="static member Cast : System.Data.EnumerableRowCollection -&gt; System.Data.EnumerableRowCollection&lt;'Result&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.Cast source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">소스의 요소를 변환할 형식입니다.</typeparam>
        <param name="source">변환할 요소가 들어 있는 <see cref="T:System.Data.EnumerableRowCollection" />입니다.</param>
        <summary><see cref="T:System.Data.EnumerableRowCollection" />의 요소를 지정된 형식으로 변환합니다.</summary>
        <returns>지정된 형식으로 변환되는 소스 시퀀스의 각 요소가 들어 있는 <see cref="T:System.Data.EnumerableRowCollection" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 지연 된 실행을 사용 하 여 구현 됩니다. 즉시 반환 값은 작업을 수행 하는 데 필요한 모든 정보를 저장 하는 개체입니다. 이 메서드를 나타내는 쿼리 하거나 호출 하 여 개체 열거 될 때까지 실행 되지 않습니다 해당 `GetEnumerator` 메서드를 사용 하 여 직접 또는 `foreach` Visual C# 또는 `For Each` Visual Basic의 합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidCastException">시퀀스의 요소를 <paramref name="TResult" /> 형식으로 캐스팅할 수 없는 경우</exception>
        <altmember cref="T:System.Data.EnumerableRowCollection" />
        <altmember cref="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderBy&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Data.EnumerableRowCollection" />의 행을 오름차순으로 정렬합니다.</summary>
        <forInternalUseOnly />
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderBy&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderBy&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderBy(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.OrderBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><paramref name="source" />의 행 요소의 형식으로, 일반적으로 <see cref="T:System.Data.DataRow" />입니다.</typeparam>
        <typeparam name="TKey"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
        <param name="source">순서를 지정할 <see cref="T:System.Data.EnumerableRowCollection" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</param>
        <param name="keySelector">요소에서 키를 추출하는 함수입니다.</param>
        <summary><see cref="T:System.Data.EnumerableRowCollection" />의 행을 지정된 키에 따라 오름차순으로 정렬합니다.</summary>
        <returns>요소가 지정된 키에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 지연 된 실행을 사용 하 여 구현 됩니다. 즉시 반환 값은 작업을 수행 하는 데 필요한 모든 정보를 저장 하는 개체입니다. 이 메서드를 나타내는 쿼리 하거나 호출 하 여 개체 열거 될 때까지 실행 되지 않습니다 해당 `GetEnumerator` 메서드를 사용 하 여 직접 또는 `foreach` Visual C# 또는 `For Each` Visual Basic의 합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenBy" />
        <altmember cref="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <Member MemberName="OrderBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderBy&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderBy&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderBy(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.OrderBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><paramref name="source" />의 행 요소의 형식으로, 일반적으로 <see cref="T:System.Data.DataRow" />입니다.</typeparam>
        <typeparam name="TKey"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
        <param name="source">순서를 지정할 <see cref="T:System.Data.EnumerableRowCollection" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</param>
        <param name="keySelector">요소에서 키를 추출하는 함수입니다.</param>
        <param name="comparer">키를 비교할 <see cref="T:System.Collections.Generic.IComparer`1" />입니다.</param>
        <summary><see cref="T:System.Data.EnumerableRowCollection" />의 행을 지정된 키 및 비교자에 따라 오름차순으로 정렬합니다.</summary>
        <returns>요소가 지정된 키 및 비교자에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 지연 된 실행을 사용 하 여 구현 됩니다. 즉시 반환 값은 작업을 수행 하는 데 필요한 모든 정보를 저장 하는 개체입니다. 이 메서드를 나타내는 쿼리 하거나 호출 하 여 개체 열거 될 때까지 실행 되지 않습니다 해당 `GetEnumerator` 메서드를 사용 하 여 직접 또는 `foreach` Visual C# 또는 `For Each` Visual Basic의 합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenBy" />
        <altmember cref="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderByDescending&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Data.EnumerableRowCollection" />의 행을 내림차순으로 정렬합니다.</summary>
        <forInternalUseOnly />
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderByDescending&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderByDescending&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderByDescending(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.OrderByDescending (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><paramref name="source" />의 행 요소의 형식으로, 일반적으로 <see cref="T:System.Data.DataRow" />입니다.</typeparam>
        <typeparam name="TKey"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
        <param name="source">순서를 지정할 <see cref="T:System.Data.EnumerableRowCollection" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</param>
        <param name="keySelector">요소에서 키를 추출하는 함수입니다.</param>
        <summary><see cref="T:System.Data.EnumerableRowCollection" />의 행을 지정된 키에 따라 내림차순으로 정렬합니다.</summary>
        <returns>요소가 지정된 키에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 지연 된 실행을 사용 하 여 구현 됩니다. 즉시 반환 값은 작업을 수행 하는 데 필요한 모든 정보를 저장 하는 개체입니다. 이 메서드를 나타내는 쿼리 하거나 호출 하 여 개체 열거 될 때까지 실행 되지 않습니다 해당 `GetEnumerator` 메서드를 사용 하 여 직접 또는 `foreach` Visual C# 또는 `For Each` Visual Basic의 합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenByDescending" />
        <altmember cref="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderByDescending&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderByDescending&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderByDescending(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.OrderByDescending (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><paramref name="source" />의 행 요소의 형식으로, 일반적으로 <see cref="T:System.Data.DataRow" />입니다.</typeparam>
        <typeparam name="TKey"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
        <param name="source">순서를 지정할 <see cref="T:System.Data.EnumerableRowCollection" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</param>
        <param name="keySelector">요소에서 키를 추출하는 함수입니다.</param>
        <param name="comparer">키를 비교할 <see cref="T:System.Collections.Generic.IComparer`1" />입니다.</param>
        <summary><see cref="T:System.Data.EnumerableRowCollection" />의 행을 지정된 키 및 비교자에 따라 내림차순으로 정렬합니다.</summary>
        <returns>요소가 지정된 키 및 비교자에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 지연 된 실행을 사용 하 여 구현 됩니다. 즉시 반환 값은 작업을 수행 하는 데 필요한 모든 정보를 저장 하는 개체입니다. 이 메서드를 나타내는 쿼리 하거나 호출 하 여 개체 열거 될 때까지 실행 되지 않습니다 해당 `GetEnumerator` 메서드를 사용 하 여 직접 또는 `foreach` Visual C# 또는 `For Each` Visual Basic의 합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenByDescending" />
        <altmember cref="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <Member MemberName="Select&lt;TRow,S&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;S&gt; Select&lt;TRow,S&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,S&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;!!S&gt; Select&lt;TRow, S&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!S&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TRow, S) (source As EnumerableRowCollection(Of TRow), selector As Func(Of TRow, S)) As EnumerableRowCollection(Of S)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename S&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;S&gt; ^ Select(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, S&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Select : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'S&gt; -&gt; System.Data.EnumerableRowCollection&lt;'S&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.Select (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;S&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="S" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TRow,S&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><paramref name="source" />의 행 요소의 형식으로, 일반적으로 <see cref="T:System.Data.DataRow" />입니다.</typeparam>
        <typeparam name="S"><paramref name="TRow" />를 변환할 대상 형식입니다.</typeparam>
        <param name="source">변환 함수를 호출할 <see cref="T:System.Data.EnumerableRowCollection`1" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</param>
        <param name="selector">각 요소에 적용할 변형 함수입니다.</param>
        <summary><see cref="T:System.Data.EnumerableRowCollection`1" />의 각 요소를 새 폼에 투영합니다.</summary>
        <returns>해당 요소가 <paramref name="source" />의 각 요소에 대해 변형 함수를 호출한 결과인 <see cref="T:System.Data.EnumerableRowCollection`1" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 지연 된 실행을 사용 하 여 구현 됩니다. 즉시 반환 값은 작업을 수행 하는 데 필요한 모든 정보를 저장 하는 개체입니다. 이 메서드를 나타내는 쿼리 하거나 호출 하 여 개체 열거 될 때까지 실행 되지 않습니다 해당 `GetEnumerator` 메서드를 사용 하 여 직접 또는 `foreach` Visual C# 또는 `For Each` Visual Basic의 합니다.  
  
 이 프로젝션 메서드에 필요 변형 함수 `selector`소스 시퀀스의 각 값에 대해 하나의 값을 생성 하 `source`합니다. 경우 `selector` 소비자가 수동으로 컬렉션이 것은 컬렉션 자체는 값을 반환 합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenBy&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Data.EnumerableRowCollection" />의 행을 오름차순으로 두 번째로 정렬합니다.</summary>
        <forInternalUseOnly />
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenBy&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenBy&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenBy(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Data.OrderedEnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.ThenBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><paramref name="source" />의 행 요소의 형식으로, 일반적으로 <see cref="T:System.Data.DataRow" />입니다.</typeparam>
        <typeparam name="TKey"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
        <param name="source">순서를 지정할 <see cref="T:System.Data.EnumerableRowCollection" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</param>
        <param name="keySelector">요소에서 키를 추출하는 함수입니다.</param>
        <summary><see cref="T:System.Data.EnumerableRowCollection" />의 행을 지정된 키에 따라 오름차순으로 두 번째로 정렬합니다.</summary>
        <returns>요소가 지정된 키에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> 작업을 수행 하려면 기본 정렬 작업 하 여 기존 <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>합니다.  
  
 이 메서드는 지연 된 실행을 사용 하 여 구현 됩니다. 즉시 반환 값은 작업을 수행 하는 데 필요한 모든 정보를 저장 하는 개체입니다. 이 메서드를 나타내는 쿼리 하거나 호출 하 여 개체 열거 될 때까지 실행 되지 않습니다 해당 `GetEnumerator` 메서드를 사용 하 여 직접 또는 `foreach` Visual C# 또는 `For Each` Visual Basic의 합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderBy" />
        <altmember cref="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="ThenBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenBy&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenBy&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenBy(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Data.OrderedEnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.ThenBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><paramref name="source" />의 행 요소의 형식으로, 일반적으로 <see cref="T:System.Data.DataRow" />입니다.</typeparam>
        <typeparam name="TKey"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
        <param name="source">순서를 지정할 <see cref="T:System.Data.EnumerableRowCollection" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</param>
        <param name="keySelector">요소에서 키를 추출하는 함수입니다.</param>
        <param name="comparer">키를 비교할 <see cref="T:System.Collections.Generic.IComparer`1" />입니다.</param>
        <summary><see cref="T:System.Data.EnumerableRowCollection" />의 행을 지정된 키 및 비교자에 따라 오름차순으로 두 번째로 정렬합니다.</summary>
        <returns>요소가 지정된 키 및 비교자에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> 작업을 수행 하려면 기본 정렬 작업 하 여 기존 <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>합니다.  
  
 이 메서드는 지연 된 실행을 사용 하 여 구현 됩니다. 즉시 반환 값은 작업을 수행 하는 데 필요한 모든 정보를 저장 하는 개체입니다. 이 메서드를 나타내는 쿼리 하거나 호출 하 여 개체 열거 될 때까지 실행 되지 않습니다 해당 `GetEnumerator` 메서드를 사용 하 여 직접 또는 `foreach` Visual C# 또는 `For Each` Visual Basic의 합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderBy" />
        <altmember cref="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenByDescending&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Data.EnumerableRowCollection" />의 행을 내림차순으로 두 번째로 정렬합니다.</summary>
        <forInternalUseOnly />
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenByDescending&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenByDescending&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenByDescending(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Data.OrderedEnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.ThenByDescending (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><paramref name="source" />의 행 요소의 형식으로, 일반적으로 <see cref="T:System.Data.DataRow" />입니다.</typeparam>
        <typeparam name="TKey"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
        <param name="source">순서를 지정할 <see cref="T:System.Data.EnumerableRowCollection" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</param>
        <param name="keySelector">요소에서 키를 추출하는 함수입니다.</param>
        <summary><see cref="T:System.Data.EnumerableRowCollection" />의 행을 지정된 키에 따라 내림차순으로 두 번째로 정렬합니다.</summary>
        <returns>요소가 지정된 키에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> 작업을 수행 하려면 기본 정렬 작업 하 여 기존 <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>합니다.  
  
 이 메서드는 지연 된 실행을 사용 하 여 구현 됩니다. 즉시 반환 값은 작업을 수행 하는 데 필요한 모든 정보를 저장 하는 개체입니다. 이 메서드를 나타내는 쿼리 하거나 호출 하 여 개체 열거 될 때까지 실행 되지 않습니다 해당 `GetEnumerator` 메서드를 사용 하 여 직접 또는 `foreach` Visual C# 또는 `For Each` Visual Basic의 합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderByDescending" />
        <altmember cref="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="ThenByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenByDescending&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenByDescending&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenByDescending(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Data.OrderedEnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.ThenByDescending (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><paramref name="source" />의 행 요소의 형식으로, 일반적으로 <see cref="T:System.Data.DataRow" />입니다.</typeparam>
        <typeparam name="TKey"><paramref name="keySelector" />에서 반환하는 키의 형식입니다.</typeparam>
        <param name="source">순서를 지정할 <see cref="T:System.Data.EnumerableRowCollection" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</param>
        <param name="keySelector">요소에서 키를 추출하는 함수입니다.</param>
        <param name="comparer">키를 비교할 <see cref="T:System.Collections.Generic.IComparer`1" />입니다.</param>
        <summary><see cref="T:System.Data.EnumerableRowCollection" />의 행을 지정된 키 및 비교자에 따라 내림차순으로 두 번째로 정렬합니다.</summary>
        <returns>요소가 지정된 키 및 비교자에 따라 정렬된 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> 작업을 수행 하려면 기본 정렬 작업 하 여 기존 <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>합니다.  
  
 이 메서드는 지연 된 실행을 사용 하 여 구현 됩니다. 즉시 반환 값은 작업을 수행 하는 데 필요한 모든 정보를 저장 하는 개체입니다. 이 메서드를 나타내는 쿼리 하거나 호출 하 여 개체 열거 될 때까지 실행 되지 않습니다 해당 `GetEnumerator` 메서드를 사용 하 여 직접 또는 `foreach` Visual C# 또는 `For Each` Visual Basic의 합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderByDescending" />
        <altmember cref="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <Member MemberName="Where&lt;TRow&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;TRow&gt; Where&lt;TRow&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; Where&lt;TRow&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of TRow) (source As EnumerableRowCollection(Of TRow), predicate As Func(Of TRow, Boolean)) As EnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;TRow&gt; ^ Where(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Where : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, bool&gt; -&gt; System.Data.EnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.Where (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TRow,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><paramref name="source" />의 행 요소의 형식으로, 일반적으로 <see cref="T:System.Data.DataRow" />입니다.</typeparam>
        <param name="source">필터링할 <see cref="T:System.Data.EnumerableRowCollection" /> 요소가 들어 있는 <see cref="T:System.Data.DataRow" />입니다.</param>
        <param name="predicate">각 요소를 조건에 대해 테스트하는 함수입니다.</param>
        <summary>지정된 조건자에 따라 행 시퀀스를 필터링합니다.</summary>
        <returns>입력 시퀀스에서 조건에 맞는 행이 들어 있는 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 지연 된 실행을 사용 하 여 구현 됩니다. 즉시 반환 값은 작업을 수행 하는 데 필요한 모든 정보를 저장 하는 개체입니다. 이 메서드를 나타내는 쿼리 하거나 호출 하 여 개체 열거 될 때까지 실행 되지 않습니다 해당 `GetEnumerator` 메서드를 사용 하 여 직접 또는 `foreach` Visual C# 또는 `For Each` Visual Basic의 합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
      </Docs>
    </Member>
  </Members>
</Type>