<Type Name="IDataParameter" FullName="System.Data.IDataParameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2c8f54d06db7c4524a017d4454e9390281819bcc" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58717917" /></Metadata><TypeSignature Language="C#" Value="public interface IDataParameter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataParameter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDataParameter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataParameter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataParameter" />
  <TypeSignature Language="F#" Value="type IDataParameter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Command 개체에 대한 매개 변수 및 선택적으로 <see cref="T:System.Data.DataSet" /> 열에 대한 매핑을 나타내며, 데이터 소스에 액세스하는 .NET Framework 데이터 공급자에 의해 구현됩니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.IDataParameter> 명령 개체를 매개 변수를 나타내는 매개 변수 클래스를 구현 하는 상속 클래스를 사용 하는 인터페이스입니다. 매개 변수 클래스에 대 한 자세한 내용은 참조 하세요. [구성 매개 변수 및 매개 변수 데이터 형식](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)합니다.  
  
 애플리케이션의 인스턴스를 만들지 않습니다 합니다 <xref:System.Data.IDataParameter> 인터페이스를 직접 상속 된 클래스의 인스턴스를 만들고 있지만 <xref:System.Data.IDataParameter>합니다.  
  
 상속 된 클래스 <xref:System.Data.IDataParameter> 상속 된 멤버를 구현 해야 하며 일반적으로 공급자 특정 기능을 추가 하기 위한 추가 멤버를 정의 합니다. 예를 들어 합니다 <xref:System.Data.IDataParameter> 인터페이스를 정의 합니다 <xref:System.Data.IDataParameter.DbType%2A> 속성입니다. 차례로 합니다 <xref:System.Data.OleDb.OleDbParameter> 클래스는이 속성을 상속 하 고도 정의 합니다 <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 파생된 클래스의 여러 인스턴스를 만듭니다 <xref:System.Data.SqlClient.SqlParameter>을 통해 합니다 <xref:System.Data.SqlClient.SqlParameterCollection> 내에서 컬렉션을 <xref:System.Data.SqlClient.SqlDataAdapter>합니다. 이러한 매개 변수는 데이터를 데이터 원본에서 데이터를 선택 하는 데는 <xref:System.Data.DataSet>합니다. 이 예에서는 가정 하는 <xref:System.Data.DataSet> 및 <xref:System.Data.SqlClient.SqlDataAdapter> 적절 한 스키마, 명령 및 연결을 사용 하 여 이미 생성 되어 합니다.  
  
 [!code-csharp[Classic WebData SqlParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>.NET Framework 데이터 공급자의 일관성 수준을 올릴 폼에서 상속 하는 클래스의 이름을 <paramref name="Prv" /> 매개 변수는 <paramref name="Prv" /> 는 특정.NET Framework 데이터 공급자 네임 스페이스의 모든 클래스에 지정 된 일관 된 접두사입니다. 예를 들어 <paramref name="Sql" /> 접두사입니다 합니다 <see cref="T:System.Data.SqlClient.SqlCommand" /> 클래스는 <see langword="System.Data.SqlClient" /> 네임 스페이스입니다.  
  
상속 하는 경우는 <see cref="T:System.Data.IDataParameter" /> 인터페이스 다음 생성자를 구현 해야 합니다. 
 <list type="table"><listheader><term> 항목 
 </term><description> 설명 
 </description></listheader><item><term> PrvParameter() 
 </term><description> 매개 변수 클래스의 새 인스턴스를 초기화합니다.  
  
 </description></item><item><term> PrvParameter (문자열 이름, PrvDbType 데이터 형식) 
 </term><description> 매개 변수 이름과 데이터 형식 사용 하 여 매개 변수 클래스의 새 인스턴스를 초기화합니다.  
  
 </description></item><item><term> PrvParameter (문자열 이름, 개체 값) 
 </term><description> 매개 변수 이름과 매개 변수의 값인 개체를 사용 하 여 매개 변수 클래스의 새 인스턴스를 초기화 합니다.  
  
 </description></item><item><term> PrvParameter (문자열 이름, PrvDbType dataType, int 크기) 
 </term><description> 매개 변수 이름, 데이터 형식 및 너비를 사용 하 여 매개 변수 클래스의 새 인스턴스를 초기화합니다.  
  
 </description></item><item><term> PrvParameter (문자열 이름, PrvDbType dataType, int 크기, 문자열 srcColumn) 
 </term><description> 매개 변수 이름, 데이터 형식, 너비 및 소스 열 이름을 사용 하 여 DbParameter 클래스의 새 인스턴스를 초기화합니다.  
  
 </description></item><item><term> PrvParameter (문자열 parameterName, PrvDbType dbType, int 크기, ParameterDirection 방향, 부울 isNullable, 바이트 정밀도, 바이트 크기 조정, 문자열 srcColumn, DataRowVersion srcVersion, 개체 값) 
 </term><description> 새 인스턴스를 초기화 합니다 <see cref="T:System.Data.OleDb.OleDbParameter" /> 매개 변수 이름, 데이터 형식, 너비, 원본 열 이름, 매개 변수 방향, 전체 자릿수, 및 기타 속성을 사용 하 여 클래스입니다.  
  
 </description></item></list></para></block>
  </Docs>
  <Members>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : System.Data.DbType with get, set" Usage="System.Data.IDataParameter.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매개 변수의 <see cref="T:System.Data.DbType" />을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Data.DbType" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Data.DbType.String" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 (여기서 Prv 접두사를 나타내는 공급자별) PrvDbType 및 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 연결 됩니다. 따라서 설정 된 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 는 PrvDbType 지원 PrvDbType 변경 합니다.  
  
 지원 되는 데이터 형식의 목록, 적절 한.NET Framework 데이터 공급자 PrvDbType 멤버를 참조 하세요. 자세한 내용은 [DataAdapter 매개 변수](~/docs/framework/data/adonet/dataadapter-parameters.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">속성이 유효한 <see cref="T:System.Data.DbType" />으로 설정되지 않은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Data.ParameterDirection with get, set" Usage="System.Data.IDataParameter.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매개 변수가 입력 전용, 출력 전용, 양방향 또는 저장 프로시저 반환 값 매개 변수인지 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Data.ParameterDirection" /> 값 중 하나입니다. 기본값은 <see langword="Input" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Data.ParameterDirection> 출력과 연결 된 실행은 <xref:System.Data.SqlClient.SqlCommand> 값을 반환 하지 않습니다는 <xref:System.Data.IDataParameter> null 값을 포함 합니다.  
  
 마지막 결과 집합에서 마지막 행을 읽은 후 `Output`하십시오 `InputOut`, 및 `ReturnValue` 매개 변수가 업데이트 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 구현 하는 클래스의 인스턴스를 만들고 <xref:System.Data.SqlClient.SqlParameter>, 해당 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData SqlParameter.Direction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Direction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.Direction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Direction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">속성에 유효한 <see cref="T:System.Data.ParameterDirection" /> 값 중 하나를 설정하지 않은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool" Usage="System.Data.IDataParameter.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매개 변수에 null 값이 허용되는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>null 값이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Null 값이 사용 하 여 처리 되는 <xref:System.DBNull> 클래스입니다.  
  
   
  
## Examples  
 다음 예제에서는 구현 하는 클래스의 인스턴스를 만들고 <xref:System.Data.SqlClient.SqlParameter>, 해당 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterName : string with get, set" Usage="System.Data.IDataParameter.ParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.IDataParameter" />의 이름을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Data.IDataParameter" />의 이름입니다. 기본값은 빈 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 합니다 <xref:System.Data.IDataParameter.ParameterName%2A> 형식으로 지정 됩니다 \@ *paramname*합니다. 설정 해야 <xref:System.Data.IDataParameter.ParameterName%2A> 매개 변수를 사용 하는 명령을 실행 하기 전에 합니다.  
  
   
  
## Examples  
 다음 예제에서는 구현 하는 클래스의 인스턴스를 만들고 <xref:System.Data.SqlClient.SqlParameter>, 해당 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.SourceColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumn : string with get, set" Usage="System.Data.IDataParameter.SourceColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.DataSet" />으로 매핑되고 <see cref="P:System.Data.IDataParameter.Value" />를 로드하거나 반환하는 데 사용되는 소스 열의 이름을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Data.DataSet" />으로 매핑되는 소스 열의 이름입니다. 기본값은 빈 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값 간의 링크를 <xref:System.Data.IDataParameter> 하며 <xref:System.Data.DataTable> 값에 따라 양방향 수를 <xref:System.Data.IDataParameter.Direction%2A> 속성.  
  
   
  
## Examples  
 다음 예제에서는 구현 하는 클래스의 인스턴스를 만들고 <xref:System.Data.SqlClient.SqlParameter>, 해당 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData SqlParameter.SourceColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SourceColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public System.Data.DataRowVersion SourceVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.SourceVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceVersion As DataRowVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowVersion SourceVersion { System::Data::DataRowVersion get(); void set(System::Data::DataRowVersion value); };" />
      <MemberSignature Language="F#" Value="member this.SourceVersion : System.Data.DataRowVersion with get, set" Usage="System.Data.IDataParameter.SourceVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Data.IDataParameter.Value" />를 로드할 때 사용할 <see cref="T:System.Data.DataRowVersion" />을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다. 기본값은 <see langword="Current" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 사용 합니다 <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> 중는 <xref:System.Data.Common.DbDataAdapter.Update%2A> 원래 또는 현재 값을 매개 변수 값을 사용할지 여부를 확인 하려면. 이렇게 하면 기본 키를 업데이트할 수 있습니다. 이 속성이 무시 되는 <xref:System.Data.IDbDataAdapter.InsertCommand%2A> 및 <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>합니다. 버전에이 속성은 <xref:System.Data.DataRow> 에서 사용 하는 합니다 <xref:System.Data.DataRow.Item%2A> 속성 또는 <xref:System.Data.DataRow.GetChildRows%2A> 메서드의 <xref:System.Data.DataRow> 개체.  
  
   
  
## Examples  
 다음 예제에서는 구현 하는 클래스의 인스턴스를 만들고 <xref:System.Data.SqlClient.SqlParameter>, 해당 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData SqlParameter.SourceVersion Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceVersion Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SourceVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">속성이 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나로 설정되지 않은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Data.IDataParameter.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매개 변수의 값을 가져오거나 설정합니다.</summary>
        <value>매개 변수의 값인 <see cref="T:System.Object" />입니다. 기본값은 null입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 입력 매개 변수의 값에 바인딩되는 <xref:System.Data.IDbCommand> 서버로 전송 되는 합니다. 출력 및 반환 값 매개 변수 값은 설정 완료 되 면 합니다 <xref:System.Data.IDbCommand> 후는 <xref:System.Data.IDataReader> 닫혀 있습니다.  
  
 Null 매개 변수 값을 서버로 전송 하는 경우에 사용자 지정 해야 합니다 `DBNull`null이 아니고 합니다. 시스템에서 null 값은 값이 없는 빈 개체입니다. `DBNull` 은 null 값을 나타내는 데 사용됩니다.  
  
 응용 프로그램 데이터베이스 형식을 지정 하는 경우 공급자가 서버에 데이터를 보내면 해당 형식에 바인딩된 값 변환 됩니다. 공급자가 지 원하는 경우 모든 유형의 값을 변환 하려고 합니다 <xref:System.IConvertible> 인터페이스입니다. 지정된 된 형식의 값을 사용 하 여 호환 되지 않는 경우 변환 오류가 발생할 수 있습니다.  
  
 합니다 <xref:System.Data.SqlClient.SqlParameter.Value%2A> 속성을 덮어씁니다 <xref:System.Data.Common.DbDataAdapter.Update%2A>합니다.  
  
   
  
## Examples  
 다음 예제에서는 구현 하는 클래스의 인스턴스를 만들고 <xref:System.Data.SqlClient.SqlParameter>, 해당 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData SqlParameter.Value Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Value Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.Value Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Value Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>