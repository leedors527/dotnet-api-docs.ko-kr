<Type Name="IDataReader" FullName="System.Data.IDataReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b10a51a48d6bdfd7ec3c7d25fcc4bae20255b9b4" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58711430" /></Metadata><TypeSignature Language="C#" Value="public interface IDataReader : IDisposable, System.Data.IDataRecord" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataReader implements class System.Data.IDataRecord, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDataReader" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataReader&#xA;Implements IDataRecord, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataReader : IDisposable, System::Data::IDataRecord" />
  <TypeSignature Language="F#" Value="type IDataReader = interface&#xA;    interface IDisposable&#xA;    interface IDataRecord" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataRecord</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>데이터 소스에서 명령을 실행하여 얻은 결과 집합의 하나 이상의 앞으로만 이동 가능한 스트림을 읽는 방법을 제공하며 관계형 데이터베이스에 액세스하는 .NET Framework 데이터 공급자에 의해 구현됩니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.IDataReader> 하 고 <xref:System.Data.IDataRecord> 인터페이스를 구현 하는 상속 클래스 사용을 `DataReader` 결과 집합의 하나 이상의 앞 으로만 이동 가능한 스트림을 읽는 방법을 제공 하는 클래스입니다. 에 대 한 자세한 내용은 `DataReader` 클래스를 참조 하세요 [DataReader를 사용 하 여 데이터 검색](~/docs/framework/data/adonet/retrieving-data-using-a-datareader.md)합니다.  
  
 애플리케이션의 인스턴스를 만들지 않습니다 합니다 <xref:System.Data.IDataReader> 인터페이스를 직접 상속 된 클래스의 인스턴스를 만들고 있지만 <xref:System.Data.IDataReader>합니다.  
  
 상속 된 클래스 <xref:System.Data.IDataReader> 상속 된 멤버를 구현 해야 하며 일반적으로 공급자 특정 기능을 추가 하기 위한 추가 멤버를 정의 합니다.  
  
 결과 집합을 다른 변경 내용을 처리 하거나 구현 하는 클래스의 사용자에 게 표시 될 수 있습니다 데이터를 읽는 동안 스레드는 `IDataReader`합니다. 그러나 정확한 동작은 공급자와 시간에 따라 다릅니다.  
  
   
  
## Examples  
 다음 예제에서는 파생된 클래스의 인스턴스를 만듭니다 <xref:System.Data.SqlClient.SqlConnection>하십시오 <xref:System.Data.SqlClient.SqlCommand>, 및 <xref:System.Data.SqlClient.SqlDataReader>합니다. 이 예제에서는 콘솔에 작성 된 데이터를 읽습니다. 를 마지막 합니다 <xref:System.Data.SqlClient.SqlDataReader>, 그런 다음 <xref:System.Data.SqlClient.SqlConnection>합니다.  
  
 [!code-csharp[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>.NET Framework 데이터 공급자의 일관성 수준을 올릴 폼에서 상속 하는 클래스의 이름을 <paramref name="Prv" /> where 명령을 <paramref name="Prv" /> 는 특정.NET Framework 데이터 공급자 네임 스페이스의 모든 클래스에 지정 된 일관 된 접두사입니다. 예를 들어 <paramref name="Sql" /> 접두사입니다 합니다 <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> 클래스는 <see langword="System.Data.SqlClient" /> 네임 스페이스입니다.  
  
사용자의 인스턴스를 만들지 마십시오를 <see langword="DataReader" /> 클래스를 직접. 대신 가져올 수는 <see langword="DataReader" /> 를 통해 인스턴스를 <see langword="ExecuteReader" /> 메서드의 <see langword="Command" /> 개체입니다. 따라서 표시 해야 <see langword="DataReader" /> 생성자 내부로 합니다.</para></block>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="iDataReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.IDataReader" /> 개체를 닫습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 명시적으로 호출 해야 합니다 <xref:System.Data.IDataReader.Close%2A> 메서드를 사용 하 여는 <xref:System.Data.IDataReader> 연결을 사용 하 <xref:System.Data.IDbConnection> 다른 목적에 대 한 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.IDataReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 행의 중첩 수준을 나타내는 값을 가져옵니다.</summary>
        <value>중첩 수준입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 가장 바깥쪽 테이블의 중첩 수준은 0입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="abstract member GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="iDataReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.DataTable" />의 열 메타데이터를 정의하는 <see cref="T:System.Data.IDataReader" />을 반환합니다.</summary>
        <returns>열 메타데이터를 정의하는 <see cref="T:System.Data.DataTable" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 구현의 <xref:System.Data.IDataReader.GetSchemaTable%2A> 다른.NET Framework 데이터 공급자는 OLE DB 공급자 계층을 사용 하지 않는 한.NET Framework Data Provider for OLE DB에 대 한 메서드 구현 하는 동안 OLE DB icolumnsrowset:: Getcolumnsrowset 메서드를 매핑합니다. 순서 <xref:System.Data.IDataReader.GetSchemaTable%2A> 반환 되는 DataReader 열 및 테이블의 각 열에 대 한 메타 데이터 반환 사용 하는 데이터 공급자에 따라 달라 집니다. 다음 표는 데이터 공급자 및 구현 하는 멤버 <xref:System.Data.IDataReader.GetSchemaTable%2A>합니다.  
  
|데이터 공급자|멤버|  
|-------------------|------------|  
|.NET data Provider for ODBC|<xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.|  
|.NET data Provider for OLE DB|<xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.|  
|.NET data Provider for Oracle|<xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.|  
|.NET data Provider for SQL Server|<xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Data.IDataReader" />가 닫혔습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.IDataReader.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 판독기가 닫혀 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>데이터 판독기가 닫혀 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.IDataReader.IsClosed%2A> 및 <xref:System.Data.IDataReader.RecordsAffected%2A> 후 호출할 수 있는 속성만 <xref:System.Data.IDataReader> 닫혀 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool NextResult();" />
      <MemberSignature Language="F#" Value="abstract member NextResult : unit -&gt; bool" Usage="iDataReader.NextResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>일괄 처리 SQL 문의 결과를 읽을 때 데이터 판독기에서 다음 결과로 진행하도록 합니다.</summary>
        <returns>행이 더 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일괄 처리 SQL 문을 실행 하 여 가져올 수 있는 여러 결과 처리 하는 데 사용 합니다.  
  
 데이터 판독기는 기본적으로 첫 번째 결과에 배치 됩니다.  
  
 [!code-csharp[IDataReader_NextResult#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/idatareader_nextresult/cs/source.cs#1)]
 [!code-vb[IDataReader_NextResult#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/idatareader_nextresult/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Read();" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; bool" Usage="iDataReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.IDataReader" />를 다음 레코드로 이동합니다.</summary>
        <returns>행이 더 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 위치는 <xref:System.Data.IDataReader> 첫 번째 레코드 앞입니다. 호출 해야 하므로 <xref:System.Data.IDataReader.Read%2A> 모든 데이터 액세스를 시작 합니다.  
  
 연결 된 연결이 계속 제공 데이터 판독기를 사용 하는 동안는 <xref:System.Data.IDataReader>합니다. 이 경우까지 <xref:System.Data.IDataReader.Close%2A> 라고 합니다.  
  
   
  
## Examples  
 다음 예제에서는 세 개의 파생된 클래스의 인스턴스를 만듭니다 <xref:System.Data.OleDb.OleDbConnection>, <xref:System.Data.OleDb.OleDbCommand>, 및 <xref:System.Data.OleDb.OleDbDataReader>합니다. 이 예제에서는 콘솔에 작성 된 데이터를 읽습니다. 를 마지막 합니다 <xref:System.Data.OleDb.OleDbDataReader>, 그런 다음 <xref:System.Data.OleDb.OleDbConnection>합니다.  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.IDataReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SQL 문을 실행하여 변경, 삽입 또는 삭제된 행 수를 가져옵니다.</summary>
        <value>변경, 삽입 또는 삭제된 행 수입니다. 영향을 받은 행이 없거나 문이 실패하면 0이고, SELECT 문의 경우는 -1입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Data.IDataReader.RecordsAffected%2A> 모든 행을 닫을 때까지 속성이 설정 되지 않은 <xref:System.Data.IDataReader>합니다.  
  
 <xref:System.Data.IDataReader.IsClosed%2A> 및 <xref:System.Data.IDataReader.RecordsAffected%2A> 후 호출할 수 있는 속성만 <xref:System.Data.IDataReader> 닫혀 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>