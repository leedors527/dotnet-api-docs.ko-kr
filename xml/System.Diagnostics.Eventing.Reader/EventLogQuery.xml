<Type Name="EventLogQuery" FullName="System.Diagnostics.Eventing.Reader.EventLogQuery">
  <Metadata><Meta Name="ms.openlocfilehash" Value="473afed028f03be7ded159cfff4bc23f72d21380" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56767957" /></Metadata><TypeSignature Language="C#" Value="public class EventLogQuery" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLogQuery extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.Reader.EventLogQuery" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLogQuery" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogQuery" />
  <TypeSignature Language="F#" Value="type EventLogQuery = class" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>이벤트 로그의 이벤트에 대한 쿼리 및 쿼리 실행 방법과 쿼리를 실행할 컴퓨터를 정의하는 설정을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 예를 들어이 클래스를 사용 하 여 코드 참조 [방법: 이벤트에 대 한 쿼리](https://msdn.microsoft.com/library/5231a436-4cf2-4539-90d2-a04813aba069) 또는 [방법: 액세스 및 이벤트 정보 읽기](https://msdn.microsoft.com/library/14db3375-d305-49ae-aa24-aedbe906e76c)합니다.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac">이벤트 로그를 읽고 관리하기 위한 기술 요약</related>
    <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5">이벤트 로그 시나리오</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac">이벤트 로그를 읽고 관리하기 위한 기술 요약</related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5">이벤트 로그 시나리오</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogQuery (string path, System.Diagnostics.Eventing.Reader.PathType pathType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.Diagnostics.Eventing.Reader.PathType pathType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogQuery(System::String ^ path, System::Diagnostics::Eventing::Reader::PathType pathType);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.Reader.EventLogQuery : string * System.Diagnostics.Eventing.Reader.PathType -&gt; System.Diagnostics.Eventing.Reader.EventLogQuery" Usage="new System.Diagnostics.Eventing.Reader.EventLogQuery (path, pathType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathType" Type="System.Diagnostics.Eventing.Reader.PathType" />
      </Parameters>
      <Docs>
        <param name="path">쿼리할 이벤트 로그의 이름 또는 쿼리할 이벤트 로그 파일에 대한 경로입니다.</param>
        <param name="pathType">경로 매개 변수에 사용되는 문자열이 이벤트 로그의 이름을 지정하는지 또는 이벤트 로그 파일의 경로를 지정하는지 여부를 지정합니다.</param>
        <summary>쿼리의 대상을 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> 클래스의 새 인스턴스를 초기화합니다. 대상은 활성 이벤트 로그 또는 로그 파일이 될 수 있습니다.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac">이벤트 로그를 읽고 관리하기 위한 기술 요약</related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5">이벤트 로그 시나리오</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogQuery (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.Diagnostics.Eventing.Reader.PathType pathType, string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogQuery(System::String ^ path, System::Diagnostics::Eventing::Reader::PathType pathType, System::String ^ query);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.Reader.EventLogQuery : string * System.Diagnostics.Eventing.Reader.PathType * string -&gt; System.Diagnostics.Eventing.Reader.EventLogQuery" Usage="new System.Diagnostics.Eventing.Reader.EventLogQuery (path, pathType, query)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathType" Type="System.Diagnostics.Eventing.Reader.PathType" />
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">쿼리할 이벤트 로그의 이름 또는 쿼리할 이벤트 로그 파일에 대한 경로입니다.</param>
        <param name="pathType">경로 매개 변수에 사용되는 문자열이 이벤트 로그의 이름을 지정하는지 또는 이벤트 로그 파일의 경로를 지정하는지 여부를 지정합니다.</param>
        <param name="query">쿼리 조건과 일치하는 이벤트를 검색하는 데 사용되는 이벤트 쿼리입니다.</param>
        <summary>쿼리의 대상 및 이벤트 쿼리를 지정하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> 클래스의 새 인스턴스를 초기화합니다. 대상은 활성 이벤트 로그 또는 로그 파일이 될 수 있습니다.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac">이벤트 로그를 읽고 관리하기 위한 기술 요약</related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5">이벤트 로그 시나리오</related>
      </Docs>
    </Member>
    <Member MemberName="ReverseDirection">
      <MemberSignature Language="C#" Value="public bool ReverseDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReverseDirection" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property ReverseDirection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReverseDirection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReverseDirection : bool with get, set" Usage="System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이벤트 로그에서 가장 새로운 이벤트부터 가장 오래된 이벤트 순서로 이벤트를 읽을지 여부를 결정하는 부울 값을 가져오거나 설정합니다.</summary>
        <value>로그에서 가장 새로운 이벤트부터 가장 오래된 이벤트 순서로 이벤트를 읽는 경우 <see langword="true" />를 반환하고, 로그에서 가장 오래된 이벤트부터 가장 새로운 이벤트 순서로 이벤트를 읽는 경우 <see langword="false" />를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본값은 `false`입니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac">이벤트 로그를 읽고 관리하기 위한 기술 요약</related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5">이벤트 로그 시나리오</related>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Eventing.Reader.EventLogSession Session { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.Eventing.Reader.EventLogSession Session" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogQuery.Session" />
      <MemberSignature Language="VB.NET" Value="Public Property Session As EventLogSession" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Eventing::Reader::EventLogSession ^ Session { System::Diagnostics::Eventing::Reader::EventLogSession ^ get(); void set(System::Diagnostics::Eventing::Reader::EventLogSession ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Session : System.Diagnostics.Eventing.Reader.EventLogSession with get, set" Usage="System.Diagnostics.Eventing.Reader.EventLogQuery.Session" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogSession</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>로컬 컴퓨터 또는 원격 컴퓨터의 이벤트 로그 서비스에 액세스하는 세션을 가져오거나 설정합니다. 이 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> 개체를 사용하여 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> 개체 또는 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> 개체를 만들면 이 개체로 원격 이벤트 로그에 액세스하도록 설정할 수 있습니다.</summary>
        <value><see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> 개체를 반환합니다.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac">이벤트 로그를 읽고 관리하기 위한 기술 요약</related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5">이벤트 로그 시나리오</related>
      </Docs>
    </Member>
    <Member MemberName="TolerateQueryErrors">
      <MemberSignature Language="C#" Value="public bool TolerateQueryErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TolerateQueryErrors" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property TolerateQueryErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TolerateQueryErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TolerateQueryErrors : bool with get, set" Usage="System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>쿼리에 오류가 있는 경우 이 쿼리에서 이벤트를 계속 검색할지 여부를 결정하는 부울 값을 가져오거나 설정합니다.</summary>
        <value>일부 로그에서 쿼리가 실패해도 쿼리에서 이벤트를 계속 검색하면 <see langword="true" />이고, 쿼리가 실패할 때 이 쿼리에서 더 이상 이벤트를 검색하지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac">이벤트 로그를 읽고 관리하기 위한 기술 요약</related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5">이벤트 로그 시나리오</related>
      </Docs>
    </Member>
  </Members>
</Type>