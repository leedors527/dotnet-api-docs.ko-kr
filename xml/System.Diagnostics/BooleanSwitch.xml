<Type Name="BooleanSwitch" FullName="System.Diagnostics.BooleanSwitch">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c0b168e541e7cf7a41784456b7bced3b52ec3379" /><Meta Name="ms.sourcegitcommit" Value="f9e71795ba0f9c2dfaa74bec233343ed0f3ffd99" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/15/2019" /><Meta Name="ms.locfileid" Value="57917855" /></Metadata><TypeSignature Language="C#" Value="public class BooleanSwitch : System.Diagnostics.Switch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BooleanSwitch extends System.Diagnostics.Switch" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.BooleanSwitch" />
  <TypeSignature Language="VB.NET" Value="Public Class BooleanSwitch&#xA;Inherits Switch" />
  <TypeSignature Language="C++ CLI" Value="public ref class BooleanSwitch : System::Diagnostics::Switch" />
  <TypeSignature Language="F#" Value="type BooleanSwitch = class&#xA;    inherit Switch" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.Switch</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-3.0">
      <AttributeName>System.Diagnostics.SwitchLevel(typeof(System.Boolean))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>디버깅 및 추적 출력을 제어하는 간단한 켜기/끄기 스위치를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 중요도에 따라 메시지를 사용할지 여부를 Boolean 추적 스위치를 사용할 수 있습니다. 사용 된 <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> 스위치의 현재 값을 검색할 속성입니다.  
  
 활성화 하거나 비활성화할 수는 <xref:System.Diagnostics.BooleanSwitch> 애플리케이션 구성 파일을 사용 하 여 구성된 된 통해 <xref:System.Diagnostics.BooleanSwitch> 애플리케이션의 값입니다. 또는 만들 수 있습니다는 <xref:System.Diagnostics.BooleanSwitch> 설정 하 여 코드에는 <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> 계측 코드의 특정 섹션에 직접 속성입니다.  
  
 구성 하는 <xref:System.Diagnostics.BooleanSwitch>, 애플리케이션의 이름에 해당 하는 구성 파일을 편집 합니다. 이 파일에 있습니다 수 추가 또는 제거 스위치를, 스위치의 값을 설정 하거나 스위치 애플리케이션에서 이전에 설정한 모든 선택을 취소 합니다. 다음 예제와 같이 구성 파일의 형식은 같아야 합니다.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="1"/>  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
 이 예제에서는 구성 섹션 정의 <xref:System.Diagnostics.BooleanSwitch> 사용 하 여는 <xref:System.Diagnostics.Switch.DisplayName%2A> 속성이로 설정 `mySwitch` 하며 <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> 값으로 설정 `true`합니다. 애플리케이션 내에서 만들어 구성 된 스위치 값을 사용할 수 있습니다는 <xref:System.Diagnostics.BooleanSwitch> 다음 코드 예제와 같이 동일한 이름을 사용 합니다.  
  
 [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic BooleanSwitch.BooleanSwitch Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CS/remarks.cs#2)]
 [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/VB/remarks.vb#2)]  
  
 기본적으로 <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> 구성 파일에 지정 된 값을 사용 하 여 속성을 설정 합니다. 스위치를 설정 하려면 0 값으로 구성 합니다 <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> 속성을 `false`; 스위치를 설정 하려면 0이 아닌 값을 사용 하 여 구성 합니다 <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> 속성을 `true`. 경우는 <xref:System.Diagnostics.BooleanSwitch> 생성자는 구성 파일에서 초기 스위치 설정을 찾을 수 없습니다 합니다 <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> 새 스위치의 속성 `false` 기본적으로 합니다.  
  
 추적 또는 디버깅 스위치를 사용 하도록 설정 해야 합니다. 다음 구문은 특정 컴파일러입니다. C# 또는 Visual Basic 이외의 컴파일러를 사용 하면 컴파일러에 대 한 설명서를 참조 합니다.  
  
-   C# 디버깅을 사용 하려면 다음을 추가 합니다 `/d:DEBUG` 플래그를 추가할 수 있습니다 하거나 코드를 컴파일할 때 컴파일러 명령줄 `#define DEBUG` 파일의 맨 위로 이동 합니다. Visual Basic에서 추가 된 `/d:DEBUG=True` 컴파일러 명령줄 플래그입니다.  
  
-   C#에서 추적을 사용 하려면 추가 합니다 `/d:TRACE` 코드를 컴파일할 때 컴파일러 명령줄 플래그 `#define TRACE` 파일의 맨 위로 이동 합니다. Visual Basic에서 추가 된 `/d:TRACE=True` 컴파일러 명령줄 플래그입니다.  
  
> [!NOTE]
>  이러한 디버그 하 고 사용 하는 경우 추적 컴파일러 스위치 필요 하지 않습니다는 <xref:System.Diagnostics.BooleanSwitch> 격리의 클래스입니다. 와 함께 필요한 <xref:System.Diagnostics.Trace> 또는 <xref:System.Diagnostics.Debug> 메서드는 조건부로 컴파일됩니다.  
  
 애플리케이션을 계측 하는 방법은 참조 하세요 <xref:System.Diagnostics.Debug> 고 <xref:System.Diagnostics.Trace>입니다. 구성 및 추적 스위치를 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [추적 스위치](~/docs/framework/debug-trace-profile/trace-switches.md)합니다.  
  
> [!NOTE]
>  성능 향상을 위해 할 수 있습니다 <xref:System.Diagnostics.BooleanSwitch> 멤버 `static` 클래스에서입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Diagnostics.BooleanSwitch> 스위치를 사용 하는 오류 메시지를 출력할 것인지 여부를 결정 합니다. 클래스 수준에서 스위치를 만드세요. 합니다 `Main` 메서드를 위치로 전달 `MyMethod`오류 메시지를 인쇄 하 고 오류가 발생 합니다.  
  
 [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CS/source.cs#1)]
 [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Diagnostics.BooleanSwitch" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BooleanSwitch (string displayName, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BooleanSwitch(System::String ^ displayName, System::String ^ description);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.BooleanSwitch : string * string -&gt; System.Diagnostics.BooleanSwitch" Usage="new System.Diagnostics.BooleanSwitch (displayName, description)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName">사용자 인터페이스에 표시할 이름입니다.</param>
        <param name="description">스위치에 대한 설명입니다.</param>
        <summary>지정된 표시 이름 및 설명을 사용하여 <see cref="T:System.Diagnostics.BooleanSwitch" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 만들 때를 <xref:System.Diagnostics.BooleanSwitch>, `displayName` 매개 변수는 초기 스위치 설정을 찾는 데 사용 됩니다. 생성자에는 초기 설정으로 찾을 수 없는 경우는 <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> 속성이 `false` (사용 안 함).  
  
 수준을 설정 하 여 <xref:System.Diagnostics.BooleanSwitch>, 애플리케이션의 이름에 해당 하는 구성 파일을 편집 합니다. 이 파일에서 스위치를 추가 하 고 해당 값을 설정, 스위치를 제거 하거나 지울 수 애플리케이션에서 이전에 설정한 모든 스위치입니다. 다음 예제와 같이 구성 파일의 형식은 해야 합니다.  
  
```xml  
<configuration>  
    <system.diagnostics>  
       <switches>  
          <add name="mySwitch" value="10" />  
          <add name="myNewSwitch" value="20" />  
          <remove name="mySwitch" />  
          <clear/>  
       </switches>  
    </system.diagnostics>  
 </configuration>  
```  
  
> [!NOTE]
>  사용자가 만든 스위치 해야 `static`합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Diagnostics.BooleanSwitch> 스위치를 사용 하는 오류 메시지를 출력할 것인지 여부를 결정 합니다. 스위치는 클래스 수준에서 생성 됩니다. 합니다 `Main` 메서드를 위치로 전달 `MyMethod`오류 메시지를 인쇄 하 고 오류가 발생 합니다.  
  
 [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CS/source.cs#1)]
 [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BooleanSwitch (string displayName, string description, string defaultSwitchValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description, string defaultSwitchValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String, defaultSwitchValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BooleanSwitch(System::String ^ displayName, System::String ^ description, System::String ^ defaultSwitchValue);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.BooleanSwitch : string * string * string -&gt; System.Diagnostics.BooleanSwitch" Usage="new System.Diagnostics.BooleanSwitch (displayName, description, defaultSwitchValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="description" Type="System.String" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defaultSwitchValue" Type="System.String" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="displayName">사용자 인터페이스에 표시할 이름입니다.</param>
        <param name="description">스위치에 대한 설명입니다.</param>
        <param name="defaultSwitchValue">스위치의 기본값입니다.</param>
        <summary>지정된 표시 이름, 설명 및 기본 스위치 값을 사용하여 <see cref="T:System.Diagnostics.BooleanSwitch" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `displayName` 매개 변수 값을 설정 하는 합니다 <xref:System.Diagnostics.Switch.DisplayName%2A> 속성 및 `description` 매개 변수 값을 설정 하는 데 사용 됩니다는 <xref:System.Diagnostics.Switch.Description%2A> 속성입니다. 합니다 `defaultSwitchValue` 매개 변수를 필드로 저장 하 고 초기화 하는 데는 <xref:System.Diagnostics.Switch.Value%2A> 첫 번째 참조에서 속성입니다. 생성자 사용에 대 한 자세한 내용은 참조는 <xref:System.Diagnostics.BooleanSwitch.%23ctor%28System.String%2CSystem.String%29> 생성자입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.BooleanSwitch.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Diagnostics.BooleanSwitch.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>스위치가 활성화되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>스위치를 사용하면 <see langword="true" />이고, 사용하지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로이 필드 설정 됩니다 `false` (사용 안 함). 스위치를 사용 하려면이 필드의 값을 할당 `true`합니다. 스위치를 사용 하지 않으려면 값을 할당 `false`합니다.  이 속성의 값은 기본 클래스 속성의 값에 따라 결정 됩니다 <xref:System.Diagnostics.Switch.SwitchSetting%2A>합니다.  
  
> [!NOTE]
>  이 메서드를 사용 합니다 <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> 신뢰할 수 없는 코드에서 호출 되지 않도록 하는 플래그 필요 하면 즉각적인 호출자만 할 <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=nameWithType> 권한. 코드는 부분적으로 신뢰할 수 있는 코드에서 호출할 수 있는, 경우에 대 한 사용자 입력을 전달 하지 마십시오 <xref:System.Runtime.InteropServices.Marshal> 유효성 검사 없이 메서드 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Diagnostics.BooleanSwitch> 스위치를 사용 하는 오류 메시지를 출력할 것인지 여부를 결정 합니다. 스위치는 클래스 수준에서 생성 됩니다. 합니다 `Main` 메서드를 해당 위치에 전달 `MyMethod`, 오류 메시지와 오류가 발생 한 위치를 인쇄 하는 합니다.  
  
 [!code-cpp[Classic BooleanSwitch.Enabled Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.Enabled Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BooleanSwitch.Enabled Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.Enabled Example/CS/source.cs#1)]
 [!code-vb[Classic BooleanSwitch.Enabled Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.Enabled Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출자에게 올바른 사용 권한이 없습니다.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">에 관리 되지 않는 코드를 사용 하 여 작동 합니다. 요청 값 <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 연관 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />합니다.</permission>
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected override void OnValueChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValueChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.BooleanSwitch.OnValueChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValueChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValueChanged();" />
      <MemberSignature Language="F#" Value="override this.OnValueChanged : unit -&gt; unit" Usage="booleanSwitch.OnValueChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Diagnostics.Switch.Value" /> 속성의 새 값을 부울 값으로 구문 분석할 수 있는지 여부를 결정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.BooleanSwitch.OnValueChanged%2A> 메서드는 새 값을 부울 값 ("false" 또는 "true")의 유효한 문자열 표현을 인지 확인 합니다. 따라서 메서드를 설정 하는 경우는 <xref:System.Diagnostics.Switch.SwitchSetting%2A> 속성을 0 또는 1입니다.  그렇지 않은 경우 기본 메서드는, 문자열 값 집합을 사용 하는 정수 값으로 변환 하는 <xref:System.Diagnostics.Switch.SwitchSetting%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>