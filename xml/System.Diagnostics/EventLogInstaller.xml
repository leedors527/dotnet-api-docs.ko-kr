<Type Name="EventLogInstaller" FullName="System.Diagnostics.EventLogInstaller">
  <Metadata><Meta Name="ms.openlocfilehash" Value="88596074c0bd24dd3f2dd67de13860ad50ec959d" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51902867" /></Metadata><TypeSignature Language="C#" Value="public class EventLogInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLogInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventLogInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLogInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type EventLogInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>애플리케이션에서 실행 시 정보를 읽거나 쓰는 이벤트 로그를 설치하고 구성할 수 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Diagnostics.EventLogInstaller> 에서 사용 되는 [Installutil.exe (설치 관리자 도구)](~/docs/framework/tools/installutil-exe-installer-tool.md) 이벤트 로그를 설치 하는 경우. <xref:System.Diagnostics.EventLogInstaller> 클래스 이벤트 로그를 로컬 컴퓨터에만 설치할 수 있습니다.  
  
 사용 된 <xref:System.Diagnostics.EventLogInstaller> 애플리케이션 이벤트 로그에 쓰는 클래스;에 애플리케이션 이벤트 로그의 설치 관리자를 사용 하 여 이벤트 로그에서 읽을 필요는 없습니다. 애플리케이션 및 서비스 애플리케이션 로그 나 사용자 지정 로그에 작성 해야 합니다. 디바이스 드라이버는 시스템 로그에 작성 해야 합니다.  
  
> [!NOTE]
>  보안 로그에는 읽기 전용입니다.  
  
 설치 관리자에서 지정 하는 이벤트 원본을 만듭니다는 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 속성과 레지스터에 지정 된 이벤트 로그에 <xref:System.Diagnostics.EventLogInstaller.Log%2A> 속성입니다. 이 동작은 호출과 비슷하지만 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 에 <xref:System.Diagnostics.EventLog> 구성 요소입니다.  
  
 사용 된 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 및 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 이벤트 로그에 이벤트를 기록 하는 방법입니다. 이벤트를 작성 하는 이벤트 원본을 지정 해야 합니다. 만들기 및 소스를 사용 하 여 첫 번째 항목을 작성 하기 전에 이벤트 소스를 구성 해야 합니다.  
  
 애플리케이션을 설치 하는 동안 새 이벤트 원본을 만듭니다. 이렇게 하면 등록 된 이벤트 소스 목록을 새로 고치고 해당 구성에 운영 체제 있습니다. 운영 체제에서 이벤트 소스 목록을 새로 고치지 않은 경우 쓰려고 하면 새 원본 사용 하는 이벤트는 쓰기 작업이 실패 합니다. 사용 하 여 새 소스를 구성할 수 있습니다는 <xref:System.Diagnostics.EventLogInstaller>를 사용 하 여 또는 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 메서드. 새 이벤트 원본을 만들려면 컴퓨터에서 관리자 권한이 있어야 합니다.  
  
 기존 이벤트 로그 또는 새 이벤트 로그의 이벤트 소스를 만들 수 있습니다. 새 이벤트 로그에 대 한 새 소스를 만들면 해당 로그에 대 한 소스를 등록 하는 시스템 있지만 첫 번째 항목에 기록할 때 까지는 로그가 만들어지지 않습니다.  
  
 이벤트 로그를 설치 하려면에서 상속 되는 프로젝트 설치 관리자 클래스를 만듭니다 <xref:System.Configuration.Install.Installer>를 설정 합니다 <xref:System.ComponentModel.RunInstallerAttribute> 클래스에 대 한 `true`합니다. 프로젝트 내에서 만들는 <xref:System.Diagnostics.EventLogInstaller> 애플리케이션을 작성 하 고 프로젝트 설치 관리자 클래스에 인스턴스를 추가 각 이벤트 로그에 대 한 합니다.  
  
 경우는 [Installutil.exe (설치 관리자 도구)](~/docs/framework/tools/installutil-exe-installer-tool.md) 는 호출을 확인 합니다 <xref:System.ComponentModel.RunInstallerAttribute>합니다. 있으면 `true`, 도구 설치에 있는 모든 항목을 <xref:System.Configuration.Install.Installer.Installers%2A> 프로젝트 설치 관리자를 사용 하 여 연결 된 컬렉션입니다. 하는 경우 <xref:System.ComponentModel.RunInstallerAttribute> 는 `false`, 프로젝트 설치 관리자 무시 됩니다.  
  
 다른 속성을 수정 하는 <xref:System.Diagnostics.EventLogInstaller> 앞 이나 뒤에 인스턴스를 추가 하거나는 <xref:System.Configuration.Install.Installer.Installers%2A> 프로젝트 설치 관리자에서 하지만 설치 관리자 도구를 실행 하기 전에 컬렉션. 설정 해야 합니다는 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 애플리케이션 이벤트 로그에 작성 하는 경우에 속성입니다.  
  
 사용 하 여 <xref:System.Diagnostics.EventLogInstaller> 는 기존 또는 새 이벤트 로그에 대 한 새 원본을 등록 하려면 사용 하지 않는 <xref:System.Diagnostics.EventLogInstaller> 기존 원본을 변경 하려면. <xref:System.Diagnostics.EventLogInstaller> 클래스의 지정 된 설치 속성을 일치 하도록 기존 원본 구성 속성을 수정 하지 않습니다. <xref:System.Diagnostics.EventLogInstaller.Install%2A> 예외를 throw 하는 경우는 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 속성은 컴퓨터의 다른 이벤트 로그에 등록 된 소스 이름과 일치 합니다. 합니다 <xref:System.Diagnostics.EventLogInstaller.Install%2A> 경우 메서드는 소스를 등록 하지 않습니다는 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 속성에 지정 된 동일한 이벤트 로그에 이미 등록 되어 있는 원본 이름과 일치 하는 <xref:System.Diagnostics.EventLogInstaller.Log%2A> 속성입니다.  
  
 이벤트 범주 및 메시지 문자열에 대 한 지역화 된 리소스 파일을 사용 하 여 이벤트 소스를 등록할 수 있습니다. 애플리케이션 실제 문자열을 지정 하는 대신 리소스 식별자를 사용 하 여 이벤트 로그 엔트리를 쓸 수 있습니다. 이벤트 뷰어를 찾아 현재 언어 설정에 따라 지역화 된 리소스 파일에서 해당 문자열을 표시할 리소스 식별자를 사용 합니다. 이벤트 범주, 메시지 및 매개 변수 삽입 문자열에 대 한 별도 파일을 등록할 수 있습니다 또는 세 가지 유형의 문자열 모두에 같은 리소스 파일을 등록할 수 있습니다. 사용 합니다 <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A>, <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>를 <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>, 및 <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> 이벤트 로그에 지역화 된 엔트리를 쓸 원본을 구성 하는 속성입니다. 애플리케이션 이벤트 로그에 직접 문자열 값을 쓰는, 경우에 이러한 속성을 설정할 필요가 없습니다.  
  
 원본 또는 지역화 된 엔트리를 쓰기 위한 직접 문자열을 작성 하기 위한 구성 되어야 합니다. 애플리케이션 리소스 식별자와 문자열 값을 사용 하 여 항목을 기록 하는 경우 두 개의 별도 소스를 등록 해야 합니다. 예를 들어, 리소스 파일을 한 원본을 구성 하 고 해당 소스를 사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 메서드를 이벤트 로그에 리소스 식별자를 사용 하 여 항목을 씁니다. 리소스 파일 없이 다른 소스를 만들고 해당 소스를 사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드를 해당 원본을 사용 하 여 이벤트 로그에 직접 문자열을 씁니다.  
  
 일반적으로 호출 하지 않으면 메서드는 <xref:System.Diagnostics.EventLogInstaller> 코드 내에서 클래스, 일반적으로 Installutil.exe에 의해서만 라고 합니다. 도구에서 자동으로 호출 된 <xref:System.Diagnostics.EventLogInstaller.Install%2A> 설치 프로세스 중 메서드. 원하는를 필요한 경우 호출 하 여는 <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> 메서드 예외를 생성 하는 개체입니다.  
  
   
  
## Examples  
 다음 코드 예제는 새 이벤트 원본에 대 한 설치 속성을 설정합니다. 원본 이름 및 이벤트 로그 이름을 설정 하 고 추가 하는 코드 예제는 <xref:System.Diagnostics.EventLogInstaller> 에 <xref:System.Configuration.Install.Installer.Installers%2A> 컬렉션입니다.  
  
 [!code-cpp[EventLogInstaller#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogInstaller/CPP/eventloginstaller.cpp#1)]
 [!code-csharp[EventLogInstaller#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogInstaller/CS/eventloginstaller.cs#1)]
 [!code-vb[EventLogInstaller#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogInstaller/VB/eventloginstaller.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.EventLog" />
    <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
    <related type="Article" href="~/docs/framework/tools/installutil-exe-installer-tool.md">Installutil.exe(설치 관리자 도구)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Diagnostics.EventLogInstaller" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryCount">
      <MemberSignature Language="C#" Value="public int CategoryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CategoryCount" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.CategoryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CategoryCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryCount : int with get, set" Usage="System.Diagnostics.EventLogInstaller.CategoryCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범주 리소스 파일에서 범주 수를 가져오거나 설정합니다.</summary>
        <value>범주 리소스 파일에 있는 범주 수입니다. 기본값은 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> 및 <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> 지역화 된 범주 문자열을 사용 하 여 이벤트를 작성 하는 속성입니다. 이벤트 뷰어에서 이벤트를 작성 하는 경우 범주를 제공 하는 경우 이벤트 항목에 대 한 범주를 표시 합니다. 이벤트 로그 범주는 이벤트를 필터링 하거나 이벤트 정보를 제공 하는 애플리케이션 정의 문자열입니다. 예를 들어, 애플리케이션 다양 한 구성 요소 또는 다른 작업에 대 한 별도 범주를 정의할 수 있습니다.  
  
 이벤트 범주는 선택 사항입니다. 애플리케이션 범주를 사용 하지 않는 경우 설정 하지 않으면 합니다 <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> 고 <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> 속성입니다.  
  
 에 있는 Platform SDK 설명서의 "메시지 컴파일러" 항목을 참조 하는 이벤트 메시지를 정의 하 고 이벤트 리소스 파일을 작성 하는 방법에 대 한 세부 정보에 대 한 [ http://msdn.microsoft.com ](https://msdn.microsoft.com/)합니다.  
  
   
  
## Examples  
 다음 코드 예제는 새 이벤트 원본에 대 한 설치 속성을 설정합니다. 코드 예제에서는 이벤트 원본 이름, 이벤트 로그 이름과 지역화 된 이벤트 텍스트에 대 한 리소스 파일을 설정합니다.  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 코드 예제에서는 리소스 라이브러리 EventLogMsgs.dll 내장 다음 메시지 텍스트 파일을 사용 합니다. 메시지 텍스트 파일은 메시지 리소스 파일 생성 되는 원본. 메시지 텍스트 파일의 리소스 식별자와 범주, 이벤트 메시지 및 매개 변수 삽입 문자열에 대 한 텍스트를 정의합니다.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryCount" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="CategoryResourceFile">
      <MemberSignature Language="C#" Value="public string CategoryResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryResourceFile : string with get, set" Usage="System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>소스에 대한 범주 문자열이 들어 있는 리소스 파일의 경로를 가져오거나 설정합니다.</summary>
        <value>범주 리소스 파일의 경로입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> 및 <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> 지역화 된 범주 문자열을 사용 하 여 이벤트를 작성 하는 속성입니다. 이벤트 뷰어에서 이벤트를 작성 하는 경우 범주를 제공 하는 경우 이벤트 항목에 대 한 범주를 표시 합니다. 이벤트 로그 범주는 이벤트를 필터링 하거나 이벤트에 대 한 정보를 제공 하는 애플리케이션 정의 문자열입니다. 예를 들어, 애플리케이션에 다양 한 구성 요소 또는 다른 작업에 대 한 별도 범주 있을 수 있습니다.  
  
 이벤트 범주는 선택 사항입니다. 애플리케이션 범주를 사용 하지 않는 경우 설정 하지 않으면 합니다 <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> 고 <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> 속성입니다.  
  
 에 있는 Platform SDK 설명서의 "메시지 컴파일러" 항목을 참조 하는 이벤트 메시지를 정의 하 고 이벤트 리소스 파일을 작성 하는 방법에 대 한 세부 정보에 대 한 [ http://msdn.microsoft.com ](https://msdn.microsoft.com/)합니다.  
  
   
  
## Examples  
 다음 코드 예제는 새 이벤트 원본에 대 한 설치 속성을 설정합니다. 코드 예제에서는 이벤트 원본 이름, 이벤트 로그 이름과 지역화 된 이벤트 텍스트에 대 한 리소스 파일을 설정합니다.  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 코드 예제에서는 리소스 라이브러리 EventLogMsgs.dll 내장 다음 메시지 텍스트 파일을 사용 합니다. 메시지 텍스트 파일은 메시지 리소스 파일 생성 되는 원본. 메시지 텍스트 파일의 리소스 식별자와 범주, 이벤트 메시지 및 매개 변수 삽입 문자열에 대 한 텍스트를 정의합니다.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryCount" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="eventLogInstaller.CopyFromComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><see cref="T:System.ComponentModel.IComponent" />의 템플릿으로 사용할 <see cref="T:System.Diagnostics.EventLogInstaller" />입니다.</param>
        <summary>설치 시 이벤트 로그에 필요한 <see cref="T:System.Diagnostics.EventLog" /> 구성 요소의 속성 값을 복사합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정 된 구성 요소를 `component` 매개 변수 여야 합니다는 <xref:System.Diagnostics.EventLog>고, 그렇지 않으면 예외가 throw 됩니다.  
  
 일반적으로 호출 하지 않으면 메서드는 <xref:System.Diagnostics.EventLogInstaller> 에서 코드 내에서 일반적으로 호출 되는 합니다 [Installutil.exe (설치 관리자 도구)](~/docs/framework/tools/installutil-exe-installer-tool.md)합니다. <xref:System.Diagnostics.EventLogInstaller.CopyFromComponent%2A> Installutil.exe에서 속성 값을 설정 하는 데 사용 되는 <xref:System.Diagnostics.EventLogInstaller> 기존 값에 <xref:System.Diagnostics.EventLog>입니다.  
  
 경우는 <xref:System.Diagnostics.EventLog.Log%2A> 의 <xref:System.Diagnostics.EventLog> 즉 전달 하는 것은 빈 문자열 (""), 설정 해야 합니다는 <xref:System.Diagnostics.EventLog.Log%2A> 설치 관리자를 실행 하기 전에 유효한 값으로 속성.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">지정한 구성 요소가 <see cref="T:System.Diagnostics.EventLog" />가 아닌 경우  
  
또는 
지정한 구성 요소의 <see cref="P:System.Diagnostics.EventLog.Log" /> 또는 <see cref="P:System.Diagnostics.EventLog.Source" /> 속성이 <see langword="null" />이거나 비어 있는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="eventLogInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">커밋, 롤백 또는 설치 제거 작업 수행에 필요한 정보를 저장하는 데 사용되는 <see cref="T:System.Collections.IDictionary" />입니다.</param>
        <summary>설치를 수행하고 레지스트리에 이벤트 로그 정보를 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Diagnostics.EventLogInstaller.Install%2A> 이벤트 로그 정보를 레지스트리에 씁니다 메서드와 이벤트 로그에 지정 된 로그를 사용 하 여 연결을 <xref:System.Diagnostics.EventLogInstaller.Log%2A> 속성입니다. 로그가 없는 소스를 지정한 경우 <xref:System.Diagnostics.EventLogInstaller.Install%2A> 로그를 만들고이 사용 하 여 새 소스를 연결 합니다.  
  
 일반적으로 호출 하지 않으면 메서드는 <xref:System.Diagnostics.EventLogInstaller> 에서 코드 내에서 일반적으로 호출 되는 합니다 [Installutil.exe (설치 관리자 도구)](~/docs/framework/tools/installutil-exe-installer-tool.md)합니다. 도구에서 자동으로 호출 합니다 <xref:System.Diagnostics.EventLogInstaller.Install%2A> 설치 이벤트 로그에 연결 된 레지스트리 정보를 기록 하는 설치 프로세스 중 메서드. 설치는 설치 중 설치 프로젝트 구성 요소에 오류가 있으면 이전에 설치한 구성 요소를 모두 롤백됩니다 설치 전 상태로 트랜잭션. 이렇게 하려면 각 구성 요소를 호출 하 여 <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> 메서드.  
  
 사용 하 여 <xref:System.Diagnostics.EventLogInstaller> 는 기존 또는 새 이벤트 로그에 대 한 새 원본을 등록 하려면 사용 하지 않는 <xref:System.Diagnostics.EventLogInstaller> 기존 원본을 변경 하려면. <xref:System.Diagnostics.EventLogInstaller> 클래스의 지정 된 설치 속성을 일치 하도록 기존 원본 구성 속성을 수정 하지 않습니다. <xref:System.Diagnostics.EventLogInstaller.Install%2A> 예외를 throw 하는 경우는 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 속성은 컴퓨터의 다른 이벤트 로그에 등록 된 소스 이름과 일치 합니다. <xref:System.Diagnostics.EventLogInstaller.Install%2A> 메서드 건너뜁니다 경우 소스를 등록 합니다 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 속성에 지정 된 동일한 이벤트 로그에 이미 등록 되어 있는 원본 이름과 일치 하는 <xref:System.Diagnostics.EventLogInstaller.Log%2A> 속성입니다.  
  
 프로젝트 설치 관리자를 사용 하는 애플리케이션의 설치 루틴 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> 속성을 자동으로 설치 된 구성 요소에 대 한 정보를 유지 합니다. 에 전달 되는이 상태 정보 <xref:System.Diagnostics.EventLogInstaller.Install%2A> 으로 `stateSaver` 각 도구를 설치 하는 대로 매개 변수를 계속 업데이트 됩니다 <xref:System.Diagnostics.EventLogInstaller>합니다. 일반적으로 명시적으로이 상태 정보를 수정 하기 위해 코드에 대 한 필요는 없습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">설치 관리자에서 Windows NT 4.0 이상의 플랫폼을 사용하려고 하지 않는 경우</exception>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Diagnostics.EventLogInstaller.Source" /> 속성에 지정된 이름이 이미 다른 이벤트 로그에 등록되어 있습니다.</exception>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEquivalentInstaller (otherInstaller As ComponentInstaller) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsEquivalentInstaller(System::Configuration::Install::ComponentInstaller ^ otherInstaller);" />
      <MemberSignature Language="F#" Value="override this.IsEquivalentInstaller : System.Configuration.Install.ComponentInstaller -&gt; bool" Usage="eventLogInstaller.IsEquivalentInstaller otherInstaller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller">비교할 설치 관리자입니다.</param>
        <summary>설치 관리자와 지정된 다른 설치 관리자가 같은 소스를 참조하는지 여부를 확인합니다.</summary>
        <returns>이 설치 관리자와 <paramref name="otherInstaller" /> 매개 변수에서 지정한 설치 관리자가 같은 소스를 설치하거나 제거하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 호출 하지 않으면 메서드는 <xref:System.Diagnostics.EventLogInstaller> 에서 코드 내에서 일반적으로 호출 되는 설치 관리자 도구 (Installutil.exe)에 의해서만 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public string Log { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Log" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.Log" />
      <MemberSignature Language="VB.NET" Value="Public Property Log As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Log { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Log : string with get, set" Usage="System.Diagnostics.EventLogInstaller.Log" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>소스를 설정할 로그의 이름을 가져오거나 설정합니다.</summary>
        <value>로그의 이름입니다. 이 이름에는 애플리케이션, 시스템 또는 사용자 지정 로그 이름을 사용할 수 있습니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 <xref:System.Diagnostics.EventLogInstaller.Log%2A> 속성에서 지정한 원본에 연결할는 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 기존 로그 또는 로컬 컴퓨터에서 새 로그를 사용 하 여 속성입니다. 합니다 [Installutil.exe (설치 관리자 도구)](~/docs/framework/tools/installutil-exe-installer-tool.md) 이 정보를 사용 하 여 컴퓨터의 레지스트리에서 로그인 소스를 매핑합니다. 애플리케이션 및 서비스 애플리케이션 로그 나 사용자 지정 로그에 작성 해야 합니다. 디바이스 드라이버는 시스템 로그에 작성 해야 합니다.  
  
 이벤트 로그에 항목을 쓸 원본의 만들고 이벤트 로그를 사용 하 여 등록 합니다. 이벤트 원본을 한 번에 하나의 로그만 쓸 수 있습니다. 값을 사용 하는 설치 관리자는 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 항목의 유효한 소스로 이벤트 로그를 사용 하 여 애플리케이션을 등록 하는 속성입니다. 설치 관리자를 실행 하기 전에 로그 이름을 지정 하지 않는 경우 설치 관리자 애플리케이션 로그에서 원본을 등록 합니다. 새 원본 및 기존 로그를 지정 하는 경우 설치 관리자는 새 이벤트 원본을 만들고 지정할 로그를 사용 하 여 연결 합니다. 새 소스 및 새 로그를 지정 하는 경우 설치 관리자를 레지스트리에 새 로그를 사용 하 여 새 소스를 연결 하지만 첫 번째 항목에 기록할 때 까지는 로그가 만들어지지 않습니다.  
  
 운영 체제 파일과 이벤트 로그를 저장합니다. 사용 하는 경우 <xref:System.Diagnostics.EventLogInstaller> 또는 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 메서드가 새 이벤트 로그에 연결된 된 파일을 만들도록 하는 지정한 컴퓨터의 %SystemRoot%\System32\Config 디렉터리에 저장 됩니다. 파일 이름은의 처음 8 개 문자를 추가 하 여 설정 됩니다는 <xref:System.Diagnostics.EventLogInstaller.Log%2A> ".evt" 파일 이름 확장명을 가진 속성입니다.  
  
 사용 하 여 <xref:System.Diagnostics.EventLogInstaller> 는 기존 또는 새 이벤트 로그에 대 한 새 원본을 등록 하려면 사용 하지 않는 <xref:System.Diagnostics.EventLogInstaller> 기존 원본을 변경 하려면. <xref:System.Diagnostics.EventLogInstaller> 클래스의 지정 된 설치 속성을 일치 하도록 기존 원본 구성 속성을 수정 하지 않습니다. <xref:System.Diagnostics.EventLogInstaller.Install%2A> 예외를 throw 하는 경우는 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 속성은 컴퓨터의 다른 이벤트 로그에 등록 된 소스 이름과 일치 합니다. 합니다 <xref:System.Diagnostics.EventLogInstaller.Install%2A> 경우 메서드는 소스를 등록 하지 않습니다는 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 속성에 지정 된 동일한 이벤트 로그에 이미 등록 되어 있는 원본 이름과 일치 하는 <xref:System.Diagnostics.EventLogInstaller.Log%2A> 속성입니다.  
  
 이벤트 로그 및 소스 동작에 대 한 정보를 자세한 참조를 <xref:System.Diagnostics.EventLog> 클래스에 대 한 설명서는 <xref:System.Diagnostics.EventLog.Log%2A> 및 <xref:System.Diagnostics.EventLog.Source%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="T:System.Diagnostics.EventLog" />
      </Docs>
    </Member>
    <Member MemberName="MessageResourceFile">
      <MemberSignature Language="C#" Value="public string MessageResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MessageResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessageResourceFile : string with get, set" Usage="System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>소스에 대한 메시지 서식 문자열이 들어 있는 리소스 파일의 경로를 가져오거나 설정합니다.</summary>
        <value>메시지 리소스 파일의 경로입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> 지역화 된 이벤트 메시지를 쓸 이벤트 로그 소스를 구성 하는 속성입니다. 이벤트 메시지는 사용자에 게 이벤트를 설명 하는 애플리케이션 정의 문자열입니다.  
  
 애플리케이션 리소스 식별자를 사용 하 여 이벤트 로그 항목을 쓸 수 있습니다. 리소스 식별자를 인덱스에 있는 메시지는 <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>합니다. 이벤트 뷰어를 찾아 현재 언어 설정에 따라 지역화 된 리소스 파일에서 해당 문자열을 표시할 리소스 식별자를 사용 합니다.  
  
 지역화 된 엔트리를 쓰기 위한 또는 직접 문자열을 작성 하는 것에 대 한 이벤트 소스를 구성 되어야 합니다. 사용 된 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 메시지 리소스 파일을 사용 하 여 구성 하는 원본에 대 한 지역화 된 엔트리를 작성 하는 방법입니다.  
  
 애플리케이션 문자열을 쓰는 이벤트 메시지를 직접 지역화 된 리소스 파일에 리소스 식별자를 사용 하는 대신 설정 하지 마십시오는 <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> 속성입니다.  
  
 경우는 <xref:System.Diagnostics.EventLog.MachineName%2A> 속성은 로컬 컴퓨터 식별자 ("."),.NET Framework 리소스 파일이 원격 컴퓨터에서 하는 것으로 가정 합니다. 경우는 <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> 드라이브 문자를 포함 하는 속성 값, 리소스 파일에 있는 것으로 가정 합니다 \\ \\< machinename\>\\< 드라이브\>$ 공유 (예를 들어 \\\server \c$)입니다. 리소스 파일에 있는 것으로 간주 됩니다 값 문자열 %systemroot% 포함 하는 경우는 \\ \\< machinename\>\admin$ 공유 (예를 들어 \\\server\admin$).  
  
 에 있는 Platform SDK 설명서의 "메시지 컴파일러" 항목을 참조 하는 이벤트 메시지를 정의 하 고 이벤트 리소스 파일을 작성 하는 방법에 대 한 세부 정보에 대 한 [ http://msdn.microsoft.com ](https://msdn.microsoft.com/)합니다.  
  
   
  
## Examples  
 다음 코드 예제는 새 이벤트 원본에 대 한 설치 속성을 설정합니다. 코드 예제에서는 이벤트 원본 이름, 이벤트 로그 이름과 지역화 된 이벤트 텍스트에 대 한 리소스 파일을 설정합니다.  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 코드 예제에서는 리소스 라이브러리 EventLogMsgs.dll 내장 다음 메시지 텍스트 파일을 사용 합니다. 메시지 텍스트 파일은 메시지 리소스 파일 생성 되는 원본. 메시지 텍스트 파일의 리소스 식별자와 범주, 이벤트 메시지 및 매개 변수 삽입 문자열에 대 한 텍스트를 정의합니다.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="ParameterResourceFile">
      <MemberSignature Language="C#" Value="public string ParameterResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.ParameterResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParameterResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterResourceFile : string with get, set" Usage="System.Diagnostics.EventLogInstaller.ParameterResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>소스에 대한 메시지 매개 변수 문자열이 들어 있는 리소스 파일의 경로를 가져오거나 설정합니다.</summary>
        <value>메시지 매개 변수 리소스 파일의 경로입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> 속성을 사용 하 여 지역화 된 이벤트 메시지를 작성 하는 이벤트 로그 원본을 구성 매개 변수 문자열을 삽입 합니다. 에 지정 된 각 지역화 된 이벤트 메시지는 <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> 속성 삽입 문자열에 대 한 자리 표시자를 포함할 수 있습니다. 이러한 자리 표시자 위치 및 이벤트 메시지 내에서 언어 독립적인 문자열 리소스 식별자를 지정 하는 데 사용 됩니다. 해당 문자열을 사용 하 여 자리 표시자를 대체 하는 이벤트 뷰어는 <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> 지역화 된 이벤트 항목에 대 한 이벤트 로그 메시지의 서식을 지정 합니다.  
  
 예를 들어 메시지 텍스트 파일의 다음 섹션에는 매개 변수 자리 표시자를 사용 하 여 문자열로 정의합니다.  
  
```  
  
MessageId = 1501  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_STARTING  
Language=English  
Component %%6050 is starting.  
.  
```  
  
 아래와 같이 삽입 문자열 매개 변수 리소스 파일에서 자리 표시자를 해당 하는 리소스 식별자를 사용 하 여 정의 해야 합니다.  
  
```  
MessageId = 6050  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_NAME_MSGID  
Language=English  
TRIGGER.EXE  
.  
```  
  
 지역화 된 엔트리를 쓰기 위한 또는 직접 문자열을 작성 하는 것에 대 한 이벤트 소스를 구성 되어야 합니다. 사용 된 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 메시지 리소스 파일을 사용 하 여 구성 하는 원본에 대 한 지역화 된 엔트리를 작성 하는 방법입니다.  
  
 애플리케이션 이벤트 로그에 직접 이벤트 메시지 문자열을 기록 하는 경우 또는 경우에 <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> 메시지가 없습니다 매개 변수 삽입 자리 표시자를 사용 하 여 설정 하지 마십시오는 <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> 속성입니다.  
  
 에 있는 Platform SDK 설명서의 "메시지 컴파일러" 항목을 참조 하는 이벤트 메시지를 정의 하 고 이벤트 리소스 파일을 작성 하는 방법에 대 한 세부 정보에 대 한 [ http://msdn.microsoft.com ](https://msdn.microsoft.com/)합니다.  
  
   
  
## Examples  
 다음 코드 예제는 새 이벤트 원본에 대 한 설치 속성을 설정합니다. 코드 예제에서는 이벤트 원본 이름, 이벤트 로그 이름과 지역화 된 이벤트 텍스트에 대 한 리소스 파일을 설정합니다.  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 코드 예제에서는 리소스 라이브러리 EventLogMsgs.dll 내장 다음 메시지 텍스트 파일을 사용 합니다. 메시지 텍스트 파일은 메시지 리소스 파일 생성 되는 원본. 메시지 텍스트 파일의 리소스 식별자와 범주, 이벤트 메시지 및 매개 변수 삽입 문자열에 대 한 텍스트를 정의합니다. 특히 리소스 식별자 1004에 대 한 정의 된 메시지는 리소스 식별자 5002 정의 된 매개 변수 문자열에 대 한 자리 표시자를 사용 합니다.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="eventLogInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">컴퓨터의 설치 전 상태가 포함된 <see cref="T:System.Collections.IDictionary" />입니다.</param>
        <summary>설치 프로시저에서 레지스트리에 쓴 이벤트 로그 정보를 롤백하여 시스템을 설치 이전 상태로 복구합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> 취소할 때의 효과 <xref:System.Diagnostics.EventLogInstaller.Install%2A> 메서드. <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> 설치 프로젝트의 모든 구성 요소 설치에 실패 하는 경우 호출 됩니다. <xref:System.Diagnostics.EventLogInstaller.Install%2A> 메서드 만들거나를 이벤트 로그 및 이벤트 원본에 대 한 속성을 설정 합니다. <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> 이벤트 로그 및 소스를 삭제 하거나 기존 원본의 속성을 해당 설치 전 값으로 다시 설정 합니다.  
  
 일반적으로 호출 하지 않으면 메서드는 <xref:System.Diagnostics.EventLogInstaller> 에서 코드 내에서 일반적으로 호출 되는 합니다 [Installutil.exe (설치 관리자 도구)](~/docs/framework/tools/installutil-exe-installer-tool.md)합니다. 도구를 호출 하 여는 <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> 메서드, 또는 다른 구성 요소 설치, 설치 프로세스에 이미 변경한 내용을 실행 취소 하지 못했습니다.  
  
 프로젝트 설치 관리자를 사용 하는 애플리케이션의 설치 루틴 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> 속성을 자동으로 설치 된 구성 요소에 대 한 정보를 유지 합니다. 에 전달 되는이 상태 정보 <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> 으로 `savedState` 도구를 롤업 하는 대로 매개 변수를 계속 업데이트 됩니다 각 <xref:System.Diagnostics.EventLogInstaller>합니다. 일반적으로 명시적으로이 상태 정보를 수정 하기 위해 코드에 대 한 필요는 없습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="System.Diagnostics.EventLogInstaller.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>로그에 등록할 소스 이름을 가져오거나 설정합니다.</summary>
        <value>엔트리 소스로 이벤트 로그에 등록할 이름입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트 원본을 이벤트 로그를 나타냅니다. 애플리케이션의 이름 또는 대형 애플리케이션 내에서 구성 요소의 이름을 경우가 있습니다.  
  
 값을 사용 하는 설치 관리자는 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 항목의 유효한 소스로 이벤트 로그를 사용 하 여 애플리케이션을 등록 하는 속성입니다. 새 원본 이름을 기존 원본 이름 또는 기존 이벤트 로그 이름과 일치할 수 없습니다. 각 소스에서는 한 번에 하나의 이벤트 로그에 쓸 수 있습니다만 그러나 애플리케이션이 여러 이벤트 로그에 쓸 여러 원본을 사용할 수 있습니다. 예를 들어, 애플리케이션에 다른 이벤트 로그 또는 다른 리소스 파일에 대해 구성 된 여러 소스가 필요할 수 있습니다.  
  
 애플리케이션 및 서비스 애플리케이션 로그 나 사용자 지정 로그에 작성 해야 합니다. 디바이스 드라이버는 시스템 로그에 작성 해야 합니다. 설치 관리자를 실행 하기 전에 로그 이름을 지정 하지 않는 경우 설치 관리자 애플리케이션 로그에서 원본을 등록 합니다. 존재 하지 않는 로그의 이름을 지정 하는 경우 시스템에 등록 된 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 해당 로그에 하지만 첫 번째 항목에 기록할 때 까지는 로그가 만들어지지 않습니다.  
  
 사용 하 여 <xref:System.Diagnostics.EventLogInstaller> 는 기존 또는 새 이벤트 로그에 대 한 새 원본을 등록 하려면 사용 하지 않는 <xref:System.Diagnostics.EventLogInstaller> 기존 원본을 변경 하려면. <xref:System.Diagnostics.EventLogInstaller> 클래스의 지정 된 설치 속성을 일치 하도록 기존 원본 구성 속성을 수정 하지 않습니다. <xref:System.Diagnostics.EventLogInstaller.Install%2A> 예외를 throw 하는 경우는 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 속성은 컴퓨터의 다른 이벤트 로그에 등록 된 소스 이름과 일치 합니다. 합니다 <xref:System.Diagnostics.EventLogInstaller.Install%2A> 경우 메서드는 소스를 등록 하지 않습니다는 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 속성에 지정 된 동일한 이벤트 로그에 이미 등록 되어 있는 원본 이름과 일치 하는 <xref:System.Diagnostics.EventLogInstaller.Log%2A> 속성입니다.  
  
 이벤트 로그 및 소스 동작에 대 한 정보를 자세한 참조를 <xref:System.Diagnostics.EventLog> 클래스에 대 한 설명서는 <xref:System.Diagnostics.EventLog.Log%2A> 및 <xref:System.Diagnostics.EventLog.Source%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="T:System.Diagnostics.EventLog" />
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Uninstall : System.Collections.IDictionary -&gt; unit" Usage="eventLogInstaller.Uninstall savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">컴퓨터의 설치 전 상태가 포함된 <see cref="T:System.Collections.IDictionary" />입니다.</param>
        <summary>레지스트리에서 이벤트 로그 정보를 제거하여 설치를 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Diagnostics.EventLogInstaller.UninstallAction%2A> 속성 값이 `Remove`의 <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> 메서드는 원본 및 관련된 로그는 설치 관리자가 만든를 삭제 합니다 <xref:System.Diagnostics.EventLogInstaller.Log%2A> 및 <xref:System.Diagnostics.EventLogInstaller.Source%2A> 속성 소스를 새 이벤트 로그 생성을 지정 합니다.  
  
 일반적으로 호출 하지 않으면 메서드는 <xref:System.Diagnostics.EventLogInstaller> 에서 코드 내에서 일반적으로 호출 되는 합니다 [Installutil.exe (설치 관리자 도구)](~/docs/framework/tools/installutil-exe-installer-tool.md) 제거 모드에서. 도구에서 자동으로 호출 된 <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> 설치 이전 상태로 설치가 영향을 받는 시스템 부분을 복원 하는 방법입니다. 여기에 제거 하 고 이벤트 로그에 연결 된 레지스트리 정보를 삭제 합니다.  
  
 애플리케이션의 설치 제거 루틴 프로젝트 설치 관리자의 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> 속성을 이미 설치 되어 있는 구성 요소에 대 한 정보를 자동으로 유지 합니다. 에 전달 되는이 상태 정보 <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> 으로 `savedState` 각 도구를 제거 하는 대로 매개 변수를 계속 업데이트 됩니다 <xref:System.Diagnostics.EventLogInstaller>합니다. 일반적으로 명시적으로이 상태 정보를 수정 하기 위해 코드에 대 한 필요는 없습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="UninstallAction">
      <MemberSignature Language="C#" Value="public System.Configuration.Install.UninstallAction UninstallAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Install.UninstallAction UninstallAction" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.UninstallAction" />
      <MemberSignature Language="VB.NET" Value="Public Property UninstallAction As UninstallAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Install::UninstallAction UninstallAction { System::Configuration::Install::UninstallAction get(); void set(System::Configuration::Install::UninstallAction value); };" />
      <MemberSignature Language="F#" Value="member this.UninstallAction : System.Configuration.Install.UninstallAction with get, set" Usage="System.Diagnostics.EventLogInstaller.UninstallAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Install.UninstallAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see href="https://docs.microsoft.com/dotnet/framework/tools/installutil-exe-installer-tool">Installutil.exe(설치 관리자 도구)</see>가 제거 작업시 이벤트 로그를 제거할지 또는 설치 상태로 둘지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Configuration.Install.UninstallAction" />가 제거될 때 이벤트 로그를 어떤 상태로 둘 것인지를 나타내는 <see cref="T:System.Diagnostics.EventLog" /> 값 중 하나입니다. 기본값은 <see langword="Remove" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트 로그를 설치할 때 기존 로그를 필요에 따라 연결할 수 있습니다. 이렇게 하면 로그 설치 이전 상태로 돌아갑니다 할지 현재, 설치 후 상태로 유지 하는지 여부를 결정 해야 합니다. 설치 전 상태로 이벤트 로그를 반환 하려는 경우 설치 시 이벤트 로그 항목에 대 한 변경 내용은 복원 되지 않습니다. 와 연결 된 이벤트 로그 속성을 다시 설정할 수 있습니다는 <xref:System.Diagnostics.EventLogInstaller> 사전 설치 값입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><see cref="P:System.Diagnostics.EventLogInstaller.UninstallAction" />에 잘못된 값이 포함된 경우 이 속성의 유효한 값은 <see langword="Remove" />와 <see langword="NoAction" />뿐입니다.</exception>
      </Docs>
    </Member>
  </Members>
</Type>