<Type Name="DsmlRequestDocument" FullName="System.DirectoryServices.Protocols.DsmlRequestDocument">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8c35ddcb6869654aa84244c8d28732b80aa7ed85" /><Meta Name="ms.sourcegitcommit" Value="6ee2e6b2c5d7c5bd66feeb362d29e65fdf858836" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/15/2018" /><Meta Name="ms.locfileid" Value="51691244" /></Metadata><TypeSignature Language="C#" Value="public class DsmlRequestDocument : System.DirectoryServices.Protocols.DsmlDocument, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DsmlRequestDocument extends System.DirectoryServices.Protocols.DsmlDocument implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />
  <TypeSignature Language="VB.NET" Value="Public Class DsmlRequestDocument&#xA;Inherits DsmlDocument&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class DsmlRequestDocument : System::DirectoryServices::Protocols::DsmlDocument, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type DsmlRequestDocument = class&#xA;    inherit DsmlDocument&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.Protocols.DsmlDocument</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 클래스를 사용하면 <see cref="T:System.DirectoryServices.Protocols.AddRequest" />, <see cref="T:System.DirectoryServices.Protocols.ModifyRequest" /> 또는 <see cref="T:System.DirectoryServices.Protocols.SearchRequest" /> 등의 DSML 요청 페이로드를 빌드할 수 있습니다.  0개 이상의 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 파생 개체를 포함합니다. 사용자는 서버로 전달하기 전에 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" />를 추가, 삭제, 수정 및 열거할 수 있습니다. <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />는 <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> 등 문서를 전송할 DSML 바인딩 클래스와 함께 사용할 수 있습니다.</summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Collections.ICollection" />
    <altmember cref="T:System.Collections.IList" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DsmlRequestDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlRequestDocument.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DsmlRequestDocument();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.#ctor" /> 생성자는 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 클래스의 인스턴스를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 빈 요청 문서를 만듭니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.DirectoryServices.Protocols.DirectoryRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.DirectoryServices.Protocols.DirectoryRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Add(System.DirectoryServices.Protocols.DirectoryRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (request As DirectoryRequest) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::DirectoryServices::Protocols::DirectoryRequest ^ request);" />
      <MemberSignature Language="F#" Value="member this.Add : System.DirectoryServices.Protocols.DirectoryRequest -&gt; int" Usage="dsmlRequestDocument.Add request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.DirectoryServices.Protocols.DirectoryRequest" />
      </Parameters>
      <Docs>
        <param name="request">컬렉션에 추가할 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체입니다.</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Add(System.DirectoryServices.Protocols.DirectoryRequest)" /> 메서드는 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체를 컬렉션에 추가합니다.</summary>
        <returns><see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 개체가 추가된 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 컬렉션의 인덱스입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="dsmlRequestDocument.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Clear" /> 메서드는 이 컬렉션에서 항목을 모두 제거합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.DirectoryServices.Protocols.DirectoryRequest value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.DirectoryServices.Protocols.DirectoryRequest value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Contains(System.DirectoryServices.Protocols.DirectoryRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As DirectoryRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::DirectoryServices::Protocols::DirectoryRequest ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.DirectoryServices.Protocols.DirectoryRequest -&gt; bool" Usage="dsmlRequestDocument.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DirectoryServices.Protocols.DirectoryRequest" />
      </Parameters>
      <Docs>
        <param name="value">검색할 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체입니다.</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Contains(System.DirectoryServices.Protocols.DirectoryRequest)" /> 메서드는 이 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 컬렉션에 지정된 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체가 포함되어 있는지 여부를 확인합니다.</summary>
        <returns>지정된 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체가 컬렉션에 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.DirectoryServices.Protocols.DirectoryRequest[] value, int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.DirectoryServices.Protocols.DirectoryRequest[] value, int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlRequestDocument.CopyTo(System.DirectoryServices.Protocols.DirectoryRequest[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (value As DirectoryRequest(), i As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::DirectoryServices::Protocols::DirectoryRequest ^&gt; ^ value, int i);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.DirectoryServices.Protocols.DirectoryRequest[] * int -&gt; unit" Usage="dsmlRequestDocument.CopyTo (value, i)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DirectoryServices.Protocols.DirectoryRequest[]" />
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 개체에서 복사한 요소의 대상인 1차원 배열입니다.</param>
        <param name="i">복사가 시작되는 <paramref name="value" />의 인덱스(0부터 시작)입니다.</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.CopyTo(System.DirectoryServices.Protocols.DirectoryRequest[],System.Int32)" /> 메서드는 대상 배열의 지정된 인덱스에서 시작하여 1차원 배열에 전체 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 컬렉션을 복사합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlRequestDocument.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.DirectoryServices.Protocols.DsmlRequestDocument.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.Count" /> 속성에는 이 컬렉션에 있는 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체의 수가 포함되어 있습니다.</summary>
        <value>이 컬렉션에 있는 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체 수입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentProcessing">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.DsmlDocumentProcessing DocumentProcessing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.Protocols.DsmlDocumentProcessing DocumentProcessing" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlRequestDocument.DocumentProcessing" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentProcessing As DsmlDocumentProcessing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::Protocols::DsmlDocumentProcessing DocumentProcessing { System::DirectoryServices::Protocols::DsmlDocumentProcessing get(); void set(System::DirectoryServices::Protocols::DsmlDocumentProcessing value); };" />
      <MemberSignature Language="F#" Value="member this.DocumentProcessing : System.DirectoryServices.Protocols.DsmlDocumentProcessing with get, set" Usage="System.DirectoryServices.Protocols.DsmlRequestDocument.DocumentProcessing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.DsmlDocumentProcessing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.DocumentProcessing" /> 속성에는 컬렉션의 요소가 처리되는 방법을 지정하는 <see cref="T:System.DirectoryServices.Protocols.DsmlDocumentProcessing" /> 값 중 하나가 포함되어 있습니다.</summary>
        <value>컬렉션의 요소가 처리되는 방법을 지정하는 <see cref="T:System.DirectoryServices.Protocols.DsmlDocumentProcessing" /> 값 중 하나입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="value" />가 잘못된 열거형 값인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ErrorProcessing">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.DsmlErrorProcessing ErrorProcessing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.Protocols.DsmlErrorProcessing ErrorProcessing" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlRequestDocument.ErrorProcessing" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorProcessing As DsmlErrorProcessing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::Protocols::DsmlErrorProcessing ErrorProcessing { System::DirectoryServices::Protocols::DsmlErrorProcessing get(); void set(System::DirectoryServices::Protocols::DsmlErrorProcessing value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorProcessing : System.DirectoryServices.Protocols.DsmlErrorProcessing with get, set" Usage="System.DirectoryServices.Protocols.DsmlRequestDocument.ErrorProcessing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.DsmlErrorProcessing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.ErrorProcessing" /> 속성에는 오류가 처리되는 방법을 지정하는 <see cref="T:System.DirectoryServices.Protocols.DsmlErrorProcessing" /> 값 중 하나가 포함되어 있습니다.</summary>
        <value>오류가 처리되는 방법을 지정하는 <see cref="T:System.DirectoryServices.Protocols.DsmlErrorProcessing" /> 값 중 하나입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="value" />가 잘못된 열거형 값인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlRequestDocument.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="dsmlRequestDocument.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.GetEnumerator" /> 메서드는 전체 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 컬렉션의 열거자를 반환합니다.</summary>
        <returns>전체 컬렉션의 <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.DirectoryServices.Protocols.DirectoryRequest value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.DirectoryServices.Protocols.DirectoryRequest value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlRequestDocument.IndexOf(System.DirectoryServices.Protocols.DirectoryRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As DirectoryRequest) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::DirectoryServices::Protocols::DirectoryRequest ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.DirectoryServices.Protocols.DirectoryRequest -&gt; int" Usage="dsmlRequestDocument.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DirectoryServices.Protocols.DirectoryRequest" />
      </Parameters>
      <Docs>
        <param name="value">인덱스가 반환된 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체입니다.</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.IndexOf(System.DirectoryServices.Protocols.DirectoryRequest)" /> 메서드는 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 컬렉션에서 맨 처음 발견되는 지정된 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 개체의 인덱스(0부터 시작)를 반환합니다.</summary>
        <returns>지정된 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체가 있으면 이 개체의 인덱스 값이고, 그렇지 않으면 -1입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" />가 <see langword="null" /> 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.DirectoryServices.Protocols.DirectoryRequest value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.DirectoryServices.Protocols.DirectoryRequest value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Insert(System.Int32,System.DirectoryServices.Protocols.DirectoryRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As DirectoryRequest)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::DirectoryServices::Protocols::DirectoryRequest ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.DirectoryServices.Protocols.DirectoryRequest -&gt; unit" Usage="dsmlRequestDocument.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.DirectoryServices.Protocols.DirectoryRequest" />
      </Parameters>
      <Docs>
        <param name="index"><see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체를 삽입할 컬렉션의 인덱스입니다.</param>
        <param name="value">컬렉션에 삽입할 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체입니다.</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Insert(System.Int32,System.DirectoryServices.Protocols.DirectoryRequest)" /> 메서드는 지정된 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체를 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 컬렉션의 지정된 인덱스에 삽입합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="protected bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlRequestDocument.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.DirectoryServices.Protocols.DsmlRequestDocument.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.IsFixedSize" /> 속성에는 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />의 크기가 고정되어 있는지 여부를 나타내는 값이 포함되어 있습니다.</summary>
        <value><see langword="true" />의 크기가 고정되어 있으면 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="protected bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlRequestDocument.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.DirectoryServices.Protocols.DsmlRequestDocument.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.IsReadOnly" /> 속성에는 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />가 읽기 전용인지 여부를 나타내는 값이 포함되어 있습니다.</summary>
        <value><see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />가 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="protected bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlRequestDocument.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.DirectoryServices.Protocols.DsmlRequestDocument.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.IsSynchronized" /> 속성에는 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />에 대한 액세스가 동기화되어 스레드로부터 안전한지 여부를 나타내는 값이 포함되어 있습니다.</summary>
        <value><see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />에 대한 액세스가 동기화되어 스레드로부터 안전하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.DirectoryRequest this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.Protocols.DirectoryRequest Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlRequestDocument.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As DirectoryRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::Protocols::DirectoryRequest ^ default[int] { System::DirectoryServices::Protocols::DirectoryRequest ^ get(int index); void set(int index, System::DirectoryServices::Protocols::DirectoryRequest ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.DirectoryServices.Protocols.DirectoryRequest with get, set" Usage="System.DirectoryServices.Protocols.DsmlRequestDocument.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.DirectoryRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체가 발견된 인덱스 값(0부터 시작)입니다.</param>
        <summary><see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.Item(System.Int32)" /> 속성은 지정된 인덱스에 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체를 포함하고 있습니다.</summary>
        <value>지정된 인덱스의 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="index" />가 null 참조(Visual Basic의 경우 <see langword="Nothing" />)로 설정된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.DirectoryServices.Protocols.DirectoryRequest value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.DirectoryServices.Protocols.DirectoryRequest value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Remove(System.DirectoryServices.Protocols.DirectoryRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As DirectoryRequest)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::DirectoryServices::Protocols::DirectoryRequest ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.DirectoryServices.Protocols.DirectoryRequest -&gt; unit" Usage="dsmlRequestDocument.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DirectoryServices.Protocols.DirectoryRequest" />
      </Parameters>
      <Docs>
        <param name="value">제거할 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체입니다.</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Remove(System.DirectoryServices.Protocols.DirectoryRequest)" /> 메서드는 컬렉션에서 첫 번째 지정된 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체를 제거합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlRequestDocument.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="dsmlRequestDocument.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">제거할 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체의 인덱스(0부터 시작)입니다.</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.RemoveAt(System.Int32)" /> 메서드는 지정된 위치에서 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체를 제거합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestId">
      <MemberSignature Language="C#" Value="public string RequestId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestId" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlRequestDocument.RequestId" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestId : string with get, set" Usage="System.DirectoryServices.Protocols.DsmlRequestDocument.RequestId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.RequestId" /> 속성에는 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />와 연결된 <paramref name="RequestID" />가 포함되어 있습니다.</summary>
        <value><paramref name="RequestID" />와 연결된 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseOrder">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.DsmlResponseOrder ResponseOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.Protocols.DsmlResponseOrder ResponseOrder" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlRequestDocument.ResponseOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseOrder As DsmlResponseOrder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::Protocols::DsmlResponseOrder ResponseOrder { System::DirectoryServices::Protocols::DsmlResponseOrder get(); void set(System::DirectoryServices::Protocols::DsmlResponseOrder value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseOrder : System.DirectoryServices.Protocols.DsmlResponseOrder with get, set" Usage="System.DirectoryServices.Protocols.DsmlRequestDocument.ResponseOrder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.DsmlResponseOrder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.ResponseOrder" /> 속성에는 응답 순서를 지정하는 <see cref="T:System.DirectoryServices.Protocols.DsmlResponseOrder" /> 값 중 하나가 포함되어 있습니다.</summary>
        <value>응답 순서를 지정하는 <see cref="T:System.DirectoryServices.Protocols.DsmlResponseOrder" /> 값 중 하나입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="value" />가 잘못된 열거형 값인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="protected object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlRequestDocument.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.DirectoryServices.Protocols.DsmlRequestDocument.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.SyncRoot" /> 속성에는 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체가 포함되어 있습니다.</summary>
        <value><see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생된 클래스의 동기화 된 버전을 제공할 수 있습니다 합니다 <xref:System.DirectoryServices.Protocols.DsmlRequestDocument> 를 사용 하는 <xref:System.DirectoryServices.Protocols.DsmlRequestDocument.SyncRoot%2A> 속성입니다. 동기화 하는 코드에서 작업을 수행 해야 합니다 <xref:System.DirectoryServices.Protocols.DsmlRequestDocument.SyncRoot%2A> 의 합니다 <xref:System.DirectoryServices.Protocols.DsmlRequestDocument>에서 직접는 <xref:System.DirectoryServices.Protocols.DsmlRequestDocument>합니다. 이렇게 하면 다른 개체에서 파생되는 컬렉션에 대해 적절한 작업이 수행됩니다. 특히, 동시에 수정할 수 있는 다른 스레드와 적절 한 동기화를 유지 관리는 <xref:System.DirectoryServices.Protocols.DsmlRequestDocument> 개체입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array value, int i);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array value, int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (value As Array, i As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ value, int i) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Array" />
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 개체에서 복사한 요소의 대상인 1차원 배열입니다.</param>
        <param name="i">복사가 시작되는 <paramref name="value" />의 인덱스(0부터 시작)입니다.</param>
        <summary>대상 배열의 지정된 인덱스에서 시작하여 전체 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 컬렉션을 1차원 배열에 복사합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 컬렉션에 있는 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체 수를 가져옵니다.</summary>
        <value><see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체의 수입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />에 대한 액세스가 동기화되어 스레드로부터 안전하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
        <value><see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object request);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (request As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ request) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request">컬렉션에 추가할 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체입니다.</param>
        <summary>컬렉션에 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체를 추가합니다.</summary>
        <returns><see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 개체가 추가된 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 컬렉션의 인덱스입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="request" />가 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체가 아닙니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컬렉션에서 모든 항목을 제거합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">검색할 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체입니다.</param>
        <summary><see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 컬렉션에 지정된 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체가 들어 있는지 여부를 나타냅니다.</summary>
        <returns>지정된 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체가 컬렉션에 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">인덱스가 반환된 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체입니다.</param>
        <summary><see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 컬렉션에서 지정한 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체가 처음 나타나는 0부터 시작하는 인덱스를 반환합니다.</summary>
        <returns>지정된 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체가 있으면 이 개체의 인덱스 값이고, 그렇지 않으면 -1입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" />가 <see langword="null" /> 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체를 삽입할 컬렉션의 인덱스입니다.</param>
        <param name="value">컬렉션에 삽입할 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체입니다.</param>
        <summary>지정된 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체를 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 컬렉션의 지정된 인덱스에 삽입합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="value" />가 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체가 아닙니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />의 크기가 고정되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see langword="true" />의 크기가 고정되어 있으면 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />가 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체가 발견된 인덱스 값(0부터 시작)입니다.</param>
        <summary>지정된 인덱스에서 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체를 가져오거나 설정합니다.</summary>
        <value>지정된 <paramref name="index" />의 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="index" />가 null 참조(Visual Basic의 경우 <see langword="Nothing" />)로 설정된 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="value" />가 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체가 아닙니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">제거할 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체입니다.</param>
        <summary><see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 컬렉션에서 맨 처음 발견되는 지정된 개체를 제거합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" />이 null 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">제거할 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체의 인덱스(0부터 시작)입니다.</param>
        <summary>지정된 위치의 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체를 삭제합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlDocument ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlDocument ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlRequestDocument.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlDocument ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Xml.XmlDocument" Usage="dsmlRequestDocument.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.ToXml" /> 메서드는 컬렉션의 각 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 개체를 <see cref="T:System.Xml.XmlDocument" /> 개체로 변환합니다.</summary>
        <returns>변환된 <see cref="T:System.Xml.XmlDocument" /> 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>