<Type Name="PrinterSettings" FullName="System.Drawing.Printing.PrinterSettings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b30bca378ff12a2e3df5a9f244d847c9534e8949" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56762237" /></Metadata><TypeSignature Language="C#" Value="public class PrinterSettings : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit PrinterSettings extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Printing.PrinterSettings" />
  <TypeSignature Language="VB.NET" Value="Public Class PrinterSettings&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrinterSettings : ICloneable" />
  <TypeSignature Language="F#" Value="type PrinterSettings = class&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Windows Forms 응용 프로그램에서 인쇄할 때 인쇄할 프린터 등 문서 인쇄 방법에 대한 정보를 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 액세스 하는 일반적으로 <xref:System.Drawing.Printing.PrinterSettings> 를 통해 <xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A?displayProperty=nameWithType> 또는 <xref:System.Drawing.Printing.PageSettings.PrinterSettings%2A?displayProperty=nameWithType> 프린터 설정을 수정 하는 속성입니다. 가장 일반적인 프린터 설정입니다 <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A>를 인쇄할 프린터를 지정 합니다.  
  
 Windows Forms를 사용 하 여 인쇄에 대 한 자세한 내용은 참조는 <xref:System.Drawing.Printing> 네임 스페이스 개요. Windows Presentation Foundation 애플리케이션에서 인쇄 하려는 경우 참조는 <xref:System.Printing> 네임 스페이스입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 지정된 된 프린터에서 문서를 인쇄 합니다. 예제에는 세 가지 필수 조건이 있습니다.  
  
-   라는 변수 `filePath` 인쇄할 파일의 경로를 설정 합니다.  
  
-   라는 메서드 `pd_PrintPage`를 처리 하는 <xref:System.Drawing.Printing.PrintDocument.PrintPage> 정의한 이벤트입니다.  
  
-   라는 변수 `printer` 프린터의 이름으로 설정 되었습니다.  
  
 사용 된 <xref:System.Drawing>, <xref:System.Drawing.Printing>, 및 <xref:System.IO> 이 예제에 대 한 네임 스페이스.  
  
 [!code-cpp[Classic PrinterSettings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrinterSettings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrinterSettings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrinterSettings Example/CS/source.cs#1)]
 [!code-vb[Classic PrinterSettings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrinterSettings Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
    <altmember cref="P:System.Drawing.Printing.PrintDocument.PrinterSettings" />
    <altmember cref="P:System.Drawing.Printing.PageSettings.PrinterSettings" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrinterSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrinterSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Drawing.Printing.PrinterSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 생성자를 사용 하는 모든 필드를 기본값으로 초기화합니다.  
  
 일반적으로 만들지 인스턴스의 <xref:System.Drawing.Printing.PrinterSettings>를 대신 합니다 <xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A?displayProperty=nameWithType> 프린터 설정을 설정 하려면.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDuplex">
      <MemberSignature Language="C#" Value="public bool CanDuplex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDuplex" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.CanDuplex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanDuplex As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanDuplex { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDuplex : bool" Usage="System.Drawing.Printing.PrinterSettings.CanDuplex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>프린터에서 양면 인쇄를 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>프린터에서 양면 인쇄를 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이중을 사용 하 여 인쇄할 프린터를 지 원하는 경우 설정 하 <xref:System.Drawing.Printing.PrinterSettings.Duplex%2A> 중 하나에 <xref:System.Drawing.Printing.Duplex> 값입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Duplex" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Collate" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.IsPlotter" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.IsValid" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.SupportsColor" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="printerSettings.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Drawing.Printing.PrinterSettings" />의 복사본을 만듭니다.</summary>
        <returns>이 개체의 복사본입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Collate">
      <MemberSignature Language="C#" Value="public bool Collate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Collate" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.Collate" />
      <MemberSignature Language="VB.NET" Value="Public Property Collate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Collate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Collate : bool with get, set" Usage="System.Drawing.Printing.PrinterSettings.Collate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>문서가 한 부씩 인쇄되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>문서가 한 부씩 인쇄되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 정렬 복사본의 수는 1 보다 큰 경우에 수행 됩니다. 설정 된 <xref:System.Drawing.Printing.PrinterSettings.Copies%2A> 인쇄 매수를 지정 하는 속성입니다.  
  
 설정 <xref:System.Drawing.Printing.PrinterSettings.Collate%2A> 에 `true` 다음 복사본의 첫 페이지가 인쇄 되기 전에 문서의 전체 복사본을 인쇄 됩니다. `false` 다음 페이지를 인쇄 하기 전에 지정 된 복사본의 수 만큼 각 페이지를 인쇄 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Copies" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.CanDuplex" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.IsPlotter" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.IsValid" />
      </Docs>
    </Member>
    <Member MemberName="Copies">
      <MemberSignature Language="C#" Value="public short Copies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 Copies" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.Copies" />
      <MemberSignature Language="VB.NET" Value="Public Property Copies As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short Copies { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.Copies : int16 with get, set" Usage="System.Drawing.Printing.PrinterSettings.Copies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>인쇄할 문서의 매수를 가져오거나 설정합니다.</summary>
        <value>인쇄할 복사본의 수입니다. 기본값은 1입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일부 프린터 여러 복사본이 있는 100gb를 인쇄를 지원 합니다. 사용할 수는 <xref:System.Drawing.Printing.PrinterSettings.MaximumCopies%2A> 프린터에서 지 원하는 복사 하는 속성의 최대 수를 결정 합니다. 매수 프린터에서 지 원하는 최대 복사본 이상으로 설정 된 경우 인쇄 되는 최대 복사본 및 예외가 발생 합니다.  
  
> [!NOTE]
>  일부 프린터 한 번에 둘 이상의 복사본을 인쇄 하는 것을 지원 하지 않을 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Drawing.Printing.PrinterSettings.Copies" /> 속성 값이 0보다 작은 경우</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.DefaultPageSettings" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumCopies" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Collate" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Duplex" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.LandscapeAngle" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.ToPage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateMeasurementGraphics">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>프린터 정보를 포함하는 <see cref="T:System.Drawing.Graphics" />를 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateMeasurementGraphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics CreateMeasurementGraphics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Graphics CreateMeasurementGraphics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMeasurementGraphics () As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Graphics ^ CreateMeasurementGraphics();" />
      <MemberSignature Language="F#" Value="member this.CreateMeasurementGraphics : unit -&gt; System.Drawing.Graphics" Usage="printerSettings.CreateMeasurementGraphics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Drawing.Graphics" />를 만들 때 유용한 프린터 정보를 포함하는 <see cref="T:System.Drawing.Printing.PrintDocument" />를 반환합니다.</summary>
        <returns>프린터의 정보를 포함하는 <see cref="T:System.Drawing.Graphics" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 합니다 <xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A> 메서드를 얻을 수 있습니다는 <xref:System.Drawing.Graphics> 인쇄 작업을 만들지 않고 프린터에 대 한 합니다. 사용할 수는 <xref:System.Drawing.Graphics> 결정을 내릴 방법은 레이아웃에 글꼴, 크기 및 복잡 한 인쇄 작업의 형식 스타일과 같은 시각적 요소입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException"><see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성에 명명된 프린터가 없는 경우</exception>
        <altmember cref="T:System.Drawing.Printing.PrintDocument" />
        <altmember cref="T:System.Drawing.Graphics" />
      </Docs>
    </Member>
    <Member MemberName="CreateMeasurementGraphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics CreateMeasurementGraphics (bool honorOriginAtMargins);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Graphics CreateMeasurementGraphics(bool honorOriginAtMargins) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMeasurementGraphics (honorOriginAtMargins As Boolean) As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Graphics ^ CreateMeasurementGraphics(bool honorOriginAtMargins);" />
      <MemberSignature Language="F#" Value="member this.CreateMeasurementGraphics : bool -&gt; System.Drawing.Graphics" Usage="printerSettings.CreateMeasurementGraphics honorOriginAtMargins" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="honorOriginAtMargins" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="honorOriginAtMargins">여백의 원점을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>여백의 원점을 선택적으로 지정하여 프린터 정보를 포함하는 <see cref="T:System.Drawing.Graphics" />를 반환합니다.</summary>
        <returns><see cref="T:System.Drawing.Graphics" />의 프린터 정보를 포함하는 <see cref="T:System.Drawing.Printing.PageSettings" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 합니다 <xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A> 메서드를 얻을 수 있습니다는 <xref:System.Drawing.Graphics> 인쇄 작업을 만들지 않고 프린터에 대 한 합니다. 사용 된 <xref:System.Drawing.Graphics> 결정을 내릴 방법은 레이아웃에 글꼴, 크기 및 복잡 한 인쇄 작업의 형식 스타일과 같은 시각적 요소입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMeasurementGraphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics CreateMeasurementGraphics (System.Drawing.Printing.PageSettings pageSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Graphics CreateMeasurementGraphics(class System.Drawing.Printing.PageSettings pageSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Graphics ^ CreateMeasurementGraphics(System::Drawing::Printing::PageSettings ^ pageSettings);" />
      <MemberSignature Language="F#" Value="member this.CreateMeasurementGraphics : System.Drawing.Printing.PageSettings -&gt; System.Drawing.Graphics" Usage="printerSettings.CreateMeasurementGraphics pageSettings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageSettings" Type="System.Drawing.Printing.PageSettings" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="pageSettings">그래픽 개체를 검색할 <see cref="T:System.Drawing.Printing.PageSettings" />입니다.</param>
        <summary>지정된 <see cref="T:System.Drawing.Graphics" />와 연결된 프린터 정보를 포함하는 <see cref="T:System.Drawing.Printing.PageSettings" />를 반환합니다.</summary>
        <returns><see cref="T:System.Drawing.Graphics" />의 프린터 정보를 포함하는 <see cref="T:System.Drawing.Printing.PageSettings" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 합니다 <xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A> 메서드를 얻을 수 있습니다는 <xref:System.Drawing.Graphics> 인쇄 작업을 만들지 않고 프린터에 대 한 합니다. 사용 된 <xref:System.Drawing.Graphics> 결정을 내릴 방법은 레이아웃에 글꼴, 크기 및 복잡 한 인쇄 작업의 형식 스타일과 같은 시각적 요소입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMeasurementGraphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics CreateMeasurementGraphics (System.Drawing.Printing.PageSettings pageSettings, bool honorOriginAtMargins);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Graphics CreateMeasurementGraphics(class System.Drawing.Printing.PageSettings pageSettings, bool honorOriginAtMargins) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Graphics ^ CreateMeasurementGraphics(System::Drawing::Printing::PageSettings ^ pageSettings, bool honorOriginAtMargins);" />
      <MemberSignature Language="F#" Value="member this.CreateMeasurementGraphics : System.Drawing.Printing.PageSettings * bool -&gt; System.Drawing.Graphics" Usage="printerSettings.CreateMeasurementGraphics (pageSettings, honorOriginAtMargins)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageSettings" Type="System.Drawing.Printing.PageSettings" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="honorOriginAtMargins" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="pageSettings"><see cref="T:System.Drawing.Printing.PageSettings" /> 개체를 검색할 <see cref="T:System.Drawing.Graphics" />입니다.</param>
        <param name="honorOriginAtMargins">여백의 원점을 지정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>지정된 페이지 설정과 연결된 <see cref="T:System.Drawing.Graphics" />를 만들고 여백의 원점을 선택적으로 지정합니다.</summary>
        <returns><see cref="T:System.Drawing.Graphics" />의 프린터 정보를 포함하는 <see cref="T:System.Drawing.Printing.PageSettings" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A> 메서드를 사용 하면 가져올 수 있습니다는 <xref:System.Drawing.Graphics> 인쇄 작업을 만들지 않고 프린터에 대 한 합니다. 사용 된 <xref:System.Drawing.Graphics> 결정을 내릴 방법은 레이아웃에 글꼴, 크기 및 복잡 한 인쇄 작업의 형식 스타일과 같은 시각적 요소입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPageSettings">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PageSettings DefaultPageSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PageSettings DefaultPageSettings" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.DefaultPageSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultPageSettings As PageSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PageSettings ^ DefaultPageSettings { System::Drawing::Printing::PageSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPageSettings : System.Drawing.Printing.PageSettings" Usage="System.Drawing.Printing.PrinterSettings.DefaultPageSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PageSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 프린터의 기본 페이지 설정을 가져옵니다.</summary>
        <value>이 프린터의 기본 페이지 설정을 나타내는 <see cref="T:System.Drawing.Printing.PageSettings" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이지 설정 페이지의 여백 크기, 컬러 인쇄 여부와 사용할 용지 크기에 포함 됩니다. 페이지 설정에 대 한 자세한 내용은 참조는 <xref:System.Drawing.Printing.PageSettings> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PageSettings" />
      </Docs>
    </Member>
    <Member MemberName="Duplex">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.Duplex Duplex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Printing.Duplex Duplex" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.Duplex" />
      <MemberSignature Language="VB.NET" Value="Public Property Duplex As Duplex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::Duplex Duplex { System::Drawing::Printing::Duplex get(); void set(System::Drawing::Printing::Duplex value); };" />
      <MemberSignature Language="F#" Value="member this.Duplex : System.Drawing.Printing.Duplex with get, set" Usage="System.Drawing.Printing.PrinterSettings.Duplex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.Duplex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>양면 인쇄에 대한 프린터 설정을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Drawing.Printing.Duplex" /> 값 중 하나입니다. 기본값은 프린터에 따라 다릅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 <xref:System.Drawing.Printing.PrinterSettings.CanDuplex%2A> 속성을 확인 하는 경우 프린터에서 양면 인쇄를 지원 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><see cref="P:System.Drawing.Printing.PrinterSettings.Duplex" /> 속성 값이 <see cref="T:System.Drawing.Printing.Duplex" /> 값이 아닌 경우</exception>
        <altmember cref="T:System.Drawing.Printing.Duplex" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.CanDuplex" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Copies" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.DefaultPageSettings" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.LandscapeAngle" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumCopies" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
      </Docs>
    </Member>
    <Member MemberName="FromPage">
      <MemberSignature Language="C#" Value="public int FromPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FromPage" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.FromPage" />
      <MemberSignature Language="VB.NET" Value="Public Property FromPage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FromPage { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.FromPage : int with get, set" Usage="System.Drawing.Printing.PrinterSettings.FromPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>인쇄할 첫 페이지의 페이지 번호를 가져오거나 설정합니다.</summary>
        <value>인쇄할 첫 페이지의 페이지 번호입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> 및 <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> 속성에서 사용 되는 <xref:System.Windows.Forms.PrintDialog> 사용자에서 인쇄 범위를 선택 하는 경우. 합니다 <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=nameWithType> 속성으로 설정 되어 있어야 `true` 인쇄 범위를 지정 하려면 사용자를 사용 하도록 설정 합니다. 또한를 <xref:System.Windows.Forms.PrintDialog> 필요 합니다 <xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A> 및 <xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A> 지정 및 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> 해당 범위 내의 값입니다.  
  
 인쇄 프로세스 중에 <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=nameWithType> 이벤트를 보기는 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> 인쇄 될 내용을 확인 하려면. 경우 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> 는 <xref:System.Drawing.Printing.PrintRange.SomePages?displayProperty=nameWithType>를 사용 합니다 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> 및 <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> 페이지를 결정 하는 속성을 인쇄 해야 합니다. 하는 경우 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> 는 <xref:System.Drawing.Printing.PrintRange.Selection?displayProperty=nameWithType>, 선택한 페이지에만 출력을 지정 합니다.  
  
 합니다 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>, <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> 및 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> 설정할 수도 있습니다 프로그래밍 방식으로 하지만 <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=nameWithType> 구현은 동일 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> 속성 값이 0보다 작은 경우</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.ToPage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHdevmode">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>프린터 설정에 해당하는 <see langword="DEVMODE" /> 구조체에 대한 핸들을 만듭니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHdevmode">
      <MemberSignature Language="C#" Value="public IntPtr GetHdevmode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHdevmode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.GetHdevmode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHdevmode () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHdevmode();" />
      <MemberSignature Language="F#" Value="member this.GetHdevmode : unit -&gt; nativeint" Usage="printerSettings.GetHdevmode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>프린터 설정에 해당하는 <see langword="DEVMODE" /> 구조체에 대한 핸들을 만듭니다.</summary>
        <returns><see langword="DEVMODE" /> 구조체에 대한 핸들입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `DEVMODE` 구조체는 디바이스에 특정 합니다. 복사를 `DEVMODE` 간에 구조 <xref:System.Drawing.Printing.PrinterSettings> 에 <xref:System.Drawing.Printing.PrinterSettings> 다른 프린터를 지원 되지 않습니다. 이 메서드를 통해 만든 핸들을 사용 하 여 완료 되 면 할당을 취소 해야 해당 직접 네이티브 Win32를 호출 하 여 `GlobalFree` 메서드. 이 메서드를 호출할 때 매개 변수로 전달 된의 반환 값은 <xref:System.Drawing.Printing.PrinterSettings.GetHdevmode%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException"><see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성에 명명된 프린터가 없는 경우</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">프린터의 초기화 정보를 검색할 수 없는 경우</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">인쇄 및 네트워크에서 모든 프린터에 대 한 액세스. 연결 된 열거형: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHdevmode">
      <MemberSignature Language="C#" Value="public IntPtr GetHdevmode (System.Drawing.Printing.PageSettings pageSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHdevmode(class System.Drawing.Printing.PageSettings pageSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.GetHdevmode(System.Drawing.Printing.PageSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHdevmode(System::Drawing::Printing::PageSettings ^ pageSettings);" />
      <MemberSignature Language="F#" Value="member this.GetHdevmode : System.Drawing.Printing.PageSettings -&gt; nativeint" Usage="printerSettings.GetHdevmode pageSettings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageSettings" Type="System.Drawing.Printing.PageSettings" />
      </Parameters>
      <Docs>
        <param name="pageSettings"><see langword="DEVMODE" /> 구조체의 핸들에 해당하는 <see cref="T:System.Drawing.Printing.PageSettings" /> 개체입니다.</param>
        <summary><paramref name="pageSettings" /> 매개 변수를 통해 지정된 프린터 및 페이지 설정에 해당하는 <see langword="DEVMODE" /> 구조체에 대한 핸들을 만듭니다.</summary>
        <returns><see langword="DEVMODE" /> 구조체에 대한 핸들입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `DEVMODE` 구조체는 디바이스에 특정 합니다. 복사를 `DEVMODE` 간에 구조 <xref:System.Drawing.Printing.PrinterSettings> 에 <xref:System.Drawing.Printing.PrinterSettings> 다른 프린터를 지원 되지 않습니다.  
  
 이 메서드를 통해 만든 핸들을 사용 하 여 완료 되 면 할당을 취소 해야 해당 직접 네이티브 Win32를 호출 하 여 `GlobalFree` 메서드. 이 메서드를 호출할 때 매개 변수로 전달 된의 반환 값은 <xref:System.Drawing.Printing.PrinterSettings.GetHdevmode%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException"><see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성에 명명된 프린터가 없는 경우</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">프린터의 초기화 정보를 검색할 수 없는 경우</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">인쇄 및 네트워크에서 모든 프린터에 대 한 액세스. 연결 된 열거형: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHdevnames">
      <MemberSignature Language="C#" Value="public IntPtr GetHdevnames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHdevnames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.GetHdevnames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHdevnames () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHdevnames();" />
      <MemberSignature Language="F#" Value="member this.GetHdevnames : unit -&gt; nativeint" Usage="printerSettings.GetHdevnames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>프린터 설정에 해당하는 <see langword="DEVNAMES" /> 구조체에 대한 핸들을 만듭니다.</summary>
        <returns><see langword="DEVNAMES" /> 구조체에 대한 핸들입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 통해 만든 핸들을 사용 하 여 완료 되 면 할당을 취소 해야 해당 직접 네이티브 Win32를 호출 하 여 `GlobalFree` 메서드. 이 메서드를 호출할 때 매개 변수로 전달 된의 반환 값은 <xref:System.Drawing.Printing.PrinterSettings.GetHdevnames%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">인쇄 및 네트워크에서 모든 프린터에 대 한 액세스. 연결 된 열거형: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="InstalledPrinters">
      <MemberSignature Language="C#" Value="public static System.Drawing.Printing.PrinterSettings.StringCollection InstalledPrinters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Printing.PrinterSettings/StringCollection InstalledPrinters" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InstalledPrinters As PrinterSettings.StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Printing::PrinterSettings::StringCollection ^ InstalledPrinters { System::Drawing::Printing::PrinterSettings::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstalledPrinters : System.Drawing.Printing.PrinterSettings.StringCollection" Usage="System.Drawing.Printing.PrinterSettings.InstalledPrinters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterSettings+StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컴퓨터에 설치된 모든 프린터의 이름을 가져옵니다.</summary>
        <value>컴퓨터에 설치된 모든 프린터의 이름을 나타내는 <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자를 인쇄할 프린터를 선택할 수 있도록 설치 된 프린터 이름 컬렉션을 사용할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 `comboInstalledPrinters` 설치 된 프린터를 사용 하 여 콤보 상자도 사용 하 여 인쇄할 프린터를 설정 하 고는 <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A> 속성을 선택 합니다. `PopulateInstalledPrintersCombo` 루틴 폼이 초기화 되 면 호출 됩니다. 이 예제에서는 <xref:System.Drawing.Printing.PrintDocument> 라는 변수 `printDoc` 존재 및 특정 콤보 상자 존재 하는 합니다.  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#5](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#5)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#5](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#5)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">사용할 수 있는 프린터를 열거할 수 없는 경우</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">인쇄 및 네트워크에서 모든 프린터에 대 한 액세스. 연결 된 열거형: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
      </Docs>
    </Member>
    <Member MemberName="IsDefaultPrinter">
      <MemberSignature Language="C#" Value="public bool IsDefaultPrinter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefaultPrinter" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.IsDefaultPrinter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDefaultPrinter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDefaultPrinter { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDefaultPrinter : bool" Usage="System.Drawing.Printing.PrinterSettings.IsDefaultPrinter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 명시적으로 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />을 설정할 때를 제외하고 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성이 기본 프린터를 지정하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />이 기본 프린터를 지정하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrinterSettings.IsDefaultPrinter%2A> 항상 반환 `false` 명시적으로 설정 합니다 <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A> 속성 이외의 문자열 값을 `null`합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Drawing.Printing.PrinterSettings.IsDefaultPrinter%2A> 속성입니다. 이 예제를 실행 하려면 호출을 폼에 다음 코드를 붙여 넣습니다 `PopulateInstalledPrintersCombo` 폼의 생성자에서 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리 메서드.  
  
 [!code-csharp[System.Drawing.Printing.PrinterSettingsEx#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Printing.PrinterSettingsEx/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Printing.PrinterSettingsEx#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Printing.PrinterSettingsEx/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDirectPrintingSupported">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>프린터에서 이미지 파일 인쇄를 지원하는지 여부를 나타내는 값을 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDirectPrintingSupported">
      <MemberSignature Language="C#" Value="public bool IsDirectPrintingSupported (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDirectPrintingSupported(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDirectPrintingSupported(System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="member this.IsDirectPrintingSupported : System.Drawing.Image -&gt; bool" Usage="printerSettings.IsDirectPrintingSupported image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="image">인쇄할 이미지입니다.</param>
        <summary>프린터에서 지정된 이미지 파일 인쇄를 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <returns>프린터에서 지정된 이미지 인쇄를 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirectPrintingSupported">
      <MemberSignature Language="C#" Value="public bool IsDirectPrintingSupported (System.Drawing.Imaging.ImageFormat imageFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDirectPrintingSupported(class System.Drawing.Imaging.ImageFormat imageFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Imaging.ImageFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDirectPrintingSupported(System::Drawing::Imaging::ImageFormat ^ imageFormat);" />
      <MemberSignature Language="F#" Value="member this.IsDirectPrintingSupported : System.Drawing.Imaging.ImageFormat -&gt; bool" Usage="printerSettings.IsDirectPrintingSupported imageFormat" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFormat" Type="System.Drawing.Imaging.ImageFormat" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="imageFormat">인쇄할 <see cref="T:System.Drawing.Imaging.ImageFormat" />입니다.</param>
        <summary>프린터에서 지정된 이미지 형식 인쇄를 지원하는지 여부를 나타내는 값을 반환합니다.</summary>
        <returns>프린터에서 지정된 이미지 형식 인쇄를 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPlotter">
      <MemberSignature Language="C#" Value="public bool IsPlotter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPlotter" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.IsPlotter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPlotter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPlotter { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPlotter : bool" Usage="System.Drawing.Printing.PrinterSettings.IsPlotter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>프린터가 플로터인지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>프린터가 플로터이면 <see langword="true" />이고 프린터가 래스터이면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 플로터는 프린터는 래스터 기반 달리 벡터 기반입니다. 대부분의 벡터 기반 프린터 개별 그리기 펜을 사용 하 여 출력을 생성 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.IsValid" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="System.Drawing.Printing.PrinterSettings.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성이 올바른 프린터를 지정할지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 속성이 올바른 프린터를 지정하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 가져오거나 일부 속성을 설정할 때 올바른 프린터를 반드시 그렇지 않으면 예외가 발생 합니다. 예외를 방지 하려면 사용 합니다 <xref:System.Drawing.Printing.PrinterSettings.IsValid%2A> 설정한 후의 <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A> 안전 하 게 유효한 지 확인 하는 경우 프린터입니다.  
  
   
  
## Examples  
 설정 하 여 대상 프린터를 지정 하는 다음 코드 예제는 <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A> 속성을 경우는 <xref:System.Drawing.Printing.PrinterSettings.IsValid%2A> 는 `true`, 지정된 된 프린터에서 문서를 인쇄 합니다. 예제에는 세 가지 필수 조건이 있습니다.  
  
-   라는 변수 `filePath` 인쇄할 파일의 경로를 설정 합니다.  
  
-   라는 메서드 `pd_PrintPage`를 처리 하는 <xref:System.Drawing.Printing.PrintDocument.PrintPage> 정의한 이벤트입니다.  
  
-   라는 변수 `printer` 프린터의 이름으로 설정 되었습니다.  
  
 사용 된 <xref:System.Drawing>, <xref:System.Drawing.Printing>, 및 <xref:System.IO> 이 예제에 대 한 네임 스페이스.  
  
 [!code-cpp[Classic PrinterSettings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrinterSettings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrinterSettings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrinterSettings Example/CS/source.cs#1)]
 [!code-vb[Classic PrinterSettings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrinterSettings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
      </Docs>
    </Member>
    <Member MemberName="LandscapeAngle">
      <MemberSignature Language="C#" Value="public int LandscapeAngle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LandscapeAngle" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.LandscapeAngle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LandscapeAngle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LandscapeAngle { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LandscapeAngle : int" Usage="System.Drawing.Printing.PrinterSettings.LandscapeAngle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>세로 방향이 가로 방향으로 회전되는 각도를 가져옵니다.</summary>
        <value>세로 방향이 가로 방향으로 회전되는 각도입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 유효한 회전 값은 90 및 270도입니다. 가로 지원 되지 않는 경우 올바른 회전 값은 0도입니다. 설정한 합니다 <xref:System.Drawing.Printing.PageSettings.Landscape%2A?displayProperty=nameWithType> 속성을 `true` 를 가로 방향으로 페이지를 인쇄 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.DefaultPageSettings" />
        <altmember cref="P:System.Drawing.Printing.PageSettings.Landscape" />
      </Docs>
    </Member>
    <Member MemberName="MaximumCopies">
      <MemberSignature Language="C#" Value="public int MaximumCopies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumCopies" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.MaximumCopies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaximumCopies As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumCopies { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumCopies : int" Usage="System.Drawing.Printing.PrinterSettings.MaximumCopies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>프린터에서 한 번에 인쇄할 수 있는 최대 매수를 가져옵니다.</summary>
        <value>프린터에서 한 번에 인쇄할 수 있는 최대 매수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정 된 <xref:System.Drawing.Printing.PrinterSettings.Copies%2A> 속성을 인쇄할 복사본의 수입니다. 사용 된 <xref:System.Drawing.Printing.PrinterSettings.MaximumCopies%2A> 일부 프린터 하지 않기 때문에 프린터에서 한 번에 여러 복사본을 인쇄를 지원 하는 경우를 결정 하는 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Copies" />
      </Docs>
    </Member>
    <Member MemberName="MaximumPage">
      <MemberSignature Language="C#" Value="public int MaximumPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumPage" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumPage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumPage { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumPage : int with get, set" Usage="System.Drawing.Printing.PrinterSettings.MaximumPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />에서 선택할 수 있는 최대 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 또는 <see cref="T:System.Windows.Forms.PrintDialog" />를 가져오거나 설정합니다.</summary>
        <value><see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />에서 선택할 수 있는 최대 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 또는 <see cref="T:System.Windows.Forms.PrintDialog" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> 및 <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> 속성에서 사용 되는 <xref:System.Windows.Forms.PrintDialog> 사용자에서 인쇄 범위를 선택 하는 경우. 합니다 <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=nameWithType> 속성으로 설정 되어 있어야 `true` 인쇄 범위를 지정 하려면 사용자를 사용 하도록 설정 합니다. 설정 하는 경우는 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> 또는 <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> 값 프로그래밍 방식으로 정의 된 범위 안에 있는지 확인 합니다 <xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A> 및 <xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A> 표시 하는 경우 속성 또는 예외가 throw 되는 <xref:System.Windows.Forms.PrintDialog>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" /> 속성 값이 0보다 작은 경우</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.ToPage" />
      </Docs>
    </Member>
    <Member MemberName="MinimumPage">
      <MemberSignature Language="C#" Value="public int MinimumPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumPage" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumPage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumPage { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumPage : int with get, set" Usage="System.Drawing.Printing.PrinterSettings.MinimumPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />에서 선택할 수 있는 최소 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 또는 <see cref="T:System.Windows.Forms.PrintDialog" />를 가져오거나 설정합니다.</summary>
        <value><see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />에서 선택할 수 있는 최소 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 또는 <see cref="T:System.Windows.Forms.PrintDialog" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> 및 <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> 속성에서 사용 되는 <xref:System.Windows.Forms.PrintDialog> 사용자에서 인쇄 범위를 선택 하는 경우. 합니다 <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=nameWithType> 속성으로 설정 되어 있어야 `true` 인쇄 범위를 지정 하려면 사용자를 사용 하도록 설정 합니다. 설정 하는 경우는 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> 또는 <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> 값 프로그래밍 방식으로 정의 된 범위 안에 있는지 확인 합니다 <xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A> 및 <xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A> 표시 하는 경우 속성 또는 예외가 throw 되는 <xref:System.Windows.Forms.PrintDialog>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" /> 속성 값이 0보다 작은 경우</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.ToPage" />
      </Docs>
    </Member>
    <Member MemberName="PaperSizes">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrinterSettings.PaperSizeCollection PaperSizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrinterSettings/PaperSizeCollection PaperSizes" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PaperSizes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PaperSizes As PrinterSettings.PaperSizeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrinterSettings::PaperSizeCollection ^ PaperSizes { System::Drawing::Printing::PrinterSettings::PaperSizeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PaperSizes : System.Drawing.Printing.PrinterSettings.PaperSizeCollection" Usage="System.Drawing.Printing.PrinterSettings.PaperSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterSettings+PaperSizeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 프린터에서 지원하는 용지 크기를 가져옵니다.</summary>
        <value>이 프린터에서 지원하는 용지 크기를 나타내는 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrinterSettings.PaperSizeCollection> 포함 <xref:System.Drawing.Printing.PaperSize> 통해 용지 크기를 나타내는 경우에는 <xref:System.Drawing.Printing.PaperSize.Kind%2A?displayProperty=nameWithType> 중 하나를 포함 하는 속성을 <xref:System.Drawing.Printing.PaperKind> 값.  
  
 통해 페이지의 용지 크기를 설정 하는 일반적으로 <xref:System.Drawing.Printing.PageSettings.PaperSize%2A?displayProperty=nameWithType> 속성을 유효한 <xref:System.Drawing.Printing.PaperSize> 를 통해 사용할 수는 <xref:System.Drawing.Printing.PrinterSettings.PaperSizes%2A> 컬렉션입니다.  
  
 사용자 지정 용지 크기를 지정 하려면 참조는 <xref:System.Drawing.Printing.PaperSize.%23ctor%2A> 생성자입니다.  
  
   
  
## Examples  
 다음 코드 예제는 `comboPaperSize` 콤보 상자를 프린터의 용지 크기를 지원 합니다. 또한 사용자 지정 용지 크기를 만들어지고 콤보 상자에 추가 됩니다. <xref:System.Drawing.Printing.PaperSize.PaperName%2A> 를 통해 추가 되는 항목에 대 한 표시 문자열을 제공 하는 속성으로 식별 되는 <xref:System.Windows.Forms.ListControl.DisplayMember%2A> 콤보 상자의 속성입니다. 이 예제에서는 <xref:System.Drawing.Printing.PrintDocument> 라는 변수 `printDoc` 존재 및 특정 콤보 상자 존재 하는 합니다.  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#1)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#1)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PaperSize" />
        <altmember cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PaperSources" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterResolutions" />
        <altmember cref="P:System.Windows.Forms.ListControl.DisplayMember" />
      </Docs>
    </Member>
    <Member MemberName="PaperSources">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrinterSettings.PaperSourceCollection PaperSources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrinterSettings/PaperSourceCollection PaperSources" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PaperSources" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PaperSources As PrinterSettings.PaperSourceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrinterSettings::PaperSourceCollection ^ PaperSources { System::Drawing::Printing::PrinterSettings::PaperSourceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PaperSources : System.Drawing.Printing.PrinterSettings.PaperSourceCollection" Usage="System.Drawing.Printing.PrinterSettings.PaperSources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterSettings+PaperSourceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>프린터에서 사용할 수 있는 용지 공급함을 가져옵니다.</summary>
        <value>이 프린터에서 사용할 수 있는 용지 공급함을 나타내는 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrinterSettings.PaperSourceCollection> 포함 <xref:System.Drawing.Printing.PaperSource> 문서를 나타내는 인스턴스 트레이 통해 원본를 <xref:System.Drawing.Printing.PaperSource.Kind%2A?displayProperty=nameWithType> 중 하나를 포함 하는 속성을 <xref:System.Drawing.Printing.PaperSourceKind> 값.  
  
 통해 페이지의 용지를 설정 하는 일반적으로 <xref:System.Drawing.Printing.PageSettings.PaperSource%2A?displayProperty=nameWithType> 속성을 유효한 <xref:System.Drawing.Printing.PaperSource> 를 통해 사용할 수는 <xref:System.Drawing.Printing.PrinterSettings.PaperSources%2A> 컬렉션입니다.  
  
   
  
## Examples  
 다음 코드 예제는 `comboPaperSource` 콤보 상자를 프린터의 용지를 지원 합니다. <xref:System.Drawing.Printing.PaperSource.SourceName%2A> 를 통해 추가 되는 항목에 대 한 표시 문자열을 제공 하는 속성으로 식별 되는 <xref:System.Windows.Forms.ListControl.DisplayMember%2A> 콤보 상자의 속성입니다. 이 예제에서는 <xref:System.Drawing.Printing.PrintDocument> 라는 변수 `printDoc` 존재 및 특정 콤보 상자 존재 하는 합니다.  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#2)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#2)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PaperSource" />
        <altmember cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PaperSizes" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterResolutions" />
        <altmember cref="P:System.Windows.Forms.ListControl.DisplayMember" />
      </Docs>
    </Member>
    <Member MemberName="PrinterName">
      <MemberSignature Language="C#" Value="public string PrinterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrinterName" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
      <MemberSignature Language="VB.NET" Value="Public Property PrinterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PrinterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrinterName : string with get, set" Usage="System.Drawing.Printing.PrinterSettings.PrinterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용할 프린터 이름을 가져오거나 설정합니다.</summary>
        <value>사용할 프린터 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 프린터 이름을 설정한 후 호출 <xref:System.Drawing.Printing.PrinterSettings.IsValid%2A> 를 시스템으로 올바른 프린터를 프린터 이름을 인식 되는지 확인 합니다.  
  
 사용할 수도 있습니다는 <xref:System.Drawing.Printing.PrinterSettings.InstalledPrinters%2A> 속성을 시스템에 설치 된 프린터의 목록을 가져옵니다.  
  
   
  
## Examples  
 설정 하 여 대상 프린터를 지정 하는 다음 코드 예제는 <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A> 속성을 경우는 <xref:System.Drawing.Printing.PrinterSettings.IsValid%2A> 는 `true`, 지정된 된 프린터에서 문서를 인쇄 합니다. 예제에는 세 가지 필수 조건이 있습니다.  
  
-   라는 변수 `filePath` 인쇄할 파일의 경로를 설정 합니다.  
  
-   라는 메서드 `pd_PrintPage`를 처리 하는 <xref:System.Drawing.Printing.PrintDocument.PrintPage> 정의한 이벤트입니다.  
  
-   라는 변수 `printer` 프린터의 이름으로 설정 되었습니다.  
  
 사용 된 <xref:System.Drawing>, <xref:System.Drawing.Printing>, 및 <xref:System.IO> 이 예제에 대 한 네임 스페이스.  
  
 [!code-cpp[Classic PrinterSettings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrinterSettings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrinterSettings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrinterSettings Example/CS/source.cs#1)]
 [!code-vb[Classic PrinterSettings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrinterSettings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">인쇄 및 네트워크에서 모든 프린터에 대 한 액세스. 연결 된 열거형: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.IsValid" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Duplex" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumCopies" />
      </Docs>
    </Member>
    <Member MemberName="PrinterResolutions">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection PrinterResolutions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrinterSettings/PrinterResolutionCollection PrinterResolutions" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PrinterResolutions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrinterResolutions As PrinterSettings.PrinterResolutionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrinterSettings::PrinterResolutionCollection ^ PrinterResolutions { System::Drawing::Printing::PrinterSettings::PrinterResolutionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrinterResolutions : System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" Usage="System.Drawing.Printing.PrinterSettings.PrinterResolutions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterSettings+PrinterResolutionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 프린터에서 지원하는 모든 해상도를 가져옵니다.</summary>
        <value>이 프린터에서 지원하는 해상도를 나타내는 <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection> 포함 <xref:System.Drawing.Printing.PrinterResolution> 를 통해 지원 되는 프린터 해상도 나타내는 인스턴스를 <xref:System.Drawing.Printing.PrinterResolution.Kind%2A?displayProperty=nameWithType> 중 하나를 포함 하는 속성을 <xref:System.Drawing.Printing.PrinterResolutionKind> 값.  
  
 통해 페이지의 용지를 설정 하는 일반적으로 <xref:System.Drawing.Printing.PageSettings.PrinterResolution%2A?displayProperty=nameWithType> 속성을 유효한 <xref:System.Drawing.Printing.PrinterResolution> 를 통해 사용할 수는 <xref:System.Drawing.Printing.PrinterSettings.PrinterResolutions%2A> 컬렉션입니다.  
  
 경우 <xref:System.Drawing.Printing.PrinterResolutionKind> 됩니다 `Custom`를 사용 하 여는 <xref:System.Drawing.Printing.PrinterResolution.X%2A> 및 <xref:System.Drawing.Printing.PrinterResolution.Y%2A> 각각 가로 및 세로 방향으로의 사용자 지정 프린터 해상도 결정 하는 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제는 `comboPrintResolution` 지원 되는 해상도 사용 하 여 콤보 상자입니다. 이 예제에서는 <xref:System.Drawing.Printing.PrintDocument> 라는 변수 `printDoc` 존재 및 특정 콤보 상자 존재 하는 합니다.  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#3)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#3)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrinterResolution" />
        <altmember cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PaperSizes" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PaperSources" />
      </Docs>
    </Member>
    <Member MemberName="PrintFileName">
      <MemberSignature Language="C#" Value="public string PrintFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrintFileName" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PrintFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PrintFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrintFileName : string with get, set" Usage="System.Drawing.Printing.PrinterSettings.PrintFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>파일로 인쇄하는 경우 파일 이름을 가져오거나 설정합니다.</summary>
        <value>파일로 인쇄하는 경우의 파일 이름입니다.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">파일 이름을 설정할 때 파일 이름 및 쓰기 액세스를 가져올 때 읽기 액세스입니다. 열거형 관련 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />합니다.</permission>
      </Docs>
    </Member>
    <Member MemberName="PrintRange">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrintRange PrintRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Printing.PrintRange PrintRange" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PrintRange" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintRange As PrintRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrintRange PrintRange { System::Drawing::Printing::PrintRange get(); void set(System::Drawing::Printing::PrintRange value); };" />
      <MemberSignature Language="F#" Value="member this.PrintRange : System.Drawing.Printing.PrintRange with get, set" Usage="System.Drawing.Printing.PrinterSettings.PrintRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrintRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>인쇄되도록 지정한 페이지 번호를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Drawing.Printing.PrintRange" /> 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> 속성은 사용의 <xref:System.Windows.Forms.PrintDialog>때는 사용자 인쇄 범위를 선택 합니다. 기본 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>은 `AllPages`입니다. 인쇄할 페이지 범위를 지정할 수 있도록 하는 <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=nameWithType> 속성으로 설정 되어 있어야 `true`합니다. 사용자가 선택 된 페이지를 인쇄 하려면를 사용 하도록 설정 합니다 <xref:System.Windows.Forms.PrintDialog.AllowSelection%2A?displayProperty=nameWithType> 속성으로 설정 되어 있어야 `true`합니다.  
  
 인쇄 프로세스 중에 <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=nameWithType> 이벤트를 보기는 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> 인쇄 될 내용을 확인 하려면. 경우 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> 는 <xref:System.Drawing.Printing.PrintRange.SomePages?displayProperty=nameWithType>를 사용 합니다 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> 및 <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> 페이지를 결정 하는 속성을 인쇄 해야 합니다. 하는 경우 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> 는 <xref:System.Drawing.Printing.PrintRange.Selection?displayProperty=nameWithType>, 선택한 페이지에만 출력을 지정 합니다.  
  
 합니다 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>, <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> 및 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> 설정할 수도 있습니다 프로그래밍 방식으로 하지만 <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=nameWithType> 구현은 동일 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><see cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" /> 속성 값이 <see cref="T:System.Drawing.Printing.PrintRange" /> 값이 아닌 경우</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
        <altmember cref="T:System.Drawing.Printing.PrintRange" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.ToPage" />
      </Docs>
    </Member>
    <Member MemberName="PrintToFile">
      <MemberSignature Language="C#" Value="public bool PrintToFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintToFile" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PrintToFile" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintToFile As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintToFile { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PrintToFile : bool with get, set" Usage="System.Drawing.Printing.PrinterSettings.PrintToFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>인쇄 출력이 포트 대신 파일에 전달되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>인쇄 출력을 파일로 보내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrinterSettings.PrintToFile%2A> 속성을 사용 합니다 <xref:System.Windows.Forms.PrintDialog> 선택 하면를 **파일로 인쇄** 옵션입니다. 이러한 경우 출력 포트를로 "파일" 파일에 대 한 사용자에 게 프롬프트 Windows 인쇄 하위 시스템을 일으키는 경우 이름을 <xref:System.Drawing.Printing.PrintDocument.Print%2A?displayProperty=nameWithType> 메서드가 호출 됩니다.  
  
> [!NOTE]
>  합니다 <xref:System.Drawing.Printing.PrinterSettings.PrintToFile%2A> 속성은 반드시는 <xref:System.Windows.Forms.PrintDialog> 되며 프로그래밍 방식으로 설정할 수 없습니다. `Print to file` 옵션에만 표시 되는 <xref:System.Windows.Forms.PrintDialog> 때를 <xref:System.Windows.Forms.PrintDialog.AllowPrintToFile%2A?displayProperty=nameWithType> 속성이 `true`합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.PrintDialog.AllowPrintToFile" />
      </Docs>
    </Member>
    <Member MemberName="SetHdevmode">
      <MemberSignature Language="C#" Value="public void SetHdevmode (IntPtr hdevmode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetHdevmode(native int hdevmode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.SetHdevmode(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetHdevmode (hdevmode As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetHdevmode(IntPtr hdevmode);" />
      <MemberSignature Language="F#" Value="member this.SetHdevmode : nativeint -&gt; unit" Usage="printerSettings.SetHdevmode hdevmode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdevmode" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdevmode">Win32 <see langword="DEVMODE" /> 구조체에 대한 핸들입니다.</param>
        <summary>지정된 핸들에 있는 관련 정보를 <see cref="T:System.Drawing.Printing.PrinterSettings" />에 복사합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `DEVMODE` 구조체가 디바이스별 및 복사를 `DEVMODE` 간에 구조 <xref:System.Drawing.Printing.PrinterSettings> 에 <xref:System.Drawing.Printing.PrinterSettings> 다른 프린터를 지원 되지 않습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">프린터 핸들이 잘못된 경우</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">인쇄 및 네트워크에서 모든 프린터에 대 한 액세스. 연결 된 열거형: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SetHdevnames">
      <MemberSignature Language="C#" Value="public void SetHdevnames (IntPtr hdevnames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetHdevnames(native int hdevnames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.SetHdevnames(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetHdevnames (hdevnames As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetHdevnames(IntPtr hdevnames);" />
      <MemberSignature Language="F#" Value="member this.SetHdevnames : nativeint -&gt; unit" Usage="printerSettings.SetHdevnames hdevnames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdevnames" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdevnames">Win32 <see langword="DEVNAMES" /> 구조체에 대한 핸들입니다.</param>
        <summary>지정된 핸들에 있는 관련 정보를 <see cref="T:System.Drawing.Printing.PrinterSettings" />에 복사합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">프린터 핸들이 잘못된 경우</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">인쇄 및 네트워크에서 모든 프린터에 대 한 액세스. 연결 된 열거형: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SupportsColor">
      <MemberSignature Language="C#" Value="public bool SupportsColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsColor" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.SupportsColor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportsColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsColor { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsColor : bool" Usage="System.Drawing.Printing.PrinterSettings.SupportsColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 프린터에서 컬러 인쇄를 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>이 프린터에서 컬러를 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 프린터가 지 원하는 경우 설정를 색을 사용 하 여 인쇄 <xref:System.Drawing.Printing.PageSettings.Color%2A?displayProperty=nameWithType> 에 `true`입니다.  
  
   
  
## Examples  
 프린터에서 지 원하는 경우 다음 코드 예제에서는 색의 첫 번째 페이지를 사용 하 여 문서를 인쇄 합니다. 예제를 실행 하려면를 <xref:System.Drawing.Printing.PrintDocument> 라는 변수 `printDoc` 생성 된 및 <xref:System.Drawing.Printing.PrintDocument.PrintPage> 및 <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> 이벤트를 처리 합니다.  
  
 사용 된 <xref:System.Drawing> 및 <xref:System.Drawing.Printing> 이 예제에 대 한 네임 스페이스입니다.  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#6)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#6)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PageSettings.Color" />
      </Docs>
    </Member>
    <Member MemberName="ToPage">
      <MemberSignature Language="C#" Value="public int ToPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ToPage" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.ToPage" />
      <MemberSignature Language="VB.NET" Value="Public Property ToPage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ToPage { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ToPage : int with get, set" Usage="System.Drawing.Printing.PrinterSettings.ToPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>인쇄할 마지막 페이지 번호를 가져오거나 설정합니다.</summary>
        <value>인쇄할 마지막 페이지의 번호입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> 및 <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> 속성에서 사용 되는 <xref:System.Windows.Forms.PrintDialog> 사용자에서 인쇄 범위를 선택 하는 경우. 합니다 <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=nameWithType> 속성으로 설정 되어 있어야 `true` 인쇄 범위를 지정 하려면 사용자를 사용 하도록 설정 합니다. 또한를 <xref:System.Windows.Forms.PrintDialog> 도 필요 합니다 <xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A> 및 <xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A> 지정 및 <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> 해당 범위 내의 값입니다.  
  
 인쇄 프로세스 중에 <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=nameWithType> 이벤트를 보기는 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> 인쇄 될 내용을 확인 하려면. 경우 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> 는 <xref:System.Drawing.Printing.PrintRange.SomePages?displayProperty=nameWithType>를 사용 합니다 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> 및 <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> 페이지를 결정 하는 속성을 인쇄 해야 합니다. 하는 경우 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> 는 <xref:System.Drawing.Printing.PrintRange.Selection?displayProperty=nameWithType>, 선택한 페이지에만 출력을 지정 합니다.  
  
 합니다 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>, <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> 및 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> 설정할 수도 있습니다 프로그래밍 방식으로 하지만 <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=nameWithType> 구현은 동일 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 속성 값이 0보다 작은 경우</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="printerSettings.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Drawing.Printing.PrinterSettings" />에 대한 정보를 문자열 형식으로 제공합니다.</summary>
        <returns>문자열</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>