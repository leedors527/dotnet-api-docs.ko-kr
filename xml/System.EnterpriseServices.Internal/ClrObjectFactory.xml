<Type Name="ClrObjectFactory" FullName="System.EnterpriseServices.Internal.ClrObjectFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f43d7b9d6f1b8c386e2bc481d68c00e3be0d5a33" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55366092" /></Metadata><TypeSignature Language="C#" Value="public class ClrObjectFactory : System.EnterpriseServices.Internal.IClrObjectFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClrObjectFactory extends System.Object implements class System.EnterpriseServices.Internal.IClrObjectFactory" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.ClrObjectFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ClrObjectFactory&#xA;Implements IClrObjectFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClrObjectFactory : System::EnterpriseServices::Internal::IClrObjectFactory" />
  <TypeSignature Language="F#" Value="type ClrObjectFactory = class&#xA;    interface IClrObjectFactory" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.Internal.IClrObjectFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("ecabafd1-7f19-11d2-978e-0000f8757e2a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>클라이언트에서 SOAP 사용 가능 COM+ 애플리케이션 프록시를 활성화합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.Internal.ClrObjectFactory> 되는.NET Framework에서 내부적으로 사용 합니다. 코드에서 직접 클래스를 사용할 필요가 없습니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClrObjectFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ClrObjectFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClrObjectFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.EnterpriseServices.Internal.ClrObjectFactory" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromAssembly">
      <MemberSignature Language="C#" Value="public object CreateFromAssembly (string AssemblyName, string TypeName, string Mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateFromAssembly(string AssemblyName, string TypeName, string Mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromAssembly(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFromAssembly (AssemblyName As String, TypeName As String, Mode As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateFromAssembly(System::String ^ AssemblyName, System::String ^ TypeName, System::String ^ Mode);" />
      <MemberSignature Language="F#" Value="abstract member CreateFromAssembly : string * string * string -&gt; obj&#xA;override this.CreateFromAssembly : string * string * string -&gt; obj" Usage="clrObjectFactory.CreateFromAssembly (AssemblyName, TypeName, Mode)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromAssembly(System.String,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AssemblyName" Type="System.String" />
        <Parameter Name="TypeName" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="AssemblyName">활성화할 어셈블리의 이름입니다.</param>
        <param name="TypeName">활성화할 형식의 이름입니다.</param>
        <param name="Mode">사용되지 않습니다.</param>
        <summary>어셈블리의 구성 파일을 사용하여 .NET Remoting을 통해 원격 어셈블리를 활성화합니다.</summary>
        <returns>문화권, 인수, 바인딩 및 활성화 특성이 <see langword="null" />로 설정된 형식을 나타내는 <see cref="T:System.Object" />의 인스턴스를 반환하거나 <paramref name="TypeName" /> 매개 변수가 없는 경우에는 <see langword="null" />을 반환합니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">호출 체인에 있는 호출자에게 비관리 코드에 액세스할 수 있는 권한이 없는 경우</exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">클래스가 등록되지 않은 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출할 수 있습니다. 연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateFromMailbox">
      <MemberSignature Language="C#" Value="public object CreateFromMailbox (string Mailbox, string Mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateFromMailbox(string Mailbox, string Mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromMailbox(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFromMailbox (Mailbox As String, Mode As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateFromMailbox(System::String ^ Mailbox, System::String ^ Mode);" />
      <MemberSignature Language="F#" Value="abstract member CreateFromMailbox : string * string -&gt; obj&#xA;override this.CreateFromMailbox : string * string -&gt; obj" Usage="clrObjectFactory.CreateFromMailbox (Mailbox, Mode)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromMailbox(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Mailbox" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Mailbox">웹 서비스의 사서함입니다.</param>
        <param name="Mode">사용되지 않습니다.</param>
        <summary>원격 어셈블리의 사서함을 사용하여 .NET Remoting을 통해 원격 어셈블리를 활성화합니다. 현재 구현되지 않았으면 호출할 때 <see cref="T:System.Runtime.InteropServices.COMException" />이 throw됩니다.</summary>
        <returns>이 메서드를 호출하면 예외가 throw됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 하면 예외가 throw 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">SMTP(Simple Mail Transfer Protocol)가 구현되지 않은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromVroot">
      <MemberSignature Language="C#" Value="public object CreateFromVroot (string VrootUrl, string Mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateFromVroot(string VrootUrl, string Mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromVroot(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFromVroot (VrootUrl As String, Mode As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateFromVroot(System::String ^ VrootUrl, System::String ^ Mode);" />
      <MemberSignature Language="F#" Value="abstract member CreateFromVroot : string * string -&gt; obj&#xA;override this.CreateFromVroot : string * string -&gt; obj" Usage="clrObjectFactory.CreateFromVroot (VrootUrl, Mode)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromVroot(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="VrootUrl" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="VrootUrl">활성화할 개체의 가상 루트 URL입니다.</param>
        <param name="Mode">사용되지 않습니다.</param>
        <summary>원격 어셈블리의 가상 루트 URL을 사용하여 .NET Remoting을 통해 원격 어셈블리를 활성화합니다.</summary>
        <returns>문화권, 인수, 바인딩 및 활성화 특성이 <see langword="null" />로 설정된 형식을 나타내는 <see cref="T:System.Object" />의 인스턴스이거나, <paramref name="VrootUrl" /> 매개 변수에 의해 식별되는 어셈블리가 없는 경우 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromVroot%2A> 문자열을 추가 합니다 "? wsdl"를 `VrootUrl` 및 호출 <xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl%2A> 원격 개체를 활성화 합니다.  
  
 .NET remoting에서 사용 하는 SOAP 버전에는 RPC/encoded, 없습니다 문서/literal, SOAP 상호 운용성을 위해 필요 합니다. 따라서 <xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromVroot%2A> 대부분의 ASMX 웹 서비스와 작동 하지 것입니다.  
  
 <xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromVroot%2A> 로컬 컴퓨터에서 관리자 권한 실행, 작성 하는 원격 어셈블리를 사용 하 여 통신을 위한 클라이언트 프록시를 설치 하기 때문에 처음으로 필요 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출 체인에 있는 호출자에게 비관리 코드에 액세스할 수 있는 권한이 없는 경우</exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">스레드 토큰을 열 수 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출할 수 있습니다. 연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateFromWsdl">
      <MemberSignature Language="C#" Value="public object CreateFromWsdl (string WsdlUrl, string Mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateFromWsdl(string WsdlUrl, string Mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFromWsdl (WsdlUrl As String, Mode As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateFromWsdl(System::String ^ WsdlUrl, System::String ^ Mode);" />
      <MemberSignature Language="F#" Value="abstract member CreateFromWsdl : string * string -&gt; obj&#xA;override this.CreateFromWsdl : string * string -&gt; obj" Usage="clrObjectFactory.CreateFromWsdl (WsdlUrl, Mode)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.IClrObjectFactory.CreateFromWsdl(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="WsdlUrl" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="WsdlUrl">웹 서비스의 WSDL URL입니다.</param>
        <param name="Mode">사용되지 않습니다.</param>
        <summary>XML Web services의 WSDL(Web Services Description Language)을 사용하여 .NET Remoting을 통해 원격 어셈블리를 활성화합니다.</summary>
        <returns>문화권, 인수, 바인딩 및 활성화 특성이 <see langword="null" />로 설정된 형식을 나타내는 <see cref="T:System.Object" />의 인스턴스이거나, <paramref name="WsdlUrl" /> 매개 변수에 의해 식별되는 어셈블리가 없는 경우 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 전달 된 WSDL을 처리 하 고 필요한 프록시를 생성 하는 경우 원격 개체를 활성화 합니다.  
  
 .NET remoting에서 사용 하는 SOAP 버전에는 RPC/encoded, 없습니다 문서/literal, SOAP 상호 운용성을 위해 필요 합니다. 따라서 <xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl%2A> 대부분의 ASMX 웹 서비스와 작동 하지 것입니다.  
  
 <xref:System.EnterpriseServices.Internal.ClrObjectFactory.CreateFromWsdl%2A> 로컬 컴퓨터에서 관리자 권한 실행, 작성 하는 원격 어셈블리를 사용 하 여 통신을 위한 클라이언트 프록시를 설치 하기 때문에 처음으로 필요 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출 체인에 있는 호출자에게 비관리 코드에 액세스할 수 있는 권한이 없는 경우</exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">스레드 토큰을 열 수 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">비관리 코드를 호출할 수 있습니다. 연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>