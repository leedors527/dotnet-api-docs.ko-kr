<Type Name="IComSoapMetadata" FullName="System.EnterpriseServices.Internal.IComSoapMetadata">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f77572b8e158e83d223acad0950602f7f2e080f5" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55390377" /></Metadata><TypeSignature Language="C#" Value="public interface IComSoapMetadata" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComSoapMetadata" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.IComSoapMetadata" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComSoapMetadata" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComSoapMetadata" />
  <TypeSignature Language="F#" Value="type IComSoapMetadata = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("d8013ff0-730b-45e2-ba24-874b7242c425")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>COM+ 구성 요소에 대한 CLR(공용 언어 런타임) 메타데이터를 생성하는 메서드를 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.Internal.IComSoapMetadata> 인터페이스는 코드에서 직접 구현할 필요가 없습니다. 에 의해 구현 됩니다는 <xref:System.EnterpriseServices.Internal.GenerateMetadata> 클래스는.NET Framework 인프라에서.  
  
 필요한 경우 <xref:System.EnterpriseServices.Internal.IComSoapMetadata> CLR 메타 데이터를 포함 하는 어셈블리를 지정 된 형식 라이브러리에 대 한 생성 되도록 지정 합니다.  
  
 <xref:System.EnterpriseServices.Internal.IComSoapMetadata> 되는.NET Framework에서 내부적으로 사용 합니다. 코드에서 직접 사용할 필요가 없습니다.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public string Generate (string SrcTypeLibFileName, string OutPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Generate(string SrcTypeLibFileName, string OutPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapMetadata.Generate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Generate (SrcTypeLibFileName As String, OutPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Generate(System::String ^ SrcTypeLibFileName, System::String ^ OutPath);" />
      <MemberSignature Language="F#" Value="abstract member Generate : string * string -&gt; string" Usage="iComSoapMetadata.Generate (SrcTypeLibFileName, OutPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SrcTypeLibFileName" Type="System.String" />
        <Parameter Name="OutPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="SrcTypeLibFileName">어셈블리를 생성할 형식 라이브러리의 이름입니다.</param>
        <param name="OutPath">어셈블리가 생성될 폴더입니다.</param>
        <summary>지정된 형식 라이브러리로 표시되는 COM+ 구성 요소에 대한 CLR(공용 언어 런타임) 메타데이터가 들어 있는 어셈블리를 생성합니다.</summary>
        <returns>생성된 어셈블리 이름입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 필요한 경우는 <xref:System.EnterpriseServices.Internal.IComSoapMetadata.Generate%2A> 메서드는 지정 된 형식 라이브러리에 대 한 CLR 메타 데이터를 포함 하는 어셈블리 생성 되도록 지정 합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GenerateSigned">
      <MemberSignature Language="C#" Value="public string GenerateSigned (string SrcTypeLibFileName, string OutPath, bool InstallGac, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateSigned(string SrcTypeLibFileName, string OutPath, bool InstallGac, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IComSoapMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateSigned (SrcTypeLibFileName As String, OutPath As String, InstallGac As Boolean, ByRef Error As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GenerateSigned(System::String ^ SrcTypeLibFileName, System::String ^ OutPath, bool InstallGac, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member GenerateSigned : string * string * bool *  -&gt; string" Usage="iComSoapMetadata.GenerateSigned (SrcTypeLibFileName, OutPath, InstallGac, Error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SrcTypeLibFileName" Type="System.String" />
        <Parameter Name="OutPath" Type="System.String" />
        <Parameter Name="InstallGac" Type="System.Boolean" />
        <Parameter Name="Error" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="SrcTypeLibFileName">어셈블리를 생성할 형식 라이브러리의 이름입니다.</param>
        <param name="OutPath">어셈블리가 생성될 폴더입니다.</param>
        <param name="InstallGac">어셈블리를 전역 어셈블리 캐시에 설치할지 여부를 나타내는 플래그입니다.</param>
        <param name="Error">오류 메시지를 쓸 수 있는 문자열입니다.</param>
        <summary>지정된 형식 라이브러리로 표시되는 COM+ 구성 요소에 대한 CLR(공용 언어 런타임) 메타데이터가 들어 있는 어셈블리를 생성한 후 강력한 이름의 키 쌍으로 어셈블리를 서명하고 서명한 어셈블리를 전역 어셈블리 캐시에 설치합니다.</summary>
        <returns>생성된 어셈블리 이름입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 필요한 경우는 <xref:System.EnterpriseServices.Internal.IComSoapMetadata.GenerateSigned%2A> 메서드는 지정 된 형식 라이브러리에 대 한 CLR 메타 데이터를 포함 하는 어셈블리 생성 되도록 지정 합니다. 또한 <xref:System.EnterpriseServices.Internal.IComSoapMetadata.GenerateSigned%2A> 강력한 이름의 키 쌍을 생성 하 고 어셈블리를 서명 합니다.  
  
 `InstallGac` 매개 변수는 전역 어셈블리 캐시에 어셈블리를 설치할지 여부를 나타냅니다. 그러나 한 가지 구현을 <xref:System.EnterpriseServices.Internal.IComSoapMetadata.GenerateSigned%2A>를 <xref:System.EnterpriseServices.Internal.GenerateMetadata> 클래스,이 값을 무시 하 고 항상 서명 된 어셈블리를 전역 어셈블리 캐시에 설치 하려고 시도 합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>