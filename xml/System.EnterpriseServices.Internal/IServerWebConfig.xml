<Type Name="IServerWebConfig" FullName="System.EnterpriseServices.Internal.IServerWebConfig">
  <Metadata><Meta Name="ms.openlocfilehash" Value="701abe2baa76b02251b3229169eff34cead6e033" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55389571" /></Metadata><TypeSignature Language="C#" Value="public interface IServerWebConfig" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IServerWebConfig" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.IServerWebConfig" />
  <TypeSignature Language="VB.NET" Value="Public Interface IServerWebConfig" />
  <TypeSignature Language="C++ CLI" Value="public interface class IServerWebConfig" />
  <TypeSignature Language="F#" Value="type IServerWebConfig = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("6261e4b5-572a-4142-a2f9-1fe1a0c97097")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>SOAP 사용 가능 COM+ 애플리케이션에 대한 Web.config 파일을 만들고 애플리케이션에 게시되는 COM 인터페이스에 대해 이 파일에 구성 요소 항목을 추가합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.EnterpriseServices.Internal.IServerWebConfig> 인터페이스 에서만 구현 되는 <xref:System.EnterpriseServices.Internal.ServerWebConfig> 클래스 및.NET Framework 인프라 내 에서만 사용 됩니다. 이 인터페이스를 구현 하거나 인스턴스화하는 대신는 <xref:System.EnterpriseServices.Internal.IServerWebConfig> 인터페이스 개체를 사용 합니다 <xref:System.EnterpriseServices.Internal.Publish> 클래스를 구현 하는 <xref:System.EnterpriseServices.Internal.IComSoapPublisher> 인터페이스.  
  
 <xref:System.EnterpriseServices.Internal.IServerWebConfig> 되는.NET Framework에서 내부적으로 사용 합니다. 코드에서 직접 사용할 필요가 없습니다.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="AddElement">
      <MemberSignature Language="C#" Value="public void AddElement (string FilePath, string AssemblyName, string TypeName, string ProgId, string Mode, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddElement(string FilePath, string AssemblyName, string TypeName, string ProgId, string Mode, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IServerWebConfig.AddElement(System.String,System.String,System.String,System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddElement (FilePath As String, AssemblyName As String, TypeName As String, ProgId As String, Mode As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddElement(System::String ^ FilePath, System::String ^ AssemblyName, System::String ^ TypeName, System::String ^ ProgId, System::String ^ Mode, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member AddElement : string * string * string * string * string *  -&gt; unit" Usage="iServerWebConfig.AddElement (FilePath, AssemblyName, TypeName, ProgId, Mode, Error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FilePath" Type="System.String" />
        <Parameter Name="AssemblyName" Type="System.String" />
        <Parameter Name="TypeName" Type="System.String" />
        <Parameter Name="ProgId" Type="System.String" />
        <Parameter Name="Mode" Type="System.String" />
        <Parameter Name="Error" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="FilePath">기존 Web.config 파일의 경로입니다.</param>
        <param name="AssemblyName">추가되는 형식이 들어 있는 어셈블리의 이름입니다.</param>
        <param name="TypeName">추가되는 형식의 이름입니다.</param>
        <param name="ProgId">추가되는 형식의 프로그래밍 식별자입니다.</param>
        <param name="Mode"><see cref="T:System.Runtime.Remoting.WellKnownObjectMode" /> 열거형의 멤버 이름에 해당하는 문자열 상수로서 잘 알려진 개체가 활성화되는 방법을 나타냅니다.</param>
        <param name="Error">오류 메시지를 쓸 수 있는 문자열입니다.</param>
        <summary>XML 요소를 SOAP 사용 가능 COM+ 애플리케이션에 게시되는 COM 인터페이스에 해당하는 Web.config 파일에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 참조 된 <xref:System.EnterpriseServices.Internal.ServerWebConfig.AddElement%2A> 메서드 구현 세부 정보에 대 한 합니다. 그러나 호출할 필요가 없습니다 `AddElement` 메서드를 직접.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (string FilePath, string FileRootName, out string Error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Create(string FilePath, string FileRootName, [out] string&amp; Error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.IServerWebConfig.Create(System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create (FilePath As String, FileRootName As String, ByRef Error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create(System::String ^ FilePath, System::String ^ FileRootName, [Runtime::InteropServices::Out] System::String ^ % Error);" />
      <MemberSignature Language="F#" Value="abstract member Create : string * string *  -&gt; unit" Usage="iServerWebConfig.Create (FilePath, FileRootName, Error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FilePath" Type="System.String" />
        <Parameter Name="FileRootName" Type="System.String" />
        <Parameter Name="Error" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="FilePath">구성 파일이 만들어지는 폴더입니다.</param>
        <param name="FileRootName">config 확장명을 추가할 수 있는 문자열 값입니다(예: Web.config의 경우 Web).</param>
        <param name="Error">오류 메시지를 쓸 수 있는 문자열입니다.</param>
        <summary>게시되는 COM 인터페이스에 XML 요소를 추가할 수 있도록 SOAP 사용 가능 COM+ 애플리케이션에 대한 Web.config 파일을 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 참조 된 <xref:System.EnterpriseServices.Internal.ServerWebConfig.Create%2A> 메서드 구현 세부 정보에 대 한 합니다. 그러나 호출할 필요가 없습니다 `Create` 직접.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>