<Type Name="ISoapServerVRoot" FullName="System.EnterpriseServices.Internal.ISoapServerVRoot">
  <Metadata><Meta Name="ms.openlocfilehash" Value="76f9cbabf7a46de0e04e3bc2a82c18aa07c249e8" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55311982" /></Metadata><TypeSignature Language="C#" Value="public interface ISoapServerVRoot" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISoapServerVRoot" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.ISoapServerVRoot" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISoapServerVRoot" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISoapServerVRoot" />
  <TypeSignature Language="F#" Value="type ISoapServerVRoot = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("A31B6577-71D2-4344-AEDF-ADC1B0DC5347")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>서버에 인증 및 암호화된 SOAP 가상 루트를 게시합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 참조 <xref:System.EnterpriseServices.Internal.SoapServerVRoot> 기본 구현에 대 한 합니다.  
  
 <xref:System.EnterpriseServices.Internal.ISoapServerVRoot> 되는.NET Framework에서 내부적으로 사용 합니다. 코드에서 직접 사용할 필요가 없습니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateVirtualRootEx">
      <MemberSignature Language="C#" Value="public void CreateVirtualRootEx (string rootWebServer, string inBaseUrl, string inVirtualRoot, string homePage, string discoFile, string secureSockets, string authentication, string operation, out string baseUrl, out string virtualRoot, out string physicalPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateVirtualRootEx(string rootWebServer, string inBaseUrl, string inVirtualRoot, string homePage, string discoFile, string secureSockets, string authentication, string operation, [out] string&amp; baseUrl, [out] string&amp; virtualRoot, [out] string&amp; physicalPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateVirtualRootEx (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, homePage As String, discoFile As String, secureSockets As String, authentication As String, operation As String, ByRef baseUrl As String, ByRef virtualRoot As String, ByRef physicalPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateVirtualRootEx(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, System::String ^ homePage, System::String ^ discoFile, System::String ^ secureSockets, System::String ^ authentication, System::String ^ operation, [Runtime::InteropServices::Out] System::String ^ % baseUrl, [Runtime::InteropServices::Out] System::String ^ % virtualRoot, [Runtime::InteropServices::Out] System::String ^ % physicalPath);" />
      <MemberSignature Language="F#" Value="abstract member CreateVirtualRootEx : string * string * string * string * string * string * string * string *  *  *  -&gt; unit" Usage="iSoapServerVRoot.CreateVirtualRootEx (rootWebServer, inBaseUrl, inVirtualRoot, homePage, discoFile, secureSockets, authentication, operation, baseUrl, virtualRoot, physicalPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="homePage" Type="System.String" />
        <Parameter Name="discoFile" Type="System.String" />
        <Parameter Name="secureSockets" Type="System.String" />
        <Parameter Name="authentication" Type="System.String" />
        <Parameter Name="operation" Type="System.String" />
        <Parameter Name="baseUrl" Type="System.String" RefType="out" />
        <Parameter Name="virtualRoot" Type="System.String" RefType="out" />
        <Parameter Name="physicalPath" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer">루트 웹 서버입니다.</param>
        <param name="inBaseUrl">가상 루트가 들어 있는 기본 URL입니다.</param>
        <param name="inVirtualRoot">가상 루트의 이름입니다.</param>
        <param name="homePage"><see langword="true" /> 속성이 설정되면 <see langword="EnableDefaultDoc" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="discoFile">기본 검색 파일이 만들어지면 <see langword="true" />이고, 검색 파일이 없으면 <see langword="false" />입니다. <see langword="false" />이고 Default.disco 파일이 있으면 파일이 삭제됩니다.</param>
        <param name="secureSockets">SSL 암호화가 필요하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="authentication">인증을 사용하지 않으면 "anonymous"(익명 사용자)를 지정합니다. 그렇지 않은 경우 빈 문자열을 지정합니다.</param>
        <param name="operation">사용되지 않습니다. 이 매개 변수에 <see langword="null" />을 지정합니다.</param>
        <param name="baseUrl">이 메서드가 반환될 때 이 매개 변수에는 기본 URL이 포함됩니다.</param>
        <param name="virtualRoot">이 메서드가 반환될 때 이 매개 변수에 가상 루트의 이름이 포함됩니다.</param>
        <param name="physicalPath">이 메서드가 반환될 때 이 매개 변수에는 가상 루트 디렉터리의 디스크 주소가 포함됩니다.</param>
        <summary>보안 옵션을 사용하여 SOAP 가상 루트를 만듭니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">호출 체인에 있는 호출자에게 비관리 코드에 액세스할 수 있는 권한이 없는 경우</exception>
        <exception cref="T:System.PlatformNotSupportedException">SOAP 유틸리티를 사용할 수 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteVirtualRootEx">
      <MemberSignature Language="C#" Value="public void DeleteVirtualRootEx (string rootWebServer, string baseUrl, string virtualRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteVirtualRootEx(string rootWebServer, string baseUrl, string virtualRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteVirtualRootEx (rootWebServer As String, baseUrl As String, virtualRoot As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteVirtualRootEx(System::String ^ rootWebServer, System::String ^ baseUrl, System::String ^ virtualRoot);" />
      <MemberSignature Language="F#" Value="abstract member DeleteVirtualRootEx : string * string * string -&gt; unit" Usage="iSoapServerVRoot.DeleteVirtualRootEx (rootWebServer, baseUrl, virtualRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="baseUrl" Type="System.String" />
        <Parameter Name="virtualRoot" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rootWebServer">루트 웹 서버입니다.</param>
        <param name="baseUrl">가상 루트가 들어 있는 기본 URL입니다.</param>
        <param name="virtualRoot">가상 루트의 이름입니다.</param>
        <summary>가상 루트를 삭제합니다. 완전히 구현되지 않았습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 가상 루트를 삭제 하는 기능을이 인터페이스의 구현에서 현재 사용할 수 없는 경우 구현에서는 루트를 삭제 하지 않고 반환 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출 체인에 있는 호출자에게 비관리 코드에 액세스할 수 있는 권한이 없는 경우</exception>
        <exception cref="T:System.PlatformNotSupportedException">SOAP 유틸리티를 사용할 수 없는 경우</exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException">시스템 디렉터리를 식별하려는 호출이 실패한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualRootStatus">
      <MemberSignature Language="C#" Value="public void GetVirtualRootStatus (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string exists, out string secureSockets, out string windowsAuth, out string anonymous, out string homePage, out string discoFile, out string physicalPath, out string baseUrl, out string virtualRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetVirtualRootStatus(string rootWebServer, string inBaseUrl, string inVirtualRoot, [out] string&amp; exists, [out] string&amp; secureSockets, [out] string&amp; windowsAuth, [out] string&amp; anonymous, [out] string&amp; homePage, [out] string&amp; discoFile, [out] string&amp; physicalPath, [out] string&amp; baseUrl, [out] string&amp; virtualRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetVirtualRootStatus (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, ByRef exists As String, ByRef secureSockets As String, ByRef windowsAuth As String, ByRef anonymous As String, ByRef homePage As String, ByRef discoFile As String, ByRef physicalPath As String, ByRef baseUrl As String, ByRef virtualRoot As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetVirtualRootStatus(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, [Runtime::InteropServices::Out] System::String ^ % exists, [Runtime::InteropServices::Out] System::String ^ % secureSockets, [Runtime::InteropServices::Out] System::String ^ % windowsAuth, [Runtime::InteropServices::Out] System::String ^ % anonymous, [Runtime::InteropServices::Out] System::String ^ % homePage, [Runtime::InteropServices::Out] System::String ^ % discoFile, [Runtime::InteropServices::Out] System::String ^ % physicalPath, [Runtime::InteropServices::Out] System::String ^ % baseUrl, [Runtime::InteropServices::Out] System::String ^ % virtualRoot);" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualRootStatus : string * string * string *  *  *  *  *  *  *  *  *  -&gt; unit" Usage="iSoapServerVRoot.GetVirtualRootStatus (rootWebServer, inBaseUrl, inVirtualRoot, exists, secureSockets, windowsAuth, anonymous, homePage, discoFile, physicalPath, baseUrl, virtualRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="exists" Type="System.String" RefType="out" />
        <Parameter Name="secureSockets" Type="System.String" RefType="out" />
        <Parameter Name="windowsAuth" Type="System.String" RefType="out" />
        <Parameter Name="anonymous" Type="System.String" RefType="out" />
        <Parameter Name="homePage" Type="System.String" RefType="out" />
        <Parameter Name="discoFile" Type="System.String" RefType="out" />
        <Parameter Name="physicalPath" Type="System.String" RefType="out" />
        <Parameter Name="baseUrl" Type="System.String" RefType="out" />
        <Parameter Name="virtualRoot" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer">루트 웹 서버입니다.</param>
        <param name="inBaseUrl">가상 루트가 들어 있는 기본 URL입니다.</param>
        <param name="inVirtualRoot">가상 루트의 이름입니다.</param>
        <param name="exists">이 메서드가 반환될 때 가상 디렉터리가 존재하면 이 매개 변수에는 <see langword="true" />가 포함되고, 그렇지 않으면 <see langword="false" />가 포함됩니다.</param>
        <param name="secureSockets">이 메서드가 반환될 때 SSL 암호화가 필요하면 이 매개 변수에는 <see langword="true" />가 포함되고, 그렇지 않으면 <see langword="false" />가 포함됩니다.</param>
        <param name="windowsAuth">이 메서드가 반환될 때 Windows 인증이 설정되어 있으면 이 매개 변수에는 <see langword="true" />가 포함되고, 그렇지 않으면 <see langword="false" />가 포함됩니다.</param>
        <param name="anonymous">이 메서드가 반환될 때 인증이 설정되어 있지 않으면(익명 사용자) 이 매개 변수에는 <see langword="true" />가 포함되고, 그렇지 않으면 <see langword="false" />가 포함됩니다.</param>
        <param name="homePage">이 메서드가 반환될 때 가상 루트 디렉터리의 <see langword="true" /> 속성이 설정되어 있으면 이 매개 변수에는 <see langword="EnableDefaultDoc" />가 포함되고, 그렇지 않으면 <see langword="false" />가 포함됩니다.</param>
        <param name="discoFile">이 메서드가 반환될 때 Default.disco 파일이 존재하면 이 매개 변수에는 <see langword="true" />가 포함되고, 그렇지 않으면 <see langword="false" />가 포함됩니다.</param>
        <param name="physicalPath">이 메서드가 반환될 때 이 매개 변수에는 가상 루트 디렉터리의 디스크 주소가 포함됩니다.</param>
        <param name="baseUrl">이 메서드가 반환될 때 이 매개 변수에는 기본 URL이 포함됩니다.</param>
        <param name="virtualRoot">이 메서드가 반환될 때 이 매개 변수에 가상 루트의 이름이 포함됩니다.</param>
        <summary>기존 SOAP 가상 루트의 보안 상태를 반환합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>