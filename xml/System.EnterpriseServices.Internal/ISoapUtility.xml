<Type Name="ISoapUtility" FullName="System.EnterpriseServices.Internal.ISoapUtility">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e224ced53329b7ede72a5bb12c3172d69b400d67" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55391191" /></Metadata><TypeSignature Language="C#" Value="public interface ISoapUtility" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISoapUtility" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.ISoapUtility" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISoapUtility" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISoapUtility" />
  <TypeSignature Language="F#" Value="type ISoapUtility = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("5AC4CB7E-F89F-429b-926B-C7F940936BF4")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>서버의 COM+ SOAP 사용 가능한 애플리케이션 프록시 내보내기 및 클라이언트의 프록시 가져오기를 지원하는 유틸리티를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 그러나 유틸리티 함수 <xref:System.EnterpriseServices.Internal.ISoapUtility> 제공 COM +; 내에서 다양 한 위치에서 호출 됩니다 내보내기 및 가져오기 클라이언트 프록시를 지원 하기 위해 기본 용도 것입니다.  
  
 참조 <xref:System.EnterpriseServices.Internal.SoapUtility> 기본 구현에 대 한 합니다.  
  
 <xref:System.EnterpriseServices.Internal.ISoapUtility> 되는.NET Framework에서 내부적으로 사용 합니다. 코드에서 직접 사용할 필요가 없습니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetServerBinPath">
      <MemberSignature Language="C#" Value="public void GetServerBinPath (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string binPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetServerBinPath(string rootWebServer, string inBaseUrl, string inVirtualRoot, [out] string&amp; binPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapUtility.GetServerBinPath(System.String,System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetServerBinPath (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, ByRef binPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetServerBinPath(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, [Runtime::InteropServices::Out] System::String ^ % binPath);" />
      <MemberSignature Language="F#" Value="abstract member GetServerBinPath : string * string * string *  -&gt; unit" Usage="iSoapUtility.GetServerBinPath (rootWebServer, inBaseUrl, inVirtualRoot, binPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="binPath" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer">루트 웹 서버입니다.</param>
        <param name="inBaseUrl">기본 URL 주소입니다.</param>
        <param name="inVirtualRoot">가상 루트의 이름입니다.</param>
        <param name="binPath">이 메서드가 반환될 때 이 매개 변수에는 SOAP 가상 루트 bin 디렉터리의 파일 경로가 포함됩니다.</param>
        <summary>SOAP 가상 루트 bin 디렉터리의 경로를 반환합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">호출 체인에 있는 호출자에게 비관리 코드에 액세스할 수 있는 권한이 없는 경우</exception>
        <exception cref="T:System.PlatformNotSupportedException">SOAP 유틸리티를 사용할 수 없는 경우</exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException">시스템 디렉터리를 얻으려는 호출이 실패한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetServerPhysicalPath">
      <MemberSignature Language="C#" Value="public void GetServerPhysicalPath (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string physicalPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetServerPhysicalPath(string rootWebServer, string inBaseUrl, string inVirtualRoot, [out] string&amp; physicalPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapUtility.GetServerPhysicalPath(System.String,System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetServerPhysicalPath (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, ByRef physicalPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetServerPhysicalPath(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, [Runtime::InteropServices::Out] System::String ^ % physicalPath);" />
      <MemberSignature Language="F#" Value="abstract member GetServerPhysicalPath : string * string * string *  -&gt; unit" Usage="iSoapUtility.GetServerPhysicalPath (rootWebServer, inBaseUrl, inVirtualRoot, physicalPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer">루트 웹 서버입니다.</param>
        <param name="inBaseUrl">기본 URL 주소입니다.</param>
        <param name="inVirtualRoot">가상 루트의 이름입니다.</param>
        <param name="physicalPath">이 메서드가 반환될 때 이 매개 변수에는 SOAP 가상 루트의 파일 경로가 포함됩니다.</param>
        <summary>SOAP 가상 루트의 경로를 반환합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">호출 체인에 있는 호출자에게 비관리 코드에 액세스할 수 있는 권한이 없는 경우</exception>
        <exception cref="T:System.PlatformNotSupportedException">SOAP 유틸리티를 사용할 수 없는 경우</exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException">시스템 디렉터리를 얻으려는 호출이 실패한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Present">
      <MemberSignature Language="C#" Value="public void Present ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Present() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.ISoapUtility.Present" />
      <MemberSignature Language="VB.NET" Value="Public Sub Present ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Present();" />
      <MemberSignature Language="F#" Value="abstract member Present : unit -&gt; unit" Usage="iSoapUtility.Present " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>인증되고 암호화된 SOAP 인터페이스가 있는지 여부를 확인합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">호출 체인에 있는 호출자에게 비관리 코드에 액세스할 수 있는 권한이 없는 경우</exception>
        <exception cref="T:System.PlatformNotSupportedException">SOAP 유틸리티를 사용할 수 없는 경우</exception>
      </Docs>
    </Member>
  </Members>
</Type>