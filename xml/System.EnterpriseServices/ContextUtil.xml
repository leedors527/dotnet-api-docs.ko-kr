<Type Name="ContextUtil" FullName="System.EnterpriseServices.ContextUtil">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b5a9e625cb617c25c53b0b9d46016db7a498370c" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57960225" /></Metadata><TypeSignature Language="C#" Value="public sealed class ContextUtil" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ContextUtil extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.ContextUtil" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ContextUtil" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextUtil sealed" />
  <TypeSignature Language="F#" Value="type ContextUtil = class" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="bbefd-101">COM+ 개체 컨텍스트에 대한 정보를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-101">Obtains information about the COM+ object context.</span></span> <span data-ttu-id="bbefd-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbefd-103"><xref:System.EnterpriseServices.ContextUtil> COM + 컨텍스트 정보를 얻기 위해 사용할 기본 클래스가입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-103"><xref:System.EnterpriseServices.ContextUtil> is the preferred class to use for obtaining COM+ context information.</span></span> <span data-ttu-id="bbefd-104">이 클래스의 멤버는 모든 `static` (`shared` Visual Basic에서)를 사용 하기 전에 인스턴스화할 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-104">Because the members of this class are all `static` (`shared` in Visual Basic), it is not necessary to instantiate it before using them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbefd-105">다음 코드 예제에 사용 하는 방법을 보여 줍니다 <xref:System.EnterpriseServices.ContextUtil> 트랜잭션 만들려면 <xref:System.EnterpriseServices.ServicedComponent>합니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-105">The following code example demonstrates how to use <xref:System.EnterpriseServices.ContextUtil> to create a transactional <xref:System.EnterpriseServices.ServicedComponent>.</span></span>  
  
 [!code-cpp[EnterpriseServices_Transaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CPP/transaction.cpp#1)]
 [!code-csharp[EnterpriseServices_Transaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CS/transaction.cs#1)]
 [!code-vb[EnterpriseServices_Transaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Transaction/VB/transaction.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ActivityId">
      <MemberSignature Language="C#" Value="public static Guid ActivityId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid ActivityId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.ActivityId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ActivityId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid ActivityId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ActivityId : Guid" Usage="System.EnterpriseServices.ContextUtil.ActivityId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbefd-106">구성 요소를 포함하는 작업의 GUID를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-106">Gets a GUID representing the activity containing the component.</span></span></summary>
        <value><span data-ttu-id="bbefd-107">현재 컨텍스트가 작업의 일부이면 해당 작업의 GUID이고, 그렇지 않으면 <see langword="GUID_NULL" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-107">The GUID for an activity if the current context is part of an activity; otherwise, <see langword="GUID_NULL" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bbefd-108">다음 코드 예제에서는 값을 가져옵니다는 <xref:System.EnterpriseServices.ContextUtil.ActivityId%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-108">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.ActivityId%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#1)]
 [!code-csharp[EnterpriseServicesContextUtil#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#1)]
 [!code-vb[EnterpriseServicesContextUtil#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="bbefd-109">사용 가능한 COM+ 컨텍스트가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-109">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="bbefd-110">이 플랫폼이 Windows 2000 이상이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-110">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationId">
      <MemberSignature Language="C#" Value="public static Guid ApplicationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid ApplicationId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.ApplicationId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid ApplicationId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationId : Guid" Usage="System.EnterpriseServices.ContextUtil.ApplicationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbefd-111">현재 애플리케이션의 GUID를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-111">Gets a GUID for the current application.</span></span></summary>
        <value><span data-ttu-id="bbefd-112">현재 애플리케이션의 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-112">The GUID for the current application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bbefd-113">다음 코드 예제에서는이 속성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-113">The following code example demonstrates the use of this property.</span></span>  
  
 [!code-cpp[EnterpriseServices_Pooling#3](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CPP/inspector.cpp#3)]
 [!code-csharp[EnterpriseServices_Pooling#3](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CS/inspector.cs#3)]
 [!code-vb[EnterpriseServices_Pooling#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Pooling/VB/inspector.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="bbefd-114">사용 가능한 COM+ 컨텍스트가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-114">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="bbefd-115">플랫폼이 Windows XP 이상이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-115">The platform is not Windows XP or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationInstanceId">
      <MemberSignature Language="C#" Value="public static Guid ApplicationInstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid ApplicationInstanceId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.ApplicationInstanceId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationInstanceId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid ApplicationInstanceId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationInstanceId : Guid" Usage="System.EnterpriseServices.ContextUtil.ApplicationInstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbefd-116">현재 애플리케이션 인스턴스의 GUID를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-116">Gets a GUID for the current application instance.</span></span></summary>
        <value><span data-ttu-id="bbefd-117">현재 애플리케이션 인스턴스의 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-117">The GUID for the current application instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bbefd-118">다음 코드 예제에서는 값을 가져옵니다는 <xref:System.EnterpriseServices.ContextUtil.ApplicationInstanceId%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-118">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.ApplicationInstanceId%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#2](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#2)]
 [!code-csharp[EnterpriseServicesContextUtil#2](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#2)]
 [!code-vb[EnterpriseServicesContextUtil#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="bbefd-119">사용 가능한 COM+ 컨텍스트가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-119">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="bbefd-120">플랫폼이 Windows XP 이상이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-120">The platform is not Windows XP or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContextId">
      <MemberSignature Language="C#" Value="public static Guid ContextId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid ContextId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.ContextId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ContextId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid ContextId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextId : Guid" Usage="System.EnterpriseServices.ContextUtil.ContextId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbefd-121">현재 컨텍스트의 GUID를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-121">Gets a GUID for the current context.</span></span></summary>
        <value><span data-ttu-id="bbefd-122">현재 컨텍스트의 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-122">The GUID for the current context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bbefd-123">다음 예제 코드에서는이 특성을 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-123">The following example code demonstrates the use of this attribute.</span></span>  
  
 [!code-cpp[EnterpriseServices_Pooling#3](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CPP/inspector.cpp#3)]
 [!code-csharp[EnterpriseServices_Pooling#3](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CS/inspector.cs#3)]
 [!code-vb[EnterpriseServices_Pooling#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Pooling/VB/inspector.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="bbefd-124">사용 가능한 COM+ 컨텍스트가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-124">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="bbefd-125">이 플랫폼이 Windows 2000 이상이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-125">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeactivateOnReturn">
      <MemberSignature Language="C#" Value="public static bool DeactivateOnReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool DeactivateOnReturn" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.DeactivateOnReturn" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DeactivateOnReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool DeactivateOnReturn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DeactivateOnReturn : bool with get, set" Usage="System.EnterpriseServices.ContextUtil.DeactivateOnReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbefd-126">COM+ 컨텍스트의 <see langword="done" /> 비트를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-126">Gets or sets the <see langword="done" /> bit in the COM+ context.</span></span></summary>
        <value><span data-ttu-id="bbefd-127">메서드가 반환될 때 개체가 비활성화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-127"><see langword="true" /> if the object is to be deactivated when the method returns; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bbefd-128">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-128">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbefd-129">COM + `done` 비트 기간 개체가 활성 상태로 유지 되는 작업을 완료 한 후 확인 하 고 트랜잭션 기간에 영향을 줄 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-129">The COM+ `done` bit determines how long the object remains active after finishing its work and can affect the duration of a transaction.</span></span> <span data-ttu-id="bbefd-130">메서드 호출이 반환 될 때 COM + 검사는 `done` 비트입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-130">When a method call returns, COM+ inspects the `done` bit.</span></span> <span data-ttu-id="bbefd-131">경우는 `done` 비트가 `true`, COM + 개체를 비활성화 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-131">If the `done` bit is `true`, COM+ deactivates the object.</span></span> <span data-ttu-id="bbefd-132">경우는 `done` 비트가 `false`, 개체 될 비활성화 되지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-132">If the `done` bit is `false`, the object is not deactivated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbefd-133">다음 코드 예제에서는 합니다 <xref:System.EnterpriseServices.ContextUtil.DeactivateOnReturn%2A> 되도록 속성을 <xref:System.EnterpriseServices.ServicedComponent> 메서드 호출 후에 비활성화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-133">The following code example demonstrates the use of the <xref:System.EnterpriseServices.ContextUtil.DeactivateOnReturn%2A> property to ensure that a <xref:System.EnterpriseServices.ServicedComponent> is deactivated after a method call.</span></span>  
  
 [!code-cpp[EnterpriseServices_Transaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CPP/transaction.cpp#1)]
 [!code-csharp[EnterpriseServices_Transaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CS/transaction.cs#1)]
 [!code-vb[EnterpriseServices_Transaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Transaction/VB/transaction.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="bbefd-134">사용 가능한 COM+ 컨텍스트가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-134">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="bbefd-135">이 플랫폼이 Windows 2000 이상이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-135">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DisableCommit">
      <MemberSignature Language="C#" Value="public static void DisableCommit ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisableCommit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.DisableCommit" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DisableCommit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DisableCommit();" />
      <MemberSignature Language="F#" Value="static member DisableCommit : unit -&gt; unit" Usage="System.EnterpriseServices.ContextUtil.DisableCommit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbefd-136">COM+ 컨텍스트에서 <see langword="consistent" /> 비트와 <see langword="done" /> 비트를 모두 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-136">Sets both the <see langword="consistent" /> bit and the <see langword="done" /> bit to <see langword="false" /> in the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbefd-137">COM + 컨텍스트 응답에서 현재 트랜잭션을 중단 요청 되 면 하지만 메서드가 반환 될 때 개체가 비활성화 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-137">If asked, the COM+ context votes to abort the current transaction, but the object is not deactivated on method return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbefd-138">다음 코드 예제에서 호출 된 <xref:System.EnterpriseServices.ContextUtil.DisableCommit%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bbefd-138">The following code example calls the <xref:System.EnterpriseServices.ContextUtil.DisableCommit%2A> method.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#3](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#3)]
 [!code-csharp[EnterpriseServicesContextUtil#3](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#3)]
 [!code-vb[EnterpriseServicesContextUtil#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="bbefd-139">사용 가능한 COM+ 컨텍스트가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-139">No COM+ context is available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnableCommit">
      <MemberSignature Language="C#" Value="public static void EnableCommit ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableCommit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.EnableCommit" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableCommit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableCommit();" />
      <MemberSignature Language="F#" Value="static member EnableCommit : unit -&gt; unit" Usage="System.EnterpriseServices.ContextUtil.EnableCommit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbefd-140">COM+ 컨텍스트에서 <see langword="consistent" /> 비트를 <see langword="true" />로 설정하고 <see langword="done" /> 비트를 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-140">Sets the <see langword="consistent" /> bit to <see langword="true" /> and the <see langword="done" /> bit to <see langword="false" /> in the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbefd-141">COM + 컨텍스트에 현재 트랜잭션을 커밋하려면가 요청 되 면 하지만 메서드가 반환 될 때 개체가 비활성화 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-141">If asked, the COM+ context will commit the current transaction, but the object is not deactivated on method return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbefd-142">다음 코드 예제에서 호출 된 <xref:System.EnterpriseServices.ContextUtil.EnableCommit%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bbefd-142">The following code example calls the <xref:System.EnterpriseServices.ContextUtil.EnableCommit%2A> method.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#4](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#4)]
 [!code-csharp[EnterpriseServicesContextUtil#4](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#4)]
 [!code-vb[EnterpriseServicesContextUtil#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="bbefd-143">사용 가능한 COM+ 컨텍스트가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-143">No COM+ context is available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNamedProperty">
      <MemberSignature Language="C#" Value="public static object GetNamedProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetNamedProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.GetNamedProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNamedProperty (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetNamedProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetNamedProperty : string -&gt; obj" Usage="System.EnterpriseServices.ContextUtil.GetNamedProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="bbefd-144">요청된 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-144">The name of the requested property.</span></span></param>
        <summary><span data-ttu-id="bbefd-145">COM+ 컨텍스트에서 명명된 속성을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-145">Returns a named property from the COM+ context.</span></span></summary>
        <returns><span data-ttu-id="bbefd-146">컨텍스트의 명명된 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-146">The named property for the context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbefd-147">이 하 여 ASP Active Server Pages ()를 제공 하는 인터넷 정보 서비스 (IIS) 내장 개체를 얻는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-147">This is useful for obtaining the Internet Information Services (IIS) intrinsic objects provided by Active Server Pages (ASP).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="bbefd-148">사용 가능한 COM+ 컨텍스트가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-148">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="bbefd-149">이 플랫폼이 Windows 2000 이상이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-149">The platform is not Windows 2000 or later.</span></span></exception>
        <altmember cref="M:System.EnterpriseServices.ContextUtil.SetNamedProperty(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsCallerInRole">
      <MemberSignature Language="C#" Value="public static bool IsCallerInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsCallerInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.IsCallerInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsCallerInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsCallerInRole(System::String ^ role);" />
      <MemberSignature Language="F#" Value="static member IsCallerInRole : string -&gt; bool" Usage="System.EnterpriseServices.ContextUtil.IsCallerInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role"><span data-ttu-id="bbefd-150">검사할 역할의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-150">The name of the role to check.</span></span></param>
        <summary><span data-ttu-id="bbefd-151">호출자가 지정된 역할에 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-151">Determines whether the caller is in the specified role.</span></span></summary>
        <returns><span data-ttu-id="bbefd-152">호출자가 지정된 역할에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-152"><see langword="true" /> if the caller is in the specified role; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="bbefd-153">사용 가능한 COM+ 컨텍스트가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-153">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultContext">
      <MemberSignature Language="C#" Value="public static bool IsDefaultContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefaultContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.IsDefaultContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefaultContext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefaultContext();" />
      <MemberSignature Language="F#" Value="static member IsDefaultContext : unit -&gt; bool" Usage="System.EnterpriseServices.ContextUtil.IsDefaultContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbefd-154">서비스되는 구성 요소가 기본 컨텍스트에서 활성화되는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-154">Determines whether the serviced component is activated in the default context.</span></span> <span data-ttu-id="bbefd-155">COM+ 카탈로그 정보가 없는 서비스되는 구성 요소는 기본 컨텍스트에서 활성화됩니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-155">Serviced components that do not have COM+ catalog information are activated in the default context.</span></span></summary>
        <returns><span data-ttu-id="bbefd-156">서비스되는 구성 요소가 기본 컨텍스트에서 활성화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-156"><see langword="true" /> if the serviced component is activated in the default context; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInTransaction">
      <MemberSignature Language="C#" Value="public static bool IsInTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsInTransaction" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.IsInTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsInTransaction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsInTransaction { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInTransaction : bool" Usage="System.EnterpriseServices.ContextUtil.IsInTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbefd-157">현재 컨텍스트가 트랜잭션인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-157">Gets a value that indicates whether the current context is transactional.</span></span></summary>
        <value><span data-ttu-id="bbefd-158">현재 컨텍스트가 트랜잭션이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-158"><see langword="true" /> if the current context is transactional; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bbefd-159">다음 코드 예제에서는 값을 가져옵니다는 <xref:System.EnterpriseServices.ContextUtil.IsInTransaction%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-159">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.IsInTransaction%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#5](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#5)]
 [!code-csharp[EnterpriseServicesContextUtil#5](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#5)]
 [!code-vb[EnterpriseServicesContextUtil#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="bbefd-160">사용 가능한 COM+ 컨텍스트가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-160">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSecurityEnabled">
      <MemberSignature Language="C#" Value="public static bool IsSecurityEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsSecurityEnabled" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.IsSecurityEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsSecurityEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsSecurityEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecurityEnabled : bool" Usage="System.EnterpriseServices.ContextUtil.IsSecurityEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbefd-161">역할 기반 보안이 현재 컨텍스트에서 활성화되어 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-161">Gets a value that indicates whether role-based security is active in the current context.</span></span></summary>
        <value><span data-ttu-id="bbefd-162">현재 컨텍스트에서 보안이 활성화되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-162"><see langword="true" /> if the current context has security enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bbefd-163">다음 코드 예제에서는 값을 가져옵니다는 <xref:System.EnterpriseServices.ContextUtil.IsSecurityEnabled%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-163">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.IsSecurityEnabled%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#6](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#6)]
 [!code-csharp[EnterpriseServicesContextUtil#6](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#6)]
 [!code-vb[EnterpriseServicesContextUtil#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="bbefd-164">사용 가능한 COM+ 컨텍스트가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-164">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MyTransactionVote">
      <MemberSignature Language="C#" Value="public static System.EnterpriseServices.TransactionVote MyTransactionVote { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.EnterpriseServices.TransactionVote MyTransactionVote" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.MyTransactionVote" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property MyTransactionVote As TransactionVote" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::EnterpriseServices::TransactionVote MyTransactionVote { System::EnterpriseServices::TransactionVote get(); void set(System::EnterpriseServices::TransactionVote value); };" />
      <MemberSignature Language="F#" Value="member this.MyTransactionVote : System.EnterpriseServices.TransactionVote with get, set" Usage="System.EnterpriseServices.ContextUtil.MyTransactionVote" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionVote</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbefd-165">COM+ 컨텍스트의 <see langword="consistent" /> 비트를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-165">Gets or sets the <see langword="consistent" /> bit in the COM+ context.</span></span></summary>
        <value><span data-ttu-id="bbefd-166"><see cref="T:System.EnterpriseServices.TransactionVote" /> 값(<see langword="Commit" /> 또는 <see langword="Abort" />) 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-166">One of the <see cref="T:System.EnterpriseServices.TransactionVote" /> values, either <see langword="Commit" /> or <see langword="Abort" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbefd-167">때 <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> 로 설정 된 `Commit`, COM + `consistent` 비트가 `true` 고 COM + 컨텍스트 트랜잭션 커밋입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-167">When <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> is set to `Commit`, the COM+ `consistent` bit is set to `true` and the COM+ context votes to commit the transaction.</span></span> <span data-ttu-id="bbefd-168">경우 <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> 로 설정 된 `Abort`서 `consistent` 비트가 `false` 및 COM + 컨텍스트의 트랜잭션을 중단 하 고 응답 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-168">If <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> is set to `Abort`, the `consistent` bit is set to `false` and the COM+ context votes to abort the transaction.</span></span> <span data-ttu-id="bbefd-169">기본값은 `consistent` 비트가 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-169">The default value of the `consistent` bit is `true`.</span></span>  
  
 <span data-ttu-id="bbefd-170">`consistent` 실행 되는 트랜잭션을 커밋하거나 중단을 결정 하며 `done` 비트 응답을 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-170">The `consistent` bit casts a vote to commit or abort the transaction in which it executes, and the `done` bit finalizes the vote.</span></span> <span data-ttu-id="bbefd-171">COM + 검사 합니다 `consistent` 경우 비트를 `done` 비트가 `true` 메서드 호출이 반환 하거나 개체가 비활성화 되는 경우.</span><span class="sxs-lookup"><span data-stu-id="bbefd-171">COM+ inspects the `consistent` bit when the `done` bit is set to `true` on a method call return or when the object deactivates.</span></span> <span data-ttu-id="bbefd-172">하지만 개체의 `consistent` 비트 수 변경 반복 해 서 각 메서드 호출 내에서 마지막 개수를 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-172">Although an object's `consistent` bit can change repeatedly within each method call, only the last change counts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbefd-173">다음 코드 예제에 사용 하는 방법을 보여 줍니다 <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> 만들 트랜잭션 속성 <xref:System.EnterpriseServices.ServicedComponent>합니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-173">The following code example demonstrates how to use <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> property to create a transactional <xref:System.EnterpriseServices.ServicedComponent>.</span></span>  
  
 [!code-cpp[EnterpriseServices_Transaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CPP/transaction.cpp#1)]
 [!code-csharp[EnterpriseServices_Transaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CS/transaction.cs#1)]
 [!code-vb[EnterpriseServices_Transaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Transaction/VB/transaction.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="bbefd-174">사용 가능한 COM+ 컨텍스트가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-174">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="bbefd-175">이 플랫폼이 Windows 2000 이상이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-175">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PartitionId">
      <MemberSignature Language="C#" Value="public static Guid PartitionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid PartitionId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.PartitionId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PartitionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid PartitionId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.PartitionId : Guid" Usage="System.EnterpriseServices.ContextUtil.PartitionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbefd-176">현재 파티션의 GUID를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-176">Gets a GUID for the current partition.</span></span></summary>
        <value><span data-ttu-id="bbefd-177">현재 파티션의 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-177">The GUID for the current partition.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="bbefd-178">사용 가능한 COM+ 컨텍스트가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-178">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="bbefd-179">플랫폼이 Windows XP 이상이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-179">The platform is not Windows XP or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAbort">
      <MemberSignature Language="C#" Value="public static void SetAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.SetAbort" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAbort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAbort();" />
      <MemberSignature Language="F#" Value="static member SetAbort : unit -&gt; unit" Usage="System.EnterpriseServices.ContextUtil.SetAbort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbefd-180">COM+ 컨텍스트에서 <see langword="consistent" /> 비트를 <see langword="false" />로 설정하고 <see langword="done" /> 비트를 <see langword="true" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-180">Sets the <see langword="consistent" /> bit to <see langword="false" /> and the <see langword="done" /> bit to <see langword="true" /> in the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbefd-181">컨텍스트는 현재 트랜잭션을 중단 응답 표시 되는 메시지 및 메서드가 반환 될 때 개체가 비활성화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-181">If asked, the context votes to abort the current transaction, and the object is deactivated on method return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbefd-182">다음 코드 예제에서는이 메서드를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-182">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#13](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#13)]
 [!code-csharp[EnterpriseServices_Crm#13](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#13)]
 [!code-vb[EnterpriseServices_Crm#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="bbefd-183">사용 가능한 COM+ 컨텍스트가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-183">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetComplete">
      <MemberSignature Language="C#" Value="public static void SetComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.SetComplete" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetComplete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetComplete();" />
      <MemberSignature Language="F#" Value="static member SetComplete : unit -&gt; unit" Usage="System.EnterpriseServices.ContextUtil.SetComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bbefd-184">COM+ 컨텍스트에서 <see langword="consistent" /> 비트와 <see langword="done" /> 비트를 모두 <see langword="true" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-184">Sets the <see langword="consistent" /> bit and the <see langword="done" /> bit to <see langword="true" /> in the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbefd-185">요청 되 면 COM + 컨텍스트는 현재 트랜잭션을 커밋하고 메서드가 반환 될 때 개체가 비활성화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-185">If asked, the COM+ context will commit the current transaction, and the object is deactivated on method return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bbefd-186">다음 코드 예제에서는이 메서드를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-186">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#13](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#13)]
 [!code-csharp[EnterpriseServices_Crm#13](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#13)]
 [!code-vb[EnterpriseServices_Crm#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="bbefd-187">사용 가능한 COM+ 컨텍스트가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-187">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetNamedProperty">
      <MemberSignature Language="C#" Value="public static void SetNamedProperty (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetNamedProperty(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.SetNamedProperty(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetNamedProperty (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetNamedProperty(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member SetNamedProperty : string * obj -&gt; unit" Usage="System.EnterpriseServices.ContextUtil.SetNamedProperty (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="bbefd-188">설정할 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-188">The name of the property to set.</span></span></param>
        <param name="value"><span data-ttu-id="bbefd-189">설정할 속성 값을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-189">Object that represents the property value to set.</span></span></param>
        <summary><span data-ttu-id="bbefd-190">COM+ 컨텍스트에 대한 명명된 속성을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-190">Sets the named property for the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbefd-191">이 하 여 ASP Active Server Pages ()를 제공 하는 인터넷 정보 서비스 (IIS) 내장 개체를 얻는 데 도움이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-191">This is useful for obtaining the Internet Information Services (IIS) intrinsic objects provided by Active Server Pages (ASP).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="bbefd-192">사용 가능한 COM+ 컨텍스트가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-192">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="bbefd-193">이 플랫폼이 Windows 2000 이상이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-193">The platform is not Windows 2000 or later.</span></span></exception>
        <altmember cref="M:System.EnterpriseServices.ContextUtil.GetNamedProperty(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SystemTransaction">
      <MemberSignature Language="C#" Value="public static System.Transactions.Transaction SystemTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Transactions.Transaction SystemTransaction" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.SystemTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SystemTransaction As Transaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Transactions::Transaction ^ SystemTransaction { System::Transactions::Transaction ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SystemTransaction : System.Transactions.Transaction" Usage="System.EnterpriseServices.ContextUtil.SystemTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Transactions.Transaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbefd-194">현재 트랜잭션 컨텍스트를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-194">Gets the current transaction context.</span></span></summary>
        <value><span data-ttu-id="bbefd-195">현재 트랜잭션 컨텍스트를 나타내는 <see cref="T:System.Transactions.Transaction" />입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-195">A <see cref="T:System.Transactions.Transaction" /> that represents the current transaction context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbefd-196">이 속성에 액세스할 때 트랜잭션 컨텍스트가 없는 있으면 새 트랜잭션 컨텍스트 생성 및 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-196">If no transaction context exists when this property is accessed, a new transaction context is created and returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="bbefd-197">사용 가능한 COM+ 컨텍스트가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-197">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="bbefd-198">이 플랫폼이 Windows 2000 이상이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-198">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public static object Transaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property object Transaction" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Transaction As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Object ^ Transaction { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Transaction : obj" Usage="System.EnterpriseServices.ContextUtil.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbefd-199">현재 COM+ DTC 트랜잭션을 설명하는 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-199">Gets an object describing the current COM+ DTC transaction.</span></span></summary>
        <value><span data-ttu-id="bbefd-200">현재 트랜잭션을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-200">An object that represents the current transaction.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbefd-201">반환된 된 개체를 지원 합니다 <xref:System.EnterpriseServices.ITransaction> 인터페이스 트랜잭션이 COM + DTC 트랜잭션이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-201">The returned object supports the <xref:System.EnterpriseServices.ITransaction> interface if the transaction is a COM+ DTC transaction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="bbefd-202">사용 가능한 COM+ 컨텍스트가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-202">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="bbefd-203">이 플랫폼이 Windows 2000 이상이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-203">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionId">
      <MemberSignature Language="C#" Value="public static Guid TransactionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid TransactionId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.TransactionId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TransactionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid TransactionId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.TransactionId : Guid" Usage="System.EnterpriseServices.ContextUtil.TransactionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bbefd-204">현재 COM+ DTC 트랜잭션의 GUID를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-204">Gets the GUID of the current COM+ DTC transaction.</span></span></summary>
        <value><span data-ttu-id="bbefd-205">현재 COM+ DTC 트랜잭션이 있는 경우 해당 트랜잭션을 나타내는 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-205">A GUID representing the current COM+ DTC transaction, if one exists.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bbefd-206">다음 코드 예제에서는 값을 가져옵니다는 <xref:System.EnterpriseServices.ContextUtil.TransactionId%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="bbefd-206">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.TransactionId%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#7](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#7)]
 [!code-csharp[EnterpriseServicesContextUtil#7](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#7)]
 [!code-vb[EnterpriseServicesContextUtil#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="bbefd-207">사용 가능한 COM+ 컨텍스트가 없는 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-207">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="bbefd-208">이 플랫폼이 Windows 2000 이상이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="bbefd-208">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>