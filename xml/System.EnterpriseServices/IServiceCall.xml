<Type Name="IServiceCall" FullName="System.EnterpriseServices.IServiceCall">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0fad9fec0dffecf46157961388122b8b25009997" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55336738" /></Metadata><TypeSignature Language="C#" Value="public interface IServiceCall" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IServiceCall" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.IServiceCall" />
  <TypeSignature Language="VB.NET" Value="Public Interface IServiceCall" />
  <TypeSignature Language="C++ CLI" Value="public interface class IServiceCall" />
  <TypeSignature Language="F#" Value="type IServiceCall = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("BD3E2E12-42DD-40f4-A09A-95A50C58304B")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.EnterpriseServices.Activity" />에 의해 만들어진 작업을 통해 전송된 일괄 작업을 구현합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 <xref:System.EnterpriseServices.IServiceCall> 해당 서비스를 사용 하기 위해 구성 요소를 만들지 않고 COM + 서비스를 사용 하는 일괄 처리 작업을 수행 합니다. 인터넷 정보 서비스 (IIS) 및 ASP.NET과 같은 스크립트 환경이이 인터페이스를 사용 하 여 COM + 구성 요소를 만들 필요 없이 COM + 서비스를 활용할 수 있습니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="OnCall">
      <MemberSignature Language="C#" Value="public void OnCall ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCall() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IServiceCall.OnCall" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnCall ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnCall();" />
      <MemberSignature Language="F#" Value="abstract member OnCall : unit -&gt; unit" Usage="iServiceCall.OnCall " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 메서드에 구현된 일괄 작업을 실행하기 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드에서 실행 되는 일괄 처리 작업 호출에 의해 생성 되는 동작의 컨텍스트 및 스레드 아파트에서 실행 <xref:System.EnterpriseServices.Activity>합니다. 이 방법에서는 일괄 처리 작업을 호출 하 여 실행 됩니다 <xref:System.EnterpriseServices.Activity.SynchronousCall%2A?displayProperty=nameWithType> 또는 <xref:System.EnterpriseServices.Activity.AsynchronousCall%2A?displayProperty=nameWithType>합니다.  
  
> [!CAUTION]
>  이 메서드는 스레드로부터 안전 하 여 활동 개체가 만들어진 경우에는 확인 해야 합니다 <xref:System.EnterpriseServices.Activity> 호출 대부분 이러한 상황에서는 때문에 동기화 된 컨텍스트를 사용 하 여 만들어지지 않습니다 <xref:System.EnterpriseServices.IServiceCall.OnCall%2A> 동시에 실행할 수 있습니다.  
  
 활동의 상황에 맞는 구성을 만들어 시스템에서 최상의 성능을 얻으려면 <xref:System.EnterpriseServices.Activity> 수행 하는 일괄 처리 작업에는 일치 해야 합니다는 <xref:System.EnterpriseServices.IServiceCall.OnCall%2A> 메서드. 예를 들어 일괄 처리에서 작동 합니다 <xref:System.EnterpriseServices.IServiceCall.OnCall%2A> 풀링 가능한 개체를 만들어 작업을 사용 하 여 메서드 <xref:System.EnterpriseServices.Activity> (MTA)는 다중 스레드 아파트를 사용 하도록 구성 해야 합니다.  
  
 풀링 가능한 개체에 대 한 자세한 요구 사항에 대 한 풀링 "개체" msdn에서 Platform SDK에 항목을 참조 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>