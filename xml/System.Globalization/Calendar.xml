<Type Name="Calendar" FullName="System.Globalization.Calendar">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d5466debc4be57e754b42a75ff704271e2ab461b" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59015746" /></Metadata><TypeSignature Language="C#" Value="public abstract class Calendar : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Calendar extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.Calendar" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Calendar&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Calendar abstract : ICloneable" />
  <TypeSignature Language="F#" Value="type Calendar = class&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>사업부의 시간(예: 주, 월, 년)을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일정, 주, 월 및 연도 같은 단위로 시간을 분할 합니다. 수, 길이 및 시작 부분에는 각 달력의 달라 집니다.  
  
> [!NOTE]
>  .NET의 달력 클래스를 사용 하는 방법에 대 한 내용은 [달력을 사용 하 여 작업](~/docs/standard/datetime/working-with-calendars.md)합니다.  
  
 언제 든 지 특정 달력을 사용 하는 숫자 값의 집합으로 나타낼 수 있습니다. 춘에서 발생 하는 예를 들어 (1999 년 3, 20, 8, 46, 0, 0.0) 양력, 1999 년 3 월 20, 기 8:46:00:0.0에서. 구현의 <xref:System.Globalization.Calendar> 비슷한 일련의 숫자 값을 특정 달력의 범위에서 날짜를 매핑할 수 있습니다 하 고 <xref:System.DateTime> 이러한 일련의 숫자 값에서 정보를 사용 하 여 텍스트 표현에 매핑할 수 있습니다 <xref:System.Globalization.Calendar> 및 <xref:System.Globalization.DateTimeFormatInfo>합니다. 텍스트 표현 수 예를 들어 "46 오전 8 년 3 월 20 1999 AD" EN-US 문화권의 문화권 구분 또는 문화권 구분 예를 들어, "1999-03-20T08:46:00" ISO 8601 형식에서입니다.  
  
 <xref:System.Globalization.Calendar> 구현 하나 이상의 연대를 정의할 수 있습니다. <xref:System.Globalization.Calendar> 정수로 열거 연대를 식별 하는 클래스는 현재 연대 (<xref:System.Globalization.Calendar.CurrentEra>) 값은 0입니다.  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

 하기 위해 달력 연도 및 지구 태양 중심으로 회전 하는 실제 시간 또는 달 지구 중심으로 회전 하는 실제 시간 간의 차이 윤년에 표준 달력 연도의 다른 기간 (일) 각 <xref:System.Globalization.Calendar> 구현 윤년을 다르게 정의 합니다.  
  
 일관성을 위해 각 간격 (예: 첫 달)의 첫 번째 단위 값 1이 할당 됩니다.  
  
 합니다 <xref:System.Globalization> 다음을 포함 하는 네임 스페이스 <xref:System.Globalization.Calendar> 구현 합니다.  
  
-   <xref:System.Globalization.ChineseLunisolarCalendar>  
  
-   <xref:System.Globalization.EastAsianLunisolarCalendar>  
  
-   <xref:System.Globalization.GregorianCalendar>  
  
-   <xref:System.Globalization.HebrewCalendar>  
  
-   <xref:System.Globalization.HijriCalendar>  
  
-   <xref:System.Globalization.JapaneseCalendar>  
  
-   <xref:System.Globalization.JapaneseLunisolarCalendar>  
  
-   <xref:System.Globalization.JulianCalendar>  
  
-   <xref:System.Globalization.KoreanCalendar>  
  
-   <xref:System.Globalization.KoreanLunisolarCalendar>  
  
-   <xref:System.Globalization.PersianCalendar>  
  
-   <xref:System.Globalization.TaiwanCalendar>  
  
-   <xref:System.Globalization.TaiwanLunisolarCalendar>  
  
-   <xref:System.Globalization.ThaiBuddhistCalendar>  
  
-   <xref:System.Globalization.UmAlQuraCalendar>  
  
   
  
## Examples  
 다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
    <altmember cref="T:System.Globalization.ChineseLunisolarCalendar" />
    <altmember cref="T:System.Globalization.EastAsianLunisolarCalendar" />
    <altmember cref="T:System.Globalization.GregorianCalendar" />
    <altmember cref="T:System.Globalization.HebrewCalendar" />
    <altmember cref="T:System.Globalization.HijriCalendar" />
    <altmember cref="T:System.Globalization.JapaneseCalendar" />
    <altmember cref="T:System.Globalization.JapaneseLunisolarCalendar" />
    <altmember cref="T:System.Globalization.JulianCalendar" />
    <altmember cref="T:System.Globalization.KoreanCalendar" />
    <altmember cref="T:System.Globalization.KoreanLunisolarCalendar" />
    <altmember cref="T:System.Globalization.PersianCalendar" />
    <altmember cref="T:System.Globalization.TaiwanCalendar" />
    <altmember cref="T:System.Globalization.TaiwanLunisolarCalendar" />
    <altmember cref="T:System.Globalization.ThaiBuddhistCalendar" />
    <altmember cref="T:System.Globalization.UmAlQuraCalendar" />
    <related type="Article" href="~/docs/standard/datetime/working-with-calendars.md">달력 작업</related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Calendar-3360a84a">예제: Calendar Week Range 유틸리티</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Calendar ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Calendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Globalization.Calendar" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 멤버를 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>에 [!INCLUDE[net_portable](~/includes/net-portable-md.md)], <see cref="T:System.Globalization.Calendar" /> 클래스 생성자를 사용할 수 있고 클래스에서 파생 된 <see cref="T:System.Globalization.Calendar" /> public이 아니어야 합니다. 검색 해야 하는 일반 달력 개체와 같은 특정 유형의 일정을 원하는 경우는 <see cref="P:System.Globalization.CultureInfo.Calendar" /> 또는 <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> 속성인 또는 <see cref="P:System.Globalization.CultureInfo.OptionalCalendars" /> 속성 배열입니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="AddDays">
      <MemberSignature Language="C#" Value="public virtual DateTime AddDays (DateTime time, int days);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddDays(valuetype System.DateTime time, int32 days) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddDays (time As DateTime, days As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddDays(DateTime time, int days);" />
      <MemberSignature Language="F#" Value="abstract member AddDays : DateTime * int -&gt; DateTime&#xA;override this.AddDays : DateTime * int -&gt; DateTime" Usage="calendar.AddDays (time, days)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="days" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">날짜를 더할 <see cref="T:System.DateTime" />입니다.</param>
        <param name="days">더할 날짜 수입니다.</param>
        <summary>지정된 <see cref="T:System.DateTime" />에서 지정된 날짜 수만큼 경과한 <see cref="T:System.DateTime" />을 반환합니다.</summary>
        <returns>지정된 <see cref="T:System.DateTime" />에 지정된 날짜 수를 더한 결과로 만들어진 <see cref="T:System.DateTime" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `days` 값이 추가 되는 지정 된 <xref:System.DateTime>합니다. 하는 경우 `days` 음수인 경우 결과 <xref:System.DateTime> 지정 된 이전의 <xref:System.DateTime>합니다.  
  
 결과의 월 부분 <xref:System.DateTime> 결과 일 월을 지정 된 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다. 결과의 연도 부분 <xref:System.DateTime> 월의 지정 된 연도 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다. 결과의 연대 부분이 <xref:System.DateTime> 지정 된 연대를 벗어나는 결과 연도 <xref:System.DateTime>합니다. 결과 시간 부분은 <xref:System.DateTime> 동일 하 게 유지 된 <xref:System.DateTime>합니다.  
  
 합니다 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값이 항상 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다. 유지할 수 있습니다는 <xref:System.DateTime.Kind%2A> 의 속성을 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 메서드를 다음 예제와 같이 합니다.  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AddMethods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#1)]  
  
   
  
## Examples  
 다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">생성되는 <see cref="T:System.DateTime" />이 이 달력의 지원되는 범위 밖에 있는 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="days" /> 값이 지원되는 <see cref="T:System.DateTime" /> 반환 값의 범위 밖에 있는 경우</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddHours">
      <MemberSignature Language="C#" Value="public virtual DateTime AddHours (DateTime time, int hours);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddHours(valuetype System.DateTime time, int32 hours) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddHours (time As DateTime, hours As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddHours(DateTime time, int hours);" />
      <MemberSignature Language="F#" Value="abstract member AddHours : DateTime * int -&gt; DateTime&#xA;override this.AddHours : DateTime * int -&gt; DateTime" Usage="calendar.AddHours (time, hours)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="hours" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">시간을 더할 <see cref="T:System.DateTime" />입니다.</param>
        <param name="hours">더할 시간 수입니다.</param>
        <summary>지정된 <see cref="T:System.DateTime" />에서 지정된 시간 수만큼 경과한 <see cref="T:System.DateTime" />을 반환합니다.</summary>
        <returns>지정된 <see cref="T:System.DateTime" />에 지정된 시간 수를 더한 결과로 만들어지는 <see cref="T:System.DateTime" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `hours` 값이 추가 되는 지정 된 <xref:System.DateTime>합니다. 하는 경우 `hours` 음수인 경우 결과 <xref:System.DateTime> 지정 된 이전의 <xref:System.DateTime>합니다.  
  
 결과의 일 부분 <xref:System.DateTime> 결과 지정 된 날짜 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다. 결과의 월 부분 <xref:System.DateTime> 결과 일 월을 지정 된 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다. 결과의 연도 부분 <xref:System.DateTime> 월의 지정 된 연도 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다. 결과의 연대 부분이 <xref:System.DateTime> 지정 된 연대를 벗어나는 결과 연도 <xref:System.DateTime>합니다.  
  
 합니다 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값이 항상 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다. 유지할 수 있습니다는 <xref:System.DateTime.Kind%2A> 의 속성을 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 메서드를 다음 예제와 같이 합니다.  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#2)]
 [!code-vb[System.Globalization.Calendar.AddMethods#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#2)]  
  
   
  
## Examples  
 다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">생성되는 <see cref="T:System.DateTime" />이 이 달력의 지원되는 범위 밖에 있는 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="hours" /> 값이 지원되는 <see cref="T:System.DateTime" /> 반환 값의 범위 밖에 있는 경우</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddMilliseconds">
      <MemberSignature Language="C#" Value="public virtual DateTime AddMilliseconds (DateTime time, double milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddMilliseconds(valuetype System.DateTime time, float64 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddMilliseconds (time As DateTime, milliseconds As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddMilliseconds(DateTime time, double milliseconds);" />
      <MemberSignature Language="F#" Value="abstract member AddMilliseconds : DateTime * double -&gt; DateTime&#xA;override this.AddMilliseconds : DateTime * double -&gt; DateTime" Usage="calendar.AddMilliseconds (time, milliseconds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="milliseconds" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="time">밀리초를 더할 <see cref="T:System.DateTime" />입니다.</param>
        <param name="milliseconds">더할 밀리초 수입니다.</param>
        <summary>지정된 <see cref="T:System.DateTime" />에서 지정된 밀리초 수만큼 경과한 <see cref="T:System.DateTime" />을 반환합니다.</summary>
        <returns>지정된 <see cref="T:System.DateTime" />에 지정된 밀리초 수를 더한 결과로 만들어지는 <see cref="T:System.DateTime" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `milliseconds` 값은 가장 가까운 정수로 반올림 추가 되기 전에 지정 된 <xref:System.DateTime>합니다. 하는 경우 `milliseconds` 음수인 경우 결과 <xref:System.DateTime> 지정 된 이전의 <xref:System.DateTime>합니다.  
  
 결과의 일 부분 <xref:System.DateTime> 결과 지정 된 날짜 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다. 결과의 월 부분 <xref:System.DateTime> 결과 일 월을 지정 된 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다. 결과의 연도 부분 <xref:System.DateTime> 월의 지정 된 연도 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다. 결과의 연대 부분이 <xref:System.DateTime> 지정 된 연대를 벗어나는 결과 연도 <xref:System.DateTime>합니다.  
  
 합니다 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값이 항상 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다. 유지할 수 있습니다는 <xref:System.DateTime.Kind%2A> 의 속성을 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 메서드를 다음 예제와 같이 합니다.  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#3)]
 [!code-vb[System.Globalization.Calendar.AddMethods#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#3)]  
  
   
  
## Examples  
 다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">생성되는 <see cref="T:System.DateTime" />이 이 달력의 지원되는 범위 밖에 있는 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="milliseconds" /> 값이 지원되는 <see cref="T:System.DateTime" /> 반환 값의 범위 밖에 있는 경우</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddMinutes">
      <MemberSignature Language="C#" Value="public virtual DateTime AddMinutes (DateTime time, int minutes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddMinutes(valuetype System.DateTime time, int32 minutes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddMinutes (time As DateTime, minutes As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddMinutes(DateTime time, int minutes);" />
      <MemberSignature Language="F#" Value="abstract member AddMinutes : DateTime * int -&gt; DateTime&#xA;override this.AddMinutes : DateTime * int -&gt; DateTime" Usage="calendar.AddMinutes (time, minutes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="minutes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">분을 더할 <see cref="T:System.DateTime" />입니다.</param>
        <param name="minutes">더할 분 수입니다.</param>
        <summary>지정된 <see cref="T:System.DateTime" />에서 지정된 분 수만큼 경과한 <see cref="T:System.DateTime" />을 반환합니다.</summary>
        <returns>지정된 <see cref="T:System.DateTime" />에 지정된 분 수를 더한 결과로 만들어지는 <see cref="T:System.DateTime" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `minutes` 값이 추가 되는 지정 된 <xref:System.DateTime>합니다. 하는 경우 `minutes` 음수인 경우 결과 <xref:System.DateTime> 지정 된 이전의 <xref:System.DateTime>합니다.  
  
 결과의 일 부분 <xref:System.DateTime> 결과 지정 된 날짜 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다. 결과의 월 부분 <xref:System.DateTime> 결과 일 월을 지정 된 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다. 결과의 연도 부분 <xref:System.DateTime> 월의 지정 된 연도 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다. 결과의 연대 부분이 <xref:System.DateTime> 지정 된 연대를 벗어나는 결과 연도 <xref:System.DateTime>합니다.  
  
 합니다 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값이 항상 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다. 유지할 수 있습니다는 <xref:System.DateTime.Kind%2A> 의 속성을 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 메서드를 다음 예제와 같이 합니다.  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#4)]
 [!code-vb[System.Globalization.Calendar.AddMethods#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#4)]  
  
   
  
## Examples  
 다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">생성되는 <see cref="T:System.DateTime" />이 이 달력의 지원되는 범위 밖에 있는 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="minutes" /> 값이 지원되는 <see cref="T:System.DateTime" /> 반환 값의 범위 밖에 있는 경우</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public abstract DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract DateTime AddMonths(DateTime time, int months);" />
      <MemberSignature Language="F#" Value="abstract member AddMonths : DateTime * int -&gt; DateTime" Usage="calendar.AddMonths (time, months)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">월을 더할 <see cref="T:System.DateTime" />입니다.</param>
        <param name="months">더할 월 수입니다.</param>
        <summary>파생 클래스에 재정의될 때 지정된 <see cref="T:System.DateTime" />에서 지정된 월 수만큼 경과한 <see cref="T:System.DateTime" />을 반환합니다.</summary>
        <returns>지정된 <see cref="T:System.DateTime" />에 지정된 월 수를 더한 결과로 만들어지는 <see cref="T:System.DateTime" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `months` 값이 추가 되는 지정 된 <xref:System.DateTime>합니다. 하는 경우 `months` 음수인 경우 결과 <xref:System.DateTime> 지정 된 이전의 <xref:System.DateTime>합니다.  
  
 결과의 일 부분 <xref:System.DateTime> 결과 일 결과 결과 연도 월에 유효한 날짜가 아닌 경우 영향을 받습니다. 결과 결과 연도 월의 마지막 유효 날짜로 변경 됩니다. 결과의 연도 부분 <xref:System.DateTime> 월의 지정 된 연도 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다. 결과의 연대 부분이 <xref:System.DateTime> 지정 된 연대를 벗어나는 결과 연도 <xref:System.DateTime>합니다. 결과 시간 부분은 <xref:System.DateTime> 동일 하 게 유지 된 <xref:System.DateTime>합니다.  
  
 예를 들어, 현재 달력에는 네 번째 월은 30 일 및 10 월 31 일에 12 개월입니다. 지정 된 일 그 달의 31 번째 날과 값이 지정된 된 월 10 월 이면는 `months` 매개 변수가 6 이면 결과 연도가 결과 일은 1-32이 고 지정된 된 연도, 월은 4 월 일, 월의 마지막 날짜입니다.  
  
 경우의 값을 `months` 매개 변수는 음수 이면 결과 <xref:System.DateTime> 지정 된 것 보다 이전 <xref:System.DateTime>합니다.  
  
 합니다 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값이 항상 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다. 유지할 수 있습니다는 <xref:System.DateTime.Kind%2A> 의 속성을 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 메서드를 다음 예제와 같이 합니다.  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">생성되는 <see cref="T:System.DateTime" />이 이 달력의 지원되는 범위 밖에 있는 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="months" /> 값이 지원되는 <see cref="T:System.DateTime" /> 반환 값의 범위 밖에 있는 경우</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddSeconds">
      <MemberSignature Language="C#" Value="public virtual DateTime AddSeconds (DateTime time, int seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddSeconds(valuetype System.DateTime time, int32 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddSeconds (time As DateTime, seconds As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddSeconds(DateTime time, int seconds);" />
      <MemberSignature Language="F#" Value="abstract member AddSeconds : DateTime * int -&gt; DateTime&#xA;override this.AddSeconds : DateTime * int -&gt; DateTime" Usage="calendar.AddSeconds (time, seconds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="seconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">초를 더할 <see cref="T:System.DateTime" />입니다.</param>
        <param name="seconds">더할 초 수입니다.</param>
        <summary>지정된 <see cref="T:System.DateTime" />에서 지정된 초 수만큼 경과한 <see cref="T:System.DateTime" />을 반환합니다.</summary>
        <returns>지정된 <see cref="T:System.DateTime" />에 지정된 초 수를 더한 결과로 만들어지는 <see cref="T:System.DateTime" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `seconds` 값이 추가 되는 지정 된 <xref:System.DateTime>합니다. 하는 경우 `seconds` 음수인 경우 결과 <xref:System.DateTime> 지정 된 이전의 <xref:System.DateTime>합니다.  
  
 결과의 일 부분 <xref:System.DateTime> 결과 지정 된 날짜 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다. 결과의 월 부분 <xref:System.DateTime> 결과 일 월을 지정 된 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다. 결과의 연도 부분 <xref:System.DateTime> 월의 지정 된 연도 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다. 결과의 연대 부분이 <xref:System.DateTime> 지정 된 연대를 벗어나는 결과 연도 <xref:System.DateTime>합니다.  
  
 합니다 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값이 항상 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다. 유지할 수 있습니다는 <xref:System.DateTime.Kind%2A> 의 속성을 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 메서드를 다음 예제와 같이 합니다.  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#6)]
 [!code-vb[System.Globalization.Calendar.AddMethods#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#6)]  
  
   
  
## Examples  
 다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">생성되는 <see cref="T:System.DateTime" />이 이 달력의 지원되는 범위 밖에 있는 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="seconds" /> 값이 지원되는 <see cref="T:System.DateTime" /> 반환 값의 범위 밖에 있는 경우</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddWeeks">
      <MemberSignature Language="C#" Value="public virtual DateTime AddWeeks (DateTime time, int weeks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddWeeks(valuetype System.DateTime time, int32 weeks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddWeeks (time As DateTime, weeks As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddWeeks(DateTime time, int weeks);" />
      <MemberSignature Language="F#" Value="abstract member AddWeeks : DateTime * int -&gt; DateTime&#xA;override this.AddWeeks : DateTime * int -&gt; DateTime" Usage="calendar.AddWeeks (time, weeks)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="weeks" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">주를 더할 <see cref="T:System.DateTime" />입니다.</param>
        <param name="weeks">더할 주 수입니다.</param>
        <summary>지정된 <see cref="T:System.DateTime" />에서 지정된 주 수만큼 경과한 <see cref="T:System.DateTime" />을 반환합니다.</summary>
        <returns>지정된 <see cref="T:System.DateTime" />에 지정된 주 수를 더한 결과로 만들어지는 <see cref="T:System.DateTime" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `weeks` 값이 추가 되는 지정 된 <xref:System.DateTime>합니다. 하는 경우 `weeks` 음수인 경우 결과 <xref:System.DateTime> 지정 된 이전의 <xref:System.DateTime>합니다.  
  
 결과의 월 부분 <xref:System.DateTime> 결과 일 월을 지정 된 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다. 결과의 연도 부분 <xref:System.DateTime> 월의 지정 된 연도 범위를 벗어나는 경우 영향을 받는 <xref:System.DateTime>합니다. 결과의 연대 부분이 <xref:System.DateTime> 지정 된 연대를 벗어나는 결과 연도 <xref:System.DateTime>합니다. 결과 시간 부분은 <xref:System.DateTime> 동일 하 게 유지 된 <xref:System.DateTime>합니다.  
  
 파생 된 모든.NET 클래스에는 <xref:System.Globalization.Calendar> 클래스 일주일에 7 일로 정의 됩니다.  
  
 합니다 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값이 항상 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다. 유지할 수 있습니다는 <xref:System.DateTime.Kind%2A> 의 속성을 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 메서드를 다음 예제와 같이 합니다.  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#7)]
 [!code-vb[System.Globalization.Calendar.AddMethods#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#7)]  
  
   
  
## Examples  
 다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">생성되는 <see cref="T:System.DateTime" />이 이 달력의 지원되는 범위 밖에 있는 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="weeks" /> 값이 지원되는 <see cref="T:System.DateTime" /> 반환 값의 범위 밖에 있는 경우</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public abstract DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract DateTime AddYears(DateTime time, int years);" />
      <MemberSignature Language="F#" Value="abstract member AddYears : DateTime * int -&gt; DateTime" Usage="calendar.AddYears (time, years)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">연도를 더할 <see cref="T:System.DateTime" />입니다.</param>
        <param name="years">더할 연도 수입니다.</param>
        <summary>파생 클래스에 재정의될 때 지정된 <see cref="T:System.DateTime" />에서 지정된 연도 수만큼 경과한 <see cref="T:System.DateTime" />을 반환합니다.</summary>
        <returns>지정된 <see cref="T:System.DateTime" />에 지정된 연도 수를 더한 결과로 만들어지는 <see cref="T:System.DateTime" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `years` 값이 추가 되는 지정 된 <xref:System.DateTime>합니다. 하는 경우 `years` 음수인 경우 결과 <xref:System.DateTime> 지정 된 이전의 <xref:System.DateTime>합니다.  
  
 결과의 일 부분 <xref:System.DateTime> 결과 일 결과 결과 연도 월에 유효한 날짜가 아닌 경우 영향을 받습니다. 결과 결과 연도 월의 마지막 유효 날짜로 변경 됩니다. 결과의 월 부분 <xref:System.DateTime> 결과 월 유효 결과 연도 월 없는 경우 영향을 받습니다. 결과 연도에 유효한 지난달으로 변경 됩니다. 결과의 연대 부분이 <xref:System.DateTime> 지정 된 연대를 벗어나는 결과 연도 <xref:System.DateTime>합니다. 결과 시간 부분은 <xref:System.DateTime> 동일 하 게 유지 된 <xref:System.DateTime>합니다.  
  
 예를 들어, 그레고리오 력 년 2 월에 28 일 제외 하 고 있는 윤년 29 일까 지 면 있습니다. 지정된 된 날짜 값과 윤년의 2 월 29 일 경우 `years` 이 1 이면 결과 날짜가 다음 년에서 2 월 28 일 합니다.  
  
 하는 경우 `years` 음수인 경우 결과 <xref:System.DateTime> 지정 된 이전의 <xref:System.DateTime>합니다.  
  
 합니다 <xref:System.DateTime.Kind%2A> 반환 된 속성 <xref:System.DateTime> 값이 항상 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다. 유지할 수 있습니다는 <xref:System.DateTime.Kind%2A> 의 속성을 `time` 호출 하 여 매개 변수는 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 메서드를 다음 예제와 같이 합니다.  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">생성되는 <see cref="T:System.DateTime" />이 이 달력의 지원되는 범위 밖에 있는 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="years" /> 값이 지원되는 <see cref="T:System.DateTime" /> 반환 값의 범위 밖에 있는 경우</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmType : System.Globalization.CalendarAlgorithmType" Usage="System.Globalization.Calendar.AlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 달력이 양력인지, 음력인지 또는 두 가지를 조합한 것인지를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="T:System.Globalization.CalendarAlgorithmType" /> 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 리플렉션을 사용 하 여 각각 인스턴스화하 <xref:System.Globalization.Calendar> 형식이.NET에서 찾은 값을 표시는 <xref:System.Globalization.Calendar.AlgorithmType%2A> 속성입니다.  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="calendar.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 <see cref="T:System.Globalization.Calendar" /> 개체의 복사본인 새 개체를 만듭니다.</summary>
        <returns>현재 <see cref="T:System.Object" /> 개체의 멤버 수준 복제본인 <see cref="T:System.Globalization.Calendar" />의 새 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 멤버 수준 복제본이 읽기 전용 아닙니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.MemberwiseClone" />
      </Docs>
    </Member>
    <Member MemberName="CurrentEra">
      <MemberSignature Language="C#" Value="public const int CurrentEra = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 CurrentEra = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.Calendar.CurrentEra" />
      <MemberSignature Language="VB.NET" Value="Public Const CurrentEra As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int CurrentEra = 0;" />
      <MemberSignature Language="F#" Value="val mutable CurrentEra : int" Usage="System.Globalization.Calendar.CurrentEra" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>현재 달력의 현재 연대를 나타냅니다. 이 필드의 값은 0입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Globalization.Calendar.CurrentEra> 필드에서 현재 연대의 인덱스를 나타내는 <xref:System.Globalization.Calendar.Eras%2A> 배열입니다. 연대 (이전 연대를 현재 연대)에서 역방향 시간 순서로 정렬 되므로,이 필드는 상수 값이 0입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.Calendar.Eras" />
      </Docs>
    </Member>
    <Member MemberName="DaysInYearBeforeMinSupportedYear">
      <MemberSignature Language="C#" Value="protected virtual int DaysInYearBeforeMinSupportedYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DaysInYearBeforeMinSupportedYear" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DaysInYearBeforeMinSupportedYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int DaysInYearBeforeMinSupportedYear { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DaysInYearBeforeMinSupportedYear : int" Usage="System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> 속성에서 지정한 연도 이전 연도의 일 수를 가져옵니다.</summary>
        <value><see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />에서 지정한 연도 이전 연도의 일 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에는 365의 상수 값을 반환 합니다. 속성 값에서 파생 된 클래스에서 재정의 될 수 있다는 점에 유의 합니다 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public abstract int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Eras : int[]" Usage="System.Globalization.Calendar.Eras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>파생 클래스에 재정의될 때 현재 달력의 연대 목록을 가져옵니다.</summary>
        <value>현재 달력의 연대를 나타내는 정수의 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 배열의 첫 번째 요소로 현재 연대 및 가장 오래 된 연대가 배열의 마지막 요소를 사용 하 여 역방향 시간 순서로 연대 됩니다. 예를 들어, 현재 연대를 값 <xref:System.Globalization.JapaneseCalendar> 는 4, 배열의 첫 번째 요소입니다. 만 <xref:System.Globalization.JapaneseCalendar> 하며 <xref:System.Globalization.JapaneseLunisolarCalendar> 클래스는 여러 연대를 지원 합니다.
  
[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

합니다 <xref:System.Globalization.JapaneseCalendar> 및 <xref:System.Globalization.JapaneseLunisolarCalendar> 클래스는 여러 연대를 지원 합니다. 반면, 대부분의 달력 구현에서는 단일 연대를 지원합니다.
 
## Examples  
 다음 예제에서는에 포함 된 값을 표시 <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType> 헤이세이 연대 (1989 2019) 현재 연대를가 하는 경우.   
  
 [!code-cpp[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/CPP/yslin_japanesecalendar_eras.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/CS/yslin_japanesecalendar_eras.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/VB/yslin_japanesecalendar_eras.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public abstract int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetDayOfMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetDayOfMonth : DateTime -&gt; int" Usage="calendar.GetDayOfMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">읽을 <see cref="T:System.DateTime" />입니다.</param>
        <summary>파생 클래스에 재정의될 때 지정된 <see cref="T:System.DateTime" />의 날짜(월 기준)를 반환합니다.</summary>
        <returns><paramref name="time" /> 매개 변수의 일(월 기준)을 나타내는 양의 정수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public abstract DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetDayOfWeek : DateTime -&gt; DayOfWeek" Usage="calendar.GetDayOfWeek time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">읽을 <see cref="T:System.DateTime" />입니다.</param>
        <summary>파생 클래스에 재정의될 때 지정된 <see cref="T:System.DateTime" />의 요일을 반환합니다.</summary>
        <returns><paramref name="time" /> 매개 변수의 요일을 나타내는 <see cref="T:System.DayOfWeek" /> 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DayOfWeek> 값은 일요일, 월요일, 화요일, 수요일, 목요일, 금요일, 토요일.  
  
   
  
## Examples  
 다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public abstract int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetDayOfYear(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetDayOfYear : DateTime -&gt; int" Usage="calendar.GetDayOfYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">읽을 <see cref="T:System.DateTime" />입니다.</param>
        <summary>파생 클래스에 재정의될 때 지정된 <see cref="T:System.DateTime" />의 날짜(연도 기준)를 반환합니다.</summary>
        <returns><paramref name="time" /> 매개 변수의 일(연도 기준)을 나타내는 양의 정수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 연간 일자 연도의 첫 번째 날부터의 일 수로 정의 됩니다. 예를 들어 <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDayOfYear%2A> 1, 1 월 1 일 반환 및 <xref:System.Globalization.Calendar.GetDayOfYear%2A> 12 월 31 일 365 평년 366 윤년에서에 반환 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDaysInMonth">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>파생 클래스에 재정의될 때 지정된 월의 일 수를 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public virtual int GetDaysInMonth (int year, int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDaysInMonth(int32 year, int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDaysInMonth (year As Integer, month As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetDaysInMonth(int year, int month);" />
      <MemberSignature Language="F#" Value="abstract member GetDaysInMonth : int * int -&gt; int&#xA;override this.GetDaysInMonth : int * int -&gt; int" Usage="calendar.GetDaysInMonth (year, month)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다.</param>
        <param name="month">월을 나타내는 양의 정수입니다.</param>
        <summary>현재 연대의 지정된 연도 및 월에 있는 일 수를 반환합니다.</summary>
        <returns>현재 연대의 지정된 연도에 있는 지정된 월의 날짜 수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 예를 들어 <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInMonth%2A> 2 월 평년 윤년에서 29에서 28를 반환 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 여러 구현의 비교는 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
또는 
 <paramref name="month" />가 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInYear(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public abstract int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetDaysInMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="abstract member GetDaysInMonth : int * int * int -&gt; int" Usage="calendar.GetDaysInMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다.</param>
        <param name="month">월을 나타내는 양의 정수입니다.</param>
        <param name="era">연대를 나타내는 정수입니다.</param>
        <summary>파생 클래스에 재정의될 때 지정된 월, 연도 및 연대의 일 수를 반환합니다.</summary>
        <returns>지정된 연대의 지정된 연도에 있는 지정된 월의 날짜 수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 예를 들어 <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInMonth%2A> 2 월 평년 윤년에서 29에서 28를 반환 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
또는 
 <paramref name="month" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
또는 
 <paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <block subset="none" type="overrides"><para>파생된 클래스를 지원 해야 합니다 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 로 전달 될 때를 <paramref name="era" /> 매개 변수입니다. 지원 하기 위해 단방향 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 에 저장 된 값으로 대체 됩니다 <c>연대 [0]</c>, 현재 달력의 연대 값인 합니다.</para></block>
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInYear(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDaysInYear">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>파생 클래스에 재정의될 때 지정된 연도의 일 수를 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public virtual int GetDaysInYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDaysInYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDaysInYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDaysInYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetDaysInYear(int year);" />
      <MemberSignature Language="F#" Value="abstract member GetDaysInYear : int -&gt; int&#xA;override this.GetDaysInYear : int -&gt; int" Usage="calendar.GetDaysInYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다.</param>
        <summary>현재 연대의 지정된 연도에 있는 일 수를 반환합니다.</summary>
        <returns>현재 연대의 지정된 연도에 있는 날짜 수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 예를 들어 <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInYear%2A> 365 평년 366 윤년에 대 한 반환 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 여러 구현의 비교는 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public abstract int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetDaysInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="abstract member GetDaysInYear : int * int -&gt; int" Usage="calendar.GetDaysInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다.</param>
        <param name="era">연대를 나타내는 정수입니다.</param>
        <summary>파생 클래스에 재정의될 때 지정된 연도 및 연대의 일 수를 반환합니다.</summary>
        <returns>지정된 연대에 있는 지정된 연도의 날짜 수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 예를 들어 <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInYear%2A> 365 평년 366 윤년에 대 한 반환 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
또는 
 <paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <block subset="none" type="overrides"><para>파생된 클래스를 지원 해야 합니다 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 로 전달 될 때를 <paramref name="era" /> 매개 변수입니다. 지원 하기 위해 단방향 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 에 저장 된 값으로 대체 됩니다 <c>연대 [0]</c>, 현재 달력의 연대 값인 합니다.</para></block>
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public abstract int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetEra(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetEra : DateTime -&gt; int" Usage="calendar.GetEra time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">읽을 <see cref="T:System.DateTime" />입니다.</param>
        <summary>파생 클래스에 재정의될 때 지정된 <see cref="T:System.DateTime" />의 연대를 반환합니다.</summary>
        <returns><paramref name="time" />의 연대를 나타내는 정수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
## Remarks

만 <xref:System.Globalization.JapaneseCalendar> 하며 <xref:System.Globalization.JapaneseLunisolarCalendar> 클래스는 여러 연대를 지원 합니다.

## Examples  
 다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetHour">
      <MemberSignature Language="C#" Value="public virtual int GetHour (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHour(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHour (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHour(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetHour : DateTime -&gt; int&#xA;override this.GetHour : DateTime -&gt; int" Usage="calendar.GetHour time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">읽을 <see cref="T:System.DateTime" />입니다.</param>
        <summary>지정된 <see cref="T:System.DateTime" />의 시간 값을 반환합니다.</summary>
        <returns><paramref name="time" />의 시간을 나타내는 0에서 23 사이의 정수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Hour" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLeapMonth">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 연도나 연도 및 연대의 윤월을 계산합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public virtual int GetLeapMonth (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLeapMonth(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetLeapMonth(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLeapMonth (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetLeapMonth(int year);" />
      <MemberSignature Language="F#" Value="abstract member GetLeapMonth : int -&gt; int&#xA;override this.GetLeapMonth : int -&gt; int" Usage="calendar.GetLeapMonth year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="year">연도입니다.</param>
        <summary>지정된 연도의 윤월을 계산합니다.</summary>
        <returns>지정된 연도의 윤월을 나타내는 양의 정수입니다.  
  
또는 
이 달력이 윤월을 지원하지 않거나 <paramref name="year" /> 매개 변수가 윤년을 나타내지 않는 경우 0입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 윤 월 개념을 지 원하는 달력에서 윤 월에는 특정 월 또는 연도의 특정 월 후 발생할 수 있습니다. 예를 들어를 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> 메서드 1과 지정 된 날짜와 연관 된 달을 나타내는 13 사이의 숫자를 반환 합니다. 아홉 번째 및 여덟 번째 연도, 월 사이의 윤 월 이면는 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> 메서드 여덟 번째 달에, 월, 9 및 10 아홉 번째 달에 8을 반환 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public virtual int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetLeapMonth(int year, int era);" />
      <MemberSignature Language="F#" Value="abstract member GetLeapMonth : int * int -&gt; int&#xA;override this.GetLeapMonth : int * int -&gt; int" Usage="calendar.GetLeapMonth (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="era" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="year">연도입니다.</param>
        <param name="era">연대입니다.</param>
        <summary>지정한 연도 및 연대의 윤월을 계산합니다.</summary>
        <returns>지정한 연도와 연대에서 윤월을 나타내는 양의 정수입니다.  
  
또는 
이 달력이 윤월을 지원하지 않거나 <paramref name="year" /> 및 <paramref name="era" /> 매개 변수가 윤년을 지정하지 않는 경우 0입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 윤 월 개념을 지 원하는 달력에서 윤 월에는 특정 월 또는 연도의 특정 월 후 발생할 수 있습니다. 예를 들어를 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> 메서드 1과 지정 된 날짜와 연관 된 달을 나타내는 13 사이의 숫자를 반환 합니다. 아홉 번째 및 여덟 번째 연도, 월 사이의 윤 월 이면는 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> 메서드 여덟 번째 달에, 월, 9 및 10 아홉 번째 달에 8을 반환 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMilliseconds">
      <MemberSignature Language="C#" Value="public virtual double GetMilliseconds (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GetMilliseconds(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMilliseconds (time As DateTime) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double GetMilliseconds(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetMilliseconds : DateTime -&gt; double&#xA;override this.GetMilliseconds : DateTime -&gt; double" Usage="calendar.GetMilliseconds time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">읽을 <see cref="T:System.DateTime" />입니다.</param>
        <summary>지정된 <see cref="T:System.DateTime" />의 밀리초 값을 반환합니다.</summary>
        <returns><paramref name="time" /> 매개 변수의 밀리초를 나타내는 0부터 999까지의 배정밀도 부동 소수점 숫자입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Millisecond" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMinute">
      <MemberSignature Language="C#" Value="public virtual int GetMinute (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMinute(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMinute (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetMinute(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetMinute : DateTime -&gt; int&#xA;override this.GetMinute : DateTime -&gt; int" Usage="calendar.GetMinute time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">읽을 <see cref="T:System.DateTime" />입니다.</param>
        <summary>지정된 <see cref="T:System.DateTime" />의 분 값을 반환합니다.</summary>
        <returns><paramref name="time" />의 분을 나타내는 0에서 59 사이의 정수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Minute" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public abstract int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetMonth : DateTime -&gt; int" Usage="calendar.GetMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">읽을 <see cref="T:System.DateTime" />입니다.</param>
        <summary>파생 클래스에 재정의될 때 지정된 <see cref="T:System.DateTime" />의 월을 반환합니다.</summary>
        <returns><paramref name="time" />의 월을 나타내는 양의 정수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 예를 들어 <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonth%2A> 티쉬리 1을 반환에 대 한 및 <xref:System.Globalization.Calendar.GetMonth%2A> 의 평년 윤년에서 13에서 12를 반환 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMonthsInYear">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>파생 클래스에 재정의될 때 지정된 연도의 월 수를 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public virtual int GetMonthsInYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMonthsInYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonthsInYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetMonthsInYear(int year);" />
      <MemberSignature Language="F#" Value="abstract member GetMonthsInYear : int -&gt; int&#xA;override this.GetMonthsInYear : int -&gt; int" Usage="calendar.GetMonthsInYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다.</param>
        <summary>현재 연대에 있는 지정된 연도의 월 수를 반환합니다.</summary>
        <returns>현재 연대에 있는 지정된 연도의 월 수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 예를 들어 <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonthsInYear%2A> 평년 윤년에 대 한 13에 대 한 12를 반환 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 여러 구현의 비교는 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <altmember cref="M:System.Globalization.Calendar.GetDaysInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public abstract int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetMonthsInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="abstract member GetMonthsInYear : int * int -&gt; int" Usage="calendar.GetMonthsInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다.</param>
        <param name="era">연대를 나타내는 정수입니다.</param>
        <summary>파생 클래스에 재정의될 때 지정된 연대에 있는 지정된 연도의 월 수를 반환합니다.</summary>
        <returns>지정된 연대에 있는 지정된 연도의 월 수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 예를 들어 <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonthsInYear%2A> 평년 윤년에 대 한 13에 대 한 12를 반환 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
또는 
 <paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <block subset="none" type="overrides"><para>파생된 클래스를 지원 해야 합니다 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 로 전달 될 때를 <paramref name="era" /> 매개 변수입니다. 지원 하기 위해 단방향 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 에 저장 된 값으로 대체 됩니다 <c>연대 [0]</c>, 현재 달력의 연대 값인 합니다.</para></block>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetSecond">
      <MemberSignature Language="C#" Value="public virtual int GetSecond (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetSecond(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecond (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetSecond(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetSecond : DateTime -&gt; int&#xA;override this.GetSecond : DateTime -&gt; int" Usage="calendar.GetSecond time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">읽을 <see cref="T:System.DateTime" />입니다.</param>
        <summary>지정된 <see cref="T:System.DateTime" />의 초 값을 반환합니다.</summary>
        <returns><paramref name="time" />의 초를 나타내는 0에서 59 사이의 정수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Second" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetWeekOfYear">
      <MemberSignature Language="C#" Value="public virtual int GetWeekOfYear (DateTime time, System.Globalization.CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetWeekOfYear(valuetype System.DateTime time, valuetype System.Globalization.CalendarWeekRule rule, valuetype System.DayOfWeek firstDayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWeekOfYear (time As DateTime, rule As CalendarWeekRule, firstDayOfWeek As DayOfWeek) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetWeekOfYear(DateTime time, System::Globalization::CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberSignature Language="F#" Value="abstract member GetWeekOfYear : DateTime * System.Globalization.CalendarWeekRule * DayOfWeek -&gt; int&#xA;override this.GetWeekOfYear : DateTime * System.Globalization.CalendarWeekRule * DayOfWeek -&gt; int" Usage="calendar.GetWeekOfYear (time, rule, firstDayOfWeek)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="rule" Type="System.Globalization.CalendarWeekRule" />
        <Parameter Name="firstDayOfWeek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="time">날짜 및 시간 값입니다.</param>
        <param name="rule">주를 정의하는 열거형 값입니다.</param>
        <param name="firstDayOfWeek">주의 첫째 요일을 정의하는 열거형 값입니다.</param>
        <summary>지정된 <see cref="T:System.DateTime" /> 값의 날짜가 포함된 주(연도 기준)를 반환합니다.</summary>
        <returns><paramref name="time" /> 매개 변수의 날짜가 포함된 주(연도 기준)를 나타내는 양의 정수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정 하 여 연도의 주 번호를 확인 하려면이 메서드를 사용할 수 있습니다 `time` 연도의 마지막 날입니다.  
  
 합니다 <xref:System.Globalization.DateTimeFormatInfo> 나타난 달력을 사용 하는 특정 문화권에 대 한 개체를 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> 속성에 사용할 수 있는 다음 문화권 관련 값을 포함 합니다 `rule` 및 `firstDayOfWeek` 매개 변수:  
  
-   <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A?displayProperty=nameWithType> 속성이 기본 요일에 대해 사용할 수 있는 첫 번째 날을 포함 합니다 `firstDayOfWeek` 매개 변수입니다.  
  
-   합니다 <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A?displayProperty=nameWithType> 속성에 사용할 수 있는 기본 달력 주 규칙을 포함 합니다 `rule` 매개 변수입니다.  
  
 다음 예에서는 현재 문화권의 <xref:System.Globalization.DateTimeFormatInfo> 2011 년 1 월 1 일 그레고리오 력으로 해당 연도의 첫째 주에는 확인 하는 개체입니다.  
  
 [!code-csharp[System.Globalization.Calendar.GetWeekOfYear#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CS/getweekofyearex1.cs#2)]
 [!code-vb[System.Globalization.Calendar.GetWeekOfYear#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/VB/getweekofyearex1.vb#2)]  
  
 일부 달력에 대 한 호출에 대 한는 <xref:System.Globalization.Calendar.GetWeekOfYear%2A> 메서드가 throw를 <xref:System.ArgumentOutOfRangeException> 의 특정 조합에 대 한 `rule` 및 `firstDayOfWeek` 경우에도 값 `time` 일정에 의해 반환 된 날짜 보다 크면 <xref:System.Globalization.Calendar.MinSupportedDateTime%2A> 속성. 다음 표에서 영향을 받는 달력, 특정 `rule` 값 및 가장 오래 된 지원 되는 범위의 `time` 값입니다. 특정 최소 <xref:System.DateTime> 의 값에 따라 값을 `firstDayOfWeek` 매개 변수입니다.  
  
|일정|CalendarWeekRule 값|양력 날짜 (M/dd/yyyy)|(M/dd/yyyy) 달력의 날짜|  
|--------------|----------------------------|------------------------------------|--------------------------------------|  
|<xref:System.Globalization.ChineseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|1901/2/19부터 1901/25/2|1901/1/7을 1901 년 1/1 /|  
|<xref:System.Globalization.ChineseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|1901/2/19부터 1901/22/2|1901/1/01부터 1/04/1901|  
|<xref:System.Globalization.HebrewCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstDay>|9/17/1583|1/01/5344|  
|<xref:System.Globalization.HebrewCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|1583/9/17부터 1583/9/23|1/01/5344를 1/07/5344|  
|<xref:System.Globalization.HebrewCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|1583/9/17부터 1583/9/20|1/01/5344를 1/04/5344|  
|<xref:System.Globalization.HijriCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|7/18/0622를 7/24/0622|1/01/0001 1/07/0001를|  
|<xref:System.Globalization.HijriCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|7/18/0622를 7/21/0622|1/01/0001 1/04/0001를|  
|<xref:System.Globalization.JapaneseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|1960/1/28부터 1960/2/03|35/1/01부터 0035/1/07|  
|<xref:System.Globalization.JapaneseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|1960/1/28부터 1/31/1960|1/04/0035를 볼 수 1/01 /|  
|<xref:System.Globalization.JulianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|1/01/0001 1/05/0001를|1/07/0001를 0001/1/03|  
|<xref:System.Globalization.JulianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|1/01/0001 1/02/0001를|1/04/0001를 0001/1/03|  
|<xref:System.Globalization.KoreanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|2/14/0918에 2/20/0918|1/01/0918를 1/07/0918|  
|<xref:System.Globalization.KoreanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|2/14/0918에 2/17/0918|1/01/0918를 1/04/0918|  
|<xref:System.Globalization.PersianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|0622/21/3에 3/27/0622|1/01/0001 1/07/0001를|  
|<xref:System.Globalization.PersianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|0622/21/3에 3/24/0622|1/01/0001 1/04/0001를|  
|<xref:System.Globalization.TaiwanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|1912/2/18 일까 지/2/24/1912|1/01/0001 1/07/0001를|  
|<xref:System.Globalization.TaiwanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|1912/2/18 일까 지/2/21/1912|1/01/0001 1/04/0001를|  
|<xref:System.Globalization.UmAlQuraCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|5/06/1900을 1900 년 4 월 30 일|1318/1/01부터 1318/1/07|  
|<xref:System.Globalization.UmAlQuraCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|1900 년 5 월 03을 1900 년 4 월 30 일|1318/1/01부터 1/04/1318|  
  
   
  
## Examples  
 다음 코드 예제에서는 어떻게 결과인 <xref:System.Globalization.Calendar.GetWeekOfYear%2A> 에 따라 달라 집니다 합니다 <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> 및 <xref:System.Globalization.CalendarWeekRule> 사용 합니다. 지정된 된 날짜의 연도 마지막 날 이면 <xref:System.Globalization.Calendar.GetWeekOfYear%2A> 해당 연도의 주의 총 수를 반환 합니다.  
  
 [!code-cpp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CPP/yslin_calendar_getweekofyear.cpp#1)]
 [!code-csharp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CS/yslin_calendar_getweekofyear.cs#1)]
 [!code-vb[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/VB/yslin_calendar_getweekofyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="time" />이 <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />보다 이전이거나 <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />보다 이후인 경우  
  
또는 
 <paramref name="firstDayOfWeek" />은 유효한 <see cref="T:System.DayOfWeek" /> 값이 아닙니다.  
  
또는 
 <paramref name="rule" />는 유효한 <see cref="T:System.Globalization.CalendarWeekRule" /> 값이 아닙니다.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.Globalization.CalendarWeekRule" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public abstract int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetYear(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetYear : DateTime -&gt; int" Usage="calendar.GetYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">읽을 <see cref="T:System.DateTime" />입니다.</param>
        <summary>파생 클래스에 재정의될 때 지정된 <see cref="T:System.DateTime" />의 연도를 반환합니다.</summary>
        <returns><paramref name="time" />의 연도를 나타내는 정수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는의 멤버는 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLeapDay">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>파생 클래스에 재정의될 때 지정된 날짜가 윤일인지 여부를 확인합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public virtual bool IsLeapDay (int year, int month, int day);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapDay(int32 year, int32 month, int32 day) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsLeapDay (year As Integer, month As Integer, day As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsLeapDay(int year, int month, int day);" />
      <MemberSignature Language="F#" Value="abstract member IsLeapDay : int * int * int -&gt; bool&#xA;override this.IsLeapDay : int * int * int -&gt; bool" Usage="calendar.IsLeapDay (year, month, day)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다.</param>
        <param name="month">월을 나타내는 양의 정수입니다.</param>
        <param name="day">일을 나타내는 양의 정수입니다.</param>
        <summary>현재 연대의 지정된 날짜가 윤일인지 여부를 확인합니다.</summary>
        <returns>지정된 날짜가 윤일이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하기 위해 달력 연도 및 지구 태양 중심으로 회전 하는 실제 시간 또는 달 지구 중심으로 회전 하는 실제 시간 간의 차이 윤년에 표준 달력 연도의 다른 기간 (일) 각 <xref:System.Globalization.Calendar> 구현 윤년을 다르게 정의 합니다.  
  
 윤 일은 윤년 에서만에서 발생 하는 일입니다. 예를 들어 일반 달력에서 2 월 29 일이만 윤 일 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 여러 구현의 비교는 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
또는 
 <paramref name="month" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
또는 
 <paramref name="day" />가 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public abstract bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberSignature Language="F#" Value="abstract member IsLeapDay : int * int * int * int -&gt; bool" Usage="calendar.IsLeapDay (year, month, day, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다.</param>
        <param name="month">월을 나타내는 양의 정수입니다.</param>
        <param name="day">일을 나타내는 양의 정수입니다.</param>
        <param name="era">연대를 나타내는 정수입니다.</param>
        <summary>파생 클래스에 재정의될 때 지정된 연대의 지정된 날짜가 윤일인지 여부를 확인합니다.</summary>
        <returns>지정된 날짜가 윤일이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하기 위해 달력 연도 및 지구 태양 중심으로 회전 하는 실제 시간 또는 달 지구 중심으로 회전 하는 실제 시간 간의 차이 윤년에 표준 달력 연도의 다른 기간 (일) 각 <xref:System.Globalization.Calendar> 구현 윤년을 다르게 정의 합니다.  
  
 윤 일은 윤년 에서만에서 발생 하는 일입니다. 예를 들어 일반 달력에서 2 월 29 일이만 윤 일 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
또는 
 <paramref name="month" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
또는 
 <paramref name="day" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
또는 
 <paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <block subset="none" type="overrides"><para>파생된 클래스를 지원 해야 합니다 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 로 전달 될 때를 <paramref name="era" /> 매개 변수입니다. 지원 하기 위해 단방향 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 에 저장 된 값으로 대체 됩니다 <c>연대 [0]</c>, 현재 달력의 연대 값인 합니다.</para></block>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLeapMonth">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>파생 클래스에 재정의될 때 지정된 월이 윤월인지 여부를 확인합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public virtual bool IsLeapMonth (int year, int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapMonth(int32 year, int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsLeapMonth (year As Integer, month As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsLeapMonth(int year, int month);" />
      <MemberSignature Language="F#" Value="abstract member IsLeapMonth : int * int -&gt; bool&#xA;override this.IsLeapMonth : int * int -&gt; bool" Usage="calendar.IsLeapMonth (year, month)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다.</param>
        <param name="month">월을 나타내는 양의 정수입니다.</param>
        <summary>현재 연대의 지정된 연도에 있는 지정된 월이 윤월인지 여부를 확인합니다.</summary>
        <returns>지정된 월이 윤월이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하기 위해 달력 연도 및 지구 태양 중심으로 회전 하는 실제 시간 또는 달 지구 중심으로 회전 하는 실제 시간 간의 차이 윤년에 표준 달력 연도의 다른 기간 (일) 각 <xref:System.Globalization.Calendar> 구현 윤년을 다르게 정의 합니다.  
  
 윤 월은 윤년 에서만에서 발생 하는 한 달 합니다. 예를 들어 히브리식 달력에서 아 달 트는 윤 월입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 여러 구현의 비교는 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
또는 
 <paramref name="month" />가 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public abstract bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsLeapMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="abstract member IsLeapMonth : int * int * int -&gt; bool" Usage="calendar.IsLeapMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다.</param>
        <param name="month">월을 나타내는 양의 정수입니다.</param>
        <param name="era">연대를 나타내는 정수입니다.</param>
        <summary>파생 클래스에 재정의될 때 지정된 연대의 지정된 연도에 있는 지정된 월이 윤월인지 여부를 확인합니다.</summary>
        <returns>지정된 월이 윤월이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하기 위해 달력 연도 및 지구 태양 중심으로 회전 하는 실제 시간 또는 달 지구 중심으로 회전 하는 실제 시간 간의 차이 윤년에 표준 달력 연도의 다른 기간 (일) 각 <xref:System.Globalization.Calendar> 구현 윤년을 다르게 정의 합니다.  
  
 윤 월은 윤년 에서만에서 발생 하는 한 달 합니다. 예를 들어 히브리식 달력에서 아 달 트는 윤 월입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
또는 
 <paramref name="month" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
또는 
 <paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <block subset="none" type="overrides"><para>파생된 클래스를 지원 해야 합니다 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 로 전달 될 때를 <paramref name="era" /> 매개 변수입니다. 지원 하기 위해 단방향 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 에 저장 된 값으로 대체 됩니다 <c>연대 [0]</c>, 현재 달력의 연대 값인 합니다.</para></block>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLeapYear">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>파생 클래스에 재정의될 때 지정된 연도가 윤년인지 여부를 확인합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public virtual bool IsLeapYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsLeapYear (year As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsLeapYear(int year);" />
      <MemberSignature Language="F#" Value="abstract member IsLeapYear : int -&gt; bool&#xA;override this.IsLeapYear : int -&gt; bool" Usage="calendar.IsLeapYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다.</param>
        <summary>지정된 연대의 지정된 연도가 윤년인지 여부를 확인합니다.</summary>
        <returns>지정된 연도가 윤년이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하기 위해 달력 연도 및 지구 태양 중심으로 회전 하는 실제 시간 또는 달 지구 중심으로 회전 하는 실제 시간 간의 차이 윤년에 표준 달력 연도의 다른 기간 (일) 각 <xref:System.Globalization.Calendar> 구현 윤년을 다르게 정의 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 여러 구현의 비교는 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <altmember cref="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public abstract bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsLeapYear(int year, int era);" />
      <MemberSignature Language="F#" Value="abstract member IsLeapYear : int * int -&gt; bool" Usage="calendar.IsLeapYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다.</param>
        <param name="era">연대를 나타내는 정수입니다.</param>
        <summary>파생 클래스에 재정의될 때 지정된 연대의 지정된 연도가 윤년인지 여부를 확인합니다.</summary>
        <returns>지정된 연도가 윤년이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하기 위해 달력 연도 및 지구 태양 중심으로 회전 하는 실제 시간 또는 달 지구 중심으로 회전 하는 실제 시간 간의 차이 윤년에 표준 달력 연도의 다른 기간 (일) 각 <xref:System.Globalization.Calendar> 구현 윤년을 다르게 정의 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
또는 
 <paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <block subset="none" type="overrides"><para>파생된 클래스를 지원 해야 합니다 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 로 전달 될 때를 <paramref name="era" /> 매개 변수입니다. 지원 하기 위해 단방향 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 에 저장 된 값으로 대체 됩니다 <c>연대 [0]</c>, 현재 달력의 연대 값인 합니다.</para></block>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Globalization.Calendar.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Globalization.Calendar" /> 개체가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>이 <see cref="T:System.Globalization.Calendar" /> 개체가 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public virtual DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxSupportedDateTime : DateTime" Usage="System.Globalization.Calendar.MaxSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Globalization.Calendar" /> 개체에서 지원하는 마지막 날짜와 시간을 가져옵니다.</summary>
        <value>이 달력에서 지원하는 마지막 날짜와 시간입니다. 기본값은 <see cref="F:System.DateTime.MaxValue" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Globalization.Calendar.MinSupportedDateTime" />
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public virtual DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MinSupportedDateTime : DateTime" Usage="System.Globalization.Calendar.MinSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Globalization.Calendar" /> 개체에서 지원하는 시작 날짜와 시간을 가져옵니다.</summary>
        <value>이 달력에서 지원하는 시작 날짜와 시간입니다. 기본값은 <see cref="F:System.DateTime.MinValue" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.Calendar ReadOnly (System.Globalization.Calendar calendar);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.Calendar ReadOnly(class System.Globalization.Calendar calendar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::Calendar ^ ReadOnly(System::Globalization::Calendar ^ calendar);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Globalization.Calendar -&gt; System.Globalization.Calendar" Usage="System.Globalization.Calendar.ReadOnly calendar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="calendar" Type="System.Globalization.Calendar" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="calendar"><see cref="T:System.Globalization.Calendar" /> 개체입니다.</param>
        <summary>지정된 <see cref="T:System.Globalization.Calendar" /> 개체의 읽기 전용 버전을 반환합니다.</summary>
        <returns><paramref name="calendar" />가 읽기 전용인 경우 <paramref name="calendar" /> 매개 변수로 지정된 <see cref="T:System.Globalization.Calendar" /> 개체입니다.  
  
또는 
<paramref name="calendar" />가 읽기 전용이 아닌 경우 <paramref name="calendar" />로 지정된 <see cref="T:System.Globalization.Calendar" /> 개체의 읽기 전용 멤버 수준 복제본입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="calendar" />가 <see langword="null" />입니다.</exception>
        <altmember cref="M:System.Object.MemberwiseClone" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDateTime">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>파생 클래스에 재정의될 때 지정된 날짜와 시간으로 설정된 <see cref="T:System.DateTime" />을 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond);" />
      <MemberSignature Language="F#" Value="abstract member ToDateTime : int * int * int * int * int * int * int -&gt; DateTime&#xA;override this.ToDateTime : int * int * int * int * int * int * int -&gt; DateTime" Usage="calendar.ToDateTime (year, month, day, hour, minute, second, millisecond)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다.</param>
        <param name="month">월을 나타내는 양의 정수입니다.</param>
        <param name="day">일을 나타내는 양의 정수입니다.</param>
        <param name="hour">시간을 나타내는 0에서 23 사이의 정수입니다.</param>
        <param name="minute">분을 나타내는 0에서 59 사이의 정수입니다.</param>
        <param name="second">초를 나타내는 0에서 59 사이의 정수입니다.</param>
        <param name="millisecond">밀리초를 나타내는 0에서 999 사이의 정수입니다.</param>
        <summary>현재 연대의 지정된 날짜와 시간으로 설정된 <see cref="T:System.DateTime" />을 반환합니다.</summary>
        <returns>현재 연대의 지정된 날짜와 시간으로 설정된 <see cref="T:System.DateTime" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

이 메서드는 날짜 및 시간을 기준으로 특정 달력의 현재 연대를 반환 합니다. 에 대 한 합니다 <xref:System.Globalization.JapaneseCalendar> 고 <xref:System.Globalization.JapaneseLunisolarCalendar>,이 메서드를 호출 하는 emperor 통치에 따라 여러 연대를 지 원하는 연대를 변경 하는 경우 의도 하지 않은 날짜를 생성할 수 있습니다. 이러한 달력 중 하나를 사용 하 여 날짜를 인스턴스화할 때 호출 하는 것이 좋습니다 합니다 <xref:System.Globalization.JapaneseCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)?displayProperty=nameWithType> 나 [JapaneseLunisolarCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)](xref:System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)) 메서드 및 명시적으로 연대를 지정 합니다. 

         ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
또는 
 <paramref name="month" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
또는 
 <paramref name="day" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
또는 
 <paramref name="hour" />가 0보다 작거나 23보다 큽니다.  
  
또는 
 <paramref name="minute" />가 0보다 작거나 59보다 큽니다.  
  
또는 
 <paramref name="second" />가 0보다 작거나 59보다 큽니다.  
  
또는 
 <paramref name="millisecond" />가 0보다 작거나 999보다 큽니다.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Calendar-3360a84a">예제: Calendar Week Range 유틸리티</related>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public abstract DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="F#" Value="abstract member ToDateTime : int * int * int * int * int * int * int * int -&gt; DateTime" Usage="calendar.ToDateTime (year, month, day, hour, minute, second, millisecond, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">연도를 나타내는 정수입니다.</param>
        <param name="month">월을 나타내는 양의 정수입니다.</param>
        <param name="day">일을 나타내는 양의 정수입니다.</param>
        <param name="hour">시간을 나타내는 0에서 23 사이의 정수입니다.</param>
        <param name="minute">분을 나타내는 0에서 59 사이의 정수입니다.</param>
        <param name="second">초를 나타내는 0에서 59 사이의 정수입니다.</param>
        <param name="millisecond">밀리초를 나타내는 0에서 999 사이의 정수입니다.</param>
        <param name="era">연대를 나타내는 정수입니다.</param>
        <summary>파생 클래스에 재정의될 때 지정된 연대의 지정된 날짜와 시간으로 설정된 <see cref="T:System.DateTime" />을 반환합니다.</summary>
        <returns>현재 연대의 지정된 날짜와 시간으로 설정된 <see cref="T:System.DateTime" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.Calendar.ToDateTime%2A> 방법은 현재 달력의 날짜를 양력 날짜를 변환할 수 있습니다 때문에 유용 합니다. 양력 날짜 이후에 사용할 수, 예를 들어, 특정 달력의 동일한 날짜를 만들거나 다른 달력의 날짜를 비교 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
또는 
 <paramref name="month" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
또는 
 <paramref name="day" />가 달력에서 지원하는 범위 밖에 있는 경우  
  
또는 
 <paramref name="hour" />가 0보다 작거나 23보다 큽니다.  
  
또는 
 <paramref name="minute" />가 0보다 작거나 59보다 큽니다.  
  
또는 
 <paramref name="second" />가 0보다 작거나 59보다 큽니다.  
  
또는 
 <paramref name="millisecond" />가 0보다 작거나 999보다 큽니다.  
  
또는 
 <paramref name="era" />가 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <block subset="none" type="overrides"><para>파생된 클래스를 지원 해야 합니다 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 로 전달 될 때를 <paramref name="era" /> 매개 변수입니다. 지원에 한 가지 방법은 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 의 첫 번째 요소에 저장 된 값으로 대체 하는 것을 <see cref="P:System.Globalization.Calendar.Eras" /> 값인 일정의 현재 연대에 대 한 속성 배열입니다.</para></block>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Calendar-3360a84a">예제: Calendar Week Range 유틸리티</related>
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public virtual int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ToFourDigitYear(int year);" />
      <MemberSignature Language="F#" Value="abstract member ToFourDigitYear : int -&gt; int&#xA;override this.ToFourDigitYear : int -&gt; int" Usage="calendar.ToFourDigitYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">변환할 연도를 나타내는 두 자릿수 또는 네 자릿수의 정수입니다.</param>
        <summary><see cref="P:System.Globalization.Calendar.TwoDigitYearMax" /> 속성으로 해당 세기를 확인하여 지정된 연도를 네 자릿수 연도로 변환합니다.</summary>
        <returns><paramref name="year" />를 네 자릿수로 표시하는 정수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.Calendar.TwoDigitYearMax%2A> 두 자리 연도로 나타낼 수 있는 100 년 범위의 마지막 연도입니다. 두 자리를 찾아 확인 세기 `year` 100 년 범위의 합니다. 예를 들어 경우 <xref:System.Globalization.Calendar.TwoDigitYearMax%2A> 설정할지 2029 100 년 범위의 1930에서과 2029로 합니다. 따라서 2 자리 값은 29 2029로 해석 됩니다 1930과 30 2 자리 값을 해석 됩니다.  
  
 하는 경우 `year` 100의 값 보다 크거나 같은 경우는 `year` 그대로 반환 됩니다.  
  
 <xref:System.Globalization.Calendar.ToFourDigitYear%2A> 두 자리 연도 또는 4 자리 연도 지원합니다. 두 자리 연도 값 (100 미만)를 전달 하면이 값에 따라 4 자리 값을 변환할 메서드는 <xref:System.Globalization.Calendar.TwoDigitYearMax%2A> 해당 세기를 나타내는 값입니다. 지원 되는 일정 범위 내에 있는 네 자리 연도 값을 제공 하는 응용 프로그램 <xref:System.Globalization.Calendar.ToFourDigitYear%2A>, 메서드는 실제 입력된 값을 반환 합니다. 메서드를 지원 되는 달력 범위를 벗어난 네 자릿수 값을 제공 하는 응용 프로그램 또는 음수 값을 제공 하는 경우 예외가 발생 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" />가 달력에서 지원하는 범위 밖에 있는 경우</exception>
        <altmember cref="P:System.Globalization.Calendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public virtual int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TwoDigitYearMax : int with get, set" Usage="System.Globalization.Calendar.TwoDigitYearMax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>두 자릿수 연도로 표시할 수 있는 100년 범위의 마지막 연도를 가져오거나 설정합니다.</summary>
        <value>두 자릿수 연도로 표시할 수 있는 100년 범위의 마지막 연도입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에는 2 자리 연도를를 4 자리 연도 변환할 수 있습니다. 예를 들어이 속성이 2029, 100 년 범위의 경우 1930에서 2029 합니다. 따라서 2 자리 값은 29 2029로 해석 됩니다 1930과 30 2 자리 값을 해석 됩니다.  
  
 이 속성의 초기 값은 제어판의 국가 및 언어 옵션 영역에서 설정에서 파생 됩니다. 그러나 정보 수명 동안 변경할 수는 <xref:System.AppDomain>합니다. <xref:System.Globalization.Calendar> 클래스 시스템 설정에서 변경 내용을 검색 하지 않는 자동으로 합니다. 이 속성의 초기 값은 정의한 기본값 달력 국가 및 언어 옵션에서 지원 되지 않으면는 <xref:System.Globalization.Calendar> 클래스입니다.  
  
 응용 프로그램을 99로 문자 그대로 해석 되도록 2 자리 연도이 값을 설정 해야 합니다. 예를 들어이 속성을 설정 하 여 99를 100 년 범위의 방법은 (없습니다: 대부분의 일정에 대 한 유효한 값) 0에서 99입니다. 따라서 2 자리 숫자 값이 30 30으로 해석 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">현재 <see cref="T:System.Globalization.Calendar" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="M:System.Globalization.Calendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>