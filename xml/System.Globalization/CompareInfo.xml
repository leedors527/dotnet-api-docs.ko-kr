<Type Name="CompareInfo" FullName="System.Globalization.CompareInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3b6e8289846ecd4a5c9e9b00a795de2a65b3b752" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58736491" /></Metadata><TypeSignature Language="C#" Value="public class CompareInfo : System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CompareInfo extends System.Object implements class System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CompareInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class CompareInfo&#xA;Implements IDeserializationCallback" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompareInfo : System::Runtime::Serialization::IDeserializationCallback" />
  <TypeSignature Language="F#" Value="type CompareInfo = class&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>문화권 구분 문자열 비교를 위한 메서드 집합을 구현합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 비교 및 정렬에 대 한 규칙에는 문화권 달라 집니다. 예를 들어, 정렬 순서 음성 또는 문자의 시각적 표현을 기반 수 있습니다. 동아시아 언어에서는 표의 문자의 부수와 획에 따라 문자가 정렬됩니다. 언어와 문화권이 알파벳에 사용하는 순서에 따라 정렬 순서가 달라지기도 합니다. 예를 들어 덴마크어 알파벳의 "Æ" 문자는 "Z" 다음에 옵니다. 또한 대/소문자 구분 또는 대/소문자를 비교 될 수 있습니다 및 대/소문자 규칙 문화권도 달라질 수 있습니다. <xref:System.Globalization.CompareInfo> 클래스는이 문화권 구분 문자열 비교 데이터를 유지 관리 하 고 문화권 구분 문자열 작업을 수행 합니다.  
  
 인스턴스화할 필요가 없습니다 일반적으로 <xref:System.Globalization.CompareInfo> 하나 모든 비-서 수 문자열 비교 작업에 의해 암시적으로 사용 되기 때문에 직접 개체에 대 한 호출을 포함 하 여는 <xref:System.String.Compare%2A?displayProperty=nameWithType> 메서드. 그러나 검색 하려는 경우는 <xref:System.Globalization.CompareInfo> 개체를 이러한 방법 중 하나로 수행할 수 있습니다.  
  
-   값을 검색 하는 <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> 특정 문화권에 대 한 속성입니다.  
  
-   정적 호출 하 여 <xref:System.Globalization.CompareInfo.GetCompareInfo%2A> 메서드는 문화권 이름입니다. 이렇게 하면 런타임에 바인딩된 액세스에 대 한는 <xref:System.Globalization.CompareInfo> 개체입니다.  
  
## <a name="ignored-search-values"></a>검색 값 무시  
 문자 집합에는 무시할 수 있는 문자가 포함되며, 이들 문자는 언어 또는 문화권 구분 비교를 수행하는 경우 고려되지 않습니다. 비교와 같은 메서드와 <xref:System.Globalization.CompareInfo.IndexOf%2A> 고 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 문화권 구분 비교를 수행할 때와 같은 문자를 고려 하지 않습니다. 무시할 수 있는 문자는 다음과 같습니다.  
  
-   <xref:System.String.Empty?displayProperty=nameWithType>. 문화권 구분 비교 메서드를 검색 중인 문자열의 시작 부분 (인덱스 0)에 빈 문자열을 항상 찾이 됩니다.  
  
-   특히, 비교 옵션으로 인해 작업에서 간주 되지 않는 코드 포인트를 사용 하 여 구성 된 문자열 또는 문자를 <xref:System.Globalization.CompareOptions.IgnoreNonSpace?displayProperty=nameWithType> 및 <xref:System.Globalization.CompareOptions.IgnoreSymbols?displayProperty=nameWithType> 기호와 공백 없는 결합에서 검색을 생성 하는 옵션 문자는 무시 됩니다.  
  
-   언어적 의미가 없는 코드 포인트를 사용 하 여 사용 되는 문자열입니다. 예를 들어, 하이픈이 (U + 00AD)는 항상 문화권 구분 문자열 비교에서 무시 됩니다.  
  
## <a name="security-considerations"></a>보안 고려 사항  
 보안 결정은 문자열 비교 또는 대/소문자 변경에 따라 종속 하는 경우 사용 해야는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 속성 동작 운영 체제의 문화권 설정에 관계 없이 일관 되도록 합니다.  
  
> [!NOTE]
>  형식의 매개 변수가 있는 문자열 비교 메서드를 사용 해야, 규칙상 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제와 방법을 <xref:System.Globalization.CompareInfo> 연관 된 개체는 <xref:System.Globalization.CultureInfo> 문자열 비교 하는 개체에 영향을 줍니다.  
  
 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]  

 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://www.microsoft.com/en-us/download/details.aspx?id=10921">정렬 가중치 테이블에 대 한 Windows 운영 체제</related>
    <related type="ExternalDocumentation" href="https://www.unicode.org/Public/UCA/latest/allkeys.txt">Linux 및 macOS 용 기본 유니코드 데이터 정렬 요소 테이블</related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Compare">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>두 문자열을 비교합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, string string2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, string string2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, string2 As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, System::String ^ string2);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * string -&gt; int&#xA;override this.Compare : string * string -&gt; int" Usage="compareInfo.Compare (string1, string2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="string2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="string1">비교할 첫째 문자열입니다.</param>
        <param name="string2">비교할 둘째 문자열입니다.</param>
        <summary>두 문자열을 비교합니다.</summary>
        <returns>두 비교 대상 간의 어휘 관계를 나타내는 부호 있는 32비트 정수를 반환합니다.  
  
 <list type="table"><listheader><term> 값 
 </term><description> 조건 
 </description></listheader><item><term> 0 
 </term><description> 두 문자열이 같은 경우  
  
 </description></item><item><term> 0보다 작음 
 </term><description><paramref name="string1" />가 <paramref name="string2" />보다 작은 경우  
  
 </description></item><item><term> 0보다 큼 
 </term><description><paramref name="string1" />가 <paramref name="string2" />보다 큰 경우  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로 비교를 사용 하 여 수행 <xref:System.Globalization.CompareOptions.None?displayProperty=nameWithType>합니다. 보안 결정은 문자열 비교 또는 대/소문자 변경에 따라 종속 하는 경우 사용 해야는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 속성 동작 운영 체제의 문화권 설정에 관계 없이 일관 되도록 합니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 다양 한를 사용 하 여 두 문자열의 일부를 비교 <xref:System.Globalization.CompareInfo> 개체:  
  
-   <xref:System.Globalization.CompareInfo> 국제 정렬을 사용 하 여 스페인어 (스페인) 문화권을 사용 하 여 연결 된 개체  
  
-   <xref:System.Globalization.CompareInfo> 전통 정렬을 사용 하 여 스페인어 (스페인) 문화권을 사용 하 여 연결 된 개체  
  
-   <xref:System.Globalization.CompareInfo> 연결 된 개체는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CPP/comparestrstr.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CS/comparestrstr.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/VB/comparestrstr.vb#1)]  
  
 다음 예제에서는 <xref:System.Globalization.CompareInfo.Compare%2A> 메서드를 호출하는 방법을 보여 줍니다.  
  
 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>문자 집합에는 무시할 수 있는 문자가 포함되며, 이들 문자는 언어 또는 문화권 구분 비교를 수행하는 경우 고려되지 않습니다. <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String)" /> 메서드 문화권 구분 비교를 수행 하는 경우 이러한 문자를 고려 하지 않습니다. 예를 들어 "ani-잘못 되었습니다." (사용자 지정 하이픈, 또는 U + 00AD 사용)를 사용 하 여 "animal"의 문화권 구분 비교를 두 문자열은 다음 예와 같이 해당 있음을 나타냅니다.  
  
[! 코드 vb[System.Globalization.CompareInfo.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.compare/vb/compare1.vb#1)] 
문자열 비교에서 무시할 수 있는 문자를 인식 하도록 호출 합니다 <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" /> 메서드와의 값을 제공 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> 에 대 한는 <paramref name="options" /> 매개 변수입니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, string string2, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, string string2, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, string2 As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, System::String ^ string2, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * string * System.Globalization.CompareOptions -&gt; int&#xA;override this.Compare : string * string * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.Compare (string1, string2, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="string1">비교할 첫째 문자열입니다.</param>
        <param name="string2">비교할 둘째 문자열입니다.</param>
        <param name="options"><paramref name="string1" />과 <paramref name="string2" />을 비교하는 방법을 정의하는 값입니다. <paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 및 <see cref="F:System.Globalization.CompareOptions.StringSort" /> 값 중 하나 이상의 비트 조합입니다.</param>
        <summary>지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 두 문자열을 비교합니다.</summary>
        <returns>두 비교 대상 간의 어휘 관계를 나타내는 부호 있는 32비트 정수를 반환합니다.  
  
 <list type="table"><listheader><term> 값 
 </term><description> 조건 
 </description></listheader><item><term> 0 
 </term><description> 두 문자열이 같은 경우  
  
 </description></item><item><term> 0보다 작음 
 </term><description><paramref name="string1" />가 <paramref name="string2" />보다 작은 경우  
  
 </description></item><item><term> 0보다 큼 
 </term><description><paramref name="string1" />가 <paramref name="string2" />보다 큰 경우  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 보안 결정은 문자열 비교 또는 대/소문자 변경에 따라 종속 하는 경우 사용 해야는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 속성 동작 운영 체제의 문화권 설정에 관계 없이 일관 되도록 합니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> 보안을 비교 합니다.  
  
   
  
## Examples  
 다른을 사용 하 여 두 문자열을 비교 하는 다음 예제에서는 <xref:System.Globalization.CompareOptions> 설정 합니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrStrOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStrOpt/CPP/comparestrstropt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStrOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStrOpt/CS/comparestrstropt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStrOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStrOpt/VB/comparestrstropt.vb#1)]  
  
 다음 예제에서는 <xref:System.Globalization.CompareInfo.Compare%2A> 메서드를 호출하는 방법을 보여 줍니다.  
  
 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</exception>
        <block subset="none" type="usage"><para>문자 집합에는 무시할 수 있는 문자가 포함되며, 이들 문자는 언어 또는 문화권 구분 비교를 수행하는 경우 고려되지 않습니다. <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" /> 메서드 문화권 구분 비교를 수행 하는 경우 이러한 문자를 고려 하지 않습니다. 비교에서 무시할 수 있는 문자를 인식 하도록 값을 제공 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 나 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> 에 대 한는 <paramref name="options" /> 매개 변수입니다.</para></block>
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, string string2, int offset2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, string string2, int32 offset2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, string2 As String, offset2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, System::String ^ string2, int offset2);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * int * string * int -&gt; int&#xA;override this.Compare : string * int * string * int -&gt; int" Usage="compareInfo.Compare (string1, offset1, string2, offset2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="string1">비교할 첫째 문자열입니다.</param>
        <param name="offset1">비교를 시작할 <paramref name="string1" />에 있는 문자의 인덱스(0부터 시작)입니다.</param>
        <param name="string2">비교할 둘째 문자열입니다.</param>
        <param name="offset2">비교를 시작할 <paramref name="string2" />에 있는 문자의 인덱스(0부터 시작)입니다.</param>
        <summary>한 문자열의 끝 영역을 다른 문자열의 끝 영역과 비교합니다.</summary>
        <returns>두 비교 대상 간의 어휘 관계를 나타내는 부호 있는 32비트 정수를 반환합니다.  
  
 <list type="table"><listheader><term> 값 
 </term><description> 조건 
 </description></listheader><item><term> 0 
 </term><description> 두 문자열이 같은 경우  
  
 </description></item><item><term> 0보다 작음 
 </term><description> 지정된 <paramref name="string1" /> 영역이 지정된 <paramref name="string2" /> 영역보다 작은 경우  
  
 </description></item><item><term> 0보다 큼 
 </term><description> 지정된 <paramref name="string1" /> 영역이 지정된 <paramref name="string2" /> 영역보다 큰 경우  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 보안 결정은 문자열 비교 또는 대/소문자 변경에 따라 종속 하는 경우 사용 해야는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 속성 동작 운영 체제의 문화권 설정에 관계 없이 일관 되도록 합니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 다양 한를 사용 하 여 두 문자열의 일부를 비교 <xref:System.Globalization.CompareInfo> 개체:  
  
-   <xref:System.Globalization.CompareInfo> 국제 정렬을 사용 하 여 스페인어 (스페인) 문화권을 사용 하 여 연결 된 개체  
  
-   <xref:System.Globalization.CompareInfo> 전통 정렬을 사용 하 여 스페인어 (스페인) 문화권을 사용 하 여 연결 된 개체  
  
-   <xref:System.Globalization.CompareInfo> 연결 된 개체는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntStrInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrInt/CPP/comparestrintstrint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntStrInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrInt/CS/comparestrintstrint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntStrInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrInt/VB/comparestrintstrint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset1" /> 또는 <paramref name="offset2" />가 0보다 작습니다.  
  
또는 
 <paramref name="offset1" />이 <paramref name="string1" />의 문자 수보다 크거나 같은 경우  
  
또는 
 <paramref name="offset2" />이 <paramref name="string2" />의 문자 수보다 크거나 같은 경우</exception>
        <block subset="none" type="usage"><para>문자 집합에는 무시할 수 있는 문자가 포함됩니다. <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32)" /> 메서드 언어 또는 문화권 구분 비교를 수행 하는 경우 이러한 문자를 고려 하지 않습니다. 비교에서 무시할 수 있는 문자를 인식 하도록 호출 합니다 <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" /> 메서드 값을 제공 하 고 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> 에 대 한는 <paramref name="options" /> 매개 변수입니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, string string2, int offset2, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, string string2, int32 offset2, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, string2 As String, offset2 As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, System::String ^ string2, int offset2, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * int * string * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.Compare : string * int * string * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.Compare (string1, offset1, string2, offset2, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="string1">비교할 첫째 문자열입니다.</param>
        <param name="offset1">비교를 시작할 <paramref name="string1" />에 있는 문자의 인덱스(0부터 시작)입니다.</param>
        <param name="string2">비교할 둘째 문자열입니다.</param>
        <param name="offset2">비교를 시작할 <paramref name="string2" />에 있는 문자의 인덱스(0부터 시작)입니다.</param>
        <param name="options"><paramref name="string1" />과 <paramref name="string2" />을 비교하는 방법을 정의하는 값입니다. <paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 및 <see cref="F:System.Globalization.CompareOptions.StringSort" /> 값 중 하나 이상의 비트 조합입니다.</param>
        <summary>지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 한 문자열의 끝 영역을 다른 문자열의 시작 영역과 비교합니다.</summary>
        <returns>두 비교 대상 간의 어휘 관계를 나타내는 부호 있는 32비트 정수를 반환합니다.  
  
 <list type="table"><listheader><term> 값 
 </term><description> 조건 
 </description></listheader><item><term> 0 
 </term><description> 두 문자열이 같은 경우  
  
 </description></item><item><term> 0보다 작음 
 </term><description> 지정된 <paramref name="string1" /> 영역이 지정된 <paramref name="string2" /> 영역보다 작은 경우  
  
 </description></item><item><term> 0보다 큼 
 </term><description> 지정된 <paramref name="string1" /> 영역이 지정된 <paramref name="string2" /> 영역보다 큰 경우  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 보안 결정은 문자열 비교 또는 대/소문자 변경에 따라 종속 하는 경우 사용 해야는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 속성 동작 운영 체제의 문화권 설정에 관계 없이 일관 되도록 합니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 다른을 사용 하 여 두 문자열의 일부를 비교 <xref:System.Globalization.CompareOptions> 설정 합니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntStrIntOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrIntOpt/CPP/comparestrintstrintopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntStrIntOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrIntOpt/CS/comparestrintstrintopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntStrIntOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrIntOpt/VB/comparestrintstrintopt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset1" /> 또는 <paramref name="offset2" />가 0보다 작습니다.  
  
또는 
 <paramref name="offset1" />이 <paramref name="string1" />의 문자 수보다 크거나 같은 경우  
  
또는 
 <paramref name="offset2" />이 <paramref name="string2" />의 문자 수보다 크거나 같은 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</exception>
        <block subset="none" type="usage"><para>문자 집합에는 무시할 수 있는 문자가 포함되며, 이들 문자는 언어 또는 문화권 구분 비교를 수행하는 경우 고려되지 않습니다. <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 문화권 구분 비교를 수행 하는 경우 이러한 문자를 고려 하지 않습니다. 비교에서 무시할 수 있는 문자를 인식 하도록 값을 제공 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 나 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> 에 대 한는 <paramref name="options" /> 매개 변수입니다.</para></block>
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, int length1, string string2, int offset2, int length2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, int32 length1, string string2, int32 offset2, int32 length2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, length1 As Integer, string2 As String, offset2 As Integer, length2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, int length1, System::String ^ string2, int offset2, int length2);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * int * int * string * int * int -&gt; int&#xA;override this.Compare : string * int * int * string * int * int -&gt; int" Usage="compareInfo.Compare (string1, offset1, length1, string2, offset2, length2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="string1">비교할 첫째 문자열입니다.</param>
        <param name="offset1">비교를 시작할 <paramref name="string1" />에 있는 문자의 인덱스(0부터 시작)입니다.</param>
        <param name="length1">비교할 <paramref name="string1" />의 연속된 문자 수입니다.</param>
        <param name="string2">비교할 둘째 문자열입니다.</param>
        <param name="offset2">비교를 시작할 <paramref name="string2" />에 있는 문자의 인덱스(0부터 시작)입니다.</param>
        <param name="length2">비교할 <paramref name="string2" />의 연속된 문자 수입니다.</param>
        <summary>한 문자열의 특정 영역을 다른 문자열의 특정 영역과 비교합니다.</summary>
        <returns>두 비교 대상 간의 어휘 관계를 나타내는 부호 있는 32비트 정수를 반환합니다.  
  
 <list type="table"><listheader><term> 값 
 </term><description> 조건 
 </description></listheader><item><term> 0 
 </term><description> 두 문자열이 같은 경우  
  
 </description></item><item><term> 0보다 작음 
 </term><description> 지정된 <paramref name="string1" /> 영역이 지정된 <paramref name="string2" /> 영역보다 작은 경우  
  
 </description></item><item><term> 0보다 큼 
 </term><description> 지정된 <paramref name="string1" /> 영역이 지정된 <paramref name="string2" /> 영역보다 큰 경우  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 보안 결정은 문자열 비교 또는 대/소문자 변경에 따라 종속 하는 경우 사용 해야는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 속성 동작 운영 체제의 문화권 설정에 관계 없이 일관 되도록 합니다.  
  
> [!NOTE]
>  형식의 매개 변수가 있는 문자열 비교 메서드를 사용 해야, 규칙상 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 다양 한를 사용 하 여 두 문자열의 일부를 비교 <xref:System.Globalization.CompareInfo> 개체:  
  
-   <xref:System.Globalization.CompareInfo> 국제 정렬을 사용 하 여 스페인어 (스페인) 문화권을 사용 하 여 연결 된 개체  
  
-   <xref:System.Globalization.CompareInfo> 전통 정렬을 사용 하 여 스페인어 (스페인) 문화권을 사용 하 여 연결 된 개체  
  
-   <xref:System.Globalization.CompareInfo> 연결 된 개체는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntIntStrIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntInt/CPP/comparestrintintstrintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntIntStrIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntInt/CS/comparestrintintstrintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntIntStrIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntInt/VB/comparestrintintstrintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset1" />, <paramref name="length1" />, <paramref name="offset2" /> 또는 <paramref name="length2" />가 0보다 작은 경우  
  
또는 
 <paramref name="offset1" />이 <paramref name="string1" />의 문자 수보다 크거나 같은 경우  
  
또는 
 <paramref name="offset2" />이 <paramref name="string2" />의 문자 수보다 크거나 같은 경우  
  
또는 
 <paramref name="length1" />가 <paramref name="offset1" />에서 <paramref name="string1" /> 끝 사이의 문자 수보다 큰 경우  
  
또는 
 <paramref name="length2" />가 <paramref name="offset2" />에서 <paramref name="string2" /> 끝 사이의 문자 수보다 큰 경우</exception>
        <block subset="none" type="usage"><para>문자 집합에는 무시할 수 있는 문자가 포함됩니다. <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" /> 메서드 언어 또는 문화권 구분 비교를 수행 하는 경우 이러한 문자를 고려 하지 않습니다. 비교에서 무시할 수 있는 문자를 인식 하도록 호출 합니다 <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드 값을 제공 하 고 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> 에 대 한는 <paramref name="options" /> 매개 변수입니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, int length1, string string2, int offset2, int length2, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, int32 length1, string string2, int32 offset2, int32 length2, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, length1 As Integer, string2 As String, offset2 As Integer, length2 As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, int length1, System::String ^ string2, int offset2, int length2, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * int * int * string * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.Compare : string * int * int * string * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.Compare (string1, offset1, length1, string2, offset2, length2, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="string1">비교할 첫째 문자열입니다.</param>
        <param name="offset1">비교를 시작할 <paramref name="string1" />에 있는 문자의 인덱스(0부터 시작)입니다.</param>
        <param name="length1">비교할 <paramref name="string1" />의 연속된 문자 수입니다.</param>
        <param name="string2">비교할 둘째 문자열입니다.</param>
        <param name="offset2">비교를 시작할 <paramref name="string2" />에 있는 문자의 인덱스(0부터 시작)입니다.</param>
        <param name="length2">비교할 <paramref name="string2" />의 연속된 문자 수입니다.</param>
        <param name="options"><paramref name="string1" />과 <paramref name="string2" />을 비교하는 방법을 정의하는 값입니다. <paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 및 <see cref="F:System.Globalization.CompareOptions.StringSort" /> 값 중 하나 이상의 비트 조합입니다.</param>
        <summary>지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 한 문자열의 특정 영역을 다른 문자열의 특정 영역과 비교합니다.</summary>
        <returns>두 비교 대상 간의 어휘 관계를 나타내는 부호 있는 32비트 정수를 반환합니다.  
  
 <list type="table"><listheader><term> 값 
 </term><description> 조건 
 </description></listheader><item><term> 0 
 </term><description> 두 문자열이 같은 경우  
  
 </description></item><item><term> 0보다 작음 
 </term><description> 지정된 <paramref name="string1" /> 영역이 지정된 <paramref name="string2" /> 영역보다 작은 경우  
  
 </description></item><item><term> 0보다 큼 
 </term><description> 지정된 <paramref name="string1" /> 영역이 지정된 <paramref name="string2" /> 영역보다 큰 경우  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 보안 결정은 문자열 비교 또는 대/소문자 변경에 따라 종속 하는 경우 사용 해야는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 속성 동작 운영 체제의 문화권 설정에 관계 없이 일관 되도록 합니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 다른을 사용 하 여 두 문자열의 일부를 비교 <xref:System.Globalization.CompareOptions> 설정 합니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt/CPP/comparestrintintstrintintopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt/CS/comparestrintintstrintintopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt/VB/comparestrintintstrintintopt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset1" />, <paramref name="length1" />, <paramref name="offset2" /> 또는 <paramref name="length2" />가 0보다 작은 경우  
  
또는 
 <paramref name="offset1" />이 <paramref name="string1" />의 문자 수보다 크거나 같은 경우  
  
또는 
 <paramref name="offset2" />이 <paramref name="string2" />의 문자 수보다 크거나 같은 경우  
  
또는 
 <paramref name="length1" />가 <paramref name="offset1" />에서 <paramref name="string1" /> 끝 사이의 문자 수보다 큰 경우  
  
또는 
 <paramref name="length2" />가 <paramref name="offset2" />에서 <paramref name="string2" /> 끝 사이의 문자 수보다 큰 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</exception>
        <block subset="none" type="usage"><para>문자 집합에는 무시할 수 있는 문자가 포함됩니다. <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드 문화권 구분 비교를 수행 하는 경우 이러한 문자를 고려 하지 않습니다. 비교에서 무시할 수 있는 문자를 인식 하도록 값을 제공 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 나 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> 에 대 한는 <paramref name="options" /> 매개 변수입니다.</para></block>
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="compareInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">현재 <see cref="T:System.Globalization.CompareInfo" />와 비교할 개체입니다.</param>
        <summary>지정한 개체와 현재 <see cref="T:System.Globalization.CompareInfo" /> 개체가 같은지 여부를 확인합니다.</summary>
        <returns>지정한 개체가 현재 <see cref="T:System.Globalization.CompareInfo" />와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 두 개의 <xref:System.Globalization.CompareInfo> 개체가 같은지 경우 해당 <xref:System.Globalization.CompareInfo.LCID%2A> 및 <xref:System.Globalization.CompareInfo.Name%2A> 속성이 같으면 합니다.  
  
 이 메서드는 <xref:System.Object.Equals%2A?displayProperty=nameWithType>를 재정의합니다.  
  
 보안 결정은 문자열 비교 또는 대/소문자 변경에 따라 종속 하는 경우 사용 해야는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 속성 동작 운영 체제의 문화권 설정에 관계 없이 일관 되도록 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCompareInfo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>새 <see cref="T:System.Globalization.CompareInfo" /> 개체를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (int culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(int32 culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompareInfo (culture As Integer) As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(int culture);" />
      <MemberSignature Language="F#" Value="static member GetCompareInfo : int -&gt; System.Globalization.CompareInfo" Usage="System.Globalization.CompareInfo.GetCompareInfo culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture">문화권 식별자를 나타내는 정수입니다.</param>
        <summary>지정된 식별자가 있는 문화권과 연결된 새 <see cref="T:System.Globalization.CompareInfo" /> 개체를 초기화합니다.</summary>
        <returns>지정된 식별자가 있는 문화권과 연결되어 있고 현재 <see cref="T:System.Globalization.CompareInfo" />의 문자열 비교 메서드를 사용하는 새 <see cref="T:System.Reflection.Assembly" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 다양 한를 사용 하 여 두 문자열의 일부를 비교 <xref:System.Globalization.CompareInfo> 개체:  
  
-   <xref:System.Globalization.CompareInfo> 국제 정렬을 사용 하 여 스페인어 (스페인) 문화권을 사용 하 여 연결 된 개체  
  
-   <xref:System.Globalization.CompareInfo> 전통 정렬을 사용 하 여 스페인어 (스페인) 문화권을 사용 하 여 연결 된 개체  
  
-   <xref:System.Globalization.CompareInfo> 연결 된 개체는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CPP/comparestrstr.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CS/comparestrstr.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/VB/comparestrstr.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompareInfo (name As String) As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetCompareInfo : string -&gt; System.Globalization.CompareInfo" Usage="System.Globalization.CompareInfo.GetCompareInfo name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">문화권 이름을 나타내는 문자열입니다.</param>
        <summary>지정된 이름이 있는 문화권과 연결된 새 <see cref="T:System.Globalization.CompareInfo" /> 개체를 초기화합니다.</summary>
        <returns>지정된 식별자가 있는 문화권과 연결되어 있고 현재 <see cref="T:System.Globalization.CompareInfo" />의 문자열 비교 메서드를 사용하는 새 <see cref="T:System.Reflection.Assembly" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 다양 한를 사용 하 여 두 문자열의 일부를 비교 <xref:System.Globalization.CompareInfo> 개체:  
  
-   <xref:System.Globalization.CompareInfo> 국제 정렬을 사용 하 여 스페인어 (스페인) 문화권을 사용 하 여 연결 된 개체  
  
-   <xref:System.Globalization.CompareInfo> 전통 정렬을 사용 하 여 스페인어 (스페인) 문화권을 사용 하 여 연결 된 개체  
  
-   <xref:System.Globalization.CompareInfo> 연결 된 개체는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CPP/comparestrstr.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CS/comparestrstr.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/VB/comparestrstr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="name" />이 잘못된 문화권 이름인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (int culture, System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(int32 culture, class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.Int32,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(int culture, System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="static member GetCompareInfo : int * System.Reflection.Assembly -&gt; System.Globalization.CompareInfo" Usage="System.Globalization.CompareInfo.GetCompareInfo (culture, assembly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture">문화권 식별자를 나타내는 정수입니다.</param>
        <param name="assembly">사용할 문자열 비교 메서드가 들어 있는 <see cref="T:System.Reflection.Assembly" />입니다.</param>
        <summary>지정된 문화권과 연결되어 있고 지정된 <see cref="T:System.Globalization.CompareInfo" />의 문자열 비교 메서드를 사용하는 새 <see cref="T:System.Reflection.Assembly" /> 개체를 초기화합니다.</summary>
        <returns>지정된 식별자가 있는 문화권과 연결되어 있고 현재 <see cref="T:System.Globalization.CompareInfo" />의 문자열 비교 메서드를 사용하는 새 <see cref="T:System.Reflection.Assembly" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  이 메서드의 동작은 예측할 수 없습니다. 어셈블리를 입력 하지 않는이 메서드의 버전을 사용 하도록 응용 프로그램에 대 한 것이 좋습니다.  
  
 합니다 `assembly` 와 동일한 형식 매개 변수 이어야 <xref:System.Reflection.Module.Assembly%2A?displayProperty=nameWithType>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="assembly" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="assembly" />가 잘못된 형식인 경우</exception>
        <altmember cref="P:System.Reflection.Module.Assembly" />
      </Docs>
    </Member>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (string name, System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(string name, class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.String,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(System::String ^ name, System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="static member GetCompareInfo : string * System.Reflection.Assembly -&gt; System.Globalization.CompareInfo" Usage="System.Globalization.CompareInfo.GetCompareInfo (name, assembly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">문화권 이름을 나타내는 문자열입니다.</param>
        <param name="assembly">사용할 문자열 비교 메서드가 들어 있는 <see cref="T:System.Reflection.Assembly" />입니다.</param>
        <summary>지정된 문화권과 연결되어 있고 지정된 <see cref="T:System.Globalization.CompareInfo" />의 문자열 비교 메서드를 사용하는 새 <see cref="T:System.Reflection.Assembly" /> 개체를 초기화합니다.</summary>
        <returns>지정된 식별자가 있는 문화권과 연결되어 있고 현재 <see cref="T:System.Globalization.CompareInfo" />의 문자열 비교 메서드를 사용하는 새 <see cref="T:System.Reflection.Assembly" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  이 메서드의 동작은 예측할 수 없습니다. 어셈블리를 입력 하지 않는이 메서드의 버전을 사용 하는 것이 좋습니다.  
  
 합니다 `assembly` 와 동일한 형식 매개 변수 이어야 <xref:System.Reflection.Module.Assembly%2A?displayProperty=nameWithType>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="assembly" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="name" />이 잘못된 문화권 이름인 경우  
  
또는 
 <paramref name="assembly" />가 잘못된 형식인 경우</exception>
        <altmember cref="P:System.Reflection.Module.Assembly" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHashCode">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이 <see cref="T:System.Globalization.CompareInfo" /> 인스턴스 또는 특정 문자열에 대한 해시 코드를 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="compareInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>해시 알고리즘 및 해시 테이블 같은 데이터 구조의 현재 <see cref="T:System.Globalization.CompareInfo" />에 대한 해시 함수의 역할을 합니다.</summary>
        <returns>현재 <see cref="T:System.Globalization.CompareInfo" />의 해시 코드입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>를 재정의합니다.  
  
 이 메서드는 <xref:System.Globalization.CompareInfo.Equals%2A> 메서드에 따라 동일한 두 개체에 대해 같은 해시 코드를 생성합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.CompareInfo.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (ReadOnlySpan&lt;char&gt; source, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetHashCode(valuetype System.ReadOnlySpan`1&lt;char&gt; source, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetHashCode(System.ReadOnlySpan{System.Char},System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (source As ReadOnlySpan(Of Char), options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(ReadOnlySpan&lt;char&gt; source, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : ReadOnlySpan&lt;char&gt; * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.GetHashCode (source, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public virtual int GetHashCode (string source, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(string source, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetHashCode(System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHashCode (source As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHashCode(System::String ^ source, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : string * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.GetHashCode (source, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="source">해시 코드가 반환될 문자열입니다.</param>
        <param name="options">문자열을 비교하는 방법을 결정하는 값입니다.</param>
        <summary>지정된 비교 옵션 기반의 문자열에 대한 해시 코드를 가져옵니다.</summary>
        <returns>부호 있는 32비트 정수 해시 코드입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 동작 <xref:System.Globalization.CompareInfo.GetHashCode%2A> 다른 또는 하나의.NET Framework 플랫폼에서 다른 공용 언어 런타임의 버전에서 변경 될 수 있는 해당 구현에 따라 달라 집니다.  
  
> [!IMPORTANT]
>  두 string 개체 같으면는 <xref:System.Globalization.CompareInfo.GetHashCode%2A> 메서드 같은 값을 반환 합니다. 그러나 각 고유한 문자열 값에 대 한 고유 해시 코드 값 하지입니다. 다른 문자열에는 같은 해시 코드를 반환할 수 있습니다.  
>   
>  자체 해시 코드를 안정적인 것으로 보장 되지 않습니다. 동일한 문자열에 대 한 해시 코드를 단일 버전의.NET Framework에 대 한 플랫폼 (예: 32 비트 및 64 비트) 및.NET Framework의 버전 간에 다를 수 있습니다. 일부 경우에도 응용 프로그램 도메인 별로 다릅니다 수 있습니다.  
>   
>  결과적으로 코드 생성 된 응용 프로그램 도메인 외부에서 사용 되지 않아야 하는 해시 컬렉션의 키 필드를 사용 하지 않아야 및 유지 되지 해야 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.</exception>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSortKey">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>문자열에 대한 <see cref="T:System.Globalization.SortKey" /> 개체를 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSortKey">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.SortKey GetSortKey (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Globalization.SortKey GetSortKey(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetSortKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSortKey (source As String) As SortKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Globalization::SortKey ^ GetSortKey(System::String ^ source);" />
      <MemberSignature Language="F#" Value="abstract member GetSortKey : string -&gt; System.Globalization.SortKey&#xA;override this.GetSortKey : string -&gt; System.Globalization.SortKey" Usage="compareInfo.GetSortKey source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.SortKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="source"><see cref="T:System.Globalization.SortKey" /> 개체를 가져올 문자열입니다.</param>
        <summary>지정된 문자열의 정렬 키를 가져옵니다.</summary>
        <returns>지정된 문자열의 정렬 키가 들어 있는 <see cref="T:System.Globalization.SortKey" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 문자열의 각 문자에는 여러 범주의 정렬 가중치가, 스크립트, 사전순, 대/소문자를 포함 하 여 및 분음 부호 가중치 지정 됩니다. 정렬 키는 특정 문자열에 대 한 이러한 가중치의 리포지토리입니다. 예를 들어 정렬 키의 대/소문자 가중치 문자열 뒤에 알파벳 가중치 문자열을 포함할 수 있습니다. 합니다 <xref:System.Globalization.CompareInfo.GetSortKey%2A> 메서드는 Windows API 메서드로 `LCMapString` LCMAP_SORTKEY 플래그를 사용 하 여 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.SortKey" />
      </Docs>
    </Member>
    <Member MemberName="GetSortKey">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.SortKey GetSortKey (string source, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Globalization.SortKey GetSortKey(string source, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetSortKey(System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSortKey (source As String, options As CompareOptions) As SortKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Globalization::SortKey ^ GetSortKey(System::String ^ source, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member GetSortKey : string * System.Globalization.CompareOptions -&gt; System.Globalization.SortKey&#xA;override this.GetSortKey : string * System.Globalization.CompareOptions -&gt; System.Globalization.SortKey" Usage="compareInfo.GetSortKey (source, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.SortKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="source"><see cref="T:System.Globalization.SortKey" /> 개체를 가져올 문자열입니다.</param>
        <param name="options">정렬 키가 계산되는 방법을 정의하는 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 및 <see cref="F:System.Globalization.CompareOptions.StringSort" /> 열거형 값 중 하나 이상의 비트 조합입니다.</param>
        <summary>지정된 <see cref="T:System.Globalization.SortKey" /> 값을 사용하여 지정된 문자열의 <see cref="T:System.Globalization.CompareOptions" /> 개체를 가져옵니다.</summary>
        <returns>지정된 문자열의 정렬 키가 들어 있는 <see cref="T:System.Globalization.SortKey" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 문자열의 각 문자에는 여러 범주의 정렬 가중치가, 스크립트, 사전순, 대/소문자를 포함 하 여 및 분음 부호 가중치 지정 됩니다. 정렬 키는 특정 문자열에 대 한 이러한 가중치의 리포지토리입니다. 예를 들어 정렬 키의 대/소문자 가중치 문자열 뒤에 알파벳 가중치 문자열을 포함할 수 있습니다. 합니다 <xref:System.Globalization.CompareInfo.GetSortKey%2A> 메서드는 Windows API 메서드로 `LCMapString` LCMAP_SORTKEY 플래그를 사용 하 여 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</exception>
        <altmember cref="T:System.Globalization.SortKey" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>문자열 전체나 일부에서 맨 처음 검색된 값의 인덱스(0부터 시작)를 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char -&gt; int&#xA;override this.IndexOf : string * char -&gt; int" Usage="compareInfo.IndexOf (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="value"><paramref name="source" />에서 찾을 문자입니다.</param>
        <summary>전체 소스 문자열에서 지정된 문자를 검색하고, 맨 처음 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</summary>
        <returns><paramref name="value" />에서 <paramref name="source" />를 찾은 경우 맨 처음 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다. <paramref name="value" />이 무시할 수 있는 문자인 경우 0(영)을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 문자열의 끝에 문자열의 시작 부분에서 소스 문자열을 검색합니다.  
  
 이 오버 로드는 문화권 구분 검색을 수행합니다. 경우 `value` 미리 구성 된 유니코드 문자를 나타내는, 합자 "→"와 같은 (U + 00 C 6), 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목 동일 간주 될 수 있습니다 (u+0041, U + 0045) 문화권에 따라 합니다. 서 수 (문화권) 검색을 수행 하려면 형식 매개 변수가 같으면 유니코드 코드 포인트를 호출 해야 오버 로드는만 문자 같은 다른 문자 것으로 간주 됩니다 <xref:System.Globalization.CompareOptions> 사용 하 여 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 값입니다. 와 달리 <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType>, 문화권 구분 비교를 수행 하는 오버 로드는 <xref:System.String.IndexOf%2A?displayProperty=nameWithType> 문자는 서 수 비교를 수행 하 고 문화권 구분 비교를 수행 하는 문자열을 검색 하는 오버 로드에 대 한 검색 하는 메서드.  
  
> [!NOTE]
>  형식의 매개 변수가 있는 문자열 비교 메서드를 사용 해야, 규칙상 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 내에서 부분 문자열의 인덱스를 결정합니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.</exception>
        <block subset="none" type="usage"><para>문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다. 문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자 결과 해당 문자가 제거를 사용 하 여 검색 합니다. 이 경우에 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" /> 메서드는 일치 항목은 맨 앞에 있음을 나타내기 위해 0 (영)을 항상 반환 <paramref name="source" />합니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" /> 메서드는 두 문자열에서 하이픈 (U + 00AD)를 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 메서드는 일치 항목을 발견 했다는 것을 나타내려면 0 (영) 문자열의 시작 부분  
  
[! 코드 csharp[System.Globalization.CompareInfo.IndexOf#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable2.cs#3)] [! 코드 vb[System.Globalization.CompareInfo.IndexOf#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable2.vb#3)]</para></block>
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string -&gt; int&#xA;override this.IndexOf : string * string -&gt; int" Usage="compareInfo.IndexOf (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="value"><paramref name="source" />에서 찾을 문자열입니다.</param>
        <summary>전체 소스 문자열에서 지정된 부분 문자열을 검색하고, 맨 처음 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</summary>
        <returns><paramref name="value" />에서 <paramref name="source" />를 찾은 경우 맨 처음 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다. <paramref name="value" />이 무시할 수 있는 문자인 경우 0(영)을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 앞으로 문자열의 시작 부분에서 시작 하 고 문자열의 끝에서 끝나는 소스 문자열 검색 됩니다.  
  
 이 오버 로드는 문화권 구분 검색을 수행합니다. 미리 구성 된 문자를 합자 "→"와 같은 (U + 6)을 나타내는 유니코드 값은 "AE"와 같은 올바른 순서로 구성 요소가 문자에 해당 간주 될 수 있습니다 (u+0041, U + 0045) 문화권에 따라 합니다. 서 수 (문화권) 검색을 수행 하려면, 유니코드 값을 비교 하는 위치 하나를 사용 해야 형식의 매개 변수가 있는 오버 로드 <xref:System.Globalization.CompareOptions> 사용 하는 <xref:System.Globalization.CompareOptions.Ordinal> 값입니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 내에서 부분 문자열의 인덱스를 결정합니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="value" />가 <see langword="null" />입니다.</exception>
        <block subset="none" type="usage"><para>문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다. 문화권 구분 검색에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다. 하는 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어 합니다 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" /> 메서드는 일치 항목은 맨 앞에 있음을 나타내기 위해 0 (영)을 항상 반환 <paramref name="source" />합니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" /> 메서드는 두 문자열의 세 가지 부분 문자열 (하이픈이 (U + 00AD), "n" 뒤에 하이픈이 및 하이픈이 뒤에 "m")을 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 각각의 경우에서 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 결과 동일 사용자 지정 하이픈의 포함 되지 않았던 것 처럼 <paramref name="value" />합니다. 하이픈이을 검색할 때 메서드는 문자열의 시작 부분에서 일치 항목을 발견 했다는 것을 나타내려면 0 (영)을 반환 합니다.  
  
[! 코드 csharp[System.Globalization.CompareInfo.IndexOf#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable1.cs#2)] [! 코드 vb[System.Globalization.CompareInfo.IndexOf#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable1.vb#2)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * char * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="value"><paramref name="source" />에서 찾을 문자입니다.</param>
        <param name="options">문자열을 비교하는 방법을 정의하는 값입니다. <paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</param>
        <summary>전체 소스 문자열에서 지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 문자를 검색하고, 맨 처음 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</summary>
        <returns><paramref name="value" />에서 지정된 비교 옵션을 사용하여 <paramref name="source" />를 찾은 경우 맨 처음 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다. <paramref name="value" />이 무시할 수 있는 문자인 경우 0(영)을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 앞으로 문자열의 시작 부분에서 시작 하 고 문자열의 끝에서 끝나는 소스 문자열 검색 됩니다.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.  
  
 하는 경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다. 문자는 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "→" (U + 00 C 6), 같은 것으로 간주 될 수 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목에 해당 하는 (u+0041, U + 0045) 문화권에 따라 합니다. 경우 `options` 포함 된 <xref:System.Globalization.CompareOptions.Ordinal> 서 수 (문화권) 검색을 수행 하는 값이 오버이 로드 합니다. 문자를 유니코드 값이 동일한 경우에 다른 문자를 해당 간주 됩니다. 오버 로드 <xref:System.String.IndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 문화권 구분 검색을 수행 하는 문자열을 검색 하는 반면 합니다.  
  
> [!NOTE]
>  형식의 매개 변수가 있는 문자열 비교 메서드를 사용 해야, 규칙상 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 내에서 부분 문자열의 인덱스를 결정합니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</exception>
        <block subset="none" type="usage"><para>문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다. 문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자 결과 해당 문자가 제거를 사용 하 여 검색 합니다. 이 경우에 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> 메서드는 일치 항목은 맨 앞에 있음을 나타내기 위해 0 (영)을 항상 반환 <paramref name="source" />합니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> 두 문자열의 하이픈이 (U + 00AD)에 대 한 검색 메서드를 사용 합니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 문화권 구분 검색을 0을 반환 합니다 (영) 일치 하는 항목이 발견 했다는 것을 나타내려면 문자열의 시작 부분입니다. 그러나 서 수 검색을 성공적으로 사용자 지정 하이픈 한 문자열에서 찾아 보고 없는 것에서 두 번째 문자열입니다.  
  
[! 코드 csharp[System.Globalization.CompareInfo.IndexOf#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable3.cs#4)] [! 코드 vb[System.Globalization.CompareInfo.IndexOf#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable3.vb#4)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * int -&gt; int&#xA;override this.IndexOf : string * char * int -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Char" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="value"><paramref name="source" />에서 찾을 문자입니다.</param>
        <param name="startIndex">검색의 0부터 시작하는 인덱스입니다.</param>
        <summary>소스 문자열 중 지정된 인덱스부터 문자열 끝까지의 영역에서 지정된 문자를 검색하고, 맨 처음 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</summary>
        <returns><paramref name="value" /> 중 <paramref name="source" />부터 <paramref name="startIndex" /> 끝까지의 영역에서 <paramref name="source" />를 찾은 경우 맨 처음 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다. <paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 소스 문자열에서 정방향으로 검색은 `startIndex` 문자열의 끝에서 끝나는 합니다.  
  
 이 오버 로드는 문화권 구분 검색을 수행합니다. 문자는 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "→" (U + 00 C 6), 같은 것으로 간주 될 수 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목에 해당 하는 (u+0041, U + 0045) 문화권에 따라 합니다. 유니코드 값이 동일한 경우에 문자 같은 다른 문자로으로 간주 되는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하 여 <xref:System.Globalization.CompareOptions.Ordinal> 값입니다. 오버 로드 <xref:System.String.IndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 문화권 구분 검색을 수행 하는 문자열을 검색 하는 반면 합니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다. 사실은 <xref:System.Globalization.CompareInfo.IndexOf%2A> 하 고 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 도과 동일한 문자열의 다른 부분에서 검색 하는 `startIndex` 매개 변수입니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.</exception>
        <block subset="none" type="usage"><para>문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다. 문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자 결과 해당 문자가 제거를 사용 하 여 검색 합니다. 이 경우에 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 검색을 시작할 문자 위치는입니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" /> 메서드는 두 문자열의 "n" 후 하이픈이 (U + 00AD)를 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 메서드는 "n"의 위치에서 일치 항목을 발견 했다는 것을 나타내려면 1을 반환 합니다.  
  
[! 코드 csharp[System.Globalization.CompareInfo.IndexOf#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable4.cs#5)] [! 코드 vb[System.Globalization.CompareInfo.IndexOf#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable4.vb#5)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * string * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="value"><paramref name="source" />에서 찾을 문자열입니다.</param>
        <param name="options"><paramref name="source" />과 <paramref name="value" />을 비교하는 방법을 정의하는 값입니다. <paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</param>
        <summary>전체 소스 문자열에서 지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 부분 문자열을 검색하고, 맨 처음 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</summary>
        <returns><paramref name="value" />에서 지정된 비교 옵션을 사용하여 <paramref name="source" />를 찾은 경우 맨 처음 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다. <paramref name="value" />이 무시할 수 있는 문자인 경우 0(영)을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 앞으로 문자열의 시작 부분에서 시작 하 고 문자열의 끝에서 끝나는 소스 문자열 검색 됩니다.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.  
  
 하는 경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다. 미리 구성 된 문자를 합자 "→"와 같은 (U + 6)을 나타내는 유니코드 값은 "AE"와 같은 올바른 순서로 구성 요소가 문자에 해당 간주 될 수 있습니다 (u+0041, U + 0045) 문화권에 따라 합니다. 하는 경우 `options` 포함 된 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 서 수 (문화권) 검색을 수행 유니코드 값을 비교 하는 위치입니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 내에서 부분 문자열의 인덱스를 결정합니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="value" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</exception>
        <block subset="none" type="usage"><para>문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다. 문화권 구분 검색(즉, <paramref name="options" />이 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />가 아닌 경우)에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다. 하는 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어 합니다 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> 메서드는 일치 항목은 맨 앞에 있음을 나타내기 위해 0 (영)을 항상 반환 <paramref name="source" />합니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> 메서드는 두 문자열의 세 가지 부분 문자열 (하이픈이 (U + 00AD), "n" 뒤에 하이픈이 및 하이픈이 뒤에 "m")을 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 사용자 지정 하이픈을 무시할 수 있는 문자 이기 때문에 문화권 구분 검색을 사용자 지정 하이픈 검색 문자열에 포함 되지 않은 경우 반환 된 값과 같아야를 반환 합니다. 그러나 서 수 검색을 성공적으로 사용자 지정 하이픈 한 문자열에서 찾아 보고 없는 것에서 두 번째 문자열입니다.  
  
[! 코드 csharp[System.Globalization.CompareInfo.IndexOf#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable5.cs#6)] [! 코드 vb[System.Globalization.CompareInfo.IndexOf#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable5.vb#6)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * int -&gt; int&#xA;override this.IndexOf : string * string * int -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="value"><paramref name="source" />에서 찾을 문자열입니다.</param>
        <param name="startIndex">검색의 0부터 시작하는 인덱스입니다.</param>
        <summary>소스 문자열 중 지정된 인덱스부터 문자열 끝까지의 영역에서 지정된 부분 문자열을 검색하고, 맨 처음 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</summary>
        <returns><paramref name="value" /> 중 <paramref name="source" />부터 <paramref name="startIndex" /> 끝까지의 영역에서 <paramref name="source" />를 찾은 경우 맨 처음 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다. <paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 소스 문자열에서 정방향으로 검색은 `startIndex` 문자열의 끝에서 끝나는 합니다.  
  
 이 오버 로드는 문화권 구분 검색을 수행합니다. 미리 구성 된 문자를 합자 "→"와 같은 (U + 6)을 나타내는 유니코드 값은 "AE"와 같은 올바른 순서로 구성 요소가 문자에 해당 간주 될 수 있습니다 (u+0041, U + 0045) 문화권에 따라 합니다. 유니코드 값을 비교 하는 위치는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하는 <xref:System.Globalization.CompareOptions.Ordinal> 값입니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다. 사실은 <xref:System.Globalization.CompareInfo.IndexOf%2A> 하 고 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 도과 동일한 문자열의 다른 부분에서 검색 하는 `startIndex` 매개 변수입니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="value" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.</exception>
        <block subset="none" type="usage"><para>문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다. 문화권 구분 검색에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다. 하는 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어 합니다 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 검색을 시작할 문자 위치는입니다.  
  
다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" /> 메서드는 두 문자열의 "m" 뒤에 하이픈이 (U + 00AD)의 위치를 찾는 데 사용 됩니다. 문자열 중 하나에만 필수 부분 문자열이 포함되어 있습니다. 두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 메서드 문자열 "m"의 인덱스를 반환 합니다. "m"이 앞에 붙은 사용자 지정 하이픈이 포함된 첫 번째 문자열의 경우, 메서드가 사용자 지정 하이픈의 인덱스를 반환하지 못하고 대신 "m"의 인덱스를 반환합니다.  
  
[! 코드 csharp[System.Globalization.CompareInfo.IndexOf#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable13.cs#14)] [! 코드 vb[System.Globalization.CompareInfo.IndexOf#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable13.vb#14)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * char * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="value"><paramref name="source" />에서 찾을 문자입니다.</param>
        <param name="startIndex">검색의 0부터 시작하는 인덱스입니다.</param>
        <param name="options"><paramref name="source" />과 <paramref name="value" />을 비교하는 방법을 정의하는 값입니다. <paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</param>
        <summary>소스 문자열 중 지정된 인덱스부터 문자열 끝까지의 영역에서 지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 문자를 검색하고, 맨 처음 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</summary>
        <returns><paramref name="value" /> 중 <paramref name="source" />부터 <paramref name="startIndex" /> 끝까지의 영역에서 지정된 비교 옵션을 사용하여 <paramref name="source" />를 찾은 경우 맨 처음 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다. <paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 소스 문자열에서 정방향으로 검색은 `startIndex` 문자열의 끝에서 끝나는 합니다.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.  
  
 하는 경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다. 문자는 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "→" (U + 00 C 6), 같은 것으로 간주 될 수 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목에 해당 하는 (u+0041, U + 0045) 문화권에 따라 합니다. 경우 `options` 포함 된 <xref:System.Globalization.CompareOptions.Ordinal> 서 수 (문화권) 검색을 수행 하는 값이 오버이 로드 합니다. 문자를 유니코드 값이 동일한 경우에 다른 문자를 해당 간주 됩니다. 오버 로드 <xref:System.String.IndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 문화권 구분 검색을 수행 하는 문자열을 검색 하는 반면 합니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다. 사실은 <xref:System.Globalization.CompareInfo.IndexOf%2A> 하 고 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 도과 동일한 문자열의 다른 부분에서 검색 하는 `startIndex` 매개 변수입니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</exception>
        <block subset="none" type="usage"><para>문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다. 문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자 결과 해당 문자가 제거를 사용 하 여 검색 합니다. 이 경우에 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 항상 반환 <paramref name="startIndex" />는 검색 먼저 시작 문자 위치입니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 두 문자열의 "n" 후 하이픈이 (U + 00AD)를 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 문화권 구분 검색에는 "n"의 위치에서 일치 항목을 발견 했다는 것을 나타내려면 1을 반환 합니다. 그러나 서 수 검색을 성공적으로 사용자 지정 하이픈 한 문자열에서 찾아 보고 없는 것에서 두 번째 문자열입니다.  
  
[! 코드 csharp[System.Globalization.CompareInfo.IndexOf#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable7.cs#8)] [! 코드 vb[System.Globalization.CompareInfo.IndexOf#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable7.vb#8)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * int * int -&gt; int&#xA;override this.IndexOf : string * char * int * int -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="value"><paramref name="source" />에서 찾을 문자입니다.</param>
        <param name="startIndex">검색의 0부터 시작하는 인덱스입니다.</param>
        <param name="count">검색할 섹션에 있는 요소 수입니다.</param>
        <summary>소스 문자열 중 지정된 인덱스에서 시작하고 지정된 수의 요소를 포함하는 영역에서 지정된 문자를 검색하고, 맨 처음 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</summary>
        <returns><paramref name="value" /> 중 <paramref name="source" />에서 시작하고 <paramref name="startIndex" />로 지정된 수의 요소를 포함하는 영역에서 <paramref name="count" />를 찾은 경우 맨 처음 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다. <paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 소스 문자열에서 정방향으로 검색 됩니다 `startIndex` 에서 끝나는 `startIndex`  +  `count` -1입니다.  
  
 이 오버 로드는 문화권 구분 검색을 수행합니다. 문자는 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "→" (U + 00 C 6), 같은 것으로 간주 될 수 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목에 해당 하는 (u+0041, U + 0045) 문화권에 따라 합니다. 유니코드 값이 동일한 경우에 문자 같은 다른 문자로으로 간주 되는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하 여 <xref:System.Globalization.CompareOptions.Ordinal> 값입니다. 오버 로드 <xref:System.String.IndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 문화권 구분 검색을 수행 하는 문자열을 검색 하는 반면 합니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.  
  
또는 
 <paramref name="count" />가 0보다 작은 경우  
  
또는 
 <paramref name="startIndex" /> 및 <paramref name="count" />가 <paramref name="source" />의 올바른 섹션을 지정하지 않습니다.</exception>
        <block subset="none" type="usage"><para>문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다. 문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자 결과 해당 문자가 제거를 사용 하 여 검색 합니다. 이 경우는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 되는 검색 먼저 시작 문자 위치입니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" /> 메서드는 두 문자열의 "n" 후 하이픈이 (U + 00AD)를 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 메서드는 "n"의 위치에서 일치 항목을 발견 했다는 것을 나타내려면 1을 반환 합니다.  
  
[! 코드 csharp[System.Globalization.CompareInfo.IndexOf#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable8.cs#9)] [! 코드 vb[System.Globalization.CompareInfo.IndexOf#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable8.vb#9)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * string * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="value"><paramref name="source" />에서 찾을 문자열입니다.</param>
        <param name="startIndex">검색의 0부터 시작하는 인덱스입니다.</param>
        <param name="options"><paramref name="source" />과 <paramref name="value" />을 비교하는 방법을 정의하는 값입니다. <paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</param>
        <summary>소스 문자열 중 지정된 인덱스부터 문자열 끝까지의 영역에서 지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 부분 문자열을 검색하고, 맨 처음 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</summary>
        <returns><paramref name="value" /> 중 <paramref name="source" />부터 <paramref name="startIndex" /> 끝까지의 영역에서 지정된 비교 옵션을 사용하여 <paramref name="source" />를 찾은 경우 맨 처음 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다. <paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 소스 문자열에서 정방향으로 검색은 `startIndex` 문자열의 끝에서 끝나는 합니다.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.  
  
 하는 경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다. 미리 구성 된 문자를 합자 "→"와 같은 (U + 6)을 나타내는 유니코드 값은 "AE"와 같은 올바른 순서로 구성 요소가 문자에 해당 간주 될 수 있습니다 (u+0041, U + 0045) 문화권에 따라 합니다. 하는 경우 `options` 포함 된 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 서 수 (문화권) 검색을 수행 유니코드 값을 비교 하는 위치입니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다. 사실은 <xref:System.Globalization.CompareInfo.IndexOf%2A> 하 고 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 도과 동일한 문자열의 다른 부분에서 검색 하는 `startIndex` 매개 변수입니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="value" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</exception>
        <block subset="none" type="usage"><para>문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다. 문화권 구분 검색(즉, <paramref name="options" />이 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />가 아닌 경우)에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다. 하는 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어 합니다 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 검색을 시작할 문자 위치는입니다.  
  
다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 "m"가 포함 된 두 문자열의 세 번째 문자 위치부터 뒤에 하이픈이 (U + 00AD)의 위치를 찾는 데 사용 됩니다. 문자열 중 하나에만 필수 부분 문자열이 포함되어 있습니다. 두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자이므로, 문화권 구분 비교를 수행하는 경우 메서드는 문자열에서 "m"의 인덱스를 반환합니다. "m"이 앞에 붙은 사용자 지정 하이픈이 포함된 첫 번째 문자열의 경우, 메서드가 사용자 지정 하이픈의 인덱스를 반환하지 못하고 대신 "m"의 인덱스를 반환합니다. 메서드는 서수 비교를 수행하는 경우에만 첫 번째 문자열에서 사용자 지정 하이픈의 인덱스를 반환합니다.  
  
[! 코드 csharp[System.Globalization.CompareInfo.IndexOf#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable14.cs#15)] [! 코드 vb[System.Globalization.CompareInfo.IndexOf#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable14.vb#15)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * int * int -&gt; int&#xA;override this.IndexOf : string * string * int * int -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="value"><paramref name="source" />에서 찾을 문자열입니다.</param>
        <param name="startIndex">검색의 0부터 시작하는 인덱스입니다.</param>
        <param name="count">검색할 섹션에 있는 요소 수입니다.</param>
        <summary>소스 문자열 중 지정된 인덱스에서 시작하고 지정된 수의 요소를 포함하는 영역에서 지정된 부분 문자열을 검색하고, 맨 처음 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</summary>
        <returns><paramref name="value" /> 중 <paramref name="source" />에서 시작하고 <paramref name="startIndex" />로 지정된 수의 요소를 포함하는 영역에서 <paramref name="count" />를 찾은 경우 맨 처음 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다. <paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 소스 문자열에서 정방향으로 검색 됩니다 `startIndex` 에서 끝나는 `startIndex`  +  `count` -1입니다.  
  
 이 오버 로드는 문화권 구분 검색을 수행합니다. 미리 구성 된 문자를 합자 "→"와 같은 (U + 6)을 나타내는 유니코드 값은 "AE"와 같은 올바른 순서로 구성 요소가 문자에 해당 간주 될 수 있습니다 (u+0041, U + 0045) 문화권에 따라 합니다. 유니코드 값을 비교 하는 위치는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하는 <xref:System.Globalization.CompareOptions.Ordinal> 값입니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="value" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.  
  
또는 
 <paramref name="count" />가 0보다 작은 경우  
  
또는 
 <paramref name="startIndex" /> 및 <paramref name="count" />가 <paramref name="source" />의 올바른 섹션을 지정하지 않습니다.</exception>
        <block subset="none" type="usage"><para>문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다. 문화권 구분 검색에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다. 하는 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어 합니다 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 검색을 시작할 문자 위치는입니다.  
  
다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" /> 메서드는 두 문자열의 여섯 번째 문자 위치부터 세 번째에서 시작 "m" 뒤에 하이픈이 (U + 00AD)의 위치를 찾는 데 사용 됩니다. 문자열 중 하나에만 필수 부분 문자열이 포함되어 있습니다. 두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자이므로, 문화권 구분 비교를 수행하는 경우 메서드는 문자열에서 "m"의 인덱스를 반환합니다. "m"이 앞에 붙은 사용자 지정 하이픈이 포함된 첫 번째 문자열의 경우, 메서드가 사용자 지정 하이픈의 인덱스를 반환하지 못하고 대신 "m"의 인덱스를 반환합니다.  
  
[! 코드 csharp[System.Globalization.CompareInfo.IndexOf#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable16.cs#17)] [! 코드 vb[System.Globalization.CompareInfo.IndexOf#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable16.vb#17)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * char * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="value"><paramref name="source" />에서 찾을 문자입니다.</param>
        <param name="startIndex">검색의 0부터 시작하는 인덱스입니다.</param>
        <param name="count">검색할 섹션에 있는 요소 수입니다.</param>
        <param name="options"><paramref name="source" />과 <paramref name="value" />을 비교하는 방법을 정의하는 값입니다. <paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</param>
        <summary>소스 문자열 중 지정된 인덱스에서 시작하고 지정된 수의 요소를 포함하는 영역에서 지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 문자를 검색하고, 맨 처음 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</summary>
        <returns><paramref name="value" /> 중 <paramref name="source" />에서 시작하고 <paramref name="startIndex" />로 지정된 수의 요소를 포함하는 영역에서 지정된 비교 옵션을 사용하여 <paramref name="count" />를 찾은 경우 맨 처음 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다. <paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 소스 문자열에서 정방향으로 검색 됩니다 `startIndex` 에서 끝나는 `startIndex`  +  `count` -1입니다.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.  
  
 하는 경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다. 문자는 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "→" (U + 00 C 6), 같은 것으로 간주 될 수 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목에 해당 하는 (u+0041, U + 0045) 문화권에 따라 합니다. 경우 `options` 포함 된 <xref:System.Globalization.CompareOptions.Ordinal> 서 수 (문화권) 검색을 수행 하는 값이 오버이 로드 합니다. 문자를 유니코드 값이 동일한 경우에 다른 문자를 해당 간주 됩니다. 오버 로드 <xref:System.String.IndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 문화권 구분 검색을 수행 하는 문자열을 검색 하는 반면 합니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.  
  
또는 
 <paramref name="count" />가 0보다 작은 경우  
  
또는 
 <paramref name="startIndex" /> 및 <paramref name="count" />가 <paramref name="source" />의 올바른 섹션을 지정하지 않습니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</exception>
        <block subset="none" type="usage"><para>문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다. 문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자 결과 해당 문자가 제거를 사용 하 여 검색 합니다. 이 경우는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 되는 검색 먼저 시작 문자 위치입니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 두 문자열의 "n" 후 하이픈이 (U + 00AD)를 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 문화권 구분 검색에는 "n"의 위치에서 일치 항목을 발견 했다는 것을 나타내려면 1을 반환 합니다. 그러나 서 수 검색을 성공적으로 사용자 지정 하이픈 한 문자열에서 찾아 보고 없는 것에서 두 번째 문자열입니다.  
  
[! 코드 csharp[System.Globalization.CompareInfo.IndexOf#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable11.cs#12)] [! 코드 vb[System.Globalization.CompareInfo.IndexOf#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable11.vb#12)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * string * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="value"><paramref name="source" />에서 찾을 문자열입니다.</param>
        <param name="startIndex">검색의 0부터 시작하는 인덱스입니다.</param>
        <param name="count">검색할 섹션에 있는 요소 수입니다.</param>
        <param name="options"><paramref name="source" />과 <paramref name="value" />을 비교하는 방법을 정의하는 값입니다. <paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</param>
        <summary>소스 문자열 중 지정된 인덱스에서 시작하고 지정된 수의 요소를 포함하는 영역에서 지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 부분 문자열을 검색하고, 맨 처음 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</summary>
        <returns><paramref name="value" /> 중 <paramref name="source" />에서 시작하고 <paramref name="startIndex" />로 지정된 수의 요소를 포함하는 영역에서 지정된 비교 옵션을 사용하여 <paramref name="count" />를 찾은 경우 맨 처음 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다. <paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 소스 문자열에서 정방향으로 검색 됩니다 `startIndex` 에서 끝나는 `startIndex`  +  `count` -1입니다.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.  
  
 하는 경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다. 미리 구성 된 문자를 합자 "→"와 같은 (U + 6)을 나타내는 유니코드 값은 "AE"와 같은 올바른 순서로 구성 요소가 문자에 해당 간주 될 수 있습니다 (u+0041, U + 0045) 문화권에 따라 합니다. 하는 경우 `options` 포함 된 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 서 수 (문화권) 검색을 수행 유니코드 값을 비교 하는 위치입니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="value" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.  
  
또는 
 <paramref name="count" />가 0보다 작은 경우  
  
또는 
 <paramref name="startIndex" /> 및 <paramref name="count" />가 <paramref name="source" />의 올바른 섹션을 지정하지 않습니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</exception>
        <block subset="none" type="usage"><para>문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다. 문화권 구분 검색(즉, <paramref name="options" />이 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />가 아닌 경우)에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다. 하는 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어 합니다 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 검색을 시작할 문자 위치는입니다.  
  
다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 두 문자열의 여섯 번째 문자 위치부터 세 번째에서 시작 "m" 뒤에 하이픈이 (U + 00AD)의 위치를 찾는 데 사용 됩니다. 문자열 중 하나에만 필수 부분 문자열이 포함되어 있습니다. 두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자이므로, 문화권 구분 비교를 수행하는 경우 메서드는 문자열에서 "m"의 인덱스를 반환합니다. 그러나 서 수 비교를 수행할 때 부분만에서 찾은 첫 번째 문자열입니다. 참고 첫 번째 문자열 뒤에 "m" 사용자 지정 하이픈을 포함 하는 메서드를 사용자 지정 하이픈의 인덱스를 반환 하지 못하고 있지만 문화권 구분 비교를 수행 하는 경우 대신 "m"의 인덱스를 반환 합니다. 메서드는 서수 비교를 수행하는 경우에만 첫 번째 문자열에서 사용자 지정 하이픈의 인덱스를 반환합니다.  
  
[! 코드 csharp[System.Globalization.CompareInfo.IndexOf#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable15.cs#16)] [! 코드 vb[System.Globalization.CompareInfo.IndexOf#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable15.vb#16)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsPrefix">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>문자열이 지정된 접두사로 시작하는지 여부를 확인합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsPrefix">
      <MemberSignature Language="C#" Value="public virtual bool IsPrefix (string source, string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPrefix(string source, string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsPrefix (source As String, prefix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsPrefix(System::String ^ source, System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="abstract member IsPrefix : string * string -&gt; bool&#xA;override this.IsPrefix : string * string -&gt; bool" Usage="compareInfo.IsPrefix (source, prefix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="prefix"><paramref name="source" />의 시작 영역과 비교할 문자열입니다.</param>
        <summary>지정된 소스 문자열이 지정된 접두사로 시작하는지 여부를 확인합니다.</summary>
        <returns><paramref name="prefix" />의 길이가 <paramref name="source" />로 시작하는 <paramref name="source" /> 및 <paramref name="prefix" />의 길이보다 작거나 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 모든 문자열 시작 끝나며 빈 부분 문자열 (""); 따라서 경우 `prefix` 이 빈 문자열인 경우이 메서드는 반환 `true`합니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 접두사 또는 접미사 다른 문자열의 문자열 인지 확인 합니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CPP/isprefixsuffix.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CS/isprefixsuffix.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/VB/isprefixsuffix.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="prefix" />가 <see langword="null" />입니다.</exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)" />
      </Docs>
    </Member>
    <Member MemberName="IsPrefix">
      <MemberSignature Language="C#" Value="public virtual bool IsPrefix (string source, string prefix, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPrefix(string source, string prefix, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsPrefix (source As String, prefix As String, options As CompareOptions) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsPrefix(System::String ^ source, System::String ^ prefix, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IsPrefix : string * string * System.Globalization.CompareOptions -&gt; bool&#xA;override this.IsPrefix : string * string * System.Globalization.CompareOptions -&gt; bool" Usage="compareInfo.IsPrefix (source, prefix, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="prefix"><paramref name="source" />의 시작 영역과 비교할 문자열입니다.</param>
        <param name="options"><paramref name="source" />과 <paramref name="prefix" />을 비교하는 방법을 정의하는 값입니다. <paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</param>
        <summary>지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 소스 문자열이 지정된 접두사로 시작하는지 여부를 확인합니다.</summary>
        <returns><paramref name="prefix" />의 길이가 <paramref name="source" />로 시작하는 <paramref name="source" /> 및 <paramref name="prefix" />의 길이보다 작거나 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 모든 문자열 시작 끝나며 빈 부분 문자열 (""); 따라서 경우 `prefix` 이 빈 문자열인 경우이 메서드는 반환 `true`합니다.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 접두사 또는 접미사를 사용 하 여 다른 문자열의 문자열 인지를 확인 <xref:System.Globalization.CompareOptions>합니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CPP/isprefixsuffixopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CS/isprefixsuffixopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/VB/isprefixsuffixopt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="prefix" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSortable">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 유니코드 문자 또는 문자열이 정렬 가능한지 여부를 나타냅니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSortable">
      <MemberSignature Language="C#" Value="public static bool IsSortable (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSortable(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSortable(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSortable (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSortable(char ch);" />
      <MemberSignature Language="F#" Value="static member IsSortable : char -&gt; bool" Usage="System.Globalization.CompareInfo.IsSortable ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="ch">유니코드 문자입니다.</param>
        <summary>지정된 유니코드 문자가 정렬 가능한지 여부를 나타냅니다.</summary>
        <returns><paramref name="ch" /> 매개 변수가 정렬 가능하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `ch` 매개 변수는 내부에 정의 된 유니코드 문자인 경우에 정렬 가능한 <xref:System.Globalization.CompareInfo> 정렬 테이블을 클래스 및 사설 또는 쌍을 이루지 않는 높음 또는 낮음 서로게이트 문자가 아닙니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSortable">
      <MemberSignature Language="C#" Value="public static bool IsSortable (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSortable(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSortable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSortable (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSortable(System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member IsSortable : string -&gt; bool" Usage="System.Globalization.CompareInfo.IsSortable text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="text">0개 이상의 유니코드 문자로 구성된 문자열입니다.</param>
        <summary>지정된 유니코드 문자열이 정렬 가능한지 여부를 나타냅니다.</summary>
        <returns><paramref name="str" /> 매개 변수가 빈 문자열("")이 아니고 <paramref name="str" />의 모든 유니코드 문자가 정렬 가능하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 각 유니코드 문자를 `str` 매개 변수 하나 표시 됩니다 또는 자세한 u t F-16으로 인코딩된 <xref:System.Char> 개체입니다. 합니다 `str` 매개 변수는 각 유니코드 문자는 내부에 정의 된 경우에 정렬 가능한 <xref:System.Globalization.CompareInfo> 정렬 테이블을 클래스 및 사설 또는 쌍을 이루지 않는 높음 또는 낮음 서로게이트 문자가 아닙니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="str" />가 <see langword="null" />입니다.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSuffix">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>문자열이 지정된 접미사로 끝나는지 여부를 확인합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSuffix">
      <MemberSignature Language="C#" Value="public virtual bool IsSuffix (string source, string suffix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSuffix(string source, string suffix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSuffix (source As String, suffix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSuffix(System::String ^ source, System::String ^ suffix);" />
      <MemberSignature Language="F#" Value="abstract member IsSuffix : string * string -&gt; bool&#xA;override this.IsSuffix : string * string -&gt; bool" Usage="compareInfo.IsSuffix (source, suffix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="suffix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="suffix"><paramref name="source" />의 끝 영역과 비교할 문자열입니다.</param>
        <summary>지정된 소스 문자열이 지정된 접미사로 끝나는지 여부를 확인합니다.</summary>
        <returns><paramref name="suffix" />의 길이가 <paramref name="source" />로 끝나는 <paramref name="source" /> 및 <paramref name="suffix" />의 길이보다 작거나 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 모든 문자열 시작 끝나며 빈 부분 문자열 (""); 따라서 경우 `suffix` 이 빈 문자열인 경우이 메서드는 반환 `true`합니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 접두사 또는 접미사 다른 문자열의 문자열 인지 확인 합니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CPP/isprefixsuffix.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CS/isprefixsuffix.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/VB/isprefixsuffix.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="suffix" />가 <see langword="null" />입니다.</exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
      </Docs>
    </Member>
    <Member MemberName="IsSuffix">
      <MemberSignature Language="C#" Value="public virtual bool IsSuffix (string source, string suffix, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSuffix(string source, string suffix, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSuffix (source As String, suffix As String, options As CompareOptions) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSuffix(System::String ^ source, System::String ^ suffix, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IsSuffix : string * string * System.Globalization.CompareOptions -&gt; bool&#xA;override this.IsSuffix : string * string * System.Globalization.CompareOptions -&gt; bool" Usage="compareInfo.IsSuffix (source, suffix, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="suffix" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="suffix"><paramref name="source" />의 끝 영역과 비교할 문자열입니다.</param>
        <param name="options"><paramref name="source" />과 <paramref name="suffix" />을 비교하는 방법을 정의하는 값입니다. <paramref name="options" />는 자체적으로 사용하는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</param>
        <summary>지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 소스 문자열이 지정된 접미사로 끝나는지 여부를 확인합니다.</summary>
        <returns><paramref name="suffix" />의 길이가 <paramref name="source" />로 끝나는 <paramref name="source" /> 및 <paramref name="suffix" />의 길이보다 작거나 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 모든 문자열 시작 끝나며 빈 부분 문자열 (""); 따라서 경우 `suffix` 이 빈 문자열인 경우이 메서드는 반환 `true`합니다.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 접두사 또는 접미사를 사용 하 여 다른 문자열의 문자열 인지를 확인 <xref:System.Globalization.CompareOptions>합니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CPP/isprefixsuffixopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CS/isprefixsuffixopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/VB/isprefixsuffixopt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="suffix" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>문자열 전체나 일부에서 마지막에 나오는 값의 인덱스(0부터 시작)를 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char -&gt; int&#xA;override this.LastIndexOf : string * char -&gt; int" Usage="compareInfo.LastIndexOf (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="value"><paramref name="source" />에서 찾을 문자입니다.</param>
        <summary>전체 소스 문자열에서 지정된 문자를 검색하고, 마지막에 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</summary>
        <returns><paramref name="value" />에서 <paramref name="source" />를 찾은 경우 맨 마지막에 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 역방향 문자열의 끝에서 시작 하 고 문자열의 시작 부분에 종료 소스 문자열 검색 됩니다.  
  
 이 오버 로드는 문화권 구분 검색을 수행합니다. 문자는 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "→" (U + 00 C 6), 같은 것으로 간주 될 수 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목에 해당 하는 (u+0041, U + 0045) 문화권에 따라 합니다. 유니코드 값이 동일한 경우에 문자 같은 다른 문자로으로 간주 되는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하 여 <xref:System.Globalization.CompareOptions.Ordinal> 값입니다. 오버 로드 <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 문화권 구분 검색을 수행 하는 문자열을 검색 하는 반면 합니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 내에서 부분 문자열의 인덱스를 결정합니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.</exception>
        <block subset="none" type="usage"><para>문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다. 문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자 결과 해당 문자가 제거를 사용 하 여 검색 합니다. 이 경우에 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" /> 메서드는 마지막 인덱스 위치를 항상 반환 <paramref name="source" /> 일치 항목은 끝에 있음을 나타내기 위해 <paramref name="source" />합니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" /> 메서드는 두 문자열에서 하이픈 (U + 00AD)를 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 메서드 문자열의 끝에서 일치 항목을 발견 했다는 것을 나타내려면 문자열의 마지막 인덱스 위치를 반환 합니다.  
  
[! 코드 csharp[System.Globalization.CompareInfo.LastIndexOf#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable2.cs#3)] [! 코드 vb[System.Globalization.CompareInfo.LastIndexOf#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable2.vb#3)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string -&gt; int&#xA;override this.LastIndexOf : string * string -&gt; int" Usage="compareInfo.LastIndexOf (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="value"><paramref name="source" />에서 찾을 문자열입니다.</param>
        <summary>전체 소스 문자열에서 지정된 부분 문자열을 검색하고, 마지막에 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</summary>
        <returns><paramref name="value" />에서 <paramref name="source" />를 찾은 경우 맨 마지막에 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 역방향 문자열의 끝에서 시작 하 고 문자열의 시작 부분에 종료 소스 문자열 검색 됩니다.  
  
 이 오버 로드는 문화권 구분 검색을 수행합니다. 미리 구성 된 문자를 합자 "→"와 같은 (U + 6)을 나타내는 유니코드 값은 "AE"와 같은 올바른 순서로 구성 요소가 문자에 해당 간주 될 수 있습니다 (u+0041, U + 0045) 문화권에 따라 합니다. 유니코드 값을 비교 하는 위치는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하는 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 값입니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 내에서 부분 문자열의 인덱스를 결정합니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="value" />가 <see langword="null" />입니다.</exception>
        <block subset="none" type="usage"><para>문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다. 문화권 구분 검색에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다. 하는 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어 합니다 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" /> 메서드는 항상 반환 <paramref name="source" />합니다.<see cref="P:System.String.Length" /> -마지막 인덱스 위치를 나타내는 1, <paramref name="source" />합니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" /> 메서드는 두 문자열의 세 가지 부분 문자열 (하이픈이 (U + 00AD), "n" 뒤에 하이픈이 및 하이픈이 뒤에 "m")을 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 각각의 경우에서 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 결과 동일 사용자 지정 하이픈의 포함 되지 않았던 것 처럼 <paramref name="value" />합니다. 하이픈이을 검색할 때 메서드 6 및 5를 반환 합니다. 이러한 값의 두 문자열의 마지막 문자 인덱스에 해당합니다.  
  
[! 코드 csharp[System.Globalization.CompareInfo.LastIndexOf#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable1.cs#2)] [! 코드 vb[System.Globalization.CompareInfo.LastIndexOf#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable1.vb#2)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * char * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="value"><paramref name="source" />에서 찾을 문자입니다.</param>
        <param name="options"><paramref name="source" />과 <paramref name="value" />을 비교하는 방법을 정의하는 값입니다. <paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</param>
        <summary>전체 소스 문자열에서 지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 문자를 검색하고, 마지막에 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</summary>
        <returns><paramref name="value" />에서 지정된 비교 옵션을 사용하여 <paramref name="source" />를 찾은 경우 맨 마지막에 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 역방향 문자열의 끝에서 시작 하 고 문자열의 시작 부분에 종료 소스 문자열 검색 됩니다.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.  
  
 하는 경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다. 문자는 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "→" (U + 00 C 6), 같은 것으로 간주 될 수 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목에 해당 하는 (u+0041, U + 0045) 문화권에 따라 합니다. 경우 `options` 포함 된 <xref:System.Globalization.CompareOptions.Ordinal> 서 수 (문화권) 검색을 수행 하는 값이 오버이 로드 합니다. 문자를 유니코드 값이 동일한 경우에 다른 문자를 해당 간주 됩니다. 오버 로드 <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 문화권 구분 검색을 수행 하는 문자열을 검색 하는 반면 합니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 내에서 부분 문자열의 인덱스를 결정합니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</exception>
        <block subset="none" type="usage"><para>문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다. 문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자 결과 해당 문자가 제거를 사용 하 여 검색 합니다. 이 경우에 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> 메서드는 마지막 문자 위치를 항상 반환 <paramref name="source" /> 일치 항목은 끝에 있음을 나타내기 위해 <paramref name="source" />합니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> 두 문자열의 하이픈이 (U + 00AD)에 대 한 검색 메서드를 사용 합니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 문화권 구분 검색을 원본 문자열의 마지막 인덱스 위치를 반환 합니다. 반면, 서 수 검색을 성공적으로 사용자 지정 하이픈 한 문자열에서 찾아 보고 없는 것에서 두 번째 문자열입니다.  
  
[! 코드 csharp[System.Globalization.CompareInfo.LastIndexOf#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable3.cs#4)] [! 코드 vb[System.Globalization.CompareInfo.LastIndexOf#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable3.vb#4)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * int -&gt; int&#xA;override this.LastIndexOf : string * char * int -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Char" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="value"><paramref name="source" />에서 찾을 문자입니다.</param>
        <param name="startIndex">역방향 검색의 0부터 시작하는 인덱스입니다.</param>
        <summary>소스 문자열 중 처음부터 지정된 인덱스까지의 영역에서 지정된 문자를 검색하고, 마지막에 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</summary>
        <returns><paramref name="value" /> 중 <paramref name="source" />의 맨 앞부터 <paramref name="source" />까지의 영역에서 <paramref name="startIndex" />를 찾은 경우 마지막에 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다. <paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 원본 문자열에서 검색 이전 버전과 시작은 `startIndex` 및 문자열의 시작 부분에 종료 합니다.  
  
 이 오버 로드는 문화권 구분 검색을 수행합니다. 문자는 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "→" (U + 00 C 6), 같은 것으로 간주 될 수 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목에 해당 하는 (u+0041, U + 0045) 문화권에 따라 합니다. 유니코드 값이 동일한 경우에 문자 같은 다른 문자로으로 간주 되는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하 여 <xref:System.Globalization.CompareOptions.Ordinal> 값입니다. 오버 로드 <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 문화권 구분 검색을 수행 하는 문자열을 검색 하는 반면 합니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다. 사실은 <xref:System.Globalization.CompareInfo.IndexOf%2A> 하 고 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 도과 동일한 문자열의 다른 부분에서 검색 하는 `startIndex` 매개 변수입니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.</exception>
        <block subset="none" type="usage"><para>문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다. 문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자 결과 해당 문자가 제거를 사용 하 여 검색 합니다. 이 경우에 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 검색을 시작할 문자 위치는입니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" /> 메서드는 두 문자열의 마지막 "m" 앞에 오는 하이픈이 (U + 00AD)를 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 메서드는 "m", 값의 인덱스 위치의 <paramref name="startIndex" />합니다.  
  
[! 코드 csharp[System.Globalization.CompareInfo.LastIndexOf#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable4.cs#5)] [! 코드 vb[System.Globalization.CompareInfo.LastIndexOf#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable4.vb#5)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * string * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="value"><paramref name="source" />에서 찾을 문자열입니다.</param>
        <param name="options"><paramref name="source" />과 <paramref name="value" />을 비교하는 방법을 정의하는 값입니다. <paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</param>
        <summary>전체 소스 문자열에서 지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 부분 문자열을 검색하고, 마지막에 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</summary>
        <returns><paramref name="value" />에서 지정된 비교 옵션을 사용하여 <paramref name="source" />를 찾은 경우 맨 마지막에 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 역방향 문자열의 끝에서 시작 하 고 문자열의 시작 부분에 종료 소스 문자열 검색 됩니다.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.  
  
 하는 경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다. 미리 구성 된 문자를 합자 "→"와 같은 (U + 6)을 나타내는 유니코드 값은 "AE"와 같은 올바른 순서로 구성 요소가 문자에 해당 간주 될 수 있습니다 (u+0041, U + 0045) 문화권에 따라 합니다. 하는 경우 `options` 포함 된 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 서 수 (문화권) 검색을 수행 유니코드 값을 비교 하는 위치입니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 내에서 부분 문자열의 인덱스를 결정합니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="value" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</exception>
        <block subset="none" type="usage"><para>문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다. 문화권 구분 검색(즉, <paramref name="options" />이 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />가 아닌 경우)에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다. 하는 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어 합니다 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> 메서드는 항상 반환 <paramref name="source" />합니다.<see cref="P:System.String.Length" /> -마지막 인덱스 위치를 나타내는 1, <paramref name="source" />합니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> 메서드는 두 문자열의 세 가지 부분 문자열 (하이픈이 (U + 00AD), "n" 뒤에 하이픈이 및 하이픈이 뒤에 "m")을 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 사용자 지정 하이픈을 무시할 수 있는 문자 이기 때문에 문화권 구분 검색을 사용자 지정 하이픈 검색 문자열에 포함 되지 않은 경우 반환 된 값과 같아야를 반환 합니다. 그러나 서 수 검색을 성공적으로 사용자 지정 하이픈 한 문자열에서 찾아 보고 없는 것에서 두 번째 문자열입니다.  
  
[! 코드 csharp[System.Globalization.CompareInfo.LastIndexOf#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable5.cs#6)] [! 코드 vb[System.Globalization.CompareInfo.LastIndexOf#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable5.vb#6)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * int -&gt; int&#xA;override this.LastIndexOf : string * string * int -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="value"><paramref name="source" />에서 찾을 문자열입니다.</param>
        <param name="startIndex">역방향 검색의 0부터 시작하는 인덱스입니다.</param>
        <summary>소스 문자열 중 처음부터 지정된 인덱스까지의 영역에서 지정된 부분 문자열을 검색하고, 마지막에 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</summary>
        <returns><paramref name="value" /> 중 <paramref name="source" />의 맨 앞부터 <paramref name="source" />까지의 영역에서 <paramref name="startIndex" />를 찾은 경우 마지막에 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다. <paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 원본 문자열에서 검색 이전 버전과 시작은 `startIndex` 및 문자열의 시작 부분에 종료 합니다.  
  
 이 오버 로드는 문화권 구분 검색을 수행합니다. 미리 구성 된 문자를 합자 "→"와 같은 (U + 6)을 나타내는 유니코드 값은 "AE"와 같은 올바른 순서로 구성 요소가 문자에 해당 간주 될 수 있습니다 (u+0041, U + 0045) 문화권에 따라 합니다. 유니코드 값을 비교 하는 위치는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하는 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 값입니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다. 사실은 <xref:System.Globalization.CompareInfo.IndexOf%2A> 하 고 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 도과 동일한 문자열의 다른 부분에서 검색 하는 `startIndex` 매개 변수입니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="value" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.</exception>
        <block subset="none" type="usage"><para>문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다. 문화권 구분 검색에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다. 하는 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어 합니다 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 검색을 시작할 문자 위치는입니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" /> 메서드 (U + 00AD) 하이픈을 포함 하 고 앞 또는 마지막 "m" 문자열에 포함 하는 부분 문자열을 찾는 데 사용 됩니다. 검색 문자열에 사용자 지정 하이픈은 무시 되므로 사용자 지정 하이픈으로 구성 된 부분 문자열을 찾기 위해 호출 하는 반면 사용자 지정 하이픈 및 "m"으로 구성 하는 부분 문자열에서 "m"의 위치를 반환 하 고 "n" 반환 검색할 메서드를 호출 합니다  "n"의 위치입니다. 검색 문자열에만 사용자 지정 하이픈이 포함 하는 경우 메서드는 "m"의 값을 나타내는의 인덱스를 반환 하는 <paramref name="startIndex" />합니다.  
  
[! 코드 csharp[System.Globalization.CompareInfo.LastIndexOf#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable6.cs#7)] [! 코드 vb[System.Globalization.CompareInfo.LastIndexOf#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable6.vb#7)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * char * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="value"><paramref name="source" />에서 찾을 문자입니다.</param>
        <param name="startIndex">역방향 검색의 0부터 시작하는 인덱스입니다.</param>
        <param name="options"><paramref name="source" />과 <paramref name="value" />을 비교하는 방법을 정의하는 값입니다. <paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</param>
        <summary>소스 문자열 중 문자열의 시작 부분부터 지정된 인덱스까지의 영역에서 지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 문자를 검색하고, 마지막에 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</summary>
        <returns><paramref name="value" /> 중 <paramref name="source" />의 맨 앞부터 <paramref name="source" />까지의 영역에서 지정된 비교 옵션을 사용하여 <paramref name="startIndex" />를 찾은 경우 마지막에 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다. <paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 원본 문자열에서 검색 이전 버전과 시작은 `startIndex` 및 문자열의 시작 부분에 종료 합니다.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.  
  
 하는 경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다. 문자는 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "→" (U + 00 C 6), 같은 것으로 간주 될 수 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목에 해당 하는 (u+0041, U + 0045) 문화권에 따라 합니다. 경우 `options` 포함 된 <xref:System.Globalization.CompareOptions.Ordinal> 서 수 (문화권) 검색을 수행 하는 값이 오버이 로드 합니다. 문자를 유니코드 값이 동일한 경우에 다른 문자를 해당 간주 됩니다. 오버 로드 <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 문화권 구분 검색을 수행 하는 문자열을 검색 하는 반면 합니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다. 사실은 <xref:System.Globalization.CompareInfo.IndexOf%2A> 하 고 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 도과 동일한 문자열의 다른 부분에서 검색 하는 `startIndex` 매개 변수입니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</exception>
        <block subset="none" type="usage"><para>문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다. 문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자 결과 해당 문자가 제거를 사용 하 여 검색 합니다. 이 경우에 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 검색을 시작할 문자 위치는입니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 두 문자열의 마지막 "m" 앞에 오는 하이픈이 (U + 00AD)를 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 문화권 구분 검색 "m"의 인덱스 위치를 반환 합니다. 그러나 서 수 검색을 성공적으로 사용자 지정 하이픈 한 문자열에서 찾아 보고 없는 것에서 두 번째 문자열입니다.  
  
[! 코드 csharp[System.Globalization.CompareInfo.LastIndexOf#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable7.cs#8)] [! 코드 vb[System.Globalization.CompareInfo.LastIndexOf#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable7.vb#8)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * int * int -&gt; int&#xA;override this.LastIndexOf : string * char * int * int -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="value"><paramref name="source" />에서 찾을 문자입니다.</param>
        <param name="startIndex">역방향 검색의 0부터 시작하는 인덱스입니다.</param>
        <param name="count">검색할 섹션에 있는 요소 수입니다.</param>
        <summary>소스 문자열 중 지정된 수의 요소를 포함하고 지정된 인덱스에서 끝나는 영역에서 지정된 문자를 검색하고, 마지막에 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</summary>
        <returns><paramref name="value" /> 중 <paramref name="source" />로 지정된 수의 요소를 포함하고 <paramref name="count" />에서 끝나는 영역에서 <paramref name="startIndex" />를 찾은 경우 마지막에 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다. <paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 원본 문자열은 검색에서 시작 `startIndex` 에서 끝나는 `startIndex`  -  `count` + 1입니다.  
  
 이 오버 로드는 문화권 구분 검색을 수행합니다. 문자는 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "→" (U + 00 C 6), 같은 것으로 간주 될 수 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목에 해당 하는 (u+0041, U + 0045) 문화권에 따라 합니다. 유니코드 값이 동일한 경우에 문자 같은 다른 문자로으로 간주 되는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하 여 <xref:System.Globalization.CompareOptions.Ordinal> 값입니다. 오버 로드 <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 문화권 구분 검색을 수행 하는 문자열을 검색 하는 반면 합니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.  
  
또는 
 <paramref name="count" />가 0보다 작은 경우  
  
또는 
 <paramref name="startIndex" /> 및 <paramref name="count" />가 <paramref name="source" />의 올바른 섹션을 지정하지 않습니다.</exception>
        <block subset="none" type="usage"><para>문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다. 문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자 결과 해당 문자가 제거를 사용 하 여 검색 합니다. 이 경우에 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 검색을 시작할 문자 위치는입니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" /> 메서드는 두 문자열의 마지막 "m" 앞에 오는 하이픈이 (U + 00AD)를 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 메서드는 "m", 값의 인덱스 위치의 <paramref name="startIndex" />합니다.  
  
[! 코드 csharp[System.Globalization.CompareInfo.LastIndexOf#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable8.cs#9)] [! 코드 vb[System.Globalization.CompareInfo.LastIndexOf#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable8.vb#9)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * string * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="value"><paramref name="source" />에서 찾을 문자열입니다.</param>
        <param name="startIndex">역방향 검색의 0부터 시작하는 인덱스입니다.</param>
        <param name="options"><paramref name="source" />과 <paramref name="value" />을 비교하는 방법을 정의하는 값입니다. <paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</param>
        <summary>소스 문자열 중 문자열의 시작 부분부터 지정된 인덱스까지의 영역에서 지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 부분 문자열을 검색하고, 마지막에 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</summary>
        <returns><paramref name="value" /> 중 <paramref name="source" />의 맨 앞부터 <paramref name="source" />까지의 영역에서 지정된 비교 옵션을 사용하여 <paramref name="startIndex" />를 찾은 경우 마지막에 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다. <paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 원본 문자열에서 검색 이전 버전과 시작은 `startIndex` 및 문자열의 시작 부분에 종료 합니다.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.  
  
 하는 경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다. 미리 구성 된 문자를 합자 "→"와 같은 (U + 6)을 나타내는 유니코드 값은 "AE"와 같은 올바른 순서로 구성 요소가 문자에 해당 간주 될 수 있습니다 (u+0041, U + 0045) 문화권에 따라 합니다. 하는 경우 `options` 포함 된 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 서 수 (문화권) 검색을 수행 유니코드 값을 비교 하는 위치입니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다. 사실은 <xref:System.Globalization.CompareInfo.IndexOf%2A> 하 고 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 도과 동일한 문자열의 다른 부분에서 검색 하는 `startIndex` 매개 변수입니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="value" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</exception>
        <block subset="none" type="usage"><para>문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다. 문화권 구분 검색(즉, <paramref name="options" />이 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />가 아닌 경우)에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다. 하는 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어 합니다 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 검색을 시작할 문자 위치는입니다.  
  
다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 "m", 두 문자열의 마지막 "m"부터 뒤에 하이픈이 (U + 00AD)의 위치를 찾는 데 사용 됩니다. 문자열 중 하나에만 필수 부분 문자열이 포함되어 있습니다. 두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자이므로, 문화권 구분 비교를 수행하는 경우 메서드는 문자열에서 "m"의 인덱스를 반환합니다. "m"이 앞에 붙은 사용자 지정 하이픈이 포함된 첫 번째 문자열의 경우, 메서드가 사용자 지정 하이픈의 인덱스를 반환하지 못하고 대신 "m"의 인덱스를 반환합니다. 메서드는 서수 비교를 수행하는 경우에만 첫 번째 문자열에서 사용자 지정 하이픈의 인덱스를 반환합니다.  
  
[! 코드 csharp[System.Globalization.CompareInfo.LastIndexOf#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable14.cs#15)] [! 코드 vb[System.Globalization.CompareInfo.LastIndexOf#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable14.vb#15)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * int * int -&gt; int&#xA;override this.LastIndexOf : string * string * int * int -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="value"><paramref name="source" />에서 찾을 문자열입니다.</param>
        <param name="startIndex">역방향 검색의 0부터 시작하는 인덱스입니다.</param>
        <param name="count">검색할 섹션에 있는 요소 수입니다.</param>
        <summary>소스 문자열 중 지정된 수의 요소를 포함하고 지정된 인덱스에서 끝나는 영역에서 지정된 부분 문자열을 검색하고, 마지막에 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</summary>
        <returns><paramref name="value" /> 중 <paramref name="source" />로 지정된 수의 요소를 포함하고 <paramref name="count" />에서 끝나는 영역에서 <paramref name="startIndex" />를 찾은 경우 마지막에 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다. <paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 원본 문자열은 검색에서 시작 `startIndex` 에서 끝나는 `startIndex`  -  `count` + 1입니다.  
  
 이 오버 로드는 문화권 구분 검색을 수행합니다. 미리 구성 된 문자를 합자 "→"와 같은 (U + 6)을 나타내는 유니코드 값은 "AE"와 같은 올바른 순서로 구성 요소가 문자에 해당 간주 될 수 있습니다 (u+0041, U + 0045) 문화권에 따라 합니다. 유니코드 값을 비교 하는 위치는 서 수 (문화권) 검색 수행을 호출 해야 형식의 매개 변수가 있는 오버 로드 중 하나 <xref:System.Globalization.CompareOptions> 사용 하는 <xref:System.Globalization.CompareOptions.Ordinal> 값입니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="value" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.  
  
또는 
 <paramref name="count" />가 0보다 작은 경우  
  
또는 
 <paramref name="startIndex" /> 및 <paramref name="count" />가 <paramref name="source" />의 올바른 섹션을 지정하지 않습니다.</exception>
        <block subset="none" type="usage"><para>문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다. 문화권 구분 검색에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다. 하는 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어 합니다 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 검색을 시작할 문자 위치는입니다.  
  
다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" /> 메서드는 두 문자열의 마지막 "m" 앞에 있는 3 개의 문자 "m" 뒤에 하이픈이 (U + 00AD)의 위치를 찾는 데 사용 됩니다. 문자열 중 하나에만 필수 부분 문자열이 포함되어 있습니다. 두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자이므로, 문화권 구분 비교를 수행하는 경우 메서드는 문자열에서 "m"의 인덱스를 반환합니다. "m"이 앞에 붙은 사용자 지정 하이픈이 포함된 첫 번째 문자열의 경우, 메서드가 사용자 지정 하이픈의 인덱스를 반환하지 못하고 대신 "m"의 인덱스를 반환합니다.  
  
[! 코드 csharp[System.Globalization.CompareInfo.LastIndexOf#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable16.cs#17)] [! 코드 vb[System.Globalization.CompareInfo.LastIndexOf#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable16.vb#17)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * char * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="value"><paramref name="source" />에서 찾을 문자입니다.</param>
        <param name="startIndex">역방향 검색의 0부터 시작하는 인덱스입니다.</param>
        <param name="count">검색할 섹션에 있는 요소 수입니다.</param>
        <param name="options"><paramref name="source" />과 <paramref name="value" />을 비교하는 방법을 정의하는 값입니다. <paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</param>
        <summary>소스 문자열 중 지정된 수의 요소를 포함하고 지정된 인덱스에서 끝나는 영역에서 지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 문자를 검색하고, 마지막에 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</summary>
        <returns><paramref name="value" /> 중 <paramref name="source" />로 지정된 수의 요소를 포함하고 <paramref name="count" />에서 끝나는 영역에서 지정된 비교 옵션을 사용하여 <paramref name="startIndex" />를 찾은 경우 맨 마지막에 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다. <paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 원본 문자열은 검색에서 시작 `startIndex` 에서 끝나는 `startIndex`  -  `count` + 1입니다.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.  
  
 하는 경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다. 문자는 미리 구성 된 문자를 나타내는 유니코드 값 이면 합자 "→" (U + 00 C 6), 같은 것으로 간주 될 수 해당 구성 요소가 올바른 순서로 "AE" 등의 모든 항목에 해당 하는 (u+0041, U + 0045) 문화권에 따라 합니다. 경우 `options` 포함 된 <xref:System.Globalization.CompareOptions.Ordinal> 서 수 (문화권) 검색을 수행 하는 값이 오버이 로드 합니다. 문자를 유니코드 값이 동일한 경우에 다른 문자를 해당 간주 됩니다. 오버 로드 <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> 문자를 검색 하는 서 수 검색을 수행 하는 문화권 구분 검색을 수행 하는 문자열을 검색 하는 반면 합니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.  
  
또는 
 <paramref name="count" />가 0보다 작은 경우  
  
또는 
 <paramref name="startIndex" /> 및 <paramref name="count" />가 <paramref name="source" />의 올바른 섹션을 지정하지 않습니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</exception>
        <block subset="none" type="usage"><para>문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다. 문화권 구분 검색에서는 경우 <paramref name="value" /> 은 무시할 수 있는 문자 결과 해당 문자가 제거를 사용 하 여 검색 합니다. 이 경우에 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 검색을 시작할 문자 위치는입니다. 다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 두 문자열의 마지막 "m" 앞에 오는 하이픈이 (U + 00AD)를 찾는 데 사용 됩니다. 문자열 중 하나에만 사용자 지정 하이픈이 포함되어 있습니다. 두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자 때문에 문화권 구분 검색 인덱스의 위치를 반환 "m", 값의 <paramref name="startIndex" />합니다. 그러나 서 수 검색을 성공적으로 사용자 지정 하이픈 한 문자열에서 찾아 보고 없는 것에서 두 번째 문자열입니다.  
  
[! 코드 csharp[System.Globalization.CompareInfo.LastIndexOf#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable11.cs#12)] [! 코드 vb[System.Globalization.CompareInfo.LastIndexOf#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable11.vb#12)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * string * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source">검색할 문자열입니다.</param>
        <param name="value"><paramref name="source" />에서 찾을 문자열입니다.</param>
        <param name="startIndex">역방향 검색의 0부터 시작하는 인덱스입니다.</param>
        <param name="count">검색할 섹션에 있는 요소 수입니다.</param>
        <param name="options"><paramref name="source" />과 <paramref name="value" />을 비교하는 방법을 정의하는 값입니다. <paramref name="options" />는 열거형 값 <see cref="F:System.Globalization.CompareOptions.Ordinal" />이거나 <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 및 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 값 중 하나 이상의 비트 조합입니다.</param>
        <summary>소스 문자열 중 지정된 수의 요소를 포함하고 지정된 인덱스에서 끝나는 영역에서 지정된 <see cref="T:System.Globalization.CompareOptions" /> 값을 사용하여 지정된 부분 문자열을 검색하고, 마지막에 검색된 항목의 인덱스(0부터 시작)를 반환합니다.</summary>
        <returns><paramref name="value" /> 중 <paramref name="source" />로 지정된 수의 요소를 포함하고 <paramref name="count" />에서 끝나는 영역에서 지정된 비교 옵션을 사용하여 <paramref name="startIndex" />를 찾은 경우 맨 마지막에 검색된 항목의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다. <paramref name="startIndex" />가 무시할 수 있는 문자인 경우 <paramref name="value" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 원본 문자열은 검색에서 시작 `startIndex` 에서 끝나는 `startIndex`  -  `count` + 1입니다.  
  
 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 값이이 메서드에 대해 올바르지 않습니다.  
  
 하는 경우 `options` 포함 되지 않습니다는 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 문화권 구분 검색을 수행 합니다. 미리 구성 된 문자를 합자 "→"와 같은 (U + 6)을 나타내는 유니코드 값은 "AE"와 같은 올바른 순서로 구성 요소가 문자에 해당 간주 될 수 있습니다 (u+0041, U + 0045) 문화권에 따라 합니다. 하는 경우 `options` 포함 된 <xref:System.Globalization.CompareOptions.Ordinal> 값이 오버이 로드는 서 수 (문화권) 검색을 수행 유니코드 값을 비교 하는 위치입니다.  
  
> [!NOTE]
>  가능한 경우 메서드를 호출 해야 문자열 비교의 형식 매개 변수가 있는 <xref:System.Globalization.CompareOptions> 예상 비교의 종류를 지정 합니다. 일반적으로 사용자 인터페이스에 표시 되는 문자열을 비교 하기 위한 언어 옵션 (현재 문화권을 사용한)를 사용 하 고 지정 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 또는 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> 보안을 비교 합니다.  
  
   
  
## Examples  
 다음 예제에서는 첫 번째 및 마지막 일치 하는 문자 또는 문자열 일부에서 부분 문자열의 인덱스를 결정합니다.  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="source" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="value" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" />가 <paramref name="source" />의 유효한 인덱스 범위를 벗어납니다.  
  
또는 
 <paramref name="count" />가 0보다 작은 경우  
  
또는 
 <paramref name="startIndex" /> 및 <paramref name="count" />가 <paramref name="source" />의 올바른 섹션을 지정하지 않습니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="options" />에 잘못된 <see cref="T:System.Globalization.CompareOptions" /> 값이 포함된 경우</exception>
        <block subset="none" type="usage"><para>문자 집합에는 언어 또는 문화권 구분 정렬을 수행 하는 경우 간주 되지 않는 문자는 무시할 수 있는 문자가 포함 됩니다. 문화권 구분 검색(즉, <paramref name="options" />이 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 또는 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />가 아닌 경우)에서는 <paramref name="value" />에 무시할 수 있는 문자가 포함된 경우 결과는 해당 문자가 제거된 대상을 검색하는 것과 같습니다. 하는 경우 <paramref name="value" /> 하나 이상의 무시할 수 있는 문자로 구성 되어 합니다 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 항상 반환 <paramref name="startIndex" />, 검색을 시작할 문자 위치는입니다.  
  
다음 예제에서는 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 메서드는 두 문자열의 모든 "m"을 뒤 하이픈이 (U + 00AD)의 위치 하지만 최종 "m" 앞의 첫 번째 문자 위치를 찾는 데 사용 됩니다. 문자열 중 하나에만 필수 부분 문자열이 포함되어 있습니다. 두 경우 모두 사용자 지정 하이픈은 무시할 수 있는 문자이므로, 문화권 구분 비교를 수행하는 경우 메서드는 문자열에서 "m"의 인덱스를 반환합니다. 그러나 서 수 비교를 수행할 때 부분만에서 찾은 첫 번째 문자열입니다. 참고 첫 번째 문자열 뒤에 "m" 사용자 지정 하이픈을 포함 하는 메서드를 사용자 지정 하이픈의 인덱스를 반환 하지 못하고 있지만 문화권 구분 비교를 수행 하는 경우 대신 "m"의 인덱스를 반환 합니다. 메서드는 서수 비교를 수행하는 경우에만 첫 번째 문자열에서 사용자 지정 하이픈의 인덱스를 반환합니다.  
  
[! 코드 vb[System.Globalization.CompareInfo.LastIndexOf#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable15.vb#16)]</para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CompareInfo.LCID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LCID : int" Usage="System.Globalization.CompareInfo.LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Globalization.CompareInfo" />에 대한 올바른 형태의 문화권 식별자를 가져옵니다.</summary>
        <value>현재 <see cref="T:System.Globalization.CompareInfo" />에 대한 올바른 형태의 문화권 식별자입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제는 <xref:System.Globalization.CompareInfo.LCID%2A> 속성입니다.  
  
 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CompareInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Globalization.CompareInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Globalization.CompareInfo" /> 개체에서 정렬 작업에 사용하는 문화권의 이름을 가져옵니다.</summary>
        <value>문화권의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Globalization.CompareInfo.Name%2A> 고 <xref:System.Globalization.CultureInfo.Name?displayProperty=nameWithType> 속성 다른 값을 가질 수 있습니다. 예를 들어는 <xref:System.Globalization.CompareInfo.LCID%2A> 속성 값이 16 진수 0x10407 독일어 전화 번호부에 나타나는 것 처럼 이름을 정렬 하는 대체 정렬 문화권을 식별 합니다. <xref:System.Globalization.CompareInfo.Name%2A> 반면 속성에 "de-de_phoneb"의 값을 <xref:System.Globalization.CultureInfo.Name?displayProperty=nameWithType> 관련된 독일어 (독일) 문화권의 속성을 "DE-DE" 값이 합니다.  
  
   
  
## Examples  
 다음 예제에서는-FR 및 JA-JP 문화권을 사용 하 여 세 개의 문자열을 비교 합니다. <xref:System.Globalization.CultureInfo.Name%2A> 속성 각 문화권의 이름을 표시 하는 데 사용 됩니다.  
  
 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="sender">콜백을 시작한 개체입니다.</param>
        <summary>전체 개체 그래프가 deserialize될 때 실행됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현을 사용할 수 있는 경우에만 현재 <xref:System.Globalization.CompareInfo> 개체가로 캐스팅을 <xref:System.Runtime.Serialization.IDeserializationCallback> 인터페이스입니다. 자세한 내용은 <xref:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization%2A> 메서드를 참조하세요.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.IDeserializationCallback" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="compareInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 <see cref="T:System.Globalization.CompareInfo" /> 개체를 나타내는 문자열을 반환합니다.</summary>
        <returns>현재 <see cref="T:System.Globalization.CompareInfo" /> 개체를 나타내는 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 재정의 합니다 <xref:System.Object.ToString%2A?displayProperty=nameWithType> 메서드. 클래스 이름 및 인스턴스 값으로 이루어진 문자열을 반환 <xref:System.Globalization.CompareInfo.Name%2A> 속성인 하이픈으로 구분 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>.NET Framework 4를 사용 하 여 시작 합니다 <see cref="M:System.Globalization.CompareInfo.ToString" /> 메서드를 클래스 이름 뒤에 공백, 하이픈, 공백, 및의 값을 반환 합니다 <see cref="P:System.Globalization.CompareInfo.Name" /> 속성. 예를 들어를 <see cref="T:System.Globalization.CompareInfo" /> EN-US 문화권을 나타내는 개체를 <see cref="M:System.Globalization.CompareInfo.ToString" /> 메서드 "CompareInfo-EN-US"를 반환 합니다. 이전 버전의.NET Framework에서는 클래스 이름 뒤에 공백, 하이픈, 공백, 및의 값을 반환 합니다 <see cref="P:System.Globalization.CompareInfo.LCID" /> 속성입니다. 예를 들어를 <see cref="T:System.Globalization.CompareInfo" /> EN-US 문화권을 나타내는 개체를 <see cref="M:System.Globalization.CompareInfo.ToString" /> 메서드 "CompareInfo-1033"를 반환 합니다.</para></block>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public System.Globalization.SortVersion Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.SortVersion Version" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CompareInfo.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As SortVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::SortVersion ^ Version { System::Globalization::SortVersion ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : System.Globalization.SortVersion" Usage="System.Globalization.CompareInfo.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.SortVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>문자열을 비교하고 정렬하는 데 사용되는 유니코드 버전에 대한 정보를 가져옵니다.</summary>
        <value>문자열을 비교하고 정렬하는 데 사용되는 유니코드 버전에 대한 정보를 포함하는 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 개별 문자의 가중치 및 특정 문자열의 비교 하거나 정렬 하는 방법은.NET Framework의 특정 버전을 구현 하는 유니코드 사양의 버전에 따라 달라 집니다. 에 [!INCLUDE[net_v45](~/includes/net-v45-md.md)],이에 따라 달라 집니다 호스트 운영 체제에 다음 표와 같이 합니다. 지원되는 유니코드 버전 목록은 문자 비교 및 정렬에만 적용되며 범주에 따른 유니코드 문자의 분류에는 적용되지 않습니다.  
  
|.NET Framework 버전|운영 체제|유니코드 버전|  
|----------------------------|----------------------|---------------------|  
|[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]|모든 운영 체제|Unicode 5.0|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)] 이상 버전|[!INCLUDE[win7](~/includes/win7-md.md)]|Unicode 5.0|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)] 이상 버전|[!INCLUDE[win8](~/includes/win8-md.md)] 및 이후 Windows 운영 체제 버전|유니코드 6.3|  
  
 합니다 <xref:System.Globalization.SortVersion> 에서 반환 된 개체는 <xref:System.Globalization.CompareInfo.Version%2A> 속성 문자열을 비교 하는 데 정확한 유니코드 버전을 확인 하지 않습니다. 두 개를 비교 하는 경우에 유용 <xref:System.Globalization.SortVersion> 사용 하는지 확인 하려면 이러한 동일한 유니코드 버전 및 문화권 문자열을 비교 하는 개체입니다. 자세한 내용 및 예제에 대 한 참조를 <xref:System.Globalization.SortVersion> 참조 페이지입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.SortVersion" />
      </Docs>
    </Member>
  </Members>
</Type>