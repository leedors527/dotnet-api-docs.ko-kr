<Type Name="CultureAndRegionInfoBuilder" FullName="System.Globalization.CultureAndRegionInfoBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="974e7d6ee22755b31139ebc2b88ee870339c111d" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/17/2019" /><Meta Name="ms.locfileid" Value="59676600" /></Metadata><TypeSignature Language="C#" Value="public sealed class CultureAndRegionInfoBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CultureAndRegionInfoBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CultureAndRegionInfoBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CultureAndRegionInfoBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class CultureAndRegionInfoBuilder sealed" />
  <TypeSignature Language="F#" Value="type CultureAndRegionInfoBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>sysglobl</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>다른 문화권 및 국가/지역을 기반으로 또는 새로 사용자 지정 문화권을 정의합니다. 사용자 지정 문화권을 컴퓨터에 설치하면 이후 해당 컴퓨터에서 실행되는 애플리케이션에서 이 문화권을 사용할 수 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureInfo> 클래스 관련 된 언어, 보조 언어, 국가/지역, 달력 및 문화권 규칙 등의 문화권 관련 정보를 보유 합니다. 이 클래스는 culture 별 인스턴스의 제공 합니다 <xref:System.Globalization.DateTimeFormatInfo>, <xref:System.Globalization.NumberFormatInfo>를 <xref:System.Globalization.CompareInfo>, 및 <xref:System.Globalization.TextInfo> 클래스 대/소문자 구분, 서식 및 날짜와 숫자를 구문 분석 등의 문화권 관련 작업에 대 한 필요는 및 문자열을 비교 합니다.  
  
 기본적으로.NET Framework 지원 <xref:System.Globalization.CultureInfo> 문화권의 미리 정의 된 집합을 나타내는 개체입니다. 이러한 문화권의 목록에 대해서는 [국가별 언어 지원 (NLS) API 참조](https://go.microsoft.com/fwlink/?LinkId=200048) Go Global 개발자 센터에서. <xref:System.Globalization.CultureAndRegionInfoBuilder> 클래스는 완전히 새로운 또는 미리 정의 된 문화권을 재정의 하는 사용자 지정 culture를 만들 수 있습니다.  사용자 지정 문화권을 설치 및 특정 컴퓨터에서 등록 면 구별할 미리 정의 된 <xref:System.Globalization.CultureInfo> 개체 및 수 인스턴스화되어 사용 되며 해당 개체와 마찬가지로 합니다.  
  
> [!IMPORTANT]
>  <xref:System.Globalization.CultureAndRegionInfoBuilder> sysglobl.dll 라는 어셈블리에는 클래스를 찾을 수 있습니다. 성공적으로이 형식을 사용 하는 코드를 컴파일할 sysglobl.dll에 대 한 참조 추가 해야 합니다.  
  
 한 컴퓨터에 대 한 관리자 권한이 있는 사용자만 컴퓨터에서 사용자 지정 문화권을 등록할 수 있습니다. 따라서 앱 일반적으로 수행 되지 만들고 사용자 지정 culture를 설치 합니다. 대신 사용할 수는 <xref:System.Globalization.CultureAndRegionInfoBuilder> 관리자로 만들기, 설치 및 사용자 지정 문화권을 등록 하는 데 사용할 수 있는 특수 한 용도의 도구를 만드는 클래스입니다. 사용자 지정 문화권을 컴퓨터에 등록 되 면 사용할 수는 <xref:System.Globalization.CultureInfo> 클래스 인스턴스를 만드는 사용자 지정 문화권의 미리 정의 된 문화권에 대 한 것 처럼 앱에서.  
  
 사용자 지정 문화권에 대해 생성 된 날짜 및 시간 문자열을 구문 분석할 경우 사용 해야 합니다 <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> 또는 <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> 메서드 대신 합니다 <xref:System.DateTime.Parse%2A?displayProperty=nameWithType> 또는 <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> 메서드를 구문 분석 작업이 성공할 확률이 높아집니다. 사용자 지정 문화권의 날짜 및 시간 문자열에는 복잡 하 고 구문 분석 하기 어려울 수 있습니다. 합니다 <xref:System.DateTime.Parse%2A> 고 <xref:System.DateTime.TryParse%2A> 메서드가 실패할 수 있습니다는 모두 여러 암시적 구문 분석 패턴을 사용 하 여 문자열 구문 분석 하려고 합니다. <xref:System.DateTime.TryParseExact%2A> 메서드를 명시적으로 성공할 수 있는 하나 이상의 정확한 구문 분석 패턴을 지정 응용 프로그램에 필요한 반면, 합니다.  
  
## <a name="defining-and-creating-a-custom-culture"></a>정의 및 사용자 지정 문화권을 만들기  
 사용할를 <xref:System.Globalization.CultureAndRegionInfoBuilder> 클래스를 정의 및 사용자 지정 문화권 이름을 지정 합니다. 사용자 지정 culture는 완전히 새로운 culture, 기존 문화권 (즉, 추가 문화권을)를 기반으로 하는 새 문화권 또는 기존.NET Framework 문화권을 대체 하는 문화권을 수 있습니다. 각각의 경우에서 기본 단계는 동일합니다.  
  
1.  인스턴스화하는 <xref:System.Globalization.CultureAndRegionInfoBuilder> 개체를 호출 하 여 해당 <xref:System.Globalization.CultureAndRegionInfoBuilder.%23ctor%28System.String%2CSystem.Globalization.CultureAndRegionModifiers%29> 생성자입니다. 기존 문화권의 이름을 바꾸려면 해당 문화권의 이름을 전달 하며 <xref:System.Globalization.CultureAndRegionModifiers.Replacement?displayProperty=nameWithType> 생성자에 열거형 값입니다. 새 문화권 또는 추가 문화권을 만들려면 고유 문화권 이름 및 중 하나를 전달 합니다 <xref:System.Globalization.CultureAndRegionModifiers.Neutral?displayProperty=nameWithType> 또는 <xref:System.Globalization.CultureAndRegionModifiers.None?displayProperty=nameWithType> 열거형 값입니다.  
  
    > [!NOTE]
    >  사용 하는 경우는 <xref:System.Globalization.CultureAndRegionModifiers.Replacement?displayProperty=nameWithType> 인스턴스화할 열거형 값을 <xref:System.Globalization.CultureAndRegionInfoBuilder> 개체를 <xref:System.Globalization.CultureAndRegionInfoBuilder> 개체의 속성에서 값을 사용 하 여 자동으로 채워집니다는 <xref:System.Globalization.CultureInfo> 바꿀 개체입니다.  
  
2.  신규 또는 추가 문화권 만들려는 경우:  
  
    -   채우기는 <xref:System.Globalization.CultureAndRegionInfoBuilder> 호출 하 여 개체의 속성을 <xref:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromCultureInfo%2A> 메서드와 전달을 <xref:System.Globalization.CultureInfo> 개체 속성 값에 새 개체에 비슷합니다. 합니다.  
  
    -   채우기는 <xref:System.Globalization.CultureAndRegionInfoBuilder> 호출 하 여 개체의 국가별 속성을 <xref:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromRegionInfo%2A> 메서드와 전달을 <xref:System.Globalization.RegionInfo> 영역에 사용자 지정 문화권을 나타내는 개체입니다.  
  
3.  속성을 수정 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder> 필요에 따라 개체입니다.  
  
4.  별도 루틴에서 사용자 지정 문화권을 등록 하려는 경우 호출 된 <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> 메서드. 이 로드 하 고 별도 사용자 지정 문화권 설치 루틴에서 등록 하는 XML 파일을 생성 합니다.  
  
## <a name="registering-a-custom-culture"></a>사용자 지정 Culture를 등록합니다.  
 문화권을 야기 하는 응용 프로그램에서 분리 된 사용자 지정 문화권에 대 한 등록 응용 프로그램을 개발 하는 경우, 호출 하는 <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> 메서드를 사용자 지정 문화권의 정의가 포함 된 XML 파일을 로드 하 고는 를인스턴스화합니다<xref:System.Globalization.CultureAndRegionInfoBuilder>개체입니다. 등록을 처리 하려면 호출을 <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> 메서드. 성공 하려면 등록을 위한 사용자 지정 문화권을 등록 하는 응용 프로그램에서 실행 되어야 합니다 관리자 권한으로 대상 시스템 그렇지 않은 경우에 대 한 호출 <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> throw는 <xref:System.UnauthorizedAccessException> 예외입니다.  
  
> [!WARNING]
>  문화권 데이터는 시스템 간에 달라질 수 있습니다. 사용 중인 경우는 <xref:System.Globalization.CultureAndRegionInfoBuilder> 사용자 지정 문화권 여러 시스템 및 일정을 만들려면 클래스에서 기존 데이터를 로드 하 여 사용자의 사용자 지정 culture를 만들려는 <xref:System.Globalization.CultureInfo> 및 <xref:System.Globalization.RegionInfo> 개체 및 사용자 지정 두 개발 해야 다른 유틸리티입니다. 첫 번째 사용자 지정 문화권을 만들고 XML 파일에 저장 합니다. 두 번째 용도 <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> 메서드를 XML 파일에서 사용자 지정 문화권을 로드 하 고 대상 컴퓨터에 등록 합니다.  
  
 등록 프로세스에는 다음 작업을 수행합니다.  
  
-   에 정의 된 정보가 포함 된.nlp 파일을 만듭니다는 <xref:System.Globalization.CultureAndRegionInfoBuilder> 개체입니다.  
  
-   대상 컴퓨터의 %windir%\Globalization 시스템 디렉터리에서.nlp 파일을 저장합니다. 이 통해 사용자 지정 문화권의 설정을 세션 간에 유지 합니다. (의 <xref:System.Globalization.CultureAndRegionInfoBuilder> 메서드.nlp 파일 시스템 디렉터리에 저장 되기 때문에 관리 권한이 필요 합니다.)  
  
-   준비 %windir%\Globalization 시스템 디렉터리에서 내부 캐시 하는 대신 다음에 검색 하기 위해.NET 프레임 워크는 사용자의 새 사용자 지정 culture를 만들기 위한 요청 합니다.  
  
 사용자 지정 문화권 성공적으로 등록 되 면.NET Framework에서 미리 정의 된 문화권을 구분 되지 않습니다. 호출 될 때까지 사용자 지정 culture를 사용할 수는 <xref:System.Globalization.CultureAndRegionInfoBuilder> 메서드.nlp 파일을 로컬 컴퓨터에서 제거 합니다.  
  
## <a name="instantiating-a-custom-culture"></a>사용자 지정 문화권 인스턴스화  
 다음 방법 중 하나에서 사용자 지정 문화권의 인스턴스를 만들 수 있습니다.  
  
-   호출 하 여는 <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType> 문화권 이름 사용 하 여 생성자입니다.  
  
-   호출 하 여는 <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> 문화권 이름 사용 하 여 메서드.  
  
-   호출 하 여는 <xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=nameWithType> 문화권 이름 사용 하 여 메서드.  
  
 또한 배열 <xref:System.Globalization.CultureInfo> 에서 반환 되는 개체는 <xref:System.Globalization.CultureInfo.GetCultures%2A?displayProperty=nameWithType> 메서드에 사용자 지정 문화권이 포함 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 미국에서 러시아어 언어를 나타내는 사용자 지정 ru (미국) 문화권을 정의 합니다. 러시아어 (러시아)에서 설정을 로드 하 여 사용자 지정 문화권을 정의 하는 예제 <xref:System.Globalization.CultureInfo> 개체와 미국 <xref:System.Globalization.RegionInfo> 개체를 설정한 다음 다양 한 <xref:System.Globalization.CultureAndRegionInfoBuilder> 속성입니다. 이 예제에서는 사용자 지정 문화권을 등록 하 고 그런 다음 인스턴스화합니다 하 고이 현재 스레드 문화권을 사용 하면 만듭니다.  
  
 [!code-csharp[System.Globalization.CultureAndRegionInfoBuilder.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureandregioninfobuilder.class/cs/car.cs#1)]
 [!code-vb[System.Globalization.CultureAndRegionInfoBuilder.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureandregioninfobuilder.class/vb/car.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureAndRegionInfoBuilder (string cultureName, System.Globalization.CultureAndRegionModifiers flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cultureName, valuetype System.Globalization.CultureAndRegionModifiers flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.#ctor(System.String,System.Globalization.CultureAndRegionModifiers)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cultureName As String, flags As CultureAndRegionModifiers)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureAndRegionInfoBuilder(System::String ^ cultureName, System::Globalization::CultureAndRegionModifiers flags);" />
      <MemberSignature Language="F#" Value="new System.Globalization.CultureAndRegionInfoBuilder : string * System.Globalization.CultureAndRegionModifiers -&gt; System.Globalization.CultureAndRegionInfoBuilder" Usage="new System.Globalization.CultureAndRegionInfoBuilder (cultureName, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cultureName" Type="System.String" />
        <Parameter Name="flags" Type="System.Globalization.CultureAndRegionModifiers" />
      </Parameters>
      <Docs>
        <param name="cultureName">문화권의 이름입니다.</param>
        <param name="flags">새 <see cref="T:System.Globalization.CultureAndRegionModifiers" /> 개체가 중립 문화권인지, 기존 문화권 및 국가/지역을 대체하는지, 또는 새 문화권인지를 지정하는 <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 값 중 하나입니다.</param>
        <summary><see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `cultureName` 매개 변수에 새 이름을 지정 <xref:System.Globalization.CultureAndRegionInfoBuilder> 개체입니다.  
  
 `flags` 매개 변수가 사용 되는 <xref:System.Globalization.CultureAndRegionModifiers> 지정 하는 값 여부를 새 <xref:System.Globalization.CultureAndRegionInfoBuilder> 개체 새 사용자 지정 문화권 또는 기존 중립 문화권, 특정 문화권 또는 Windows 로캘을 대체 합니다.  
  
 경우는 `cultureName` 기존.NET Framework 문화권에 등록 된 사용자 지정 된 매개 변수 지정 문화권 또는 Windows 로캘의 생성 하는 문화권을 <xref:System.Globalization.CultureAndRegionInfoBuilder.%23ctor%2A> 생성자를 자동으로 새 채웁니다 <xref:System.Globalization.CultureAndRegionInfoBuilder> 문화권을 사용 하 여 개체 및 국가/지역 정보입니다.  
  
 새 채울 <xref:System.Globalization.CultureAndRegionInfoBuilder> 를 호출 하 여 문화권 및 국가/지역 정보를 사용 하 여 개체를 <xref:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromCultureInfo%2A> 및 <xref:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromRegionInfo%2A> 메서드.  
  
## <a name="custom-culture-names"></a>사용자 지정 문화권 이름  
 기본 형식의 `cultureName` 새, 사용자 지정 문화권에 대 한 매개 변수는 "[`prefix`-]`language`[-`region`] [-`suffix`[`…`]]" 여기서는 `language` 구성 요소가 필요 하며 `prefix`, `region`, 및 `suffix` 구성 요소는 선택 사항입니다. 각 구성 요소의 최대 길이 8 자, 최대 길이인 전체 `cultureName` 매개 변수는 84 자 합니다.  
  
 `prefix` 구성 요소는 IANA Internet Assigned Numbers Authority ()을 식별 합니다. 지정 하 고 "i-" 또는 "I-"는 IANA 또는 "x" 또는 "X" 문화권 이름에 대 한 개인 용도로 예약을 사용 하 여 등록 하는 문화권 이름에 대 한 합니다. 그렇지 않은 경우 접두사가 필요 하지 않습니다. 자세한 내용은 RFC 4646, "the Identification of Languages에 대 한 태그"을 참조 하세요.  
  
 `language` 구성 요소를 `cultureName` 에서 ISO 639-1에서 파생 된 두 문자의 소문자 코드를 지정 하는 매개 변수 및 `region` ISO 3166에서 파생 된 두 문자의 대문자 코드를 지정 합니다. 예를 들어 미국에서 사용 되에 영어는 EN-US 나타냅니다. 없는 경우는 `region` 구성 요소는 중립 문화권을 나타냅니다.  
  
 `cultureName` 즉 동일.NET Framework에 포함 된 문화권의 이름 바꾸기 (재정의) 문화권을 나타냅니다. 값의 대체 문화권 속성에 할당할 수 있는 제한 됩니다. 이러한 제한에 대 한 자세한 내용은 각 속성에 대 한 예외를 참조 하세요.  
  
 응용 프로그램을 사용 합니다 `suffix` 구성 요소와 유사한 문화권을 구분 합니다. 예를 들어 두 회사, ABC, XYZ를 만들고 세계 시장에서 제품을 홍보 하는 새 ASP.NET 웹 서비스를 공유 합니다. 서비스에 대 한 웹 페이지의 지역 로고 및 사용자의 문화권에 따라 각 회사의 로컬 전화 번호와 같은 정보를 표시합니다. 각 웹 페이지에 대 한 문화권 관련 콘텐츠는 문화권 이름으로 식별 되 고 회사 이름으로 정규화 된 별도 리소스 파일입니다.  예를 들어 EN-US 및 JA-JP 문화권에 대 한 리소스 파일 en-미국-ABC "," en-미국-XYZ "," 일본-JP-ABC "및" XYZ-JP-일본 라고 합니다. 다른 특정 시장 정보를 표시 하는 동일한 응용 프로그램 논리를 사용 하도록 웹 서비스를 사용 하도록 설정 하는 "ABC" 및 "XYZ" 접미사.  
  
 `suffix` 구성 요소는 하위 각 하위 구성 요소는 하이픈으로 구분 된 각 하위 구성 요소의 최대 길이 8 자 구성 될 수 있습니다. 예를 들어 "en-미국-honda-자동차"를 `cultureName` 매개 변수를 "-honda-자동차"는는 `suffix` 구성 요소입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 개인 사용 하 여 접두사를 사용 하 여 사용자 지정 문화권을 만든 다음 해당 속성 집합을 보여 줍니다. 첫 번째 속성에는 문화권의 이름을 나열합니다.  
  
 [!code-cpp[sys.glob.carib1#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.carib1/CPP/carib.cpp#1)]
 [!code-csharp[sys.glob.carib1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib1/CS/carib.cs#1)]
 [!code-vb[sys.glob.carib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib1/VB/carib.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="cultureName" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="cultureName" />가 빈 문자열("")입니다.  
  
또는 
 <paramref name="cultureName" />에 "0" ~ "9", "a" ~ "z", "A" ~ "Z", 하이픈(-) 또는 밑줄(_) 이외의 문자가 들어 있는 경우  
  
또는 
 <paramref name="cultureName" />에 구성 요소를 구분하는 하이픈(-)이 들어 있지만 <paramref name="prefix" />, <paramref name="language" />, <paramref name="region" /> 또는 <paramref name="suffix" /> 구성 요소 중 하나 이상이 없는 경우. 즉, 두 개 이상의 하이픈이 인접한 경우  
  
또는 
 <paramref name="cultureName" />이 84자보다 긴 경우  
  
또는 
 <paramref name="cultureName" />에 구성 요소를 구분하는 하이픈이 들어 있지만 하나 이상의 구성 요소가 8자보다 긴 경우  
  
또는 
 <paramref name="cultureName" />에 선행 또는 후행 하이픈(-)이나 밑줄(_)이 들어 있는 경우  
  
또는 
 <paramref name="cultureName" />이 .NET Framework 문화권 대신 다른 정렬 대체 문화권을 지정하는 경우. 예를 들어, <paramref name="culturenName" />이 독일어(독일) 문화권인 "de-DE"가 아니라 독일 전화 번호부에 표시되는 방식으로 문자열을 정렬하는 문화권인 "de-de_phoneb"인 경우  
  
또는 
 <paramref name="flags" />에 <see cref="T:System.Globalization.CultureAndRegionModifiers" /> 값의 잘못된 조합이 포함되어 있습니다.  
  
또는 
 <paramref name="flags" />에 <see cref="F:System.Globalization.CultureAndRegionModifiers.Replacement" /> 또는 <see cref="F:System.Globalization.CultureAndRegionModifiers.Neutral" />이 들어 있고 <paramref name="cultureName" />이 찾을 수 없는 문화권을 지정하는 경우  
  
또는 
 <paramref name="flags" />에 <see cref="F:System.Globalization.CultureAndRegionModifiers.Replacement" />가 들어 있고 <paramref name="cultureName" />이 .NET Framework에서 제공하는 문화권을 대체하지 않는 사용자 지정 문화권을 지정하는 경우  
  
또는 
 <paramref name="flags" />에 <see cref="F:System.Globalization.CultureAndRegionModifiers.Neutral" />이 들어 있고 <paramref name="cultureName" />이 중립 문화권이 아닌 문화권을 지정하는 경우  
  
또는 
 <paramref name="flags" />에 <see cref="F:System.Globalization.CultureAndRegionModifiers.Neutral" />이 들어 있고 <paramref name="cultureName" />이 .NET Framework에서 제공하는 특정 문화권을 대체하는 사용자 지정 문화권을 지정하는 경우</exception>
        <altmember cref="T:System.Globalization.CultureTypes" />
        <altmember cref="T:System.Globalization.CultureAndRegionModifiers" />
      </Docs>
    </Member>
    <Member MemberName="AvailableCalendars">
      <MemberSignature Language="C#" Value="public System.Globalization.Calendar[] AvailableCalendars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar[] AvailableCalendars" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars" />
      <MemberSignature Language="VB.NET" Value="Public Property AvailableCalendars As Calendar()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Globalization::Calendar ^&gt; ^ AvailableCalendars { cli::array &lt;System::Globalization::Calendar ^&gt; ^ get(); void set(cli::array &lt;System::Globalization::Calendar ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AvailableCalendars : System.Globalization.Calendar[] with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 개체에서 지원하는 달력의 배열을 가져오거나 설정합니다.</summary>
        <value>달력의 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars%2A> 속성에 해당 하는 <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">set 작업에서 할당된 배열이 <see langword="null" />이거나 할당된 배열의 요소가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.NotSupportedException">이 속성이 중립 문화권에 대해 지원되지 않는 경우  
  
또는 
set 작업에서 할당된 배열에 <see cref="T:System.Globalization.PersianCalendar" />, <see cref="T:System.Globalization.TaiwanLunisolarCalendar" />, <see cref="T:System.Globalization.KoreanLunisolarCalendar" />, <see cref="T:System.Globalization.JapaneseLunisolarCalendar" />, <see cref="T:System.Globalization.ChineseLunisolarCalendar" /> 또는 <see cref="T:System.Globalization.JulianCalendar" />가 들어 있는 경우  
  
또는 
set 작업에서 할당된 배열에 사용자 지정 달력이 들어 있는 경우</exception>
        <altmember cref="P:System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="CompareInfo">
      <MemberSignature Language="C#" Value="public System.Globalization.CompareInfo CompareInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CompareInfo CompareInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property CompareInfo As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CompareInfo ^ CompareInfo { System::Globalization::CompareInfo ^ get(); void set(System::Globalization::CompareInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CompareInfo : System.Globalization.CompareInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.CompareInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>문화권에 대한 문자열을 비교하는 방법을 정의하는 <see cref="T:System.Globalization.CompareInfo" /> 개체를 가져오거나 설정합니다.</summary>
        <value>문화권에 대한 문자열을 비교하는 방법을 정의하는 <see cref="T:System.Globalization.CompareInfo" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo%2A?displayProperty=nameWithType> 속성에 해당 하는 <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> 속성입니다.  
  
 합니다 <xref:System.Globalization.TextInfo> 및 <xref:System.Globalization.CompareInfo> 에 할당 된 개체를 <xref:System.Globalization.CultureAndRegionInfoBuilder.TextInfo%2A> 및 <xref:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo%2A> 속성 둘 다 문화권 구분 및 대/소문자 구분 문자열 비교를 지원 합니다. 합니다 <xref:System.Globalization.CompareInfo> 개체에는 포함 하는 메서드를 <xref:System.Globalization.CompareOptions> 문화권 구분 및 대/소문자 구분 비교를 지 원하는 매개 변수가 있습니다. 이러한 두 속성을 할당 해야 <xref:System.Globalization.TextInfo> 고 <xref:System.Globalization.CompareInfo> 동일한 로캘을 나타내는 개체입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">set 작업에서 할당된 값이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.NotSupportedException">이 사용자 지정 문화권이 기본 제공 문화권을 재정의한 것일 경우</exception>
        <altmember cref="P:System.Globalization.CultureAndRegionInfoBuilder.TextInfo" />
      </Docs>
    </Member>
    <Member MemberName="ConsoleFallbackUICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo ConsoleFallbackUICulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo ConsoleFallbackUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ConsoleFallbackUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ ConsoleFallbackUICulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConsoleFallbackUICulture : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>기본 그래픽 사용자 인터페이스 문화권이 적합하지 않은 경우 콘솔 응용 프로그램에 적합한 대체 사용자 인터페이스 문화권을 가져오거나 설정합니다.</summary>
        <value>콘솔에서 텍스트를 읽고 표시하는 데 사용되는 대체 문화권입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 가져오기 작업에는 <xref:System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture%2A> 속성에 해당 하는 <xref:System.Globalization.CultureInfo.GetConsoleFallbackUICulture%2A> 메서드. 지정할 `null` 현재 정의한 문화권을 나타내는 set 작업에서 <xref:System.Globalization.CultureAndRegionInfoBuilder> 개체 대체 사용자 인터페이스 문화권입니다. 속성 자체에 다른 콘솔 대체 UI 문화권은 문화권을 설정 하려고 하면 다음 할당 됩니다 마지막 "리프" 문화권입니다.  
  
 아랍어, 히브리어, 페르시아어, Urdu 및 시리아어 등의 언어는 양방향 텍스트를 기반으로 합니다. 그래픽 사용자 인터페이스를 사용 하 고는 Windows 응용 프로그램에 양방향 언어를 지원 합니다. 그러나 콘솔 응용 프로그램, 운영 체제 콘솔의 텍스트 사용자 인터페이스를 사용 하는, 양방향 텍스트 지원을 제공 하지 않습니다. 따라서 콘솔 응용 프로그램은 아랍어 또는 히브리어로 지역화 된, 경우 콘솔 화면에서 읽을 수 없는 텍스트로 표시 합니다.  
  
 사용자 인터페이스 culture는 응용 프로그램 사용자 입력 및 출력을 지원 하며 기본적으로 운영 체제 문화권과 동일 리소스를 지정 합니다. 예를 들어를 <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> 속성 아랍어 운영 체제에 대 한 아랍어 문화권을 반환 합니다. 응용 프로그램을 사용할지는 <xref:System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture%2A> 콘솔 응용 프로그램 사용자 인터페이스에 대 한 적합 한 중립 문화권을 검색할 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">set 작업에서 지정된 문화권이 <see langword="null" />이 아니고 지정된 문화권의 <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ConsoleFallbackUICulture" /> 속성이 지정된 문화권과 동일하지 않은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromLdml">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureAndRegionInfoBuilder CreateFromLdml (string xmlFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureAndRegionInfoBuilder CreateFromLdml(string xmlFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromLdml (xmlFileName As String) As CultureAndRegionInfoBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureAndRegionInfoBuilder ^ CreateFromLdml(System::String ^ xmlFileName);" />
      <MemberSignature Language="F#" Value="static member CreateFromLdml : string -&gt; System.Globalization.CultureAndRegionInfoBuilder" Usage="System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml xmlFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureAndRegionInfoBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlFileName"><see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 개체의 XML 표현이 들어 있는 파일 이름입니다.</param>
        <summary><see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 개체의 표현이 들어 있는 지정된 XML 파일에서 해당 개체를 다시 구성합니다.</summary>
        <returns><paramref name="xmlFileName" /> 매개 변수에 저장된 정보와 동일한 새 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `xmlFileName` 매개 변수는의 XML 표현을 포함 하는 파일 이름 지정을 <xref:System.Globalization.CultureAndRegionInfoBuilder> 개체입니다. XML 파일 형식의 로캘 데이터 태그 언어 (LDML) 버전 1.1 라고 합니다. 새 <xref:System.Globalization.CultureAndRegionInfoBuilder> 개체를 만들어 데이터를 사용 하 여 초기화 `xmlFileName`합니다. 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> 의 반대 작업을 수행 하는 메서드를 <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> 메서드.  
  
 LDML 파일의 문화권 속성의 자식 요소로 지정 되는 `<special>` 요소에는 `<identity>` 섹션입니다. 속성 값을 일반적으로 된 요소의 `type` 특성입니다. 예를 들어 LDML 파일에서 발췌 영어 중립 문화권으로는 문화권의 부모를 정의합니다.  
  
```xml  
<identity>  
   <version number="1.1">ldml version 1.1</version>  
   <generation date="2012-05-16" />  
   <special xmlns:msLocale="http://schemas.microsoft.com/globalization/2004/08/carib/ldml">  
      <!-content removed -->  
      <msLocale:parentName type="en" />  
      <!-content removed -->  
   </special>  
</identity>  
```  
  
 LDML 표준에 대 한 자세한 내용은 참조 하세요. [유니코드 기술 표준 #35, "로캘 데이터 태그 언어 (LDML)"](https://go.microsoft.com/fwlink/p/?LinkId=252840) 유니코드 컨소시엄 웹 사이트입니다.  
  
   
  
## Examples  
 다음 예제는 <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> 고 <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> 메서드.  
  
 [!code-csharp[sys.glob.carib.saveLdml#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib.saveLdml/cs/sl.cs#1)]
 [!code-vb[sys.glob.carib.saveLdml#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib.saveLdml/vb/sl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xmlFileName" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="xmlFileName" />이 빈 문자열("")이거나 잘못된 파일 또는 경로 이름인 경우</exception>
        <exception cref="T:System.Xml.XmlException"><paramref name="xmlFileName" />의 데이터가 올바른 XML 형식이 아닌 경우  
  
또는 
<paramref name="xmlFileName" />에 액세스하는 동안 I/O 오류가 발생한 경우</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException"><paramref name="xmlFileName" />의 데이터가 올바른 LDML 형식이 아닌 경우</exception>
        <altmember cref="M:System.Globalization.CultureAndRegionInfoBuilder.Save(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CultureEnglishName">
      <MemberSignature Language="C#" Value="public string CultureEnglishName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CultureEnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureEnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CultureEnglishName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CultureEnglishName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>영어로 된 문화권 이름을 가져오거나 설정합니다.</summary>
        <value>영어로 된 문화권 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName%2A> 속성에 해당 하는 <xref:System.Globalization.CultureInfo.EnglishName%2A> 속성입니다.  
  
 예를 들어의 반환 값을 <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName%2A> 영어 미국에서 사용 되는 특정 문화권에 대 한 속성이 "영어 (미국)".  
  
 이 속성의 값은.NET Framework의 언어 버전에 관계 없이 동일 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 개인 사용 하 여 접두사를 사용 하 여 사용자 지정 문화권을 만든 다음 해당 속성 집합을 보여 줍니다. 첫 번째 속성에는 문화권의 이름을 나열합니다.  
  
 [!code-cpp[sys.glob.carib1#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.carib1/CPP/carib.cpp#1)]
 [!code-csharp[sys.glob.carib1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib1/CS/carib.cs#1)]
 [!code-vb[sys.glob.carib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib1/VB/carib.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">집합 작업의 값이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">set 작업의 값 길이가 0자에서 79자 범위를 벗어난 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="CultureName">
      <MemberSignature Language="C#" Value="public string CultureName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CultureName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CultureName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CultureName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CultureName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CultureName : string" Usage="System.Globalization.CultureAndRegionInfoBuilder.CultureName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>만들 문화권의 이름을 가져옵니다.</summary>
        <value>현재 <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 개체의 문화권 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환 값은에 지정 된 문화권의 이름을 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.%23ctor%2A> 생성자입니다. 지정된 된 문화권 이름을 경우를 제외 하 고, 기존 문화권으로 동일한 경우 반환 값에 지정 된 문화권 이름이 아니라 기존 문화권의 이름입니다.  
  
 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureName%2A> 속성에 해당 하는 <xref:System.Globalization.CultureInfo.Name%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 개인 사용 하 여 접두사를 사용 하 여 사용자 지정 문화권을 만든 다음 해당 속성 집합을 보여 줍니다. 첫 번째 속성에는 문화권의 이름을 나열합니다.  
  
 [!code-cpp[sys.glob.carib1#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.carib1/CPP/carib.cpp#1)]
 [!code-csharp[sys.glob.carib1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib1/CS/carib.cs#1)]
 [!code-vb[sys.glob.carib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib1/VB/carib.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CultureNativeName">
      <MemberSignature Language="C#" Value="public string CultureNativeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CultureNativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureNativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CultureNativeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CultureNativeName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>문화권 이름을 해당 문화권에서 표시하도록 설정된 형식 및 언어로 가져오거나 설정합니다.</summary>
        <value>해당 문화권에서 표시하도록 설정된 형식 및 언어로 된 문화권 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName%2A> 속성에 해당 하는 <xref:System.Globalization.CultureInfo.NativeName%2A> 속성입니다.  
  
 이 속성의 값은.NET Framework의 언어 버전에 관계 없이 동일 합니다.  
  
 문화권의 언어를 올바르게 표시 하려면 시스템을 설정 하지 않으면 문화권의 전체 이름을 제대로 표시 되지 않을 수 있습니다. 예를 들어 경우는 <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureName%2A> 속성에는 "JA-JP" 일본어 (일본)은는 <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName%2A> 속성 영어로 설정 되어 있는 시스템에 올바르게 표시 되지 않습니다. 그러나 같은 Windows 2000의 다국어 운영 체제를 표시 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName%2A> 속성 올바르게 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 개인 사용 하 여 접두사를 사용 하 여 사용자 지정 문화권을 만든 다음 해당 속성 집합을 보여 줍니다. 첫 번째 속성에는 문화권의 이름을 나열합니다.  
  
 [!code-cpp[sys.glob.carib1#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.carib1/CPP/carib.cpp#1)]
 [!code-csharp[sys.glob.carib1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib1/CS/carib.cs#1)]
 [!code-vb[sys.glob.carib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib1/VB/carib.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">집합 작업의 값이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">set 작업의 값 길이가 0자에서 79자 범위를 벗어난 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="CultureTypes">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureTypes CultureTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CultureTypes CultureTypes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CultureTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CultureTypes As CultureTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureTypes CultureTypes { System::Globalization::CultureTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.CultureTypes : System.Globalization.CultureTypes" Usage="System.Globalization.CultureAndRegionInfoBuilder.CultureTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 개체가 나타내는 문화권을 설명하는 <see cref="T:System.Globalization.CultureTypes" /> 값을 가져옵니다.</summary>
        <value><see cref="T:System.Globalization.CultureTypes" /> 값 중 하나입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Globalization.CultureTypes" />
        <altmember cref="P:System.Globalization.CultureInfo.CultureTypes" />
        <altmember cref="M:System.Globalization.CultureInfo.GetCultures(System.Globalization.CultureTypes)" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyEnglishName">
      <MemberSignature Language="C#" Value="public string CurrencyEnglishName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyEnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyEnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyEnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencyEnglishName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyEnglishName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.CurrencyEnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 개체가 나타내는 국가/지역에서 사용되는 통화의 이름을 영어로 가져오거나 설정합니다.</summary>
        <value>지역에서 사용되는 영어로 된 통화 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.CurrencyEnglishName%2A> 속성은 해당 하는 <xref:System.Globalization.RegionInfo.CurrencyEnglishName%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">집합 작업의 값이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException">set 작업의 값이 빈 문자열("")인 경우</exception>
        <exception cref="T:System.NotSupportedException">현재 <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 개체가 중립 문화권인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="CurrencyNativeName">
      <MemberSignature Language="C#" Value="public string CurrencyNativeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyNativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyNativeName" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyNativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencyNativeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyNativeName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.CurrencyNativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 개체가 나타내는 국가/지역에서 사용되는 통화의 네이티브 이름을 가져오거나 설정합니다.</summary>
        <value>현재 <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 개체가 나타내는 국가/지역에서 사용되는 통화의 이름으로, 해당 지역의 ISO 3166 국가/지역 코드와 연관된 언어 형식으로 표시됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.CurrencyNativeName%2A> 속성은 해당 하는 <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">집합 작업의 값이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException">set 작업의 값이 빈 문자열("")인 경우</exception>
        <exception cref="T:System.NotSupportedException">현재 <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 개체가 중립 문화권인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GeoId">
      <MemberSignature Language="C#" Value="public int GeoId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GeoId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.GeoId" />
      <MemberSignature Language="VB.NET" Value="Public Property GeoId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int GeoId { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.GeoId : int with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.GeoId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>지역, 국가, 도시 또는 위치에 대한 고유 식별 번호를 가져오거나 설정합니다.</summary>
        <value>지역을 고유하게 식별하는 부호 있는 32비트 숫자입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.GeoId%2A> 속성에 해당 하는 <xref:System.Globalization.RegionInfo.GeoId%2A> 속성입니다.  
  
 응용 프로그램을 사용할지는 <xref:System.Globalization.CultureAndRegionInfoBuilder.GeoId%2A> 속성을 고객에 게 문화권 관련 서비스를 제공 합니다. 예를 들어를 <xref:System.Globalization.CultureAndRegionInfoBuilder.GeoId%2A> 영역에 대 한 특정 정보를 포함 하는 데이터베이스 레코드에 액세스 하는 키로 사용할 수 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">현재 <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 개체가 중립 문화권을 정의하는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GregorianDateTimeFormat">
      <MemberSignature Language="C#" Value="public System.Globalization.DateTimeFormatInfo GregorianDateTimeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.DateTimeFormatInfo GregorianDateTimeFormat" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property GregorianDateTimeFormat As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::DateTimeFormatInfo ^ GregorianDateTimeFormat { System::Globalization::DateTimeFormatInfo ^ get(); void set(System::Globalization::DateTimeFormatInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GregorianDateTimeFormat : System.Globalization.DateTimeFormatInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>그레고리오력에 따라 날짜 및 시간 형식을 정의하는 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 현재 정의 된 문화권을 포함 하 여 모든 문화권 <xref:System.Globalization.CultureAndRegionInfoBuilder> 개체, 연결 된 지역화 된 일반 달력을 포함 한 <xref:System.Globalization.DateTimeFormatInfo> 개체입니다. <xref:System.Globalization.DateTimeFormatInfo> 개체 응용 프로그램에서 날짜 및 시간을 표시 하는 방법을 정의 합니다. 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat%2A> 속성 값이를 <xref:System.Globalization.DateTimeFormatInfo> 반환한 첫 번째 지역화 된 일반 달력을 사용 하 여 연결 된 개체는 <xref:System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">집합 작업의 값이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">set 작업의 값 속성이 잘못된 속성 값을 반환하는 경우</exception>
        <exception cref="T:System.NotSupportedException">현재 <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 개체가 중립 문화권인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="IetfLanguageTag">
      <MemberSignature Language="C#" Value="public string IetfLanguageTag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IetfLanguageTag" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.IetfLanguageTag" />
      <MemberSignature Language="VB.NET" Value="Public Property IetfLanguageTag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IetfLanguageTag { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IetfLanguageTag : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.IetfLanguageTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>RFC 4646 표준, "Tags for the Identification of Languages"에 맞는 형식의 문화권 이름을 가져오거나 설정합니다.</summary>
        <value>RFC 4646에 맞는 형식의 문화권 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.IetfLanguageTag%2A> 속성에서 반환 된 문화권 이름과 다를 수 있는 RFC 4646에 맞는 형식의 문화권 이름을 가져오거나 설정 합니다.는 <xref:System.Globalization.CultureInfo.Name%2A> 속성입니다. 예를 들어,.NET framework 버전 1.0에서 중국어 (번체)에 대 한 중립 문화권 이름에 "ZH-CHT" 했습니다. 반면, RFC 4646 "ZH-HANT" 해당 문화권 이름을 정의합니다. (.NET Framework 버전 4에서, "ZH-CHT"에 대 한 표시 이름은 "중국어 (번체) 레거시")  
  
 RFC 4646 문화권 이름인 경우 여러 구성 요소로 이루어져 있습니다. 필수 언어 식별자와 선택적 스크립트 식별자, 선택적 국가/지역 식별자의 일반적인 문화권 이름 구성 됩니다. 예를 들어, 세르비아어, 키릴 자모 스크립트 및 세르비아 영역의 올바른 RFC 4646 문화권 이름을 "sr Cyrl RS" 됩니다.  
  
 Note 두 개 이상의 culture가 동일한 IETF 언어 태그를 가질 수 있습니다.  
  
 자세한 내용은 RFC 4646, "태그에 대 한 the 식별의 언어"를 참조 하세요 [요청에 대 한 주석](https://go.microsoft.com/fwlink/?linkid=45286)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">설정 작업에서 값이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">set 작업에서 값의 길이가 1 ~ 84자 범위 밖에 있는 경우</exception>
        <exception cref="T:System.ArgumentException">set 작업에서 값에 지정된 이름의 구성 요소가 비어 있거나 8자보다 긴 경우, 영숫자나 하이픈(-)이 아닌 경우 또는 이름의 앞이나 뒤에 하이픈이 있는 경우</exception>
        <altmember cref="M:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsMetric">
      <MemberSignature Language="C#" Value="public bool IsMetric { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMetric" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.IsMetric" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMetric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMetric { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMetric : bool with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.IsMetric" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>해당 국가/지역의 측정 단위가 미터법인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>해당 국가/지역의 측정 단위가 미터법이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">이 작업이 중립 문화권에 대해 올바르지 않은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ISOCurrencySymbol">
      <MemberSignature Language="C#" Value="public string ISOCurrencySymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ISOCurrencySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ISOCurrencySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property ISOCurrencySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ISOCurrencySymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ISOCurrencySymbol : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ISOCurrencySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>해당 국가/지역과 관련된 세 문자로 된 ISO 4217 통화 기호를 가져오거나 설정합니다.</summary>
        <value>해당 국가/지역과 관련된 세 문자로 된 ISO 4217 통화 기호입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.ISOCurrencySymbol%2A> 속성에 해당 하는 <xref:System.Globalization.RegionInfo.ISOCurrencySymbol%2A> 속성입니다.  
  
 3 자리 ISO 4217 통화 기호 목록을에서 제공 되는 <xref:System.Globalization.RegionInfo> 클래스 항목입니다. 예를 들어 미국 달러의 ISO 4217 통화 기호는 "USD"입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">중립 문화권인 경우</exception>
        <exception cref="T:System.ArgumentNullException">설정 작업에서 값이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">set 작업에서 값의 길이가 0 ~ 8자 범위 밖에 있는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="IsRightToLeft">
      <MemberSignature Language="C#" Value="public bool IsRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.IsRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property IsRightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRightToLeft { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsRightToLeft : bool with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.IsRightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 개체와 연관된 쓰기 시스템의 기본 텍스트 줄 방향을 가져오거나 설정합니다.</summary>
        <value>현재 쓰기 시스템의 기본 텍스트 줄 방향이 오른쪽에서 왼쪽이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 응용 프로그램을 사용 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.IsRightToLeft%2A> 그래픽 사용자 인터페이스에서 막대 컨트롤 단추, 스크롤 등의 상대 위치를 확인 하는 속성입니다.  
  
 현재에서 생성 하는 사용자 지정 문화권에서 텍스트의 기본 방향이 액세스할 수 <xref:System.Globalization.CultureAndRegionInfoBuilder> 개체를 사용 해야 합니다 <xref:System.Globalization.TextInfo.IsRightToLeft%2A> 반환 하는 개체의 속성은 <xref:System.Globalization.CultureInfo.TextInfo%2A> 사용자 지정 문화권의 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardLayoutId">
      <MemberSignature Language="C#" Value="public int KeyboardLayoutId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyboardLayoutId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.KeyboardLayoutId" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyboardLayoutId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyboardLayoutId { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardLayoutId : int with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.KeyboardLayoutId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>활성 입력 로캘 식별자를 가져오거나 설정합니다.</summary>
        <value>입력 로캘 식별자를 지정하는 부호 있는 32비트 숫자입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.KeyboardLayoutId%2A> 속성에 해당 하는 <xref:System.Globalization.CultureInfo.KeyboardLayoutId%2A> 속성입니다.  
  
 입력된 로캘 식별자는 키보드 레이아웃을 이전의 합니다. 음성-텍스트 변환기는 (입력기), 다른 형태의 입력에 대 한 식별자를 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">set 작업에서 값이 0인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.LCID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LCID : int" Usage="System.Globalization.CultureAndRegionInfoBuilder.LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 개체에 대한 문화권 식별자를 가져옵니다.</summary>
        <value>현재 <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 개체에 대한 문화권 식별자입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.LCID%2A?displayProperty=nameWithType> 속성에 해당 하는 <xref:System.Globalization.CultureInfo.LCID%2A?displayProperty=nameWithType> 속성입니다.  
  
 대체 문화권에 대 한 문화권 식별자는 해당 국가별 언어 지원 (NLS) 로캘 식별자에 매핑됩니다. 사용자 정의 사용자 지정 문화권에서이 속성의 값은 항상 16 진수 0x1000입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadDataFromCultureInfo">
      <MemberSignature Language="C#" Value="public void LoadDataFromCultureInfo (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadDataFromCultureInfo(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromCultureInfo(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadDataFromCultureInfo (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadDataFromCultureInfo(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.LoadDataFromCultureInfo : System.Globalization.CultureInfo -&gt; unit" Usage="cultureAndRegionInfoBuilder.LoadDataFromCultureInfo culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">속성을 사용할 개체입니다.</param>
        <summary>현재 <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 개체의 속성을 지정된 <see cref="T:System.Globalization.CultureInfo" /> 개체의 해당 속성으로 설정합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="culture" />가 <see langword="null" />입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadDataFromRegionInfo">
      <MemberSignature Language="C#" Value="public void LoadDataFromRegionInfo (System.Globalization.RegionInfo region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadDataFromRegionInfo(class System.Globalization.RegionInfo region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.LoadDataFromRegionInfo(System.Globalization.RegionInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadDataFromRegionInfo (region As RegionInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadDataFromRegionInfo(System::Globalization::RegionInfo ^ region);" />
      <MemberSignature Language="F#" Value="member this.LoadDataFromRegionInfo : System.Globalization.RegionInfo -&gt; unit" Usage="cultureAndRegionInfoBuilder.LoadDataFromRegionInfo region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Globalization.RegionInfo" />
      </Parameters>
      <Docs>
        <param name="region">속성을 사용할 개체입니다.</param>
        <summary>현재 <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 개체의 속성을 지정된 <see cref="T:System.Globalization.RegionInfo" /> 개체의 해당 속성으로 설정합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="region" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentException">현재 <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 개체가 중립 문화권을 지정하기 때문에 국가/지역 정보를 설정할 수 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public System.Globalization.NumberFormatInfo NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.NumberFormatInfo NumberFormat" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormat As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::NumberFormatInfo ^ NumberFormat { System::Globalization::NumberFormatInfo ^ get(); void set(System::Globalization::NumberFormatInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NumberFormat : System.Globalization.NumberFormatInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.NumberFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>숫자, 통화 및 백분율 표시를 위한 문화권 형식을 정의하는 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체를 가져오거나 설정합니다.</summary>
        <value>숫자, 통화 및 백분율 표시를 위한 문화권 형식을 정의하는 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.NumberFormat%2A> 속성에 해당 하는 <xref:System.Globalization.CultureInfo.NumberFormat%2A> 속성입니다.  
  
 응용 프로그램 특정 문화권에 대해서만이 속성을 호출 해야 합니다.  
  
 합니다 <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A>를 <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A>, 및 <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A> 속성의 <xref:System.Globalization.CultureAndRegionInfoBuilder.NumberFormat%2A> 무시 됩니다. 문화권의 저장 된 폼에서 이러한 속성에 대 한 명시적 값을 저장 하지 않습니다. 대신, 문화권 로드 되 면 항상 기본값으로 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A>, 및 <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A>, 각각.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">집합 작업의 값이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.NotSupportedException">이 작업이 중립 문화권에 대해 올바르지 않은 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">이 문화권의 숫자, 통화 또는 백분율 속성에 대한 사양이 숫자를 너무 많이 포함하거나 범위 밖에 있는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Parent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Property Parent As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Parent { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 사용자 지정 문화권의 부모 문화권을 나타내는 <see cref="T:System.Globalization.CultureInfo" /> 개체를 가져오거나 설정합니다.</summary>
        <value>현재 사용자 지정 문화권의 부모 문화권을 나타내는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 문화권 계층 경우 미리 정의 된 문화권에 대 한 특정 문화권의 부모는 중립 문화권 이며 중립 문화권의 부모는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A>합니다. 부모 문화권은 해당 자식 항목 간에 공통 되는 정보의 하위 집합만 포함 합니다.  
  
 일반적으로 사용자 지정 culture가이 계층을 것이 좋습니다. 그러나 기본적으로 <xref:System.Globalization.CultureAndRegionInfoBuilder.Parent%2A> 사용자 지정 문화권의는 <xref:System.Globalization.CultureAndRegionInfoBuilder.Parent%2A> 기반이 되는 문화권의 합니다. 응용 프로그램이 사용 하 여 문화권을 만드는 경우 <xref:System.Globalization.CultureAndRegionInfoBuilder.CultureName%2A> 이므로 해당 부모는 "en", "EN-US"를 기반으로 "en-으로 하"는 <xref:System.Globalization.CultureAndRegionInfoBuilder.Parent%2A> "EN-US"입니다. 응용 프로그램으로 "EN-US"를 사용 하는 경우는 <xref:System.Globalization.CultureAndRegionInfoBuilder.Parent%2A> 새 사용자 지정 문화권의 해당이 값을 설정 해야이 명시적으로 합니다.  
  
 특정 문화권의 리소스를 시스템에서 사용할 수 없는 경우 중립 문화권에 대 한 리소스 사용 됩니다. 중립 문화권에 대 한 리소스를 사용할 수 없는 경우에 주 어셈블리에 포함 된 리소스 사용 됩니다. 리소스 대체 프로세스에 대 한 자세한 내용은 참조 하세요. [리소스 패키징 및 배포](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md)합니다.  
  
 Windows API에서 문화권의 목록에서.NET Framework 문화권의 목록에서 약간 다릅니다. Windows와의 상호 운용성이 필요한 경우 예를 들어 플랫폼을 통해 호출 메커니즘을 응용 프로그램이.NET Framework에 정의 된 특정 문화권을 사용 해야 합니다. 이렇게 하면 동일한 식별 되는 해당 Windows 로캘 사용 하 여 일관성 <xref:System.Globalization.CultureInfo.LCID%2A>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">set 작업에서, 문화권 값을 찾을 수 없는 경우. 예를 들어, 할당된 값이 등록되지 않은 사용자 지정 문화권인 경우</exception>
        <exception cref="T:System.ArgumentNullException">설정 작업에서 값이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException">현재 문화권의 상위 문화권으로 이동하는 set 작업에서, 상위 10개 수준의 문화권에서 고정 문화권을 찾을 수 없는 경우  
  
또는 
set 작업에서 순환 참조가 발견된 경우. 즉, 할당된 값이 현재 사용자 지정 문화권의 상위 문화권인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="RegionEnglishName">
      <MemberSignature Language="C#" Value="public string RegionEnglishName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RegionEnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Property RegionEnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RegionEnglishName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RegionEnglishName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>해당 국가/지역의 전체 이름을 영어로 가져오거나 설정합니다.</summary>
        <value>영어로 표시되는 해당 국가/지역의 전체 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName%2A> 속성에 해당 하는 <xref:System.Globalization.RegionInfo.EnglishName%2A> 속성입니다.  
  
 반환 값의 예를 들어 <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName%2A> United States "미국"에 대 한 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">이 작업이 중립 문화권에 대해 올바르지 않은 경우</exception>
        <exception cref="T:System.ArgumentNullException">집합 작업의 값이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">set 작업의 값 길이가 0자에서 79자 범위를 벗어난 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="RegionName">
      <MemberSignature Language="C#" Value="public string RegionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.RegionName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RegionName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RegionName : string" Usage="System.Globalization.CultureAndRegionInfoBuilder.RegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 개체에 대한 국가/지역의 이름을 가져옵니다.</summary>
        <value>현재 <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 개체에 대한 국가/지역의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환 값은에 지정 된 문화권의 이름을 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.%23ctor%2A> 생성자입니다. 지정된 된 문화권 이름을 경우를 제외 하 고, 기존 문화권으로 동일한 경우 반환 값에 지정 된 문화권 이름이 아니라 기존 문화권의 이름입니다.  
  
 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionName%2A> 속성에 해당 하는 <xref:System.Globalization.RegionInfo.Name%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">이 작업이 중립 문화권에 대해 올바르지 않은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="RegionNativeName">
      <MemberSignature Language="C#" Value="public string RegionNativeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RegionNativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.RegionNativeName" />
      <MemberSignature Language="VB.NET" Value="Public Property RegionNativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RegionNativeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RegionNativeName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.RegionNativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 사용자 지정 문화권에서 사용하는 국가/지역의 전체 이름을 가져오거나 설정합니다.</summary>
        <value>해당 국가/지역에서 사용하는 국가/지역 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionNativeName%2A> 속성에 해당 하는 <xref:System.Globalization.RegionInfo.NativeName%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">이 작업이 중립 문화권에 대해 올바르지 않은 경우</exception>
        <exception cref="T:System.ArgumentNullException">집합 작업의 값이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">set 작업의 값 길이가 1자에서 79자 사이의 범위를 벗어난 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public void Register ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Register() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.Register" />
      <MemberSignature Language="VB.NET" Value="Public Sub Register ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Register();" />
      <MemberSignature Language="F#" Value="member this.Register : unit -&gt; unit" Usage="cultureAndRegionInfoBuilder.Register " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 개체를 로컬 컴퓨터의 사용자 지정 문화권으로 유지하고 응용 프로그램에서 해당 문화권을 사용할 수 있도록 합니다. 관리 권한이 필요합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> 메서드는 사용자 지정 문화권 Win32에서 반환 된 디렉터리의 세계화 하위 디렉터리에 로컬 컴퓨터에 파일로 저장 [GetWindowsDirectory](https://go.microsoft.com/fwlink/?LinkId=191561) 함수입니다. 이 프로세스를 사용자 지정 문화권이 등록 이라고 합니다. 사용자 지정 문화권을 등록 한 후 새 사용자 지정 문화권의 문화권 이름을 지정 하 여 만들 수 있습니다는 <xref:System.Globalization.CultureInfo.%23ctor%2A> 생성자를 호출할 때 또는 <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> 메서드.  
  
 사용자 지정 문화권을 호출 하 여 제거할 수는 <xref:System.Globalization.CultureAndRegionInfoBuilder.Unregister%2A> 메서드.  
  
   
  
## Examples  
 다음 예제는 <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> 메서드.  
  
 [!code-csharp[sys.glob.carib.register#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib.register/CS/persist.cs#1)]
 [!code-vb[sys.glob.carib.register#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib.register/VB/persist.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">사용자 지정 문화권이 이미 등록되어 있는 경우  
  
또는 
현재 <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 개체에 문화권을 등록하기 전에 설정해야 하는 속성이 있는 경우. 중립 또는 특정 문화권에 모두 <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.TextInfo" /> 및 <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo" />가 설정되어 있어야 합니다. 특정 문화권에는 <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.NumberFormat" />, <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.GregorianDateTimeFormat" /> 및 <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.AvailableCalendars" />도 설정되어 있어야 합니다.  
  
또한 이 메서드는 다음 속성이 정의되어 있지 않을 경우 <see cref="T:System.InvalidOperationException" />을 throw합니다. 
 <see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CultureEnglishName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CultureNativeName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyEnglishName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.CurrencyNativeName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ISOCurrencySymbol" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.Parent" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.RegionEnglishName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.RegionNativeName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISOLanguageName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsLanguageName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsRegionName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISOLanguageName" /><see cref="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 개체의 속성 값이 최대 길이 또는 값을 초과하는 경우</exception>
        <exception cref="T:System.UnauthorizedAccessException">사용자에게 관리 권한이 없는 경우</exception>
        <altmember cref="M:System.Globalization.CultureAndRegionInfoBuilder.Unregister(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="cultureAndRegionInfoBuilder.Save filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">이 사용자 지정 문화권의 XML 표현을 저장할 파일 이름입니다.</param>
        <summary>현재 <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 개체의 XML 표현을 지정된 파일에 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> 메서드는 현재 씁니다 <xref:System.Globalization.CultureAndRegionInfoBuilder> 하 여 지정 된 파일 개체를 `filename` 매개 변수는 XML 형식으로 로캘 데이터 태그 언어 (LDML) 버전 1.1 호출 합니다. 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> 의 반대 작업을 수행 하는 메서드를 <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> 메서드.  
  
 LDML 파일의 형식에 대 한 정보를 참조 하세요.를 <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> 메서드. LDML 표준에 대 한 정보를 참조 하세요 [유니코드 기술 표준 #35, "로캘 데이터 태그 언어 (LDML)"](https://go.microsoft.com/fwlink/p/?LinkId=252840) 유니코드 컨소시엄 웹 사이트입니다.  
  
   
  
## Examples  
 다음 예제는 <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A> 고 <xref:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml%2A> 메서드.  
  
 [!code-csharp[sys.glob.carib.saveLdml#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib.saveLdml/cs/sl.cs#1)]
 [!code-vb[sys.glob.carib.saveLdml#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib.saveLdml/vb/sl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="filename" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="filename" />가 빈 문자열("")인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">현재 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체에 포함된 <see cref="T:System.Globalization.TextInfo" />, <see cref="T:System.Globalization.NumberFormatInfo" /> 또는 <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 개체의 속성 값이 잘못된 경우</exception>
        <altmember cref="M:System.Globalization.CultureAndRegionInfoBuilder.CreateFromLdml(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TextInfo">
      <MemberSignature Language="C#" Value="public System.Globalization.TextInfo TextInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.TextInfo TextInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.TextInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property TextInfo As TextInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::TextInfo ^ TextInfo { System::Globalization::TextInfo ^ get(); void set(System::Globalization::TextInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TextInfo : System.Globalization.TextInfo with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.TextInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 사용자 지정 문화권과 연관된 쓰기 시스템을 정의하는 <see cref="T:System.Globalization.TextInfo" /> 개체를 가져오거나 설정합니다.</summary>
        <value>이 사용자 지정 문화권과 연관된 쓰기 시스템을 정의하는 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.TextInfo%2A?displayProperty=nameWithType> 속성은 문자열에 대 한 문화권별 대/소문자 구분 정보를 제공 합니다. 에 해당 하는 것은 <xref:System.Globalization.CultureInfo.TextInfo%2A?displayProperty=nameWithType> 속성입니다.  
  
 합니다 <xref:System.Globalization.TextInfo> 및 <xref:System.Globalization.CompareInfo> 에 할당 된 개체를 <xref:System.Globalization.CultureAndRegionInfoBuilder.TextInfo%2A> 및 <xref:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo%2A> 속성 둘 다 문화권 구분 및 대/소문자 구분 문자열 비교를 지원 합니다. 합니다 <xref:System.Globalization.CompareInfo> 개체에는 포함 하는 메서드를 <xref:System.Globalization.CompareOptions> 문화권 구분 및 대/소문자 구분 비교를 지 원하는 매개 변수가 있습니다. 이러한 두 속성을 할당 해야 <xref:System.Globalization.TextInfo> 고 <xref:System.Globalization.CompareInfo> 동일한 로캘을 나타내는 개체입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">이 작업이 대체 문화권에 대해 지원되지 않는 경우</exception>
        <exception cref="T:System.ArgumentNullException">집합 작업의 값이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">목록 구분 기호의 문자 수가 0 ~ 3자 범위를 벗어납니다.</exception>
        <altmember cref="P:System.Globalization.CultureAndRegionInfoBuilder.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterISOLanguageName">
      <MemberSignature Language="C#" Value="public string ThreeLetterISOLanguageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterISOLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISOLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeLetterISOLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreeLetterISOLanguageName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterISOLanguageName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISOLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 사용자 지정 문화권의 언어를 나타내는 세 문자로 된 ISO 639-2 코드를 가져오거나 설정합니다.</summary>
        <value>현재 <see cref="T:System.Globalization.CultureInfo" /> 개체의 언어를 나타내는 세 문자로 된 ISO 639-2 코드입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISOLanguageName%2A> 속성에 해당 하는 <xref:System.Globalization.CultureInfo.ThreeLetterISOLanguageName%2A> 속성입니다.  
  
 예를 들어, 영어에 대 한 세 글자 약어 "eng"입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">집합 작업의 값이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">set 작업의 값 길이가 1자에서 8자 사이의 범위를 벗어난 경우</exception>
        <exception cref="T:System.ArgumentException">set 작업의 값에 "a" ~ "z", "A" ~ "Z" 또는 "0" ~ "9"의 범위를 벗어난 문자가 포함되어 있는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterISORegionName">
      <MemberSignature Language="C#" Value="public string ThreeLetterISORegionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterISORegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeLetterISORegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreeLetterISORegionName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterISORegionName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>해당 국가/지역에 대해 ISO 3166에 정의되어 있는 세 문자로 된 코드를 가져오거나 설정합니다.</summary>
        <value>해당 국가/지역에 대해 ISO 3166에 정의되어 있는 세 문자로 된 코드입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName%2A> 속성에 해당 하는 <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A> 속성입니다.  
  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName%2A> 속성 국가/지역의 ISO 3166에 정의 되어 있는 세 문자로 된 코드 중 하나를 포함 합니다. 예를 들어, 미국에 대 한 세 문자로 된 코드를 "USA"입니다.  
  
 대/소문자는 중요 하지 않습니다. 그러나 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.RegionName%2A>, <xref:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName%2A>, 및 <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterISORegionName%2A> 대문자로 적절 한 코드를 포함 하는 속성입니다.  
  
 미리 정의 된 국가/지역 이름에 나열 됩니다는 <xref:System.Globalization.RegionInfo> 클래스 항목입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">집합 작업의 값이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">set 작업의 값 길이가 1자에서 8자 사이의 범위를 벗어난 경우</exception>
        <exception cref="T:System.ArgumentException">set 작업의 값에 "a" ~ "z", "A" ~ "Z" 또는 "0" ~ "9"의 범위를 벗어난 문자가 포함되어 있는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterWindowsLanguageName">
      <MemberSignature Language="C#" Value="public string ThreeLetterWindowsLanguageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterWindowsLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeLetterWindowsLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreeLetterWindowsLanguageName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterWindowsLanguageName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Windows API에 정의된 해당 언어를 나타내는 세 문자로 된 코드를 가져오거나 설정합니다.</summary>
        <value>Windows API에 정의된 해당 언어를 나타내는 세 문자로 된 코드입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsLanguageName%2A> 속성에 해당 하는 <xref:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName%2A> 속성입니다.  
  
 이 속성에는 Windows API 메서드를 동일한 값을 반환 합니다 `GetLocaleInfo` LOCALE_SABBREVLANGNAME 값입니다. 예를 들어 영어 (미국) Windows API에 정의 된 세 문자로 된 코드를은 "enu"입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">집합 작업의 값이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">set 작업의 값 길이가 1자에서 8자 사이의 범위를 벗어난 경우</exception>
        <exception cref="T:System.ArgumentException">set 작업의 값에 "a" ~ "z", "A" ~ "Z" 또는 "0" ~ "9"의 범위를 벗어난 문자가 포함되어 있는 경우</exception>
        <exception cref="T:System.NotSupportedException">set 작업에서, 현재 사용자 지정 문화권이 대체 문화권인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterWindowsRegionName">
      <MemberSignature Language="C#" Value="public string ThreeLetterWindowsRegionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterWindowsRegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsRegionName" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeLetterWindowsRegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreeLetterWindowsRegionName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterWindowsRegionName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsRegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 사용자 지정 문화권이 나타내는 국가/지역에 대해 Windows에서 할당한 세 문자로 된 코드를 가져오거나 설정합니다.</summary>
        <value>이 <see cref="T:System.Globalization.CultureAndRegionInfoBuilder" /> 개체가 나타내는 국가/지역에 대해 Windows에서 할당한 세 문자로 된 코드입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.ThreeLetterWindowsRegionName%2A> 속성에 해당 하는 <xref:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName%2A> 속성입니다.  
  
 예를 들어, 미국에 대 한 세 문자로 된 코드를 "USA"입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">집합 작업의 값이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">set 작업의 값 길이가 1자에서 8자 사이의 범위를 벗어난 경우</exception>
        <exception cref="T:System.ArgumentException">set 작업의 값에 "a" ~ "z", "A" ~ "Z" 또는 "0" ~ "9"의 범위를 벗어난 문자가 포함되어 있는 경우</exception>
        <exception cref="T:System.NotSupportedException">set 작업에서, 현재 사용자 지정 문화권이 대체 문화권 또는 중립 문화권인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="TwoLetterISOLanguageName">
      <MemberSignature Language="C#" Value="public string TwoLetterISOLanguageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TwoLetterISOLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISOLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Property TwoLetterISOLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TwoLetterISOLanguageName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TwoLetterISOLanguageName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISOLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Globalization.CultureInfo" /> 개체의 언어를 나타내는 두 문자로 된 ISO 639-1 코드를 가져오거나 설정합니다.</summary>
        <value>현재 <see cref="T:System.Globalization.CultureInfo" /> 개체의 언어를 나타내는 두 문자로 된 ISO 639-1 코드입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISOLanguageName%2A> 속성에 해당 하는 <xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> 속성입니다.  
  
 예를 들어 영어에 대 한 2 자 약어 "en"입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">집합 작업의 값이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">set 작업의 값 길이가 1자에서 8자 사이의 범위를 벗어난 경우</exception>
        <exception cref="T:System.ArgumentException">set 작업의 값에 "a" ~ "z", "A" ~ "Z" 또는 "0" ~ "9"의 범위를 벗어난 문자가 포함되어 있는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="TwoLetterISORegionName">
      <MemberSignature Language="C#" Value="public string TwoLetterISORegionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TwoLetterISORegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName" />
      <MemberSignature Language="VB.NET" Value="Public Property TwoLetterISORegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TwoLetterISORegionName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TwoLetterISORegionName : string with get, set" Usage="System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>해당 국가/지역에 대해 ISO 3166에 정의되어 있는 두 문자로 된 코드를 가져오거나 설정합니다.</summary>
        <value>해당 국가/지역에 대해 ISO 3166에 정의되어 있는 두 문자로 된 코드입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName%2A> 속성에 해당 하는 <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A> 속성입니다.  
  
 <xref:System.Globalization.CultureAndRegionInfoBuilder.TwoLetterISORegionName%2A> 속성 값이 국가/지역의 ISO 3166에 정의 되어 있는 두 문자로 된 코드 중 하나입니다. 예를 들어 미국에 대 한 두 문자로 된 코드는 "US" 합니다. 미리 정의 된 <xref:System.Globalization.RegionInfo> 에 이름이 나열 됩니다는 <xref:System.Globalization.RegionInfo> 클래스 항목입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">집합 작업의 값이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">set 작업의 값 길이가 1자에서 8자 사이의 범위를 벗어난 경우</exception>
        <exception cref="T:System.ArgumentException">set 작업의 값에 "a" ~ "z", "A" ~ "Z" 또는 "0" ~ "9"의 범위를 벗어난 문자가 포함되어 있는 경우</exception>
        <exception cref="T:System.NotSupportedException">set 작업에서, 현재 사용자 지정 문화권이 중립 문화권인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (string cultureName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(string cultureName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureAndRegionInfoBuilder.Unregister(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (cultureName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::String ^ cultureName);" />
      <MemberSignature Language="F#" Value="static member Unregister : string -&gt; unit" Usage="System.Globalization.CultureAndRegionInfoBuilder.Unregister cultureName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>sysglobl</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cultureName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cultureName">삭제할 사용자 지정 문화권의 이름입니다.</param>
        <summary>사용자 지정 문화권을 로컬 컴퓨터에서 삭제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.Unregister%2A> 메서드는 역순으로는 <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> 메서드. 합니다 <xref:System.Globalization.CultureAndRegionInfoBuilder.Register%2A> 메서드는 사용자 지정 문화권 Windows API에서 반환 된 디렉터리의 세계화 하위 디렉터리에서 로컬 컴퓨터에 파일로 저장 [GetWindowsDirectory](https://go.microsoft.com/fwlink/?LinkId=191561) 함수입니다. <xref:System.Globalization.CultureAndRegionInfoBuilder.Unregister%2A> 메서드 컴퓨터에서 사용자 지정 문화권 지속형된 파일을 삭제 합니다. 이 파일은 삭제 후 컴퓨터 메모리에 사용자 지정 문화권의 기존 인스턴스가 계속 정상적으로 작동 하지만 사용자 지정 문화권의 새 인스턴스를 만들 수 없습니다.  
  
   
  
## Examples  
 다음 예제는 <xref:System.Globalization.CultureAndRegionInfoBuilder.Unregister%2A> 메서드.  
  
 [!code-csharp[sys.glob.carib.unregister#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.carib.unregister/CS/unregister.cs#1)]
 [!code-vb[sys.glob.carib.unregister#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.carib.unregister/VB/unregister.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="cultureName" />이 종속 문화권의 부모 문화권이거나 콘솔 대체(fallback) 사용자 인터페이스 문화권인 경우</exception>
        <exception cref="T:System.UnauthorizedAccessException">사용자에게 관리 권한이 없는 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="cultureName" />이 찾을 수 없는 문화권을 지정할 경우</exception>
        <altmember cref="M:System.Globalization.CultureAndRegionInfoBuilder.Register" />
      </Docs>
    </Member>
  </Members>
</Type>