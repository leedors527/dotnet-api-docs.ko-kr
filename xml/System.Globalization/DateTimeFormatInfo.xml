<Type Name="DateTimeFormatInfo" FullName="System.Globalization.DateTimeFormatInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f1945da7c795b705d47c8e37526d7aa5868d77e3" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="58875244" /></Metadata><TypeSignature Language="C#" Value="public sealed class DateTimeFormatInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DateTimeFormatInfo extends System.Object implements class System.ICloneable, class System.IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.DateTimeFormatInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DateTimeFormatInfo&#xA;Implements ICloneable, IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateTimeFormatInfo sealed : ICloneable, IFormatProvider" />
  <TypeSignature Language="F#" Value="type DateTimeFormatInfo = class&#xA;    interface ICloneable&#xA;    interface IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormatProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>날짜 및 시간 값 형식에 대한 문화권별 정보를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 속성을 <xref:System.Globalization.DateTimeFormatInfo> 서식 지정 또는 구문 분석 같은 날짜 및 시간 값에 대 한 문화권별 형식 정보를 포함 하는 클래스:  
  
-   날짜 값의 서식을 지정 하는 데 패턴입니다.  
  
-   시간 값의 서식을 지정 하는 데 패턴입니다.  
  
-   주의 요일 이름입니다.  
  
-   해당 연도의 달의 이름입니다.  
  
-   A.M. 오후 시간 값에 사용 되는 지정자입니다.  
  
-   날짜 표시 되는 달력입니다.  
  
 섹션 내용  
  
-   [DateTimeFormatInfo 개체 인스턴스화](#instantiating)  
  
    -   [고정 문화권](#instantiating_Invariant)  
  
    -   [특정 문화권에 대 한](#instantiating_Specific)  
  
    -   [중립 문화권에 대 한](#instantiating_neutral)  
  
    -   [현재 문화권에 대 한](#instantiating_Current)  
  
-   [DateTimeFormatInfo 및 dynamic data](#dynamic)  
  
-   [날짜 및 시간 서식 지정](#Formatting_dates_times)  
  
-   [형식 문자열 및 DateTimeFormatInfo 속성](#format-strings-and-datetimeformatinfo-properties)  
  
-   [DateTimeFormatInfo 속성 수정](#Modifying)  
  
<a name="instantiating"></a>   
## <a name="instantiating-a-datetimeformatinfo-object"></a>DateTimeFormatInfo 개체 인스턴스화  
 <xref:System.Globalization.DateTimeFormatInfo> 개체 고정 문화권, 특정 문화권, 중립 문화권에 또는 현재 문화권의 서식 규칙을 나타낼 수 있습니다. 이 섹션에서는 각 유형의 인스턴스화하는 방법을 설명 <xref:System.Globalization.DateTimeFormatInfo> 개체입니다.  
  
<a name="instantiating_Invariant"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-the-invariant-culture"></a>고정 문화권에 대 한 DateTimeFormatInfo 개체 인스턴스화  
 고정 문화권을 문화권을 구분 하는 문화권을 나타냅니다. 특정 영어권 국가/지역에는 없지만 영어 언어에 기반 합니다. 특정 문화권의 데이터는 동적일 수 있습니다 하 고 새 문화권 규칙 또는 사용자 기본 설정에 맞게 변경 될 수 있지만 고정 문화권의 데이터는 변경 되지 않습니다. 인스턴스화할 수 있습니다는 <xref:System.Globalization.DateTimeFormatInfo> 다음과 같은 방법으로 고정 문화권의 서식 규칙을 나타내는 개체입니다.  
  
-   값을 검색 하 여 <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> 속성입니다. 반환 된 <xref:System.Globalization.DateTimeFormatInfo> 개체가 읽기 전용입니다.  
  
-   매개 변수가 없는 호출 하 여 <xref:System.Globalization.DateTimeFormatInfo.%23ctor%2A> 생성자입니다. 반환 된 <xref:System.Globalization.DateTimeFormatInfo> 개체 읽기/쓰기입니다.  
  
-   값을 검색 하는 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> 속성을를 <xref:System.Globalization.CultureInfo> 에서 반환 되는 개체는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> 속성입니다. 반환 된 <xref:System.Globalization.DateTimeFormatInfo> 개체가 읽기 전용입니다.  
  
 다음 예제에서는 이러한 각 메서드를 사용 하 여 인스턴스화하는 <xref:System.Globalization.DateTimeFormatInfo> 고정 문화권을 나타내는 개체입니다. 그런 다음 개체가 읽기 전용인 지 여부를 나타냅니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#1)]  
  
<a name="instantiating_Specific"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-a-specific-culture"></a>특정 문화권의 DateTimeFormatInfo 개체 인스턴스화  
 특정 문화권에는 특정 국가/지역에서 사용 되는 언어를 나타냅니다. 예를 들어, EN-US, 미국에서 사용 되는 영어를 나타내는 특정 문화권 이며 EN-CA 음성 캐나다의 영어 언어를 나타내는 특정 문화권입니다. 인스턴스화할 수 있습니다는 <xref:System.Globalization.DateTimeFormatInfo> 다음과 같은 방법으로 특정 문화권의 서식 규칙을 나타내는 개체입니다.  
  
-   호출 하 여 합니다 <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29?displayProperty=nameWithType> 메서드와 반환된 된 값을 검색할 <xref:System.Globalization.CultureInfo> 개체의 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 속성입니다. 반환 된 <xref:System.Globalization.DateTimeFormatInfo> 개체가 읽기 전용입니다.  
  
-   정적을 전달 하 여 <xref:System.Globalization.DateTimeFormatInfo.GetInstance%2A> 메서드를 <xref:System.Globalization.CultureInfo> 문화권을 나타내는 개체입니다 <xref:System.Globalization.DateTimeFormatInfo> 검색할 개체입니다. 반환 된 <xref:System.Globalization.DateTimeFormatInfo> 개체 읽기/쓰기입니다.  
  
-   정적 호출 하 여 <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> 메서드와 반환된 된 값을 검색할 <xref:System.Globalization.CultureInfo> 개체의 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 속성입니다. 반환 된 <xref:System.Globalization.DateTimeFormatInfo> 개체 읽기/쓰기입니다.  
  
-   호출 하 여 합니다 <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType> 클래스 생성자 및 반환된 된 값을 검색할 <xref:System.Globalization.CultureInfo> 개체의 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 속성입니다. 반환 된 <xref:System.Globalization.DateTimeFormatInfo> 개체 읽기/쓰기입니다.  
  
 다음 예제에서는 각각을 인스턴스화하는 이러한 방법의 한 <xref:System.Globalization.DateTimeFormatInfo> 개체 및 결과 개체가 읽기 전용인 지 여부를 나타냅니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#3)]  
  
<a name="instantiating_neutral"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-a-neutral-culture"></a>중립 문화권에 대 한 DateTimeFormatInfo 개체 인스턴스화  
 문화권 또는 국가/지역;와 독립적인 언어 중립 문화권을 나타냅니다. 일반적으로 하나 이상의 특정 문화권의 부모가 됩니다. 예를 들어, Fr 프랑스어 및 FR-FR 문화권의 부모에 대 한 중립 문화권입니다. 인스턴스화할 수 있습니다는 <xref:System.Globalization.DateTimeFormatInfo> 사용자가 만든 동일한 방식으로 중립 문화권의 서식 규칙을 나타내는 개체를 <xref:System.Globalization.DateTimeFormatInfo> 특정 문화권의 서식 규칙을 나타내는 개체입니다. 또한가 중립 문화권을 검색할 수 있습니다 <xref:System.Globalization.DateTimeFormatInfo> 개체는 특정 문화권의에서 중립 문화권을 검색 하 여 <xref:System.Globalization.CultureInfo.Parent%2A?displayProperty=nameWithType> 속성 및 검색 합니다 <xref:System.Globalization.DateTimeFormatInfo> 반환한 개체가 해당 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 속성. 부모 문화권 나타내는 고정 문화권을 반환된 하지 않는 한 <xref:System.Globalization.DateTimeFormatInfo> 개체 읽기/쓰기입니다. 다음 예제에서는 이러한 방법으로 인스턴스화하는 <xref:System.Globalization.DateTimeFormatInfo> 중립 문화권을 나타내는 개체입니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#2)]  
  
> [!NOTE]
>  통해.NET Framework 버전 1.0 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]검색 하는 동안는 <xref:System.Globalization.DateTimeFormatInfo> 중립 문화권의 서식 규칙을 반영 하는 개체를 throw를 <xref:System.NotSupportedException> 예외입니다.  
  
 그러나 중립 문화권에 특정 국가/지역 독립적 이기 때문에 culture 별 서식 지정 정보를 없습니다. 채우기 대신 합니다 <xref:System.Globalization.DateTimeFormatInfo> 반환 하는.NET Framework 제네릭 값 개체를 <xref:System.Globalization.DateTimeFormatInfo> 개체는 특정 형식 지정 규칙 문화권을 반영 하는 중립 문화권의 자식입니다. 예를 들어 합니다 <xref:System.Globalization.DateTimeFormatInfo> EN-US 문화권의 서식 규칙을 반영 하는 en 중립 문화권에 대 한 개체 및 <xref:System.Globalization.DateTimeFormatInfo> FR-FR 문화권의 서식 규칙을 반영 하는 fr 문화권 개체입니다.  
  
 중립 문화권을 나타내는 특정 문화권의 서식 규칙을 확인 하려면 다음과 같은 코드를 사용할 수 있습니다. 이 예제에서는 리플렉션을 사용 하 여 비교를 <xref:System.Globalization.DateTimeFormatInfo> 특정 자식 문화권의 속성을 사용 하 여 중립 문화권의 속성입니다. 두 달력 달력 형식이 같은 경우에 동등한 것으로 간주 하 고, 일반 달력에 대 한 달력 이면 해당 <xref:System.Globalization.GregorianCalendar.CalendarType%2A?displayProperty=nameWithType> 동일한 값을 갖는 속성입니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate6c.cs#6)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate6c.vb#6)]  
  
<a name="instantiating_Current"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-the-current-culture"></a>현재 문화권의 DateTimeFormatInfo 개체 인스턴스화  
 인스턴스화할 수 있습니다는 <xref:System.Globalization.DateTimeFormatInfo> 다음과 같은 방법으로 현재 문화권의 서식 규칙을 나타내는 개체입니다.  
  
-   값을 검색 하 여 <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> 속성입니다. 반환 된 <xref:System.Globalization.DateTimeFormatInfo> 개체가 읽기 전용입니다.  
  
-   값을 검색 하는 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> 속성을를 <xref:System.Globalization.CultureInfo> 에서 반환 되는 개체는 <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> 속성입니다. 반환 된 <xref:System.Globalization.DateTimeFormatInfo> 개체가 읽기 전용입니다.  
  
-   호출 하 여 합니다 <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> 메서드는 <xref:System.Globalization.CultureInfo> 현재 문화권을 나타내는 개체입니다. 반환 된 <xref:System.Globalization.DateTimeFormatInfo> 개체가 읽기 전용입니다.  
  
 다음 예제에서는 이러한 각 메서드를 사용 하 여 인스턴스화하는 <xref:System.Globalization.DateTimeFormatInfo> 현재 문화권의 서식 규칙을 나타내는 개체입니다. 그런 다음 개체가 읽기 전용인 지 여부를 나타냅니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create2.cs#4)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create2.vb#4)]  
  
 쓰기 가능한 만들면 <xref:System.Globalization.DateTimeFormatInfo> 다음이 방법 중 하나에 현재 스레드 문화권의 규칙을 나타내는 개체입니다.  
  
-   검색 하 여를 <xref:System.Globalization.DateTimeFormatInfo> 개체의 세 가지 이전 방법 및 호출 합니다 <xref:System.Globalization.DateTimeFormatInfo.Clone%2A> 메서드는 반환 된 <xref:System.Globalization.DateTimeFormatInfo> 개체입니다. 이 원래 복사본을 만듭니다 <xref:System.Globalization.DateTimeFormatInfo> 개체는 제외 하 고 해당 <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> 속성은 `false`합니다.  
  
-   호출 하 여는 <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> 메서드를를 <xref:System.Globalization.CultureInfo> 현재 문화권을 나타내는 개체를 사용 하 여 해당 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 검색할 속성은 <xref:System.Globalization.DateTimeFormatInfo> 개체입니다.  
  
 다음 예제에서는 각 방법 마다 인스턴스화하는 읽기/쓰기 <xref:System.Globalization.DateTimeFormatInfo> 개체의 값을 표시 및 해당 <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> 속성입니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate2.cs#7)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate2.vb#7)]  
  
 에서는 Windows에서 사용자를 재정의할 수 중 일부는 <xref:System.Globalization.DateTimeFormatInfo> 서식 지정 및 구문 분석을 통해 작업에 사용 된 속성 값을 **국가 및 언어** 제어판 응용 프로그램입니다. 예를 들어, 문화권이 영어 (미국) 인 사용자는 (형식 h:mm: ss tt)에서 기본 12 시간제 시계 대신 긴 시간 값 (mm: ss 형식)에 24 시간제를 사용 하 여 표시 하도록 선택할 수 있습니다. <xref:System.Globalization.DateTimeFormatInfo> 설명 하는 방법에서 검색 한 개체가 이전에 모두 이러한 사용자 재정의 반영 합니다. 이 필요 없는 경우 만들 수 있습니다는 <xref:System.Globalization.NumberFormatInfo> 재정의 (및 읽기 전용 대신 읽기/쓰기 이기도) 사용자는 반영 되지 않는 개체를 호출 하 여는 <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> 생성자 및 값을 제공 `false` 에 대 한는 `useUserOverride` 인수입니다. 다음 예제에이 시스템에 대 한 현재 문화권이 영어 (미국) 인 및 긴 시간 패턴 인 hh: mm:로 h:mm: ss tt 기본값에서 변경 되었습니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate3.cs#8)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate3.vb#8)]  
  
<a name="dynamic"></a>   
## <a name="datetimeformatinfo-and-dynamic-data"></a>DateTimeFormatInfo 및 dynamic data  
 제공 하는 날짜 및 시간 값의 서식을 지정 하는 것에 대 한 culture 별 데이터를 <xref:System.Globalization.DateTimeFormatInfo> 클래스는에서 제공 하는 문화권 데이터와 마찬가지로 동적는 <xref:System.Globalization.CultureInfo> 클래스입니다. 에 대 한 값의 안정성에 대 한 어떠한가 정도 만들면 안 <xref:System.Globalization.DateTimeFormatInfo> 연결 된 개체를 특정 <xref:System.Globalization.CultureInfo> 개체입니다. 고정 문화권 및 연결 된 제공한 데이터만 <xref:System.Globalization.DateTimeFormatInfo> 개체 안정적입니다. 다른 데이터는 응용 프로그램 세션 간에 또는 응용 프로그램을 실행 하는 동안에 변경할 수 있습니다. 변경의 네 가지 주요 원본 가지가 있습니다.  
  
-   시스템 업데이트 합니다. 시간이 지남에 따라 기본 달력 또는 일반적인 날짜 및 시간 형식과 같이 문화권 기본 설정을 변경 합니다. Windows 업데이트 변경 되어이 경우는 <xref:System.Globalization.DateTimeFormatInfo> 특정 문화권에 대 한 속성 값입니다.  
  
-   대체 문화권입니다. <xref:System.Globalization.CultureAndRegionInfoBuilder> 클래스는 기존 문화권의 데이터를 바꾸는 데 사용할 수 있습니다.  
  
-   속성 값이 변경 연계 합니다. 다양 한 문화권 관련 속성 인해는 런타임 시 변경할 수 있습니다 <xref:System.Globalization.DateTimeFormatInfo> 데이터를 변경 합니다. 예를 들어, 사용자 동작을 통해 또는 프로그래밍 방식으로 현재 문화권을 변경할 수 있습니다. 이 경우는 <xref:System.Globalization.DateTimeFormatInfo> 에서 반환 된 개체는 <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> 현재 문화권과 연결 된 개체 속성 변경 합니다. 마찬가지로, 문화권의 달력에 변경할 수는 변경 될 수 있습니다 여러 <xref:System.Globalization.DateTimeFormatInfo> 속성 값입니다.  
  
-   사용자 기본 설정입니다. 응용 프로그램 사용자는 제어판에서 국가 및 언어 옵션을 통해 현재 시스템 문화권과 연관 된 값의 일부를 재정의할 수도 있습니다. 예를 들어 사용자가 다른 형식으로 날짜를 표시할 수도 있습니다. 경우는 <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType> 속성이 `true`의 속성은 <xref:System.Globalization.DateTimeFormatInfo> 개체는 또한 사용자 설정에서 검색 됩니다. 사용자 설정을 사용 하 여 연결 된 문화권을 사용 하 여 호환 되지 않습니다는 <xref:System.Globalization.CultureInfo> 개체 (예를 들어 선택한 일정 하나가 아닌 경우에 나타난 달력을 <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> 속성), 메서드 및 속성의 값의 결과 정의 되지 않습니다.  
  
 일관 되지 않은 데이터의 모든 사용자를 재정의할 수 있는 속성의 가능성을 최소화 하는 <xref:System.Globalization.DateTimeFormatInfo> 개체는 개체를 만들 때 초기화 됩니다. 가능성이 있는 여전히 불일치, 개체 생성도 아니고 사용자 재정의 프로세스는 원자성 이므로 개체를 만드는 동안 관련 값을 변경할 수 있습니다. 그러나이 경우 매우 드문 있어야 합니다.  
  
 사용자 재정의에 반영 되 고 있는지 여부를 제어할 수 있습니다. <xref:System.Globalization.DateTimeFormatInfo> 시스템 문화권과 동일한 문화권을 나타내는 개체입니다. 다음 표에 나와 있는 방법을 <xref:System.Globalization.DateTimeFormatInfo> 개체를 검색할 수 있습니다 및 결과 개체 사용자 재정의 반영 하는지 여부를 나타냅니다.  
  
|CultureInfo 및 DateTimeFormatInfo 개체의 원본|사용자 재정의 반영합니다.|  
|---------------------------------------------------------|-----------------------------|  
|`CultureInfo.CurrentCulture.DateTimeFormat` 속성|예|  
|<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType> 속성|예|  
|<xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> 메서드|예|  
|<xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=nameWithType> 메서드|아니요|  
|<xref:System.Globalization.CultureInfo.%23ctor%28System.String%29?displayProperty=nameWithType> 생성자|예|  
|<xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> 생성자|값에 따라 `useUserOverride` 매개 변수|  
  
 사용 하는 경우 사용자 재정의가 없는 중요 한 이유가 없는 고려해 야 합니다 <xref:System.Globalization.DateTimeFormatInfo> 서식을 지정 하 고 사용자 입력을 구문 분석 하거나 데이터를 표시 하도록 클라이언트 응용 프로그램에서 개체입니다. 서버 응용 프로그램 또는 무인된 응용 프로그램에 대 한 없습니다 다음을 수행 해야합니다. 그러나 사용 중인 경우는 <xref:System.Globalization.DateTimeFormatInfo> 개체를 명시적으로 하나 또는 암시적으로 사용 해야 문자열 형식으로 날짜 및 시간 데이터를 유지 하려면를 <xref:System.Globalization.DateTimeFormatInfo> 고정 문화권의 서식 규칙을 반영 하는 개체를 지정 해야는 사용자 지정 날짜 및 시간 서식 문화권에 관계 없이 사용 하는 문자열입니다.  
  
<a name="Formatting_dates_times"></a>   
## <a name="formatting-dates-and-times"></a>날짜 및 시간 서식 지정  
 <xref:System.Globalization.DateTimeFormatInfo> 개체는 암시적 또는 명시적으로 모든 날짜 및 시간 서식 지정 작업입니다. 다음 메서드를 호출 하는 다음과 같습니다.  
  
-   모든 날짜 및 시간와 같은 서식 지정 메서드에 <xref:System.DateTime.ToString?displayProperty=nameWithType> 고 <xref:System.DateTimeOffset.ToString%28System.String%29?displayProperty=nameWithType>입니다.  
  
-   주요 복합 형식 지정 메서드는 <xref:System.String.Format%2A?displayProperty=nameWithType>합니다.  
  
-   와 같은 서식 지정 메서드에 다른 복합 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> 고 <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>입니다.  
  
 모든 날짜 및 시간 서식 지정 작업 사용을 <xref:System.IFormatProvider> 구현 합니다. 합니다 <xref:System.IFormatProvider> 단일 메서드를 포함 하는 인터페이스 <xref:System.IFormatProvider.GetFormat%28System.Type%29?displayProperty=nameWithType>합니다. 이 콜백 메서드에 전달 되는 <xref:System.Type> 서식 지정 정보를 제공 하는 데 필요한 형식을 나타내는 개체입니다. 해당 형식의 인스턴스를 반환 하는 메서드 또는 `null` 형식의 인스턴스를 제공할 수 없는 경우. .NET Framework에 두 개의 <xref:System.IFormatProvider> 날짜 및 시간 서식 지정에 대 한 구현을:  
  
-   <xref:System.Globalization.CultureInfo> 클래스는 특정 문화권 (또는 특정 국가/지역에서 특정 언어)를 나타냅니다. 날짜 및 시간 형식 지정 작업을를 <xref:System.Globalization.CultureInfo.GetFormat%2A?displayProperty=nameWithType> 메서드가 반환 되는 <xref:System.Globalization.DateTimeFormatInfo> 개체와 연결 된 해당 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 속성.  
  
-   <xref:System.Globalization.DateTimeFormatInfo> 해당 연결 된 문화권의 서식 지정 규칙에 대 한 정보를 제공 하는 클래스입니다. <xref:System.Globalization.DateTimeFormatInfo.GetFormat%2A?displayProperty=nameWithType> 메서드 자체의 인스턴스를 반환 합니다.  
  
 경우는 <xref:System.IFormatProvider> 구현이 형식 지정 메서드를 명시적으로 제공 하지는 <xref:System.Globalization.CultureInfo> 반환한 개체는 <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> 현재 스레드 문화권을 나타내는 속성을 사용 합니다.  
  
 다음 예제에서는 관계를 보여 줍니다.는 <xref:System.IFormatProvider> 인터페이스 및 <xref:System.Globalization.DateTimeFormatInfo> 서식 지정 작업에는 클래스입니다. 사용자 지정 정의 <xref:System.IFormatProvider> 구현입니다 <xref:System.IFormatProvider.GetFormat%2A> 메서드 서식 지정 작업을 요청한 개체의 유형을 표시 합니다. 요청 하는 경우는 <xref:System.Globalization.DateTimeFormatInfo> 개체를 제공 하는 메서드는 <xref:System.Globalization.DateTimeFormatInfo> 현재 스레드 문화권에 대 한 개체입니다. 예제에서 출력으로는 <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> 메서드 요청을 <xref:System.Globalization.DateTimeFormatInfo> 반면 서식 지정 정보를 제공 하는 개체를 <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> 메서드 요청 <xref:System.Globalization.NumberFormatInfo> 하 고 <xref:System.Globalization.DateTimeFormatInfo> 개체 뿐만 <xref:System.ICustomFormatter> 구현입니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/formatprovider1.cs#9)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/formatprovider1.vb#9)]  
  
## <a name="format-strings-and-datetimeformatinfo-properties"></a>형식 문자열 및 DateTimeFormatInfo 속성  
 <xref:System.Globalization.DateTimeFormatInfo> 개체 서식 지정 날짜 및 시간 값을 사용 하 여 작업에 사용 되는 속성의 세 가지를 포함 합니다.  
  
-   일정 관련 속성입니다. 와 같은 속성 <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>를 <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A>, 및 <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>에 정의 된 문화권에 의해 사용 된 달력에 연결 된는 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 속성입니다. 이러한 속성에는 시간 형식 및 긴 날짜에 대 한 사용 됩니다.  
  
-   표준 정의 된 결과 문자열을 생성 하는 속성입니다. 합니다 <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>, 및 <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> 속성 국제 표준에 정의 된 결과 문자열을 생성 하는 사용자 지정 형식 문자열을 포함 합니다. 이러한 속성은 읽기 전용 및 수정할 수 없습니다.  
  
-   문화권 구분 결과 문자열을 정의 하는 속성입니다. 일부 속성을 같은 <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> 하 고 <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, 포함 [사용자 지정 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md) 결과 문자열의 형식을 지정 하는 합니다. 기타와 같은 <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A>, <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>, <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, 및 <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>, 문화권 구분 기호 또는 결과 문자열에 포함 될 수 있는 부분 문자열을 정의 합니다.  
  
 합니다 [표준 날짜 및 시간 형식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md)와 같은 "d", "D", "f"와 "F"는 특정에 해당 하는 별칭 <xref:System.Globalization.DateTimeFormatInfo> 패턴 속성 형식을 지정 합니다. 대부분의 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md) 서식 지정 작업 결과 스트림에 삽입 하는 문자열 또는 부분 문자열을 관련이 있습니다. 다음 표에서 표준 및 사용자 지정 날짜 및 시간 서식 지정자 및 이와 관련 된 <xref:System.Globalization.DateTimeFormatInfo> 속성입니다. 형식 지정자를 사용 하는 방법에 대 한 세부 정보를 참조 하세요 [표준 날짜 및 시간 서식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 하 고 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다. 각 표준 형식 문자열에 해당 하는 참고를 <xref:System.Globalization.DateTimeFormatInfo> 사용자 지정 날짜 및 시간 서식 문자열 값을 갖는 속성입니다. 이 사용자 지정 형식 문자열에서 개별 지정자는 다른 일치 <xref:System.Globalization.DateTimeFormatInfo> 속성입니다. 만 표에 <xref:System.Globalization.DateTimeFormatInfo> 속성은 표준 형식 문자열의 별칭을 및 해당 별칭이 지정 된 속성에 할당 된 사용자 지정 형식 문자열에서 액세스할 수 있는 목록 속성 하지 않습니다. 테이블에 해당 하는 사용자 지정 형식 지정자만을 나열 하는 또한 <xref:System.Globalization.DateTimeFormatInfo> 속성입니다.  
  
|형식 지정자|연결된 속성|  
|----------------------|---------------------------|  
|"d" (간단한 날짜, 표준 형식 문자열)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>를 결과 문자열의 전체 서식을 정의 합니다.|  
|"D" (자세한 날짜, 표준 형식 문자열)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>를 결과 문자열의 전체 서식을 정의 합니다.|  
|"f" (전체 날짜 / 시간, 표준 짧은 형식 문자열)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>에 형식의 결과 문자열의 날짜 구성 요소를 정의 합니다.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>에 형식의 결과 문자열의 시간 구성 요소를 정의 합니다.|  
|"F" (전체 날짜 / 시간 시간, 표준 형식 문자열)|<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>에 형식의 결과 문자열의 날짜 구성 요소를 정의 합니다.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>에 형식의 결과 문자열의 시간 구성 요소를 정의 합니다.|  
|"g" (일반 날짜 / 짧은 시간, 표준 형식 문자열)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>에 형식의 결과 문자열의 날짜 구성 요소를 정의 합니다.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>에 형식의 결과 문자열의 시간 구성 요소를 정의 합니다.|  
|"G" (일반 날짜 / 시간 시간, 표준 형식 문자열)|<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>에 형식의 결과 문자열의 날짜 구성 요소를 정의 합니다.<br /><br /> <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>에 형식의 결과 문자열의 시간 구성 요소를 정의 합니다.|  
|"M", "m" (월/일, 표준 형식 문자열)|<xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>를 결과 문자열의 전체 서식을 정의 합니다.|  
|"O", "o" (라운드트립 날짜/시간, 표준 형식 문자열)|없음|  
|"R", "r" (RFC1123; 표준 형식 문자열)|<xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>을 RFC 1123 표준에 따르는 결과 문자열을 정의 합니다. 속성이 읽기 전용입니다.|  
|"s" (정렬 가능한 날짜/시간, 표준 형식 문자열)|<xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>ISO 8601 표준을 따르는 결과 문자열을 정의할 수 있습니다. 속성이 읽기 전용입니다.|  
|"t" (짧은 시간, 표준 형식 문자열)|<xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>를 결과 문자열의 전체 서식을 정의 합니다.|  
|"T" (긴 시간, 표준 형식 문자열)|<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>를 결과 문자열의 전체 서식을 정의 합니다.|  
|"u" (정렬 가능한 유니버설 날짜/시간, 표준 형식 문자열)|<xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A>coordinated universal time ISO 8601 표준을 따르는 결과 문자열을 정의할 수 있습니다. 속성이 읽기 전용입니다.|  
|"U" (유니버설 전체 날짜/시간, 표준 형식 문자열)|<xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>를 결과 문자열의 전체 서식을 정의 합니다.|  
|"Y", "y" (연도 월; 표준 형식 문자열)|<xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A>를 결과 문자열의 전체 서식을 정의 합니다.|  
|"ddd" (사용자 지정 형식 지정자)|<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>를 결과 문자열에 요일을 기준의 약식된 이름이 포함 되도록 합니다.|  
|"g", "gg" (사용자 지정 형식 지정자)|호출 된 <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> 연대 이름을 결과 문자열에 삽입 하는 방법입니다.|  
|"MMM" (사용자 지정 형식 지정자)|<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>약식된 월 이름을 결과 문자열에 포함 합니다.|  
|"MMMM" (사용자 지정 형식 지정자)|<xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> 또는 <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A>전체 월 이름을 결과 문자열에 포함 합니다.|  
|"t" (사용자 지정 형식 지정자)|<xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> 또는 <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>결과 문자열에 AM/PM 지정자의 첫 번째 문자를 포함 합니다.|  
|"tt" (사용자 지정 형식 지정자)|<xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> 또는 <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>결과 문자열에 전체 AM/PM 지정자를 포함 합니다.|  
|":" (사용자 지정 형식 지정자)|<xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>를 결과 문자열에는 시간 구분 기호를 포함 합니다.|  
|"/" (사용자 지정 형식 지정자)|<xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>를 결과 문자열에는 날짜 구분 기호를 포함 합니다.|  
  
<a name="Modifying"></a>   
## <a name="modifying-datetimeformatinfo-properties"></a>DateTimeFormatInfo 속성 수정  
 쓰기 가능한의 연결된 속성을 수정 하 여 날짜 및 시간 형식 문자열에서 생성 된 결과 문자열을 변경할 수 있습니다 <xref:System.Globalization.DateTimeFormatInfo> 개체입니다. 여부를 확인 하는 <xref:System.Globalization.DateTimeFormatInfo> 개체가 쓰기를 사용 하 여는 <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> 속성입니다. 사용자 지정 하는 <xref:System.Globalization.DateTimeFormatInfo> 이런에서 개체:  
  
1.  읽기/쓰기 복사본 만들기를 <xref:System.Globalization.DateTimeFormatInfo> 개체를 수정 하려면 해당 형식 지정 규칙입니다. (참조를 [DateTimeFormatInfo 개체 인스턴스화](#instantiating) 섹션입니다.)  
  
2.  속성 또는 원하는 결과 문자열을 생성 하는 데 사용 되는 속성을 수정 합니다. (서식 지정 방법을 메서드 사용에 대 한 자세한 <xref:System.Globalization.DateTimeFormatInfo> 결과 문자열을 정의 하는 속성의 이전 섹션에서 참조 [서식 문자열 및 DateTimeFormatInfo 속성](#format-strings-and-datetimeformatinfo-properties).)  
  
3.  사용자 지정을 사용 하 여 <xref:System.Globalization.DateTimeFormatInfo> 로 만든 개체는 <xref:System.IFormatProvider> 서식 지정 메서드에 대 한 호출에 인수입니다.  
  
 두 가지 다른 결과 문자열의 형식을 변경 하려면:  
  
-   사용할 수는 <xref:System.Globalization.CultureAndRegionInfoBuilder> (고유 이름을 가진 및 기존를 보완 하는 문화권 문화권) 사용자 지정 문화권 또는 대체 문화권 (하나는 특정 문화권 대신 사용 되는)를 정의 하는 클래스입니다. 저장 하 고와 마찬가지로이 문화권을 프로그래밍 방식으로 액세스할 수 있습니다 <xref:System.Globalization.CultureInfo> .NET Framework에서 지 원하는 개체입니다.  
  
-   결과 문자열 문화권 구분 되 고 미리 정의 된 서식을 따르지 않습니다, 경우에 사용자 지정 날짜 및 시간 서식 문자열을 사용할 수 있습니다. 예를 들어, YYYYMMDDHHmmss 형식의 날짜 및 시간 데이터를 직렬화 하는 경우 생성할 수 있습니다 결과 문자열에 사용자 지정 형식 문자열을 전달 하 여 합니다 <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> 메서드를 결과 문자열을 변환할 수 있습니다 다시는 <xref:System.DateTime> 호출 하 여 값을 <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> 메서드.  
  
### <a name="changing-the-short-date-pattern"></a>간단한 날짜 패턴 변경  
 다음 예제에서는 "d" (간단한 날짜) 표준 서식 문자열에 의해 생성 되는 결과 문자열의 형식을 변경 합니다. 연결 된 변경 <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> 속성을 "M/d/yyyy"의 기본값에서 영어 (미국) 문화권을 EN-US에 대 한 "yyyy' 앞과 뒤에 날짜를 표시 하려면"d"표준 서식 문자열 사용 하 여 dd"-"MM"-"는 <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> 속성은 변경 합니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example1.cs#10)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example1.vb#10)]  
  
### <a name="changing-the-date-separator-character"></a>날짜 구분 기호를 변경합니다.  
 다음 예제에서는 변경의 날짜 구분 기호 문자는 <xref:System.Globalization.DateTimeFormatInfo> FR-FR 문화권의 서식 규칙을 나타내는 개체입니다. 예제에서는 "g" 표준 서식 문자열을 사용 하 여 이전과 이후에 날짜를 표시 하는 <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> 속성이 변경 됩니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example3.cs#12)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example3.vb#12)]  
  
### <a name="changing-day-name-abbreviations-and-the-long-date-pattern"></a>요일 이름 약어 및 자세한 날짜 패턴 변경  
 경우에 따라 긴 날짜 패턴이 며, 일반적으로 전체 요일과 월 이름을 월과 연도 중 일 수와 함께 표시를 너무 길어질 수 있습니다. 다음 예에서는 일 뒤에 1 자리 또는 두 자리 요일 이름 약어, 월 이름 약어 및 연도 반환 하는 EN-US 문화권의 긴 날짜 패턴을 단축 합니다. 짧은 요일 이름 약어를 할당 하 여 이렇게 합니다 <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> 배열에서 할당할 사용자 지정 서식 문자열을 수정 하는 <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> 속성. "D"에서 반환 된 결과 문자열 및 "f" 표준 서식 문자열에 영향을 줍니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example2.cs#13)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example2.vb#13)]  
  
 일반적으로 변경 합니다 <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> 속성이 영향을 주는지도 <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> 속성에서 "F" 표준 서식 문자열에 의해 반환 된 결과 문자열을 정의 하는 합니다. 예제를 유지 하기 위해 원래 전체 날짜 및 시간 패턴에 할당 된 원래 사용자 지정 형식 문자열을 다시 할당 합니다 <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> 후 속성을 <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> 속성을 수정 합니다.  
  
### <a name="changing-from-a-12-hour-clock-to-a-24-hour-clock"></a>12 시간제 시계에서 24 시간제로 변경  
 .NET Framework의 많은 문화권에 대 한 시간을 12 시간제 시계 및 AM/PM 지정자를 사용 하 여 표현 됩니다. 다음 예제에서는 정의 `ReplaceWith24HourClock` 24 시간제를 사용 하는 형식에는 12 시간제 시계를 사용 하는 모든 시간 형식으로 대체 하는 메서드.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example5.cs#14)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example5.vb#14)]  
  
 형식 문자열을 수정 하려면 정규식을 사용 하는 예제입니다. 정규식 패턴 `@"^(?<openAMPM>\s*t+\s*)? (?(openAMPM) h+(?<nonHours>[^ht]+)$ | \s*h+(?<nonHours>[^ht]+)\s*t+)` 다음과 같이 정의 됩니다.  
  
|무늬|설명|  
|-------------|-----------------|  
|`^`|문자열의 시작 부분에서 검색을 시작합니다.|  
|`(?<openAMPM>\s*t+\s*)?`|일치 항목 0 개 또는 1 발생 0 개 이상의 공백 문자, 하나는 "t" 문자 뒤에 또는 뒤에 0 개 이상의 공백 문자가 번 이상. 이 캡처링 그룹의 이름은 `openAMPM`합니다.|  
|`(?(openAMPM) h+(?<nonHours>[^ht]+)$`|경우는 `openAMPM` 그룹에 일치 하는, "h" 및 "t" 아닌 하나 이상의 문자 뒤에 한 번 이상, "h" 문자를 일치 합니다. 일치 하는 문자열의 끝에서 끝납니다. 모든 문자 "h" 명명 된 캡처링 그룹에 포함 된 후에 캡처된 `nonHours`합니다.|  
|`&#124; \s*h+(?<nonHours>[^ht]+)\s*t+)`|경우는 `openAMPM` 그룹에 일치 하는 항목이 없는, "h" 뒤에 0 개 이상의 공백 문자가 한 번 이상, "h" 및 "t" 아닌 하나 이상의 문자 뒤에 문자와 일치 합니다. 문자 "t"의 하나 이상의 항목을 마지막으로 일치 합니다. 모든 문자 "h" 및 "t" 고 공백을 명명 된 캡처링 그룹에 포함 된 전에 캡처된 `nonHours`합니다.|  
  
 `nonHours` 캡처링 그룹이 포함 되어 있습니다 분 및 초 구성 요소 사용자 지정 날짜 및 시간 서식 문자열을 함께 모든 시간 구분 기호입니다. 바꾸기 패턴 `HH${nonHours}` 이러한 요소에 "HH" 부분 문자열 앞에 추가 합니다.  
  
### <a name="displaying-and-changing-the-era-in-a-date"></a>표시 하 고 날짜의 연대를 변경 합니다.  
 다음 예제에서는 "g" 사용자 지정 형식 지정자를 추가 합니다 <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> EN-US 문화권의 서식 규칙을 나타내는 개체의 속성입니다. 이 추가 다음 세 가지 표준 형식 문자열을 영향을 줍니다.  
  
-   "D" (긴 날짜) 표준 형식 문자열에 직접 매핑되는 <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> 속성입니다.  
  
-   "F" (전체 날짜 / 시간을 요약)에서 생성 된 부분 문자열을 연결 하는 결과 문자열을 생성 하는 표준 형식 문자열을 <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> 및 <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> 속성입니다.  
  
-   "F" (전체 날짜 자세한 시간 /) 표준 서식 문자열에 직접 매핑되는 <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> 속성입니다. 에서는 명시적으로이 속성 값을 설정 하지 때문에 생성 된 동적으로 연결 하 여 합니다 <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> 고 <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> 속성입니다.  
  
 또한 해당 일정에 단일 연대를 문화권에 대 한 연대 이름을 변경 하는 방법을 보여 줍니다. EN-US 문화권으로 표현 되는 양력을 사용 하는 경우에 <xref:System.Globalization.GregorianCalendar> 개체입니다. <xref:System.Globalization.GregorianCalendar> 클래스 기 이름을 하에서는 단일 연대를 지원 합니다. (Anno Domini)입니다. 이 예제에서는 기 연대 이름 변경 (Common Era)에 할당 된 형식 문자열에서 "g" 사용자 지정 형식 지정자를 대체 하 여는 <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> 리터럴 문자열을 사용 하 여 속성입니다. 리터럴 문자열의 사용은 연대 이름에서 일반적으로 반환 되기 때문에 필요 합니다 <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> 개인 데이터는.NET Framework 또는 Windows 운영 체제에서 제공 되는 문화권 테이블에서 메서드.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example4.cs#11)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example4.vb#11)]  
  
## <a name="parsing-date-and-time-strings"></a>날짜 및 시간 문자열 구문 분석  
 날짜 및 시간의 문자열 표현으로 변환에서는 구문 분석을 <xref:System.DateTime> 또는 <xref:System.DateTimeOffset> 값입니다. 이러한 두 유형을 모두 포함 된 `Parse`, `TryParse`, `ParseExact`, 및 `TryParseExact` 구문 분석 작업을 지 원하는 방법. `Parse` 하 고 `TryParse` 반면 메서드는 다양 한 형식으로 나타낼 수 있는 문자열을 변환 `ParseExact` 및 `TryParseExact` 정의 된 형식 또는 형식 문자열에 포함 합니다. 구문 분석 작업이 실패 하는 경우 `Parse` 하 고 `ParseExact` 반면 예외가 throw `TryParse` 하 고 `TryParseExact` 반환 `false`합니다.  
  
 구문 분석 메서드를 암시적 또는 명시적으로 사용 된 <xref:System.Globalization.DateTimeStyles> (예: 앞, 뒤, 또는 내부 공백) 스타일 요소를 확인 하는 열거형 값을 구문 분석할 문자열 및 구문 분석된 된 문자열 또는 누락 된 해석 하는 방법에 있을 수 있습니다 요소입니다. 제공 하지 않으면를 <xref:System.Globalization.DateTimeStyles> 를 호출할 때 값을 `Parse` 또는 `TryParse` 메서드, 기본값은 <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType>, 포함 된 복합 스타일 인를 <xref:System.Globalization.DateTimeStyles.AllowLeadingWhite?displayProperty=nameWithType>, <xref:System.Globalization.DateTimeStyles.AllowTrailingWhite?displayProperty=nameWithType>, 및 <xref:System.Globalization.DateTimeStyles.AllowInnerWhite?displayProperty=nameWithType> 플래그입니다. 에 대 한 합니다 `ParseExact` 하 고 `TryParseExact` 메서드, 기본값은 <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>; 입력된 문자열은 특정 사용자 지정 날짜 및 시간 서식 문자열을 정확 하 게 일치 해야 합니다.  
  
 구문 분석 메서드를 암시적으로 또는 명시적으로 사용 된 <xref:System.Globalization.DateTimeFormatInfo> 특정 기호 정의 패턴으로 개체를 구문 분석 될 문자열에서 발생할 수 있습니다. 제공 하지 않으면를 <xref:System.Globalization.DateTimeFormatInfo> 개체는 <xref:System.Globalization.DateTimeFormatInfo> 개체가 현재 스레드 문화권에 기본적으로 사용 됩니다. 날짜 및 시간 문자열 구문 분석 하는 방법에 대 한 자세한 내용은 참조는 개별 구문 분석 메서드 같은 <xref:System.DateTime.Parse%2A?displayProperty=nameWithType>, <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType>를 <xref:System.DateTimeOffset.ParseExact%2A?displayProperty=nameWithType>, 및 <xref:System.DateTimeOffset.TryParseExact%2A?displayProperty=nameWithType>합니다.  
  
 다음 예제에서는 구문 분석 된 날짜 및 시간 문자열의 문화권 구분 특성을 보여 줍니다. EN-US, EN-GB, FR-FR 및 FI-FI 문화권의 규칙을 사용 하 여 두 날짜 문자열을 구문 분석 하려고 합니다. EN-US의 2014 년 8 월 18/로 해석 되는 날짜 문화권 throw를 <xref:System.FormatException> 18 개월 수로 해석 되기 때문에 다른 3 개 예외 문화권입니다. 2015 년 2 월 1 일에는 EN-US 문화권의 첫 번째 월 2 일 하지만 나머지 문화에 두 번째 달의 첫째 요일로 구문 분석 됩니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/parsing1.cs#15)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/parsing1.vb#15)]  
  
 날짜 및 시간 문자열은 일반적으로 두 가지 이유로 구문 분석 됩니다.  
  
-   날짜 및 시간 값으로 사용자 입력을 변환 합니다.  
  
-   날짜 및 시간 값 라운드트립 하려면 즉, 이전에 문자열로 serialize 된 날짜 및 시간 값을 deserialize 하는 데 있습니다.  
  
 다음 섹션에서는 이러한 두 작업에 자세히 설명합니다.  
  
### <a name="parsing-user-strings"></a>사용자 문자열을 구문 분석  
 항상 인스턴스화해야 사용자가 입력 하는 날짜 및 시간 문자열을 구문 분석할 때를 <xref:System.Globalization.DateTimeFormatInfo> 사용자 수행한 모든 사용자 지정을 포함 하 여 사용자의 문화권 설정을 반영 하는 개체입니다. 그렇지 않은 경우 날짜 및 시간 개체는 잘못 된 값 있을 수 있습니다. 인스턴스화하는 방법에 대 한 자세한를 <xref:System.Globalization.DateTimeFormatInfo> 사용자 지정 문화권을 반영 하는 개체 참조를 [DateTimeFormatInfo 및 dynamic data](#dynamic) 섹션입니다.  
  
 다음 예제에서는 사용자 문화권 설정을 반영 하는 구문 분석 작업을 하지 않는 사이의 차이점을 보여 줍니다. 이 경우 기본 시스템 문화권은 EN-US, 하지만 사용자가 제어판을 사용 하는 것 **국가 및 언어** "M/d/yyyy" 기본 "yy/MM/dd"에서 간단한 날짜 패턴을 변경 하려면. 때 사용자 사용자 설정을 반영 하는 문자열을 입력 하 고 문자열에서 구문 분석 되는 <xref:System.Globalization.DateTimeFormatInfo> 도 사용자 설정 (재정의)를 반영 하는 개체 구문 분석 작업이 올바른 결과 반환 합니다. 그러나 경우는 문자열은 구문 분석 하 여는 <xref:System.Globalization.DateTimeFormatInfo> 표준 EN-US 문화권 설정을 구문 분석 메서드가 throw를 반영 하는 개체를 <xref:System.FormatException> 예외 해석 하므로 14 숫자로 월의 마지막 두 자리 연도의 없습니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/parse2.cs#16)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/parse2.vb#16)]  
  
### <a name="serializing-and-deserializing-date-and-time-data"></a>직렬화 및 역직렬화 날짜 및 시간 데이터  
 직렬화 된 날짜 및 시간 데이터 왕복; 필요 합니다. 즉, 모든 직렬화 및 역직렬화 된 값이 동일 해야 합니다. 날짜 및 시간 값을 단일 시점을 나타내는 경우 역직렬화 된 값으로 복원 된 시스템의 표준 시간대를 문화권에 관계 없이 동일한 순간을 나타내야 합니다. 라운드트립 날짜 및 시간 데이터를 성공적으로 사용 해야가 반환한 고정 문화권의 규칙을 <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> 속성을 생성 하 고 데이터를 구문 분석 합니다. 서식 지정 및 구문 분석 작업을 해야 기본 문화권의 규칙을 반영 되지 않습니다. 기본 문화권 설정을 사용 하는 경우 데이터의 이식성 엄격 하 게 제한 합니다. 문화권 관련 설정 되어 있는 serialize 된 스레드와 동일한 스레드에서 정상적으로 deserialize 할 수 있습니다. 경우에 따라이 의미는 데이터가 없습니다도 성공적으로 직렬화 및 역직렬화 될 동일한 시스템에서 합니다.  
  
 날짜 및 시간 값의 시간 구성 요소에 중요 한 경우 또한 될 UTC로 변환 하 고 "o" 또는 "r"을 사용 하 여 직렬화 [표준 형식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md)합니다. 데이터를 구문 분석 방법 및 고정 문화권을 사용 하 여 적절 한 형식 문자열의 전달 호출 하 여 복원할 수 있습니다는 `provider` 인수입니다.  
  
 다음 예제에서는 라운드트립 날짜 및 시간 값의 프로세스를 보여 줍니다. 날짜 및 시간을 미국 관찰 하는 시스템을 serialize 태평양 표준시 기준 및 현재 문화권이 EN-US 인 합니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/serialize1.cs#17)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/serialize1.vb#17)]  
  
 브뤼셀, 코펜하겐, 마드리드 및 파리 표준 시간대 시스템에서 데이터를 deserialize 할 및 현재 문화권이 인 fr. 복원 된 날짜는 9 시간 UTC 보다 한 시간을 UTC 보다 8 시간에서 표준 시간대 조정에 반영 하는 원래 날짜 보다 나중입니다. 원래 날짜와 복원 된 날짜 시간의 동일한 순간을 나타냅니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/serialize2.cs#18)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/serialize2.vb#18)]  
  
   
  
## Examples  
 다음 예제에서는 리플렉션을 사용 하 여 속성을 가져옵니다는 <xref:System.Globalization.DateTimeFormatInfo> 영어 (미국) 문화권에 대 한 개체입니다. 사용자 지정 서식 문자열을 포함 하는 해당 속성의 값을 표시 하 고 서식 지정 된 날짜로 표시 하려면 해당 문자열을 사용 합니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/format1.cs#5)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/format1.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeFormatInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeFormatInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>문화권 독립(고정)적인 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 클래스의 쓰기 가능한 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 <xref:System.Globalization.DateTimeFormatInfo> 고정 문화권의 날짜와 시간 정보를 나타내는 개체입니다. 만들려는 <xref:System.Globalization.DateTimeFormatInfo> 특정 문화권에 대 한 개체를 만듭니다를 <xref:System.Globalization.CultureInfo> 해당 문화권에 대 한 개체를 검색 합니다 <xref:System.Globalization.DateTimeFormatInfo> 에서 반환 된 개체 해당 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 속성입니다.  
  
 속성을 <xref:System.Globalization.DateTimeFormatInfo> 이 생성자에 의해 생성 된 개체를 수정할 수 있습니다. 그러나 수정할 수 없습니다는 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 속성, 고정 문화권은 지역화 된 버전의 그레고리오력을 지원 하므로 합니다. 만들려는 <xref:System.Globalization.DateTimeFormatInfo> 특정 달력을 사용 하는 개체를 인스턴스화해야를 <xref:System.Globalization.CultureInfo> 달력 및 달력을 할당 하는 지 원하는 개체를 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 의 속성을 <xref:System.Globalization.DateTimeFormatInfo> 에서 반환 된 개체는 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 속성 .  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedDayNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedDayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedDayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedDayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedDayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AbbreviatedDayNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>문화권별 약식 요일 이름이 들어 있는 <see cref="T:System.String" /> 형식의 1차원 배열을 가져오거나 설정합니다.</summary>
        <value>문화권별 약식 요일 이름이 들어 있는 <see cref="T:System.String" /> 형식의 1차원 배열입니다. <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> 배열에는 "Sun", "Mon", "Tue", "Wed", "Thu", "Fri" 및 "Sat"가 들어 있습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 설정 하는 경우 배열의 1 차원 이어야 하며 정확히 7 개의 요소가 있어야 합니다. 첫 번째 요소 (인덱스 0에 있는 요소) 정의한 달력의 첫 번째 요일을 나타내는 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 속성입니다.  
  
 사용자 지정 형식 문자열 "ddd" 형식 지정자를 포함 하는 경우는 <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> 또는 <xref:System.DateTimeOffset.ToString%2A> 의 적절 한 멤버를 포함 하는 메서드는 <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> 결과 문자열에 "ddd" 대신 배열입니다.  
  
 이 속성에 영향을 줍니다의 값을 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 속성 변경 합니다. 경우 선택한 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 않습니다 하지 약식 요일 이름을 지원, 배열에 전체 요일 이름을 포함 합니다.  
  
   
  
## Examples  
 다음 예에서는 읽기/쓰기 <xref:System.Globalization.CultureInfo> 할당을 영어 (미국) 문화권을 나타내는 개체 요일 이름 약어 해당 <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> 속성입니다. "Ddd" 형식 지정자에서 사용 하 여를 2014 년 5 월 28 1 주일에 대 한 날짜의 문자열 표현을 표시 합니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviateddaynames/cs/abbreviateddaynames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviateddaynames/vb/abbreviateddaynames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.ArgumentException">속성이 다차원이거나 길이가 정확히 7이 아닌 배열로 설정되는 경우</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedMonthGenitiveNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedMonthGenitiveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedMonthGenitiveNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedMonthGenitiveNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedMonthGenitiveNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AbbreviatedMonthGenitiveNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체와 연결된 약식 월 이름의 문자열 배열을 가져오거나 설정합니다.</summary>
        <value>약식 월 이름의 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일부 언어에서 월 이름 날짜의 일부인 소유격 경우에 표시 됩니다. 예를 들어, RU-RU 또는 러시아어 (러시아) 문화권의 날짜 숫자 및 1 Января (1 년 1 월)와 같은 소유격 월 이름을 이루어져 있습니다. 이러한 문화권의 사용자 지정 형식 문자열 "MMM" 형식 지정자를 포함 하는 경우에 <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> 또는 <xref:System.DateTimeOffset.ToString%2A> 의 적절 한 멤버를 포함 하는 메서드는 <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> 배열 결과 문자열에 "MMM" 대신 합니다.  
  
 Set 작업에서 배열 정확히 13 개의 요소를 사용 하 여 1 차원 이어야 합니다 때문에 <xref:System.Globalization.Calendar> 13 월까지 있는 역법을 수용 하는 개체입니다. 12 월까지 있는 역법, 13 번째 요소 여야 <xref:System.String.Empty?displayProperty=nameWithType>합니다. 첫 번째 요소 (인덱스 0에 있는 요소) 정의한 연도의 첫 번째 월을 나타내는 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 속성입니다.  
  
 설정 하는 경우는 <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> 속성을 설정 해야 합니다 <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예에서는 읽기/쓰기 <xref:System.Globalization.CultureInfo> 할당을 영어 (미국) 문화권을 나타내는 개체를 소유격 월 이름 약어 해당 <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> 고 <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> 속성입니다. 문화권의 지원 되는 달력에 각 월의 약식된 월 이름을 포함 하는 날짜의 문자열 표현을 표시 합니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/cs/abbreviatedmonthnames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/vb/abbreviatedmonthnames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">set 작업에서 배열이 다차원이거나 길이가 정확히 13이 아닙니다.</exception>
        <exception cref="T:System.ArgumentNullException">set 작업에서 배열 또는 배열의 요소 중 하나가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">set 작업에서 현재 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체가 읽기 전용인 경우</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedMonthNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedMonthNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedMonthNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedMonthNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedMonthNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AbbreviatedMonthNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>문화권별 약식 월 이름이 들어 있는 1차원 문자열 배열을 가져오거나 설정합니다.</summary>
        <value>문화권별 약식 월 이름이 들어 있는 13개의 요소를 포함하는 1차원 문자열 배열입니다. 12개월 달력의 경우 배열의 13번째 요소는 빈 문자열입니다. <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> 배열에는 "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" 및 ""가 들어 있습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 설정 하는 경우 배열 정확히 13 개의 요소를 사용 하 여 1 차원 이어야 합니다. <xref:System.Globalization.Calendar> 개체는 13 개월 달력이 수용합니다. 첫 번째 요소 (인덱스 0에 있는 요소) 정의한 연도의 첫 번째 월을 나타내는 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 속성입니다.  
  
 설정 하는 경우는 <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> 속성을 설정 해야 합니다 <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> 속성입니다. 합니다 <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> 및 <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> 속성을 다음 형식 문자열을 사용 하 여 날짜 형식을 사용 합니다.  
  
-   표준 날짜 및 시간 형식 문자열을 사용자 지정 서식을 별칭 "MMM"를 포함 하는 문자열 형식 지정자  
  
-   사용자 지정 날짜 및 시간 서식 문자열 "MMM"를 포함 하는 형식 지정자입니다.  
  
 이 속성에 영향을 줍니다의 값을 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 속성 변경 합니다. 경우 선택한 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 가 되지 약식 월 이름을 지원, 배열에 전체 월 이름이 포함 되어 있습니다.  
  
   
  
## Examples  
 다음 예에서는 읽기/쓰기 <xref:System.Globalization.CultureInfo> 할당을 영어 (미국) 문화권을 나타내는 개체를 소유격 월 이름 약어 해당 <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> 고 <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> 속성입니다. 문화권의 지원 되는 달력의 각 월의 약식된 이름을 포함 하는 날짜의 문자열 표현을 표시 합니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/cs/abbreviatedmonthnames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/vb/abbreviatedmonthnames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.ArgumentException">속성이 다차원이거나 길이가 정확히 13이 아닌 배열로 설정됩니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      </Docs>
    </Member>
    <Member MemberName="AMDesignator">
      <MemberSignature Language="C#" Value="public string AMDesignator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AMDesignator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AMDesignator" />
      <MemberSignature Language="VB.NET" Value="Public Property AMDesignator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AMDesignator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AMDesignator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.AMDesignator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>"AM(ante meridiem)"(오전) 시간에 대한 문자열 지정자를 가져오거나 설정합니다.</summary>
        <value>AM(ante meridiem) 시간에 대해 지정된 문자열입니다. <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" />의 기본값은 "AM"입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> 속성은 항상 0에서: 00:00 (자정) 11:59:59.999 하 합니다.  
  
 "Tt" 형식 지정자를 포함 하는 사용자 지정 서식 문자열 및 시간은 정오에 경우 합니다 <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> 또는 <xref:System.DateTimeOffset.ToString%2A> 의 값을 포함 하는 메서드는 <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> 결과 문자열에 "tt" 대신 속성입니다. 사용자 지정 형식 문자열 "t" 사용자 지정 형식 지정자의 첫 번째 문자만 포함 하는 경우는 <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> 속성 값이 포함 되어 있습니다. "Tt" 오전을 구분 하는 데 필요한 해당 언어를 사용 해야 오후 예로는 일본어 A.M. 오후 지정자 첫 번째 문자 대신 두 번째 문자가 서로 다릅니다.  
  
 오전을 사용 하지 않는 문화권에 대 한 지정자,이 속성이 빈 문자열을 반환 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.PMDesignator" />
      </Docs>
    </Member>
    <Member MemberName="Calendar">
      <MemberSignature Language="C#" Value="public System.Globalization.Calendar Calendar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar Calendar" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.Calendar" />
      <MemberSignature Language="VB.NET" Value="Public Property Calendar As Calendar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::Calendar ^ Calendar { System::Globalization::Calendar ^ get(); void set(System::Globalization::Calendar ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Calendar : System.Globalization.Calendar with get, set" Usage="System.Globalization.DateTimeFormatInfo.Calendar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 문화권에 사용할 달력을 가져오거나 설정합니다.</summary>
        <value>현재 문화권에 사용할 달력입니다. <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" />의 기본값은 <see cref="T:System.Globalization.GregorianCalendar" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 속성은 연결 된 문화권에 대해 사용할 수 있는 일정만 허용 합니다 <xref:System.Globalization.DateTimeFormatInfo> 개체입니다. 합니다 <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> 특정 문화권에 따라 사용할 수 있는 달력을 지정 하는 속성 및 <xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=nameWithType> 속성 문화권의 기본 달력을 지정 합니다.  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

다음 속성에 영향을 줍니다이 속성의 값을 변경: <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>를 <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>, <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>를 <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>를 <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> 및 <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>합니다.  
  
 예를 들어 현재 스레드의 문화권이 일본 인 경우이 속성은 허용 <xref:System.Globalization.JapaneseCalendar>하십시오 <xref:System.Globalization.GregorianCalendarTypes.Localized> <xref:System.Globalization.GregorianCalendar>, 또는 <xref:System.Globalization.GregorianCalendarTypes.USEnglish> <xref:System.Globalization.GregorianCalendar>합니다. 경우는 <xref:System.Globalization.JapaneseCalendar> 사용 지정자는 기본 긴 날짜 "gg y '\x5e74 AM' \x6708 '\x65e5' 했습니다"입니다. 경우는 <xref:System.Globalization.GregorianCalendarTypes.Localized> <xref:System.Globalization.GregorianCalendar>, 사용 지정자는 기본 긴 날짜 "yyyy '\x5e74 AM' \x6708 '\x65e5' 했습니다"입니다.  
  
   
  
## Examples  
 다음 예제에서는 정의 `ChangeCalendar` 문화권에서 지원 되지 않는 경우 또는 현재 달력이 있지 않는 지정 된 일정에는 문화권의 현재 달력을 변경 하는 메서드입니다. 메서드를 호출 하는 코드를 인스턴스화하는 <xref:System.Globalization.CultureInfo> 일본식 달력에 해당 일정을 변경 하려면 먼저 시도 아랍어 (이집트) 문화권을 나타내는 개체입니다. 일본식 달력 지원 되지 않으므로 문화권의 달력을 변경 하지을 수행 합니다. 그러나 때문에 um al Qura 달력의 멤버인는 <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> 컬렉션에 대 한 현재 달력을 만드는 메서드를 성공지 않습니다는 AR-EG 문화권입니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.Calendar/cs/CalendarTest1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.Calendar/vb/CalendarTest1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">속성이 현재 문화권에 유효하지 않은 <see cref="T:System.Globalization.Calendar" /> 개체로 설정되는 경우</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName="CalendarWeekRule">
      <MemberSignature Language="C#" Value="public System.Globalization.CalendarWeekRule CalendarWeekRule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarWeekRule CalendarWeekRule" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.CalendarWeekRule" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarWeekRule As CalendarWeekRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CalendarWeekRule CalendarWeekRule { System::Globalization::CalendarWeekRule get(); void set(System::Globalization::CalendarWeekRule value); };" />
      <MemberSignature Language="F#" Value="member this.CalendarWeekRule : System.Globalization.CalendarWeekRule with get, set" Usage="System.Globalization.DateTimeFormatInfo.CalendarWeekRule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarWeekRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>연도의 첫째 주를 결정하는 데 사용되는 규칙을 지정하는 값을 가져오거나 설정합니다.</summary>
        <value>연도의 첫째 주를 결정하는 값입니다. <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" />의 기본값은 <see cref="F:System.Globalization.CalendarWeekRule.FirstDay" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에 영향을 줍니다의 값을 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 속성 변경 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">속성 값이 유효하지 않은 <see cref="T:System.Globalization.CalendarWeekRule" /> 값으로 설정되는 경우</exception>
        <exception cref="T:System.InvalidOperationException">set 작업에서 현재 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체가 읽기 전용인 경우</exception>
        <altmember cref="T:System.Globalization.CalendarWeekRule" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="dateTimeFormatInfo.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Globalization.DateTimeFormatInfo" />의 부분 복사본을 만듭니다.</summary>
        <returns>원본 <see cref="T:System.Globalization.DateTimeFormatInfo" />에서 복사된 새 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 복제본은 쓰기 가능한 경우에 원래 <xref:System.Globalization.DateTimeFormatInfo> 개체가 읽기 전용입니다. 따라서 사용자 정의 된 패턴을 사용 하 여 복제본의 속성을 수정할 수 있습니다.  
  
 개체의 단순 복사본에만 개체의 복사본이입니다. 개체가 다른 개체에 대 한 참조를 포함 하는 경우 단순 복사를 참조 된 개체의 복사본을 만들지 않습니다. 참조 된 원래 개체 대신 합니다. 반면, 개체의 전체 복사본을 만들고 개체의 복사본 개체에서 직접 또는 간접적으로 참조 하는 모든 대상을 복사 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo CurrentInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.DateTimeFormatInfo CurrentInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.CurrentInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentInfo As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::DateTimeFormatInfo ^ CurrentInfo { System::Globalization::DateTimeFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentInfo : System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.CurrentInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 문화권에 따라 값의 형식을 지정하는 읽기 전용 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체를 가져옵니다.</summary>
        <value>현재 스레드의 <see cref="T:System.Globalization.CultureInfo" /> 개체를 기준으로 하는 읽기 전용 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Globalization.DateTimeFormatInfo> 에서 반환 된 개체는 <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> 속성은 사용자 재정의 반영 합니다.  
  
   
  
## Examples  
 다음 예제에서는 합니다 <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> 검색할 속성을 <xref:System.Globalization.DateTimeFormatInfo> EN-US 문화권에이 경우에 현재 문화권의 서식 규칙을 나타내는 개체입니다. 다음 형식 문자열 및 6 서식 속성의 결과 문자열이 표시 됩니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.CurrentInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.CurrentInfo/cs/CurrentInfo1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.CurrentInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.CurrentInfo/vb/CurrentInfo1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="DateSeparator">
      <MemberSignature Language="C#" Value="public string DateSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DateSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property DateSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DateSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DateSeparator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.DateSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>날짜의 구성 요소 즉, 연도, 월, 일을 구분하는 문자열을 가져오거나 설정합니다.</summary>
        <value>날짜의 구성 요소 즉, 연도, 월, 일을 구분하는 문자열입니다. <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> 기본값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자 지정 형식 문자열 "/" 형식 지정자를 포함 하는 경우는 <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> 의 값을 표시 하는 메서드 <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> 결과 문자열에 "/" 대신 합니다.  
  
 <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> 날짜 구분 기호를 대체 하는 문자열을 정의 하는 속성 ("/" 사용자 지정 날짜 및 시간 형식 지정자) 서식 지정 작업의 결과 문자열에 있습니다. 또한 구문 분석 작업에서 날짜 구분 기호 문자열을 정의합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Globalization.CultureInfo> 개체 EN-US 문화권의 경우 해당 날짜 구분 기호를 변경 "-", "d", "G" 및 "g" 표준 서식 문자열을 사용 하 여 날짜를 표시 합니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.DateSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.dateseparator/cs/dateseparatorex.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.DateSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.dateseparator/vb/dateseparatorex.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">사용자 지정 날짜 및 시간 형식 문자열</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">표준 날짜 및 시간 형식 문자열</related>
      </Docs>
    </Member>
    <Member MemberName="DayNames">
      <MemberSignature Language="C#" Value="public string[] DayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.DayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property DayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ DayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DayNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.DayNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>문화권별 전체 요일 이름이 들어 있는 1차원 문자열 배열을 가져오거나 설정합니다.</summary>
        <value>문화권별 전체 요일 이름이 들어 있는 1차원 문자열 배열입니다. <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> 배열에는 "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" 및 "Saturday"가 들어 있습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 설정 하는 경우 배열의 1 차원 이어야 하며 정확히 7 개의 요소가 있어야 합니다. 첫 번째 요소 (인덱스 0에 있는 요소) 정의한 달력의 첫 번째 요일을 나타내는 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 속성입니다.  
  
 사용자 지정 형식 문자열 "dddd" 형식 지정자를 포함 하는 경우는 <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> 적절 한 값을 포함 하는 메서드 <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A> 결과 문자열에 "dddd" 대신 멤버입니다.  
  
 이 속성에 영향을 줍니다의 값을 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 속성 변경 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.ArgumentException">속성이 다차원이거나 길이가 정확히 7이 아닌 배열로 설정되는 경우</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek FirstDayOfWeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek FirstDayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek FirstDayOfWeek { DayOfWeek get(); void set(DayOfWeek value); };" />
      <MemberSignature Language="F#" Value="member this.FirstDayOfWeek : DayOfWeek with get, set" Usage="System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>주의 첫째 요일을 가져오거나 설정합니다.</summary>
        <value>주의 첫째 요일을 정의하는 열거형 값입니다. <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" />의 기본값은 <see cref="F:System.DayOfWeek.Sunday" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에 영향을 줍니다의 값을 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 속성 변경 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">속성 값이 유효하지 않은 <see cref="T:System.DayOfWeek" /> 값으로 설정되는 경우</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="FullDateTimePattern">
      <MemberSignature Language="C#" Value="public string FullDateTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.FullDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property FullDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullDateTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FullDateTimePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.FullDateTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>긴 날짜 및 긴 시간 값에 대한 사용자 지정 서식 문자열을 가져오거나 설정합니다.</summary>
        <value>긴 날짜 및 긴 시간 값에 대한 사용자 지정 서식 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 "F" 표준 서식 문자열에 대 한 별칭인는 <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> 속성입니다. 즉,이 속성에 할당 된 사용자 지정 형식 문자열 "F" 표준 서식 문자열에 대 한 결과 문자열의 형식을 정의 합니다. 자세한 내용은 [표준 날짜 및 시간 형식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md)합니다.  
  
 값을 <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> 속성을 연결 하 여 동적으로 생성 됩니다 합니다 <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> 및 <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> 공백으로 구분 된 속성입니다. 이 동적 할당 다음 조건에서 발생합니다.  
  
-   이전 속성 값을 검색 하는 경우이 명시적으로 설정 되었습니다.  
  
-   때의 값을 <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> 속성 변경 합니다.  
  
-   때의 값을 <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> 속성 변경 합니다.  
  
 이 속성에 영향을 줍니다의 값을 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 속성 변경 합니다.  
  
   
  
## Examples  
 다음 예제에서는 값을 표시 <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> 몇 가지 문화권에 대 한 합니다.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/CPP/dtfi_fulldatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/CS/dtfi_fulldatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/VB/dtfi_fulldatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">표준 날짜 및 시간 형식 문자열</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">사용자 지정 날짜 및 시간 형식 문자열</related>
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedDayName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedDayName (DayOfWeek dayofweek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedDayName(valuetype System.DayOfWeek dayofweek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedDayName(DayOfWeek dayofweek);" />
      <MemberSignature Language="F#" Value="member this.GetAbbreviatedDayName : DayOfWeek -&gt; string" Usage="dateTimeFormatInfo.GetAbbreviatedDayName dayofweek" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayofweek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayofweek"><see cref="T:System.DayOfWeek" /> 값입니다.</param>
        <summary>현재 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체와 연결된 문화권에 기반하여 지정된 요일의 문화권별 약식 이름을 반환합니다.</summary>
        <returns><paramref name="dayofweek" />로 나타나는 요일의 문화권별 약식 이름입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 불변 <xref:System.Globalization.DateTimeFormatInfo> 개체에서 문자열을 반환 하는이 메서드는 <xref:System.Globalization.GregorianCalendar>:  
  
|`dayofweek`|반환 값|  
|-----------------|------------------|  
|일요일|"Sun"|  
|Monday|"Mon"|  
|화요일|"Tue"|  
|수요일|"Wed"|  
|목요일|"Thu"|  
|금요일|"Fri"|  
|토요일|"Sat"|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dayofweek" />는 유효한 <see cref="T:System.DayOfWeek" /> 값이 아닙니다.</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedEraName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedEraName (int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedEraName(int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbbreviatedEraName (era As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedEraName(int era);" />
      <MemberSignature Language="F#" Value="member this.GetAbbreviatedEraName : int -&gt; string" Usage="dateTimeFormatInfo.GetAbbreviatedEraName era" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="era">연대를 나타내는 정수입니다.</param>
        <summary>약식 형태가 있는 경우 지정된 연대의 약식 이름이 들어 있는 문자열을 반환합니다.</summary>
        <returns>약식 형태가 있는 경우 지정된 서기의 약식 이름이 들어 있는 문자열입니다.  
  
또는 
약식 형태가 없는 경우 지정된 서기의 자세한 이름이 들어 있는 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 연대 이름은 달력 고정된 소수점 또는 이벤트에서 말로 시간의 기간을 참조 하는 데 사용 하는 이름이입니다. 예를 들어, "기" 또는 "기" 그레고리오 력 연대가입니다.  
  
 유효한 값은 `era` 에 나열 된는 <xref:System.Globalization.Calendar.Eras%2A> 적절 한 클래스의 속성에서 파생 된 <xref:System.Globalization.Calendar>합니다. 예를 들어: <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType> 이 구현에서 지원 되는 연대 목록을 표시 합니다.  
  
 에 <xref:System.Globalization.JapaneseCalendar> 클래스 이름은 첫 번째 문자의 전체 연대 이름이 약식된 연대입니다. 이 문자는 단일 문자 대/소문자 라틴어 알파벳 약어 또는 단일 문자 간지 약어입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="era" />가 <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> 속성으로 지정된 달력의 유효한 연대를 나타내지 않는 경우</exception>
        <block subset="none" type="usage"><para>경우 <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> 은 <see cref="T:System.Globalization.TaiwanCalendar" /> 있지만 <see cref="P:System.Threading.Thread.CurrentCulture" /> "ZH-TW" 다음 아닙니다 <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, 및 <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> 빈 문자열을 반환 ("").</para></block>
        <altmember cref="T:System.Globalization.JapaneseCalendar" />
        <altmember cref="T:System.Globalization.TaiwanCalendar" />
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedMonthName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedMonthName (int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedMonthName(int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbbreviatedMonthName (month As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedMonthName(int month);" />
      <MemberSignature Language="F#" Value="member this.GetAbbreviatedMonthName : int -&gt; string" Usage="dateTimeFormatInfo.GetAbbreviatedMonthName month" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="month">검색할 월 이름을 나타내는 1부터 13까지의 정수입니다.</param>
        <summary>현재 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체와 연결된 문화권에 기반하여 지정된 월의 문화권별 약식 이름을 반환합니다.</summary>
        <returns><paramref name="month" />가 나타내는 월의 문화권별 약식 이름입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 불변 <xref:System.Globalization.DateTimeFormatInfo> 개체에서 문자열을 반환 하는이 메서드는 <xref:System.Globalization.GregorianCalendar> 개체입니다.  
  
|`month`|반환 값|  
|-------------|------------------|  
|1|"Jan"|  
|2|"Feb"|  
|3|"Mar"|  
|4|"Apr"|  
|5|"May"|  
|6|"Jun"|  
|7|"Jul"|  
|8|"Aug"|  
|9|"Sep"|  
|10|"Oct"|  
|11|"Nov"|  
|12|"Dec"|  
|13|""|  
  
 <xref:System.Globalization.Calendar> 개체는 13 개월 달력이 수용할 수 있습니다. 12 개월 달력에 대 한 13 월 이름으로 빈 문자열은 항상 반환 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="month" />가 1보다 작거나 13보다 큽니다.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllDateTimePatterns">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>날짜 및 시간 값의 형식을 지정할 수 있는 표준 패턴을 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public string[] GetAllDateTimePatterns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAllDateTimePatterns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllDateTimePatterns () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAllDateTimePatterns();" />
      <MemberSignature Language="F#" Value="member this.GetAllDateTimePatterns : unit -&gt; string[]" Usage="dateTimeFormatInfo.GetAllDateTimePatterns " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>날짜 및 시간 값의 형식을 지정할 수 있는 모든 표준 패턴을 반환합니다.</summary>
        <returns>날짜 및 시간 값의 형식을 지정할 수 있는 표준 패턴이 포함된 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 표준 형식 문자열에 해당 하는 모든 사용자 지정 형식 문자열을 포함 하는 배열을 반환 합니다. 참조 [표준 날짜 및 시간 형식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 표준 형식 문자열의 목록에 대 한 합니다.  
  
 반환 된 배열에는 사용자 지정 형식 문자열을 사용할 수는 <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> 서식 지정 작업에는 메서드. 그러나 이렇게 하면 날짜 및 시간 값의 문자열 표현을 반환 형식 지정 작업 없습니다 항상 수 성공적으로 구문 분석에 `Parse` 및 `TryParse` 메서드. 사용자 지정 서식 문자열을 반환한 가정할 수는 없습니다 따라서는 <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> 메서드는 날짜 및 시간 값 라운드트립를 사용할 수 있습니다. 다음 예제에서는 이 문제를 보여 줍니다. 검색을 <xref:System.Globalization.DateTimeFormatInfo> 이탈리아 (이탈리아어) 문화권의 서식 지정 정보를 포함 하는 개체입니다. 반환 된 배열의 각 사용자 지정 서식 문자열을 전달 하기 합니다 <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns> 메서드를는 <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> 날짜 및 시간의 문자열 표현을 만드는 방법. 이 예제를 호출 하 여이 값을 구문 분석 시도 <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> 메서드. 예제의 출력에서 볼 수 있듯이 날짜를 생성 하지 않는 사용자 지정 형식 문자열의 일부 및 시간 값이 성공적으로 라운드트립 합니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsex1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsex1.vb#1)]  
  
 다양 한 미리 정의 된 사용자 지정 형식으로에서 표현할 수 있는 시간과 날짜의 문자열 표현으로 구문 분석 하려면 다음 방법 중 하나를 호출 합니다.  
  
-   <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType>  
  
 반환 하는 배열에서 사용자 지정 형식 문자열을 <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> 메서드는 문화권의 현재 달력에 따라 달라 집니다는 <xref:System.Globalization.DateTimeFormatInfo> 개체 서식 지정 정보를 제공 합니다. 일정 변경 되 면이 메서드에서 반환 된 배열도 변경 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 날짜 및 시간 서식 문자열은 고정 문화권에 대 한 뿐만 아니라 생성 되는 경우 특정 날짜의 서식을 지정 서식 문자열을 사용 하는 결과 문자열을 표시 합니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsinv.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsinv.vb#3)]  
  
 이 예제에서는 인스턴스화합니다를 <xref:System.Globalization.DateTimeFormatInfo> 호출 하 여 고정 문화권을 나타내는 개체를 <xref:System.Globalization.DateTimeFormatInfo.%23ctor%2A> 생성자입니다. 검색할 수도 있습니다는 <xref:System.Globalization.DateTimeFormatInfo> 에서 고정 문화권을 나타내는 <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public string[] GetAllDateTimePatterns (char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAllDateTimePatterns(char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllDateTimePatterns (format As Char) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAllDateTimePatterns(char format);" />
      <MemberSignature Language="F#" Value="member this.GetAllDateTimePatterns : char -&gt; string[]" Usage="dateTimeFormatInfo.GetAllDateTimePatterns format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="format">표준 서식 문자열입니다.</param>
        <summary>지정된 표준 형식 문자열을 사용하여 날짜 및 시간 값의 형식을 지정할 수 있는 모든 패턴을 반환합니다.</summary>
        <returns>지정된 형식 문자열을 사용하여 날짜 및 시간의 형식을 지정할 수 있는 표준 패턴이 들어 있는 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 특정 표준 형식 문자열에 해당 하는 사용자 지정 서식 문자열을 포함 하는 배열을 반환 합니다. 참조 [표준 날짜 및 시간 형식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md) 표준 형식 문자열의 목록에 대 한 합니다.  
  
 반환 된 배열에는 사용자 지정 형식 문자열을 사용할 수는 <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> 서식 지정 작업에는 메서드. 그러나 이렇게 하면 날짜 및 시간 값의 문자열 표현을 반환 형식 지정 작업 없습니다 항상 수 성공적으로 구문 분석에 `Parse` 및 `TryParse` 메서드. 사용자 지정 서식 문자열을 반환한 가정할 수는 없습니다 따라서는 <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> 메서드는 날짜 및 시간 값 라운드트립를 사용할 수 있습니다. 다음 예제에서는 이 문제를 보여 줍니다. 검색을 <xref:System.Globalization.DateTimeFormatInfo> 러시아 (러시아어) 문화권의 서식 지정 정보를 포함 하는 개체입니다. 호출 된 <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%28System.Char%29> 각 표준 형식 문자열 및 다음 각 사용자 지정 서식 문자열을 반환된 된 배열에 전달에 대 한 메서드는 <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> 날짜 및 시간의 문자열 표현을 만드는 방법. 이 예제를 호출 하 여이 값을 구문 분석 시도 <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> 메서드. 예제의 출력에서 볼 수 있듯이 날짜를 생성 하지 않는 사용자 지정 형식 문자열의 일부 및 시간 값이 성공적으로 라운드트립 합니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsex2.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsex2.vb#2)]  
  
 다양 한 미리 정의 된 사용자 지정 형식으로에서 표현할 수 있는 시간과 날짜의 문자열 표현으로 구문 분석 하려면 다음 방법 중 하나를 호출 합니다.  
  
-   <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType>  
  
 반환 하는 배열에서 사용자 지정 형식 문자열을 <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> 메서드는 문화권의 현재 달력에 따라 달라 집니다는 <xref:System.Globalization.DateTimeFormatInfo> 개체 서식 지정 정보를 제공 합니다. 일정 변경 되 면이 메서드에서 반환 된 배열도 변경 됩니다.  
  
   
  
## Examples  
 다음 예에서는 현재 달력의 날짜 및 시간 패턴을 표시합니다.  
  
 [!code-cpp[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="format" />이 유효한 형식 문자열이 아닙니다.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayName">
      <MemberSignature Language="C#" Value="public string GetDayName (DayOfWeek dayofweek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetDayName(valuetype System.DayOfWeek dayofweek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetDayName(DayOfWeek dayofweek);" />
      <MemberSignature Language="F#" Value="member this.GetDayName : DayOfWeek -&gt; string" Usage="dateTimeFormatInfo.GetDayName dayofweek" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayofweek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayofweek"><see cref="T:System.DayOfWeek" /> 값입니다.</param>
        <summary>현재 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체와 연결된 문화권에 기반하여 지정된 요일의 문화권별 전체 이름을 반환합니다.</summary>
        <returns><paramref name="dayofweek" />로 나타나는 요일의 문화권별 전체 이름입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 불변 <xref:System.Globalization.DateTimeFormatInfo> 개체에서 문자열을 반환 하는이 메서드는 <xref:System.Globalization.GregorianCalendar> 개체입니다.  
  
|`dayofweek`|반환 값|  
|-----------------|------------------|  
|일요일|"Sunday"|  
|Monday|"Monday"|  
|화요일|"화요일"|  
|수요일|"Wednesday"|  
|목요일|"Thursday"|  
|금요일|"금요일"|  
|토요일|"Saturday"|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dayofweek" />는 유효한 <see cref="T:System.DayOfWeek" /> 값이 아닙니다.</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DayNames" />
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public int GetEra (string eraName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetEra(string eraName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEra (eraName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetEra(System::String ^ eraName);" />
      <MemberSignature Language="F#" Value="member this.GetEra : string -&gt; int" Usage="dateTimeFormatInfo.GetEra eraName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eraName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eraName">연대 이름이 들어 있는 문자열입니다.</param>
        <summary>지정된 서기를 나타내는 정수를 반환합니다.</summary>
        <returns><paramref name="eraName" />이 유효한 경우 해당 연대를 나타내는 정수이고, 그렇지 않으면 -1입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 연대 이름은 달력 고정된 소수점 또는 이벤트에서 말로 시간의 기간을 참조 하는 데 사용 하는 이름이입니다. 예를 들어, "기" 또는 "기" 그레고리오 력 연대가입니다.  
  
 과 비교 `eraName` 예를 들어 "기"는 대/소문자 "a.d."과 같습니다.  
  
 <xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> 경우에 약식된 연대의 이름에 마침표가 무시 합니다 <xref:System.Globalization.GregorianCalendar> 에서 선택한 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> 문화권 "기"를 사용 하 여 즉, "기" 연대 이름으로 "ad"과 같습니다.  
  
 <xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> 비교 `eraName` 반환한 전체 연대 이름이 <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> 반환한 연대의 약식된 이름을 가진 <xref:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName%2A>합니다.  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

## Examples  
 다음 예에서는 <xref:System.Globalization.DateTimeFormatInfo> 달력이 그레고리오 력이 및 문화권 연대 이름이 "기"를 사용 하는 경우에 연대의 이름에 문장 부호를 무시 합니다.  
  
 [!code-cpp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CPP/gregorian_getera.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CS/gregorian_getera.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/VB/gregorian_getera.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="eraName" />가 <see langword="null" />입니다.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName="GetEraName">
      <MemberSignature Language="C#" Value="public string GetEraName (int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetEraName(int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEraName (era As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetEraName(int era);" />
      <MemberSignature Language="F#" Value="member this.GetEraName : int -&gt; string" Usage="dateTimeFormatInfo.GetEraName era" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="era">연대를 나타내는 정수입니다.</param>
        <summary>지정된 연대 이름이 들어 있는 문자열을 반환합니다.</summary>
        <returns>연대 이름이 들어 있는 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 연대 이름은 달력 고정된 소수점 또는 이벤트에서 말로 시간의 기간을 참조 하는 데 사용 하는 이름이입니다. 예를 들어, "기" 또는 "기" 그레고리오 력 연대가입니다.  
  
 유효한 값은 `era` 에 나열 된는 <xref:System.Globalization.Calendar.Eras%2A> 적절 한 클래스의 속성에서 파생 된 <xref:System.Globalization.Calendar>합니다. 예를 들어: <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType> 이 구현에서 지원 되는 연대 목록을 표시 합니다.  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="era" />가 <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> 속성으로 지정된 달력의 유효한 연대를 나타내지 않는 경우</exception>
        <block subset="none" type="usage"><para>달력은 표현 하는 경우 <see cref="T:System.Globalization.TaiwanCalendar" /> 되지만 <see cref="P:System.Threading.Thread.CurrentCulture" /> "ZH-TW" 다음 아닙니다 <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />를 <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, 및 <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> 빈 문자열을 반환 ("").</para></block>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberSignature Language="F#" Value="abstract member GetFormat : Type -&gt; obj&#xA;override this.GetFormat : Type -&gt; obj" Usage="dateTimeFormatInfo.GetFormat formatType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormatProvider.GetFormat(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType">필요한 형식 지정 서비스의 형식입니다.</param>
        <summary>날짜 및 시간 형식 지정 서비스를 제공하는 지정된 형식의 개체를 반환합니다.</summary>
        <returns><paramref name="formatType" />이 현재 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 형식과 같은 경우 현재 개체이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Format(String, IFormatProvider)` 이 메서드를 호출 하는 기본 데이터 형식에서 지 원하는 메서드에 때 현재 <xref:System.Globalization.DateTimeFormatInfo> 변수로 전달 되는 개체는 <xref:System.IFormatProvider> 매개 변수. 이 메서드는 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>를 구현합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="M:System.Globalization.NumberFormatInfo.GetFormat(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo GetInstance (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.DateTimeFormatInfo GetInstance(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetInstance(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (provider As IFormatProvider) As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::DateTimeFormatInfo ^ GetInstance(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member GetInstance : IFormatProvider -&gt; System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.GetInstance provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><see cref="T:System.IFormatProvider" /> 개체를 가져오는 <see cref="T:System.Globalization.DateTimeFormatInfo" />입니다.  
  
또는 
 <see cref="P:System.Globalization.DateTimeFormatInfo.CurrentInfo" />를 가져오려면 <see langword="null" />입니다.</param>
        <summary>지정된 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체와 연결된 <see cref="T:System.IFormatProvider" /> 개체를 반환합니다.</summary>
        <returns><see cref="T:System.Globalization.DateTimeFormatInfo" />에 연결된 <see cref="T:System.IFormatProvider" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 사용 합니다 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 메서드의 `formatProvider` 를 사용 하 여는 <xref:System.Globalization.DateTimeFormatInfo> 개체를 `Type` 매개 변수입니다. 경우 `formatProvider` 됩니다 `null` 이거나 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 반환 `null`,이 메서드가 반환 <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A>합니다.  
  
 응용 프로그램을 가져올 수는 <xref:System.Globalization.DateTimeFormatInfo> 다음 방법 중 하나를 사용 하 여 특정 문화권에 대 한 개체:  
  
-   <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 속성  
  
-   합니다 <xref:System.Globalization.DateTimeFormatInfo.GetInstance%2A> 메서드를 위치 `provider` 는 <xref:System.Globalization.CultureInfo> 개체입니다.  
  
 <xref:System.Globalization.DateTimeFormatInfo> 고정 문화권에 대해서만 특정 문화권에 대 한 아닌 이나에 중립 문화권 개체를 만들 수 있습니다.  
  
 고정 문화권과 특정 문화권 중립 문화권에 대 한 자세한 내용은 참조는 <xref:System.Globalization.CultureInfo> 설명 클래스입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthName">
      <MemberSignature Language="C#" Value="public string GetMonthName (int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetMonthName(int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMonthName (month As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetMonthName(int month);" />
      <MemberSignature Language="F#" Value="member this.GetMonthName : int -&gt; string" Usage="dateTimeFormatInfo.GetMonthName month" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="month">검색할 월 이름을 나타내는 1부터 13까지의 정수입니다.</param>
        <summary>현재 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체와 연결된 문화권에 기반하여 지정된 월의 문화권별 전체 이름을 반환합니다.</summary>
        <returns><paramref name="month" />가 나타내는 월의 문화권별 전체 이름입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 불변 <xref:System.Globalization.DateTimeFormatInfo> 개체에서 문자열을 반환 하는이 메서드는 <xref:System.Globalization.GregorianCalendar> 개체입니다.  
  
|`month`|반환 값|  
|-------------|------------------|  
|1|"January"|  
|2|"February"|  
|3|"March"|  
|4|"April"|  
|5|"May"|  
|6|"June"|  
|7|"July"|  
|8|"August"|  
|9|"September"|  
|10|"October"|  
|11|"November"|  
|12|"December"|  
|13|""|  
  
 <xref:System.Globalization.Calendar> 개체는 13 개월 달력이 수용할 수 있습니다. 12 개월 달력에 대 한 13 월 이름으로 빈 문자열은 항상 반환 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="month" />가 1보다 작거나 13보다 큽니다.</exception>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
      </Docs>
    </Member>
    <Member MemberName="GetShortestDayName">
      <MemberSignature Language="C#" Value="public string GetShortestDayName (DayOfWeek dayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetShortestDayName(valuetype System.DayOfWeek dayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetShortestDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetShortestDayName(DayOfWeek dayOfWeek);" />
      <MemberSignature Language="F#" Value="member this.GetShortestDayName : DayOfWeek -&gt; string" Usage="dateTimeFormatInfo.GetShortestDayName dayOfWeek" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayOfWeek" Type="System.DayOfWeek" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="dayOfWeek"><see cref="T:System.DayOfWeek" /> 값 중 하나입니다.</param>
        <summary>현재 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체와 연결된 지정된 요일의 가장 짧은 약식 요일 이름을 가져옵니다.</summary>
        <returns><paramref name="dayOfWeek" /> 매개 변수에 해당하는 주의 약식 이름입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 여러 메서드 및 날짜 및 시간 서식 패턴을, 네이티브 달력 이름을 전체 및 약식 월과 요일 이름을 지정 하는 속성을 보여 줍니다.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dayOfWeek" />는 <see cref="T:System.DayOfWeek" /> 열거형의 값이 아닙니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="InvariantInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo InvariantInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.DateTimeFormatInfo InvariantInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantInfo As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::DateTimeFormatInfo ^ InvariantInfo { System::Globalization::DateTimeFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantInfo : System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.InvariantInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>문화권 독립(고정)적인 기본 읽기 전용 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체를 가져옵니다.</summary>
        <value>문화권 독립(고정)적인 읽기 전용 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 현재 문화권에 관계 없이,이 속성이 변경 되지 않습니다. 이 인해 고정 문화권의 <xref:System.Globalization.DateTimeFormatInfo> 개체 구문 분석 및 서식 지정 작업은 여러 문화는 데이터에 일관 되 고 문화권에 관계 없이 결과 만드는 데 사용할 수 있습니다. 예를 들어 여러 문화권의 날짜 및 시간 데이터를 문자열 형식에 유지 될 경우 포맷할 수 있습니다 사용 하 여는 <xref:System.Globalization.DateTimeFormatInfo> 고정 문화권의 개체 저장 합니다. 고정 문화권을 사용 하 여 분석 한 다음 <xref:System.Globalization.DateTimeFormatInfo> 개체입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Globalization.DateTimeFormatInfo.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체가 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)" />
      </Docs>
    </Member>
    <Member MemberName="LongDatePattern">
      <MemberSignature Language="C#" Value="public string LongDatePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LongDatePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.LongDatePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property LongDatePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LongDatePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LongDatePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.LongDatePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>긴 날짜 값의 사용자 지정 형식 문자열을 가져오거나 설정합니다.</summary>
        <value>긴 날짜 값의 사용자 지정 형식 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> 속성에 대 한 호출에서 반환 되는 날짜 문자열의 문화권별 형식을 정의 합니다 <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> 및 <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> 메서드 복합 형식으로 된 문자열 "D" 표준 서식 문자열을 제공 합니다. 다음 예제에서는 다음 간의 관계를 보여 줍니다: "D" 표준 서식 문자열을 사용자 지정 형식에서 반환 된 문자열을 <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> 속성과 날짜의 문화권별 표현 합니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/longdatepattern1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/longdatepattern1.vb#2)]  
  
 참조 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md) "dddd, dd MMMM yyyy" 같은 사용자 지정 형식 문자열을 생성 하려면 결합 될 수 있는 개별 사용자 지정 형식 지정자에 대 한 합니다.  
  
 날짜 구분 기호 자리 표시자를 사용 하는 대신 정확한 문자열을 자세한 날짜 패턴에는 날짜 구분 기호를 설정 해야 합니다. 예를 들어, MM-DD-yyyy 패턴을 가져오려면 "MM DD yyyy"을 자세한 날짜 패턴을 설정 합니다.  
  
 달력의 변동에 문화권에서 사용 하는 경우이 속성의 값을 변경할 수 있습니다. 예를 들어, 다음 예제에서는 하는 방법을 <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> 의 속성을 <xref:System.Globalization.CultureInfo> 아랍어 (시리아) 문화권을 나타내는 개체를 변경 하는 경우는 <xref:System.Globalization.Calendar> 문화권 변경으로 사용 되는 개체입니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/longdatepattern2.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/longdatepattern2.vb#3)]  
  
   
  
## Examples  
 다음 예제에서는 값을 표시 합니다 <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> 몇 가지 문화권에 대 한 속성입니다.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CPP/dtfi_longdatepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/dtfi_longdatepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/dtfi_longdatepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">표준 날짜 및 시간 형식 문자열</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">사용자 지정 날짜 및 시간 형식 문자열</related>
      </Docs>
    </Member>
    <Member MemberName="LongTimePattern">
      <MemberSignature Language="C#" Value="public string LongTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LongTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.LongTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property LongTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LongTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LongTimePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.LongTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>긴 시간 값의 사용자 지정 형식 문자열을 가져오거나 설정합니다.</summary>
        <value>자세한 시간 값의 서식 패턴입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> 속성에 대 한 호출에서 반환 되는 날짜 문자열의 문화권별 형식을 정의 합니다 <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> 및 <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> 메서드 복합 형식으로 된 문자열 "T" 표준 서식 문자열을 제공 합니다.  
  
 시간 구분 기호 자리 표시자를 사용 하는 대신 정확한 문자열 긴 시간 패턴에는 시간 구분 기호를 설정 하는 것이 좋습니다. 예를 들어 패턴 h-mm-ss를 얻으려면 "h-m m-s"을 자세한 날짜 패턴을 설정 합니다.  
  
   
  
## Examples  
 다음 예제에서는 값을 표시 <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> 몇 가지 문화권에 대 한 합니다.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/CPP/dtfi_longtimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/CS/dtfi_longtimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/VB/dtfi_longtimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">표준 날짜 및 시간 형식 문자열</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">사용자 지정 날짜 및 시간 형식 문자열</related>
      </Docs>
    </Member>
    <Member MemberName="MonthDayPattern">
      <MemberSignature Language="C#" Value="public string MonthDayPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MonthDayPattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthDayPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthDayPattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MonthDayPattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MonthDayPattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.MonthDayPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>월 및 일 값에 대한 사용자 지정 서식 문자열을 가져오거나 설정합니다.</summary>
        <value>월 및 일 값에 대한 사용자 지정 서식 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A> 속성에 대 한 호출에서 반환 되는 날짜 문자열의 문화권별 형식을 정의 합니다 <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> 및 <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> 메서드 복합 형식으로 된 문자열 "m" 및 "M" 표준 서식 문자열을 제공 합니다.  
  
 이 속성에 영향을 줍니다의 값을 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 속성 변경 합니다.  
  
 월 및 일의 날짜 구분 기호 자리 표시자를 사용 하는 대신 정확한 문자열을 패턴에는 날짜 구분 기호를 설정 하는 것이 좋습니다. 예를 들어: MM: 패턴을 얻으려면, month 및 day 패턴이 "MM-DD"을 설정 합니다.  
  
   
  
## Examples  
 다음 예제에서는 값을 표시 <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A> 몇 가지 문화권에 대 한 합니다.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/CPP/dtfi_monthdaypattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/CS/dtfi_monthdaypattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/VB/dtfi_monthdaypattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">표준 날짜 및 시간 형식 문자열</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">사용자 지정 날짜 및 시간 형식 문자열</related>
      </Docs>
    </Member>
    <Member MemberName="MonthGenitiveNames">
      <MemberSignature Language="C#" Value="public string[] MonthGenitiveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] MonthGenitiveNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthGenitiveNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ MonthGenitiveNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MonthGenitiveNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체와 연결된 월 이름의 문자열 배열을 가져오거나 설정합니다.</summary>
        <value>월 이름의 문자열 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일부 언어에서 월 이름 날짜의 일부인 소유격 경우에 표시 됩니다. 예를 들어 날짜 "RU-RU" 또는 러시아어 (러시아) 문화권 구성 일 및 1 Января 같이 소유격 월 이름 됩니다.  
  
 이 속성을 설정 하는 경우 배열의 1 차원 이어야 하며 정확히 13 개 요소가 있어야 합니다. <xref:System.Globalization.Calendar> 개체는 13 개월 달력이 수용합니다. 첫 번째 요소 (인덱스 0에 있는 요소) 정의한 연도의 첫 번째 월을 나타내는 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 속성입니다. 설정 하는 경우는 <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A> 속성을 설정 해야 합니다 <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 여러 메서드 및 날짜 및 시간 서식 패턴을, 네이티브 달력 이름을 전체 및 약식 월과 요일 이름을 지정 하는 속성을 보여 줍니다.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">set 작업에서 배열이 다차원이거나 길이가 정확히 13이 아닙니다.</exception>
        <exception cref="T:System.ArgumentNullException">set 작업에서 배열 또는 해당 요소 중 하나가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">set 작업에서 현재 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체가 읽기 전용인 경우</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <Member MemberName="MonthNames">
      <MemberSignature Language="C#" Value="public string[] MonthNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] MonthNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ MonthNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MonthNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.MonthNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>문화권별 전체 월 이름이 들어 있는 <see cref="T:System.String" /> 형식의 1차원 배열을 가져오거나 설정합니다.</summary>
        <value>문화권별 전체 월 이름이 들어 있는 <see cref="T:System.String" /> 형식의 1차원 배열입니다. 12개월 달력에서 배열의 13번째 요소는 빈 문자열입니다. <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> 배열에는 "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" 및 ""가 들어 있습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 설정 하는 경우 배열의 1 차원 이어야 하며 정확히 13 개 요소가 있어야 합니다. <xref:System.Globalization.Calendar> 개체는 13 개월 달력이 수용합니다. 첫 번째 요소 (인덱스 0에 있는 요소) 정의한 연도의 첫 번째 월을 나타내는 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 속성입니다.  
  
 설정 하는 경우는 <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> 속성을 설정 해야 합니다 <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A> 속성입니다.  
  
 사용자 지정 패턴 "MMMM" 형식 패턴을 포함 하는 경우 <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> 의 값을 표시 <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> "MMMM" 형식 패턴에 대신 합니다.  
  
 이 속성에 영향을 줍니다의 값을 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 속성 변경 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.ArgumentException">속성이 다차원이거나 길이가 정확히 13이 아닌 배열로 설정됩니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NativeCalendarName">
      <MemberSignature Language="C#" Value="public string NativeCalendarName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NativeCalendarName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NativeCalendarName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NativeCalendarName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NativeCalendarName : string" Usage="System.Globalization.DateTimeFormatInfo.NativeCalendarName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체와 연결된 달력의 네이티브 이름을 가져옵니다.</summary>
        <value>현재 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체와 관련된 문화권에서 사용되는 달력의 네이티브 이름을 사용할 수 있으면 이 네이티브 이름이고, 네이티브 달력 이름을 사용할 수 없으면 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 여러 메서드 및 날짜 및 시간 서식 패턴을, 네이티브 달력 이름을 전체 및 약식 월과 요일 이름을 지정 하는 속성을 보여 줍니다.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>경우 <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> 은 <see cref="T:System.Globalization.TaiwanCalendar" /> 있지만 <see cref="P:System.Threading.Thread.CurrentCulture" /> "ZH-TW" 다음 아닙니다 <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, 및 <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> 빈 문자열을 반환 ("").</para></block>
      </Docs>
    </Member>
    <Member MemberName="PMDesignator">
      <MemberSignature Language="C#" Value="public string PMDesignator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PMDesignator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.PMDesignator" />
      <MemberSignature Language="VB.NET" Value="Public Property PMDesignator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PMDesignator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PMDesignator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.PMDesignator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>"PM(post meridiem)"(오후) 시간에 대한 문자열 지정자를 가져오거나 설정합니다.</summary>
        <value>"PM(post meridiem)"(오후) 시간에 대한 문자열 지정자입니다. <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> 기본값은 "PM"입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> 속성에 대 한 12시: 00 (정오) 까지의 모든 시간을 사용 23:59:59.999 합니다.  
  
 사용자 지정 패턴에 형식 패턴 "tt" 이며 시간 정오에 <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> 의 값을 표시 <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> 형식 패턴에 "tt" 대신 합니다. 사용자 지정 패턴의 형식 패턴 "t"의 첫 번째 문자만 포함 하는 경우 <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> 표시 됩니다. 응용 프로그램 "tt" AM 및 PM을 구분 하는 데 필요한 해당 언어를 사용 해야 합니다. 예를 들어, 일본어 AM/PM 지정자의 경우 첫 번째 문자가 아니라 두 번째 문자가 서로 다릅니다.  
  
 PM 지정자를 사용 하지 않는 문화권에 대 한이 속성은 빈 문자열을 반환 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AMDesignator" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo ReadOnly (System.Globalization.DateTimeFormatInfo dtfi);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.DateTimeFormatInfo ReadOnly(class System.Globalization.DateTimeFormatInfo dtfi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (dtfi As DateTimeFormatInfo) As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::DateTimeFormatInfo ^ ReadOnly(System::Globalization::DateTimeFormatInfo ^ dtfi);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Globalization.DateTimeFormatInfo -&gt; System.Globalization.DateTimeFormatInfo" Usage="System.Globalization.DateTimeFormatInfo.ReadOnly dtfi" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dtfi" Type="System.Globalization.DateTimeFormatInfo" />
      </Parameters>
      <Docs>
        <param name="dtfi">래핑할 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체입니다.</param>
        <summary>읽기 전용 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 래퍼를 반환합니다.</summary>
        <returns>읽기 전용 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 래퍼입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 래퍼를 `dtfi`입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dtfi" />가 <see langword="null" />입니다.</exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="RFC1123Pattern">
      <MemberSignature Language="C#" Value="public string RFC1123Pattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RFC1123Pattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.RFC1123Pattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RFC1123Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RFC1123Pattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RFC1123Pattern : string" Usage="System.Globalization.DateTimeFormatInfo.RFC1123Pattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>IETF(Internet Engineering Task Force) RFC(Request for Comments) 1123 사양을 기반으로 하는 시간 값에 대한 사용자 지정 서식 문자열을 가져옵니다.</summary>
        <value>IETF RFC 1123 사양을 기반으로 하는 시간 값의 사용자 지정 서식 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A> 속성에 대 한 호출에서 반환 되는 날짜 문자열의 문화권별 형식을 정의 합니다 <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> 및 <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> 메서드 복합 형식으로 문자열을 "r" 및 "R" 표준 서식 문자열을 제공 합니다.  
  
 RFC1123 패턴은 정의 된 표준을 반영 하 고 속성이 읽기 전용입니다. 따라서 것 항상 문화권에 관계 없이 동일 합니다. 사용자 지정 서식 문자열은 "ddd, dd MMM yyyy HH':'mm':'ss 'GMT'"입니다.  
  
   
  
## Examples  
 다음 예제에서는 몇 가지 문화권 RFC1123Pattern의 값을 표시 합니다.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/CPP/dtfi_rfc1123pattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/CS/dtfi_rfc1123pattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/VB/dtfi_rfc1123pattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">표준 날짜 및 시간 형식 문자열</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">사용자 지정 날짜 및 시간 형식 문자열</related>
      </Docs>
    </Member>
    <Member MemberName="SetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public void SetAllDateTimePatterns (string[] patterns, char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAllDateTimePatterns(string[] patterns, char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAllDateTimePatterns (patterns As String(), format As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAllDateTimePatterns(cli::array &lt;System::String ^&gt; ^ patterns, char format);" />
      <MemberSignature Language="F#" Value="member this.SetAllDateTimePatterns : string[] * char -&gt; unit" Usage="dateTimeFormatInfo.SetAllDateTimePatterns (patterns, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patterns" Type="System.String[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.Char" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="patterns">사용자 지정 형식 문자열의 배열입니다.</param>
        <param name="format"><paramref name="patterns" /> 매개 변수에서 지정한 사용자 지정 형식 문자열과 관련된 표준 형식 문자열입니다.</param>
        <summary>지정된 표준 형식 문자열에 해당하는 사용자 지정 날짜 및 시간 형식 문자열을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> 메서드 특정 표준 날짜 및 시간 서식 문자열에 해당 하는 사용자 지정 서식 문자열을 정의 합니다. 표준 날짜 및 시간 서식 문자열에서 지정한 날짜 및 시간 형식 지정 메서드가 포함을 호출 하는 경우 `format`에서 첫 번째 요소를 사용 하는 메서드는 `patterns` 결과 문자열의 형식을 정의 하는 배열입니다.  
  
> [!WARNING]
>  합니다 `Parse` 하 고 `TryParse` 메서드 수행에서 모든 문자열을 완벽 하 게 반복 되지 않습니다 `patterns` 날짜 및 시간의 문자열 표현 구문 분석 하는 경우. 날짜 및 시간 문자열을 구문 분석 작업을 특정 형식에 필요한 경우에 유효한 형식의 배열을 전달 해야 합니다 <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>, <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>를 <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>, 또는 <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType> 메서드.  
  
 "d", "D", "t", "T" 및 "y" 또는 "Y" 표준 날짜에 해당 하는 사용자 지정 서식 문자열 및 시간 서식 문자열을 정의할 수 있습니다. 경우 값 `format` 는 다른 표준 형식 문자열을 <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> 메서드가 throw는 <xref:System.ArgumentException>합니다.  
  
 사용자 지정 날짜 및 시간 형식 문자열 날짜 구분 기호를 포함 하는 경우 특정 날짜 구분 기호로 "/" 사용자 지정 형식 지정자를 대체 하는 구문 분석 하거나 서식 지정 메서드에 의존 하는 대신 날짜 구분 기호를 명시적으로 지정 해야 합니다. 예를 들어, MM-DD-yyyy 패턴을 가져오려면 "MM DD yyyy" 패턴을 사용 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Globalization.CultureInfo> 개체 문화권 "EN-US" (영어-미국)를 나타내는 배열을 "Y" 표준 서식 문자열을 사용 하 여 날짜 및 시간 문자열 구문 분석 하는 데 사용 합니다. 사용 하 여는 <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> "Y" 표준 서식 문자열 및 다음 배열의 날짜 및 시간 문자열 구문 분석 하려고 사용 하 여 새 사용자 지정 형식 문자열을 연결 하는 방법입니다. 예제의 출력에서에서 새 사용자 지정 형식 문자열 구문 분석 및 서식 지정 작업에서 사용 되는 하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.setalldatetimepatterns/cs/setalldatetimepatterns.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.setalldatetimepatterns/vb/setalldatetimepatterns.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="patterns" />는 <see langword="null" /> 또는 길이가 0인 배열입니다.  
  
또는 
 <paramref name="format" />이 유효한 표준 형식 문자열이 아니거나 패턴을 설정할 수 없는 표준 형식 문자열입니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="patterns" />에는 값이 <see langword="null" />인 배열 요소가 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">이 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체가 읽기 전용인 경우</exception>
        <altmember cref="Overload:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">표준 날짜 및 시간 형식 문자열</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">사용자 지정 날짜 및 시간 형식 문자열</related>
      </Docs>
    </Member>
    <Member MemberName="ShortDatePattern">
      <MemberSignature Language="C#" Value="public string ShortDatePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortDatePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortDatePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortDatePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShortDatePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShortDatePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.ShortDatePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>짧은 날짜 값의 사용자 지정 형식 문자열을 가져오거나 설정합니다.</summary>
        <value>짧은 날짜 값의 사용자 지정 형식 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> 속성에 대 한 호출에서 반환 되는 날짜 문자열의 문화권별 형식을 정의 합니다 <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> 및 <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> 메서드 복합 형식으로 된 문자열 "d" 표준 서식 문자열을 제공 합니다.  
  
 이 속성에 영향을 줍니다의 값을 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 속성 변경 합니다.  
  
   
  
## Examples  
 다음 예제에서는 값을 표시 합니다 <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> 사용 하 여 속성 및 값을 날짜의 서식을 <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> 몇 가지 문화권에 대 한 속성입니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortDatePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/CS/dtfi_shortdatepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortDatePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/VB/dtfi_shortdatepattern.vb#1)]  
  
 다음 예제를 수정 합니다 <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> 의 속성을 <xref:System.Globalization.DateTimeFormatInfo> 영어 (미국) 문화권의 서식 규칙을 나타내는 개체입니다. 또한 표시 날짜 값을 두 번 먼저 원래 <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> 속성 및 새 속성 값을 반영 하도록 합니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortDatePattern#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/CS/shortdatepattern1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortDatePattern#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/VB/shortdatepattern1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">표준 날짜 및 시간 형식 문자열</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">사용자 지정 날짜 및 시간 형식 문자열</related>
      </Docs>
    </Member>
    <Member MemberName="ShortestDayNames">
      <MemberSignature Language="C#" Value="public string[] ShortestDayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ShortestDayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortestDayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortestDayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ ShortestDayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShortestDayNames : string[] with get, set" Usage="System.Globalization.DateTimeFormatInfo.ShortestDayNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체와 연결된 가장 짧은 고유 약식 요일 이름의 문자열 배열을 가져오거나 설정합니다.</summary>
        <value>요일 이름의 문자열 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 여러 메서드 및 날짜 및 시간 서식 패턴을, 네이티브 달력 이름을 전체 및 약식 월과 요일 이름을 지정 하는 속성을 보여 줍니다.  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">설정 작업에서 배열에 정확히 7개의 요소가 없습니다.</exception>
        <exception cref="T:System.ArgumentNullException">set 작업에서 값 배열 또는 값 배열의 요소 중 하나가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">set 작업에서 현재 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체가 읽기 전용인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ShortTimePattern">
      <MemberSignature Language="C#" Value="public string ShortTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShortTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShortTimePattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.ShortTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>짧은 시간 값의 사용자 지정 형식 문자열을 가져오거나 설정합니다.</summary>
        <value>짧은 시간 값의 사용자 지정 형식 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> 속성에 대 한 호출에서 반환 되는 날짜 문자열의 문화권별 형식을 정의 합니다 <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> 및 <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> 메서드 복합 형식으로 된 문자열 "t" 표준 서식 문자열을 제공 합니다.  
  
 시간 구분 기호 자리 표시자를 사용 하는 대신 정확한 문자열을 짧은 시간 패턴에는 시간 구분 기호를 설정 하는 것이 좋습니다. 예를 들어 패턴 h-mm-ss를 얻으려면 "h-m m-s"에 짧은 시간 패턴을 설정 합니다.  
  
   
  
## Examples  
 다음 예제에서는 값을 표시 <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> 몇 가지 문화권에 대 한 합니다.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/CPP/dtfi_shorttimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/CS/dtfi_shorttimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/VB/dtfi_shorttimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">표준 날짜 및 시간 형식 문자열</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">사용자 지정 날짜 및 시간 형식 문자열</related>
      </Docs>
    </Member>
    <Member MemberName="SortableDateTimePattern">
      <MemberSignature Language="C#" Value="public string SortableDateTimePattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortableDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortableDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortableDateTimePattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortableDateTimePattern : string" Usage="System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>정렬 가능한 날짜 및 시간 값에 대한 사용자 지정 서식 문자열을 가져옵니다.</summary>
        <value>정렬 가능한 날짜 및 시간 값에 대한 사용자 지정 서식 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> 속성에 대 한 호출에서 반환 되는 날짜 문자열의 문화권별 형식을 정의 합니다 <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> 및 <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> 메서드 복합 형식으로 된 문자열 "s" 표준 서식 문자열을 제공 합니다.  
  
 반환한 형식 문자열을 <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> 속성은 정의 된 표준 (ISO 8601)을 반영 하며 해당 속성은 읽기 전용입니다. 따라서 것 항상 문화권에 관계 없이 동일 합니다. 사용자 지정 서식 문자열은 "yyyy'-'MM'-'dd'T'HH':'mm':'ss"입니다.  
  
   
  
## Examples  
 다음 예제에서는 값을 표시 <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> 몇 가지 문화권에 대 한 합니다.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/CPP/dtfi_sortabledatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/CS/dtfi_sortabledatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/VB/dtfi_sortabledatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">표준 날짜 및 시간 형식 문자열</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">사용자 지정 날짜 및 시간 형식 문자열</related>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeSeparator">
      <MemberSignature Language="C#" Value="public string TimeSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TimeSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TimeSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TimeSeparator : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.TimeSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>시간의 구성 요소 즉, 시, 분, 초를 구분하는 문자열을 가져오거나 설정합니다.</summary>
        <value>시간의 구성 요소를 구분하는 문자열입니다. <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> 기본입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자 지정 패턴의 형식 패턴을 포함 하는 경우 ":", <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> 의 값을 표시 <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A> 대신는 ":" 형식 패턴에서입니다.  
  
 파생 되는 시간 구분 기호는 <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> 속성입니다. 간단히 말해 시간 구분 기호를 설정 또는 긴 시간을 시간 구분 기호 자리 표시자를 사용 하는 대신 정확한 문자열 패턴 하는 것이 좋습니다. 예를 들어 패턴 h-mm-ss를 얻으려면 "h-mm-ss" 하는 패턴을 설정 합니다. 이 이렇게 할 수와 같은 패턴 설정 "h'h ' mm 'ss의 ' 여기" (3 시간 36 m 12s) 여러 유형의 구분 기호를 포함 하는 합니다. <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A> 시간 구분 기호를 대체 하는 문자열을 정의 하는 속성 (":" 사용자 지정 날짜 및 시간 형식 지정자) 서식 지정 작업의 결과 문자열에 있습니다. 또한 구문 분석 작업에서 시간 구분 기호 문자열을 정의합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Globalization.CultureInfo> 개체 EN-US 문화권의 경우 해당 날짜 구분 기호를 변경 ".", "t", "T", "F", "f", "G" 및 "g" 표준 서식 문자열을 사용 하 여 날짜를 표시 합니다.  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.TimeSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.timeseparator/cs/timeseparatorex.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.TimeSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.timeseparator/vb/timeseparatorex.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">사용자 지정 날짜 및 시간 형식 문자열</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">표준 날짜 및 시간 형식 문자열</related>
      </Docs>
    </Member>
    <Member MemberName="UniversalSortableDateTimePattern">
      <MemberSignature Language="C#" Value="public string UniversalSortableDateTimePattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniversalSortableDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UniversalSortableDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UniversalSortableDateTimePattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniversalSortableDateTimePattern : string" Usage="System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ISO 8601에서 정의된 정렬 가능한 유니버설 날짜 및 시간 문자열에 대한 사용자 지정 서식 문자열을 가져옵니다.</summary>
        <value>정렬 가능한 유니버설 날짜 및 시간 문자열에 대한 사용자 지정 서식 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> 속성에 대 한 호출에서 반환 되는 날짜 문자열의 형식을 정의 합니다 <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> 및 <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> 메서드 문자열을 복합 형식에 따라 "u" 표준 서식 문자열을 제공 합니다. 끝 세계시 지정자 "Z"를 사용 하 여 정렬 가능한 순서로 날짜 및 시간을 표시 하려면 사용할 수 있습니다. 형식은 연도, 월, 일, 시간, 분 및 초를 앞에 오는 0을 사용 하기 때문에 정렬 가능한입니다. 사용자 지정 형식 문자열 ("yyyy '-' MM'-' dd HH': 'mm': 'ss'Z") culture 나 형식 공급자에 관계 없이 동일 합니다.  
  
 반환한 형식 문자열을 <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> 속성은 정의 된 표준을 반영 하며 해당 속성은 읽기 전용입니다. 따라서 것 항상 문화권에 관계 없이 동일 합니다. 사용자 지정 서식 문자열은 "yyyy'-'MM'-'dd HH':'mm':'ss'Z"입니다.  
  
   
  
## Examples  
 다음 예제에서는 값을 표시 <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> 몇 가지 문화권에 대 한 합니다.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/CPP/dtfi_universalsortabledatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/CS/dtfi_universalsortabledatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/VB/dtfi_universalsortabledatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">표준 DateTime 형식 문자열</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">사용자 지정 날짜 및 시간 형식 문자열</related>
      </Docs>
    </Member>
    <Member MemberName="YearMonthPattern">
      <MemberSignature Language="C#" Value="public string YearMonthPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string YearMonthPattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.YearMonthPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property YearMonthPattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ YearMonthPattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.YearMonthPattern : string with get, set" Usage="System.Globalization.DateTimeFormatInfo.YearMonthPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>연도 및 월 값에 대한 사용자 지정 서식 문자열을 가져오거나 설정합니다.</summary>
        <value>연도 및 월 값에 대한 사용자 지정 서식 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> 속성에 대 한 호출에서 반환 되는 날짜 문자열의 문화권별 형식을 정의 합니다 <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> 및 <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> 메서드 복합 형식으로 된 문자열 "y" 및 "Y" 표준 서식 문자열을 제공 합니다.  
  
 이 속성에 영향을 줍니다의 값을 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 속성 변경 합니다.  
  
 날짜 구분 기호 자리 표시자를 사용 하는 대신 정확한 문자열을 연도 월 패턴에는 날짜 구분 기호를 설정 하는 것이 좋습니다. 예를 들어, MM-yyyy 패턴을 얻으려면에서 "MM-yyyy" 연도 월 패턴을 설정 합니다.  
  
   
  
## Examples  
 다음 예제에서는 값을 표시 <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> 몇 가지 문화권에 대 한 합니다.  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/CPP/dtfi_yearmonthpattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/CS/dtfi_yearmonthpattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/VB/dtfi_yearmonthpattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">표준 날짜 및 시간 형식 문자열</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">사용자 지정 날짜 및 시간 형식 문자열</related>
      </Docs>
    </Member>
  </Members>
</Type>
