<Type Name="NumberFormatInfo" FullName="System.Globalization.NumberFormatInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fdf061b2c2fe21c546a3a5eff63f17302c177d53" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53391500" /></Metadata><TypeSignature Language="C#" Value="public sealed class NumberFormatInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit NumberFormatInfo extends System.Object implements class System.ICloneable, class System.IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.NumberFormatInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NumberFormatInfo&#xA;Implements ICloneable, IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class NumberFormatInfo sealed : ICloneable, IFormatProvider" />
  <TypeSignature Language="F#" Value="type NumberFormatInfo = class&#xA;    interface ICloneable&#xA;    interface IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormatProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>숫자 값을 서식 지정하고 구문 분석하는 문화권별 정보를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo> 클래스 형식을 지정 하 고 숫자 값을 구문 분석할 때 사용 되는 문화권별 정보를 포함 합니다. 이 정보는 통화 기호, 소수점 기호, 그룹 구분 기호 및 기호 양수 기호와 음수 기호를 포함합니다.  
  
-   [NumberFormatInfo 개체 인스턴스화](#Instantiating)  
  
    -   [현재 문화권에 대 한](#Instantiating_Current)  
  
    -   [고정 문화권](#Instantiating_Invariant)  
  
    -   [특정 문화권에 대 한](#Instantiating_Specific)  
  
    -   [중립 문화권에 대 한](#Instantiating_Neutral)  
  
-   [NumberFormatInfo 및 dynamic data](#dynamic)  
  
-   [IFormatProvider, NumberFormatInfo, 및 숫자 서식 지정](#formatProvider)  
  
-   [형식 문자열 및 NumberFormatInfo 속성](#properties)  
  
-   [NumberFormatInfo 속성 수정](#modifying)  
  
    -   [통화 기호 및 패턴을 수정합니다.](#currency)  
  
    -   [주민 등록 번호 서식 지정](#id)  
  
-   [숫자 문자열 구문 분석](#parsing)  
  
    -   [사용자 문자열을 구문 분석](#ParseUser)  
  
    -   [직렬화 및 역직렬화 숫자 데이터](#ParseSerial)  
  
<a name="Instantiating"></a>   
## <a name="instantiating-a-numberformatinfo-object"></a>NumberFormatInfo 개체 인스턴스화  
 인스턴스화할 수 있습니다는 <xref:System.Globalization.NumberFormatInfo> 현재 문화권, 고정 문화권을 특정 문화권 또는 중립 문화권의 서식 규칙을 나타내는 개체입니다.  
  
<a name="Instantiating_Current"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-the-current-culture"></a>현재 문화권에 대 한 NumberFormatInfo 개체 인스턴스화  
 인스턴스화할 수 있습니다는 <xref:System.Globalization.NumberFormatInfo> 다음 방법 중 하나에 현재 스레드 문화권에 대 한 개체입니다. 각각의 경우 반환 된 <xref:System.Globalization.NumberFormatInfo> 개체가 읽기 전용입니다.  
  
-   검색 하 여는 <xref:System.Globalization.CultureInfo> 에서 현재 스레드 문화권을 나타내는 개체를 <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> 속성을 검색 하는 <xref:System.Globalization.CultureInfo> 에서 개체 해당 <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> 속성.  
  
-   검색 하 여는 <xref:System.Globalization.NumberFormatInfo> 에서 반환 된 개체를 `static` (`Shared` Visual Basic에서) <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> 속성입니다.  
  
-   호출 하 여 합니다 <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> 메서드는 <xref:System.Globalization.CultureInfo> 현재 문화권을 나타내는 개체입니다.  
  
 다음 예제에서는 이러한 세 가지 방법을 사용 하 여 <xref:System.Globalization.NumberFormatInfo> 현재 문화권의 서식 규칙을 나타내는 개체입니다. 또한 변수의 값을 검색 합니다 <xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A> 속성을 각 개체는 읽기 전용으로 보여 줍니다.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate1.vb#1)]  
  
 쓰기 가능한 만들면 <xref:System.Globalization.NumberFormatInfo> 다음 방법 중 하나에 현재 스레드 문화권의 규칙을 나타내는 개체입니다.  
  
-   검색 하 여는 <xref:System.Globalization.NumberFormatInfo> 이전 코드 예제에서 설명 하 고 호출 방법 중 하나에서 개체를 <xref:System.Globalization.NumberFormatInfo.Clone%2A> 메서드는 반환 된 <xref:System.Globalization.NumberFormatInfo> 개체입니다. 이 원래 복사본을 만듭니다 <xref:System.Globalization.NumberFormatInfo> 개체는 제외 하 고 해당 <xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A> 속성은 `false`합니다.  
  
-   호출 하 여는 <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> 메서드를를 <xref:System.Globalization.CultureInfo> 현재 문화권을 나타내는 개체를 사용 하 여 해당 <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> 검색할 속성은 <xref:System.Globalization.NumberFormatInfo> 개체입니다.  
  
 다음 예제를 인스턴스화하는 두 가지는 <xref:System.Globalization.NumberFormatInfo> 개체의 값을 표시 및 해당 <xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A> 속성 개체는 읽기 전용으로 설명 하기 위해.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate2.cs#2)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate2.vb#2)]  
  
 Windows 운영 체제의 일부를 재정의할 사용자를 허용 하는지 확인 합니다 <xref:System.Globalization.NumberFormatInfo> 숫자 서식 지정 및 구문 분석을 통해 작업에 사용 된 속성 값을 **국가 및 언어** 제어판 항목입니다. 예를 들어, 문화권이 영어 (미국) 인 사용자는 $1.1의 기본값 대신 1.1 USD로 통화 값을 표시 하도록 선택할 수 있습니다. <xref:System.Globalization.NumberFormatInfo> 설명 하는 방법에서 검색 한 개체가 이전에 모두 이러한 사용자 재정의 반영 합니다. 이 필요 없는 경우 만들 수 있습니다는 <xref:System.Globalization.NumberFormatInfo> 사용자 재정의 반영 되지 않는 개체 (읽기/쓰기 이기도 읽기 전용 대신)를 호출 하 여는 <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> 생성자 및 값을 제공 `false` 에 대 한는 `useUserOverride` 인수입니다. 다음 예에서는 현재 문화권이 영어 (미국) 인 및 해당 통화 기호 USD로 $ 기본값에서 변경 되었습니다 시스템에 대 한 예시를 제공 합니다.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate3.cs#3)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate3.vb#3)]  
  
 경우는 <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType> 속성이 `true`, 속성 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>를 <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType>, 및 <xref:System.Globalization.CultureInfo.TextInfo%2A?displayProperty=nameWithType> 사용자 설정에서 검색할 수도 있습니다. 사용자 설정을 사용 하 여 연결 된 문화권을 사용 하 여 호환 되지 않습니다 합니다 <xref:System.Globalization.CultureInfo> 개체 (선택한 달력 중 하나가 아닌 달력으로 나열 하는 경우에 예를 들어를 <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> 속성), 메서드의 결과 속성의 값은 정의 되지 않았습니다.  
  
<a name="Instantiating_Invariant"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-the-invariant-culture"></a>고정 문화권에 대 한 NumberFormatInfo 개체 인스턴스화  
 고정 문화권을 문화권을 구분 하는 문화권을 나타냅니다. 특정 영어권 국가/지역에는 없지만 영어에 기반 합니다. 특정 문화권의 데이터는 동적일 수 있습니다 하 고 새 문화권 규칙 또는 사용자 기본 설정에 맞게 변경 될 수 있지만 고정 문화권의 데이터는 변경 되지 않습니다. <xref:System.Globalization.NumberFormatInfo> 문화권에 따라 서식 지정 작업 결과에 문자열을 받지 않아야에 고정 문화권의 서식 규칙을 나타내는 개체를 사용할 수 있습니다.  
  
 인스턴스화할 수 있습니다는 <xref:System.Globalization.NumberFormatInfo> 다음과 같은 방법으로 고정 문화권의 서식 규칙을 나타내는 개체입니다.  
  
-   값을 검색 하 여 <xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A> 속성입니다. 반환 된 <xref:System.Globalization.NumberFormatInfo> 개체가 읽기 전용입니다.  
  
-   값을 검색 하는 <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> 속성을를 <xref:System.Globalization.CultureInfo> 에서 반환 되는 개체는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> 속성입니다. 반환 된 <xref:System.Globalization.NumberFormatInfo> 개체가 읽기 전용입니다.  
  
-   매개 변수가 없는 호출 하 여 <xref:System.Globalization.NumberFormatInfo.%23ctor%2A> 클래스 생성자입니다. 반환 된 <xref:System.Globalization.NumberFormatInfo> 개체 읽기/쓰기입니다.  
  
 다음 예제에서는 이러한 각 메서드를 사용 하 여 인스턴스화하는 <xref:System.Globalization.NumberFormatInfo> 고정 문화권을 나타내는 개체입니다. 읽기 전용 개체 인지 여부를 나타냅니다.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate4.cs#4)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate4.vb#4)]  
  
<a name="Instantiating_Specific"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-a-specific-culture"></a>특정 문화권에 대 한 NumberFormatInfo 개체 인스턴스화  
 특정 문화권에는 특정 국가/지역에서 사용 되는 언어를 나타냅니다. 예를 들어, EN-US, 미국에서 사용 되는 영어를 나타내는 특정 문화권 이며 EN-CA 음성 캐나다의 영어 언어를 나타내는 특정 문화권입니다. 인스턴스화할 수 있습니다는 <xref:System.Globalization.NumberFormatInfo> 다음과 같은 방법으로 특정 문화권의 서식 규칙을 나타내는 개체입니다.  
  
-   호출 하 여 합니다 <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29?displayProperty=nameWithType> 메서드와 반환된 된 값을 검색할 <xref:System.Globalization.CultureInfo> 개체의 <xref:System.Globalization.CultureInfo.NumberFormat%2A> 속성입니다. 반환 된 <xref:System.Globalization.NumberFormatInfo> 개체가 읽기 전용입니다.  
  
-   전달 하 여는 <xref:System.Globalization.CultureInfo> 문화권을 나타내는 개체입니다 <xref:System.Globalization.NumberFormatInfo> static 검색 하려는 개체 <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> 메서드. 반환 된 <xref:System.Globalization.NumberFormatInfo> 개체 읽기/쓰기입니다.  
  
-   호출 하 여 합니다 <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> 메서드와 반환된 된 값을 검색할 <xref:System.Globalization.CultureInfo> 개체의 <xref:System.Globalization.CultureInfo.NumberFormat%2A> 속성입니다. 반환 된 <xref:System.Globalization.NumberFormatInfo> 개체 읽기/쓰기입니다.  
  
-   하나를 호출 하는 <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType> 클래스 생성자 및 반환된 된 값을 검색 하 <xref:System.Globalization.CultureInfo> 개체의 <xref:System.Globalization.CultureInfo.NumberFormat%2A> 속성입니다. 반환 된 <xref:System.Globalization.NumberFormatInfo> 개체 읽기/쓰기입니다.  
  
 다음 예제에서는 이러한 네 가지 방법으로 만들 수는 <xref:System.Globalization.NumberFormatInfo> 인도네시아어 (인도네시아) 문화권의 서식 규칙을 반영 하는 개체입니다. 또한 각 개체가 읽기 전용인 지 여부를 나타냅니다.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate5.cs#5)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate5.vb#5)]  
  
<a name="Instantiating_Neutral"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-a-neutral-culture"></a>중립 문화권에 대 한 NumberFormatInfo 개체 인스턴스화  
 중립 문화권 문화권 또는 언어 국가/지역의 관계를 나타냅니다. 일반적으로 하나 이상의 특정 문화권의 부모가 됩니다. 예를 들어, fr 프랑스어 및 FR-FR 문화권의 부모에 대 한 중립 문화권입니다. 만든를 <xref:System.Globalization.NumberFormatInfo> 사용자가 만든 동일한 방식으로 중립 문화권의 서식 규칙을 나타내는 개체를 <xref:System.Globalization.NumberFormatInfo> 특정 문화권의 서식 규칙을 나타내는 개체입니다.  
  
> [!NOTE]
>  에 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] 및 이전 버전을 검색 하는 동안를 <xref:System.Globalization.NumberFormatInfo> 중립 문화권의 서식 규칙을 반영 하는 개체를 throw를 <xref:System.NotSupportedException> 예외입니다.  
  
 그러나 특정 국가/지역 독립적 이기 때문에 중립 문화권에 culture 별 서식 지정 정보를 없습니다. 채우기 대신를 <xref:System.Globalization.NumberFormatInfo> 반환 하는.NET Framework 제네릭 값 개체를 <xref:System.Globalization.NumberFormatInfo> 개체는 특정 형식 지정 규칙 문화권을 반영 하는 중립 문화권의 자식입니다. 예를 들어 합니다 <xref:System.Globalization.NumberFormatInfo> EN-US 문화권의 서식 규칙을 반영 하는 en 중립 문화권에 대 한 개체 및 <xref:System.Globalization.NumberFormatInfo> FR-FR 문화권의 서식 규칙을 반영 하는 fr 문화권 개체입니다.  
  
 각 중립 문화권을 나타내는 특정 문화권의 서식 규칙을 확인 하려면 다음과 같은 코드를 사용할 수 있습니다.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate6c.cs#6)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate6c.vb#6)]  
  
<a name="dynamic"></a>   
## <a name="numberformatinfo-and-dynamic-data"></a>NumberFormatInfo 및 dynamic data  
 제공 하는 숫자 값의 서식을 지정 하는 것에 대 한 culture 별 데이터를 <xref:System.Globalization.NumberFormatInfo> 클래스는 제공한 문화권 데이터와 마찬가지로 동적는 <xref:System.Globalization.CultureInfo> 클래스입니다. 에 대 한 값의 안정성에 대 한 어떠한가 정도 만들면 안 <xref:System.Globalization.NumberFormatInfo> 연결 된 개체를 특정 <xref:System.Globalization.CultureInfo> 개체입니다. 고정 문화권 및 연결 된 제공한 데이터만 <xref:System.Globalization.NumberFormatInfo> 개체 안정적입니다. 다른 데이터는 애플리케이션 세션 간에 또는 다음과 같은 이유로 단일 세션 내 에서도 변경할 수 있습니다.  
  
-   **시스템 업데이트 합니다.** 시간에 따른 통화 기호, 통화 형식 등 문화권 기본 설정을 변경합니다. Windows 업데이트 변경 되어이 경우는 <xref:System.Globalization.NumberFormatInfo> 특정 문화권에 대 한 속성 값입니다.  
  
-   **대체 문화권입니다.** <xref:System.Globalization.CultureAndRegionInfoBuilder> 클래스는 기존 문화권의 데이터를 바꾸는 데 사용할 수 있습니다.  
  
-   **속성 값이 변경 연계 합니다.** 다양 한 문화권 관련 속성 인해는 런타임 시 변경할 수 있습니다 <xref:System.Globalization.NumberFormatInfo> 데이터를 변경 합니다. 예를 들어, 사용자 동작을 통해 또는 프로그래밍 방식으로 현재 문화권을 변경할 수 있습니다. 이 경우는 <xref:System.Globalization.NumberFormatInfo> 에서 반환 된 개체는 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> 현재 문화권과 연결 된 개체 속성 변경 합니다.  
  
-   **사용자 기본 설정입니다.** 애플리케이션의 사용자는 제어판에서 국가 및 언어 옵션을 통해 현재 시스템 문화권과 연결 된 값의 일부를 재정의할 수 있습니다. 예를 들어, 사용자는 다양 한 통화 기호 또는 다른 소수 구분 기호를 선택할 수 있습니다. 경우는 <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType> 속성이 `true` (기본값)의 속성을 <xref:System.Globalization.NumberFormatInfo> 사용자 설정에서 개체를 검색할 수도 있습니다.  
  
 .NET Framework 2.0의 모든 사용자를 재정의할 수 있는 속성을 사용 하 여 시작을 <xref:System.Globalization.NumberFormatInfo> 개체는 개체를 만들 때 초기화 됩니다. 여전히 불일치가 발생할 수 있으므로 개체 작성 하지 않으며 사용자 재정의 과정이 원자성 관련 값 개체를 만드는 동안 변경 될 수 있습니다. 그러나 이러한 불일치는 거의 이어야 합니다.  
  
 사용자 재정의에 반영 되 고 있는지 여부를 제어할 수 있습니다. <xref:System.Globalization.NumberFormatInfo> 현재 스레드 문화권과 같은 문화권을 나타내는 개체입니다. 다음 표에 나와 있는 방법을 <xref:System.Globalization.NumberFormatInfo> 개체를 검색할 수 있습니다 및 결과 개체 사용자 재정의 반영 하는지 여부를 나타냅니다.  
  
|CultureInfo 및 NumberFormatInfo 개체의 원본|사용자 재정의 반영합니다.|  
|-------------------------------------------------------|-----------------------------|  
|`CultureInfo.CurrentCulture.NumberFormat` 속성|예|  
|<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType> 속성|예|  
|<xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> 메서드|예|  
|<xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=nameWithType> 메서드|아니요|  
|<xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> 생성자|예|  
|<xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> 생성자|값에 따라 `useUserOverride` 매개 변수|  
  
 사용 하는 경우 사용자 재정의가 없는 중요 한 이유가 없는 고려해 야 합니다 <xref:System.Globalization.NumberFormatInfo> 서식을 지정 하 고 사용자 입력을 구문 분석 하거나 숫자 데이터를 표시 하도록 클라이언트 애플리케이션에서 개체입니다. 서버 애플리케이션 또는 무인된 애플리케이션에 대 한 사용자 재정의 하지 고려해 야 합니다. 그러나 사용 중인 경우는 <xref:System.Globalization.NumberFormatInfo> 개체를 명시적으로 하나 또는 암시적으로 문자열 형식의 숫자 데이터를 유지 하기 위해 수행 해야 사용 하 여를 <xref:System.Globalization.NumberFormatInfo> 고정 문화권의 서식 규칙을 반영 하는 개체를 지정 해야는 문화권에 관계 없이 사용 하는 사용자 지정 숫자 서식 문자열입니다.  
  
<a name="formatProvider"></a>   
## <a name="iformatprovider-numberformatinfo-and-numeric-formatting"></a>IFormatProvider, NumberFormatInfo, 및 숫자 서식 지정  
 <xref:System.Globalization.NumberFormatInfo> 개체는 암시적 또는 명시적으로 모든 숫자 서식 지정 작업입니다. 다음 메서드를 호출 하는 다음과 같습니다.  
  
-   모든 숫자와 같은 서식 지정 메서드에 <xref:System.Int32.ToString%2A?displayProperty=nameWithType>, <xref:System.Double.ToString%2A?displayProperty=nameWithType>, 및 <xref:System.Convert.ToString%28System.Int32%29?displayProperty=nameWithType>합니다.  
  
-   주요 복합 형식 지정 메서드에 <xref:System.String.Format%2A?displayProperty=nameWithType>합니다.  
  
-   와 같은 서식 지정 메서드에 다른 복합 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> 고 <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>입니다.  
  
 모든 숫자 형식 지정 작업을 수행의 사용을 <xref:System.IFormatProvider> 구현 합니다. 합니다 <xref:System.IFormatProvider> 단일 메서드를 포함 하는 인터페이스 <xref:System.IFormatProvider.GetFormat%28System.Type%29>합니다. 이 전달 되는 콜백 메서드는 <xref:System.Type> 서식 지정 정보를 제공 하는 데 필요한 형식을 나타내는 개체입니다. 이 메서드는 해당 형식의 인스턴스를 반환 하는 데 또는 `null`이면 형식의 인스턴스를 제공할 수 없습니다. .NET Framework에서는 두 개의 <xref:System.IFormatProvider> 숫자 서식 지정에 대 한 구현을:  
  
-   <xref:System.Globalization.CultureInfo> 클래스는 특정 문화권 (또는 특정 국가/지역에서 특정 언어)를 나타냅니다. 숫자 작업 서식 지정에 <xref:System.Globalization.CultureInfo.GetFormat%2A?displayProperty=nameWithType> 메서드가 반환 되는 합니다 <xref:System.Globalization.NumberFormatInfo> 개체와 연결 된 해당 <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> 속성.  
  
-   <xref:System.Globalization.NumberFormatInfo> 해당 연결 된 문화권의 서식 지정 규칙에 대 한 정보를 제공 하는 클래스입니다. <xref:System.Globalization.NumberFormatInfo.GetFormat%2A?displayProperty=nameWithType> 메서드 자체의 인스턴스를 반환 합니다.  
  
 경우는 <xref:System.IFormatProvider> 구현이 형식 지정 메서드를 명시적으로 제공 하지는 <xref:System.Globalization.CultureInfo> 에서 반환 된 개체는 <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> 현재 스레드 문화권을 나타내는 속성을 사용 합니다.  
  
 다음 예제에서는 관계를 보여 줍니다.는 <xref:System.IFormatProvider> 인터페이스 및 <xref:System.Globalization.NumberFormatInfo> 사용자 지정을 정의 하 여 서식 지정 작업 클래스 <xref:System.IFormatProvider> 구현 합니다. 해당 <xref:System.IFormatProvider.GetFormat%2A> 메서드 서식 지정 작업을 요청한 개체의 형식 이름을 표시 합니다. 인터페이스를 요청 하는 경우는 <xref:System.Globalization.NumberFormatInfo> 개체를이 메서드는 제공 된 <xref:System.Globalization.NumberFormatInfo> 현재 스레드 문화권에 대 한 개체입니다. 예제에서 출력으로는 <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> 메서드 요청을 <xref:System.Globalization.NumberFormatInfo> 반면 서식 지정 정보를 제공 하는 개체를 <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> 메서드 요청 <xref:System.Globalization.NumberFormatInfo> 하 고 <xref:System.Globalization.DateTimeFormatInfo> 개체 뿐만 <xref:System.ICustomFormatter> 구현입니다.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/formatprovider1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/formatprovider1.vb#1)]  
  
 경우는 <xref:System.IFormatProvider> 구현 숫자 메서드 호출에서 메서드 호출을 서식 지정에 명시적으로 제공 되지 않았습니다 합니다 `CultureInfo.CurrentCulture.GetFormat` 반환 하는 메서드는 <xref:System.Globalization.NumberFormatInfo> 현재 스레드 문화권에 해당 하는 개체입니다.  
  
<a name="properties"></a>   
## <a name="format-strings-and-numberformatinfo-properties"></a>형식 문자열 및 NumberFormatInfo 속성  
 모든 서식 지정 작업에서에서 결과 문자열을 생성 하는 표준 또는 사용자 지정 숫자 서식 문자열을 사용 합니다. 경우에 따라 결과 문자열을 생성 하는 서식 문자열과 사용은 다음 예제와 같이 명시적. 이 코드는 호출을 <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> 변환 하는 방법을 <xref:System.Decimal> EN-US 문화권의 서식 규칙을 사용 하 여 다양 한 문자열 표현의 숫자 값입니다.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/properties1.cs#2)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/properties1.vb#2)]  
  
 다른 경우에는 서식 문자열 사용 암시적입니다. 기본 또는 매개 변수가 없는 다음 메서드 호출의 예를 들어 <xref:System.Decimal.ToString?displayProperty=nameWithType> 값, 메서드는 <xref:System.Decimal> 인스턴스 일반 ("G") 서식 지정자 및이 경우에 현재 문화권의 규칙을 사용 하 여 형식이 EN-US 문화권입니다.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/properties2.cs#3)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/properties2.vb#3)]  
  
 각 표준 숫자 서식 문자열에 하나 이상을 사용 하 여 <xref:System.Globalization.NumberFormatInfo> 패턴 또는 결과 문자열에 사용 된 기호를 결정 하는 속성입니다. 마찬가지로, 각 사용자 지정 숫자 서식 지정자 "0" 및 "#" 기호를 삽입 하 여 정의 된 결과 문자열에서 제외 하 고 <xref:System.Globalization.NumberFormatInfo> 속성입니다. 다음 표에서 표준 및 사용자 지정 숫자 서식 지정자 및 이와 관련 된 <xref:System.Globalization.NumberFormatInfo> 속성입니다.  특정 문화권에 대 한 결과 문자열의 모양을 변경 하려면 합니다 [NumberFormatInfo 수정 속성](#modifying) 섹션입니다. 이러한 사용에 대 한 세부 정보 형식 지정자, 참조 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)합니다.  
  
|형식 지정자|연결된 속성|  
|----------------------|---------------------------|  
|"C" 또는 "c" (통화 서식 지정자)|<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A>에 소수 자릿수의 기본 수를 정의 합니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>에 소수 구분 기호를 정의 합니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>수천 대의 그룹 정의를 구분 합니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A>정수 계열 그룹의 크기를 정의 합니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A>에서 음수 통화 값의 패턴을 정의할 수 있습니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>를 양수 통화 값의 패턴을 정의할 수 있습니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A>에서 통화 기호를 정의 합니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>에서 음수 기호를 정의 합니다.|  
|"D" 또는 "d" (10 진수 형식 지정자)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>에서 음수 기호를 정의 합니다.|  
|"E" 또는 "e" (지 수 백오프 또는 과학적 형식 지정자)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>가 수 및 지 수에 음수 기호를 정의 합니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>에 소수 구분 기호를 정의 합니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>에 지 수에서 양수 부호 기호를 정의할 수 있습니다.|  
|"F" 또는 "f" (고정 소수점 서식 지정자)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>에서 음수 기호를 정의 합니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A>에 소수 자릿수의 기본 수를 정의 합니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>에 소수 구분 기호를 정의 합니다.|  
|"G" 또는 "g" (일반 서식 지정자)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>에서 음수 기호를 정의 합니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>에 소수 구분 기호를 정의 합니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>에 지 수 형식으로 결과 문자열에 대 한 양수 부호 기호를 정의 합니다.|  
|"N" 또는 "n" (숫자 형식 지정자)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>에서 음수 기호를 정의 합니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A>에 소수 자릿수의 기본 수를 정의 합니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>에 소수 구분 기호를 정의 합니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>에서 그룹 (천 단위) 구분 기호를 정의 합니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A>을 그룹의 정수 자릿수를 정의 합니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A>을 음수 값의 서식을 정의 합니다.|  
|"P" 또는 "p" (% 형식 지정자)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>에서 음수 기호를 정의 합니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A>에 소수 자릿수의 기본 수를 정의 합니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A>에 소수 구분 기호를 정의 합니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A>그룹 구분 기호를 정의 합니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A>을 그룹의 정수 자릿수를 정의 합니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentNegativePattern%2A>백분율 기호 및 음수 값의 음수 기호 위치를 정의 합니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentPositivePattern%2A>를 양수 값의 백분율 기호 위치를 정의 합니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A>백분율 기호를 정의 합니다.|  
|"R" 또는 "r" (라운드트립 형식 지정자)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>에서 음수 기호를 정의 합니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>에 소수 구분 기호를 정의 합니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>지 수에서 양수 부호 기호를 정의할 수 있습니다.|  
|"X" 또는 "x" (16 진수 형식 지정자)|없음|  
|"." (소수점 사용자 지정 형식 지정자)|<xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>에 소수 구분 기호를 정의 합니다.|  
|"," (그룹 구분 기호 사용자 지정 형식 지정자)|<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>에서 그룹 (천 단위) 구분 기호를 정의 합니다.|  
|"%" (백분율 자리 표시자 사용자 지정 형식 지정자)|<xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A>백분율 기호를 정의 합니다.|  
|"‰" (단위: 분 율 자리 표시자 사용자 지정 형식 지정자)|<xref:System.Globalization.NumberFormatInfo.PerMilleSymbol%2A>를 정의 하는 천 분 율 기호로 합니다.|  
|"E" (지 수 표기법 사용자 지정 형식 지정자)|<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>가 수 및 지 수에 음수 기호를 정의 합니다.<br /><br /> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>에 지 수에서 양수 부호 기호를 정의할 수 있습니다.|  
  
 합니다 <xref:System.Globalization.NumberFormatInfo> 클래스에 포함 되어는 <xref:System.Globalization.NumberFormatInfo.NativeDigits%2A> 특정 문화권에서 사용 되는 기본 10 진수를 지정 하는 속성입니다. 그러나 속성은 작업 서식 지정에 사용 되지 않습니다. 기본 라틴어 숫자 0 (U + 0030)-9 (U + 0039)는 결과 문자열에 사용 됩니다. 또한 <xref:System.Single> 및 <xref:System.Double> 의 값 `NaN`, `PositiveInfinity`, 및 `NegativeInfinity`, 결과 문자열에서 정의 된 기호만 구성 되어 합니다 <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, 및 <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A> 속성 각각.  
  
<a name="modifying"></a>   
## <a name="modifying-numberformatinfo-properties"></a>NumberFormatInfo 속성 수정  
 속성을 수정할 수는 <xref:System.Globalization.NumberFormatInfo> 숫자 형식 지정 작업에서에서 생성 된 결과 문자열을 사용자 지정 하는 개체입니다. 가상 하드 디스크 파일에 대한 중요 정보를 제공하려면  
  
1.  읽기/쓰기 복사본 만들기를 <xref:System.Globalization.NumberFormatInfo> 개체를 수정 하려면 해당 형식 지정 규칙입니다. 자세한 내용은 참조는 [NumberFormatInfo 개체 인스턴스화](#Instantiating) 섹션입니다.  
  
2.  속성 또는 원하는 결과 문자열을 생성 하는 데 사용 되는 속성을 수정 합니다. 서식 지정 방법을 메서드 사용에 대 한 자세한 <xref:System.Globalization.NumberFormatInfo> 결과 문자열을 정의 하는 속성 참조를 [서식 문자열 및 NumberFormatInfo 속성](#properties) 섹션입니다.  
  
3.  사용자 지정을 사용 하 여 <xref:System.Globalization.NumberFormatInfo> 개체는 <xref:System.IFormatProvider> 서식 지정 메서드에 대 한 호출에 인수입니다.  
  
> [!NOTE]
>  애플리케이션이 시작 될 때마다는 문화권의 속성 값을 동적으로 수정 하는 대신 사용할 수는 <xref:System.Globalization.CultureAndRegionInfoBuilder> (고유 이름을 가진 및 기존 문화권을 보완 하는 문화권) 사용자 지정 문화권 또는 대체를 정의 하는 클래스 (하나는 특정 문화권 대신 사용 되는) 문화권입니다.  
  
 다음 섹션에서는 몇 가지 예제를 제공합니다.  
  
<a name="currency"></a>   
### <a name="modifying-the-currency-symbol-and-pattern"></a>통화 기호 및 패턴을 수정합니다.  
 다음 예제에서는 수정 된 <xref:System.Globalization.NumberFormatInfo> EN-US 문화권의 서식 규칙을 나타내는 개체입니다. ISO 4217 통화 기호를 할당 합니다 <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A> 속성 및 통화 기호 뒤에 공백, 숫자 값으로 구성 된 통화 값에 대 한 패턴을 정의 합니다.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Customize#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/cs/customize_currency1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.Customize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/vb/customize_currency1.vb#1)]  
  
<a name="id"></a>   
### <a name="formatting-a-national-identification-number"></a>주민 등록 번호 서식 지정  
 많은 주민 등록 번호 숫자로 구성 하 고 있으므로 쉽게 서식을 지정할 수의 속성을 수정 하 여를 <xref:System.Globalization.NumberFormatInfo> 개체입니다. 다음과 같이 정렬 하는 9 자리 숫자의 미국에서 사회 보장 번호를 구성 하는 예를 들어: `XXX-XX-XXXX`합니다. 다음 예제에서는 정수 값을 적절 하 게 서식을 설정 하는 대로 주민 등록 번호가 저장 되도록 가정 합니다.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Customize#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/cs/customize_ssn1.cs#2)]
 [!code-vb[System.Globalization.NumberFormatInfo.Customize#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/vb/customize_ssn1.vb#2)]  
  
<a name="parsing"></a>   
## <a name="parsing-numeric-strings"></a>숫자 문자열 구문 분석  
 구문 분석에서는 숫자의 문자열 표현을 숫자로 변환 합니다. 두 오버 로드 된 구문 분석 메서드를 포함 하는.NET Framework의 각 숫자 형식: `Parse` 고 `TryParse`입니다. `Parse` 메서드는 문자열을 숫자로 변환 및 변환에 실패 하면 예외를 throw 합니다. `TryParse` 메서드는 문자열을 숫자로 변환, 번호를 할당를 `out` 인수와 반환을 <xref:System.Boolean> 변환에 성공 했는지 여부를 나타내는 값입니다.  
  
 구문 분석 메서드를 암시적 또는 명시적으로 사용 된 <xref:System.Globalization.NumberStyles> 열거형 값을 구문 분석 작업이 성공 하려면이 있는 스타일 요소 (예: 그룹 구분 기호, 소수 구분 기호 또는 통화 기호) 하는 문자열에 나타날 수 있습니다. 경우는 <xref:System.Globalization.NumberStyles> 값이 기본값은 메서드 호출에서 제공 하지는 <xref:System.Globalization.NumberStyles> 포함 하는 값을 <xref:System.Globalization.NumberStyles.Float> 및 <xref:System.Globalization.NumberStyles.AllowThousands> 그룹 기호, 소수 구분 기호, 음수 기호를 구문 분석된 된 문자열에 포함 될 수 있음을 지정 하는 플래그 공백 문자 또는 지 수 표기법으로 숫자의 문자열 표현을 수 있으며합니다.  
  
 구문 분석 메서드를 암시적으로 또는 명시적으로 사용 된 <xref:System.Globalization.NumberFormatInfo> 특정 기호 정의 패턴으로 개체를 구문 분석 될 문자열에서 발생할 수 있습니다. 경우는 <xref:System.Globalization.NumberFormatInfo> 개체가 제공 되지 않으면 기본값은는 <xref:System.Globalization.NumberFormatInfo> 현재 스레드 문화권에 대 한 합니다. 구문 분석 하는 방법에 대 한 자세한 내용은 참조는 개별 구문 분석 메서드 같은 <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType>, <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>를 <xref:System.Int64.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>를 <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>를 <xref:System.Double.TryParse%28System.String%2CSystem.Double%40%29?displayProperty=nameWithType>, 및 <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29?displayProperty=nameWithType>합니다.  
  
 다음 예제에서는 문자열 구문 분석의 문화권 구분 특성을 보여 줍니다. 천 단위를 포함 하는 문자열을 구문 분석 하려고 EN-US, FR-FR 및 고정 문화권의 규칙을 사용 하 여 구분 합니다. FR-FR 문화권을 구문 분석에 실패 하면 소수 구분 기호 그룹 구분 기호를 마침표와 쉼표를 포함 하는 문자열 및 문자열로 그룹 구분 기호로 white space 및 소수 구분 기호로 쉼표를 사용 하 여 EN-US 및 고정 문화권에서 구문 분석에 실패 합니다.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/parse1.cs#4)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/parse1.vb#4)]  
  
 일반적으로 구문 분석 하는 작업은 두 가지 상황에서 발생 합니다.  
  
-   작업으로 사용자 입력을 숫자 값으로 변환 하도록 디자인 된 합니다.  
  
-   디자인 된 작업으로; 숫자 값을 라운드트립 하려면 즉, 이전에 문자열로 serialize 된 숫자 값을 deserialize 하는 데 있습니다.  
  
 다음 섹션에서는 이러한 두 작업에 자세히 설명합니다.  
  
<a name="ParseUser"></a>   
### <a name="parsing-user-strings"></a>사용자 문자열을 구문 분석  
 항상 인스턴스화해야 사용자가 입력 숫자 문자열 구문 분석 하는 경우는 <xref:System.Globalization.NumberFormatInfo> 사용자의 문화권 설정을 반영 하는 개체입니다. 인스턴스화하는 방법에 대 한 자세한를 <xref:System.Globalization.NumberFormatInfo> 의 사용자 지정을 반영 하는 개체 참조를 [NumberFormatInfo 및 dynamic data](#dynamic) 섹션입니다.  
  
 다음 예제에서는 사용자 문화권 설정을 반영 하는 구문 분석 작업을 하지 않는 사이의 차이점을 보여 줍니다. 이 경우 기본 시스템 문화권은 EN-US, 하지만 사용자가 정의한 "," 소수점 기호로 및 "." 제어판에서 그룹 구분 기호로 **국가 및 언어**합니다. 일반적으로 이러한 기호는 기본 EN-US 문화권에서 반전 됩니다. 때 사용자 사용자 설정을 반영 하는 문자열을 입력 하 고 문자열에서 구문 분석 되는 <xref:System.Globalization.NumberFormatInfo> 도 사용자 설정 (재정의)를 반영 하는 개체 구문 분석 작업이 올바른 결과 반환 합니다. 그러나 경우는 문자열은 구문 분석 하 여는 <xref:System.Globalization.NumberFormatInfo> 표준 EN-US 문화권 설정을 반영 하는 개체 그룹 구분 기호에 대 한 쉼표로 기호를 실수 하 고 잘못 된 결과 반환 합니다.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/parseuser1.cs#5)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/parseuser1.vb#5)]  
  
<a name="ParseSerial"></a>   
### <a name="serializing-and-deserializing-numeric-data"></a>직렬화 및 역직렬화 숫자 데이터  
 숫자 데이터 문자열 형식으로 직렬화 하 고 나중에 deserialize 및 구문 분석을 하는 경우 문자열을 생성 하 고 고정 문화권의 규칙을 사용 하 여 구문 분석 해야 합니다. 서식 지정 및 구문 분석 작업을 특정 문화권의 규칙을 반영 하지 해야 합니다. 문화권별 설정을 사용 하는 경우 데이터의 이식성은 엄격 하 게 제한 합니다. culture 별 설정 되어 있는 serialize 된 스레드와 동일한 스레드에서 정상적으로 deserialize 할 수 있습니다. 경우에 따라 데이터에도 수 없습니다.이 즉 serialize 된 동일한 시스템에 성공적으로 deserialize 할 수 있습니다.  
  
 다음 예제에서는이 원칙을 위반 하는 경우 어떻게 하는 방법을 보여 줍니다. 배열에 부동 소수점 값은 현재 스레드의 EN-US 문화권의 문화권 관련 설정을 사용 하는 경우 문자열로 변환 됩니다. 데이터는 EN-GB 문화권의 문화권 관련 설정을 사용 하는 스레드에 의해 구문 분석 합니다. 이 경우 각 구문 분석 작업이 성공 하면 되지만 데이터 않습니다 왕복 성공적으로 데이터 손상이 발생 합니다. 다른 경우에는 구문 분석 작업 실패할 수 있습니다 및 <xref:System.FormatException> 예외가 throw 될 수 있습니다.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/parsepersisted.cs#6)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/parsepersisted.vb#6)]  
  
   
  
## Examples  
 다음 예제에서는 검색 하는 방법을 보여 줍니다는 <xref:System.Globalization.NumberFormatInfo> 해당 하는 것에 대 한 개체 <xref:System.Globalization.CultureInfo> 개체 및 특정 문화권에 대 한 정보를 서식 지정 하는 쿼리 수를 검색된 된 개체를 사용 합니다.  
  
 [!code-cpp[NumberFormatInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberFormatInfo/cpp/NumberFormatInfo.cpp#1)]
 [!code-csharp[NumberFormatInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberFormatInfo/CS/NumberFormatInfo.cs#1)]
 [!code-vb[NumberFormatInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberFormatInfo/vb/numberformatinfo.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="T:System.IFormatProvider" />
    <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md">사용자 지정 숫자 형식 문자열</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NumberFormatInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NumberFormatInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>문화권 독립(고정)적인 <see cref="T:System.Globalization.NumberFormatInfo" /> 클래스의 쓰기 가능한 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 애플리케이션 사용자 정의 형식 지정 해야 하는 경우에 새 인스턴스의 속성을 수정할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="numberFormatInfo.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Globalization.NumberFormatInfo" /> 개체의 부분 복사본을 만듭니다.</summary>
        <returns>원본 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체에서 복사된 새 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 복제본은 쓰기 가능한 경우에 원래 <xref:System.Globalization.NumberFormatInfo> 개체가 읽기 전용입니다. 따라서 사용자 정의 된 패턴을 사용 하 여 복제본의 속성을 수정할 수 있습니다.  
  
 개체의 단순 복사본에만 개체의 복사본이입니다. 개체가 다른 개체에 대 한 참조를 포함 하는 경우 단순 복사를 참조 된 개체의 복사본을 만들지 않습니다. 이 참조 원래 개체를 대신 합니다. 반면에 개체의 전체 복사본을 만들고 개체의 복사본 개체에서 직접 또는 간접적으로 참조 하는 모든 대상을 복사 합니다. 경우에 <xref:System.Globalization.NumberFormatInfo> 단순 복사본 이므로 모든 인스턴스 속성을 복사 하는 데 충분 한 개체 참조를 반환 하는 모든 속성은 개체 `static` (`Shared` Visual Basic에서).  
  
   
  
## Examples  
 다음 예제에서는 합니다 <xref:System.Globalization.NumberFormatInfo.Clone%2A> 읽기/쓰기 복사본을 만드는 방법을 <xref:System.Globalization.NumberFormatInfo> 숫자 서식 지정 된 현재 스레드 문화권의 규칙을 나타내는 개체입니다.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/cs/isreadonly1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/vb/isreadonly1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.NumberFormatInfo.IsReadOnly" />
        <altmember cref="M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyDecimalDigits">
      <MemberSignature Language="C#" Value="public int CurrencyDecimalDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrencyDecimalDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyDecimalDigits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrencyDecimalDigits { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyDecimalDigits : int with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>통화 값에 사용할 소수 자릿수를 가져오거나 설정합니다.</summary>
        <value>통화 값에 사용할 소수 자릿수입니다. <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" />의 기본값은 2입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A> 속성은 숫자 서식 지정 작업의에서 전체 자릿수 지정자 없이 "C" 표준 서식 문자열을 사용 하 여 사용 합니다. 소수 구분 기호 다음에 표시 되는 소수 자릿수의 기본값을 정의 합니다. 전체 자릿수 지정자를 사용 하는 경우이 값이 재정의 됩니다. 자세한 내용은 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md)을 참조하세요.  
  
   
  
## Examples  
 다음 예제에서는 변경의 효과 보여 줍니다.는 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A> 속성입니다.  
  
 [!code-cpp[CurrencyDecimalDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyDecimalDigits/CPP/currencydecimaldigits.cpp#1)]
 [!code-csharp[CurrencyDecimalDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyDecimalDigits/CS/currencydecimaldigits.cs#1)]
 [!code-vb[CurrencyDecimalDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyDecimalDigits/VB/currencydecimaldigits.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">속성이 0보다 작거나 99보다 큰 값으로 설정됩니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyDecimalSeparator">
      <MemberSignature Language="C#" Value="public string CurrencyDecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyDecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyDecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencyDecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyDecimalSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>통화 값에서 소수 구분 기호로 사용하는 문자열을 가져오거나 설정합니다.</summary>
        <value>통화 값에서 소수 구분 기호로 사용하는 문자열입니다. <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" />의 기본값은 "."입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 초기 값의 설정에서 파생 되는 **국가 및 언어** 제어판 항목.  
  
 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A> 속성은 데 "C" 표준 서식 문자열을 사용 하 여 정수 소수 자릿수를 구분 하는 기호를 정의 합니다. 자세한 내용은 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md)을 참조하세요.  
  
   
  
## Examples  
 다음 예제에서는 변경의 효과 보여 줍니다.는 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A> 속성입니다.  
  
 [!code-cpp[CurrencyDecimalSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyDecimalSeparator/CPP/currencydecimalseparator.cpp#1)]
 [!code-csharp[CurrencyDecimalSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyDecimalSeparator/CS/currencydecimalseparator.cs#1)]
 [!code-vb[CurrencyDecimalSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyDecimalSeparator/VB/currencydecimalseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <exception cref="T:System.ArgumentException">속성이 빈 문자열로 설정되어 있습니다.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyGroupSeparator">
      <MemberSignature Language="C#" Value="public string CurrencyGroupSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyGroupSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyGroupSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencyGroupSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyGroupSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>통화 값에서 정수 부분을 구분하는 문자열을 가져오거나 설정합니다.</summary>
        <value>통화 값에서 정수 부분을 구분하는 문자열입니다. <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" />의 기본값은 ","입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 초기 값의 설정에서 파생 되는 **국가 및 언어** 제어판 항목입니다.  
  
 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A> 속성은 데 "C" 표준 서식 문자열을 사용 하 여 정수 계열 숫자 그룹 구분 기호를 정의 합니다. 자세한 내용은 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md)을 참조하세요.  
  
   
  
## Examples  
 다음 예제에서는 변경의 효과 보여 줍니다.는 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A> 속성입니다.  
  
 [!code-cpp[CurrencyGroupSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyGroupSeparator/CPP/currencygroupseparator.cpp#1)]
 [!code-csharp[CurrencyGroupSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyGroupSeparator/CS/currencygroupseparator.cs#1)]
 [!code-vb[CurrencyGroupSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyGroupSeparator/VB/currencygroupseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyGroupSizes">
      <MemberSignature Language="C#" Value="public int[] CurrencyGroupSizes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] CurrencyGroupSizes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyGroupSizes As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ CurrencyGroupSizes { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyGroupSizes : int[] with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>통화 값에서 정수 부분의 각 그룹 자릿수를 가져오거나 설정합니다.</summary>
        <value>통화 값에서 정수 부분의 각 그룹 자릿수입니다. <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" />의 기본값은 3으로 설정된 하나의 요소만 있는 1차원 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A> 속성은 정수 계열 그룹에 나타나는 자릿수를 정의 하려면 "C" 표준 서식 문자열과 함께 사용 합니다. 자세한 내용은 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md)을 참조하세요. 1 차원 배열의 모든 요소에는 1에서 9 사이의 정수 여야 합니다. 마지막 요소에는 0 일 수 있습니다.  
  
 자릿수의 왼쪽에 바로 가장 중요 하지 않은 그룹의 요소 수를 정의 하는 배열의 첫 번째 요소는 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>합니다. 각 후속 요소에서 이전 그룹의 왼쪽으로 자릿수 다음 중요 한 그룹을 가리킵니다. 배열의 마지막 요소 다음 위치에 있는 경우 0이 아닌 나머지 숫자는 기준으로 그룹화 배열의 마지막 요소입니다. 마지막 요소의 0 인 경우에 나머지 자릿수 그룹화 되지 않습니다.  
  
 예를 들어, 배열 {3, 4, 5}를 포함 하는 경우 숫자 "$55,55555,55555,55555,4444,333.00" 비슷합니다 그룹화 됩니다. 배열 {3, 4, 0}에 숫자를 "$55555555555555555,4444,333.00" 비슷합니다 그룹화 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 변경의 효과 보여 줍니다.는 <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A> 속성입니다.  
  
 [!code-cpp[CurrencyGroupSizes#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyGroupSizes/CPP/currencygroupsizes.cpp#1)]
 [!code-csharp[CurrencyGroupSizes#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyGroupSizes/CS/currencygroupsizes.cs#1)]
 [!code-vb[CurrencyGroupSizes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyGroupSizes/VB/currencygroupsizes.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.ArgumentException">속성이 설정되거나 배열에 0보다 작거나 9보다 큰 항목이 포함되어 있습니다.  
  
또는 
속성이 설정되거나 배열의 마지막 항목 이외의 항목이 0으로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyNegativePattern">
      <MemberSignature Language="C#" Value="public int CurrencyNegativePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrencyNegativePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyNegativePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrencyNegativePattern { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyNegativePattern : int with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>음수 통화 값의 형식 패턴을 가져오거나 설정합니다.</summary>
        <value>음수 통화 값의 형식 패턴입니다. <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" />의 기본값은 "($n)"을 나타내는 0입니다. 여기서, "$"는 <see cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />이며 <paramref name="n" />은(는) 숫자입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> 속성은 데 "C" 표준 서식 문자열을 사용 하 여 음수 통화 값의 패턴을 정의 합니다. 자세한 내용은 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md)을 참조하세요. 이 속성은 다음 테이블에 값 중 하나. "$" 기호는 <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A>, 기호 "-"은 합니다 <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, 및 `n` 숫자인 합니다.  
  
|값|연결 된 패턴|  
|-----------|------------------------|  
|0|($n)|  
|1|-$n|  
|2|$ n|  
|3|$n-|  
|4|(n$)|  
|5|-n$|  
|6|n-$|  
|7|n$-|  
|8|-n $|  
|10|-$ n|  
|10|n $-|  
|11|$ n-|  
|12|$ n|  
|13|n-$|  
|14|($ n)|  
|15|(n $)|  
  
   
  
## Examples  
 다음 예제와 방법을 <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> 속성 음수 통화 값의 형식을 정의 합니다.  호스트 컴퓨터에 정의 된 각 문화권을 표시 하는 모든 특정 문화권을 얻어냅니다 <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> 속성 값, 해당 연결 된 패턴 및 숫자를 통화 값으로 형식이 지정 됩니다.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.CurrencyNegativePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencynegativepattern/cs/currencynegativepattern1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.CurrencyNegativePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencynegativepattern/vb/currencynegativepattern1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">속성이 0보다 작거나 15보다 큰 값으로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyPositivePattern">
      <MemberSignature Language="C#" Value="public int CurrencyPositivePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrencyPositivePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyPositivePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrencyPositivePattern { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyPositivePattern : int with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>양수 통화 값의 형식 패턴을 가져오거나 설정합니다.</summary>
        <value>양수 통화 값의 형식 패턴입니다. <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" />의 기본값은 "-n%"를 나타내는 0입니다. 여기서, "%"는 <see cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />이며 <paramref name="n" />은(는) 숫자입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> 속성은 데 "C" 표준 서식 문자열을 사용 하 여 양수 통화 값의 패턴을 정의 합니다. 자세한 내용은 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md)을 참조하세요. 이 속성은 다음 테이블에 값 중 하나. "$" 기호는 <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A> 및 `n` 은 숫자입니다.  
  
|값|연결 된 패턴|  
|-----------|------------------------|  
|0|$n|  
|1|n$|  
|2|$ n|  
|3|n $|  
  
 참고 패턴 양수 부호를 지원 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">속성이 0보다 작거나 3보다 큰 값으로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
      </Docs>
    </Member>
    <Member MemberName="CurrencySymbol">
      <MemberSignature Language="C#" Value="public string CurrencySymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencySymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencySymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>통화 기호로 사용할 문자열을 가져오거나 설정합니다.</summary>
        <value>통화 기호로 사용할 문자열입니다. <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" />의 기본값은 "¤"입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 할당 된 문자열을 <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A> "C"를 사용 하 여 숫자 값 형식이 면 결과 문자열에 속성이 포함 되어 [표준 숫자 서식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md)합니다.  
  
   
  
## Examples  
 다음 예에서는 현재 문화권의 통화 기호를 표시 하 고 통화 값 서식을 지정 하려면 "C" 표준 숫자 서식 문자열을 사용 합니다.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.CurrencySymbol#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencysymbol/cs/currencysymbolex1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.CurrencySymbol#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencysymbol/vb/currencysymbolex1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PerMilleSymbol" />
      </Docs>
    </Member>
    <Member MemberName="CurrentInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo CurrentInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.NumberFormatInfo CurrentInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrentInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentInfo As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::NumberFormatInfo ^ CurrentInfo { System::Globalization::NumberFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentInfo : System.Globalization.NumberFormatInfo" Usage="System.Globalization.NumberFormatInfo.CurrentInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 문화권에 따라 값의 서식을 지정하는 읽기 전용 <see cref="T:System.Globalization.NumberFormatInfo" />을(를) 가져옵니다.</summary>
        <value>현재 스레드의 문화권에 기반한 읽기 전용 <see cref="T:System.Globalization.NumberFormatInfo" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 검색을 <xref:System.Globalization.NumberFormatInfo> 에서 개체를 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> 속성은 검색을 <xref:System.Globalization.NumberFormatInfo> 에서 개체를 `CultureInfo.CurrentCulture.NumberFormat` 속성입니다.  
  
   
  
## Examples  
 다음 예에서는 반환 된 개체를 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> 및 `CultureInfo.CurrentCulture.NumberFormat` 속성은 동일 합니다. 그 다음 리플렉션을 사용 하 여 속성 값을 표시 합니다 <xref:System.Globalization.NumberFormatInfo> 에서 반환 된 개체를 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> 현재 문화권이 EN-US 인 시스템에서 속성입니다.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.CurrentInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currentinfo/cs/currentinfo1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.CurrentInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currentinfo/vb/currentinfo1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.NumberFormat" />
      </Docs>
    </Member>
    <Member MemberName="DigitSubstitution">
      <MemberSignature Language="C#" Value="public System.Globalization.DigitShapes DigitSubstitution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.DigitShapes DigitSubstitution" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.DigitSubstitution" />
      <MemberSignature Language="VB.NET" Value="Public Property DigitSubstitution As DigitShapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::DigitShapes DigitSubstitution { System::Globalization::DigitShapes get(); void set(System::Globalization::DigitShapes value); };" />
      <MemberSignature Language="F#" Value="member this.DigitSubstitution : System.Globalization.DigitShapes with get, set" Usage="System.Globalization.NumberFormatInfo.DigitSubstitution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DigitShapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>그래픽 사용자 인터페이스에서 숫자 모양을 표시하는 방법을 지정하는 값을 가져오거나 설정합니다.</summary>
        <value>문화권별 숫자 모양을 지정하는 열거형 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <xref:System.Globalization.NumberFormatInfo.DigitSubstitution%2A> 속성 사용 하도록 예약 됩니다. 현재 구문 분석 또는 현재 작업 서식 지정에 사용 되지 않습니다 <xref:System.Globalization.NumberFormatInfo> 개체입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">현재 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <exception cref="T:System.ArgumentException">Set 작업의 값이 유효한 <see cref="T:System.Globalization.DigitShapes" /> 값이 아닙니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberSignature Language="F#" Value="abstract member GetFormat : Type -&gt; obj&#xA;override this.GetFormat : Type -&gt; obj" Usage="numberFormatInfo.GetFormat formatType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormatProvider.GetFormat(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType">필요한 서식 지정 서비스의 <see cref="T:System.Type" />입니다.</param>
        <summary>숫자 서식 지정 서비스를 제공하는 지정된 형식의 개체를 가져옵니다.</summary>
        <returns><paramref name="formatType" />이(가) 현재 <see cref="T:System.Globalization.NumberFormatInfo" /> 형식과 같은 경우 현재 <see cref="T:System.Globalization.NumberFormatInfo" />이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Format(String, IFormatProvider)` 이 메서드를 호출 하는 기본 데이터 형식에서 지원 되는 메서드 경우 현재 <xref:System.Globalization.NumberFormatInfo> 로 전달 되는 <xref:System.IFormatProvider> 매개 변수입니다. 이 메서드는 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>를 구현합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo GetInstance (IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.NumberFormatInfo GetInstance(class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.GetInstance(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (formatProvider As IFormatProvider) As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::NumberFormatInfo ^ GetInstance(IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="static member GetInstance : IFormatProvider -&gt; System.Globalization.NumberFormatInfo" Usage="System.Globalization.NumberFormatInfo.GetInstance formatProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="formatProvider"><see cref="T:System.Globalization.NumberFormatInfo" />을(를) 가져오는 데 사용되는 <see cref="T:System.IFormatProvider" />입니다.  
  
또는 
 <see cref="P:System.Globalization.NumberFormatInfo.CurrentInfo" />을(를) 가져오려면 <see langword="null" />입니다.</param>
        <summary>지정된 <see cref="T:System.Globalization.NumberFormatInfo" />와 연결된 <see cref="T:System.IFormatProvider" />를 가져옵니다.</summary>
        <returns>지정된 <see cref="T:System.Globalization.NumberFormatInfo" />와 연결된 <see cref="T:System.IFormatProvider" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 합니다 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 메서드의 `formatProvider` 사용 하 여 <xref:System.Globalization.NumberFormatInfo> 형식 매개 변수로 합니다. 경우 `formatProvider` 됩니다 `null` 이거나 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 반환 `null`,이 메서드가 반환 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>합니다.  
  
 애플리케이션을 가져옵니다는 <xref:System.Globalization.NumberFormatInfo> 다음 방법 중 하나를 사용 하 여 특정 문화권에 대 한 개체:  
  
-   통해 여 <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> 속성입니다.  
  
-   통해는 <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> 메서드는 `provider` 는 <xref:System.Globalization.CultureInfo>입니다.  
  
 <xref:System.Globalization.NumberFormatInfo> 고정 문화권에 대해서만 또는 특정 문화권에 대 한, 중립 문화권에 대 한 없습니다 개체가 만들어집니다. 고정 문화권과 특정 문화권 중립 문화권에 대 한 자세한 내용은 참조는 <xref:System.Globalization.CultureInfo> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="InvariantInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo InvariantInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.NumberFormatInfo InvariantInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.InvariantInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantInfo As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::NumberFormatInfo ^ InvariantInfo { System::Globalization::NumberFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantInfo : System.Globalization.NumberFormatInfo" Usage="System.Globalization.NumberFormatInfo.InvariantInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>문화권 독립(고정)적인 읽기 전용 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체를 가져옵니다.</summary>
        <value>문화권 독립(고정)적인 읽기 전용 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 <xref:System.Globalization.NumberFormatInfo> 현재 문화권에 관계 없이이 속성에서 반환 된 개체 변경 되지 않습니다. 모든 국가/지역의 있지만 영어와 연결 된 문화권에는 고정 문화권의 서식 규칙을 나타냅니다. 고정 문화권은 문화권에 관계 없이 파일이 나 여러 문화권에서 표시에 적합 한 결과 문자열을 생성 하는 작업 서식 지정에 사용 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 기본 속성 값이 표시 됩니다는 <xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A>합니다.  
  
 [!code-cpp[System.Globalization.NumberFormatInfo.InvariantInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.NumberFormatInfo.InvariantInfo/CPP/invariantinfo.cpp#1)]
 [!code-csharp[System.Globalization.NumberFormatInfo.InvariantInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.NumberFormatInfo.InvariantInfo/CS/invariantinfo.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.InvariantInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.NumberFormatInfo.InvariantInfo/VB/invariantinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Globalization.NumberFormatInfo.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용인지 나타내는 값을 가져옵니다.</summary>
        <value><see langword="true" />가 읽기 전용이면 <see cref="T:System.Globalization.NumberFormatInfo" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 읽기 전용 속성에 대 한 할당을 수행 하려고 <xref:System.Globalization.NumberFormatInfo> 발생을 <xref:System.InvalidOperationException>입니다.  
  
 호출할 수 있습니다 합니다 <xref:System.Globalization.NumberFormatInfo.Clone%2A> 메서드는 읽기/쓰기를 <xref:System.Globalization.NumberFormatInfo> 다음 예제와 같이 읽기 전용 개체의 개체입니다.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/cs/isreadonly1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/vb/isreadonly1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)" />
      </Docs>
    </Member>
    <Member MemberName="NaNSymbol">
      <MemberSignature Language="C#" Value="public string NaNSymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NaNSymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property NaNSymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NaNSymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NaNSymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.NaNSymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>IEEE NaN(숫자 아님) 값을 나타내는 문자열을 가져오거나 설정합니다.</summary>
        <value>IEEE NaN(숫자 아님) 값을 나타내는 문자열입니다. <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" />의 기본값은 "NaN"입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 NaN 값에 대 한 자세한 내용은 참조 하세요. <xref:System.Double> 또는 <xref:System.Single>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol" />
      </Docs>
    </Member>
    <Member MemberName="NativeDigits">
      <MemberSignature Language="C#" Value="public string[] NativeDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] NativeDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NativeDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property NativeDigits As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ NativeDigits { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NativeDigits : string[] with get, set" Usage="System.Globalization.NumberFormatInfo.NativeDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서양식 숫자 0에서 9까지에 해당하는 기본 숫자의 문자열 배열을 가져오거나 설정합니다.</summary>
        <value>서양식 숫자 0에서 9까지에 해당하는 기본 숫자가 포함된 문자열 배열입니다. 기본값은 "0", "1", "2", "3", "4", "5", "6", "7", "8" 및 "9"의 요소가 있는 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  지정 된 문자 집합을는 <xref:System.Globalization.NumberFormatInfo.NativeDigits%2A> 속성이 구문 분석 하 여 서식 지정 작업에 적용 되지 않습니다. 기본 라틴어 숫자 0 (U + 0030)-9 (U + 0039) 또는 숫자 값 또는 날짜 및 시간 값을 구문 분석 하는 경우에 사용 됩니다.  
  
   
  
## Examples  
 다음 예제는 <xref:System.Globalization.NumberFormatInfo.NativeDigits%2A> 속성입니다.  
  
 [!code-cpp[sys.glob.NFI.nativeDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.NFI.nativeDigits/cpp/nd.cpp#1)]
 [!code-csharp[sys.glob.NFI.nativeDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.NFI.nativeDigits/cs/nd.cs#1)]
 [!code-vb[sys.glob.NFI.nativeDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.NFI.nativeDigits/vb/nd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">현재 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <exception cref="T:System.ArgumentNullException">집합 작업에서 값이 <see langword="null" />입니다.  
  
또는 
집합 작업에서 값 배열의 요소가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentException">집합 작업에서 값 배열에 10개의 요소가 포함되어 있지 않습니다.  
  
또는 
집합 작업에서 값 배열의 요소에 단일 <see cref="T:System.Char" /> 개체 또는 서로게이트 쌍으로 구성된 <see cref="T:System.Char" /> 개체 쌍이 포함되어 있지 않습니다.  
  
또는 
집합 작업에서 값 배열의 요소가 [유니코드 표준](https://go.microsoft.com/fwlink/?linkid=37123)으로 정의된 숫자가 아닙니다. 즉, 배열 요소의 숫자가 유니코드 <see langword="Number, Decimal Digit" />(Nd) 일반 범주 값을 갖지 않습니다.  
  
또는 
집합 작업에서 값 배열에 있는 요소의 숫자 값이 배열의 요소 위치에 맞지 않습니다. 즉, 배열의 첫 번째 요소에 해당하는 인덱스 0의 요소가 숫자 값 0이 아니거나 인덱스 1의 요소가 숫자 값 1이 아닙니다.</exception>
        <altmember cref="T:System.Globalization.DigitShapes" />
      </Docs>
    </Member>
    <Member MemberName="NegativeInfinitySymbol">
      <MemberSignature Language="C#" Value="public string NegativeInfinitySymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NegativeInfinitySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property NegativeInfinitySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NegativeInfinitySymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NegativeInfinitySymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.NegativeInfinitySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>음의 무한대를 나타내는 문자열을 가져오거나 설정합니다.</summary>
        <value>음의 무한대를 나타내는 문자열입니다. <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" />의 기본값은 "-Infinity"입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 음의 무한대에 대 한 자세한 내용은 참조 하세요. <xref:System.Double> 또는 <xref:System.Single>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
      </Docs>
    </Member>
    <Member MemberName="NegativeSign">
      <MemberSignature Language="C#" Value="public string NegativeSign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NegativeSign" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NegativeSign" />
      <MemberSignature Language="VB.NET" Value="Public Property NegativeSign As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NegativeSign { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NegativeSign : string with get, set" Usage="System.Globalization.NumberFormatInfo.NegativeSign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>관련 숫자가 음수임을 나타내는 문자열을 가져오거나 설정합니다.</summary>
        <value>관련 숫자가 음수임을 나타내는 문자열입니다. <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" />의 기본값은 "-"입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 서식 지정 및 구문 분석 작업에서 사용 됩니다. 서식 지정 작업의 용도 대 한 자세한 내용은 참조는 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) 하 고 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md) 항목.  
  
   
  
## Examples  
 다음 예에서는 읽기 / 쓰기를 인스턴스화하고 <xref:System.Globalization.CultureInfo> 윗줄 문자 (U + 203E) 할당을 고정 문화권을 나타내는 개체의 <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> 속성입니다. 사용 하 여이 <xref:System.Globalization.CultureInfo> 음수 부동 소수점 숫자의 배열 형식을 지정할 개체입니다.  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.NegativeSign#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.negativesign/cs/negativesign1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.NegativeSign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.negativesign/vb/negativesign1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PositiveSign" />
      </Docs>
    </Member>
    <Member MemberName="NumberDecimalDigits">
      <MemberSignature Language="C#" Value="public int NumberDecimalDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberDecimalDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberDecimalDigits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumberDecimalDigits { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NumberDecimalDigits : int with get, set" Usage="System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>숫자 값에 사용하는 소수 자릿수를 가져오거나 설정합니다.</summary>
        <value>숫자 값에 사용하는 소수 자릿수입니다. <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" />의 기본값은 2입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A> 속성은 숫자 서식 지정 작업의에서 전체 자릿수 지정자 없이 "F"와 "N" 표준 서식 문자열을 사용 하 여 사용 합니다. 소수 구분 기호 다음에 표시 되는 소수 자릿수의 기본값을 정의 합니다. 전체 자릿수 지정자를 사용 하는 경우이 값이 재정의 됩니다. 자세한 내용은 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md)을 참조하세요.  
  
   
  
## Examples  
 다음 예제에서는 변경의 효과 보여 줍니다.는 <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A> 속성입니다.  
  
 [!code-cpp[NumberDecimalDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberDecimalDigits/CPP/numberdecimaldigits.cpp#1)]
 [!code-csharp[NumberDecimalDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberDecimalDigits/CS/numberdecimaldigits.cs#1)]
 [!code-vb[NumberDecimalDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberDecimalDigits/VB/numberdecimaldigits.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">속성이 0보다 작거나 99보다 큰 값으로 설정됩니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
      </Docs>
    </Member>
    <Member MemberName="NumberDecimalSeparator">
      <MemberSignature Language="C#" Value="public string NumberDecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NumberDecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberDecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NumberDecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NumberDecimalSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>숫자 값에서 소수 구분 기호로 사용하는 문자열을 가져오거나 설정합니다.</summary>
        <value>숫자 값에서 소수 구분 기호로 사용하는 문자열입니다. <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" />의 기본값은 "."입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> 속성은 정수 소수 자릿수를 구분 하는 기호를 정의 하는 "E", "F", "G", "N" 및 "R" 표준 형식 문자열을 사용 하 여 사용 합니다. 자세한 내용은 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md)을 참조하세요.  
  
 이 속성의 초기 값의 설정에서 파생 되는 **국가 및 언어** 제어판 항목.  
  
   
  
## Examples  
 다음 예제에서는 변경의 효과 보여 줍니다.는 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> 속성입니다.  
  
 [!code-cpp[NumberDecimalSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberDecimalSeparator/CPP/numberdecimalseparator.cpp#1)]
 [!code-csharp[NumberDecimalSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberDecimalSeparator/CS/numberdecimalseparator.cs#1)]
 [!code-vb[NumberDecimalSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberDecimalSeparator/VB/numberdecimalseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <exception cref="T:System.ArgumentException">속성이 빈 문자열로 설정되어 있습니다.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
      </Docs>
    </Member>
    <Member MemberName="NumberGroupSeparator">
      <MemberSignature Language="C#" Value="public string NumberGroupSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NumberGroupSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberGroupSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NumberGroupSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NumberGroupSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>숫자 값에서 정수 부분을 구분하는 문자열을 가져오거나 설정합니다.</summary>
        <value>숫자 값에서 정수 부분을 구분하는 문자열입니다. <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" />의 기본값은 ","입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A> 속성 되 고 "N" 표준 서식 문자열을 사용 하 여 정수 계열 숫자 그룹 구분 기호를 정의 합니다. 자세한 내용은 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md)을 참조하세요.  
  
 이 속성의 초기 값의 설정에서 파생 되는 **국가 및 언어** 제어판 항목.  
  
   
  
## Examples  
 다음 예제에서는 변경의 효과 보여 줍니다.는 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A> 속성입니다.  
  
 [!code-cpp[NumberGroupSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberGroupSeparator/CPP/numbergroupseparator.cpp#1)]
 [!code-csharp[NumberGroupSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberGroupSeparator/CS/numbergroupseparator.cs#1)]
 [!code-vb[NumberGroupSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberGroupSeparator/VB/numbergroupseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
      </Docs>
    </Member>
    <Member MemberName="NumberGroupSizes">
      <MemberSignature Language="C#" Value="public int[] NumberGroupSizes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] NumberGroupSizes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberGroupSizes As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ NumberGroupSizes { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NumberGroupSizes : int[] with get, set" Usage="System.Globalization.NumberFormatInfo.NumberGroupSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>숫자 값에서 정수 부분의 각 그룹 자릿수를 가져오거나 설정합니다.</summary>
        <value>숫자 값에서 정수 부분의 각 그룹 자릿수입니다. <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" />의 기본값은 3으로 설정된 하나의 요소만 있는 1차원 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값을 <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> 속성 "N"을 사용 하 여 서식이 지정 된 숫자 값의 결과 영향을 줍니다. 사용자 지정 숫자 형식 문자열 또는 기타 표준 숫자 서식 문자열을 사용 하는 값의 경우는 <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> 속성은 무시 됩니다.  
  
 1 차원 배열의 모든 요소에는 1에서 9 사이의 정수 여야 합니다. 마지막 요소에는 0 일 수 있습니다.  
  
 자릿수의 왼쪽에 바로 가장 중요 하지 않은 그룹의 요소 수를 정의 하는 배열의 첫 번째 요소는 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>합니다. 각 후속 요소에서 이전 그룹의 왼쪽으로 자릿수 다음 중요 한 그룹을 가리킵니다. 배열의 마지막 요소 다음 위치에 있는 경우 0이 아닌 나머지 숫자는 기준으로 그룹화 배열의 마지막 요소입니다. 마지막 요소의 0 인 경우에 나머지 자릿수 그룹화 되지 않습니다.  
  
 예를 들어, 배열 {3, 4, 5}를 포함 하는 경우 숫자 "55,55555,55555,55555,4444,333.00" 비슷합니다 그룹화 됩니다. 배열 {3, 4, 0}에 숫자 "55555555555555555,4444,333.00" 비슷합니다 그룹화 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 변경의 효과 보여 줍니다.는 <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> 속성입니다.  
  
 [!code-cpp[NumberGroupSizes#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberGroupSizes/CPP/numbergroupsizes.cpp#1)]
 [!code-csharp[NumberGroupSizes#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberGroupSizes/CS/numbergroupsizes.cs#1)]
 [!code-vb[NumberGroupSizes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberGroupSizes/VB/numbergroupsizes.vb#1)]  
  
 다음 예제에서는 서로 다른 값을 출력 <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> 배열입니다.  
  
 [!code-cpp[Classic NumberFormatInfo.NumberGroupSizes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberGroupSizes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumberFormatInfo.NumberGroupSizes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberGroupSizes Example/CS/source.cs#1)]
 [!code-vb[Classic NumberFormatInfo.NumberGroupSizes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberGroupSizes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.ArgumentException">속성이 설정되거나 배열에 0보다 작거나 9보다 큰 항목이 포함되어 있습니다.  
  
또는 
속성이 설정되거나 배열의 마지막 항목 이외의 항목이 0으로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
      </Docs>
    </Member>
    <Member MemberName="NumberNegativePattern">
      <MemberSignature Language="C#" Value="public int NumberNegativePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberNegativePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberNegativePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumberNegativePattern { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NumberNegativePattern : int with get, set" Usage="System.Globalization.NumberFormatInfo.NumberNegativePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>음수 숫자 값의 형식 패턴을 가져오거나 설정합니다.</summary>
        <value>음수 숫자 값의 형식 패턴입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A> 속성 "N" 표준 숫자 서식 문자열을 사용 하 여 서식이 지정 되는 음수 값의 형식을 정의 합니다. 이 속성은 다음 테이블에 값 중 하나. 기호 "-"은는 <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> 및 `n` 은 숫자입니다.  
  
|값|연결 된 패턴|  
|-----------|------------------------|  
|0|(n)|  
|1|-n|  
|2|-n|  
|3|n-|  
|4|n -|  
  
 반환한 고정 문화권에 대 한 기본값을 <xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A> 속성을 나타내는 1은 "-n" 여기서 *n* 숫자인 합니다.  
  
   
  
## Examples  
 다음 예제에서는 서로 다른 값을 표시 <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A> 패턴입니다.  
  
 [!code-cpp[Classic NumberFormatInfo.NumberNegativePattern Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberNegativePattern Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumberFormatInfo.NumberNegativePattern Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberNegativePattern Example/CS/source.cs#1)]
 [!code-vb[Classic NumberFormatInfo.NumberNegativePattern Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberNegativePattern Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">속성이 0보다 작거나 4보다 큰 값으로 설정됩니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
      </Docs>
    </Member>
    <Member MemberName="PercentDecimalDigits">
      <MemberSignature Language="C#" Value="public int PercentDecimalDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentDecimalDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentDecimalDigits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentDecimalDigits { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PercentDecimalDigits : int with get, set" Usage="System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>백분율 값에 사용할 소수 자릿수를 가져오거나 설정합니다.</summary>
        <value>백분율 값에 사용할 소수 자릿수입니다. <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" />의 기본값은 2입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A> 속성은 숫자 서식 지정 작업의에서 전체 자릿수 지정자 없이 "P" 표준 서식 문자열을 사용 하 여 사용 합니다. 소수 구분 기호 다음에 표시 되는 소수 자릿수의 기본값을 정의 합니다. 전체 자릿수 지정자를 사용 하는 경우이 값이 재정의 됩니다. 자세한 내용은 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md)을 참조하세요.  
  
   
  
## Examples  
 다음 예제에서는 변경의 효과 보여 줍니다.는 <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A> 속성입니다.  
  
 [!code-cpp[PercentDecimalDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentDecimalDigits/CPP/percentdecimaldigits.cpp#1)]
 [!code-csharp[PercentDecimalDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentDecimalDigits/CS/percentdecimaldigits.cs#1)]
 [!code-vb[PercentDecimalDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentDecimalDigits/VB/percentdecimaldigits.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">속성이 0보다 작거나 99보다 큰 값으로 설정됩니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
      </Docs>
    </Member>
    <Member MemberName="PercentDecimalSeparator">
      <MemberSignature Language="C#" Value="public string PercentDecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PercentDecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentDecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PercentDecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PercentDecimalSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>백분율 값에서 소수 구분 기호로 사용할 문자열을 가져오거나 설정합니다.</summary>
        <value>백분율 값에서 소수 구분 기호로 사용할 문자열입니다. <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" />의 기본값은 "."입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A> 속성은 데 "P" 표준 서식 문자열을 사용 하 여 정수 소수 자릿수를 구분 하는 기호를 정의 합니다. 자세한 내용은 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md)을 참조하세요.  
  
   
  
## Examples  
 다음 예제에서는 변경의 효과 보여 줍니다.는 <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A> 속성입니다.  
  
 [!code-cpp[PercentDecimalSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentDecimalSeparator/CPP/percentdecimalseparator.cpp#1)]
 [!code-csharp[PercentDecimalSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentDecimalSeparator/CS/percentdecimalseparator.cs#1)]
 [!code-vb[PercentDecimalSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentDecimalSeparator/VB/percentdecimalseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <exception cref="T:System.ArgumentException">속성이 빈 문자열로 설정되어 있습니다.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
      </Docs>
    </Member>
    <Member MemberName="PercentGroupSeparator">
      <MemberSignature Language="C#" Value="public string PercentGroupSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PercentGroupSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentGroupSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PercentGroupSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PercentGroupSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>백분율 값에서 정수 부분을 구분하는 문자열을 가져오거나 설정합니다.</summary>
        <value>백분율 값에서 정수 부분을 구분하는 문자열입니다. <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" />의 기본값은 ","입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A> 속성은 데 "P" 표준 서식 문자열을 사용 하 여 정수 그룹을 구분 하는 기호를 정의 합니다. 자세한 내용은 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md)을 참조하세요.  
  
   
  
## Examples  
 다음 예제에서는 변경의 효과 보여 줍니다.는 <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A> 속성입니다.  
  
 [!code-cpp[PercentGroupSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentGroupSeparator/CPP/percentgroupseparator.cpp#1)]
 [!code-csharp[PercentGroupSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentGroupSeparator/CS/percentgroupseparator.cs#1)]
 [!code-vb[PercentGroupSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentGroupSeparator/VB/percentgroupseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
      </Docs>
    </Member>
    <Member MemberName="PercentGroupSizes">
      <MemberSignature Language="C#" Value="public int[] PercentGroupSizes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] PercentGroupSizes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentGroupSizes As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ PercentGroupSizes { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PercentGroupSizes : int[] with get, set" Usage="System.Globalization.NumberFormatInfo.PercentGroupSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>백분율 값에서 정수 부분의 각 그룹 자릿수를 가져오거나 설정합니다.</summary>
        <value>백분율 값에서 정수 부분의 각 그룹 자릿수입니다. <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" />의 기본값은 3으로 설정된 하나의 요소만 있는 1차원 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A> 속성은 정수 계열 그룹에 나타나는 자릿수를 정의 하려면 "P" 표준 서식 문자열을 함께 사용 합니다. 자세한 내용은 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md)을 참조하세요. 1 차원 배열의 모든 요소에는 1에서 9 사이의 정수 여야 합니다. 마지막 요소에는 0 일 수 있습니다.  
  
 자릿수의 왼쪽에 바로 가장 중요 하지 않은 그룹의 요소 수를 정의 하는 배열의 첫 번째 요소는 <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A>합니다. 각 후속 요소에서 이전 그룹의 왼쪽으로 자릿수 다음 중요 한 그룹을 가리킵니다. 배열의 마지막 요소 다음 위치에 있는 경우 0이 아닌 나머지 숫자는 기준으로 그룹화 배열의 마지막 요소입니다. 마지막 요소의 0 인 경우에 나머지 자릿수 그룹화 되지 않습니다.  
  
 예를 들어, 배열 {3, 4, 5}를 포함 하는 경우 숫자 묶여 비슷합니다 "55,55555,55555,55555,4444,333.00%"입니다. 숫자 배열 {3, 4, 0}를 포함 하는 경우 비슷합니다 그룹화 됩니다 "55555555555555555,4444,333.00%"입니다.  
  
   
  
## Examples  
 다음 예제에서는 변경의 효과 보여 줍니다.는 <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A> 속성입니다.  
  
 [!code-cpp[PercentGroupSizes#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentGroupSizes/CPP/percentgroupsizes.cpp#1)]
 [!code-csharp[PercentGroupSizes#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentGroupSizes/CS/percentgroupsizes.cs#1)]
 [!code-vb[PercentGroupSizes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentGroupSizes/VB/percentgroupsizes.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.ArgumentException">속성이 설정되거나 배열에 0보다 작거나 9보다 큰 항목이 포함되어 있습니다.  
  
또는 
속성이 설정되거나 배열의 마지막 항목 이외의 항목이 0으로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
      </Docs>
    </Member>
    <Member MemberName="PercentNegativePattern">
      <MemberSignature Language="C#" Value="public int PercentNegativePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentNegativePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentNegativePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentNegativePattern { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PercentNegativePattern : int with get, set" Usage="System.Globalization.NumberFormatInfo.PercentNegativePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>음수 백분율 값의 형식 패턴을 가져오거나 설정합니다.</summary>
        <value>음수 백분율 값의 형식 패턴입니다. <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" />의 기본값은 "-n%"을 나타내는 0입니다. 여기서, "%"는 <see cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />이며 <paramref name="n" />은(는) 숫자입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentNegativePattern%2A> 속성은 데 "P" 표준 서식 문자열을 사용 하 여 음수 백분율 값의 패턴을 정의 합니다. 자세한 내용은 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md)을 참조하세요. 이 속성은 다음 테이블에 값 중 하나. 기호가 "%"는 <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A>, 기호 "-"는를 <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, 및 `n` 은 숫자입니다. 값 3 ~ 11.NET Framework 2.0에 도입 된 및 이전 버전에서 사용할 수 없습니다.  
  
|값|연결 된 패턴|  
|-----------|------------------------|  
|0|-n %|  
|1|-n%|  
|2|-%n|  
|3|%-n|  
|4|%n-|  
|5|n-%|  
|6|n%-|  
|7|-[NULL] %1%n|  
|8|n %-|  
|10|%n-|  
|10|% n|  
|11|n- %|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">속성이 0보다 작거나 11보다 큰 값으로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
      </Docs>
    </Member>
    <Member MemberName="PercentPositivePattern">
      <MemberSignature Language="C#" Value="public int PercentPositivePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentPositivePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentPositivePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentPositivePattern { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PercentPositivePattern : int with get, set" Usage="System.Globalization.NumberFormatInfo.PercentPositivePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>양수 백분율 값의 형식 패턴을 가져오거나 설정합니다.</summary>
        <value>양수 백분율 값의 형식 패턴입니다. <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" />의 기본값은 "n%"를 나타내는 0입니다. 여기서, "%"는 <see cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />이며 <paramref name="n" />은(는) 숫자입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.NumberFormatInfo.PercentPositivePattern%2A> 속성은 데 "P" 표준 서식 문자열을 사용 하 여 양수 백분율 값의 패턴을 정의 합니다. 자세한 내용은 [표준 숫자 형식 문자열](~/docs/standard/base-types/standard-numeric-format-strings.md)을 참조하세요. 이 속성은 다음 테이블에 값 중 하나. "%" 기호가 합니다 <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A> 및 `n` 은 숫자입니다.  
  
|값|연결 된 패턴|  
|-----------|------------------------|  
|0|n %|  
|1|n%|  
|2|%n|  
|3|%1%n|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">속성이 0보다 작거나 3보다 큰 값으로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
      </Docs>
    </Member>
    <Member MemberName="PercentSymbol">
      <MemberSignature Language="C#" Value="public string PercentSymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PercentSymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentSymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PercentSymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PercentSymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.PercentSymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>백분율 기호로 사용할 문자열을 가져오거나 설정합니다.</summary>
        <value>백분율 기호로 사용할 문자열입니다. <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" />의 기본값은 "%"입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 할당 된 문자열을 <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A> "P" 또는 "%"를 포함 하는 형식 문자열을 숫자 값의 서식을 지정 하는 경우 결과 문자열에 속성이 포함 되어 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PerMilleSymbol" />
      </Docs>
    </Member>
    <Member MemberName="PerMilleSymbol">
      <MemberSignature Language="C#" Value="public string PerMilleSymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PerMilleSymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PerMilleSymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property PerMilleSymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PerMilleSymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PerMilleSymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.PerMilleSymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>천분율 기호로 사용할 문자열을 가져오거나 설정합니다.</summary>
        <value>천분율 기호로 사용할 문자열입니다. <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" />의 기본값은 "‰"이며, 이는 유니코드 문자 U+2030입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 할당 된 문자열을 <xref:System.Globalization.NumberFormatInfo.PerMilleSymbol%2A> "‰"를 포함 하는 형식 문자열을 사용 하 여 숫자 값 형식이 면 결과 문자열에 속성이 포함 되어 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
      </Docs>
    </Member>
    <Member MemberName="PositiveInfinitySymbol">
      <MemberSignature Language="C#" Value="public string PositiveInfinitySymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PositiveInfinitySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property PositiveInfinitySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PositiveInfinitySymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PositiveInfinitySymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.PositiveInfinitySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>양의 무한대를 나타내는 문자열을 가져오거나 설정합니다.</summary>
        <value>양의 무한대를 나타내는 문자열입니다. <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" />의 기본값은 "Infinity"입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 양의 무한대에 대 한 자세한 내용은 참조 하세요. <xref:System.Double> 또는 <xref:System.Single>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성이 <see langword="null" />로 설정되어 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
      </Docs>
    </Member>
    <Member MemberName="PositiveSign">
      <MemberSignature Language="C#" Value="public string PositiveSign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PositiveSign" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PositiveSign" />
      <MemberSignature Language="VB.NET" Value="Public Property PositiveSign As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PositiveSign { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PositiveSign : string with get, set" Usage="System.Globalization.NumberFormatInfo.PositiveSign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>관련 숫자가 양수임을 나타내는 문자열을 가져오거나 설정합니다.</summary>
        <value>관련 숫자가 양수임을 나타내는 문자열입니다. <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" />의 기본값은 "+"입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 서식 지정에 대 한 없습니다 숫자 문자열 구문 분석에 대해서만 사용 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">set 작업에서 할당될 값이 <see langword="null" />입니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성이 설정되어 있으며 <see cref="T:System.Globalization.NumberFormatInfo" /> 개체가 읽기 전용입니다.</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NegativeSign" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo ReadOnly (System.Globalization.NumberFormatInfo nfi);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.NumberFormatInfo ReadOnly(class System.Globalization.NumberFormatInfo nfi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (nfi As NumberFormatInfo) As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::NumberFormatInfo ^ ReadOnly(System::Globalization::NumberFormatInfo ^ nfi);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Globalization.NumberFormatInfo -&gt; System.Globalization.NumberFormatInfo" Usage="System.Globalization.NumberFormatInfo.ReadOnly nfi" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nfi" Type="System.Globalization.NumberFormatInfo" />
      </Parameters>
      <Docs>
        <param name="nfi">래핑할 <see cref="T:System.Globalization.NumberFormatInfo" />입니다.</param>
        <summary>읽기 전용 <see cref="T:System.Globalization.NumberFormatInfo" /> 래퍼를 반환합니다.</summary>
        <returns><paramref name="nfi" /> 주변의 읽기 전용 <see cref="T:System.Globalization.NumberFormatInfo" /> 래퍼입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 래퍼를 `nfi`입니다.  
  
 읽기 전용 속성에 대 한 할당을 수행 하려고 <xref:System.Globalization.NumberFormatInfo> 발생을 <xref:System.InvalidOperationException>입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="nfi" />가 <see langword="null" />인 경우</exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.IsReadOnly" />
      </Docs>
    </Member>
  </Members>
</Type>