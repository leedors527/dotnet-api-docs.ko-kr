<Type Name="SortVersion" FullName="System.Globalization.SortVersion">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b801a92bbd5c36fe0a1f78c1925ea700edbfc7fa" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58685659" /></Metadata><TypeSignature Language="C#" Value="public sealed class SortVersion : IEquatable&lt;System.Globalization.SortVersion&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SortVersion extends System.Object implements class System.IEquatable`1&lt;class System.Globalization.SortVersion&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.SortVersion" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SortVersion&#xA;Implements IEquatable(Of SortVersion)" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortVersion sealed : IEquatable&lt;System::Globalization::SortVersion ^&gt;" />
  <TypeSignature Language="F#" Value="type SortVersion = class&#xA;    interface IEquatable&lt;SortVersion&gt;" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Globalization.SortVersion&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>문자열을 비교하고 정렬하는 데 사용되는 유니코드 버전에 대한 정보를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

### <a name="sorting-and-string-comparison-in-the-net-framework"></a>.NET Framework의 정렬 및 문자열 비교

 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] 를 통해를 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)],.net Framework의 각 버전 정렬 가중치를 포함 하는 테이블에 포함 된 및 문자열 정규화에 대 한 데이터를 특정 유니코드 버전에 기반한 합니다. 에 [!INCLUDE[net_v45](~/includes/net-v45-md.md)], 운영 체제에 이러한 테이블의 존재에 따라 달라 집니다.  
  
-   [!INCLUDE[win7](~/includes/win7-md.md)] 이전 버전의 Windows 운영 체제, 문자열 정렬 및 비교에 사용할 테이블을 계속 합니다.  
  
-   [!INCLUDE[win8](~/includes/win8-md.md)],.NET Framework는 문자열 비교 및 정렬 작업 운영 체제에 위임 합니다.  
  
 결과적으로 문자열 비교의 결과 다음 표와 같이.NET Framework 버전에서 뿐만 아니라 운영 체제 버전에서 달라질 수 있습니다. 지원되는 유니코드 버전 목록은 문자 비교 및 정렬에만 적용되며 범주에 따른 유니코드 문자의 분류에는 적용되지 않습니다.  
  
|.NET Framework 버전|운영 체제|유니코드 버전|  
|----------------------------|----------------------|---------------------|  
|[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]|모든 운영 체제|Unicode 5.0|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)] 이상 버전의.NET Framework|[!INCLUDE[win7](~/includes/win7-md.md)]|Unicode 5.0|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)] 이상 버전의.NET Framework|[!INCLUDE[win8](~/includes/win8-md.md)] 및 이후 Windows 운영 체제 버전|Unicode 6.0|  
  
 [!INCLUDE[win8](~/includes/win8-md.md)]이므로 문자열 비교에 사용 되는 유니코드 버전 및 운영 체제의 버전에 따라 달라 집니다 순서, 문자열 비교의 결과 특정 버전의.NET Framework에서 실행 되는 응용 프로그램에 대해서도 다를 수 있습니다.  

### <a name="sorting-and-string-comparison-in-net-core"></a>.NET Core에서 정렬 및 문자열 비교

문자열 비교를 수행 하는 경우 모든 버전의.NET Core는 기본 운영 체제에 의존 합니다. 따라서 결과 문자열 비교 또는 문자열 정렬 되는 순서 비교를 수행할 때 운영 체제에서 사용 하는 유니코드 버전에 따라 달라 집니다. Linux 및 macOS [유니코드에 대 한 국제 구성 요소](http://site.icu-project.org/) 라이브러리 Api를 정렬 및 비교에 대 한 구현을 제공 합니다.

### <a name="using-the-sortversion-class"></a>SortVersion 클래스 사용

 <xref:System.Globalization.SortVersion> 클래스는 문자열 비교 및 정렬에 대 한.NET에서 사용 되는 유니코드 버전에 대 한 정보를 제공 합니다. 개발자가 검색 하 고 응용 프로그램의 문자열 비교 및 정렬에 사용 되는 유니코드 버전의 변경 내용을 성공적으로 처리할 수 있는 응용 프로그램을 작성할 수 있습니다.  
  
 인스턴스화할 수 있습니다는 <xref:System.Globalization.SortVersion> 두 가지 방법으로 개체:  
  
-   호출 하 여 합니다 <xref:System.Globalization.SortVersion.%23ctor%2A> 새를 인스턴스화하는 생성자 <xref:System.Globalization.SortVersion> 버전 번호를 기반으로 개체 및 정렬 id입니다. 다시 만들 때이 생성자는 가장 유용한를 <xref:System.Globalization.SortVersion> 저장 된 데이터 개체입니다.  
  
-   값을 검색 하 여 <xref:System.Globalization.CompareInfo.Version%2A?displayProperty=nameWithType> 속성입니다. 이 속성은 응용 프로그램이 실행 되는.NET 구현에서 사용 되는 유니코드 버전에 대 한 정보를 제공 합니다.  
  
 <xref:System.Globalization.SortVersion> 클래스에는 두 개의 속성인 <xref:System.Globalization.SortVersion.FullVersion%2A> 및 <xref:System.Globalization.SortVersion.SortId%2A>, 유니코드 버전 및 문자열 비교에 사용 되는 특정 문화권을 나타내는입니다. 합니다 <xref:System.Globalization.SortVersion.FullVersion%2A> 속성이 문자열 비교에 사용 되는 유니코드 버전을 반영 하는 임의 숫자 값 및 <xref:System.Globalization.SortVersion.SortId%2A> 속성은 임의의 <xref:System.Guid> 반영 하는 규칙이 포함 된 문자열 비교에 사용 된 culture입니다. 두 개를 비교 하는 경우에 이러한 두 속성의 값은 중요 한 <xref:System.Globalization.SortVersion> 사용 하 여 개체를 <xref:System.Globalization.SortVersion.Equals%2A> 메서드를 <xref:System.Globalization.SortVersion.op_Equality%2A> 연산자 또는 <xref:System.Globalization.SortVersion.op_Inequality%2A> 연산자입니다.  
  
 일반적으로 사용 하는 <xref:System.Globalization.SortVersion> 개체 자체를 저장 하거나 인덱스 또는 리터럴와 같은 문자열 데이터를 정렬 일종의 문화권 구분 검색 문자열입니다. 이 경우 다음 단계를 수행해야 합니다.  
  
1.  순서가 지정 된 문자열 데이터를 저장 합니다 <xref:System.Globalization.SortVersion.FullVersion%2A> 및 <xref:System.Globalization.SortVersion.SortId%2A> 속성 값도 저장 됩니다.  
  
2.  순서가 지정 된 문자열 데이터를 검색할 때 다시 만들 수 있습니다 합니다 <xref:System.Globalization.SortVersion> 를 호출 하 여 문자열 순서 지정에 사용 되는 개체는 <xref:System.Globalization.SortVersion.%23ctor%2A> 생성자입니다.  
  
3.  이 새로 인스턴스화된 <xref:System.Globalization.SortVersion> 개체와 비교 됩니다는 <xref:System.Globalization.SortVersion> 규칙이 포함은 문자열 데이터를 정렬 하는 데 사용 되는 문화권을 반영 하는 개체입니다.  
  
4.  하는 경우 두 <xref:System.Globalization.SortVersion> 개체가 같지 않은지, 문자열 데이터를 다시 정렬 해야 합니다.  
  
 예제에서는 그림을 제공합니다.  
  
   
  
## Examples  
 다음 예제에서는 소스 코드를 사용 하는 응용 프로그램의 일부를 포함 합니다 <xref:System.Globalization.SortVersion> 클래스의 기본 이름이 되도록 <xref:System.Globalization.RegionInfo> 개체는 현재 시스템 및 현재 문화권에 대 한 적절 하 게 정렬 됩니다. 사용 하 여는 <xref:System.IO.BinaryReader> 하 고 <xref:System.IO.BinaryWriter> 개체를 저장 및 검색 이라는 데이터 파일에서 데이터를 정렬 `Regions.dat` 검색 하 고 응용 프로그램이 실행 될 때마다 데이터를 정렬 하는 대신 합니다. 예제는 데이터 파일의 존재 여부를 확인 하려면 먼저 확인 합니다. 데이터가 표시 되지 않는 경우 만듭니다 설정 및는 `reindex` 데이터를 다시 정렬 및 다시 저장 해야 있는지를 나타내는 플래그입니다. 그렇지 않은 경우 데이터를 검색 하 고는 저장 된 비교 <xref:System.Globalization.SortVersion> 개체는 <xref:System.Globalization.SortVersion> 현재 시스템의 현재 문화권에 대 한 개체입니다. 서로 다른에 지 아니면 합니다 `reindex` 이전에 설정 된 플래그를 사용 하는 <xref:System.Globalization.RegionInfo> 데이터.  
  
 [!code-csharp[System.Globalization.SortVersion#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.sortversion/cs/example1.cs#1)]
 [!code-vb[System.Globalization.SortVersion#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.sortversion/vb/example1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Globalization.CompareInfo.Version" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortVersion (int fullVersion, Guid sortId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 fullVersion, valuetype System.Guid sortId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.#ctor(System.Int32,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fullVersion As Integer, sortId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortVersion(int fullVersion, Guid sortId);" />
      <MemberSignature Language="F#" Value="new System.Globalization.SortVersion : int * Guid -&gt; System.Globalization.SortVersion" Usage="new System.Globalization.SortVersion (fullVersion, sortId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fullVersion" Type="System.Int32" />
        <Parameter Name="sortId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="fullVersion">버전 번호</param>
        <param name="sortId">정렬 ID입니다.</param>
        <summary><see cref="T:System.Globalization.SortVersion" /> 클래스의 새 인스턴스를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 인스턴스화하는 <xref:System.Globalization.SortVersion> 지정된 된 버전을 사용 하 여 개체 및 정렬 id입니다. 합니다 `fullVersion` 인수에 할당 되는 <xref:System.Globalization.SortVersion.FullVersion%2A> 속성입니다. 합니다 `sortId` 인수에 할당 되는 <xref:System.Globalization.SortVersion.SortId%2A> 속성입니다.  
  
 이 생성자는 다시 만들기에 대 한 유용한는 <xref:System.Globalization.SortVersion> 직렬화 되거나 저장 된 데이터 개체입니다. 그런 다음 표시 하 고 응용 프로그램의 문자열을 정렬 하는 데 사용 되는 유니코드 버전에 사용할 수 있는지 여부를 확인 하려면 현재 응용 프로그램 버전과이 버전을 비교할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CompareInfo.Version" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>두 <see cref="T:System.Globalization.SortVersion" /> 인스턴스가 같은지 여부를 나타내는 값을 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Globalization.SortVersion other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Globalization.SortVersion other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As SortVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Globalization::SortVersion ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Globalization.SortVersion -&gt; bool" Usage="sortVersion.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Globalization.SortVersion" />
      </Parameters>
      <Docs>
        <param name="other">이 인스턴스와 비교할 개체입니다.</param>
        <summary>이 <see cref="T:System.Globalization.SortVersion" /> 인스턴스가 지정된 <see cref="T:System.Globalization.SortVersion" /> 개체와 같은지 여부를 나타내는 값을 반환합니다.</summary>
        <returns><paramref name="other" />가 이 인터페이스와 같은 버전을 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 두 개의 <xref:System.Globalization.SortVersion> 개체가 같은지 경우 해당 <xref:System.Globalization.SortVersion.FullVersion%2A> 및 <xref:System.Globalization.SortVersion.SortId%2A> 속성이 같으면 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="sortVersion.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">이 인스턴스와 비교할 개체입니다.</param>
        <summary>이 <see cref="T:System.Globalization.SortVersion" /> 인스턴스가 지정된 개체와 같은지 여부를 나타내는 값을 반환합니다.</summary>
        <returns><paramref name="obj" />가 이 인스턴스와 같은 버전을 나타내는 <see cref="T:System.Globalization.SortVersion" /> 개체이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 두 개의 <xref:System.Globalization.SortVersion> 개체가 같은지 경우 해당 <xref:System.Globalization.SortVersion.FullVersion%2A> 및 <xref:System.Globalization.SortVersion.SortId%2A> 속성이 같으면 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="FullVersion">
      <MemberSignature Language="C#" Value="public int FullVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FullVersion" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortVersion.FullVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FullVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FullVersion : int" Usage="System.Globalization.SortVersion.FullVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Globalization.SortVersion" /> 개체의 전체 버전 번호를 가져옵니다.</summary>
        <value>이 <see cref="T:System.Globalization.SortVersion" /> 개체의 버전 번호입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값을 <xref:System.Globalization.SortVersion.FullVersion%2A> 속성은 정규화 문자열을 비교 하는 데 사용 하는 유니코드 버전을 반영 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="sortVersion.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
        <returns>부호 있는 32비트 정수 해시 코드입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Globalization.SortVersion left, System.Globalization.SortVersion right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Globalization.SortVersion left, class System.Globalization.SortVersion right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As SortVersion, right As SortVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Globalization::SortVersion ^ left, System::Globalization::SortVersion ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Globalization.SortVersion * System.Globalization.SortVersion -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Globalization.SortVersion" />
        <Parameter Name="right" Type="System.Globalization.SortVersion" />
      </Parameters>
      <Docs>
        <param name="left">비교할 첫 번째 인스턴스입니다.</param>
        <param name="right">비교할 두 번째 인스턴스입니다.</param>
        <summary>두 개의 <see cref="T:System.Globalization.SortVersion" /> 인스턴스가 같은지 여부를 나타냅니다.</summary>
        <returns><paramref name="left" />의 값과 <paramref name="right" />의 값이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 두 <xref:System.Globalization.SortVersion> 개체는 둘 다 동일 `null`, 또는 해당 <xref:System.Globalization.SortVersion.FullVersion%2A> 및 <xref:System.Globalization.SortVersion.SortId%2A> 속성이 같으면 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)" />
        <altmember cref="M:System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Globalization.SortVersion left, System.Globalization.SortVersion right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Globalization.SortVersion left, class System.Globalization.SortVersion right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As SortVersion, right As SortVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Globalization::SortVersion ^ left, System::Globalization::SortVersion ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Globalization.SortVersion * System.Globalization.SortVersion -&gt; bool" Usage="System.Globalization.SortVersion.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Globalization.SortVersion" />
        <Parameter Name="right" Type="System.Globalization.SortVersion" />
      </Parameters>
      <Docs>
        <param name="left">비교할 첫 번째 인스턴스입니다.</param>
        <param name="right">비교할 두 번째 인스턴스입니다.</param>
        <summary>두 개의 <see cref="T:System.Globalization.SortVersion" /> 인스턴스가 같지 않은지 여부를 나타냅니다.</summary>
        <returns><paramref name="left" />의 값과 <paramref name="right" />의 값이 같지 않으면 <see langword="true" />이고 같으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 두 개의 <xref:System.Globalization.SortVersion> 경우에 두 개체가 다릅니다 `null` 하지 않으면 다른 아니면 서로 <xref:System.Globalization.SortVersion.FullVersion%2A> 또는 <xref:System.Globalization.SortVersion.SortId%2A> 속성 값입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)" />
        <altmember cref="M:System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="SortId">
      <MemberSignature Language="C#" Value="public Guid SortId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid SortId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortVersion.SortId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid SortId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.SortId : Guid" Usage="System.Globalization.SortVersion.SortId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Globalization.SortVersion" /> 개체에 대한 전역적으로 고유한 식별자를 가져옵니다.</summary>
        <value>이 <see cref="T:System.Globalization.SortVersion" /> 개체에 대한 전역적으로 고유한 식별자입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값을 <xref:System.Globalization.SortVersion.SortId%2A> 속성은 문화권 문자열 비교 및 정렬 규칙이 포함에 영향을 반영 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>