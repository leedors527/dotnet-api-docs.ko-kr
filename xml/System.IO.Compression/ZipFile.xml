<Type Name="ZipFile" FullName="System.IO.Compression.ZipFile">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f42d501d4a4e27c5f60e5ebfc94999139760a66b" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="64996887" /></Metadata><TypeSignature Language="C#" Value="public static class ZipFile" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ZipFile extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Compression.ZipFile" />
  <TypeSignature Language="VB.NET" Value="Public Class ZipFile" />
  <TypeSignature Language="C++ CLI" Value="public ref class ZipFile abstract sealed" />
  <TypeSignature Language="F#" Value="type ZipFile = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zip 보관 파일 만들기, 추출 및 열기를 위한 정적 메서드를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  사용 하는 <xref:System.IO.Compression.ZipFile> 클래스에 대 한 참조를 추가 해야 합니다는 `System.IO.Compression.FileSystem` ; 프로젝트에서 어셈블리가 고, 그렇지 얻게 다음 오류 메시지를 컴파일하려고 하면: **'ZipFile' 현재 컨텍스트에 없습니다. 이름을**입니다. Visual Studio에서 프로젝트에 대 한 참조를 추가 하는 방법에 대 한 자세한 내용은 참조 하세요. [방법: 참조 관리자를 사용하여 참조 추가 또는 제거](https://msdn.microsoft.com/library/1aabb520-99b0-46c6-9368-21b4d84793eb).  
  
 Zip 보관 파일 및 파일을 조작 하기 위한 메서드는 세 가지 클래스를 분산 합니다. <xref:System.IO.Compression.ZipFile>, <xref:System.IO.Compression.ZipArchive> 및 <xref:System.IO.Compression.ZipArchiveEntry>합니다.  
  
|받는 사람...|사용|  
|---------|----------|  
|Zip 보관 파일을 디렉터리에서 만들기|<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=nameWithType>|  
|디렉터리에는 zip 보관 파일의 내용을 추출합니다|<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=nameWithType>|  
|새 파일을 기존 zip 보관 파일 추가|<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=nameWithType>|  
|Zip 보관 파일을 검색 합니다.|<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=nameWithType>|  
|Zip 보관 파일의 모든 검색|<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=nameWithType>|  
|Zip 보관 파일에 포함 된 개별 파일에 스트림을 열기 위해|<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=nameWithType>|  
|Zip 보관 파일에서 파일을 삭제 합니다.|<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=nameWithType>|  
  
 사용할 수 없습니다는 <xref:System.IO.Compression.ZipFile> 나 <xref:System.IO.Compression.ZipFileExtensions> 의 클래스 [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] 앱. [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] 앱 압축 된 파일을 사용 하는 다음 클래스를 사용 해야 합니다.  
  
-   <xref:System.IO.Compression.ZipArchive>  
  
-   <xref:System.IO.Compression.ZipArchiveEntry>  
  
-   <xref:System.IO.Compression.DeflateStream>  
  
-   <xref:System.IO.Compression.GZipStream>  
  
   
  
## Examples  
 만들고 사용 하 여 zip 보관 파일을 추출 하는 방법을 보여 주는이 예제는 <xref:System.IO.Compression.ZipFile> 클래스입니다. 폴더의 내용을 zip 보관 파일을 압축 하 고 새 폴더에 콘텐츠를 추출 합니다.  
  
> [!TIP]
>  <xref:System.IO.Compression.ZipFile> 클래스를 사용하려면 프로젝트에서 `System.IO.Compression.FileSystem` 어셈블리를 참조해야 합니다.  
  
 [!code-csharp[System.IO.Compression.ZipFile#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.zipfile/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.zipfile/vb/program1.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/1aabb520-99b0-46c6-9368-21b4d84793eb">방법: 참조 추가 또는 제거 참조 관리자를 사용 하 여</related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateFromDirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 디렉터리에서 파일 및 디렉터리를 포함하는 Zip 보관 파일을 만듭니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateFromDirectory">
      <MemberSignature Language="C#" Value="public static void CreateFromDirectory (string sourceDirectoryName, string destinationArchiveFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateFromDirectory(string sourceDirectoryName, string destinationArchiveFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateFromDirectory (sourceDirectoryName As String, destinationArchiveFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateFromDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationArchiveFileName);" />
      <MemberSignature Language="F#" Value="static member CreateFromDirectory : string * string -&gt; unit" Usage="System.IO.Compression.ZipFile.CreateFromDirectory (sourceDirectoryName, destinationArchiveFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationArchiveFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName">보관되는 디렉터리의 경로(상대 또는 절대 경로로 지정)입니다. 상대 경로는 현재 작업 디렉터리에 상대적으로 해석됩니다.</param>
        <param name="destinationArchiveFileName">만들 보관 파일의 경로(상대 또는 절대 경로로 지정)입니다. 상대 경로는 현재 작업 디렉터리에 상대적으로 해석됩니다.</param>
        <summary>지정된 디렉터리에서 파일 및 디렉터리를 포함하는 Zip 보관 파일을 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파일 시스템에서 디렉터리 구조는 보관 파일에 유지 됩니다. 디렉터리가 비어 있으면 빈 보관 파일이 생성 됩니다. 이 메서드 오버 로드는 보관 파일의 기본 디렉터리를 포함 하지 않습니다 하 고 압축 수준을 지정할 수는 없습니다. 기본 디렉터리를 포함 하거나 압축 수준에서 호출을 지정 하려는 경우는 <xref:System.IO.Compression.ZipFile.CreateFromDirectory%28System.String%2CSystem.String%2CSystem.IO.Compression.CompressionLevel%2CSystem.Boolean%29> 메서드 오버 로드 합니다.  
  
 보관 파일에 이미 있는 경우는 <xref:System.IO.IOException> 예외가 throw 됩니다. 지정한 이름 가진 항목이 이미 보관 되어 있는, 경우에 두 번째 항목을 동일한 이름으로 만들어집니다.  
  
 디렉터리에 파일 보관 파일에 추가할 수 없습니다, 불완전 하 고, 잘못 된 보관 파일을 그대로 및 메서드가 throw 하는 경우는 <xref:System.IO.IOException> 예외입니다.  
  
   
  
## Examples  
 만들고 사용 하 여 zip 보관 파일을 추출 하는 방법을 보여 주는이 예제는 <xref:System.IO.Compression.ZipFile> 클래스입니다. 폴더의 내용을 zip 보관 파일을 압축 하 고 새 폴더에 콘텐츠를 추출 합니다. <xref:System.IO.Compression.ZipFile> 클래스를 사용하려면 프로젝트에서 `System.IO.Compression.FileSystem` 어셈블리를 참조해야 합니다.  
  
 [!code-csharp[System.IO.Compression.ZipFile#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.zipfile/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.zipfile/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceDirectoryName" /> 또는 <paramref name="destinationArchiveFileName" /> 는 <see cref="F:System.String.Empty" />공백만 포함 하거나 하나 이상의 잘못 된 문자를 포함 합니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceDirectoryName" /> 또는 <paramref name="destinationArchiveFileName" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.IO.PathTooLongException"><paramref name="sourceDirectoryName" /> 또는 <paramref name="destinationArchiveFileName" />, 지정된 된 경로, 파일 이름 또는 둘 다 시스템 정의 최대 길이 초과 합니다.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="sourceDirectoryName" /> 올바르지 않거나 존재 하지 않습니다 (예를 들어 있는 매핑되지 않은 드라이브에 있음).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationArchiveFileName" />가 이미 있는 경우  
  
또는 
지정된 된 디렉터리에 파일을 열 수 없습니다.</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="destinationArchiveFileName" />이 디렉터리를 지정합니다.  
  
또는 
호출자에서 지정 된 디렉터리에 액세스 하는 데 필요한 권한이 없는 <paramref name="sourceDirectoryName" /> 에 지정 된 파일 또는 <paramref name="destinationArchiveFileName" />합니다.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="sourceDirectoryName" /> 또는 <paramref name="destinationArchiveFileName" /> 는 잘못 된 형식이 포함 되어 있습니다.  
  
또는 
Zip 보관 파일에 쓰기를 지원 하지 않습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromDirectory">
      <MemberSignature Language="C#" Value="public static void CreateFromDirectory (string sourceDirectoryName, string destinationArchiveFileName, System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateFromDirectory(string sourceDirectoryName, string destinationArchiveFileName, valuetype System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateFromDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationArchiveFileName, System::IO::Compression::CompressionLevel compressionLevel, bool includeBaseDirectory);" />
      <MemberSignature Language="F#" Value="static member CreateFromDirectory : string * string * System.IO.Compression.CompressionLevel * bool -&gt; unit" Usage="System.IO.Compression.ZipFile.CreateFromDirectory (sourceDirectoryName, destinationArchiveFileName, compressionLevel, includeBaseDirectory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationArchiveFileName" Type="System.String" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
        <Parameter Name="includeBaseDirectory" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName">보관되는 디렉터리의 경로(상대 또는 절대 경로로 지정)입니다. 상대 경로는 현재 작업 디렉터리에 상대적으로 해석됩니다.</param>
        <param name="destinationArchiveFileName">만들 보관 파일의 경로(상대 또는 절대 경로로 지정)입니다. 상대 경로는 현재 작업 디렉터리에 상대적으로 해석됩니다.</param>
        <param name="compressionLevel">항목을 만들 때 속도 또는 압축 효율을 강조할지를 나타내는 열거형 값 중 하나입니다.</param>
        <param name="includeBaseDirectory"><see langword="true" /> 디렉터리 이름을 포함 하도록 <paramref name="sourceDirectoryName" /> 보관 파일의 루트에 <see langword="false" /> 디렉터리의 내용만 포함 합니다.</param>
        <summary>지정된 디렉터리의 파일 및 디렉터리를 포함하고 지정된 압축 수준을 사용하며 기본 디렉터리를 선택적으로 포함하는 Zip 보관 파일을 듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파일 시스템에서 디렉터리 구조는 보관 파일에 유지 됩니다. 디렉터리가 비어 있으면 빈 보관 파일이 생성 됩니다. 압축 수준 및 보관 파일에 있는 기본 디렉터리를 포함할지 여부를 지정 하려면이 메서드 오버 로드를 사용 합니다.  
  
 보관 파일에 이미 있는 경우는 <xref:System.IO.IOException> 예외가 throw 됩니다. 지정한 이름 가진 항목이 이미 보관 되어 있는, 경우에 두 번째 항목을 동일한 이름으로 만들어집니다.  
  
 디렉터리에 파일 보관 파일에 추가할 수 없습니다, 불완전 하 고, 잘못 된 보관 파일을 그대로 및 메서드가 throw 하는 경우는 <xref:System.IO.IOException> 예외입니다.  
  
   
  
## Examples  
 만들고 사용 하 여 zip 보관 파일을 추출 하는 방법을 보여 주는이 예제는 <xref:System.IO.Compression.ZipFile> 클래스입니다. 폴더의 내용을 zip 보관 파일을 압축 하 고 새 폴더에 콘텐츠를 추출 합니다. 보관 파일을 압축 하는 경우에 기본 디렉터리 포함 됩니다 및 효율성을 통해 작업 속도 강조 하기 위해에서 압축 수준을 설정 합니다. <xref:System.IO.Compression.ZipFile> 클래스를 사용하려면 프로젝트에서 `System.IO.Compression.FileSystem` 어셈블리를 참조해야 합니다.  
  
 [!code-csharp[System.IO.Compression.ZipFile#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.zipfile/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipFile#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.zipfile/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceDirectoryName" /> 또는 <paramref name="destinationArchiveFileName" /> 는 <see cref="F:System.String.Empty" />공백만 포함 하거나 하나 이상의 잘못 된 문자를 포함 합니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceDirectoryName" /> 또는 <paramref name="destinationArchiveFileName" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.IO.PathTooLongException"><paramref name="sourceDirectoryName" /> 또는 <paramref name="destinationArchiveFileName" />, 지정된 된 경로, 파일 이름 또는 둘 다 시스템 정의 최대 길이 초과 합니다.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="sourceDirectoryName" /> 올바르지 않거나 존재 하지 않습니다 (예를 들어 있는 매핑되지 않은 드라이브에 있음).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationArchiveFileName" />가 이미 있는 경우  
  
또는 
지정된 된 디렉터리에 파일을 열 수 없습니다.</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="destinationArchiveFileName" />이 디렉터리를 지정합니다.  
  
또는 
호출자에서 지정 된 디렉터리에 액세스 하는 데 필요한 권한이 없는 <paramref name="sourceDirectoryName" /> 에 지정 된 파일 또는 <paramref name="destinationArchiveFileName" />합니다.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="sourceDirectoryName" /> 또는 <paramref name="destinationArchiveFileName" /> 는 잘못 된 형식이 포함 되어 있습니다.  
  
또는 
Zip 보관 파일에 쓰기를 지원 하지 않습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromDirectory">
      <MemberSignature Language="C#" Value="public static void CreateFromDirectory (string sourceDirectoryName, string destinationArchiveFileName, System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory, System.Text.Encoding entryNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateFromDirectory(string sourceDirectoryName, string destinationArchiveFileName, valuetype System.IO.Compression.CompressionLevel compressionLevel, bool includeBaseDirectory, class System.Text.Encoding entryNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateFromDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationArchiveFileName, System::IO::Compression::CompressionLevel compressionLevel, bool includeBaseDirectory, System::Text::Encoding ^ entryNameEncoding);" />
      <MemberSignature Language="F#" Value="static member CreateFromDirectory : string * string * System.IO.Compression.CompressionLevel * bool * System.Text.Encoding -&gt; unit" Usage="System.IO.Compression.ZipFile.CreateFromDirectory (sourceDirectoryName, destinationArchiveFileName, compressionLevel, includeBaseDirectory, entryNameEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationArchiveFileName" Type="System.String" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
        <Parameter Name="includeBaseDirectory" Type="System.Boolean" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName">보관되는 디렉터리의 경로(상대 또는 절대 경로로 지정)입니다. 상대 경로는 현재 작업 디렉터리에 상대적으로 해석됩니다.</param>
        <param name="destinationArchiveFileName">만들 보관 파일의 경로(상대 또는 절대 경로로 지정)입니다. 상대 경로는 현재 작업 디렉터리에 상대적으로 해석됩니다.</param>
        <param name="compressionLevel">항목을 만들 때 속도 또는 압축 효율을 강조할지를 나타내는 열거형 값 중 하나입니다.</param>
        <param name="includeBaseDirectory"><see langword="true" /> 디렉터리 이름을 포함 하도록 <paramref name="sourceDirectoryName" /> 보관 파일의 루트에 <see langword="false" /> 디렉터리의 내용만 포함 합니다.</param>
        <param name="entryNameEncoding">이 보관 파일에서 이름을 읽거나 쓰는 동안 사용할 인코딩입니다. 인코딩이 항목 이름에 대해 UTF-8 인코딩을 지원하지 않는 Zip 보관 도구와 라이브러리를 사용하여 상호 운용성에 인코딩이 필요할 때만 이 매개 변수에 대한 값을 지정합니다.</param>
        <summary>지정된 디렉터리의 파일 및 디렉터리를 포함하고 항목 이름에 대해 지정된 압축 수준 및 문자 인코딩을 사용하며 기본 디렉터리를 선택적으로 포함하는 Zip 보관 파일을 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파일 시스템에서 디렉터리 구조는 보관 파일에 유지 됩니다. 디렉터리가 비어 있으면 빈 보관 파일이 생성 됩니다. 압축 수준 및 문자 인코딩 및 보관 파일에 있는 기본 디렉터리를 포함할지 여부를 지정 하려면이 메서드 오버 로드를 사용 합니다.  
  
 보관 파일에 이미 있는 경우는 <xref:System.IO.IOException> 예외가 throw 됩니다. 지정한 이름 가진 항목이 이미 보관 되어 있는, 경우에 두 번째 항목을 동일한 이름으로 만들어집니다.  
  
 디렉터리에 파일 보관 파일에 추가할 수 없습니다, 불완전 하 고, 잘못 된 보관 파일을 그대로 및 메서드가 throw 하는 경우는 <xref:System.IO.IOException> 예외입니다.  
  
 하는 경우 `entryNameEncoding` 이외의 값으로 설정 되어 `null`, 항목 이름 지정 된 인코딩을 사용 하 여 인코딩됩니다. 각 항목에 대 한 언어 플래그 (로컬 파일 헤더의 범용 비트 플래그) 인코딩이 설정 되어 지정 된 인코딩을 u t F-8 인 경우  
  
 하는 경우 `entryNameEncoding` 로 설정 된 `null`, 항목 이름을 다음 규칙에 따라 인코딩됩니다.  
  
-   ASCII 범위 밖의 문자를 포함 하는 항목 이름에 대 한 언어 인코딩 플래그를 설정 하 고 u t F-8는 항목 이름을 인코딩하는 데 사용 됩니다.  
  
-   ASCII 문자만 포함 된 항목 이름에 대해 언어 인코딩 플래그를 설정 하 고 현재 시스템 기본값 코드 페이지는 항목 이름을 인코딩하는 데 사용 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceDirectoryName" /> 또는 <paramref name="destinationArchiveFileName" /> 는 <see cref="F:System.String.Empty" />공백만 포함 하거나 하나 이상의 잘못 된 문자를 포함 합니다.  
  
또는 
 <paramref name="entryNameEncoding" /> 유니코드로 인코딩 utf-8 이외의 합니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceDirectoryName" /> 또는 <paramref name="destinationArchiveFileName" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.IO.PathTooLongException"><paramref name="sourceDirectoryName" /> 또는 <paramref name="destinationArchiveFileName" />, 지정된 된 경로, 파일 이름 또는 둘 다 시스템 정의 최대 길이 초과 합니다.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="sourceDirectoryName" /> 올바르지 않거나 존재 하지 않습니다 (예를 들어 있는 매핑되지 않은 드라이브에 있음).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationArchiveFileName" />가 이미 있는 경우  
  
또는 
지정된 된 디렉터리에 파일을 열 수 없습니다.</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="destinationArchiveFileName" />이 디렉터리를 지정합니다.  
  
또는 
호출자에서 지정 된 디렉터리에 액세스 하는 데 필요한 권한이 없는 <paramref name="sourceDirectoryName" /> 에 지정 된 파일 또는 <paramref name="destinationArchiveFileName" />합니다.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="sourceDirectoryName" /> 또는 <paramref name="destinationArchiveFileName" /> 는 잘못 된 형식이 포함 되어 있습니다.  
  
또는 
Zip 보관 파일에 쓰기를 지원 하지 않습니다.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExtractToDirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 Zip 보관 파일의 모든 파일을 파일 시스템의 디렉터리에 추출합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExtractToDirectory (sourceArchiveFileName As String, destinationDirectoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExtractToDirectory(System::String ^ sourceArchiveFileName, System::String ^ destinationDirectoryName);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : string * string -&gt; unit" Usage="System.IO.Compression.ZipFile.ExtractToDirectory (sourceArchiveFileName, destinationDirectoryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArchiveFileName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceArchiveFileName">추출되는 보관 파일의 경로입니다.</param>
        <param name="destinationDirectoryName">추출된 파일을 배치할 디렉터리의 경로이며 상대 경로 또는 절대 경로로 지정됩니다. 상대 경로는 현재 작업 디렉터리에 상대적으로 해석됩니다.</param>
        <summary>지정된 Zip 보관 파일의 모든 파일을 파일 시스템의 디렉터리에 추출합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 지정된 된 디렉터리와 모든 하위 디렉터리를 만듭니다. 대상 디렉터리가 이미 존재할 수 없습니다. 예외에서 경로 유효성 검사와 관련 된 `destinationDirectoryName` 또는 `sourceArchiveFileName` 매개 변수 추출 하기 전에 throw 됩니다. 이 고, 그렇지 추출 하는 동안 오류가 발생 하는 경우 보관 파일을 부분적으로 추출 된 남아 있습니다. 각 추출 된 파일에 지정 된 디렉터리에 동일한 상대 경로 `destinationDirectoryName` 항목에 해당 소스로 보관 파일의 루트에 있습니다.  
  
   
  
## Examples  
 만들고 사용 하 여 zip 보관 파일을 추출 하는 방법을 보여 주는이 예제는 <xref:System.IO.Compression.ZipFile> 클래스입니다. 폴더의 내용을 zip 보관 파일로 압축 하 고 해당 콘텐츠를 새 폴더로 추출 합니다. <xref:System.IO.Compression.ZipFile> 클래스를 사용하려면 프로젝트에서 `System.IO.Compression.FileSystem` 어셈블리를 참조해야 합니다.  
  
 [!code-csharp[System.IO.Compression.ZipFile#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.zipfile/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.zipfile/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationDirectoryName" /> 또는 <paramref name="sourceArchiveFileName" /> 는 <see cref="F:System.String.Empty" />공백만 포함 하거나 하나 이상의 잘못 된 문자를 포함 합니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationDirectoryName" /> 또는 <paramref name="sourceArchiveFileName" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.IO.PathTooLongException">지정된 된 경로 <paramref name="destinationDirectoryName" /> 또는 <paramref name="sourceArchiveFileName" /> 시스템 정의 최대 길이 초과 합니다.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationDirectoryName" />가 지정한 디렉터리가 이미 있습니다.  
  
또는 
보관 파일에 있는 항목의 이름이 <see cref="F:System.String.Empty" />이거나, 공백만 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.  
  
또는 
보관 항목을 추출 하 여 지정 된 디렉터리 외부에 있는 파일을 만듭니다 <paramref name="destinationDirectoryName" />합니다. 예를 들어 항목 이름에 부모 디렉터리 접근자가 있는 경우 이 현상이 발생할 수 있습니다. 
또는 
추출할 보관 항목 동일한 보관 저장소에서 이미 추출 된 진입점으로 동일한 이름이 있습니다.</exception>
        <exception cref="T:System.UnauthorizedAccessException">호출자에 게 필요한 권한을 보관 파일 또는 대상 디렉터리에 액세스할 수 없습니다.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationDirectoryName" /> 또는 <paramref name="sourceArchiveFileName" /> 는 잘못 된 형식이 포함 되어 있습니다.</exception>
        <exception cref="T:System.IO.FileNotFoundException"><paramref name="sourceArchiveFileName" />을 찾을 수 없습니다.</exception>
        <exception cref="T:System.IO.InvalidDataException">지정 된 보관 <paramref name="sourceArchiveFileName" /> 올바른 zip 보관 위치가 아닙니다.  
  
또는 
보관 항목을 찾을 수 없거나 손상 되었습니다.  
  
또는 
지원되지 않는 압축 방법을 사용하여 보관 파일 항목이 손상되었습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName, bool overwriteFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName, bool overwriteFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExtractToDirectory (sourceArchiveFileName As String, destinationDirectoryName As String, overwriteFiles As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExtractToDirectory(System::String ^ sourceArchiveFileName, System::String ^ destinationDirectoryName, bool overwriteFiles);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : string * string * bool -&gt; unit" Usage="System.IO.Compression.ZipFile.ExtractToDirectory (sourceArchiveFileName, destinationDirectoryName, overwriteFiles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArchiveFileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="destinationDirectoryName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="overwriteFiles" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="sourceArchiveFileName">파일 시스템에 추출 되는 보관 파일 경로입니다.</param>
        <param name="destinationDirectoryName">대상 디렉터리에 파일 시스템 경로입니다. 지정 된 디렉터리 없어야 하지만에 포함 된 디렉터리가 있어야 합니다.</param>
        <param name="overwriteFiles"><see langword="true" /> 파일을 덮어쓰려면 <see langword="false" /> 그렇지 않은 경우.</param>
        <summary>모든 파일 시스템 디렉터리에 지정 된 보관 파일에 있는 파일을 추출합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 지정한 디렉터리가 있어야 합니다. 메서드는 지정된 된 디렉터리와 모든 하위 디렉터리를 만듭니다.
 
 보관 파일을 추출 하는 동안 오류가 발생 하는, 보관 파일을 부분적으로 추출 된 상태로 유지 됩니다.
  
 추출 된 파일에 대 한 동일한 상대 경로 각 항목을 추출할는 `destinationDirectoryName` 보관 파일에 항목에 있습니다.
 
 경로 상대 또는 절대 경로 정보를 지정할 수 있습니다. 상대 경로는 현재 작업 디렉터리에 상대적으로 해석됩니다.
 
 보관 파일에 잘못 된 경우 마지막으로 수정한 시간, 첫 번째 날짜 및 시간 Zip 타임 스탬프 형식 (1980 년 1 월 1, 자정)으로 표현 됩니다.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceArchiveFileName" /> 또는 <paramref name="destinationDirectoryName" /> 길이가 0 인 문자열인, 공백만 포함 또는 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <see cref="F:System.IO.Path.InvalidPathChars" />합니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceArchiveFileName" /> 또는 <paramref name="destinationDirectoryName" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.IO.PathTooLongException"><paramref name="sourceArchiveFileName" /> 또는 <paramref name="destinationDirectoryName" /> 지정 경로, 파일 이름 또는 둘 다는 시스템 정의 최대 길이 초과 합니다.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">지정 된 경로가 <paramref name="sourceArchiveFileName" /> 또는 <paramref name="destinationDirectoryName" /> 올바르지 않습니다 (예를 들어 있는 매핑되지 않은 드라이브에 있음).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationDirectoryName" />가 지정한 디렉터리가 이미 있습니다.

또는

I/O 오류가 발생했습니다.

또는

이름을 <see cref="T:System.IO.Compression.ZipArchiveEntry" /> 길이가 0 인 경우, 공백만 포함 또는 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <see cref="F:System.IO.Path.InvalidPathChars" />합니다.

또는

추출 된 <see cref="T:System.IO.Compression.ZipArchiveEntry" /> (예를 들어, 때문에 부모 디렉터리 접근자가) 대상 디렉터리 외부에 있는 파일 대상을 초래 합니다.

또는

<see cref="T:System.IO.Compression.ZipArchiveEntry" /> 동일한 이름이 동일한 보관 저장소에서 이미 추출 된 항목입니다.</exception>
        <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="sourceArchiveFileName" /> 또는 <paramref name="destinationDirectoryName" />의 형식이 잘못되었습니다.</exception>
        <exception cref="T:System.IO.FileNotFoundException"><paramref name="sourceArchiveFileName" />을 찾을 수 없습니다.</exception>
        <exception cref="T:System.IO.InvalidDataException">지정 된 보관 <paramref name="sourceArchiveFileName" /> 잘못 된 <see cref="T:System.IO.Compression.ZipArchive" />합니다.

또는

<see cref="T:System.IO.Compression.ZipArchiveEntry" /> 찾을 수 없거나 손상 되었습니다.

또는

<see cref="T:System.IO.Compression.ZipArchiveEntry" /> 지원 되지 않는 압축 방법을 사용 하 여 압축 했습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName, System.Text.Encoding entryNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName, class System.Text.Encoding entryNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExtractToDirectory (sourceArchiveFileName As String, destinationDirectoryName As String, entryNameEncoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExtractToDirectory(System::String ^ sourceArchiveFileName, System::String ^ destinationDirectoryName, System::Text::Encoding ^ entryNameEncoding);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : string * string * System.Text.Encoding -&gt; unit" Usage="System.IO.Compression.ZipFile.ExtractToDirectory (sourceArchiveFileName, destinationDirectoryName, entryNameEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArchiveFileName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="sourceArchiveFileName">추출되는 보관 파일의 경로입니다.</param>
        <param name="destinationDirectoryName">추출된 파일을 배치할 디렉터리의 경로이며 상대 경로 또는 절대 경로로 지정됩니다. 상대 경로는 현재 작업 디렉터리에 상대적으로 해석됩니다.</param>
        <param name="entryNameEncoding">이 보관 파일에서 이름을 읽거나 쓰는 동안 사용할 인코딩입니다. 인코딩이 항목 이름에 대해 UTF-8 인코딩을 지원하지 않는 Zip 보관 도구와 라이브러리를 사용하여 상호 운용성에 인코딩이 필요할 때만 이 매개 변수에 대한 값을 지정합니다.</param>
        <summary>지정된 Zip 보관 파일의 모든 파일을 파일 시스템의 디렉터리에 추출하고 항목 이름에 대한 지정된 문자 인코딩을 사용합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 지정된 된 디렉터리와 모든 하위 디렉터리를 만듭니다. 대상 디렉터리가 이미 존재할 수 없습니다. 예외에서 경로 유효성 검사와 관련 된 `destinationDirectoryName` 또는 `sourceArchiveFileName` 매개 변수 추출 하기 전에 throw 됩니다. 이 고, 그렇지 추출 하는 동안 오류가 발생 하는 경우 보관 파일을 부분적으로 추출 된 남아 있습니다. 각 추출 된 파일에 지정 된 디렉터리에 동일한 상대 경로 `destinationDirectoryName` 항목에 해당 소스로 보관 파일의 루트에 있습니다.  
  
 하는 경우 `entryNameEncoding` 이외의 값으로 설정 되어 `null`, 다음 규칙에 따라 디코딩 항목 이름:  
  
-   언어 플래그 (로컬 파일 헤더의 범용 비트 플래그) 인코딩 설정 되지 않은 항목 이름에 대해 지정 된 인코딩을 사용 하 여 항목 이름은 디코딩.  
  
-   언어 인코딩 플래그가 설정 되어 있는 항목에 대 한 항목 이름은 u t F-8을 사용 하 여 디코딩.  
  
 하는 경우 `entryNameEncoding` 로 설정 된 `null`, 다음 규칙에 따라 디코딩 항목 이름:  
  
-   언어 플래그 (로컬 파일 헤더의 범용 비트 플래그) 인코딩 설정 되지 않은 항목에 대 한 항목 이름이 현재 시스템 기본값 코드 페이지를 사용 하 여 디코딩.  
  
-   언어 인코딩 플래그가 설정 되어 있는 항목에 대 한 항목 이름은 u t F-8을 사용 하 여 디코딩.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationDirectoryName" /> 또는 <paramref name="sourceArchiveFileName" /> 는 <see cref="F:System.String.Empty" />공백만 포함 하거나 하나 이상의 잘못 된 문자를 포함 합니다.  
  
또는 
 <paramref name="entryNameEncoding" /> 유니코드로 인코딩 utf-8 이외의 합니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationDirectoryName" /> 또는 <paramref name="sourceArchiveFileName" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.IO.PathTooLongException">지정된 된 경로 <paramref name="destinationDirectoryName" /> 또는 <paramref name="sourceArchiveFileName" /> 시스템 정의 최대 길이 초과 합니다.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationDirectoryName" />가 지정한 디렉터리가 이미 있습니다.  
  
또는 
보관 파일에 있는 항목의 이름이 <see cref="F:System.String.Empty" />이거나, 공백만 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.  
  
또는 
보관 항목을 추출 하 여 지정 된 디렉터리 외부에 있는 파일을 만듭니다 <paramref name="destinationDirectoryName" />합니다. 예를 들어 항목 이름에 부모 디렉터리 접근자가 있는 경우 이 현상이 발생할 수 있습니다. 
또는 
추출할 보관 항목 동일한 보관 저장소에서 이미 추출 된 진입점으로 동일한 이름이 있습니다.</exception>
        <exception cref="T:System.UnauthorizedAccessException">호출자에 게 필요한 권한을 보관 파일 또는 대상 디렉터리에 액세스할 수 없습니다.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationDirectoryName" /> 또는 <paramref name="sourceArchiveFileName" /> 는 잘못 된 형식이 포함 되어 있습니다.</exception>
        <exception cref="T:System.IO.FileNotFoundException"><paramref name="sourceArchiveFileName" />을 찾을 수 없습니다.</exception>
        <exception cref="T:System.IO.InvalidDataException">지정 된 보관 <paramref name="sourceArchiveFileName" /> 올바른 zip 보관 위치가 아닙니다.  
  
또는 
보관 항목을 찾을 수 없거나 손상 되었습니다.  
  
또는 
지원되지 않는 압축 방법을 사용하여 보관 파일 항목이 손상되었습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (string sourceArchiveFileName, string destinationDirectoryName, System.Text.Encoding entryNameEncoding, bool overwriteFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName, class System.Text.Encoding entryNameEncoding, bool overwriteFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ExtractToDirectory (sourceArchiveFileName As String, destinationDirectoryName As String, entryNameEncoding As Encoding, overwriteFiles As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ExtractToDirectory(System::String ^ sourceArchiveFileName, System::String ^ destinationDirectoryName, System::Text::Encoding ^ entryNameEncoding, bool overwriteFiles);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : string * string * System.Text.Encoding * bool -&gt; unit" Usage="System.IO.Compression.ZipFile.ExtractToDirectory (sourceArchiveFileName, destinationDirectoryName, entryNameEncoding, overwriteFiles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArchiveFileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="destinationDirectoryName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="overwriteFiles" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="sourceArchiveFileName">파일 시스템에 추출 되는 보관 파일 경로입니다.</param>
        <param name="destinationDirectoryName">대상 디렉터리에 파일 시스템 경로입니다. 지정 된 디렉터리 없어야 하지만에 포함 된 디렉터리가 있어야 합니다.</param>
        <param name="entryNameEncoding">항목 이름에이 읽을 때 사용할 인코딩을 <see cref="T:System.IO.Compression.ZipArchive" />합니다.</param>
        <param name="overwriteFiles"><see langword="true" /> 파일을 덮어쓰려면 <see langword="false" /> 그렇지 않은 경우.</param>
        <summary>모든 파일 시스템 디렉터리에 지정 된 보관 파일에 있는 파일을 추출합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 지정한 디렉터리가 있어야 합니다. 이 메서드는 지정된 된 디렉터리와 모든 하위 디렉터리를 만듭니다.

 보관 파일을 추출 하는 동안 오류가 발생 하는, 보관 파일을 부분적으로 추출 된 상태로 유지 됩니다.

 추출 된 파일에 대 한 동일한 상대 경로 각 항목을 추출할는 `destinationDirectoryName` 보관 파일에 항목에 있습니다.

 경로 상대 또는 절대 경로 정보를 지정할 수 있습니다. 상대 경로는 현재 작업 디렉터리에 상대적으로 해석됩니다.

 보관 파일에 잘못 된 경우 마지막으로 수정한 시간, 첫 번째 날짜 및 시간 Zip 타임 스탬프 형식 (1980 년 1 월 1, 자정)으로 표현 됩니다.
 
]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceArchiveFileName" /> 또는 <paramref name="destinationDirectoryName" /> 길이가 0 인 문자열인, 공백만 포함 또는 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <see cref="F:System.IO.Path.InvalidPathChars" />합니다.
 
또는 
 <paramref name="entryNameEncoding" /> 유니코드로 인코딩 utf-8 이외의 합니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceArchiveFileName" /> 또는 <paramref name="destinationDirectoryName" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.IO.PathTooLongException"><paramref name="sourceArchiveFileName" /> 또는 <paramref name="destinationDirectoryName" /> 지정 경로, 파일 이름 또는 둘 다는 시스템 정의 최대 길이 초과 합니다.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">지정 된 경로가 <paramref name="sourceArchiveFileName" /> 또는 <paramref name="destinationDirectoryName" /> 올바르지 않습니다 (예를 들어 있는 매핑되지 않은 드라이브에 있음).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationDirectoryName" />가 지정한 디렉터리가 이미 있습니다.

또는

I/O 오류가 발생했습니다.

또는

이름을 <see cref="T:System.IO.Compression.ZipArchiveEntry" /> 길이가 0 인 경우, 공백만 포함 또는 정의 된 대로 하나 이상의 잘못 된 문자가 들어 <see cref="F:System.IO.Path.InvalidPathChars" />합니다.

또는

추출 된 <see cref="T:System.IO.Compression.ZipArchiveEntry" /> (예를 들어, 때문에 부모 디렉터리 접근자가) 대상 디렉터리 외부에 있는 파일 대상을 초래 합니다.

또는

<see cref="T:System.IO.Compression.ZipArchiveEntry" /> 동일한 이름이 동일한 보관 저장소에서 이미 추출 된 항목입니다.</exception>
        <exception cref="T:System.UnauthorizedAccessException">호출자에게 필요한 권한이 없는 경우</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="sourceArchiveFileName" /> 또는 <paramref name="destinationDirectoryName" />의 형식이 잘못되었습니다.</exception>
        <exception cref="T:System.IO.FileNotFoundException"><paramref name="sourceArchiveFileName" />을 찾을 수 없습니다.</exception>
        <exception cref="T:System.IO.InvalidDataException">지정 된 보관 <paramref name="sourceArchiveFileName" /> 잘못 된 <see cref="T:System.IO.Compression.ZipArchive" />합니다.

또는

보관 항목을 찾을 수 없거나 손상 되었습니다.

또는

보관 항목이 지원 되지 않는 압축 방법을 사용 하 여 압축 했습니다.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 경로와 지정된 모드에서 Zip 보관 파일을 엽니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchive Open (string archiveFileName, System.IO.Compression.ZipArchiveMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchive Open(string archiveFileName, valuetype System.IO.Compression.ZipArchiveMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (archiveFileName As String, mode As ZipArchiveMode) As ZipArchive" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Compression::ZipArchive ^ Open(System::String ^ archiveFileName, System::IO::Compression::ZipArchiveMode mode);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.Compression.ZipArchiveMode -&gt; System.IO.Compression.ZipArchive" Usage="System.IO.Compression.ZipFile.Open (archiveFileName, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchive</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="archiveFileName" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
      </Parameters>
      <Docs>
        <param name="archiveFileName">열 보관 파일의 경로(상대 또는 절대 경로로 지정)입니다. 상대 경로는 현재 작업 디렉터리에 상대적으로 해석됩니다.</param>
        <param name="mode">열린 보관 파일의 항목에서 사용되는 동작을 지정하는 열거형 값 중 하나입니다.</param>
        <summary>지정된 경로와 지정된 모드에서 Zip 보관 파일을 엽니다.</summary>
        <returns>열린 Zip 보관 파일입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정한 경우 합니다 `mode` 매개 변수를 <xref:System.IO.Compression.ZipArchiveMode.Read>, 보관 파일을 사용 하 여 열려 <xref:System.IO.FileMode.Open> 에서 <xref:System.IO.FileMode> 파일 모드 값으로 열거형입니다. 보관 파일에 존재 하지 않는 경우는 <xref:System.IO.FileNotFoundException> 예외가 throw 됩니다. 설정 된 `mode` 매개 변수를 <xref:System.IO.Compression.ZipArchiveMode.Read> 호출 하는 것과 같습니다는 <xref:System.IO.Compression.ZipFile.OpenRead%2A> 메서드.  
  
 설정한 경우 합니다 `mode` 매개 변수를 <xref:System.IO.Compression.ZipArchiveMode.Create>, 보관 파일을 사용 하 여 열릴 <xref:System.IO.FileMode.CreateNew?displayProperty=nameWithType> 파일 모드 값으로. 보관 파일에 이미 있는 경우는 <xref:System.IO.IOException> throw 됩니다.  
  
 설정한 경우 합니다 `mode` 매개 변수를 <xref:System.IO.Compression.ZipArchiveMode.Update>, 보관 파일을 사용 하 여 열릴 <xref:System.IO.FileMode.OpenOrCreate?displayProperty=nameWithType> 파일 모드 값으로. 보관 파일이 있는 경우 자동으로 열려 있습니다. 기존 항목을 수정할 수 있으며 새 항목을 만들 수 있습니다. 보관 파일에 존재 하지 않는 경우 새 보관이 만들어집니다. 그러나에서 zip 보관 파일을 만드는 <xref:System.IO.Compression.ZipArchiveMode.Update> 모드에서 만들 만큼 효율적이 지 않습니다. <xref:System.IO.Compression.ZipArchiveMode.Create> 모드입니다.  
  
   
  
## Examples  
 다음 예제에서는 업데이트 모드에서 zip 보관 파일을 열고 보관 파일에 항목을 추가 하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="archiveFileName" />이 <see cref="F:System.String.Empty" />이거나, 공백만 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="archiveFileName" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.IO.PathTooLongException"><paramref name="archiveFileName" />, 지정된 된 경로, 파일 이름 또는 둘 다 시스템 정의 최대 길이 초과 합니다.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="archiveFileName" /> 올바르지 않거나 존재 하지 않습니다 (예를 들어 있는 매핑되지 않은 드라이브에 있음).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="archiveFileName" /> 열 수 없습니다.  
  
또는 
 <paramref name="mode" /> 로 설정 되어 <see cref="F:System.IO.Compression.ZipArchiveMode.Create" />, 하지만 파일에 지정 된 <paramref name="archiveFileName" /> 이미 있습니다.</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="archiveFileName" />이 디렉터리를 지정합니다.  
  
또는 
호출자에서 지정 된 파일에 액세스 하는 데 필요한 권한이 없는 <paramref name="archiveFileName" />합니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> 잘못 된 값을 지정합니다.</exception>
        <exception cref="T:System.IO.FileNotFoundException"><paramref name="mode" /> 로 설정 되어 <see cref="F:System.IO.Compression.ZipArchiveMode.Read" />, 하지만 파일에 지정 된 <paramref name="archiveFileName" /> 찾을 수 없습니다.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="archiveFileName" />에 잘못된 형식이 포함되어 있습니다.</exception>
        <exception cref="T:System.IO.InvalidDataException"><paramref name="archiveFileName" /> zip 보관 위치로 해석할 수 없습니다.  
  
또는 
 <paramref name="mode" /> <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />, 항목이 누락 되었거나 손상 하 고 읽을 수 없습니다.  
  
또는 
 <paramref name="mode" /> <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />, 이지만 엔트리가 너무 커서 메모리에 맞지 않습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchive Open (string archiveFileName, System.IO.Compression.ZipArchiveMode mode, System.Text.Encoding entryNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchive Open(string archiveFileName, valuetype System.IO.Compression.ZipArchiveMode mode, class System.Text.Encoding entryNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (archiveFileName As String, mode As ZipArchiveMode, entryNameEncoding As Encoding) As ZipArchive" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Compression::ZipArchive ^ Open(System::String ^ archiveFileName, System::IO::Compression::ZipArchiveMode mode, System::Text::Encoding ^ entryNameEncoding);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.Compression.ZipArchiveMode * System.Text.Encoding -&gt; System.IO.Compression.ZipArchive" Usage="System.IO.Compression.ZipFile.Open (archiveFileName, mode, entryNameEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchive</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="archiveFileName" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="archiveFileName">열 보관 파일의 경로(상대 또는 절대 경로로 지정)입니다. 상대 경로는 현재 작업 디렉터리에 상대적으로 해석됩니다.</param>
        <param name="mode">열린 보관 파일의 엔트리에서 사용되는 동작을 지정하는 열거형 값 중 하나입니다.</param>
        <param name="entryNameEncoding">이 보관 파일에서 이름을 읽거나 쓰는 동안 사용할 인코딩입니다. 인코딩이 항목 이름에 대해 UTF-8 인코딩을 지원하지 않는 Zip 보관 도구와 라이브러리를 사용하여 상호 운용성에 인코딩이 필요할 때만 이 매개 변수에 대한 값을 지정합니다.</param>
        <summary>지정된 모드의 지정된 경로에서 항목 이름에 대해 지정된 문자 인코딩을 사용하며 Zip 보관 파일을 엽니다.</summary>
        <returns>열린 Zip 보관 파일입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정한 경우 합니다 `mode` 매개 변수를 <xref:System.IO.Compression.ZipArchiveMode.Read>, 보관 파일을 사용 하 여 열릴 <xref:System.IO.FileMode.Open?displayProperty=nameWithType> 파일 모드 값으로. 보관 파일에 존재 하지 않는 경우는 <xref:System.IO.FileNotFoundException> 예외가 throw 됩니다. 설정 된 `mode` 매개 변수를 <xref:System.IO.Compression.ZipArchiveMode.Read> 호출 하는 것과 같습니다는 <xref:System.IO.Compression.ZipFile.OpenRead%2A> 메서드.  
  
 설정한 경우 합니다 `mode` 매개 변수를 <xref:System.IO.Compression.ZipArchiveMode.Create>, 보관 파일을 사용 하 여 열릴 <xref:System.IO.FileMode.CreateNew?displayProperty=nameWithType> 파일 모드 값으로. 보관 파일에 이미 있는 경우는 <xref:System.IO.IOException> throw 됩니다.  
  
 설정한 경우 합니다 `mode` 매개 변수를 <xref:System.IO.Compression.ZipArchiveMode.Update>, 보관 파일을 사용 하 여 열릴 <xref:System.IO.FileMode.OpenOrCreate?displayProperty=nameWithType> 파일 모드 값으로. 보관 파일이 있는 경우 자동으로 열려 있습니다. 기존 항목을 수정할 수 있으며 새 항목을 만들 수 있습니다. 보관 파일에 존재 하지 않는 경우 새 보관이 만들어집니다. 그러나에서 zip 보관 파일을 만드는 <xref:System.IO.Compression.ZipArchiveMode.Update> 모드에서 만들 만큼 효율적이 지 않습니다. <xref:System.IO.Compression.ZipArchiveMode.Create> 모드입니다.  
  
 읽기 위해 zip 보관 파일을 여는 경우 및 `entryNameEncoding` 로 설정 되어 `null`, 다음 규칙에 따라 디코딩 항목 이름:  
  
-   플래그 (로컬 파일 헤더의 범용 비트 플래그) 인코딩 언어를 설정 하지 않은 경우 현재 시스템 기본값 코드 페이지를 항목 이름 디코딩하는 데 사용 됩니다.  
  
-   언어 인코딩 플래그를 설정 하는 경우 u t F-8은 항목 이름 디코딩하는 데 사용 됩니다.  
  
 읽기 위해 zip 보관 파일을 여는 경우 및 `entryNameEncoding` 이외의 값으로 설정 되어 `null`, 항목 이름은 다음 규칙에 따라 디코딩.  
  
-   언어 인코딩이 플래그는 설정 되지 않은 경우, 지정 된 `entryNameEncoding` 를 항목 이름 디코딩하는 데 사용 됩니다.  
  
-   언어 인코딩 플래그를 설정 하는 경우 u t F-8은 항목 이름 디코딩하는 데 사용 됩니다.  
  
 보관 파일을 작성 하는 경우 및 `entryNameEncoding` 로 설정 된 `null`, 항목 이름은 다음 규칙에 따라 인코딩됩니다.  
  
-   ASCII 범위 밖의 문자를 포함 하는 항목 이름에 대해 언어 인코딩 플래그를 설정 하 고 항목 이름 u t F-8을 사용 하 여 인코딩됩니다.  
  
-   ASCII 문자만 포함 된 항목 이름에 대해 언어 인코딩 플래그를 설정 하지 않으면 및 현재 시스템 기본값 코드 페이지를 사용 하 여 항목 이름은 인코딩됩니다.  
  
 보관 파일을 작성 하는 경우 및 `entryNameEncoding` 이외의 값으로 설정 됩니다 `null`, 지정 된 `entryNameEncoding` 바이트에 항목 이름을 인코딩하는 데 사용 됩니다. 언어 인코딩이 플래그 (로컬 파일 헤더의 범용 비트 플래그)에 지정 된 인코딩의 인코딩을 u t F-8 인 경우에 설정 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="archiveFileName" />이 <see cref="F:System.String.Empty" />이거나, 공백만 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.  
  
또는 
 <paramref name="entryNameEncoding" /> 유니코드로 인코딩 utf-8 이외의 합니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="archiveFileName" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.IO.PathTooLongException"><paramref name="archiveFileName" />, 지정된 된 경로, 파일 이름 또는 둘 다 시스템 정의 최대 길이 초과 합니다.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="archiveFileName" /> 올바르지 않거나 존재 하지 않습니다 (예를 들어 있는 매핑되지 않은 드라이브에 있음).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="archiveFileName" /> 열 수 없습니다.  
  
또는 
 <paramref name="mode" /> 로 설정 되어 <see cref="F:System.IO.Compression.ZipArchiveMode.Create" />, 하지만 파일에 지정 된 <paramref name="archiveFileName" /> 이미 있습니다.</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="archiveFileName" />이 디렉터리를 지정합니다.  
  
또는 
호출자에서 지정 된 파일에 액세스 하는 데 필요한 권한이 없는 <paramref name="archiveFileName" />합니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> 잘못 된 값을 지정합니다.</exception>
        <exception cref="T:System.IO.FileNotFoundException"><paramref name="mode" /> 로 설정 되어 <see cref="F:System.IO.Compression.ZipArchiveMode.Read" />, 하지만 파일에 지정 된 <paramref name="archiveFileName" /> 찾을 수 없습니다.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="archiveFileName" />에 잘못된 형식이 포함되어 있습니다.</exception>
        <exception cref="T:System.IO.InvalidDataException"><paramref name="archiveFileName" /> zip 보관 위치로 해석할 수 없습니다.  
  
또는 
 <paramref name="mode" /> <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />, 항목이 누락 되었거나 손상 하 고 읽을 수 없습니다.  
  
또는 
 <paramref name="mode" /> <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />, 이지만 엔트리가 너무 커서 메모리에 맞지 않습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenRead">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchive OpenRead (string archiveFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchive OpenRead(string archiveFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFile.OpenRead(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenRead (archiveFileName As String) As ZipArchive" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Compression::ZipArchive ^ OpenRead(System::String ^ archiveFileName);" />
      <MemberSignature Language="F#" Value="static member OpenRead : string -&gt; System.IO.Compression.ZipArchive" Usage="System.IO.Compression.ZipFile.OpenRead archiveFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchive</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="archiveFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="archiveFileName">열 보관 파일의 경로(상대 또는 절대 경로로 지정)입니다. 상대 경로는 현재 작업 디렉터리에 상대적으로 해석됩니다.</param>
        <summary>지정된 경로에서 읽기 위해 Zip 보관 파일을 엽니다.</summary>
        <returns>열린 Zip 보관 파일입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 호출에 해당 하는 <xref:System.IO.Compression.ZipFile.Open%2A> 메서드와 설정 합니다 `mode` 매개 변수를 <xref:System.IO.Compression.ZipArchiveMode.Read>입니다. 보관 파일을 사용 하 여 열릴 <xref:System.IO.FileMode.Open?displayProperty=nameWithType> 파일 모드 값으로. 보관 파일에 존재 하지 않는 경우는 <xref:System.IO.FileNotFoundException> 예외가 throw 됩니다.  
  
   
  
## Examples  
 다음 예에서는 읽기 위해 zip 보관 파일을 여는 방법을 보여 줍니다.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="archiveFileName" />이 <see cref="F:System.String.Empty" />이거나, 공백만 포함하거나, 하나 이상의 잘못된 문자를 포함합니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="archiveFileName" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.IO.PathTooLongException"><paramref name="archiveFileName" />, 지정된 된 경로, 파일 이름 또는 둘 다 시스템 정의 최대 길이 초과 합니다.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="archiveFileName" /> 올바르지 않거나 존재 하지 않습니다 (예를 들어 있는 매핑되지 않은 드라이브에 있음).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="archiveFileName" /> 열 수 없습니다.</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="archiveFileName" />이 디렉터리를 지정합니다.  
  
또는 
호출자에서 지정 된 파일에 액세스 하는 데 필요한 권한이 없는 <paramref name="archiveFileName" />합니다.</exception>
        <exception cref="T:System.IO.FileNotFoundException">에 지정 된 파일 <paramref name="archiveFileName" /> 찾을 수 없습니다.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="archiveFileName" />에 잘못된 형식이 포함되어 있습니다.</exception>
        <exception cref="T:System.IO.InvalidDataException"><paramref name="archiveFileName" /> zip 보관 위치로 해석할 수 없습니다.</exception>
      </Docs>
    </Member>
  </Members>
</Type>