<Type Name="ZipFileExtensions" FullName="System.IO.Compression.ZipFileExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="772da77372db26d13b4e05553eaf2a15454095bc" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58731587" /></Metadata><TypeSignature Language="C#" Value="public static class ZipFileExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ZipFileExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Compression.ZipFileExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ZipFileExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ZipFileExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type ZipFileExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.3;netstandard-1.4;netstandard-1.6">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.IO.Compression.ZipArchive" /> 및 <see cref="T:System.IO.Compression.ZipArchiveEntry" /> 클래스에 대한 확장 메서드를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.IO.Compression.ZipFileExtensions> 클래스를 확장 하는 정적 메서드만 포함 합니다 <xref:System.IO.Compression.ZipArchive> 및 <xref:System.IO.Compression.ZipArchiveEntry> 클래스입니다. 인스턴스를 만들지 않으면 합니다 <xref:System.IO.Compression.ZipFileExtensions> 클래스;의 인스턴스에서 이러한 메서드를 사용 하는 대신 <xref:System.IO.Compression.ZipArchive> 또는 <xref:System.IO.Compression.ZipArchiveEntry>합니다.  
  
 확장 메서드를 사용 하려면 참조 해야 합니다는 `System.IO.Compression.FileSystem` 프로젝트 어셈블리에에서 있습니다. 합니다 `System.IO.Compression.FileSystem` 어셈블리에서 사용할 수 없는 [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] 앱. 따라서 합니다 <xref:System.IO.Compression.ZipFileExtensions> 및 <xref:System.IO.Compression.ZipFile> 클래스 (둘 다에 `System.IO.Compression.FileSystem` 어셈블리)에서 사용할 수 없는 [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] 앱. [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] 앱을 사용 하 여 작업할 압축 된 파일의 메서드를 사용 하 여 <xref:System.IO.Compression.ZipArchive>, <xref:System.IO.Compression.ZipArchiveEntry>합니다 <xref:System.IO.Compression.DeflateStream>, 및 <xref:System.IO.Compression.GZipStream>합니다.  
  
 합니다 <xref:System.IO.Compression.ZipFileExtensions> 클래스를 확장 하는 세 가지 메서드가 포함 되어 <xref:System.IO.Compression.ZipArchive>:  
  
-   <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%28System.IO.Compression.ZipArchive%2CSystem.String%2CSystem.String%29>  
  
-   <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%28System.IO.Compression.ZipArchive%2CSystem.String%2CSystem.String%2CSystem.IO.Compression.CompressionLevel%29>  
  
-   <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%28System.IO.Compression.ZipArchive%2CSystem.String%29>  
  
 합니다 <xref:System.IO.Compression.ZipFileExtensions> 클래스를 확장 하는 두 가지 메서드가 포함 되어 <xref:System.IO.Compression.ZipArchiveEntry>:  
  
-   <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29>  
  
-   <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29>  
  
   
  
## Examples  
 다음 예제에서는 기존 파일의 zip 보관 파일에서 새 항목을 만들고 디렉터리에 아카이브의 압축을 풉니다 하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 다음 예제에서는 zip 보관 파일의 콘텐츠를 반복 하 고 확장명이.txt 인 파일을 추출 하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateEntryFromFile">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>파일을 압축하고 ZIP 보관 위치에 추가하여 보관합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEntryFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchiveEntry CreateEntryFromFile (this System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchiveEntry CreateEntryFromFile(class System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateEntryFromFile (destination As ZipArchive, sourceFileName As String, entryName As String) As ZipArchiveEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Compression::ZipArchiveEntry ^ CreateEntryFromFile(System::IO::Compression::ZipArchive ^ destination, System::String ^ sourceFileName, System::String ^ entryName);" />
      <MemberSignature Language="F#" Value="static member CreateEntryFromFile : System.IO.Compression.ZipArchive * string * string -&gt; System.IO.Compression.ZipArchiveEntry" Usage="System.IO.Compression.ZipFileExtensions.CreateEntryFromFile (destination, sourceFileName, entryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Compression.ZipArchive" RefType="this" />
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="entryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destination">파일을 추가할 zip 보관 위치입니다.</param>
        <param name="sourceFileName">보관할 파일의 경로입니다. 상대 또는 절대 경로를 지정할 수 있습니다. 상대 경로는 현재 작업 디렉터리에 상대적으로 해석됩니다.</param>
        <param name="entryName">zip 보관 위치에 만들 항목의 이름입니다.</param>
        <summary>파일을 압축하고 ZIP 보관 위치에 추가하여 보관합니다.</summary>
        <returns>ZIP 보관 위치에 있는 새 항목에 대한 래퍼입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 보관 파일에 새 항목으로 지정 된 파일의 내용이 들어 `sourceFileName`합니다. 지정한 이름 가진 항목 (`entryName`) 이미 보관 파일에 있는 두 번째 항목을 동일한 이름으로 만들어집니다. <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> 항목의 속성이 마지막으로 파일 시스템에 파일이 변경 되었습니다.  
  
 때 `ZipArchiveMode.Update` 가 있는 경우 항목의 크기 제한은 제한 <xref:System.Int32.MaxValue?displayProperty=nameWithType>합니다. 이 제한은 업데이트 모드를 사용 하기 때문에 <xref:System.IO.MemoryStream> 내부적으로 수 있도록 보관 파일을 업데이트 하는 경우 필요한 검색 및 <xref:System.IO.MemoryStream> 에 int의 크기를 최대 같음  
   
  
## Examples  
 다음 예제에서는 기존 파일에서 zip 보관 파일에서 새 항목을 만드는 방법을 보여 줍니다.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceFileName" />이 <see cref="F:System.String.Empty" />이거나, 공백만 포함하거나 또는 잘못된 문자를 하나 이상 포함하는 경우  
  
또는 
 <paramref name="entryName" />가 <see cref="F:System.String.Empty" />입니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceFileName" /> 또는 <paramref name="entryName" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.IO.PathTooLongException"><paramref name="sourceFileName" />에서 지정된 경로, 파일 이름 또는 둘 다가 시스템에 정의된 최대 길이를 초과하는 경우</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="sourceFileName" />가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="sourceFileName" />에서 지정한 파일을 열 수 없거나 너무 커서 업데이트할 수 없습니다(현재 제한은 [`Int32.MaxValue`](https://docs.microsoft.com/dotnet/api/system.int32.maxvalue)).</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="sourceFileName" />은 디렉터리를 지정합니다.  
  
또는 
<paramref name="sourceFileName" />에서 지정한 파일에 액세스하는 데 필요한 권한이 호출자에게 없는 경우</exception>
        <exception cref="T:System.IO.FileNotFoundException"><paramref name="sourceFileName" />에서 지정한 파일을 찾을 수 없는 경우</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="sourceFileName" /> 매개 변수의 형식이 잘못되었습니다.  
  
또는 
zip 보관 위치가 쓰기를 지원하지 않는 경우</exception>
        <exception cref="T:System.ObjectDisposedException">zip 보관 위치가 삭제되었습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateEntryFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchiveEntry CreateEntryFromFile (this System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName, System.IO.Compression.CompressionLevel compressionLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchiveEntry CreateEntryFromFile(class System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName, valuetype System.IO.Compression.CompressionLevel compressionLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String,System.IO.Compression.CompressionLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Compression::ZipArchiveEntry ^ CreateEntryFromFile(System::IO::Compression::ZipArchive ^ destination, System::String ^ sourceFileName, System::String ^ entryName, System::IO::Compression::CompressionLevel compressionLevel);" />
      <MemberSignature Language="F#" Value="static member CreateEntryFromFile : System.IO.Compression.ZipArchive * string * string * System.IO.Compression.CompressionLevel -&gt; System.IO.Compression.ZipArchiveEntry" Usage="System.IO.Compression.ZipFileExtensions.CreateEntryFromFile (destination, sourceFileName, entryName, compressionLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Compression.ZipArchive" RefType="this" />
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="entryName" Type="System.String" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
      </Parameters>
      <Docs>
        <param name="destination">파일을 추가할 zip 보관 위치입니다.</param>
        <param name="sourceFileName">보관할 파일의 경로입니다. 상대 또는 절대 경로를 지정할 수 있습니다. 상대 경로는 현재 작업 디렉터리에 상대적으로 해석됩니다.</param>
        <param name="entryName">zip 보관 위치에 만들 항목의 이름입니다.</param>
        <param name="compressionLevel">항목을 만들 때 속도 또는 압축 효율을 강조할지 여부를 나타내는 열거형 값 중 하나입니다.</param>
        <summary>지정된 압축 수준을 사용하여 압축하고 zip 보관 저장소에 추가하여 파일을 보관합니다.</summary>
        <returns>ZIP 보관 위치에 있는 새 항목에 대한 래퍼입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 보관 파일에 새 항목으로 지정 된 파일의 내용이 들어 `sourceFileName`합니다. 지정한 이름 가진 항목 (`entryName`) 이미 보관 파일에 있는 두 번째 항목을 동일한 이름으로 만들어집니다. <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> 항목의 속성이 마지막으로 파일 시스템에 파일이 변경 되었습니다.  
  
 때 `ZipArchiveMode.Update` 가 있는 경우 항목의 크기 제한은 제한 <xref:System.Int32.MaxValue?displayProperty=nameWithType>합니다. 이 제한은 업데이트 모드를 사용 하기 때문에 <xref:System.IO.MemoryStream> 내부적으로 수 있도록 보관 파일을 업데이트 하는 경우 필요한 검색 및 <xref:System.IO.MemoryStream> 에 int의 크기를 최대 같음  
  
## Examples  
 다음 예제에서는 기존 파일의 zip 보관 파일에 새 항목을 만들고 압축 수준을 지정 하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program4.cs#4)]
 [!code-vb[System.IO.Compression.ZipArchive#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceFileName" />이 <see cref="F:System.String.Empty" />이거나, 공백만 포함하거나 또는 잘못된 문자를 하나 이상 포함하는 경우  
  
또는 
 <paramref name="entryName" />가 <see cref="F:System.String.Empty" />입니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceFileName" /> 또는 <paramref name="entryName" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="sourceFileName" />가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
        <exception cref="T:System.IO.PathTooLongException"><paramref name="sourceFileName" />에서 지정된 경로, 파일 이름 또는 둘 다가 시스템에 정의된 최대 길이를 초과하는 경우</exception>
        <exception cref="T:System.IO.IOException"><paramref name="sourceFileName" />에서 지정한 파일을 열 수 없거나 너무 커서 업데이트할 수 없습니다(현재 제한은 [`Int32.MaxValue`](https://docs.microsoft.com/dotnet/api/system.int32.maxvalue)).</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="sourceFileName" />은 디렉터리를 지정합니다.  
  
또는 
<paramref name="sourceFileName" />에서 지정한 파일에 액세스하는 데 필요한 권한이 호출자에게 없는 경우</exception>
        <exception cref="T:System.IO.FileNotFoundException"><paramref name="sourceFileName" />에서 지정한 파일을 찾을 수 없는 경우</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="sourceFileName" /> 매개 변수의 형식이 잘못되었습니다.  
  
또는 
zip 보관 위치가 쓰기를 지원하지 않는 경우</exception>
        <exception cref="T:System.ObjectDisposedException">zip 보관 위치가 삭제되었습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (this System.IO.Compression.ZipArchive source, string destinationDirectoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(class System.IO.Compression.ZipArchive source, string destinationDirectoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExtractToDirectory (source As ZipArchive, destinationDirectoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ExtractToDirectory(System::IO::Compression::ZipArchive ^ source, System::String ^ destinationDirectoryName);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : System.IO.Compression.ZipArchive * string -&gt; unit" Usage="System.IO.Compression.ZipFileExtensions.ExtractToDirectory (source, destinationDirectoryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchive" RefType="this" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">파일의 압축을 풀 zip 보관 위치입니다.</param>
        <param name="destinationDirectoryName">추출된 파일을 넣을 디렉터리의 경로입니다. 상대 또는 절대 경로를 지정할 수 있습니다. 상대 경로는 현재 작업 디렉터리에 상대적으로 해석됩니다.</param>
        <summary>ZIP 보관 파일의 모든 파일을 파일 시스템의 디렉터리에 추출합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 지정 된 디렉터리를 만듭니다 `destinationDirectoryName`합니다. 대상 디렉터리가 이미 있는 경우이 메서드 덮어쓰지 않습니다. throw는 <xref:System.IO.IOException> 예외입니다. 메서드는 또한 zip 보관 파일의 계층 구조를 반영 하는 하위 디렉터리를 만듭니다. 추출 하는 동안 오류가 발생 하는 경우 보관 파일을 부분적으로 추출 된 상태로 유지 됩니다. 각 추출 된 파일에 지정 된 디렉터리에 동일한 상대 경로 `destinationDirectoryName` 항목에 해당 소스로 보관 파일의 루트에 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 기존 파일의 zip 보관 파일에 새 항목을 만들고 새 디렉터리에 보관 파일을 추출 하는 방법을 보여 줍니다. 컴파일러 하려면에서를 참조 해야이 코드 예제는 `System.IO.Compression` 및 `System.IO.Compression.FileSystem` 프로젝트의 어셈블리입니다.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationDirectoryName" />이 <see cref="F:System.String.Empty" />이거나, 공백만 포함하거나 또는 잘못된 문자를 하나 이상 포함하는 경우</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationDirectoryName" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.IO.PathTooLongException">지정된 경로가 시스템 정의 최대 길이를 초과합니다.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationDirectoryName" />에서 지정한 디렉터리가 이미 있는 경우  
  
또는 
보관 파일에 있는 항목의 이름이 <see cref="F:System.String.Empty" /> 상태이며, 이 이름에 공백만 있거나 잘못된 문자가 하나 이상 포함되어 있습니다.  
  
또는 
보관 저장소에서 항목을 추출하면 <paramref name="destinationDirectoryName" />으로 지정된 디렉터리 외부에 파일이 만들어집니다. (예를 들어 항목 이름에 부모 디렉터리 접근자가 포함된 경우 발생할 수 있습니다.) 
또는 
보관 저장소에 있는 둘 이상의 항목이 같은 이름을 갖고 있습니다.</exception>
        <exception cref="T:System.UnauthorizedAccessException">호출자에게 대상 디렉터리에 쓸 수 있는 권한이 없는 경우</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationDirectoryName" />에 잘못된 형식이 포함되어 있는 경우</exception>
        <exception cref="T:System.IO.InvalidDataException">보관 항목 찾을 수 없거나 손상되었습니다.  
  
또는 
보관 항목이 지원되지 않는 압축 방법으로 압축되었습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (this System.IO.Compression.ZipArchive source, string destinationDirectoryName, bool overwriteFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(class System.IO.Compression.ZipArchive source, string destinationDirectoryName, bool overwriteFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExtractToDirectory (source As ZipArchive, destinationDirectoryName As String, overwriteFiles As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ExtractToDirectory(System::IO::Compression::ZipArchive ^ source, System::String ^ destinationDirectoryName, bool overwriteFiles);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : System.IO.Compression.ZipArchive * string * bool -&gt; unit" Usage="System.IO.Compression.ZipFileExtensions.ExtractToDirectory (source, destinationDirectoryName, overwriteFiles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchive" RefType="this" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="destinationDirectoryName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="overwriteFiles" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="destinationDirectoryName">To be added.</param>
        <param name="overwriteFiles">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExtractToFile">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ZIP 보관 파일의 항목을 파일에 추출합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExtractToFile">
      <MemberSignature Language="C#" Value="public static void ExtractToFile (this System.IO.Compression.ZipArchiveEntry source, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToFile(class System.IO.Compression.ZipArchiveEntry source, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExtractToFile (source As ZipArchiveEntry, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ExtractToFile(System::IO::Compression::ZipArchiveEntry ^ source, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="static member ExtractToFile : System.IO.Compression.ZipArchiveEntry * string -&gt; unit" Usage="System.IO.Compression.ZipFileExtensions.ExtractToFile (source, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchiveEntry" RefType="this" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">파일의 압축을 풀 zip 보관 위치 항목입니다.</param>
        <param name="destinationFileName">항목의 내용에서 만들 파일의 경로입니다. 상대 경로 또는 절대 경로를 지정할 수 있습니다. 상대 경로는 현재 작업 디렉터리에 상대적으로 해석됩니다.</param>
        <summary>ZIP 보관 파일의 항목을 파일에 추출합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 대상 파일이 이미 있는 경우이 메서드 덮어쓰지 않습니다. throw는 <xref:System.IO.IOException> 예외입니다. 기존 파일을 덮어쓰려면 사용 된 <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29> 메서드 오버 로드를 대신 합니다.  
  
 Zip 보관에서 항목 변경 되었습니다; 마지막으로 설정 되어 파일의 마지막으로 쓴 시간 이 값에 저장 되는 <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> 속성입니다.  
  
 디렉터리를 추출 하려면이 메서드를 사용할 수 없습니다. 사용 된 <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A> 메서드 대신 합니다.  
  
   
  
## Examples  
 다음 예제에서는 확장명이.txt 인 파일을 추출 하 고 zip 보관 파일의 콘텐츠를 반복 하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.  
  
또는 
 <paramref name="destinationFileName" />은 디렉터리를 지정합니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationFileName" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationFileName" />가 이미 있는 경우  
  
또는 
I/O 오류가 발생했습니다.  
  
또는 
엔트리가 현재 쓰기용으로 열려 있습니다.  
  
또는 
엔트리가 보관 저장소에서 삭제되었습니다.</exception>
        <exception cref="T:System.UnauthorizedAccessException">새 파일을 만드는 데 필요한 권한이 호출자에게 없는 경우</exception>
        <exception cref="T:System.IO.InvalidDataException">항목이 보관 위치에 없거나 손상되어 열 수 없습니다.  
  
또는 
항목이 지원되지 않는 압축 방법으로 압축되었습니다.</exception>
        <exception cref="T:System.ObjectDisposedException">이 항목이 속하는 zip 보관 위치가 삭제되었습니다.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationFileName" />의 형식이 잘못되었습니다.  
  
또는 
이 항목에 대한 zip 압축 파일이 항목을 검색할 수 없는 <see cref="F:System.IO.Compression.ZipArchiveMode.Create" /> 모드로 열렸습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToFile">
      <MemberSignature Language="C#" Value="public static void ExtractToFile (this System.IO.Compression.ZipArchiveEntry source, string destinationFileName, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToFile(class System.IO.Compression.ZipArchiveEntry source, string destinationFileName, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExtractToFile (source As ZipArchiveEntry, destinationFileName As String, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ExtractToFile(System::IO::Compression::ZipArchiveEntry ^ source, System::String ^ destinationFileName, bool overwrite);" />
      <MemberSignature Language="F#" Value="static member ExtractToFile : System.IO.Compression.ZipArchiveEntry * string * bool -&gt; unit" Usage="System.IO.Compression.ZipFileExtensions.ExtractToFile (source, destinationFileName, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchiveEntry" RefType="this" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">파일의 압축을 풀 zip 보관 위치 항목입니다.</param>
        <param name="destinationFileName">항목의 내용에서 만들 파일의 경로입니다. 상대 또는 절대 경로를 지정할 수 있습니다. 상대 경로는 현재 작업 디렉터리에 상대적으로 해석됩니다.</param>
        <param name="overwrite">대상 파일과 이름이 같은 기존 파일을 덮어쓰려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>zip 보관 저장소의 항목을 파일에 추출하고 이름이 같은 기존 파일을 선택적으로 덮어씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zip 보관에서 항목 변경 되었습니다; 마지막으로 설정 되어 파일의 마지막으로 쓴 시간 이 값에 저장 되는 <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> 속성입니다.  
  
 디렉터리를 추출 하려면이 메서드를 사용할 수 없습니다. 사용 된 <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A> 메서드 대신 합니다.  
  
   
  
## Examples  
 다음 예제에서는 확장명이.txt 인 파일을 추출 하 고 zip 보관 파일의 콘텐츠를 반복 하는 방법을 보여 줍니다. 대상 폴더에 동일한 이름을 가진 기존 파일을 덮어씁니다. 컴파일러 하려면에서를 참조 해야이 코드 예제는 `System.IO.Compression` 및 `System.IO.Compression.FileSystem` 프로젝트의 어셈블리입니다.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipArchive#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" />가 빈 문자열이거나 공백만 포함하거나 <see cref="F:System.IO.Path.InvalidPathChars" />로 정의된 하나 이상의 잘못된 문자를 포함합니다.  
  
또는 
 <paramref name="destinationFileName" />은 디렉터리를 지정합니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationFileName" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.IO.PathTooLongException">지정된 경로, 파일 이름 또는 둘 다가 시스템에서 정의한 최대 길이를 초과합니다.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">지정된 경로가 잘못되었습니다(예: 매핑되지 않은 드라이브에 있음).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationFileName" />이 이미 있고 <paramref name="overwrite" />가 <see langword="false" />인 경우  
  
또는 
I/O 오류가 발생했습니다.  
  
또는 
엔트리가 현재 쓰기용으로 열려 있습니다.  
  
또는 
엔트리가 보관 저장소에서 삭제되었습니다.</exception>
        <exception cref="T:System.UnauthorizedAccessException">새 파일을 만드는 데 필요한 권한이 호출자에게 없는 경우</exception>
        <exception cref="T:System.IO.InvalidDataException">항목이 보관 위치에 없거나 손상되어 열 수 없습니다.  
  
또는 
항목이 지원되지 않는 압축 방법으로 압축되었습니다.</exception>
        <exception cref="T:System.ObjectDisposedException">이 항목이 속하는 zip 보관 위치가 삭제되었습니다.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationFileName" />의 형식이 잘못되었습니다.  
  
또는 
이 항목에 대한 zip 압축 파일이 항목을 검색할 수 없는 <see cref="F:System.IO.Compression.ZipArchiveMode.Create" /> 모드로 열렸습니다.</exception>
      </Docs>
    </Member>
  </Members>
</Type>