<Type Name="PackUriHelper" FullName="System.IO.Packaging.PackUriHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1d281434774845f55f818257f013ac811314dd35" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="64996870" /></Metadata><TypeSignature Language="C#" Value="public static class PackUriHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed PackUriHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackUriHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class PackUriHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackUriHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type PackUriHelper = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>구성할 유틸리티 메서드를 제공하고 pack URI 개체를 구문 분석합니다.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ComparePackUri">
      <MemberSignature Language="C#" Value="public static int ComparePackUri (Uri firstPackUri, Uri secondPackUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ComparePackUri(class System.Uri firstPackUri, class System.Uri secondPackUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComparePackUri (firstPackUri As Uri, secondPackUri As Uri) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ComparePackUri(Uri ^ firstPackUri, Uri ^ secondPackUri);" />
      <MemberSignature Language="F#" Value="static member ComparePackUri : Uri * Uri -&gt; int" Usage="System.IO.Packaging.PackUriHelper.ComparePackUri (firstPackUri, secondPackUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstPackUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
        <Parameter Name="secondPackUri" Type="System.Uri" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="firstPackUri">첫 번째 pack URI입니다.</param>
        <param name="secondPackUri">두 번째 pack URI입니다.</param>
        <summary>두 pack URI가 같은지 여부를 나타내는 값을 반환합니다.</summary>
        <returns><paramref name="firstPackUri" />와 <paramref name="secondPackUri" /> 간의 관계를 나타내는 부호 있는 정수입니다.  
  
 <list type="table"><listheader><term> 값 
 </term><description> 의미 
 </description></listheader><item><term> 0 보다 작은 
 </term><description><paramref name="firstPackUri" />가 <paramref name="secondPackUri" />보다 작은 경우  
  
 </description></item><item><term> 0 
 </term><description><paramref name="firstPackUri" />는 <paramref name="secondPackUri" />와 같습니다.  
  
 </description></item><item><term> 0 보다 큰 
 </term><description><paramref name="firstPackUri" />가 <paramref name="secondPackUri" />보다 큰 경우  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 둘 다 `firstPackUri` 하 고 `secondPackUri` 됩니다 `null`, <xref:System.IO.Packaging.PackUriHelper.ComparePackUri%2A> 0을 반환 합니다. Pack Uri를 비교 하는 경우는 null URI는 항상 null이 아닌 URI 미만입니다.    사례에 대 한 위치 `firstPackUri` 하 고 `secondPackUri` 둘 다 절대 pack Uri에는 <xref:System.IO.Packaging.PackUriHelper.ComparePackUri%2A> 비교를 수행 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="firstPackUri" /> 또는 <paramref name="secondPackUri" />가 절대 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]가 아닙니다.  
  
또는 
<paramref name="firstPackUri" /> 또는 <paramref name="secondPackUri" />가 "pack://" 체계로 시작하지 않습니다.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="ComparePartUri">
      <MemberSignature Language="C#" Value="public static int ComparePartUri (Uri firstPartUri, Uri secondPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ComparePartUri(class System.Uri firstPartUri, class System.Uri secondPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComparePartUri (firstPartUri As Uri, secondPartUri As Uri) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ComparePartUri(Uri ^ firstPartUri, Uri ^ secondPartUri);" />
      <MemberSignature Language="F#" Value="static member ComparePartUri : Uri * Uri -&gt; int" Usage="System.IO.Packaging.PackUriHelper.ComparePartUri (firstPartUri, secondPartUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstPartUri" Type="System.Uri" />
        <Parameter Name="secondPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="firstPartUri">합니다 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 첫 번째 <see cref="T:System.IO.Packaging.PackagePart" />입니다.</param>
        <param name="secondPartUri">합니다 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 초의 <see cref="T:System.IO.Packaging.PackagePart" />합니다.</param>
        <summary>두 패키지 파트 [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)]가 같은지 여부를 나타내는 값을 반환합니다.</summary>
        <returns>간의 관계를 나타내는 값을 <paramref name="firstPartUri" /> 고 <paramref name="secondPartUri" />입니다.  
  
 <list type="table"><listheader><term> 값 
 </term><description> 의미 
 </description></listheader><item><term> 0 보다 작은 
 </term><description><paramref name="firstPartUri" />가 <paramref name="secondPartUri" />보다 작은 경우  
  
 </description></item><item><term> 0 
 </term><description><paramref name="firstPartUri" />는 <paramref name="secondPartUri" />와 같습니다.  
  
 </description></item><item><term> 0 보다 큰 
 </term><description><paramref name="firstPartUri" />가 <paramref name="secondPartUri" />보다 큰 경우  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 둘 다 `firstPartUri` 하 고 `secondPartUri` 됩니다 `null`, <xref:System.IO.Packaging.PackUriHelper.ComparePartUri%2A> 0을 반환 합니다. 비교할 때 <xref:System.IO.Packaging.PackagePart> [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)], null [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 은 항상 null이 아닌 보다 작은 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]합니다. 사례에 대 한 위치 `firstPartUri` 하 고 `secondPartUri` 상대 둘 <xref:System.IO.Packaging.PackagePart> Uri <xref:System.IO.Packaging.PackUriHelper.ComparePartUri%2A> 비교를 수행 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="firstPartUri" /> 또는 <paramref name="secondPartUri" /> 유효한 일부인 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 구문입니다.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>새 Pack URI를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서 설명에 대 한 샘플 사례를 <xref:System.IO.Packaging.PackUriHelper.Create%2A> 메서드.  
  
|`packageUri`|`partUri`|`fragment`|반환 된 pack URI|  
|------------------|---------------|----------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|/page1.xaml|#intro|pack://http:,,www.proseware.com,mypackage.pkg/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|/page2.xaml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/page2.xaml|  
|http://www.proseware.com/mypackage.pkg|/a/page4.xaml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/a/page4.xaml|  
|http://www.proseware.com/mypackage.pkg|/%41/%61.xml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/A/a.xml|  
|http://www.proseware.com/mypackage.pkg|/%25XY.xml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/%25XY.xml|  
|http://www.proseware.com/mypackage.pkg|/a/page5.xaml|#summary|pack://http:,,www.proseware.com,mypackage.pkg/a/page5.xaml#summary|  
|http://www.proseware.com/packages.aspx?pkg04|/page1.xaml|#intro|pack://http:,,www.proseware.com,packages.aspx%3fpkg04/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|**null**|**null**|pack://http:,,www.proseware.com,mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|/a/mydoc.xaml|**null**|pack://ftp:,,ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  
|file:///d:/packages/mypackage2.pkg|/a/bar.xaml|#xref|pack://file:,,,d:,packages,mypackage2.pkg/a/bar.xaml#xref|  
  
 Pack URI를 작성 하는 것은 다중 단계 프로세스입니다.  예를 들어, pack URI를 만드는 단계 중 하나의 슬래시 (/) 문자를 바꾸는 것은 `packageUri` 쉼표 (,)를 사용 하 여 합니다.  
  
 문자열 변환, 그리고 pack Uri는 구성 하는 방법에 대 한 자세한 내용은 참조 부록 A.4 "문자열 변환 예제" 및 "Pack URI 작성" B.3 부록에서 다운로드할 수 있는 Open Packaging Conventions 사양에 [사양 라이선스를 다운로드 하 고](https://go.microsoft.com/fwlink/?LinkID=71255)입니다.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Open Packaging 규칙 사양</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create packageUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="packageUri">참조된 <see cref="T:System.IO.Packaging.Package" />의 URI입니다.</param>
        <summary>패키지를 가리키는 새 Pack URI를 만듭니다.</summary>
        <returns>지정된 <paramref name="packageUri" />에서 참조하는 <see cref="T:System.IO.Packaging.Package" />의 Pack URI입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` 으로 지정할 수 있습니다 `null` 이거나 비어 있습니다.  
  
 다음 표에서 샘플 사례를 보여 줍니다. <xref:System.IO.Packaging.PackUriHelper.Create%2A>합니다.  
  
|`packageUri`|반환 된 pack URI|  
|------------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|pack://http:,,www.proseware.com,mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|pack://ftp:,,ftp.proseware.com,packages,mypackage1.abc|  
|file:///d:/packages/mypackage2.pkg|pack://file:,,,d:,packages,mypackage2.pkg|  
  
 Pack URI를 작성 하는 것은 다중 단계 프로세스입니다.  예를 들어, pack URI를 만드는 단계 중 하나의 슬래시 (/) 문자를 바꾸는 것은 `packageUri` 쉼표 (,)를 사용 하 여 합니다.  
  
 문자열 변환, 그리고 pack Uri는 구성 하는 방법에 대 한 자세한 내용은 참조 부록 A.4 "문자열 변환 예제" 및 "Pack URI 작성" B.3 부록에서 다운로드할 수 있는 Open Packaging Conventions 사양에 [사양 라이선스를 다운로드 하 고](https://go.microsoft.com/fwlink/?LinkID=71255)입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법의 <xref:System.IO.Packaging.PackUriHelper.Create%2A> 패키지를 참조 하는 pack URI를 정의 하는 방법입니다.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" />가 절대 URI가 아닙니다.</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Open Packaging 규칙 사양</related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri, Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri, class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri, partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri, Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create (packageUri, partUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
        <Parameter Name="partUri" Type="System.Uri" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="packageUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]의 <see cref="T:System.IO.Packaging.Package" />입니다.</param>
        <param name="partUri">패키지에 있는 <see cref="T:System.IO.Packaging.PackagePart" />의 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]입니다.</param>
        <summary>패키지에 파트의 <see cref="T:System.IO.Packaging.Package" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 및 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]가 지정된 pack URI를 만듭니다.</summary>
        <returns>지정된 <see cref="T:System.IO.Packaging.PackagePart" />의 pack URI입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` null 또는 빈로 지정할 수 있습니다.  
  
 하는 경우 `partUri` 는 `null`, 반환 된 pack URI가 패키지를 가리킵니다.  
  
 다음 표에서 설명에 대 한 샘플 사례를 <xref:System.IO.Packaging.PackUriHelper.Create%2A> 메서드.  
  
|`packageUri`|`partUri`|반환 된 pack URI|  
|------------------|---------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|/page2.xaml|pack://http:,,www.proseware.com,mypackage.pkg/page2.xaml|  
|http://www.proseware.com/mypackage.pkg|/a/page4.xaml|pack://http:,,www.proseware.com,mypackage.pkg/a/page4.xaml|  
|http://www.proseware.com/mypackage.pkg|/%41/%61.xml|pack://http:,,www.proseware.com,mypackage.pkg/A/a.xml|  
|http://www.proseware.com/mypackage.pkg|/%25XY.xml|pack://http:,,www.proseware.com,mypackage.pkg/%25XY.xml|  
|http://www.proseware.com/mypackage.pkg|**null**|pack://http:,,www.proseware.com,mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|/a/mydoc.xaml|pack://ftp:,,ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  
|file:///d:/packages/mypackage2.pkg|/a/bar.xaml|pack://file:,,,d:,packages,mypackage2.pkg/a/bar.xaml|  
  
 Pack URI를 작성 하는 것은 다중 단계 프로세스입니다.  예를 들어, pack URI를 만드는 단계 중 하나의 슬래시 (/) 문자를 바꾸는 것은 `packageUri` 쉼표 (,)를 사용 하 여 합니다.  
  
 문자열 변환, 그리고 pack Uri는 구성 하는 방법에 대 한 자세한 내용은 참조 부록 A.4 "문자열 변환 예제" 및 "Pack URI 작성" B.3 부록에서 다운로드할 수 있는 Open Packaging Conventions 사양에 [사양 라이선스를 다운로드 하 고](https://go.microsoft.com/fwlink/?LinkID=71255)입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법의 <xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29> 패키지를 참조 하는 pack URI를 정의 하는 방법입니다.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" />가 절대 URI가 아닙니다.  
  
또는 
 <paramref name="partUri" />는 유효한 파트 URI 구문이 아닙니다.</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Open Packaging 규칙 사양</related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri, Uri partUri, string fragment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri, class System.Uri partUri, string fragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri, partUri As Uri, fragment As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri, Uri ^ partUri, System::String ^ fragment);" />
      <MemberSignature Language="F#" Value="static member Create : Uri * Uri * string -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create (packageUri, partUri, fragment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
        <Parameter Name="partUri" Type="System.Uri" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
        <Parameter Name="fragment" Type="System.String" Index="2" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="packageUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]의 <see cref="T:System.IO.Packaging.Package" />입니다.</param>
        <param name="partUri">패키지에 있는 <see cref="T:System.IO.Packaging.PackagePart" />의 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]입니다.</param>
        <param name="fragment">패키지 파트 내에서 요소를 식별하는 "#" 참조입니다.</param>
        <summary><see cref="T:System.IO.Packaging.Package" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)], 패키지 파트의 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 및 추가할 “#” 조각이 지정된 Pack URI를 만듭니다.</summary>
        <returns>지정된 패키지, 패키지 파트 및 조각을 식별하는 Pack URI입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` 으로 지정할 수 있습니다 `null` 이거나 비어 있습니다.  
  
 하는 경우 `partUri` 는 `null`, 반환 된 pack URI가 패키지를 가리킵니다.  
  
 `fragment` 빈 문자열일 수 없습니다 있지만로 지정할 수 있습니다 `null`합니다.  으로 지정 되지 않은 경우 `null`, `fragment` 문자열 '#' 문자로 시작 해야 합니다.  자세한 내용은의 구문에 대 한 `fragment` 참조 섹션 3.5 "조각" 참조의 [RFC 3986](https://www.ietf.org/rfc/rfc3986.txt).  
  
 다음 표에서 설명에 대 한 샘플 사례를 <xref:System.IO.Packaging.PackUriHelper.Create%2A> 메서드.  
  
|`packageUri`|`partUri`|`fragment`|반환 된 pack URI|  
|------------------|---------------|----------------|-----------------------|  
|http://www.proseware.com/mypackage.pkg|/page1.xaml|#intro|pack://http:,,www.proseware.com,mypackage.pkg/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|/page2.xaml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/page2.xaml|  
|http://www.proseware.com/mypackage.pkg|/a/page4.xaml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/a/page4.xaml|  
|http://www.proseware.com/mypackage.pkg|/%41/%61.xml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/A/a.xml|  
|http://www.proseware.com/mypackage.pkg|/%25XY.xml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/%25XY.xml|  
|http://www.proseware.com/mypackage.pkg|/a/page5.xaml|#summary|pack://http:,,www.proseware.com,mypackage.pkg/a/page5.xaml#summary|  
|http://www.proseware.com/packages.aspx?pkg04|/page1.xaml|#intro|pack://http:,,www.proseware.com,packages.aspx%3fpkg04/page1.xaml#intro|  
|http://www.proseware.com/mypackage.pkg|**null**|**null**|pack://http:,,www.proseware.com,mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|/a/mydoc.xaml|**null**|pack://ftp:,,ftp.proseware.com,packages,mypackage1.abc/a/mydoc.xaml|  
|file:///d:/packages/mypackage2.pkg|/a/bar.xaml|#xref|pack://file:,,,d:,packages,mypackage2.pkg/a/bar.xaml#xref|  
  
 Pack URI를 작성 하는 것은 다중 단계 프로세스입니다.  예를 들어, pack URI를 만드는 단계 중 하나의 슬래시 (/) 문자를 바꾸는 것은 `packageUri` 쉼표 (,)를 사용 하 여 합니다.  
  
 문자열 변환, 그리고 pack Uri는 구성 하는 방법에 대 한 자세한 내용은 참조 부록 A.4 "문자열 변환 예제" 및 "Pack URI 작성" B.3 부록에서 다운로드할 수 있는 Open Packaging Conventions 사양에 [사양 라이선스를 다운로드 하 고](https://go.microsoft.com/fwlink/?LinkID=71255)입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법의 <xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29> 패키지를 참조 하는 pack URI를 정의 하는 방법입니다.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" />가 절대 URI가 아닙니다.  
  
또는 
 <paramref name="partUri" />는 유효한 파트 URI 구문이 아닙니다.  
  
또는 
 <paramref name="fragment" />가 비어 있거나 "#"으로 시작하지 않는 경우</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Open Packaging 규칙 사양</related>
      </Docs>
    </Member>
    <Member MemberName="CreatePartUri">
      <MemberSignature Language="C#" Value="public static Uri CreatePartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri CreatePartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ CreatePartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member CreatePartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.CreatePartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">URI는 <see cref="T:System.IO.Packaging.PackagePart" /> 패키지 내에서.</param>
        <summary>서식이 지정 된 만듭니다 <see cref="T:System.IO.Packaging.PackagePart" /> URI입니다.</summary>
        <returns>서식이 지정 된 <see cref="T:System.IO.Packaging.PackagePart" /> URI입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 의 한 <xref:System.IO.Packaging.PackagePart> 에서 항상 참조는 <xref:System.IO.Packaging.Package> 루트.  
  
 반환 된 <xref:System.IO.Packaging.PackagePart> URI는 항상로 시작 하는 절대 경로 "/"에 정의 된 구문을 준수 하 고는 [Open Packaging 규칙 사양](https://go.microsoft.com/fwlink/?LinkID=71255)합니다.  
  
 다음 표에서 샘플 사례를 보여 줍니다. <xref:System.IO.Packaging.PackUriHelper.CreatePartUri%2A>합니다.  
  
|`partUri`|반환 된 파트 URI|  
|---------------|-----------------------|  
|picture1.jpg|/picture1.jpg|  
|/picture2.jpg|/picture2.jpg|  
|a/mydoc.xaml|/a/mydoc.xaml|  
|/b/bar.xaml|/b/bar.xaml|  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 보여 줍니다 합니다 <xref:System.IO.Packaging.PackUriHelper.CreatePartUri%2A> 에 대 한 상대 Uri를 정의 하는 방법 <xref:System.IO.Packaging.PackagePart> 요소입니다.  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePartUri](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreateparturi)]
 [!code-vb[PackageWrite#PackageWriteCreatePartUri](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreateparturi)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160055">패키지 예제 추가 정보를 작성합니다.</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Open Packaging 규칙 사양</related>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" /> 절대가 아닌 경우 <see cref="T:System.Uri" />합니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNormalizedPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetNormalizedPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetNormalizedPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNormalizedPartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetNormalizedPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member GetNormalizedPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetNormalizedPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri"><see cref="T:System.IO.Packaging.PackagePart" /> URI를 정규화 합니다.</param>
        <summary>지정 된 정규화 된 형태를 반환 합니다 <see cref="T:System.IO.Packaging.PackagePart" /> URI입니다.</summary>
        <returns>정규화 된 형태는 지정 된 <paramref name="partUri" />합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri%2A> 정규화 `partUri` 대/소문자를 대문자로 접어서 (<xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType>) 하 고 결과 반환 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" />가 <see langword="null" />인 경우</exception>
        <altmember cref="M:System.String.Normalize" />
        <altmember cref="T:System.Text.NormalizationForm" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Open Packaging 규칙 사양</related>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" /> 유효한 없는 <see cref="T:System.Uri" /> 구문입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPackageUri">
      <MemberSignature Language="C#" Value="public static Uri GetPackageUri (Uri packUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetPackageUri(class System.Uri packUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPackageUri (packUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetPackageUri(Uri ^ packUri);" />
      <MemberSignature Language="F#" Value="static member GetPackageUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetPackageUri packUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="packUri"><see cref="T:System.IO.Packaging.Package" />의 URI를 반환하려는 pack URI입니다.</param>
        <summary>지정된 pack URI의 전체 패키지를 가리키는 내부 URI를 반환합니다.</summary>
        <returns>지정된 <paramref name="packUri" />의 <see cref="T:System.IO.Packaging.Package" /> URI입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서 샘플 사례를 보여 줍니다. <xref:System.IO.Packaging.PackUriHelper.GetPackageUri%2A>합니다.  
  
|`packUri`|반환된 되는|  
|---------------|--------------------------|  
|pack://http:,,www.proseware.com,mypackage.xyz/a/mydoc.xaml|http://www.proseware.com/mypackage.xyz|  
|pack://http:,,www.proseware.com,packages.aspx%3fmypackage/a/bar.xaml|http://www.proseware.com/packages.aspx?mypackage|  
|pack://http:,,www.proseware.com,mypackage.pkg|http://www.proseware.com/mypackage.pkg|  
|pack://ftp:,,ftp.proseware.com,packages,mypackage1.abc/a/picture.jpg|ftp://ftp.proseware.com/packages/mypackage1.abc|  
|pack://file:,,,d:,packages,mypackage2.pkg/a/bar.xaml|file:///d:/packages/mypackage2.pkg|  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.PackUriHelper.Create" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Open Packaging 규칙 사양</related>
        <exception cref="T:System.ArgumentNullException"><paramref name="packUri" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="packUri" /> 절대가 아닌 경우 <see cref="T:System.Uri" />합니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetPartUri (Uri packUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetPartUri(class System.Uri packUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPartUri (packUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetPartUri(Uri ^ packUri);" />
      <MemberSignature Language="F#" Value="static member GetPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetPartUri packUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="packUri"><see cref="T:System.IO.Packaging.PackagePart" /> URI를 반환할 Pack URI입니다.</param>
        <summary>지정된 pack URI 내에서 <see cref="T:System.IO.Packaging.PackagePart" />의 URI를 반환합니다.</summary>
        <returns>지정된 <paramref name="packUri" />에 있는 <see cref="T:System.IO.Packaging.PackagePart" />의 URI 또는 <paramref name="packUri" />에서 <see cref="T:System.IO.Packaging.PackagePart" />가 아니라 패키지를 가리키는 경우 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환 된 <xref:System.IO.Packaging.PackagePart> URI는 패키지 루트에 상대적인 이며 절대 경로 항상 시작 "/"에 정의 된 구문을 준수 하 고는 [Open Packaging 규칙 사양](https://go.microsoft.com/fwlink/?LinkID=71255)합니다.  
  
 다음 표에서 샘플 사례를 보여 줍니다. <xref:System.IO.Packaging.PackUriHelper.GetPartUri%2A>합니다.  
  
|`packUri`|반환 된 파트 URI|  
|---------------|-----------------------|  
|pack://http:,,www.proseware.com,mypackage.xyz/a/mydoc.xaml|/a/mydoc.xaml|  
|pack://http:,,www.proseware.com,packages.aspx%3fmypackage/a/bar.xaml|/a/bar.xaml|  
|pack://http:,,www.proseware.com,mypackage.pkg|null|  
|pack://ftp:,,ftp.proseware.com,packages,mypackage1.abc/a/picture.jpg|/a/picture.jpg|  
|pack://file:,,,d:,packages,mypackage2.pkg/a/bar.xaml|/a/bar.xaml|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Open Packaging 규칙 사양</related>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetRelationshipPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetRelationshipPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRelationshipPartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetRelationshipPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member GetRelationshipPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetRelationshipPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri"><see cref="P:System.IO.Packaging.PackagePart.Uri" /> 의 합니다 <see cref="T:System.IO.Packaging.PackagePart" /> 연결 된 URI를 반환할 <see cref="T:System.IO.Packaging.PackageRelationship" />합니다.</param>
        <summary>지정된 <see cref="T:System.IO.Packaging.PackagePart" />와 연결된 관계 파트의 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]를 반환합니다.</summary>
        <returns>URI를 <see cref="T:System.IO.Packaging.PackageRelationship" /> 와 연결 된 파트를 <see cref="T:System.IO.Packaging.PackagePart" /> 구분 <paramref name="partUri" />합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `partUri` 식별 해야 합니다 <xref:System.IO.Packaging.Package> ("/") 또는 <xref:System.IO.Packaging.PackagePart> 없는 <xref:System.IO.Packaging.PackageRelationship> 부분입니다.  
  
 에 대 한 자세한 내용은 <xref:System.IO.Packaging.PackageRelationship> 파트에서 다운로드할 수 있는 Open Packaging 규칙 사양에서 섹션 9.3 "관계"를 참조 하세요 [사양 및 라이선스 다운로드](https://go.microsoft.com/fwlink/?LinkID=71255)합니다.  
  
   
  
## Examples  
 [WPF의 Pack URI](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md)  
  
 [Open Packaging 규칙 사양](https://go.microsoft.com/fwlink/?LinkID=71255)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" /> 구문이는 패키지 파트 URI에 잘못 되었습니다.  
  
또는 
 <paramref name="partUri" /> 가 절대 URI 인 경우  
  
또는 
 <paramref name="partUri" /> 관계 파트를 참조합니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelativeUri">
      <MemberSignature Language="C#" Value="public static Uri GetRelativeUri (Uri sourcePartUri, Uri targetPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetRelativeUri(class System.Uri sourcePartUri, class System.Uri targetPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRelativeUri (sourcePartUri As Uri, targetPartUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetRelativeUri(Uri ^ sourcePartUri, Uri ^ targetPartUri);" />
      <MemberSignature Language="F#" Value="static member GetRelativeUri : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetRelativeUri (sourcePartUri, targetPartUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourcePartUri" Type="System.Uri" />
        <Parameter Name="targetPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourcePartUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 소스 파트의 합니다.</param>
        <param name="targetPartUri">대상 파트의 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]입니다.</param>
        <summary>지정된 두 <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)] 사이의 상대 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]를 반환합니다.</summary>
        <returns>상대 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 에서 <paramref name="sourcePartUri" /> 에 <paramref name="targetPartUri" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서 샘플 사례를 보여 줍니다. <xref:System.IO.Packaging.PackUriHelper.GetRelativeUri%2A>합니다.  
  
|`sourcePartUri`|`targetPartUri`|상대 URI를 반환합니다.|  
|---------------------|---------------------|---------------------------|  
|/mydoc/markup/page.xml|/mydoc/markup/picture.jpg|picture.jpg|  
|/mydoc/markup/page.xml|/mydoc/picture.jpg|.. /picture.jpg|  
|/mydoc/markup/page.xml|/mydoc/images/picture.jpg|../images/picture.jpg|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourcePartUri" /> 또는 <paramref name="targetPartUri" />가 <see langword="null" />인 경우</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Open Packaging 규칙 사양</related>
        <exception cref="T:System.ArgumentException">중 하나를 <paramref name="sourcePartUri" /> 하거나 <paramref name="targetPartUri" /> 유효한 없는 <see cref="T:System.Uri" /> 구문.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSourcePartUriFromRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetSourcePartUriFromRelationshipPartUri (Uri relationshipPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetSourcePartUriFromRelationshipPartUri(class System.Uri relationshipPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourcePartUriFromRelationshipPartUri (relationshipPartUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetSourcePartUriFromRelationshipPartUri(Uri ^ relationshipPartUri);" />
      <MemberSignature Language="F#" Value="static member GetSourcePartUriFromRelationshipPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri relationshipPartUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="relationshipPartUri">합니다 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 반환할 관계 파트의는 <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> 에서 합니다.</param>
        <summary>반환 된 <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> 에서 합니다 <see cref="T:System.IO.Packaging.PackageRelationship" /> 지정 된 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]합니다.</summary>
        <returns>합니다 <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> 의 합니다 <see cref="T:System.IO.Packaging.PackagePart" /> 지정 된 관계에서 <paramref name="relationshipPartUri" />합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> 관계 파트의 속성 중 하나를 식별 해야 합니다 <xref:System.IO.Packaging.PackagePart.Package%2A> ("/") 또는 <xref:System.IO.Packaging.PackagePart> 없는 <xref:System.IO.Packaging.PackageRelationship>.  
  
 예를 들어 경우 패키지 파트 "/ files/document.xaml" 관계 파트의 원본 소유자가 "/ files/_rels/document.xaml.rels"를 호출 <xref:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri%2A> 사용 하 여는 `relationshipPartUri` 의 매개 변수 "/ files/_rels/document.xaml.rels" 반환 된 <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>의 "/ files/document.xaml"입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="relationshipPartUri" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="relationshipPartUri" /> 가 절대 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]합니다.  
  
또는 
 <paramref name="relationshipPartUri" /> 구문에 대해 올바르지 않습니다.는 <see cref="T:System.IO.Packaging.PackagePart" />합니다.  
  
또는 
 <paramref name="relationshipPartUri" /> 관계 파트를 참조 하지 않습니다.  
  
또는 
관계 파트의 <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />가 다른 관계 파트를 참조하는 경우(올바르지 않음)</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Open Packaging 규칙 사양</related>
      </Docs>
    </Member>
    <Member MemberName="IsRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static bool IsRelationshipPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsRelationshipPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsRelationshipPartUri (partUri As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsRelationshipPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member IsRelationshipPartUri : Uri -&gt; bool" Usage="System.IO.Packaging.PackUriHelper.IsRelationshipPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">합니다 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 확인 하는 <see cref="T:System.IO.Packaging.PackageRelationship" /> 부분입니다.</param>
        <summary>나타내는 값을 반환 지정 된 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 은 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 의 <see cref="T:System.IO.Packaging.PackageRelationship" /> 파트.</summary>
        <returns><see langword="true" /> 경우 <paramref name="partUri" /> 식별 하는 <see cref="T:System.IO.Packaging.PackageRelationship" /> 고, 그렇지 않으면 일부 <see langword="false" />합니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" /> 가 절대 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]합니다.  
  
또는 
 <paramref name="partUri" /> 잘못 된 <see cref="T:System.IO.Packaging.PackagePart" /> 구문입니다.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Open Packaging 규칙 사양</related>
      </Docs>
    </Member>
    <Member MemberName="ResolvePartUri">
      <MemberSignature Language="C#" Value="public static Uri ResolvePartUri (Uri sourcePartUri, Uri targetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri ResolvePartUri(class System.Uri sourcePartUri, class System.Uri targetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResolvePartUri (sourcePartUri As Uri, targetUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ ResolvePartUri(Uri ^ sourcePartUri, Uri ^ targetUri);" />
      <MemberSignature Language="F#" Value="static member ResolvePartUri : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.ResolvePartUri (sourcePartUri, targetUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourcePartUri" Type="System.Uri" />
        <Parameter Name="targetUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourcePartUri">소스 파트의 URI 또는 "/"를 지정 하는 <see cref="T:System.IO.Packaging.Package" /> 루트입니다.</param>
        <param name="targetUri">대상 파트에 대 한 상대 URI입니다.</param>
        <summary>돌아갑니다 파트 URI 지정 된 소스 파트 URI 및 URI 상대 경로 사용 하 여 대상 파트.</summary>
        <returns>지정한 대상 파트의 URI를 확인할 <paramref name="SourcePartUri" /> 하며 <paramref name="targetUri" /> 매개 변수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서 샘플 사례를 보여 줍니다. <xref:System.IO.Packaging.PackUriHelper.ResolvePartUri%2A>합니다.  
  
|`sourcePartUri`|`targetUri`|반환 된 URI|  
|---------------------|-----------------|------------------|  
|/mydoc/markup/page.xml|picture.jpg|/mydoc/markup/picture.jpg|  
|/mydoc/markup/page.xml|images/picture.jpg|/mydoc/markup/images/picture.jpg|  
|/mydoc/markup/page.xml|./picture.jpg|/mydoc/markup/picture.jpg|  
|/mydoc/markup/page.xml|.. /picture.jpg|/mydoc/picture.jpg|  
|/mydoc/markup/page.xml|../images/picture.jpg|/mydoc/images/picture.jpg|  
|/|images/picture.jpg|/images/picture.jpg|  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.IO.Packaging.PackUriHelper.ResolvePartUri%2A> 메서드를 사용하는 방법을 보여 줍니다.  전체 샘플을 참조 하세요 [는 패키지 예제 추가 정보를 읽는](https://go.microsoft.com/fwlink/?LinkID=160034)합니다.  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourcePartUri" /> 또는 <paramref name="targetUri" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="sourcePartUri" /> 유효한 파트 URI 아닙니다.  
  
또는 
 <paramref name="targetUri" /> 유효한 상대 URI가 아닙니다.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Open Packaging 규칙 사양</related>
      </Docs>
    </Member>
    <Member MemberName="UriSchemePack">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemePack;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemePack" />
      <MemberSignature Language="DocId" Value="F:System.IO.Packaging.PackUriHelper.UriSchemePack" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemePack As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemePack;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemePack : string" Usage="System.IO.Packaging.PackUriHelper.UriSchemePack" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>pack URI 체계 이름 "pack"을 정의합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>