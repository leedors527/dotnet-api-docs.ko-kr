<Type Name="PackWebRequest" FullName="System.IO.Packaging.PackWebRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8cdc07d924b07c01f9694ed4d72472352c318d1e" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="64996884" /></Metadata><TypeSignature Language="C#" Value="public sealed class PackWebRequest : System.Net.WebRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PackWebRequest extends System.Net.WebRequest" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackWebRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PackWebRequest&#xA;Inherits WebRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackWebRequest sealed : System::Net::WebRequest" />
  <TypeSignature Language="F#" Value="type PackWebRequest = class&#xA;    inherit WebRequest" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebRequest</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>전체 요청을 만듭니다 <see cref="T:System.IO.Packaging.PackagePart" /> 또는 <see cref="T:System.IO.Packaging.PackagePart" /> pack URI로 식별 되는 패키지에 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging> [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] 정의 된 pack uri 구문을 사용 하 여 패키지에 포함 된 파트를 참조 하세요.  
  
 이 클래스에서 파생 되는 추상 클래스 및 요청 및 응답의 작업에 대 한 자세한 내용은 참조 하세요. <xref:System.Net.WebRequest>합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.PackUriHelper" />
  </Docs>
  <Members>
    <Member MemberName="CachePolicy">
      <MemberSignature Language="C#" Value="public override System.Net.Cache.RequestCachePolicy CachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Cache.RequestCachePolicy CachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackWebRequest.CachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::Cache::RequestCachePolicy ^ CachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.IO.Packaging.PackWebRequest.CachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Net.Cache.RequestCachePolicy" />를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Net.Cache.RequestCachePolicy" /> pack URI 웹 요청을 사용 합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.IO.Packaging.PackWebRequest.CachePolicy%2A> 속성이 다릅니다 합니다 <xref:System.Net.WebRequest.CachePolicy%2A> 내부 <xref:System.Net.WebRequest> 반환한는 <xref:System.IO.Packaging.PackWebRequest.GetInnerRequest%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.WebException">지정 된 <see cref="T:System.Net.Cache.RequestCachePolicy" /> 설정에 잘못 되었습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupName">
      <MemberSignature Language="C#" Value="public override string ConnectionGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackWebRequest.ConnectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionGroupName : string with get, set" Usage="System.IO.Packaging.PackWebRequest.ConnectionGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>연결 그룹의 이름을 가져오거나 설정 합니다.</summary>
        <value>연결 그룹 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackWebRequest.ConnectionGroupName%2A> 속성을 사용 하면 연결 그룹과 연결 되도록 요청 합니다.  연결 그룹을 애플리케이션에서 다른 사용자에 대해 동일한 서버에 요청을 만들 때 유용 합니다.  
  
 합니다 <xref:System.IO.Packaging.PackWebRequest.ConnectionGroupName%2A> 요청에서 확인 되는 경우 속성은 빈 문자열을 <xref:System.IO.Packaging.PackageStore> 캐시 합니다.  
  
 합니다 <xref:System.IO.Packaging.PackWebRequest.ConnectionGroupName%2A> 속성 내부와 공유 되 <xref:System.Net.WebRequest> (<xref:System.IO.Packaging.PackWebRequest.GetInnerRequest%2A>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public override long ContentLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackWebRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long ContentLength { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int64 with get, set" Usage="System.IO.Packaging.PackWebRequest.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><c>Content-length</c> HTTP 헤더를 가져오거나 설정합니다.</summary>
        <value>콘텐츠 길이 (바이트)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 참고는 pack URI 프로토콜을 처리 하지 않습니다 요청 정보 이외의 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]합니다.  (예: POST 정보의 크기를 계산 하는) 대부분의 일반적인 용도 대 한이 속성에 대 한 않아도가 됩니다.  
  
 <xref:System.IO.Packaging.PackWebRequest.ContentLength%2A> 요청에서 확인 되는 경우 0을 반환 합니다 <xref:System.IO.Packaging.PackageStore> 캐시 합니다.  
  
 합니다 <xref:System.IO.Packaging.PackWebRequest.ContentLength%2A> 속성 내부와 공유 되 <xref:System.Net.WebRequest> (<xref:System.IO.Packaging.PackWebRequest.GetInnerRequest%2A>).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">설정이 지원 되지 않는 <see cref="T:System.IO.Packaging.PackWebRequest" /> 읽기 전용입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public override string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackWebRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.IO.Packaging.PackWebRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><c>Content-type</c> HTTP 헤더를 가져오거나 설정합니다.</summary>
        <value>헤더의 내용입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 참고는 pack URI 프로토콜을 처리 하지 않습니다 요청 정보 이외의 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]합니다.  대부분의 용도 (예: POST 정보의 유형을 결정)에이 속성을 사용할 필요가 없습니다 있습니다.  
  
 <xref:System.IO.Packaging.PackWebRequest.ContentType%2A> 요청에서 확인 되는 경우 빈 문자열을 반환 합니다 <xref:System.IO.Packaging.PackageStore> 캐시 합니다.  
  
 합니다 <xref:System.IO.Packaging.PackWebRequest.ContentType%2A> 속성 내부와 공유 되 <xref:System.Net.WebRequest> (<xref:System.IO.Packaging.PackWebRequest.GetInnerRequest%2A>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public override System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackWebRequest.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.IO.Packaging.PackWebRequest.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>인증 자격 증명을 가져오거나 설정 합니다.</summary>
        <value>요청에 사용할 인증 자격 증명입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 패키지 캐시에는 요청 자체 캐시 된 자격 증명을 사용합니다.  
  
 합니다 <xref:System.IO.Packaging.PackWebRequest.Credentials%2A> 속성 내부와 공유 되 <xref:System.Net.WebRequest> (<xref:System.IO.Packaging.PackWebRequest.GetInnerRequest%2A>).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackWebRequest.UseDefaultCredentials" />
      </Docs>
    </Member>
    <Member MemberName="GetInnerRequest">
      <MemberSignature Language="C#" Value="public System.Net.WebRequest GetInnerRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.WebRequest GetInnerRequest() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackWebRequest.GetInnerRequest" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInnerRequest () As WebRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::WebRequest ^ GetInnerRequest();" />
      <MemberSignature Language="F#" Value="member this.GetInnerRequest : unit -&gt; System.Net.WebRequest" Usage="packWebRequest.GetInnerRequest " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>내부 가져옵니다 <see cref="T:System.Net.WebRequest" />합니다.</summary>
        <returns>A <see cref="T:System.Net.WebRequest" /> http 또는 ftp와 같은 유효한 전송 요청 확인 하는 프로토콜 또는 내부 URI에서 만든 <see cref="T:System.Net.WebRequest" /> 요청에서 확인 되는 경우 null URI를 사용 하 여 만든는 <see cref="T:System.IO.Packaging.PackageStore" /> 캐시 합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackWebRequest.GetInnerRequest%2A> 고급 시나리오의 경우에 제공 되 고 일반 작업에 필요 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">내부 URI ftp, http와 같은 유효한 전송 프로토콜로 해결 되지 않으면 또는 요청에서 확인할 수는 <see cref="T:System.IO.Packaging.PackageStore" />합니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRequestStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetRequestStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetRequestStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackWebRequest.GetRequestStream" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRequestStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetRequestStream();" />
      <MemberSignature Language="F#" Value="override this.GetRequestStream : unit -&gt; System.IO.Stream" Usage="packWebRequest.GetRequestStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.IO.Packaging.PackWebRequest.GetRequestStream" />은 <see cref="T:System.IO.Packaging.PackWebRequest" />에서 지원되지 않으므로 사용하지 마십시오.</summary>
        <returns>하는 경우 <see cref="M:System.IO.Packaging.PackWebRequest.GetRequestStream" /> 호출 되는 <see cref="T:System.NotSupportedException" /> throw 됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackWebRequest.GetRequestStream%2A> 추상 기본 클래스에 필요한 계약을 구현 하는 위해 존재 합니다.  Pack URI 프로토콜 쓰기를 지원 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">모든 호출에서 발생 <see cref="M:System.IO.Packaging.PackWebRequest.GetRequestStream" />합니다.  Pack URI 프로토콜 쓰기를 지원 하지 않습니다.</exception>
        <altmember cref="M:System.IO.Packaging.PackWebRequest.GetResponse" />
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="public override System.Net.WebResponse GetResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.WebResponse GetResponse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackWebRequest.GetResponse" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetResponse () As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::WebResponse ^ GetResponse();" />
      <MemberSignature Language="F#" Value="override this.GetResponse : unit -&gt; System.Net.WebResponse" Usage="packWebRequest.GetResponse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>요청에 대 한 응답 스트림을 반환합니다.</summary>
        <returns>요청에 대 한 응답 스트림입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 클래스의 서명 별로 <xref:System.IO.Packaging.PackWebRequest.GetResponse%2A> 형식의 값을 반환 <xref:System.Net.WebResponse>합니다.  반환 값 형식에는 실제로 <xref:System.IO.Packaging.PackWebResponse> pack URI 프로토콜의 응답에 특정 합니다.  
  
 합니다 <xref:System.Net.WebResponse.Close%2A> 애플리케이션을 마쳤을 때 메서드를 호출 해야 합니다 <xref:System.Net.WebResponse> 스트림 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public override System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackWebRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Net.WebHeaderCollection with get, set" Usage="System.IO.Packaging.PackWebRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>요청과 연관 된 헤더 이름/값 쌍의 컬렉션을 가져오거나 설정 합니다.</summary>
        <value>헤더 컬렉션 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 패키지 캐시 요청 올바른 있지만 그렇지 않은 경우 빈 요청에서 헤더 컬렉션입니다.  
  
 합니다 <xref:System.IO.Packaging.PackWebRequest.Headers%2A> 속성 내부와 공유 되 <xref:System.Net.WebRequest> (<xref:System.IO.Packaging.PackWebRequest.GetInnerRequest%2A>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public override string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackWebRequest.Method" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.IO.Packaging.PackWebRequest.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pack URI 요청을 사용 하는 프로토콜 메서드를 가져오거나 설정 합니다.</summary>
        <value>이 요청을 수행 하는 프로토콜 메서드 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.IO.Packaging.PackWebRequest.Method%2A> 속성에서 요청을 해결 하는 경우 빈 문자열을 반환 합니다 <xref:System.IO.Packaging.PackageStore> 캐시 합니다.  <xref:System.IO.Packaging.PackWebRequest.Method%2A> 속성은 http 또는 ftp와 같은 외부 웹 요청을 참조 하는 경우에 설정 됩니다.  
  
 합니다 <xref:System.IO.Packaging.PackWebRequest.Method%2A> 속성 내부와 공유 되 <xref:System.Net.WebRequest> (<xref:System.IO.Packaging.PackWebRequest.GetInnerRequest%2A>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public override bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackWebRequest.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.IO.Packaging.PackWebRequest.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>요청을 미리 인증 여부를 나타내는 값을 가져오거나 설정 합니다.</summary>
        <value><see langword="true" /> 보낼를 <c>www-authenticate</c> 초기 요청을 사용 하 여 HTTP 헤더가 고, 그렇지 <see langword="false" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.IO.Packaging.PackWebRequest.PreAuthenticate%2A> 속성이 반환 `false` 에서 해결 하는 요청을 <xref:System.IO.Packaging.PackageStore> 캐시는 pack URI 프로토콜에 대 한 사전 인증 체계가 없습니다.  
  
 합니다 <xref:System.IO.Packaging.PackWebRequest.PreAuthenticate%2A> 속성 내부와 공유 되 <xref:System.Net.WebRequest> (<xref:System.IO.Packaging.PackWebRequest.GetInnerRequest%2A>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public override System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackWebRequest.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.IO.Packaging.PackWebRequest.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>인터넷에 대 한 네트워크 프록시를 가져오거나 설정 합니다.</summary>
        <value><see cref="T:System.Net.WebProxy" /> 인터넷 액세스를 위해 사용 하도록 합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.IO.Packaging.PackWebRequest.Proxy%2A> 속성 내부와 공유 되 <xref:System.Net.WebRequest> (<xref:System.IO.Packaging.PackWebRequest.GetInnerRequest%2A>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestUri">
      <MemberSignature Language="C#" Value="public override Uri RequestUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RequestUri" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackWebRequest.RequestUri" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequestUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ RequestUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestUri : Uri" Usage="System.IO.Packaging.PackWebRequest.RequestUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>가져옵니다는 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 요청과 연결 된 리소스의 합니다.</summary>
        <value>[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] 요청과 연결 된 리소스입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.IO.Packaging.PackUriHelper" />
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public override int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackWebRequest.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.IO.Packaging.PackWebRequest.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>요청 시간이 초과 되기 전에 시간의 길이 가져오거나 설정 합니다.</summary>
        <value>요청이 시간 초과하기 전까지 기다리는 시간(밀리초)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 패키지 캐시에 대 한 요청 시간 초과 되지 않습니다.  요청에서 해결에 대 한 합니다 <xref:System.IO.Packaging.PackageStore> 캐시 <xref:System.IO.Packaging.PackWebRequest.Timeout%2A> -1 값을 반환 합니다.  
  
 합니다 <xref:System.IO.Packaging.PackWebRequest.Timeout%2A> 속성을 공유 하는 내부 요청 (<xref:System.IO.Packaging.PackWebRequest.GetInnerRequest%2A>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public override bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackWebRequest.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.IO.Packaging.PackWebRequest.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>기본 인증 자격 증명을 가져오거나 설정 합니다.</summary>
        <value>Pack URI 요청을 사용 하려면 기본 인증 자격 증명입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.IO.Packaging.PackWebRequest.Credentials" />
      </Docs>
    </Member>
  </Members>
</Type>