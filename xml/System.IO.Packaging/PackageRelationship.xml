<Type Name="PackageRelationship" FullName="System.IO.Packaging.PackageRelationship">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8d30524d5448977df286ccee3e93046895c45c28" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56781906" /></Metadata><TypeSignature Language="C#" Value="public class PackageRelationship" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PackageRelationship extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageRelationship" />
  <TypeSignature Language="VB.NET" Value="Public Class PackageRelationship" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageRelationship" />
  <TypeSignature Language="F#" Value="type PackageRelationship = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>소스 <see cref="T:System.IO.Packaging.Package" /> 또는 <see cref="T:System.IO.Packaging.PackagePart" />와 대상 개체 사이의 연결을 나타냅니다. 대상 개체는 <see cref="T:System.IO.Packaging.PackagePart" /> 또는 외부 리소스일 수 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.IO.Packaging.PackageRelationship> 간의 연결을 정의 *소스* <xref:System.IO.Packaging.Package> 또는 <xref:System.IO.Packaging.PackagePart> 에 *대상* <xref:System.IO.Packaging.PackagePart> 또는 외부 리소스입니다.  원본 개체에는 관계의 "소유자"으로 간주 됩니다.  
  
 <xref:System.IO.Packaging.PackageRelationship> 두 만들기 메서드를 사용 하는 대신; 클래스에 public 생성자가 없습니다.  
  
|||  
|-|-|  
|<xref:System.IO.Packaging.Package>.<xref:System.IO.Packaging.Package.CreateRelationship%2A>|"패키지 수준" 관계를 만듭니다.-지정 된 파트 또는 외부 리소스 패키지에서 합니다.|  
|<xref:System.IO.Packaging.PackagePart>.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A>|"파트 수준" 관계를 만듭니다.-다른 부분으로 특정 부분에서 또는 외부 리소스입니다.|  
  
 원본 패키지 또는 파트도 식별 되는 <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> 관계의 속성입니다.  대상 파트 또는 외부 리소스도 식별 되는 <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> 관계의 속성입니다.  
  
 만들기 또는 관계를 삭제 하면 어떤 방식으로든에서 원본 또는 대상 개체에 적용 되지 않습니다.  
  
 원본 개체를 삭제 하는 경우 개체를 소유한 모든 관계도 삭제 됩니다.  
  
 관계 문서와 문서 간의 탐색을 사용 하도록 설정 합니다.  관계 링크와 같은 문서 개체 모델 서비스 기능도 <xref:System.Printing.PrintTicket> 인쇄할 때 특정 문서 요소입니다.  
  
 에 대 한 자세한 내용은 <xref:System.IO.Packaging.PackageRelationship> 의 섹션 1.3 "관계"를 참조 하는 요소는 *Open Packaging Conventions* 사양에서 다운로드할 수 있습니다 <https://go.microsoft.com/fwlink/?LinkID=71255>합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IO.Packaging.PackageRelationship.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>관계를 식별하는 문자열을 가져옵니다.</summary>
        <value>관계를 식별하는 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.IO.Packaging.PackageRelationship.Id%2A> 속성 문자열은 소유의 모든 관계에 대해 고유 합니다 <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> 패키지 또는 파트입니다.  
  
 합니다 <xref:System.IO.Packaging.PackageRelationship.Id%2A> 에 대 한 호출에 지정 된 된 **패키지**합니다.<xref:System.IO.Packaging.Package.CreateRelationship%2A> 또는 **PackagePart**합니다.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> 관계를 생성 하는 메서드.  관계를 만든 후의 <xref:System.IO.Packaging.PackageRelationship.Id%2A> 변경할 수 없습니다.  
  
 <xref:System.IO.Packaging.PackageRelationship.Id%2A> 속성 문자열은 올바른 XML 식별자가 있습니다. 합니다 <xref:System.IO.Packaging.PackageRelationship.Id%2A> 형식은 xsd: id 이며에 지정 된 명명 규칙을 따라야 합니다 *XML Schema Part 2: Datatypes* 사양 (참조 [ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID)).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      </Docs>
    </Member>
    <Member MemberName="Package">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.Package Package { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.Package Package" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.Package" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Package As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::Package ^ Package { System::IO::Packaging::Package ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Package : System.IO.Packaging.Package" Usage="System.IO.Packaging.PackageRelationship.Package" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 관계를 포함하는 <see cref="T:System.IO.Packaging.Package" />를 가져옵니다.</summary>
        <value>이 관계를 포함하는 패키지입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 자세한 내용은 <xref:System.IO.Packaging.Package> 요소를 참조 합니다 *Open Packaging Conventions* 사양에서 다운로드할 수 있습니다 <https://go.microsoft.com/fwlink/?LinkID=71255>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipType">
      <MemberSignature Language="C#" Value="public string RelationshipType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.RelationshipType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationshipType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelationshipType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RelationshipType : string" Usage="System.IO.Packaging.PackageRelationship.RelationshipType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>관계의 정규화된 형식 이름을 가져옵니다.</summary>
        <value>관계의 정규화된 형식 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A> 에 대 한 호출에 지정 된 된 **패키지**합니다.<xref:System.IO.Packaging.Package.CreateRelationship%2A> 또는 **PackagePart**합니다.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> 관계를 생성 하는 메서드.  관계를 만든 후의 <xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A> 변경할 수 없습니다.  
  
 <xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A> URI와 비슷한 구문에 정의 되어 있으며 관계의 역할을 식별 합니다. 예를 들어, "http://schemas.microsoft.com/xps/2005/06/required-resource"는 "필요한 리소스입니다."는 대상 파트에 대 한 관계를 식별 합니다.  
  
 **패키지 수준 관계 유형**  
  
|설명|관계 유형|  
|-----------------|-----------------------|  
|핵심 속성|http://schemas.microsoft.com/package/2006/relationships/metadata/core-properties|  
|디지털 서명|http://schemas.microsoft.com/package/2006/relationships/digital-signature/signature|  
|디지털 서명 인증서|http://schemas.microsoft.com/package/2006/relationships/digital-signature/certificate|  
|디지털 서명 원본|http://schemas.microsoft.com/package/2006/relationships/digital-signature/origin|  
|미리 보기|http://schemas.microsoft.com/package/2006/relationships/metadata/thumbnail|  
  
 패키지 관계에 대 한 자세한 내용은 참조의 3 장 및의 부록 I 합니다 *Open Packaging Conventions* 사양에서 다운로드할 수 있습니다 <https://go.microsoft.com/fwlink/?LinkID=71255>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.Id" />
      </Docs>
    </Member>
    <Member MemberName="SourceUri">
      <MemberSignature Language="C#" Value="public Uri SourceUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SourceUri" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.SourceUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SourceUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SourceUri : Uri" Usage="System.IO.Packaging.PackageRelationship.SourceUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>관계를 소유한 패키지 또는 파트의 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]를 가져옵니다.</summary>
        <value>관계를 소유한 <see cref="T:System.IO.Packaging.Package" /> 또는 <see cref="T:System.IO.Packaging.PackagePart" />의 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 관계를 소유 하는 경우는 <xref:System.IO.Packaging.Package>, <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> 의 URI를 반환 합니다. "/"입니다.  
  
 관계를 소유 하는 경우는 <xref:System.IO.Packaging.PackagePart>, <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> 파트의 URI를 반환 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      </Docs>
    </Member>
    <Member MemberName="TargetMode">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.TargetMode TargetMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Packaging.TargetMode TargetMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.TargetMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetMode As TargetMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::TargetMode TargetMode { System::IO::Packaging::TargetMode get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetMode : System.IO.Packaging.TargetMode" Usage="System.IO.Packaging.PackageRelationship.TargetMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.TargetMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>관계의 대상이 <see cref="F:System.IO.Packaging.TargetMode.Internal" />에 대해 <see cref="F:System.IO.Packaging.TargetMode.External" />인지 아니면 <see cref="T:System.IO.Packaging.Package" />인지를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />가 <see cref="F:System.IO.Packaging.TargetMode.Internal" />에 대한 리소스 <see cref="F:System.IO.Packaging.TargetMode.External" />을 참조하는지 아니면 <see cref="T:System.IO.Packaging.Package" />을 참조하는지를 나타내는 열거형 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> 에 대 한 호출에 지정 된 된 **패키지**합니다.<xref:System.IO.Packaging.Package.CreateRelationship%2A> 또는 **PackagePart**합니다.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> 관계를 생성 하는 메서드. 관계를 만든 후의 <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> 변경할 수 없습니다.  
  
 때 <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> 됩니다 <xref:System.IO.Packaging.TargetMode.Internal>는 <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> 상대 참조 여야 합니다.  패키지 수준 관계에 대 한 상대 참조는 <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> 소유 하 고 관계를 포함 하는 원본 패키지의 pack URI에 상대적으로 확인 됩니다.  (예제에서는 원본 패키지 pack URI: "pack://http:, www.adatum.com, files,datapak.package/"입니다.)  파트 수준 관계의 경우는 <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> 관계를 소유 하는 소스 파트를 상대적으로 확인 됩니다 (<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> 기준으로 해석 됩니다 <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>).  
  
 때 <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> 됩니다 <xref:System.IO.Packaging.TargetMode.External>는 <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> 상대 참조 또는 정규화 된 URI 일 수 있습니다.  경우는 <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> 상대 참조는 참조의 위치를 기준으로 해석 되는 <xref:System.IO.Packaging.Package> 이 관계를 포함 하는.  
  
 에 대 한 자세한 내용은 <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> 의 섹션 1.3.3 "관계 태그"를 참조 합니다 *Open Packaging Conventions* 사양에서 다운로드할 수 있습니다 <https://go.microsoft.com/fwlink/?LinkID=71255>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
      </Docs>
    </Member>
    <Member MemberName="TargetUri">
      <MemberSignature Language="C#" Value="public Uri TargetUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri TargetUri" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ TargetUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetUri : Uri" Usage="System.IO.Packaging.PackageRelationship.TargetUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>관계의 대상 리소스의 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]를 가져옵니다.</summary>
        <value>대상 리소스의 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> 에 대 한 호출에 지정 된 된 **패키지**합니다.<xref:System.IO.Packaging.Package.CreateRelationship%2A> 또는 **PackagePart**합니다.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> 관계를 생성 하는 메서드. 관계를 만든 후의 <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> 변경할 수 없습니다.  
  
 때 <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> 됩니다 <xref:System.IO.Packaging.TargetMode.Internal>는 <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> 상대 참조 여야 합니다.  패키지 수준 관계에 대 한 상대 참조는 <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> 소유 하 고 관계를 포함 하는 원본 패키지의 pack URI에 상대적으로 확인 됩니다.  (예제에서는 원본 패키지 pack URI: "pack://http:, www.adatum.com, files,datapak.package/"입니다.)  파트 수준 관계의 경우는 <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> 관계를 소유 하는 소스 파트를 상대적으로 확인 됩니다 (<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> 기준으로 해석 됩니다 <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>).  
  
 때 <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> 됩니다 <xref:System.IO.Packaging.TargetMode.External>는 <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> 상대 참조 또는 정규화 된 URI 일 수 있습니다.  경우는 <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> 상대 참조는 참조의 위치를 기준으로 해석 되는 <xref:System.IO.Packaging.Package> 이 관계를 포함 하는.  
  
 에 대 한 자세한 내용은 <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> 의 섹션 1.3.3 "관계 태그"를 참조 합니다 *Open Packaging Conventions* 사양에서 다운로드할 수 있습니다 <https://go.microsoft.com/fwlink/?LinkID=71255>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetMode" />
      </Docs>
    </Member>
  </Members>
</Type>