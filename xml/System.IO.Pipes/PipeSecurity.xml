<Type Name="PipeSecurity" FullName="System.IO.Pipes.PipeSecurity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="24576fabe1df4b9cf465875c8cbcf4d20d6c1d3e" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56769309" /></Metadata><TypeSignature Language="C#" Value="public class PipeSecurity : System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PipeSecurity extends System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipes.PipeSecurity" />
  <TypeSignature Language="VB.NET" Value="Public Class PipeSecurity&#xA;Inherits NativeObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class PipeSecurity : System::Security::AccessControl::NativeObjectSecurity" />
  <TypeSignature Language="F#" Value="type PipeSecurity = class&#xA;    inherit NativeObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.NativeObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>파이프에 대한 액세스 제어 및 감사 보안을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Pipes.PipeSecurity> 을 파이프 및 액세스 시도 감사 하는 방법에 대 한 액세스 권한을 지정 하는 클래스입니다.  이 클래스는 권한을 액세스 및 감사 규칙의 집합으로 나타냅니다. 각 액세스 규칙은 표현 된 <xref:System.IO.Pipes.PipeAccessRule> 개체를 각 감사 규칙은 표현 하는 동안를 <xref:System.IO.Pipes.PipeAuditRule> 개체.  
  
 <xref:System.IO.Pipes.PipeSecurity> 클래스 기본 Microsoft Windows 파일 보안 시스템의 추상화입니다. 이 시스템에서 각 파이프에 파이프에 대 한 액세스를 제어 하는 임의 액세스 제어 목록 (DACL) 및 시스템 액세스 제어 목록 (SACL) 감사 된 액세스 제어 시도 지정 하는 있습니다.  합니다 <xref:System.IO.Pipes.PipeAccessRule> 고 <xref:System.IO.Pipes.PipeAuditRule> 클래스는 Dacl과 Sacl을 구성 하는 액세스 제어 항목 (Ace)의 추상화 합니다.  
  
 <xref:System.IO.Pipes.PipeSecurity> 클래스는 대부분의 Dacl과 Sacl 세부 숨깁니다; ACE 순서를 지정 하거나 null DACL을 걱정할 필요가 없습니다.  
  
 사용 된 <xref:System.IO.Pipes.PipeSecurity> 클래스를 검색, 추가 또는 DACL 나타내며는 파이프의 SACL 액세스 규칙을 변경 합니다.  
  
 를 새로 추가 되었거나 변경에 대 한 액세스를 유지 하거나 감사 규칙을 파이프는 <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> 메서드. 기존 파일에서 액세스 또는 감사 규칙을 검색하려면 <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> 메서드를 사용합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PipeSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PipeSecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.IO.Pipes.PipeSecurity" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 빈 만듭니다 <xref:System.IO.Pipes.PipeSecurity> 기존 파이프를 기반으로 하는 개체입니다. 다음 파이프 적용을 액세스 제어 정보를 사용 하 여 개체를 채울 수 있습니다.  
  
 액세스 추가 또는 감사 규칙 수를 <xref:System.IO.Pipes.PipeSecurity> 를 사용 하 여 개체를 <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> 메서드. 액세스 권한을 제거 하거나 감사를 사용 하 여 규칙 수를 <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> 메서드.  
  
 를 새로 추가 되었거나 변경에 대 한 액세스를 유지 하거나 감사 규칙을 파이프는 <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> 메서드. 기존 파일에서 액세스 또는 감사 규칙을 검색하려면 <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> 메서드를 사용합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeSecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRightType : Type" Usage="System.IO.Pipes.PipeSecurity.AccessRightType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Type" /> 개체와 관련된 보안 개체의 <see cref="T:System.IO.Pipes.PipeSecurity" />을 가져옵니다.</summary>
        <value>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 보안 개체의 형식입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생 된 클래스는 <xref:System.Security.AccessControl.ObjectSecurity> 재정의 클래스를 <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> 속성 및 액세스 권한을 나타내는 데 사용 하는 형식 반환 합니다. 배열 또는 여러 유형의 보안 개체를 포함 하는 컬렉션을 사용 하 여 작업할 때 각 보안 개체에 사용할 올바른 열거형 형식을 확인 하려면이 속성을 사용 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="override this.AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.AccessRule" Usage="pipeSecurity.AccessRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference">액세스 규칙이 적용되는 ID입니다. 이는 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 개체로 캐스팅할 수 있는 개체여야 합니다.</param>
        <param name="accessMask">이 규칙의 액세스 마스크입니다. 액세스 마스크는 익명 비트의 32비트 컬렉션으로, 비트의 의미는 개별 통합자가 정의합니다.</param>
        <param name="isInherited">이 규칙이 부모 컨테이너에서 상속되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="inheritanceFlags">액세스 규칙의 상속 속성을 지정하는 <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 값 중 하나입니다.</param>
        <param name="propagationFlags">상속된 액세스 규칙을 자동으로 전파할지 여부를 지정하는 <see cref="T:System.Security.AccessControl.PropagationFlags" /> 값 중 하나입니다. <paramref name="inheritanceFlags" />가 <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />으로 설정되면 전파 플래그는 무시됩니다.</param>
        <param name="type">유효한 액세스 제어 형식을 지정합니다.</param>
        <summary>지정된 값을 사용하여 <see cref="T:System.Security.AccessControl.AccessRule" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <returns>이 메서드가 만드는 <see cref="T:System.Security.AccessControl.AccessRule" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 액세스 제어 규칙 만들기에 대 한 권장 되는 방법은 생성자를 사용 하는 것은 <xref:System.IO.Pipes.PipeAccessRule> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> 또는 <paramref name="type" />에 잘못된 값을 지정하는 경우</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="identityReference" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="accessMask" />가 0입니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="identityReference" />의 형식이 <see cref="T:System.Security.Principal.SecurityIdentifier" />도 아니고 <see cref="T:System.Security.Principal.NTAccount" /> 형식으로 변환할 수 있는 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 같은 형식도 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeSecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRuleType : Type" Usage="System.IO.Pipes.PipeSecurity.AccessRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Type" /> 개체의 액세스 규칙과 관련된 개체의 <see cref="T:System.IO.Pipes.PipeSecurity" />을 가져옵니다.</summary>
        <value>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체의 액세스 규칙과 관련된 개체의 형식입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생 된 클래스는 <xref:System.Security.AccessControl.ObjectSecurity> 재정의 클래스를 <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> 속성 및 액세스 권한을 나타내는 데 사용 하는 형식 반환 합니다. 배열 또는 여러 유형의 보안 개체를 포함 하는 컬렉션을 사용 하 여 작업할 때 각 보안 개체에 사용할 올바른 열거형 형식을 확인 하려면이 속성을 사용 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.IO.Pipes.PipeAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.IO.Pipes.PipeAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As PipeAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::IO::Pipes::PipeAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAccessRule : System.IO.Pipes.PipeAccessRule -&gt; unit" Usage="pipeSecurity.AddAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">추가할 액세스 규칙입니다.</param>
        <summary>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 DACL(임의 액세스 제어 목록)에 액세스 규칙을 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> 규칙의 목록에 새 규칙을 추가 하는 메서드는을 <xref:System.IO.Pipes.PipeSecurity> 개체를 포함 합니다. 지정 된 규칙에 대 한 액세스 제어 목록 (ACL)을 이미 있는 경우는 <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> 메서드 여전히 한 가지 예외를 사용 하 여 규칙을 추가:를 <xref:System.IO.Pipes.PipeAccessRule> 사용 하 여 만든 개체는 <xref:System.Security.AccessControl.AccessControlType.Deny> 를사용하여만든개체를대체하는값<xref:System.Security.AccessControl.AccessControlType.Allow> 값입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.IO.Pipes.PipeAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.IO.Pipes.PipeAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As PipeAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::IO::Pipes::PipeAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAuditRule : System.IO.Pipes.PipeAuditRule -&gt; unit" Usage="pipeSecurity.AddAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">추가할 감사 규칙입니다.</param>
        <summary>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 SACL(시스템 액세스 제어 목록)에 감사 규칙을 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A> 규칙의 목록에 새 감사 규칙을 추가 하는 메서드는을 <xref:System.IO.Pipes.PipeSecurity> 개체를 포함 합니다.  
  
 지정 된 규칙에 대 한 감사 규칙을 이미 있는 경우는 <xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A> 메서드 규칙 추가 계속 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="override this.AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.AuditRule" Usage="pipeSecurity.AuditRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference">액세스 규칙이 적용되는 ID입니다. 이는 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 개체로 캐스팅할 수 있는 개체여야 합니다.</param>
        <param name="accessMask">이 규칙의 액세스 마스크입니다. 액세스 마스크는 익명 비트의 32비트 컬렉션으로, 비트의 의미는 개별 통합자가 정의합니다.</param>
        <param name="isInherited">이 규칙이 부모 컨테이너에서 상속되면 <see langword="true" />이고, 그렇지 않으면 false입니다.</param>
        <param name="inheritanceFlags">액세스 규칙의 상속 속성을 지정하는 <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 값 중 하나입니다.</param>
        <param name="propagationFlags">상속된 액세스 규칙을 자동으로 전파할지 여부를 지정하는 <see cref="T:System.Security.AccessControl.PropagationFlags" /> 값 중 하나입니다. <paramref name="inheritanceFlags" />가 <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />으로 설정되면 전파 플래그는 무시됩니다.</param>
        <param name="flags">유효한 액세스 제어 형식을 지정하는 <see cref="T:System.Security.AccessControl.AuditFlags" /> 값 중 하나입니다.</param>
        <summary>지정된 값을 사용하여 <see cref="T:System.Security.AccessControl.AuditRule" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <returns>이 메서드가 만드는 <see cref="T:System.Security.AccessControl.AuditRule" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 감사 규칙을 만들기 위한 권장된 방법의 생성자를 사용 하는 것은 <xref:System.IO.Pipes.PipeAuditRule> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> 또는 <paramref name="flags" /> 속성에 잘못된 값을 지정한 경우</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="identityReference" /> 속성이 <see langword="null" />일 경우(이 속성은  
  
또는 
<paramref name="accessMask" /> 속성이 0인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="identityReference" /> 속성이 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 형식도 아니고 <see cref="T:System.Security.Principal.NTAccount" /> 형식으로 변환할 수 있는 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 같은 형식도 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeSecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuditRuleType : Type" Usage="System.IO.Pipes.PipeSecurity.AuditRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Type" /> 개체의 감사 규칙과 관련된 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체를 가져옵니다.</summary>
        <value>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체의 감사 규칙과 관련된 개체의 형식입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생 된 클래스는 <xref:System.Security.AccessControl.ObjectSecurity> 재정의 클래스를 <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> 속성 및 액세스 권한을 나타내는 데 사용 하는 형식 반환 합니다. 배열 또는 여러 유형의 보안 개체를 포함 하는 컬렉션을 사용 하 여 작업할 때 각 보안 개체에 사용할 올바른 열거형 형식을 확인 하려면이 속성을 사용 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Persist">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 보안 설명자의 지정된 섹션을 영구 저장소에 저장합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="protected internal void Persist (System.Runtime.InteropServices.SafeHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void Persist(class System.Runtime.InteropServices.SafeHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub Persist (handle As SafeHandle)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void Persist(System::Runtime::InteropServices::SafeHandle ^ handle);" />
      <MemberSignature Language="F#" Value="override this.Persist : System.Runtime.InteropServices.SafeHandle -&gt; unit" Usage="pipeSecurity.Persist handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.InteropServices.SafeHandle" />
      </Parameters>
      <Docs>
        <param name="handle">현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체가 관련된 보안 개체의 핸들입니다.</param>
        <summary>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 보안 설명자의 지정된 섹션을 영구 저장소에 저장합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="protected internal void Persist (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void Persist(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.Persist(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub Persist (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void Persist(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.Persist : string -&gt; unit" Usage="pipeSecurity.Persist name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 보안 개체의 이름입니다.</param>
        <summary>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 보안 설명자의 지정된 섹션을 영구 저장소에 저장합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.IO.Pipes.PipeAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.IO.Pipes.PipeAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As PipeAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::IO::Pipes::PipeAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRule : System.IO.Pipes.PipeAccessRule -&gt; bool" Usage="pipeSecurity.RemoveAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">제거할 액세스 규칙입니다.</param>
        <summary>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 DACL(임의 액세스 제어 목록)에서 액세스 규칙을 제거합니다.</summary>
        <returns>작업에 성공하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> 메서드를 제거 하거나 일치 하는 모든 <xref:System.Security.AccessControl.AccessControlType.Deny> 액세스 규칙 또는 일치 하는 모든 <xref:System.Security.AccessControl.AccessControlType.Allow> 액세스 규칙을 현재에서 <xref:System.IO.Pipes.PipeSecurity> 개체입니다. 모두 제거 하려면이 메서드를 사용할 수는 예를 들어 <xref:System.Security.AccessControl.AccessControlType.Deny> 전달 하 여 사용자에 대 한 액세스를 <xref:System.IO.Pipes.PipeAccessRule> 사용 하 여 만든 개체를 <xref:System.Security.AccessControl.AccessControlType.Deny> 값은 <xref:System.IO.Pipes.PipeAccessRights.Read> 값 및 사용자 계정. 합니다 <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> 메서드를 지정 하는 모든 거부 규칙을 제거 합니다 <xref:System.IO.Pipes.PipeAccessRights.Read> 값 또는 <xref:System.IO.Pipes.PipeAccessRights.Write> 값입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.IO.Pipes.PipeAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.IO.Pipes.PipeAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As PipeAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::IO::Pipes::PipeAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleSpecific : System.IO.Pipes.PipeAccessRule -&gt; unit" Usage="pipeSecurity.RemoveAccessRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">제거할 액세스 규칙입니다.</param>
        <summary>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 DACL(임의 액세스 제어 목록)에서 지정된 액세스 규칙을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> 메서드를 제거 하거나 일치 하는 모든 <xref:System.Security.AccessControl.AccessControlType.Deny> 액세스 규칙 또는 일치 하는 모든 <xref:System.Security.AccessControl.AccessControlType.Allow> 액세스 규칙을 현재에서 <xref:System.IO.Pipes.PipeSecurity> 개체입니다. 모두 제거 하려면이 메서드를 사용할 수는 예를 들어 <xref:System.Security.AccessControl.AccessControlType.Deny> 전달 하 여 사용자에 대 한 액세스를 <xref:System.IO.Pipes.PipeAccessRule> 사용 하 여 만든 개체를 <xref:System.Security.AccessControl.AccessControlType.Deny> 값은 <xref:System.IO.Pipes.PipeAccessRights.Read> 값 및 사용자 계정. 합니다 <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> 메서드를 지정 하는 모든 거부 규칙을 제거 합니다 <xref:System.IO.Pipes.PipeAccessRights.Read> 값 또는 <xref:System.IO.Pipes.PipeAccessRights.Write> 값입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.IO.Pipes.PipeAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.IO.Pipes.PipeAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As PipeAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::IO::Pipes::PipeAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRule : System.IO.Pipes.PipeAuditRule -&gt; bool" Usage="pipeSecurity.RemoveAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">제거할 감사 규칙입니다.</param>
        <summary>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 SACL(시스템 액세스 제어 목록)에서 감사 규칙을 제거합니다.</summary>
        <returns>감사 규칙이 성공적으로 제거되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A> 메서드를 제거 하거나 일치 하는 모든 <xref:System.Security.AccessControl.AccessControlType.Deny> 감사 규칙 또는 일치 하는 모든 <xref:System.Security.AccessControl.AccessControlType.Allow> 감사는 현재 규칙 <xref:System.IO.Pipes.PipeSecurity> 개체입니다.  모두 제거 하려면이 메서드를 사용할 수는 예를 들어 <xref:System.Security.AccessControl.AccessControlType.Deny> 전달 하 여 사용자에 대 한 규칙을 감사를 <xref:System.Security.AccessControl.FileSystemAuditRule> 사용 하 여 만든 개체를 <xref:System.Security.AccessControl.AccessControlType.Deny> 값을 <xref:System.Security.AccessControl.AuditFlags.Failure> 값 및 사용자 계정.  이 작업을 수행 하는 경우는 <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A> 메서드를 지정 하는 모든 거부 규칙을 제거 합니다 <xref:System.Security.AccessControl.AuditFlags.Failure> 값 또는 <xref:System.Security.AccessControl.AuditFlags.Success> 값입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleAll (System.IO.Pipes.PipeAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleAll(class System.IO.Pipes.PipeAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleAll (rule As PipeAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleAll(System::IO::Pipes::PipeAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleAll : System.IO.Pipes.PipeAuditRule -&gt; unit" Usage="pipeSecurity.RemoveAuditRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">제거할 감사 규칙입니다.</param>
        <summary>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 SACL(시스템 액세스 제어 목록)에서 지정된 감사 규칙과 동일한 보안 식별자가 있는 모든 감사 규칙을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll%2A> 메서드는 지정된 된 사용자에 대 한 모든 감사 규칙을 제거 합니다.  모든 값을 무시 합니다 <xref:System.IO.Pipes.PipeAuditRule> 사용자 계정 제외 하 고 개체입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.IO.Pipes.PipeAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.IO.Pipes.PipeAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As PipeAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::IO::Pipes::PipeAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleSpecific : System.IO.Pipes.PipeAuditRule -&gt; unit" Usage="pipeSecurity.RemoveAuditRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">제거할 감사 규칙입니다.</param>
        <summary>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 SACL(시스템 액세스 제어 목록)에서 지정된 감사 규칙을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A> 메서드는 일치 하는 지정 된 제거 <xref:System.Security.AccessControl.AccessControlType.Deny> 규칙 또는 일치 하는 지정 된 감사 <xref:System.Security.AccessControl.AccessControlType.Allow> 현재에서 감사 규칙 <xref:System.IO.Pipes.PipeSecurity> 개체입니다.  예를 들어, 지정 된 제거 하려면이 메서드를 사용할 수 있습니다 <xref:System.Security.AccessControl.AccessControlType.Deny> 전달 하 여 사용자에 대 한 감사 규칙을 <xref:System.Security.AccessControl.FileSystemAuditRule> 사용 하 여 만든 개체를 <xref:System.Security.AccessControl.AccessControlType.Deny> 값을 <xref:System.Security.AccessControl.AuditFlags.Failure> 값 및 사용자 계정.  이 작업을 수행 하는 경우는 <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A> 메서드를 지정 하는 거부 규칙을 제거 합니다 <xref:System.Security.AccessControl.AuditFlags.Failure> 값입니다.  지정 된 거부 규칙을 제거 하지 않습니다는 <xref:System.Security.AccessControl.AuditFlags.Success> 값입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.IO.Pipes.PipeAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.IO.Pipes.PipeAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As PipeAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::IO::Pipes::PipeAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.ResetAccessRule : System.IO.Pipes.PipeAccessRule -&gt; unit" Usage="pipeSecurity.ResetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">추가할 액세스 규칙입니다.</param>
        <summary>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 DACL(임의 액세스 제어 목록)에서 모든 액세스 규칙을 제거한 다음 지정된 액세스 규칙을 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A> 메서드는 지정 된 액세스 제어 목록 (ACL) 규칙을 추가 또는 일치 하는 모든 동일한 ACL 규칙을 덮어씁니다를 `rule` 매개 변수입니다.  예를 들어 경우는 `rule` 매개 변수를 지정을 <xref:System.IO.Pipes.PipeAccessRights.Read> 값 및 <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A> 메서드를 지정 하는 동일한 ACL 규칙을 찾습니다는 <xref:System.IO.Pipes.PipeAccessRights.Read> 값 동일한 규칙을 덮어씁니다.  경우는 <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A> 메서드를 지정 하는 동일한 ACL 규칙을 찾습니다는 <xref:System.IO.Pipes.PipeAccessRights.Write> 값 동일한 규칙 또한를 덮어쓰게 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.IO.Pipes.PipeAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.IO.Pipes.PipeAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As PipeAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::IO::Pipes::PipeAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAccessRule : System.IO.Pipes.PipeAccessRule -&gt; unit" Usage="pipeSecurity.SetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">설정할 규칙입니다.</param>
        <summary>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 DACL(임의 액세스 제어 목록)에서 액세스 규칙을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A> 메서드는 지정 된 액세스 제어 목록 (ACL) 규칙을 추가 또는 일치 하는 모든 동일한 ACL 규칙을 덮어씁니다를 <xref:System.IO.Pipes.PipeAccessRights> 의 값을 `rule` 매개 변수입니다.  예를 들어 경우는 `rule` 매개 변수를 지정을 <xref:System.IO.Pipes.PipeAccessRights.Read> 값 및 <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A> 메서드를 지정 하는 동일한 ACL 규칙을 찾습니다는 <xref:System.IO.Pipes.PipeAccessRights.Read> 값 동일한 규칙을 덮어씁니다.  경우는 <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A> 메서드를 지정 하는 동일한 ACL 규칙을 찾습니다는 <xref:System.IO.Pipes.PipeAccessRights.Write> 값 동일한 규칙이 없습니다를 덮어쓰게 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.IO.Pipes.PipeAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.IO.Pipes.PipeAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As PipeAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::IO::Pipes::PipeAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAuditRule : System.IO.Pipes.PipeAuditRule -&gt; unit" Usage="pipeSecurity.SetAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">설정할 규칙입니다.</param>
        <summary>현재 <see cref="T:System.IO.Pipes.PipeSecurity" /> 개체와 관련된 SACL(시스템 액세스 제어 목록)에서 감사 규칙을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A> 메서드는 지정 된 감사 규칙을 추가 또는 일치 하는 모든 동일한 감사 규칙을 덮어씁니다를 <xref:System.IO.Pipes.PipeAccessRights> 의 값을 `rule` 매개 변수입니다.  예를 들어 경우는 `rule` 매개 변수를 지정을 <xref:System.IO.Pipes.PipeAccessRights.Read> 값 및 <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A> 메서드를 지정 하는 동일한 감사 규칙을 찾습니다는 <xref:System.IO.Pipes.PipeAccessRights.Read> 값 동일한 규칙을 덮어씁니다.  경우는 <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A> 메서드를 지정 하는 동일한 감사 규칙을 찾습니다는 <xref:System.IO.Pipes.PipeAccessRights.Write> 값 동일한 규칙이 없습니다를 덮어쓰게 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
  </Members>
</Type>