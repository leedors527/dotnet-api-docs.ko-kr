<Type Name="Handshake" FullName="System.IO.Ports.Handshake">
  <Metadata><Meta Name="ms.openlocfilehash" Value="04a6bd6e935350a0aef55df17c5968912abd32b1" /><Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="10/12/2018" /><Meta Name="ms.locfileid" Value="49145293" /></Metadata><TypeSignature Language="C#" Value="public enum Handshake" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Handshake extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.IO.Ports.Handshake" />
  <TypeSignature Language="VB.NET" Value="Public Enum Handshake" />
  <TypeSignature Language="C++ CLI" Value="public enum class Handshake" />
  <TypeSignature Language="F#" Value="type Handshake = " />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.IO.Ports</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><see cref="T:System.IO.Ports.SerialPort" /> 개체에 대한 직렬 포트 통신을 설정할 때 사용되는 제어 프로토콜을 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 열거형은 <xref:System.IO.Ports.SerialPort.Handshake%2A> 속성에 사용됩니다.  
  
   
  
## Examples  
 가능한 값을 표시 하는 다음 코드 예제는 <xref:System.IO.Ports.Handshake> 콘솔에 열거 한 다음 하나를 선택 하 라는 합니다. 이 코드 예제는 일부에 대해 제공 된 더 큰 코드 예제는 <xref:System.IO.Ports.SerialPort> 클래스입니다.  
  
 [!code-cpp[System.IO.Ports.SerialPort#05](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#05)]
 [!code-csharp[System.IO.Ports.SerialPort#05](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#05)]
 [!code-vb[System.IO.Ports.SerialPort#05](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#05)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.Ports.Handshake None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.IO.Ports.Handshake.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.IO.Ports.Handshake.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.Handshake</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>핸드셰이크에 제어를 사용하지 않습니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="RequestToSend">
      <MemberSignature Language="C#" Value="RequestToSend" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.Ports.Handshake RequestToSend = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.IO.Ports.Handshake.RequestToSend" />
      <MemberSignature Language="VB.NET" Value="RequestToSend" />
      <MemberSignature Language="C++ CLI" Value="RequestToSend" />
      <MemberSignature Language="F#" Value="RequestToSend = 2" Usage="System.IO.Ports.Handshake.RequestToSend" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.Handshake</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>RTS(Request to Send) 하드웨어 흐름 제어를 사용합니다. RTS는 데이터를 전송할 수 있음을 신호로 알립니다. 입력 버퍼가 가득 차면 RTS 선은 <see langword="false" />로 설정됩니다. 입력 버퍼에 사용할 수 있는 공간이 많아지면 RTS 선은 <see langword="true" />로 설정됩니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="RequestToSendXOnXOff">
      <MemberSignature Language="C#" Value="RequestToSendXOnXOff" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.Ports.Handshake RequestToSendXOnXOff = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.IO.Ports.Handshake.RequestToSendXOnXOff" />
      <MemberSignature Language="VB.NET" Value="RequestToSendXOnXOff" />
      <MemberSignature Language="C++ CLI" Value="RequestToSendXOnXOff" />
      <MemberSignature Language="F#" Value="RequestToSendXOnXOff = 3" Usage="System.IO.Ports.Handshake.RequestToSendXOnXOff" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.Handshake</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>RTS(Request to Send) 하드웨어 제어와 XON/XOFF 소프트웨어 제어를 모두 사용합니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="XOnXOff">
      <MemberSignature Language="C#" Value="XOnXOff" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.Ports.Handshake XOnXOff = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.IO.Ports.Handshake.XOnXOff" />
      <MemberSignature Language="VB.NET" Value="XOnXOff" />
      <MemberSignature Language="C++ CLI" Value="XOnXOff" />
      <MemberSignature Language="F#" Value="XOnXOff = 1" Usage="System.IO.Ports.Handshake.XOnXOff" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.Handshake</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>XON/XOFF 소프트웨어 제어 프로토콜을 사용합니다. XOFF 제어를 보내면 데이터 전송이 중지됩니다. XON 제어를 보내면 전송이 다시 시작됩니다. 이러한 소프트웨어 제어는 RTS(Request to Send) 및 CTS(Clear to Send) 하드웨어 제어 대신 사용됩니다.</summary>
      </Docs>
    </Member>
  </Members>
</Type>