<Type Name="SecurityTokenAuthenticator" FullName="System.IdentityModel.Selectors.SecurityTokenAuthenticator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f53343ce4976ac50e797153cd9ddf9358c2bb551" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37650786" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityTokenAuthenticator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenAuthenticator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenAuthenticator" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenAuthenticator abstract" />
  <TypeSignature Language="F#" Value="type SecurityTokenAuthenticator = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>보안 토큰을 인증합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> 클래스와 이 클래스에서 파생된 클래스는 보안 토큰을 인증합니다. 일반적으로 사용자 지정 보안 토큰을 만들 때만 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>에서 직접 클래스를 파생시킵니다. 내장 보안 토큰에 대한 기본 인증 또는 권한 부여 동작을 재정의하려면 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>에서 파생된 클래스 중 하나(예: <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>)에서 파생시킵니다.  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>에서 클래스를 파생시킬 때 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> 메서드와 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> 메서드를 재정의합니다. <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> 메서드는 이 보안 토큰 인증자가 특정 보안 토큰을 인증할 수 있는지 여부를 확인합니다. <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> 메서드는 보안 토큰을 인증하고 권한 부여를 위한 권한 부여 정책 집합을 설정합니다. 권한 부여 정책은 보안 토큰에 있는 클레임을 애플리케이션에서 필요한 클레임에 매핑합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenAuthenticator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenAuthenticator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidateToken">
      <MemberSignature Language="C#" Value="public bool CanValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanValidateToken (token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="member this.CanValidateToken : System.IdentityModel.Tokens.SecurityToken -&gt; bool" Usage="securityTokenAuthenticator.CanValidateToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">유효성을 검사할 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />입니다.</param>
        <summary>이 보안 토큰 인증자가 지정된 보안 토큰의 유효성을 검사할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <returns>토큰의 유효성을 검사할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> 메서드는 토큰 매개 변수가 `null`인지 여부를 확인한 후 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> 메서드를 호출하여 이 보안 토큰 인증자가 `token`의 보안 토큰 형식을 인증할 수 있는지 여부를 확인합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="token" />가 <see langword="null" />인 경우</exception>
        <altmember cref="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="CanValidateTokenCore">
      <MemberSignature Language="C#" Value="protected abstract bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanValidateTokenCore(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanValidateTokenCore (token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanValidateTokenCore(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member CanValidateTokenCore : System.IdentityModel.Tokens.SecurityToken -&gt; bool" Usage="securityTokenAuthenticator.CanValidateTokenCore token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">유효성을 검사할 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 이 보안 토큰 인증자가 지정된 보안 토큰의 유효성을 검사할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <returns><see langword="true" />의 유효성을 검사할 수 있으면 <paramref name="token" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> 메서드는 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> 메서드에 의해 호출되어 이 보안 토큰 인증자가 `token`의 보안 토큰 형식을 인증할 수 있는지 여부를 확인합니다. 이 메서드는 보안 토큰을 인증하지 않으며, 인증은 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> 메서드를 통해 수행됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; ValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; ValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateToken (token As SecurityToken) As ReadOnlyCollection(Of IAuthorizationPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="member this.ValidateToken : System.IdentityModel.Tokens.SecurityToken -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;" Usage="securityTokenAuthenticator.ValidateToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">유효성을 검사할 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />입니다.</param>
        <summary>지정된 보안 토큰을 인증하고 보안 토큰의 권한 부여 정책 집합을 반환합니다.</summary>
        <returns>이 애플리케이션에 적용되는 권한 부여 정책의 집합을 포함하는 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 형식의 <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> 메서드는 `token` 매개 변수가 `null`인지 여부를 확인하고, <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A> 메서드를 호출하여 이 보안 토큰 인증자가 이 보안 토큰을 인증할 수 있는지 여부를 확인한 후, 인증할 수 있으면 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> 메서드를 호출합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="token" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException">이 보안 토큰 인증자가 <paramref name="token" />을 인증할 수 없는 경우 
또는 
 <paramref name="token" />이 인증되지 않는 경우</exception>
        <altmember cref="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
        <altmember cref="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateTokenCore">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; ValidateTokenCore(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ValidateTokenCore (token As SecurityToken) As ReadOnlyCollection(Of IAuthorizationPolicy)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ ValidateTokenCore(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member ValidateTokenCore : System.IdentityModel.Tokens.SecurityToken -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;" Usage="securityTokenAuthenticator.ValidateTokenCore token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">유효성을 검사할 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 보안 토큰을 인증하고 보안 토큰에 대한 권한 부여 정책 집합을 반환합니다.</summary>
        <returns>이 애플리케이션에 적용되는 권한 부여 정책의 집합을 포함하는 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 형식의 <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 특정 보안 토큰 형식을 인증하려면 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> 메서드를 재정의합니다.  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> 메서드를 재정의할 때 다음과 같은 지침을 따릅니다.  
  
-   보안 토큰에 전달 하는 경우는 `token` 매개 변수 수 없습니다 throw 유효성을 검사는 <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> 예외입니다.  
  
-   이 애플리케이션에 적용되는 권한 부여 정책이 없는 경우 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> 형식의 빈 <xref:System.IdentityModel.Policy.IAuthorizationPolicy>을 반환합니다.  
  
 이 메서드가 반환 될 때 `null`, Windows Communication Foundation throw를 <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> 예외입니다.  
  
 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> 메서드는 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A> 메서드에 의해 호출됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>