<Type Name="SecurityKeyType" FullName="System.IdentityModel.Tokens.SecurityKeyType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="69ddff964a763e6aa9e6e7a6ea3a5826a64452e7" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37650032" /></Metadata><TypeSignature Language="C#" Value="public enum SecurityKeyType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SecurityKeyType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SecurityKeyType" />
  <TypeSignature Language="VB.NET" Value="Public Enum SecurityKeyType" />
  <TypeSignature Language="C++ CLI" Value="public enum class SecurityKeyType" />
  <TypeSignature Language="F#" Value="type SecurityKeyType = " />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>보안 토큰과 연결된 키의 형식을 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SecurityKeyType> 속성을 설정하려면 <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A> 열거형을 사용합니다.  
  
 BearerKey 필드를 사용 하 여 사용 되는 <xref:System.ServiceModel.Configuration.IssuedTokenParametersElement.KeyType%2A> 속성입니다.  
  
### <a name="bearerkey-requires-wsuid-or-transport-security-with-message-credentials"></a>Wsu:Id 또는 메시지 자격 증명을 통한 전송 보안을 필요로 하는 BearerKey  
 페더레이션 시나리오에서 발급된 토큰은 일반적으로 클라이언트와 신뢰 당사자 간의 메시지 보안을 위한 보증 지원 토큰으로 구성됩니다. 그러나 키 (BearerKey) 없이 사용 하 여 토큰을 발급 하는 한 보안 토큰 서비스 (STS), WCF 구성으로 <xref:System.ServiceModel.Security.SecurityTokenAttachmentMode> 지원 토큰 (WCF 키 없이 보증 없습니다). 이렇게 하려면 발급된 토큰을 서명에서 참조해야 합니다. WCF는 현재 다음을 사용 합니다. http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id 참조 메커니즘 (wsu: id)으로 합니다.  
  
 발급된 토큰에 이러한 특성이 없으면 클라이언트에서 "서명할 요소에 ID가 있어야 합니다."라는 메시지와 함께 <xref:System.ServiceModel.Security.MessageSecurityException>이 throw됩니다. 이 상황은 SAML 1.1 토큰이 발급된 토큰으로 사용될 때 발생합니다. SAML 1.1 사양에는 Wsu:Id가 정의되어 있지 않습니다.  
  
 이 문제를 해결 하려면 메시지 자격 증명과 함께 전송 보안을 사용 (예를 들어 <xref:System.ServiceModel.Configuration.AuthenticationMode>) 또는 STS 추가 해야 합니다는 http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd:Id (wsu: id) 발급된 된 토큰을 합니다.  
  
 Wsu:Id가 SAML 1.1 토큰에 추가될 경우 결과 XML은 SAML 1.1 사양을 따르지 않습니다. 이를 해결하기 위해 발급된 토큰을 암호화한 결과인 `EncryptedData`에 Wsu:Id를 추가하는 방법을 사용할 수 있습니다. `EncryptedData` 요소는 Wsu:Id 특성을 지원하므로 이 절차는 SAML 1.1 사양을 따릅니다.  
  
 따라서 사양을 준수하려면 STS에서 bearer 토큰을 암호화해야 합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsymmetricKey">
      <MemberSignature Language="C#" Value="AsymmetricKey" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IdentityModel.Tokens.SecurityKeyType AsymmetricKey = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey" />
      <MemberSignature Language="VB.NET" Value="AsymmetricKey" />
      <MemberSignature Language="C++ CLI" Value="AsymmetricKey" />
      <MemberSignature Language="F#" Value="AsymmetricKey = 1" Usage="System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>키가 비대칭 키임을 지정합니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="BearerKey">
      <MemberSignature Language="C#" Value="BearerKey" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IdentityModel.Tokens.SecurityKeyType BearerKey = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SecurityKeyType.BearerKey" />
      <MemberSignature Language="VB.NET" Value="BearerKey" />
      <MemberSignature Language="C++ CLI" Value="BearerKey" />
      <MemberSignature Language="F#" Value="BearerKey = 2" Usage="System.IdentityModel.Tokens.SecurityKeyType.BearerKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>보안 토큰에 소유 증명 키가 포함되지 않도록 지정합니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="SymmetricKey">
      <MemberSignature Language="C#" Value="SymmetricKey" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IdentityModel.Tokens.SecurityKeyType SymmetricKey = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey" />
      <MemberSignature Language="VB.NET" Value="SymmetricKey" />
      <MemberSignature Language="C++ CLI" Value="SymmetricKey" />
      <MemberSignature Language="F#" Value="SymmetricKey = 0" Usage="System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>키가 대칭 키임을 지정합니다.</summary>
      </Docs>
    </Member>
  </Members>
</Type>