<Type Name="SessionSecurityToken" FullName="System.IdentityModel.Tokens.SessionSecurityToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6dd540ae1cc4982ef73c9ca77081b2901c60d03e" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55411593" /></Metadata><TypeSignature Language="C#" Value="public class SessionSecurityToken : System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SessionSecurityToken extends System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SessionSecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionSecurityToken&#xA;Inherits SecurityToken" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionSecurityToken : System::IdentityModel::Tokens::SecurityToken" />
  <TypeSignature Language="F#" Value="type SessionSecurityToken = class&#xA;    inherit SecurityToken" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityToken</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>세션과 연결된 데이터를 포함하는 보안 토큰을 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 세션 토큰을 저장 합니다 <xref:System.Security.Claims.ClaimsPrincipal> 세션 뿐만 아니라 세션을 정의 하는 다른 매개 변수를 사용 하 여 연결 된 사용자의 예를 들어 세션 시작 및 종료 시간입니다.  
  
 수동 시나리오에서 합니다 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> 를 호출 합니다 <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM)에서 세션 토큰을 만드는 인증 파이프라인에서는 <xref:System.Security.Claims.ClaimsPrincipal> 인증된 된 사용자를 나타내는입니다. SAM를 사용 하 여 해당 구성 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 토큰을 만드는 쿠키로 serialize (고 이후 요청에서 쿠키에서 토큰을 deserialize 할). 해당 구성의 인스턴스를 사용 하 여 SAM <xref:System.IdentityModel.Services.CookieHandler> HTTP 응답에 쿠키를 다시 작성 하는 클래스입니다. 이 쿠키는 클라이언트에 반환 됩니다 하 고 이후 요청에서 클라이언트 id 공급자를 다시 보안 토큰을 가져오는으로 왕복 하는 것이 아니라 쿠키를 제공할 수 있습니다. WIF를 사용 하 여 세션을 작동 하는 방법에 대 한 자세한 내용은 참조 하세요. [WIF 세션 관리](~/docs/framework/security/wif-session-management.md)합니다. 세션을 사용 하 여 웹 팜 시나리오에 대 한 자세한 내용은 [WIF 및 웹 팜](~/docs/framework/security/wif-and-web-farms.md)합니다.  
  
 세션 토큰은 여부 참조 모드로 작동할 수 있습니다. 세션 토큰 참조 모드로 작동 하지 않습니다, 경우에 전체 토큰을 클라이언트에 저장 된 세션 쿠키로 serialize 됩니다. Serialize 된 세션 토큰 상당히 클 수 있습니다 하 고 따라서 쿠키는 클라이언트에 저장 될 수도 있습니다 매우 많은. 참조 모드로 전체 세션을 직렬화 하는 대신 쿠키로 토큰을 토큰을 세션 보안 토큰 캐시에 저장 되 고 캐시에서 토큰을 검색 하는 데 필요한 키를 생성 하는 데 정보만 쿠키에 저장 됩니다. 쿠키의 크기를 크게 줄일 수 있습니다이 합니다. 세션 토큰 캐시에서 파생 된 클래스에서 구현 됩니다 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> cache-key에 의해 구현 되는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> 클래스입니다. <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> 하 고 <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> 속성에 사용 되는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> 캐시 키를 생성 하는 클래스입니다.  
  
 <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> 속성 여부 참조 모드에서 세션 토큰 인지 여부를 확인 합니다.  
  
> [!IMPORTANT]
>  제공 하는 것이 좋습니다 참조 모드로 작동 하는 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType> global.asax.cs 파일 설정에서 이벤트를 <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> 전달 된 토큰에 대 한 속성을 <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> 속성입니다. 이렇게 하면 세션 토큰이 모든 요청에 대해 참조 모드로 작동 하 고 단순히 설정 보다 우선 하는 <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType> 세션 인증 모듈의 속성입니다.  
  
 합니다 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> WIF를 사용 하 여 제공 하는 클래스는 Ws-secure Conversation 세션 토큰을 serialize `<wsc:SecurityContextToken>` 요소입니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" />
    <altmember cref="T:System.IdentityModel.Services.SessionAuthenticationModule" />
    <related type="Article" href="https://msdn.microsoft.com/library/98bce126-18a9-401b-b20d-67ee462a5f8a">WIF 세션 관리</related>
    <related type="Article" href="https://msdn.microsoft.com/library/fc3cd7fa-2b45-4614-a44f-8fa9b9d15284">WIF 및 웹 팜</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken claimsPrincipal" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">토큰을 초기화할 클레임 보안 주체입니다.</param>
        <summary>지정된 보안 주체에서 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서는 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 클래스의 인스턴스에 대한 초기 속성 값을 보여 줍니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|생성 된 고유 ID로 설정|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=nameWithType>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|생성 된 고유 ID로 설정|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<xref:System.DateTime.UtcNow%2A> 와 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> 속성입니다.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|생성 된 128 비트 대칭 키를 포함합니다. **참고:** 기본 구현에서는이 속성을 사용 하지 않습니다. 서명 및 암호화 키에서 적용 된 쿠키 변환에 의해 지정 됩니다는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 토큰을 처리 합니다.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<xref:System.DateTime.UtcNow%2A> 와 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> 속성입니다.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="claimsPrincipal" />가 <see langword="null" />인 경우  
  
또는 
<paramref name="claimsPrincipal" />의 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 속성이 <see langword="null" />입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SessionSecurityToken (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SessionSecurityToken(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">serialize된 개체 데이터입니다.</param>
        <param name="context">소스에 대한 개념 정보.</param>
        <summary>serialize된 데이터를 사용하여 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::String ^ context);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * string -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="context" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">부트스트랩 토큰에서 생성된 클레임 보안 주체입니다.</param>
        <param name="context">선택 사항인 애플리케이션별 컨텍스트 문자열입니다.</param>
        <summary>지정된 보안 주체 및 bootstrap 토큰을 사용하여 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서는 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 클래스의 인스턴스에 대한 초기 속성 값을 보여 줍니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|생성 된 고유 ID로 설정|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=nameWithType>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|생성 된 고유 ID로 설정|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<xref:System.DateTime.UtcNow%2A> 와 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> 속성입니다.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|생성 된 128 비트 대칭 키를 포함합니다. **참고:** 기본 구현에서는이 속성을 사용 하지 않습니다. 서명 및 암호화 키에서 적용 된 쿠키 변환에 의해 지정 됩니다는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 토큰을 처리 합니다.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<xref:System.DateTime.UtcNow%2A> 와 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> 속성입니다.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="claimsPrincipal" />가 <see langword="null" />인 경우  
  
또는 
<paramref name="claimsPrincipal" />의 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 속성이 <see langword="null" />입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, TimeSpan lifetime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, valuetype System.TimeSpan lifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, TimeSpan lifetime);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * TimeSpan -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, lifetime)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="lifetime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">토큰을 초기화할 클레임 보안 주체입니다.</param>
        <param name="lifetime">토큰이 유효한 동안 현재 시간부터의 기간입니다. <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> 속성은 <see cref="P:System.DateTime.UtcNow" />로 설정되며 <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" /> 속성은 <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> 및 이 매개 변수에서 지정한 기간으로 설정됩니다.</param>
        <summary>지정된 보안 주체에서 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 클래스의 새 인스턴스를 초기화합니다. 새 토큰은 지정된 수명을 통해 <see cref="P:System.DateTime.UtcNow" />부터 유효합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서는 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 클래스의 인스턴스에 대한 초기 속성 값을 보여 줍니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|생성 된 고유 ID로 설정|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=nameWithType>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|생성 된 고유 ID로 설정|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<xref:System.DateTime.UtcNow%2A> plus `lifetime`합니다.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|생성 된 128 비트 대칭 키를 포함합니다. **참고:** 기본 구현에서는이 속성을 사용 하지 않습니다. 서명 및 암호화 키에서 적용 된 쿠키 변환에 의해 지정 됩니다는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 토큰을 처리 합니다.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<xref:System.DateTime.UtcNow%2A> plus `lifetime`합니다.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="claimsPrincipal" />가 <see langword="null" />인 경우  
  
또는 
<paramref name="claimsPrincipal" />의 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 속성이 <see langword="null" />입니다.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="lifetime" />이 <see cref="F:System.TimeSpan.Zero" />보다 작거나 같은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context, Nullable&lt;DateTime&gt; validFrom, Nullable&lt;DateTime&gt; validTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validFrom, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::String ^ context, Nullable&lt;DateTime&gt; validFrom, Nullable&lt;DateTime&gt; validTo);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, context, validFrom, validTo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="validFrom" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="validTo" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">부트스트랩 토큰에서 생성된 클레임 보안 주체입니다.</param>
        <param name="context">선택 사항인 애플리케이션별 컨텍스트 문자열입니다.</param>
        <param name="validFrom">토큰이 유효해지는 시간 인스턴스입니다. <see langword="null" />에서 <see cref="P:System.DateTime.UtcNow" />를 지정합니다.</param>
        <param name="validTo">토큰이 더 이상 유효하지 않게 된 이후 시간 인스턴스입니다. <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" /> 속성의 값을 <paramref name="validFrom" /> 매개 변수에 지정된 시간에 더하여 값을 결정해야 함을 지정하는 <see langword="null" />입니다.</param>
        <summary>지정된 주체와 부트스트랩 토큰에서, 또한 지정된 시작 시간 및 만료 시간을 사용하여 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서는 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 클래스의 인스턴스에 대한 초기 속성 값을 보여 줍니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|생성 된 고유 ID로 설정|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=nameWithType>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|생성 된 고유 ID로 설정|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|값으로 설정 합니다 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> 기준으로 속성을 `ValidFrom` 매개 변수입니다.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|값을 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> 기준으로 속성을 `ValidTo` 매개 변수.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|생성 된 128 비트 대칭 키를 포함합니다. **참고:** 기본 구현에서는이 속성을 사용 하지 않습니다. 서명 및 암호화 키에서 적용 된 쿠키 변환에 의해 지정 됩니다는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 토큰을 처리 합니다.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|값을 `validFrom` 매개 변수 또는 `validFrom` 는 `null`, <xref:System.DateTime.UtcNow%2A>합니다.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|`validFrom` 매개 변수의 값입니다. 경우 `validFrom` 는 `null`의 값을 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> 속성 (기준으로 `validFrom` 매개 변수)과 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> 속성.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="claimsPrincipal" />가 <see langword="null" />인 경우  
  
또는 
<paramref name="claimsPrincipal" />의 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 속성이 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="validFrom" /> 및 <paramref name="validTo" /> 매개 변수의 유효성을 검사할 수 없습니다. 예를 들어, <paramref name="validTo" />가 <paramref name="validFrom" />보다 먼저 발생한 시간을 지정합니다.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context, string endpointId, Nullable&lt;DateTime&gt; validFrom, Nullable&lt;DateTime&gt; validTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context, string endpointId, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validFrom, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::String ^ context, System::String ^ endpointId, Nullable&lt;DateTime&gt; validFrom, Nullable&lt;DateTime&gt; validTo);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * string * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, context, endpointId, validFrom, validTo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="validFrom" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="validTo" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">부트스트랩 토큰에서 생성된 클레임 보안 주체입니다.</param>
        <param name="context">선택 사항인 애플리케이션별 컨텍스트 문자열입니다.</param>
        <param name="endpointId">이 토큰이 바인딩된 엔드포인트입니다. 빈 문자열은 범위가 지정되지 않은 토큰을 만듭니다.</param>
        <param name="validFrom">토큰이 유효해지는 시간 인스턴스입니다. <see langword="null" />에서 <see cref="P:System.DateTime.UtcNow" />를 지정합니다.</param>
        <param name="validTo">토큰이 더 이상 유효하지 않게 된 이후 시간 인스턴스입니다. <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" /> 속성의 값을 <paramref name="validFrom" /> 매개 변수에 지정된 시간에 더하여 값을 결정해야 함을 지정하는 <see langword="null" />입니다.</param>
        <summary>지정된 주체와 부트스트랩 토큰에서, 또한 지정된 시작 시간 및 만료 시간을 사용하여 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 클래스의 새 인스턴스를 초기화합니다. 새 토큰의 범위는 지정된 엔드포인트로 제한됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서는 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 클래스의 인스턴스에 대한 초기 속성 값을 보여 줍니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|생성 된 고유 ID로 설정|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|생성 된 고유 ID로 설정|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|값으로 설정 합니다 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> 기준으로 속성을 `ValidFrom` 매개 변수입니다.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|값을 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> 기준으로 속성을 `ValidTo` 매개 변수.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|생성 된 128 비트 대칭 키를 포함합니다. **참고:** 기본 구현에서는이 속성을 사용 하지 않습니다. 서명 및 암호화 키에서 적용 된 쿠키 변환에 의해 지정 됩니다는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 토큰을 처리 합니다.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|값을 `validFrom` 매개 변수 또는 `validFrom` 는 `null`, <xref:System.DateTime.UtcNow%2A>합니다.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|`validFrom` 매개 변수의 값입니다. 경우 `validFrom` 는 `null`의 값을 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> 속성 (기준으로 `validFrom` 매개 변수)과 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> 속성.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="claimsPrincipal" />가 <see langword="null" />인 경우  
  
또는 
<paramref name="claimsPrincipal" />의 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 속성이 <see langword="null" />입니다.  
  
또는 
 <paramref name="endpointId" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="validFrom" /> 및 <paramref name="validTo" /> 매개 변수의 유효성을 검사할 수 없습니다. 예를 들어, <paramref name="validTo" />가 <paramref name="validFrom" />보다 먼저 발생한 시간을 지정합니다.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, System.Xml.UniqueId contextId, string context, string endpointId, TimeSpan lifetime, System.IdentityModel.Tokens.SymmetricSecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, class System.Xml.UniqueId contextId, string context, string endpointId, valuetype System.TimeSpan lifetime, class System.IdentityModel.Tokens.SymmetricSecurityKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::Xml::UniqueId ^ contextId, System::String ^ context, System::String ^ endpointId, TimeSpan lifetime, System::IdentityModel::Tokens::SymmetricSecurityKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * System.Xml.UniqueId * string * string * TimeSpan * System.IdentityModel.Tokens.SymmetricSecurityKey -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, contextId, context, endpointId, lifetime, key)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="lifetime" Type="System.TimeSpan" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SymmetricSecurityKey" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">이 세션에 연결된 클레임 보안 주체입니다.</param>
        <param name="contextId">이 토큰에 연결된 컨텍스트 식별자입니다.</param>
        <param name="context">선택 사항인 애플리케이션별 컨텍스트 문자열입니다.</param>
        <param name="endpointId">이 토큰이 바인딩된 엔드포인트입니다. 빈 문자열은 범위가 지정되지 않은 토큰을 만듭니다.</param>
        <param name="lifetime">세션 토큰의 수명입니다. <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> 속성은 <see cref="P:System.DateTime.UtcNow" />로 설정되며 <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" /> 속성은 <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> 및 이 매개 변수에서 지정한 기간으로 설정됩니다.</param>
        <param name="key">선택적 대칭 세션 키입니다.</param>
        <summary>지정된 주체, 컨텍스트 ID, 엔드포인트, 수명, 키를 사용하여 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서는 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 클래스의 인스턴스에 대한 초기 속성 값을 보여 줍니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|`contextId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|생성 된 고유 ID로 설정|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<xref:System.DateTime.UtcNow%2A> 더하기 `lifetime`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|단일 요소 중 하나를 포함 `key` 되거나, `key` 는 `null`, 생성 된 128 비트 대칭 키입니다. **참고:** 기본 구현에서는이 속성을 사용 하지 않습니다. 서명 및 암호화 키에서 적용 된 쿠키 변환에 의해 지정 됩니다는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 토큰을 처리 합니다.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<xref:System.DateTime.UtcNow%2A> 더하기 `lifetime`|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="claimsPrincipal" />가 <see langword="null" />인 경우  
  
또는 
<paramref name="claimsPrincipal" />의 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 속성이 <see langword="null" />입니다.  
  
또는 
 <paramref name="contextId" />가 <see langword="null" />인 경우  
  
또는 
 <paramref name="endpointId" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="lifetime" />이 <see cref="F:System.TimeSpan.Zero" />보다 작거나 같은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, System.Xml.UniqueId contextId, string context, string endpointId, DateTime validFrom, TimeSpan lifetime, System.IdentityModel.Tokens.SymmetricSecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, class System.Xml.UniqueId contextId, string context, string endpointId, valuetype System.DateTime validFrom, valuetype System.TimeSpan lifetime, class System.IdentityModel.Tokens.SymmetricSecurityKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.DateTime,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::Xml::UniqueId ^ contextId, System::String ^ context, System::String ^ endpointId, DateTime validFrom, TimeSpan lifetime, System::IdentityModel::Tokens::SymmetricSecurityKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * System.Xml.UniqueId * string * string * DateTime * TimeSpan * System.IdentityModel.Tokens.SymmetricSecurityKey -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, contextId, context, endpointId, validFrom, lifetime, key)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="validFrom" Type="System.DateTime" />
        <Parameter Name="lifetime" Type="System.TimeSpan" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SymmetricSecurityKey" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">이 세션에 연결된 클레임 보안 주체입니다.</param>
        <param name="contextId">이 토큰에 연결된 컨텍스트 식별자입니다.</param>
        <param name="context">선택 사항인 애플리케이션별 컨텍스트 문자열입니다.</param>
        <param name="endpointId">이 토큰이 바인딩된 엔드포인트입니다. 빈 문자열은 범위가 지정되지 않은 토큰을 만듭니다.</param>
        <param name="validFrom">토큰이 유효해지는 시간입니다.</param>
        <param name="lifetime">세션 토큰의 수명입니다. <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" /> 속성은 <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> + 이 매개 변수에서 지정된 기간입니다.</param>
        <param name="key">선택적 대칭 세션 키입니다.</param>
        <summary>지정된 주체, 컨텍스트 ID, 컨텍스트, 엔드포인트, 유효한 타임스탬프, 수명, 키를 사용하여 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서는 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 클래스의 인스턴스에 대한 초기 속성 값을 보여 줍니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|`contextId` 또는 `contextId` 는 `null`, 고유 ID를 생성 합니다.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|생성 된 고유 ID로 설정|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|`validFrom`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|`validFrom` plus `lifetime`합니다.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|단일 요소 중 하나를 포함 `key` 되거나, `key` 는 `null`, 생성 된 128 비트 대칭 키입니다. **참고:** 기본 구현에서는이 속성을 사용 하지 않습니다. 서명 및 암호화 키에서 적용 된 쿠키 변환에 의해 지정 됩니다는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 토큰을 처리 합니다.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|`validFrom`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|`validFrom` plus `lifetime`합니다.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="claimsPrincipal" />가 <see langword="null" />인 경우  
  
또는 
<paramref name="claimsPrincipal" />의 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 속성이 <see langword="null" />입니다.  
  
또는 
 <paramref name="contextId" />가 <see langword="null" />인 경우  
  
또는 
 <paramref name="endpointId" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="lifetime" />이 <see cref="F:System.TimeSpan.Zero" />보다 작거나 같은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, System.Xml.UniqueId contextId, string context, string endpointId, Nullable&lt;DateTime&gt; validFrom, Nullable&lt;DateTime&gt; validTo, System.IdentityModel.Tokens.SymmetricSecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, class System.Xml.UniqueId contextId, string context, string endpointId, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validFrom, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validTo, class System.IdentityModel.Tokens.SymmetricSecurityKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.IdentityModel.Tokens.SymmetricSecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::Xml::UniqueId ^ contextId, System::String ^ context, System::String ^ endpointId, Nullable&lt;DateTime&gt; validFrom, Nullable&lt;DateTime&gt; validTo, System::IdentityModel::Tokens::SymmetricSecurityKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * System.Xml.UniqueId * string * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; * System.IdentityModel.Tokens.SymmetricSecurityKey -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, contextId, context, endpointId, validFrom, validTo, key)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="validFrom" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="validTo" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SymmetricSecurityKey" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">이 세션에 연결된 클레임 보안 주체입니다.</param>
        <param name="contextId">이 토큰에 연결된 컨텍스트 식별자입니다.</param>
        <param name="context">선택 사항인 애플리케이션별 컨텍스트 문자열입니다.</param>
        <param name="endpointId">이 토큰이 바인딩된 엔드포인트입니다. 빈 문자열은 범위가 지정되지 않은 토큰을 만듭니다.</param>
        <param name="validFrom">토큰이 유효해지는 시간 인스턴스입니다. <see langword="null" />에서 <see cref="P:System.DateTime.UtcNow" />를 지정합니다.</param>
        <param name="validTo">토큰이 더 이상 유효하지 않게 된 이후 시간 인스턴스입니다. <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" /> 속성의 값을 <paramref name="validFrom" /> 매개 변수에 지정된 시간에 더하여 값을 결정해야 함을 지정하는 <see langword="null" />입니다.</param>
        <param name="key">선택적 대칭 세션 키입니다.</param>
        <summary>지정된 주체, 컨텍스트 ID, 컨텍스트, 엔드포인트, 시작 시간, 만료 시간, 키를 사용하여 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서는 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 클래스의 인스턴스에 대한 초기 속성 값을 보여 줍니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|`contextId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|생성 된 고유 ID로 설정|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|값으로 설정 합니다 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> 기준으로 속성을 `ValidFrom` 매개 변수입니다.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|값을 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> 기준으로 속성을 `ValidTo` 매개 변수.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|단일 요소 중 하나를 포함 `key` 되거나, `key` 는 `null`, 생성 된 128 비트 대칭 키입니다. **참고:** 기본 구현에서는이 속성을 사용 하지 않습니다. 서명 및 암호화 키에서 적용 된 쿠키 변환에 의해 지정 됩니다는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 토큰을 처리 합니다.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|값을 `validFrom` 매개 변수 또는 `validFrom` 는 `null`, <xref:System.DateTime.UtcNow%2A>합니다.|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|`validFrom` 매개 변수의 값입니다. 경우 `validFrom` 는 `null`의 값을 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> 속성 (기준으로 `validFrom` 매개 변수)과 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> 속성.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="claimsPrincipal" />가 <see langword="null" />인 경우  
  
또는 
<paramref name="claimsPrincipal" />의 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 속성이 <see langword="null" />입니다.  
  
또는 
 <paramref name="contextId" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="validFrom" />가 <paramref name="validTo" />보다 크거나 같은 경우  
  
또는 
 <paramref name="validTo" />가 현재 시간보다 빠릅니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="ClaimsPrincipal">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsPrincipal ClaimsPrincipal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsPrincipal ClaimsPrincipal" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClaimsPrincipal As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Claims::ClaimsPrincipal ^ ClaimsPrincipal { System::Security::Claims::ClaimsPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClaimsPrincipal : System.Security.Claims.ClaimsPrincipal" Usage="System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>세션에 연결된 클레임 보안 주체를 가져옵니다.</summary>
        <value>클레임 보안 주체입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public string Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Context" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Context { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : string" Usage="System.IdentityModel.Tokens.SessionSecurityToken.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 지정 컨텍스트 값을 가져옵니다.</summary>
        <value>사용자 지정 컨텍스트 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 애플리케이션별 컨텍스트를 저장할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextId">
      <MemberSignature Language="C#" Value="public System.Xml.UniqueId ContextId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.UniqueId ContextId" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.ContextId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContextId As UniqueId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::UniqueId ^ ContextId { System::Xml::UniqueId ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextId : System.Xml.UniqueId" Usage="System.IdentityModel.Tokens.SessionSecurityToken.ContextId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.UniqueId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>세션 컨텍스트 식별자를 가져옵니다.</summary>
        <value>세션 컨텍스트 식별자입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컨텍스트 식별자는 모든 세션 토큰에서 고유 합니다.  
  
 합니다 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> 에서 토큰에 대 한 키를 생성 하려면 컨텍스트 ID 및 키 생성을 모두를 사용 하는 클래스는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>합니다.  
  
 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 으로이 속성을 serialize 하는 클래스를 `<Identifier>` 의 자식 요소는 `<wsc:SecurityContextToken>` 요소입니다. 자세한 내용은 설명서를 참조 합니다 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=nameWithType> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
      </Docs>
    </Member>
    <Member MemberName="EndpointId">
      <MemberSignature Language="C#" Value="public string EndpointId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EndpointId" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndpointId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EndpointId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndpointId : string" Usage="System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 토큰의 범위를 지정하는 엔드포인트의 ID를 가져옵니다.</summary>
        <value>엔드포인트 ID입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  경우는 <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> 속성은 `null`하 여 전역적으로 범위가 지정 된 세션 토큰 처리 되는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 클래스. 이 잠재적인 보안 위험이 발생할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="sessionSecurityToken.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">serialize된 개체 데이터입니다.</param>
        <param name="context">원본 또는 대상에 대한 컨텍스트 정보입니다.</param>
        <summary>세션 보안 토큰을 serialize하는 데 필요한 정보를 사용하여 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 설정합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public override string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IdentityModel.Tokens.SessionSecurityToken.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 토큰의 고유 식별자를 가져옵니다.</summary>
        <value>토큰 ID입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 으로이 속성을 serialize 하는 클래스를 `Id` 특성을 `<wsc:SecurityContextToken>` 요소. 자세한 내용은 설명서를 참조 합니다 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=nameWithType> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPersistent">
      <MemberSignature Language="C#" Value="public bool IsPersistent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPersistent" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPersistent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPersistent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPersistent : bool with get, set" Usage="System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 토큰이 나타내는 쿠키가 영구적인지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>쿠키가 지속적이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A> 속성은 `true`, 쿠키가 영구 쿠키로 기록 됩니다. 영구 쿠키가 만료 될 때까지 브라우저를 닫은 후 유효한 상태를 유지 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReferenceMode">
      <MemberSignature Language="C#" Value="public bool IsReferenceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReferenceMode" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReferenceMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReferenceMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReferenceMode : bool with get, set" Usage="System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>참조 모드에서 세션 보안 토큰이 작동하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>토큰이 세션 모드에서 작동 중이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 참조 모드에서는 간단한 아티팩트를 serialization 중에 생성 되 고 토큰 자료는 토큰 처리기와 연결 된 토큰 캐시에 저장 됩니다. 토큰 캐시에서 파생 된 클래스의 인스턴스가 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>합니다. 웹 팜 시나리오에 대 한 토큰 캐시는 팜의 모든 노드에서 작동 해야 합니다.  
  
> [!IMPORTANT]
>  제공 하는 것이 좋습니다 참조 모드로 작동 하는 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType> global.asax.cs 파일 설정에서 이벤트를 <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> 전달 된 토큰에 대 한 속성을 <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> 속성입니다. 이렇게 하면 세션 토큰이 모든 요청에 대해 참조 모드로 작동 하 고 단순히 설정 보다 우선 하는 <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType> 세션 인증 모듈의 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" />
        <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
        <altmember cref="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode" />
      </Docs>
    </Member>
    <Member MemberName="KeyEffectiveTime">
      <MemberSignature Language="C#" Value="public DateTime KeyEffectiveTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime KeyEffectiveTime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyEffectiveTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime KeyEffectiveTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyEffectiveTime : DateTime" Usage="System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 토큰의 키가 유효한 기간의 시작 시간을 가져옵니다.</summary>
        <value>키가 적용되는 시간 인스턴트입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExpirationTime">
      <MemberSignature Language="C#" Value="public DateTime KeyExpirationTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime KeyExpirationTime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyExpirationTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime KeyExpirationTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyExpirationTime : DateTime" Usage="System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 토큰의 키가 더 이상 유효하지 않게 되는 시간 인스턴트를 가져옵니다.</summary>
        <value>키가 만료되는 시간 인스턴트입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyGeneration">
      <MemberSignature Language="C#" Value="public System.Xml.UniqueId KeyGeneration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.UniqueId KeyGeneration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyGeneration As UniqueId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::UniqueId ^ KeyGeneration { System::Xml::UniqueId ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyGeneration : System.Xml.UniqueId" Usage="System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.UniqueId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 토큰에서 키 생성에 사용할 고유 식별자를 가져옵니다.</summary>
        <value>이 토큰에서 키 생성에 사용할 고유 식별자입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> 속성이 세션 토큰 내에서 고유 합니다. 세션 토큰에서 발급 된 경우에 컨텍스트 ID를 통해 액세스할 수 있는 여 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> 속성입니다. 세션 토큰이 갱신 될 때 키 생성 추가 됩니다.  
  
 합니다 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> 에서 토큰에 대 한 키를 생성 하려면 컨텍스트 ID 및 키 생성을 모두를 사용 하는 클래스는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>합니다.  
  
 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 으로이 속성을 serialize 하는 클래스를 `<Instance>` 의 자식 요소는 `<wsc:SecurityContextToken>` 요소입니다. 자세한 내용은 설명서를 참조 합니다 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=nameWithType> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
      </Docs>
    </Member>
    <Member MemberName="SecureConversationVersion">
      <MemberSignature Language="C#" Value="public Uri SecureConversationVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SecureConversationVersion" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecureConversationVersion As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SecureConversationVersion { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecureConversationVersion : Uri" Usage="System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 세션 보안 토큰을 serialize하는 데 사용되는 WS-Secure Conversation 버전을 식별하는 URI를 가져옵니다.</summary>
        <value>이 토큰을 serialize하는 데 사용되는 WS-Secure Conversation 버전을 식별하는 URI입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 기본 클래스는 Ws-secure Conversation Feb2005 및 Ws-secure Conversation 1.3을 지원 합니다. 이러한 Ws-secure Conversation이 버전에 대 한 Uri는 "http://schemas.xmlsoap.org/ws/2005/02/sc"및"http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512" 각각.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityKeys">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SecurityKeys As ReadOnlyCollection(Of SecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ SecurityKeys { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityKeys : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;" Usage="System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 세션과 관련된 키를 가져옵니다. 일반적으로 단일 키입니다.</summary>
        <value>세션에 연결된 키입니다. 일반적으로 단일 키가 있습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  기본 구현에서는이 속성을 사용 하지 않습니다. 서명 및 암호화 키에서 적용 된 쿠키 변환에 의해 지정 됩니다는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 토큰을 처리 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidFrom">
      <MemberSignature Language="C#" Value="public override DateTime ValidFrom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidFrom" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValidFrom As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime ValidFrom { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidFrom : DateTime" Usage="System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>토큰이 유효해지는 시간 인스턴트를 가져옵니다.</summary>
        <value>토큰이 유효해지는 시간입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidTo">
      <MemberSignature Language="C#" Value="public override DateTime ValidTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValidTo As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime ValidTo { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidTo : DateTime" Usage="System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>토큰이 더 이상 유효하지 않게 되는 시간 인스턴트를 가져옵니다.</summary>
        <value>토큰이 더 이상 유효하지 않게 된 이후 시간입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>