<Type Name="SessionSecurityTokenCacheKey" FullName="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6385f78a445254363bc83f249e22b8518d74d586" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36556596" /></Metadata><TypeSignature Language="C#" Value="public class SessionSecurityTokenCacheKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SessionSecurityTokenCacheKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionSecurityTokenCacheKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionSecurityTokenCacheKey" />
  <TypeSignature Language="F#" Value="type SessionSecurityTokenCacheKey = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" />의 항목에 대한 키를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 캐시 하는 경우는 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 두 개의 인덱스가 필요 합니다. 컨텍스트 ID를 나타내는 것은 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=nameWithType> 속성은 모든 세션 토큰에서 고유 합니다. 다른 하나는 키 생성을 나타내는 <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=nameWithType> 속성, 즉 세션 토큰 내에서 고유 합니다. 세션 토큰에서 발급 된 경우만 컨텍스트 ID가 있습니다. 세션 토큰이 갱신 될 때 키 생성 추가 됩니다. 갱신 후 갱신 된 세션 토큰은 컨텍스트 ID 및 키 생성을 통해 고유 하 게 식별 합니다.  
  
 형식의 개체 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> 세션 토큰 캐시를 인덱스로 사용 됩니다. 인덱스는 항상 유효한 개의 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId%2A> 지정 된 속성 이지만 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> 속성 수 `null`토큰 갱신 된 여부에 따라 합니다. 이기도 선택적인 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId%2A> 토큰 범위가 지정 되는 끝점을 제공 합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenCacheKey (string endpointId, System.Xml.UniqueId contextId, System.Xml.UniqueId keyGeneration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string endpointId, class System.Xml.UniqueId contextId, class System.Xml.UniqueId keyGeneration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.#ctor(System.String,System.Xml.UniqueId,System.Xml.UniqueId)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpointId As String, contextId As UniqueId, keyGeneration As UniqueId)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenCacheKey(System::String ^ endpointId, System::Xml::UniqueId ^ contextId, System::Xml::UniqueId ^ keyGeneration);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityTokenCacheKey : string * System.Xml.UniqueId * System.Xml.UniqueId -&gt; System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" Usage="new System.IdentityModel.Tokens.SessionSecurityTokenCacheKey (endpointId, contextId, keyGeneration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
        <Parameter Name="keyGeneration" Type="System.Xml.UniqueId" />
      </Parameters>
      <Docs>
        <param name="endpointId">캐시 엔트리의 범위가 지정되는 엔드포인트 ID입니다. 캐시된 토큰의 <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" /> 속성 값이어야 합니다.</param>
        <param name="contextId">캐시 엔트리의 컨텍스트 ID입니다. 캐시된 토큰의 <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ContextId" /> 속성 값이어야 합니다.</param>
        <param name="keyGeneration">캐시 엔트리의 키 생성입니다. 캐시된 토큰의 <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration" /> 속성 값이어야 합니다. 이 값은 토큰이 갱신될 때 사용할 수 있습니다. 새 토큰을 캐시할 때 <see langword="null" />이 됩니다.</param>
        <summary><see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextId">
      <MemberSignature Language="C#" Value="public System.Xml.UniqueId ContextId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.UniqueId ContextId" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContextId As UniqueId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::UniqueId ^ ContextId { System::Xml::UniqueId ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextId : System.Xml.UniqueId" Usage="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.UniqueId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>캐시 키의 컨텍스트 ID를 가져옵니다.</summary>
        <value>캐시 키에 대한 컨텍스트 ID입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이에 해당 합니다 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> 캐시 된 토큰의 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndpointId">
      <MemberSignature Language="C#" Value="public string EndpointId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EndpointId" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndpointId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EndpointId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndpointId : string" Usage="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 캐시 엔트리의 범위가 지정되는 엔드포인트 ID를 가져옵니다.</summary>
        <value>이 캐시 엔트리의 범위가 지정되는 엔드포인트 ID입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이에 해당 합니다 <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> 캐시 된 토큰의 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="sessionSecurityTokenCacheKey.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">현재 캐시 키와 비교할 개체입니다. <see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />에서 할당할 수 있어야 합니다.</param>
        <summary>지정된 개체가 현재 캐시 키와 같은지 여부를 확인합니다.</summary>
        <returns>지정한 개체가 현재 캐시 키와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A> 됩니다 `true`, <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> 속성이 비교에 사용 되지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="sessionSecurityTokenCacheKey.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 캐시 키의 해시 코드를 반환합니다.</summary>
        <returns>현재 캐시 키에 대한 해시 코드입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A> 됩니다 `true`, <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> 속성이 해시 코드를 생성할 때 사용 되지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreKeyGeneration">
      <MemberSignature Language="C#" Value="public bool IgnoreKeyGeneration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreKeyGeneration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreKeyGeneration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreKeyGeneration { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreKeyGeneration : bool with get, set" Usage="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>인덱스 비교를 수행할 때 키 생성을 무시할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>키 생성을 무시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에 있는 방식으로 적용 합니다 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> 속성은 다음 메서드 및 연산자에서 처리 됩니다: <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals%2A>, <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode%2A>, <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality%2A>, <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality%2A>, 및 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyGeneration">
      <MemberSignature Language="C#" Value="public System.Xml.UniqueId KeyGeneration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.UniqueId KeyGeneration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyGeneration As UniqueId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::UniqueId ^ KeyGeneration { System::Xml::UniqueId ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyGeneration : System.Xml.UniqueId" Usage="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.UniqueId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>캐시 키에 대한 키 생성을 가져옵니다.</summary>
        <value>캐시 키에 대한 키 생성입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이에 해당 합니다 <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> 캐시 된 토큰의 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.IdentityModel.Tokens.SessionSecurityTokenCacheKey first, System.IdentityModel.Tokens.SessionSecurityTokenCacheKey second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.IdentityModel.Tokens.SessionSecurityTokenCacheKey first, class System.IdentityModel.Tokens.SessionSecurityTokenCacheKey second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (first As SessionSecurityTokenCacheKey, second As SessionSecurityTokenCacheKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::IdentityModel::Tokens::SessionSecurityTokenCacheKey ^ first, System::IdentityModel::Tokens::SessionSecurityTokenCacheKey ^ second);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.IdentityModel.Tokens.SessionSecurityTokenCacheKey * System.IdentityModel.Tokens.SessionSecurityTokenCacheKey -&gt; bool" Usage="first = second" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
        <Parameter Name="second" Type="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
      </Parameters>
      <Docs>
        <param name="first">비교할 첫 번째 캐시 키입니다.</param>
        <param name="second">비교할 두 번째 캐시 키입니다.</param>
        <summary><see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" /> 클래스에 대한 같음 연산자를 구현합니다.</summary>
        <returns>캐시 키가 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A> 됩니다 `true`, <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> 속성이 비교에 사용 되지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.IdentityModel.Tokens.SessionSecurityTokenCacheKey first, System.IdentityModel.Tokens.SessionSecurityTokenCacheKey second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.IdentityModel.Tokens.SessionSecurityTokenCacheKey first, class System.IdentityModel.Tokens.SessionSecurityTokenCacheKey second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (first As SessionSecurityTokenCacheKey, second As SessionSecurityTokenCacheKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::IdentityModel::Tokens::SessionSecurityTokenCacheKey ^ first, System::IdentityModel::Tokens::SessionSecurityTokenCacheKey ^ second);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.IdentityModel.Tokens.SessionSecurityTokenCacheKey * System.IdentityModel.Tokens.SessionSecurityTokenCacheKey -&gt; bool" Usage="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality (first, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
        <Parameter Name="second" Type="System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
      </Parameters>
      <Docs>
        <param name="first">비교할 첫 번째 캐시 키입니다.</param>
        <param name="second">비교할 두 번째 캐시 키입니다.</param>
        <summary><see cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" /> 클래스에 대한 같음 연산자를 구현합니다.</summary>
        <returns>캐시 키가 서로 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A> 됩니다 `true`, <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> 속성이 비교에 사용 되지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="sessionSecurityTokenCacheKey.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>고유 식별자를 제공하도록 <see cref="M:System.Object.ToString" />을 재정의합니다.</summary>
        <returns>문자열 형식의 키입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A> 됩니다 `true`, <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> 속성이 사용 되지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>