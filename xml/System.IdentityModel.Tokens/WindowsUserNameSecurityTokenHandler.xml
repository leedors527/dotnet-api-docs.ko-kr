<Type Name="WindowsUserNameSecurityTokenHandler" FullName="System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c807aab8912fcfd6aa3a2898d7418d9a234fd94c" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36479904" /></Metadata><TypeSignature Language="C#" Value="public class WindowsUserNameSecurityTokenHandler : System.IdentityModel.Tokens.UserNameSecurityTokenHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WindowsUserNameSecurityTokenHandler extends System.IdentityModel.Tokens.UserNameSecurityTokenHandler" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class WindowsUserNameSecurityTokenHandler&#xA;Inherits UserNameSecurityTokenHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsUserNameSecurityTokenHandler : System::IdentityModel::Tokens::UserNameSecurityTokenHandler" />
  <TypeSignature Language="F#" Value="type WindowsUserNameSecurityTokenHandler = class&#xA;    inherit UserNameSecurityTokenHandler" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.UserNameSecurityTokenHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Windows 사용자 이름 토큰 토큰을 처리하는 <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" />를 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler> 클래스를 확장 합니다 <xref:System.IdentityModel.Tokens.UserNameSecurityTokenHandler> 토큰의 유효성 검사를 추가 하는 클래스입니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsUserNameSecurityTokenHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsUserNameSecurityTokenHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidateToken">
      <MemberSignature Language="C#" Value="public override bool CanValidateToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanValidateToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.CanValidateToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanValidateToken As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanValidateToken { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanValidateToken : bool" Usage="System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.CanValidateToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 처리기가 형식이 <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" />인 토큰의 유효성 검사를 지원하는지 나타내는 값을 가져옵니다.</summary>
        <value>처리기가 형식이 <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" />인 토큰의 유효성 검사를 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 항상 <see langword="true" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateToken">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt; ValidateToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Claims.ClaimsIdentity&gt; ValidateToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateToken (token As SecurityToken) As ReadOnlyCollection(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ ValidateToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="override this.ValidateToken : System.IdentityModel.Tokens.SecurityToken -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="windowsUserNameSecurityTokenHandler.ValidateToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">유효성을 검사할 토큰입니다. <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" />의 인스턴스입니다.</param>
        <summary>지정된 토큰의 유효성을 검사하고 해당 클레임을 반환합니다.</summary>
        <returns>토큰에 포함된 ID입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="token" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="token" />를 <see cref="T:System.IdentityModel.Tokens.UserNameSecurityToken" />에서 할당할 수 없습니다.  
  
또는 
지정된 토큰의 <see cref="P:System.IdentityModel.Tokens.UserNameSecurityToken.UserName" /> 속성이 <c>user\domain</c> 형식이 아닙니다.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /> 속성은 <see langword="null" />입니다.</exception>
        <exception cref="T:System.IdentityModel.Tokens.SecurityTokenValidationException">지정된 토큰을 사용하는 LogonUser가 실패했습니다.</exception>
      </Docs>
    </Member>
  </Members>
</Type>