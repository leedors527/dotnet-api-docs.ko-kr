<Type Name="WmiConfigurationAttribute" FullName="System.Management.Instrumentation.WmiConfigurationAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d0f019b5b3031ce35b08b4ebefbd6258d1095bc" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58704209" /></Metadata><TypeSignature Language="C#" Value="public sealed class WmiConfigurationAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WmiConfigurationAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.WmiConfigurationAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WmiConfigurationAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class WmiConfigurationAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type WmiConfigurationAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>WmiConfiguration 특성은 어셈블리에 WMI.NET 공급자 확장 모델을 사용하여 WMI 공급자를 구현하는 코드가 포함됨을 나타냅니다. 이 특성은 구현된 WMI 공급자의 상위 수준 구성을 설정하는 매개 변수를 사용합니다.  
  
참고: WMI .NET 라이브러리는 이제 최종 상태로 간주되며 이러한 라이브러리에 영향을 주는 보안 관련 문제에 대해 추가 개발, 개선 기능 또는 업데이트를 사용할 수 없습니다. [MI API](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx)는 모든 새 개발에 사용해야 합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서 공급자 구성의 어떤 부분 있습니다 제어와 함께이 특성에서 허용 하는 매개 변수를 나열 합니다.  
  
|매개 변수|구성|  
|---------------|----------------|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.Scope>|공급자가 클래스를 노출 하는 네임 스페이스입니다.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity>|-보안 (DACL)에 사용 된 네임 스페이스입니다.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel>|공급자가 사용 될-호스팅 모델입니다.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel>|-공급자의 가장 모드입니다.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup>|호스팅 그룹 공급자가 속한입니다. 이 매개 변수는 in-process 공급자에만 적용 됩니다.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction>|WMI 공급자의 보안 (DACL).|  
  
   
  
## Examples  
  
```  
// Specify that this assembly contains code that implements a WMI  
// Provider. Use the assembly:WmiConfiguration attribute to define  
// the WMI namespace, the hosting model, and the impersonation mode  
// of the WMI provider.  
// The attribute below specifies that the class this provider  
// exposes to WMI will be in the root/MortgageCalc namespace, will  
// use the decoupled hosting model and will not allow the provider  
// to impersonate its callers.  
  
[assembly: WmiConfiguration("root/MortgageCalc",HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = false)]  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WmiConfigurationAttribute (string scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.WmiConfigurationAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WmiConfigurationAttribute(System::String ^ scope);" />
      <MemberSignature Language="F#" Value="new System.Management.Instrumentation.WmiConfigurationAttribute : string -&gt; System.Management.Instrumentation.WmiConfigurationAttribute" Usage="new System.Management.Instrumentation.WmiConfigurationAttribute scope" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope">공급자가 클래스를 노출할 WMI 네임스페이스입니다. 예를 들면 "root\MyProviderNamespace"입니다.</param>
        <summary>WMI 공급자가 클래스를 노출할 WMI 네임스페이스를 지정하는 <see cref="T:System.Management.Instrumentation.WmiConfigurationAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 WMI 공급자 네임 스페이스의 클래스를 노출 해야 합니다. 생성자 매개 변수로 범위를 사용 해야 하는 이유입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostingGroup">
      <MemberSignature Language="C#" Value="public string HostingGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HostingGroup" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property HostingGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HostingGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HostingGroup : string with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WMI 공급자의 호스팅 그룹을 가져오거나 설정합니다.</summary>
        <value>WMI 공급자의 호스팅 그룹을 나타내는 <see cref="T:System.String" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호스트 그룹에만 적용할 수 있는 공급자 in process 호스트 합니다. 분리 된 공급자 값 무시 됩니다.  
  
 호스팅 그룹은 모든 호스팅 그룹 이름이 할당 된 in-process 공급자입니다. 호스팅 그룹 이름이 공급자를 논리적으로 그룹화를 정의 하는 문자열입니다. In-process 공급자와 동일한 보안 컨텍스트에서 실행의 동일한 호스팅 그룹에서의 모든 Wmiprvse.exe 프로세스의 단일 인스턴스 내에서 호스팅됩니다. 따라서 동일한 호스팅 그룹 및 보안 컨텍스트를 공유 하는 공급자는 동일한 서비스 호스트 프로세스를 공유 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Management.Instrumentation.WmiConfigurationAttribute> 에 포함 된 어셈블리 Wmiprvse.exe 호스팅하는 프로세스는 또한 모든 인스턴스의 NetworkService 보안 컨텍스트에서 실행 되는 호스트 되는 in-process 공급자를 구현 함을 나타내는 데 사용 됩니다 동일한 호스트에서 다른 프로세스에서 공급자 그룹 NetworkService 보안 컨텍스트에서 실행할 수도 있습니다.  
  
```  
[assembly: WmiConfiguration("root\\NVPair", HostingModel = ManagementHostingModel.NetworkService), HostingGroup = "MyProviders"]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostingModel">
      <MemberSignature Language="C#" Value="public System.Management.Instrumentation.ManagementHostingModel HostingModel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Instrumentation.ManagementHostingModel HostingModel" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel" />
      <MemberSignature Language="VB.NET" Value="Public Property HostingModel As ManagementHostingModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::Instrumentation::ManagementHostingModel HostingModel { System::Management::Instrumentation::ManagementHostingModel get(); void set(System::Management::Instrumentation::ManagementHostingModel value); };" />
      <MemberSignature Language="F#" Value="member this.HostingModel : System.Management.Instrumentation.ManagementHostingModel with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Instrumentation.ManagementHostingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WMI 공급자의 호스팅 모델을 가져오거나 설정합니다.</summary>
        <value>WMI 공급자의 호스팅 모델을 나타내는 <see cref="T:System.Management.Instrumentation.ManagementHostingModel" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 WMI 서비스 또는 응용 프로그램에서 WMI 공급자를 호스팅할 수 있습니다. WMI 공급자 호스트 응용 프로그램에서 분리 된 공급자 라고 합니다. WMI 서비스를 호스팅하는 in-process 공급자 라고 합니다. 호스팅 모델 값은 모두 호스트 하는 모델 및 in-process 공급자를 계정 (보안 컨텍스트) 공급자를 실행 하는 경우를 결정 합니다. HostingModel의 가능한 값에 대 한 자세한 정보를 참조 하세요. <xref:System.Management.Instrumentation.ManagementHostingModel>합니다.  
  
 호스팅 모델에 대 한 자세한 내용은 참조는 [공급자 호스팅 및 보안](https://go.microsoft.com/fwlink/?LinkId=100075) WMI sdk msdn 항목.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Management.Instrumentation.WmiConfigurationAttribute> 에 포함 된 어셈블리 root\NVPair 네임 스페이스를 통해 노출 되는 공급자를 구현 함을 나타내는 데 사용 됩니다. 호스팅 모델 아니므로 <xref:System.Management.Instrumentation.ManagementHostingModel.Decoupled>는 in-process 공급자는 것입니다. 값 <xref:System.Management.Instrumentation.ManagementHostingModel.NetworkService> in-process 공급자 NetworkService 보안 컨텍스트에서 실행 됨을 나타냅니다.  
  
```  
[assembly: WmiConfiguration("root\\NVPair", HostingModel = ManagementHostingModel.NetworkService)]  
```  
  
 다음 예제에서는 <xref:System.Management.Instrumentation.WmiConfigurationAttribute> 에 포함 된 어셈블리 root\NVPair 네임 스페이스를 통해 노출 되는 공급자를 구현 함을 나타내는 데 사용 됩니다. 값 <xref:System.Management.Instrumentation.ManagementHostingModel.Decoupled> 분리 된 공급자 임을 나타냅니다.  
  
```  
[assembly: WmiConfiguration("root\\NVPair", HostingModel = ManagementHostingModel.Decoupled)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentifyLevel">
      <MemberSignature Language="C#" Value="public bool IdentifyLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IdentifyLevel" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IdentifyLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IdentifyLevel { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IdentifyLevel : bool with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WMI 공급자가 호출자를 가장할 수 있는지 여부를 지정하는 값을 가져오거나 설정합니다. 이 값이 false이면 공급자가 호출자를 가장할 수 없고 true이면 가장할 수 있습니다.</summary>
        <value>공급자가 호출자를 가장할 수 있는지 여부를 나타내는 부울 값입니다. 이 값이 false이면 공급자가 호출자를 가장할 수 없고 true이면 가장할 수 있습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 자세한 내용은 온라인에서 MSDN library의 "Provider Hosting and Security" 항목을 참조 하세요 [ http://www.msdn.com ](https://www.msdn.com/)합니다.  
  
   
  
## Examples  
 다음 예제에서는 공급자가 호출자를 가장할 수 있음을 나타내려면 IdentifyLevel 매개 변수를 사용 하는 방법에 설명 합니다.  
  
```  
[assembly: WmiConfiguration("root/MyProv", HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = true]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceSecurity">
      <MemberSignature Language="C#" Value="public string NamespaceSecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceSecurity" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property NamespaceSecurity As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NamespaceSecurity { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceSecurity : string with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>공급자가 관리 개체를 노출하는 네임스페이스에서 보안 설명자를 지정하는 SDDL(Security Descriptor Definition Language) 문자열을 가져오거나 설정합니다.</summary>
        <value>공급자가 관리 개체를 노출하는 네임스페이스에서 보안 설명자를 나타내는 SDDL 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SDDL 형식의 보안 설명자를 나타내는 방법에 대 한 자세한 내용은 참조는 [보안 설명자 문자열 형식을](https://go.microsoft.com/fwlink/?LinkId=100763) 온라인 MSDN 라이브러리의 항목입니다.  
  
   
  
## Examples  
 다음 예제에서는이 어셈블리에서 구현 되는 공급자가 WMI 클래스를 노출 하는 루트/SDTest 네임 스페이스에서 보안 설명자를 설정할 NamespaceSecurity 매개 변수를 사용 하는 방법에 설명 합니다.  
  
```  
[assembly: WmiConfiguration("root/SDTest", HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = false, NamespaceSecurity = "O:BAG:BAD:(A;CI;0x60003;;;WD)")]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public string Scope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scope" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.Scope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scope As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Scope { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scope : string" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WMI 공급자가 클래스를 노출하는 WMI 네임스페이스를 가져오거나 설정합니다.</summary>
        <value>WMI 공급자가 클래스를 노출하는 네임스페이스를 나타내는 <see cref="T:System.String" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 WMI 네임 스페이스는 WMI 리포지토리 내에서 범주입니다. 일반적으로 사용 되는 루트/cimv2 네임 스페이스 Common Information Model, 버전 2, 데스크톱 DMTF Management Task Force () 컨소시엄에 의해 정의 설명 하는 클래스를 포함 합니다. 경우에 해당 네임 스페이스의 공급자를 노출 해야 하는 표준 CIM 모델을 확장 합니다. 그렇지 않으면 사용자에 게 명확한 네임 스페이스에서 찾을 기대할 수 있는 WMI 클래스의 형식을 적절 한 네임 스페이스를 만들어야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityRestriction">
      <MemberSignature Language="C#" Value="public string SecurityRestriction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SecurityRestriction" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityRestriction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SecurityRestriction { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityRestriction : string with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WMI 공급자의 보안 설명자를 가져오거나 설정합니다. 자세한 내용은 MSDN Online Library([http://www.msdn.com](https://www.msdn.com/))의 “__Win32Provider” 항목에서 SecurityDescriptor 속성 정보를 참조하세요.</summary>
        <value>WMI 공급자의 보안 설명자를 포함하는 <see cref="T:System.String" /> 값입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>