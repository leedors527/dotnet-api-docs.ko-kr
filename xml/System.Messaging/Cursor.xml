<Type Name="Cursor" FullName="System.Messaging.Cursor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="35c2f3c29f1472f5e7ddb2f19ad2fe3c84a87424" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37647380" /></Metadata><TypeSignature Language="C#" Value="public sealed class Cursor : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Cursor extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.Cursor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Cursor&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Cursor sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type Cursor = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><see cref="T:System.Messaging.Cursor" />는 <see cref="T:System.Messaging.MessageQueue" />의 메시지를 읽을 때 큐의 특정 위치를 유지하는 데 사용됩니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 커서를 가져오려면를 <xref:System.Messaging.MessageQueue>를 호출 합니다 <xref:System.Messaging.MessageQueue.CreateCursor%2A> 메서드는 큐에 대 한 합니다.  
  
 A <xref:System.Messaging.Cursor> 같은 메서드와 함께 사용 됩니다 <xref:System.Messaging.MessageQueue.Peek%28System.TimeSpan%2CSystem.Messaging.Cursor%2CSystem.Messaging.PeekAction%29> 및 <xref:System.Messaging.MessageQueue.Receive%28System.TimeSpan%2CSystem.Messaging.Cursor%29> 큐 맨 앞에 없는 메시지를 읽으려면 해야 합니다. 동기적 또는 비동기적으로 메시지를 읽는 것이 여기 있습니다. 커서는 큐의 첫 번째 메시지만 읽는 데 사용할 필요가 없습니다.  
  
 트랜잭션 내에서 메시지를 읽을 때 메시지 큐 롤백되지 않습니다 커서 이동 트랜잭션이 중단 됩니다. 예를 들어, 두 개의 메시지를 A1과 A2를 사용 하 여 큐가 있습니다. A1 트랜잭션이 있는 동안 메시지를 제거 하면 메시지 큐 메시지 A2 커서를 이동 합니다. 그러나 어떤 이유로 트랜잭션이 중단 되 면 메시지 A1은 다시 삽입 큐 하지만 커서 메시지 A2 포인팅 남아 있습니다.  
  
 커서를 닫으려면 호출 <xref:System.Messaging.Cursor.Close%2A>합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Messaging.MessageQueue.CreateCursor" />
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.Cursor.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="cursor.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>메시지 큐에서 연결된 리소스를 해제할 수 있도록 커서를 닫습니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Messaging.Cursor" />
        <altmember cref="M:System.Messaging.MessageQueue.CreateCursor" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.Cursor.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cursor.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Messaging.Cursor" />에서 사용하는 모든 리소스를 해제합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Messaging.Cursor" />
        <altmember cref="M:System.Messaging.MessageQueue.CreateCursor" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Cursor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.Cursor.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Cursor ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cursor.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>