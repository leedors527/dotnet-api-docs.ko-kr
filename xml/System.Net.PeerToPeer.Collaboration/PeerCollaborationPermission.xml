<Type Name="PeerCollaborationPermission" FullName="System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="43fee6929807a97fed5bfeb3fba6d4ea1653bd88" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56781542" /></Metadata><TypeSignature Language="C#" Value="public sealed class PeerCollaborationPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PeerCollaborationPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PeerCollaborationPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerCollaborationPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type PeerCollaborationPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="N:System.Net.PeerToPeer.Collaboration" /> 개체 권한을 정의하거나 이 권한에 사용되는 값을 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 <xref:System.Security.Permissions> 인터넷 영역 애플리케이션에 부여 된 권한이 없음 및 모든 로컬 및 인트라넷 영역 애플리케이션에서 공동 작업 서비스에 액세스 하도록 허용 합니다. 즉, 기본 권한 변경, 모든 링크-로컬 및 사이트-로컬 없는 경우 애플리케이션 피어-투-피어 공동 작업 서비스에 액세스할 수 있지만 전역 애플리케이션에서는 액세스할 수 없습니다.  
  
 이 클래스는 결과 수 없습니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy" />
    <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)" />
    <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerCollaborationPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerCollaborationPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission : System.Security.Permissions.PermissionState -&gt; System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" Usage="new System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><see cref="T:System.Security.Permissions.PermissionState" /> 열거형에 값 중 하나입니다.</param>
        <summary><see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />의 새 인스턴스를 초기화합니다. 이 인스턴스에 대한 초기 <see cref="T:System.Security.Permissions.PermissionState" />이 생성자가 호출될 때 전달됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 형식의 인스턴스는 사용 권한으로 보호 되는 리소스에 액세스할 수 없습니다 되거나 해당 리소스에 대 한 모든 권한을 무제한 있습니다.  
  
 상태 이면 <xref:System.Security.Permissions.PermissionState.Unrestricted>, <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> 인스턴스의 모든 요청을 전달 합니다. 상태에 다른 값을 포함 하는 경우는 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> 인스턴스의 모든 요청을 거부 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="peerCollaborationPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />의 복사본을 만들어 반환합니다.</summary>
        <returns><see cref="T:System.Object" />의 현재 인스턴스에 대한 복사본을 포함하는 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 복사본을 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> 인스턴스 원래 사용 권한 사용자와 리소스를 동일한 액세스 권한을 부여 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="peerCollaborationPermission.FromXml e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e">사용 권한을 다시 생성하는 데 사용할 XML 인코딩입니다.</param>
        <summary>보안 개체를 인코딩하기 위한 XML 개체 모델을 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 클래스를 사용 하 여 일반 XML 개체 모델을 사용 하지 않고에 보안 시스템에서 사용 하 여에 대 한 간단한 XML 개체 모델의 간단한 구현 되도록 합니다.  
  
 이 클래스는 상속될 수 없습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-  매개 변수가 유효한 권한 요소가 아닌 경우  
  
-  매개 변수가 유효한 형식 또는 클래스를 포함하지 않는 경우  
  
-  매개 변수의 버전 번호가 지원되지 않는 경우</exception>
        <exception cref="T:System.ArgumentNullException">매개 변수가 <see langword="null" /> 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="peerCollaborationPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">현재 사용 권한과 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" />할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
        <summary>현재 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />과 지정된 <paramref name="target" /> 권한의 교집합에 해당하는 사용 권한을 만들어 반환합니다.</summary>
        <returns>현재 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />과 지정된 <paramref name="target" /> 권한의 교집합을 나타내는 새 사용 권한입니다. 교집합이 비어 있으면 새 사용 권한은 <see langword="null" /> 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 두 사용 권한의 교집합에는 모두 공통으로 설명 하는 작업 집합을 설명 하는 권한입니다. 원래 사용 권한을 모두 전달 하는 요구만 교집합을 전달 합니다.  
  
 다음 문은 해야 `true` 의 모든 구현에 대 한는 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect%2A> 메서드. X 및 Y 나타냅니다 <xref:System.Security.IPermission> 되지 않는 개체 참조를 `null` 참조 (`Nothing` Visual Basic에서).  
  
-   X.Intersect(X) x 값을 반환 합니다.  
  
-   X.Intersect(Y)는 Y.Intersect(X)와 같은 값을 반환합니다.  
  
-   X.Intersect (을 `null` 참조)를 반환을 `null` 참조 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">target 매개 변수가 <see langword="null" /> 참조(Visual Basic의 경우 <see langword="Nothing" />)가 아니며 현재 사용 권한과 동일한 클래스의 인스턴스가 아닌 경우</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="peerCollaborationPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">하위 집합 관계를 테스트할 사용 권한입니다. 이 사용 권한은 현재 사용 권한과 형식이 같아야 합니다.</param>
        <summary>현재 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />이 지정된 <paramref name="target" /> 권한의 하위 집합인지 여부를 확인합니다.</summary>
        <returns>현재 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />이 지정된 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 현재 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> 현재 사용 권한과 지정 된 권한으로 완전히 포함 된 작업의 집합을 지정 하는 경우 지정한 사용 권한의 하위 집합입니다. 에 대 한 액세스를 나타내는 사용 권한의 예를 들어, "*C:\example.txt*"에 대 한 액세스를 나타내는 사용 권한의 하위 집합은 "*c:\\*"입니다. 이 메서드가 반환 하는 경우 `true`, 현재 사용 권한과 액세스 권한을 보호 되는 리소스의 지정한 사용 권한에 보다를 나타냅니다.  
  
 다음 문은 해야 `true` 의 모든 구현에 대 한는 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf%2A> 메서드. X, Y 및 Z 나타냅니다 <xref:System.Security.IPermission> 되지 않은 개체를 `null` 참조 (`Nothing` Visual Basic에서).  
  
-   X.IsSubsetOf(X) 반환 `true`합니다.  
  
-   X와 Y 동일한 사용 권한 집합을 나타내는 경우에 X.IsSubsetOf(Y) Y.IsSubsetOf(X)와 같은 값을 반환 합니다.  
  
-   둘 다 반환 X.IsSubsetOf(Y) 및 Y.IsSubsetOf(Z) `true`, X.IsSubsetOf(Z) 반환 `true`합니다.  
  
 X 빈 나타내면 [IPermission](https://go.microsoft.com/fwlink?LinkID=98303) none 권한 상태를 사용 하 여 개체 Y IPermission 개체를 나타내며를 `null` 참조 (`Nothing` Visual Basic에서), X.IsSubsetOf(Y) 반환 `true`. Z 빈 사용 권한을 인 경우 복합 작업 x.union (z)를 설정 합니다. IsSubsetOf(Y)도 반환 `true` 때문에 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union%2A> 는 빈 사용 권한을 두 개의 빈 사용 권한.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">매개 변수가 <see langword="null" /> 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="peerCollaborationPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />이 무제한인지 여부를 지정하는 값을 반환합니다.</summary>
        <returns>현재 사용 권한이 무제한이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 무제한 권한 사용 권한으로 보호 하는 모든 리소스에 대 한 액세스를 나타냅니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="peerCollaborationPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
        <returns>상태 정보를 포함한 사용 권한의 XML 인코딩입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 권한 클래스 메서드는 인프라에서 사용 하는 및 애플리케이션에서 사용할 수는 없습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="peerCollaborationPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
        <summary>현재 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />과 지정된 <paramref name="target" /> 사용 권한의 합집합에 해당하는 사용 권한을 만듭니다.</summary>
        <returns>현재 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" />과 지정된 사용 권한의 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />을 나타내는 새 사용 권한입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 호출의 결과 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union%2A> 는 모두 현재 표시 된 모든 작업을 나타내는 사용 권한 <xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission> 및 지정한 사용 권한의 합니다. 사용 권한 중 하나를 전달 하는 모든 요청 전달 합집합에 해당 합니다.  
  
 다음 문은 해야 `true` Union 메서드는 모든 구현에 대 한 합니다. X 및 Y 나타냅니다 <xref:System.Security.IPermission> 되지 않은 개체를 `null` 참조 (`Nothing` Visual Basic에서).  
  
-   X.Union(X) X와 동일한 값을 가진 개체를 반환 합니다.  
  
-   X.Union(Y)는 Y.Union(X) 반환한 개체와 동일한 값을 가진 개체를 반환 합니다.  
  
-   X.Union (한 `null` 참조 (`Nothing` Visual Basic에서)) X와 동일한 값을 가진 개체를 반환 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">매개 변수가 <see langword="null" /> 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted" />
      </Docs>
    </Member>
  </Members>
</Type>