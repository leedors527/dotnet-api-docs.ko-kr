<Type Name="PeerNameResolver" FullName="System.Net.PeerToPeer.PeerNameResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="47cf2e8bec2c1e07b4b3b59d1cc464f97075f394" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55327039" /></Metadata><TypeSignature Language="C#" Value="public class PeerNameResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PeerNameResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameResolver" />
  <TypeSignature Language="F#" Value="type PeerNameResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>PNRP Namespace Provider API 프로토콜을 사용하여 <see cref="T:System.Net.PeerToPeer.PeerName" />을 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />로 확인하는 값을 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Net.PeerToPeer.PeerNameRecord> 에 대 한 모든 정보를 포함 하는 합니다 <xref:System.Net.PeerToPeer.PeerName> 에 게시 되는 <xref:System.Net.PeerToPeer.Cloud> 또는 해결 과정에서 쿼리 된 클라우드에.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Net.PeerToPeer.PeerNameResolver" /> 클래스의 새로운 기본 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 성공적으로 해결 한 후를 <xref:System.Net.PeerToPeer.PeerName>, <xref:System.Net.PeerToPeer.PeerNameRecord> 에 지정 된 모든 정보가 <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> 동안 쿼리 된 클라우드에 게시 되는 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 작업.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveCompleted">
      <MemberSignature Language="C#" Value="protected void OnResolveCompleted (System.Net.PeerToPeer.ResolveCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveCompleted(class System.Net.PeerToPeer.ResolveCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveCompleted (e As ResolveCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveCompleted(System::Net::PeerToPeer::ResolveCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnResolveCompleted : System.Net.PeerToPeer.ResolveCompletedEventArgs -&gt; unit" Usage="peerNameResolver.OnResolveCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> 이벤트에 의해 반환된 데이터가 포함된 <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> 개체입니다.</param>
        <summary><see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> 이벤트가 발생된 후에 피어 확인 데이터를 반환합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 피어 확인이 완료 된 후 피어 이름 확인 데이터를 처리 하는 데 사용 하는 비동기 콜백입니다.  
  
 이 파생된 형식을 재정의할 수 있습니다 때 메서드를 추가 작업을 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 피어 확인자 개체에서 이벤트가 발생 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnResolveProgressChanged">
      <MemberSignature Language="C#" Value="protected void OnResolveProgressChanged (System.Net.PeerToPeer.ResolveProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveProgressChanged(class System.Net.PeerToPeer.ResolveProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveProgressChanged (e As ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveProgressChanged(System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnResolveProgressChanged : System.Net.PeerToPeer.ResolveProgressChangedEventArgs -&gt; unit" Usage="peerNameResolver.OnResolveProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> 이벤트에 의해 반환된 피어 이름 확인 진행률 정보를 포함하는 <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> 개체입니다.</param>
        <summary><see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> 이벤트가 발생할 때 피어 확인 진행률 데이터를 반환합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 피어 확인 진행률 요청한 후 피어 확인 데이터를 처리 하는 데 사용 하는 비동기 콜백입니다.  
  
 이 파생된 형식을 재정의할 수 메서드를 추가 될 때 작업을 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> 이벤트가 발생 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생된 형식에서이 메서드를 재정의할 때 호출 해야 기본 형식의 <see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>PNRP 프로토콜을 사용하여 <see cref="T:System.Net.PeerToPeer.PeerName" /> 개체를 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />로 확인합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 클라우드의 피어 이름을 연결합니다. 호출을 <xref:System.Net.PeerToPeer.PeerNameResolver> 호출 하는 것과 비슷합니다는 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 각 피어 이름 레코드에 대 한 메서드는 <xref:System.Net.PeerToPeer.PeerNameRecordCollection>합니다. 참고 개별 피어 이름 레코드 확인 메서드를 사용 하 여 여러 피어 이름 확인 무효화 하지 않습니다.  
  
 에 대 한 모든 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 메서드는 해당 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 메서드.  ResolveAsync 메서드 비동기 이벤트 처리에 대 한 매개 변수 목록의 시스템 토큰이 포함 된다는 점을 제외 하 고는 전달 될 매개 변수를 동일 합니다.  
  
 경우는 <xref:System.Net.PeerToPeer.Cloud> 매개 변수를 지정 하지 않으면, 메서드를 사용 하는 <xref:System.Net.PeerToPeer.Cloud.Available> 바로 가기를 클라우드 매개 변수를 입력 합니다.  경우는 `maxRecords` 기본값인 0을 사용 하면 매개 변수가 <xref:System.ArgumentOutOfRangeException> 예외를 throw 합니다.  
  
 확인 작업 오류 완료 되거나 취소 될 경우에이 이벤트를 발생 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve peerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
      </Parameters>
      <Docs>
        <param name="peerName">확인할 <see cref="T:System.Net.PeerToPeer.PeerName" />입니다.</param>
        <summary>호출 피어에 알려진 모든 클라우드에서 지정된 <see cref="T:System.Net.PeerToPeer.PeerName" />을 확인합니다.</summary>
        <returns>지정된 피어 이름과 연결된 모든 피어 이름 레코드(<see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> 개체로 표시)를 포함하는 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />입니다. 보안되지 않은 피어 이름의 경우 동일한 <see cref="T:System.Net.PeerToPeer.PeerName" />을 같은 <see cref="T:System.Net.PeerToPeer.Cloud" />의 여러 사용자가 등록하고 여러 엔드포인트와 연결할 수 있습니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 클라우드의 피어 이름을 연결합니다. 모든 클라우드를 쿼리하여는 <xref:System.Net.PeerToPeer.PeerName>합니다. 피어 이름을 확인할 수 없습니다. 나는 경우 `null`, <xref:System.Net.PeerToPeer.PeerToPeerException> throw 됩니다.  
  
 보안 되지 않은 피어 이름에 대 한 이름이 있습니다 수 등록 (및 다른 끝점과 연결 된) 동일한 클라우드 내의 여러 피어가 됩니다.  
  
 호출을 <xref:System.Net.PeerToPeer.PeerNameResolver> 호출 하는 것과 비슷합니다는 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 각 피어 이름 레코드에 대 한 메서드는 <xref:System.Net.PeerToPeer.PeerNameRecordCollection>합니다. 참고 개별 피어 이름 레코드 확인 메서드를 사용 하 여 여러 피어 이름 확인 무효화 하지 않습니다.  
  
 에 대 한 모든 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 메서드는 해당 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 메서드.  ResolveAsync 메서드 비동기 이벤트 처리에 대 한 시스템 토큰이 포함 된다는 점을 제외 하 고 해당 매개 변수 목록은 동일 합니다.  
  
 경우는 <xref:System.Net.PeerToPeer.Cloud> 매개 변수를 지정 하지 않으면, 메서드를 사용 하는 <xref:System.Net.PeerToPeer.Cloud.Available> 바로 가기를 클라우드 매개 변수를 입력 합니다.  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 확인 작업 오류 완료 되거나 취소 될 경우 이벤트가 발생 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 해결 하는 방법을 보여 줍니다.는 <xref:System.Net.PeerToPeer.PeerName> 에 게시 된 <xref:System.Net.PeerToPeer.Cloud>합니다.  
  
 [!code-csharp[NCLPNRPPeerNameResolver#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPPeerNameResolver/CS/PeerNameResolver.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="peerName" /> 매개 변수가 <see langword="null" />로 설정된 경우</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">지정된 피어 이름을 확인할 수 없는 경우</exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName">확인할 <see cref="T:System.Net.PeerToPeer.PeerName" />입니다.</param>
        <param name="maxRecords">모든 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 개체에서 제공된 <paramref name="peerName" />을 확인하여 가져올 최대 <see cref="T:System.Net.PeerToPeer.Cloud" /> 개체의 수입니다.</param>
        <summary>호출 피어에 알려진 모든 클라우드에서 지정된 피어 이름을 확인하여 지정된 수를 초과하지 않는 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 개체를 반환합니다.</summary>
        <returns>크기가 <paramref name="maxRecords" /> 항목보다 작거나 같은 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />입니다. 이 컬렉션에는 확인된 <see cref="T:System.Net.PeerToPeer.PeerName" />과 연결되어 있는 피어 이름 레코드가 포함됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 클라우드의 피어 이름을 연결합니다. 모든 클라우드 피어 이름에 대해 쿼리 됩니다. 보안 되지 않은 피어 이름에 대 한 피어 이름이 같은 여러 사용자가 등록 수 <xref:System.Net.PeerToPeer.Cloud>, 다른 끝점과 연결 합니다. 경우는 <xref:System.Net.PeerToPeer.PeerName> 확인할 수 없습니다 (예를 들어 피어 이름 게시 되지 않은)는 <xref:System.Net.PeerToPeer.PeerToPeerException> throw 됩니다.  
  
 에 대 한 모든 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 메서드는 해당 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 메서드.  ResolveAsync 메서드 비동기 이벤트 처리에 대 한 시스템 토큰이 포함 된다는 점을 제외 하 고 해당 매개 변수 목록은 동일 합니다.  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 확인 작업 오류 완료 되거나 취소 될 경우 이벤트가 발생 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="peerName" /> 매개 변수가 <see langword="null" />로 설정된 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="maxRecords" /> 매개 변수가 0보다 작은 경우</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">제공된 피어 이름을 확인할 수 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, cloud)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="peerName">확인할 <see cref="T:System.Net.PeerToPeer.PeerName" />입니다.</param>
        <param name="cloud">피어 이름을 확인할 <see cref="T:System.Net.PeerToPeer.Cloud" />입니다.</param>
        <summary>지정된 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />에서 특정 <see cref="T:System.Net.PeerToPeer.Cloud" />을 확인합니다.</summary>
        <returns>지정된 피어 이름과 연결된 모든 피어 이름 레코드(<see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> 개체로 표시)를 포함하는 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />입니다. 보안되지 않은 피어 이름의 경우 동일한 <see cref="T:System.Net.PeerToPeer.PeerName" />을 같은 <see cref="T:System.Net.PeerToPeer.Cloud" />의 여러 사용자가 등록하고 여러 엔드포인트와 연결할 수 있습니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Net.PeerToPeer.PeerName> 확인할 수 없습니다 (즉, 피어 이름 게시 되지 않은)는 <xref:System.Net.PeerToPeer.PeerToPeerException> throw 됩니다.  
  
 보안 되지 않은 피어 이름에 대 한 이름이 있습니다 수 등록 (및 다른 끝점과 연결 된) 동일한 클라우드 내의 여러 피어가 됩니다.  
  
 에 대 한 모든 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 메서드는 해당 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 메서드.  ResolveAsync 메서드 비동기 이벤트 처리에 대 한 시스템 토큰이 포함 된다는 점을 제외 하 고 해당 매개 변수 목록은 동일 합니다.  
  
 경우는 <xref:System.Net.PeerToPeer.Cloud> 매개 변수는 `null`, <xref:System.Net.PeerToPeer.PeerNameResolver> 사용 하 여를 <xref:System.Net.PeerToPeer.Cloud.Available> 바로 가기를 입력 합니다 <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, 및 <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>합니다.  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 확인 작업 오류 완료 되거나 취소 될 경우 이벤트가 발생 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="peerName" /> 매개 변수가 <see langword="null" />로 설정된 경우</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">제공된 피어 이름을 확인할 수 없는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * int -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, cloud, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName">확인할 <see cref="T:System.Net.PeerToPeer.PeerName" />입니다.</param>
        <param name="cloud"><paramref name="peerName" />을 확인할 <see cref="T:System.Net.PeerToPeer.Cloud" />입니다.</param>
        <param name="maxRecords">지정된 클라우드에서 특정 <paramref name="peerName" />을 확인하여 가져올 최대 피어 이름 레코드 개체의 수입니다.</param>
        <summary>지정된 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />에서 특정 <see cref="T:System.Net.PeerToPeer.Cloud" />을 확인하여 지정된 수를 초과하지 않는 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 개체를 반환합니다.</summary>
        <returns>크기가 <paramref name="maxRecords" /> 항목보다 작거나 같은 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />입니다. 이 컬렉션에는 확인된 <see cref="T:System.Net.PeerToPeer.PeerName" />과 연결되어 있는 피어 이름 레코드가 포함됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 보안 되지 않은 피어 이름에 대 한 이름이 있습니다 수 등록 (및 다른 끝점과 연결 된) 동일한 클라우드 내의 여러 피어가 됩니다. 피어 이름을 확인할 수 없는 경우는 <xref:System.Net.PeerToPeer.PeerToPeerException> throw 됩니다.  
  
 에 대 한 모든 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 메서드는 해당 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 메서드.  ResolveAsync 메서드 비동기 이벤트 처리에 대 한 시스템 토큰이 포함 된다는 점을 제외 하 고 해당 매개 변수 목록은 동일 합니다.  
  
 경우는 <xref:System.Net.PeerToPeer.Cloud> 매개 변수는 `null`, <xref:System.Net.PeerToPeer.PeerNameResolver> 사용 하 여를 <xref:System.Net.PeerToPeer.Cloud.Available> 바로 가기를 입력 합니다 <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, 및 <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>합니다.  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 확인 작업 오류 완료 되거나 취소 될 경우 이벤트가 발생 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="peerName" /> 매개 변수가 <see langword="null" />로 설정된 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="maxRecords" /> 매개 변수가 0보다 작은 경우</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">제공된 피어 이름을 확인할 수 없는 경우</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolveAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>이러한 메서드는 호출 피어에 알려진 모든 클라우드에서 지정된 <see cref="T:System.Net.PeerToPeer.PeerName" />에 대한 비동기 확인 작업을 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 모든 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 메서드는 해당 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 비동기 처리가 필요할 때 사용 되는 메서드.  ResolveAsync 이벤트 처리에 대 한 매개 변수 목록의 시스템 토큰이 포함 된다는 점을 제외 하 고는 전달 될 매개 변수를 동일 합니다.  
  
 Resolve 메서드에 사이의 ResolveAsync 메서드 매개 변수 불일치가 발생 하는 경우 및 <xref:System.Net.PeerToPeer.Cloud> 매개 변수를 지정 하지 않으면, 메서드를 사용 하는 <xref:System.Net.PeerToPeer.Cloud.Available> 바로 가기를 클라우드 매개 변수를 입력 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">확인할 <see cref="T:System.Net.PeerToPeer.PeerName" />입니다.</param>
        <param name="userState">피어 이름 확인 작업에 대한 상태 정보가 들어 있는 사용자 정의 개체입니다.</param>
        <summary>호출 피어에 알려진 모든 클라우드에서 지정된 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />에 대한 비동기 피어 이름 확인 작업을 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 비동기적으로 피어 이름은 클라우드에 연결합니다. 모든 클라우드를 쿼리하여는 <xref:System.Net.PeerToPeer.PeerName>합니다. 발생 합니다 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 이벤트를 다시 호출 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> 메서드. 발생 시킵니다 합니다 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> 이벤트를 다시 호출 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> 메서드.  
  
 피어 이름을 확인할 수 없는 경우는 <xref:System.Net.PeerToPeer.PeerToPeerException> throw 됩니다.  
  
 보안 되지 않은 피어 이름에 대 한 이름이 있습니다 수 등록 (및 다른 끝점과 연결 된) 동일한 클라우드 내의 여러 피어가 됩니다.  
  
 호출을 <xref:System.Net.PeerToPeer.PeerNameResolver> 호출 하는 것과 비슷합니다는 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 각 피어 이름 레코드에 대 한 메서드는 <xref:System.Net.PeerToPeer.PeerNameRecordCollection>합니다. 참고 개별 피어 이름 레코드 확인 메서드를 사용 하 여 여러 피어 이름 확인 무효화 하지 않습니다.  
  
 에 대 한 모든 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 메서드는 해당 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 메서드.  ResolveAsync 메서드 비동기 이벤트 처리를 위해 시스템 토큰이 포함 Resolve 메서드에 동기 처리를 위한 있다는 점을 제외 하면 해당 매개 변수 목록은 동일 합니다.  
  
 모든 비동기 참조 확인자 개체를 고유 식별자 토큰을 사용 하 여 조정 됩니다. 이 `userState` 토큰 또는 메시지 식별자를 사용 하면 운영 체제 메시지는 메시지 큐에 배치 된 후 단일 수신 프로세스에 메시지를 배달 합니다.  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 확인 작업 오류 완료 되거나 취소 될 경우 이벤트가 발생 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="peerName" /> 및 <paramref name="userState" /> 매개 변수 중 하나 또는 둘 모두가 <see langword="null" />로 설정된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * int * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, maxRecords, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">확인할 <see cref="T:System.Net.PeerToPeer.PeerName" />입니다.</param>
        <param name="maxRecords">피어 이름에 대해 획득할 최대 레코드 수입니다.</param>
        <param name="userState">확인 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</param>
        <summary>호출 피어에 알려진 모든 클라우드에서 지정된 <see cref="T:System.Net.PeerToPeer.PeerName" />에 대한 비동기 피어 이름 확인 작업을 시작하고 피어 이름에 대해 <paramref name="maxRecords" />개까지 항목을 반환합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 비동기적으로 피어 이름은 클라우드에 연결합니다. 모든 클라우드를 쿼리하여는 <xref:System.Net.PeerToPeer.PeerName>합니다. 보안 되지 않은 피어 이름에 대 한 이름이 있습니다 수 등록 (및 다른 끝점과 연결 된) 동일한 클라우드 내의 여러 피어가 됩니다. 피어 이름을 확인할 수 없습니다. 나는 경우 `null`, <xref:System.Net.PeerToPeer.PeerToPeerException> throw 됩니다.  
  
 이 메서드는 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 이벤트를 다시 호출 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> 메서드. 발생 시킵니다 합니다 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> 이벤트를 다시 호출 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> 메서드.  
  
 에 대 한 모든 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 메서드는 해당 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 메서드.  ResolveAsync 메서드 비동기 이벤트 처리를 위해 시스템 토큰이 포함 Resolve 메서드에 동기 처리를 위한 있다는 점을 제외 하면 해당 매개 변수 목록은 동일 합니다.  
  
 모든 비동기 참조 확인자 개체를 고유 식별자 토큰을 사용 하 여 조정 됩니다 <xref:System.Object>합니다. 이 `userState` 토큰 또는 메시지 식별자를 사용 하면 운영 체제 메시지는 메시지 큐에 배치 된 후 단일 수신 프로세스에 메시지를 배달 합니다.  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 확인 작업 오류 완료 되거나 취소 될 경우 이벤트가 발생 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="peerName" /> 및 <paramref name="userState" /> 매개 변수 중 하나 또는 둘 모두가 <see langword="null" />로 설정된 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="maxRecords" /> 매개 변수가 0보다 작은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, cloud, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">확인할 <see cref="T:System.Net.PeerToPeer.PeerName" />입니다.</param>
        <param name="cloud"><paramref name="peerName" />을 확인할 <see cref="T:System.Net.PeerToPeer.Cloud" />입니다.</param>
        <param name="userState">피어 이름 확인 작업에 대한 정보가 들어 있는 사용자 정의 <see cref="T:System.Object" />입니다.</param>
        <summary>지정된 <see cref="T:System.Net.PeerToPeer.Cloud" />에서 지정된 <see cref="T:System.Net.PeerToPeer.PeerName" />에 대한 비동기 피어 이름 확인 작업을 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 이벤트를 다시 호출 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> 메서드. 발생 시킵니다 합니다 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> 이벤트를 다시 호출 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> 메서드.  
  
 보안 되지 않은 피어 이름에 대 한 이름이 있습니다 수 등록 (및 다른 끝점과 연결 된) 동일한 클라우드 내의 여러 피어가 됩니다.  
  
 경우는 <xref:System.Net.PeerToPeer.Cloud> 매개 변수는 `null`를 사용 하는 이름이 <xref:System.Net.PeerToPeer.Cloud.Available> 기본값을 초기화 하는 바로 가기는 <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, 및 <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> 속성.  
  
 에 대 한 모든 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 메서드는 해당 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 메서드.  ResolveAsync 메서드 비동기 이벤트 처리를 위해 시스템 토큰이 포함 Resolve 메서드에 동기 처리를 위한 있다는 점을 제외 하면 해당 매개 변수 목록은 동일 합니다.  
  
 모든 비동기 참조 확인자 개체를 고유 식별자 토큰을 사용 하 여 조정 됩니다. 이 `userState` 토큰 또는 메시지 식별자를 사용 하면 운영 체제 메시지는 메시지 큐에 배치 된 후 단일 수신 프로세스에 메시지를 배달 합니다.  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 확인 작업 오류 완료 되거나 취소 될 경우 이벤트가 발생 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="peerName" /> 및 <paramref name="userState" /> 매개 변수 중 하나 또는 둘 모두가 <see langword="null" />로 설정된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * int * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, cloud, maxRecords, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">확인할 <paramref name="peerName" />입니다.</param>
        <param name="cloud"><paramref name="peerName" />을 확인할 <paramref name="cloud" />입니다.</param>
        <param name="maxRecords"><paramref name="peerName" />에 대해 <paramref name="cloud" />에서 획득할 최대 레코드 수입니다.</param>
        <param name="userState">피어 이름 확인 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</param>
        <summary>지정된 <see cref="T:System.Net.PeerToPeer.Cloud" />에서 지정된 <see cref="T:System.Net.PeerToPeer.PeerName" />에 대한 비동기 피어 이름 확인 작업을 시작합니다.  확인 작업은 지정된 피어 이름에 대해 <paramref name="maxRecords" />개 이하의 피어 이름만 확인합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 보안 되지 않은 피어 이름에 대 한 이름이 있습니다 수 등록 (및 다른 끝점과 연결 된) 동일한 클라우드 내의 여러 피어가 됩니다.  
  
 이 메서드는 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 이벤트를 다시 호출 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> 메서드. 발생 시킵니다 합니다 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> 이벤트를 다시 호출 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> 메서드.  
  
 경우는 <xref:System.Net.PeerToPeer.Cloud> 매개 변수는 `null`를 사용 하는 이름이 <xref:System.Net.PeerToPeer.Cloud.Available> 기본값을 초기화 하는 바로 가기는 <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, 및 <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> 속성.  
  
 에 대 한 모든 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> 메서드는 해당 하는 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 메서드.  ResolveAsync 메서드 비동기 이벤트 처리를 위해 시스템 토큰이 포함 Resolve 메서드에 동기 처리를 위한 있다는 점을 제외 하면 해당 매개 변수 목록은 동일 합니다.  
  
 피어 확인자 개체에 대 한 모든 비동기 참조 되는 고유 식별자 토큰을 사용 하 여 조정 된 <xref:System.Object>합니다. 이 `userState` 토큰 또는 메시지 식별자를 사용 하면 운영 체제 메시지는 메시지 큐에 배치 된 후 단일 수신 프로세스에 메시지를 배달 합니다.  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 확인 작업 오류 완료 되거나 취소 될 경우 이벤트가 발생 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="peerName" /> 및 <paramref name="userState" /> 매개 변수 중 하나 또는 둘 모두가 <see langword="null" />로 설정된 경우</exception>
        <exception cref="T:System.ArgumentException">하나 이상의 제공된 매개 변수가 올바르지 않은 경우</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">이 작업이 성공적으로 완료되려면 하나 이상의 이벤트 처리기가 필요합니다.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="maxRecords" /> 매개 변수가 0보다 작은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsyncCancel">
      <MemberSignature Language="C#" Value="public void ResolveAsyncCancel (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsyncCancel(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAsyncCancel (userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsyncCancel(System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsyncCancel : obj -&gt; unit" Usage="peerNameResolver.ResolveAsyncCancel userState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState">확인 작업을 시작한 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 메서드 인스턴스에 제공된 개체입니다.</param>
        <summary>지정된 비동기 피어 이름 확인 요청을 취소합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 호출 하지 시스템이 지정 된 추가 레코드를 가져오려면 보장 <xref:System.Net.PeerToPeer.PeerName>합니다.  비동기 피어 이름 확인 작업을 처리 중인 경우이 메서드는, 하는 경우 해당 연산 처럼 작동 "없습니다" (아니요 OP).  
  
 `userState` 개체는 여러 호출이 진행 중인 경우 특정 비동기 호출을 추적에 사용 되므로 반드시 제공 해야 합니다. 이 호출자가 제공한 개체는 각 피어 이름 확인 요청에 대해 고유 합니다.  
  
 이 메서드는 즉시 반환 되지만 작업 수도 즉시 취소할 수 없습니다. 반환 하는 이벤트 인수는 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> 이벤트는 클라이언트가 취소 발생 여부를 확인 하 여 폴링할 수 있는 필드를 포함 합니다.  
  
 이 메서드를 호출 하면 ResolveCompleted 이벤트는 이벤트 인수를 사용 하 여 가능한 한 빨리 신호 <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> 로 `true`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="userState" /> 매개 변수는 <see langword="null" />일 수 없습니다.</exception>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ResolveCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveCompleted As EventHandler(Of ResolveCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveCompletedEventArgs ^&gt; ^ ResolveCompleted;" />
      <MemberSignature Language="F#" Value="member this.ResolveCompleted : EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; " Usage="member this.ResolveCompleted : System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>특정 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />에 대한 피어 이름 확인 요청이 완료되면 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> 이벤트가 신호를 받습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> 이벤트, 각 끝점에 대해 한 번 발생 하 고 모든 끝점을 찾은 후 때 한 번만이 이벤트가 발생 합니다.  
  
 경우에이 이벤트를 발생 됩니다는 <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> 작업이 오류 완료 되거나 취소 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="ResolveProgressChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveProgressChanged As EventHandler(Of ResolveProgressChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^&gt; ^ ResolveProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.ResolveProgressChanged : EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; " Usage="member this.ResolveProgressChanged : System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 이벤트는 특정 <see cref="T:System.Net.PeerToPeer.PeerName" />에 대한 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 작업의 응답으로 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 개체가 발견될 때마다 신호를 받습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 여러 <xref:System.Net.PeerToPeer.PeerName> 개체가 쿼리 중인 클라우드에 있는,이 이벤트는 한 번 각각에 대 한 <xref:System.Net.PeerToPeer.PeerNameRecord> 찾을 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      </Docs>
    </Member>
  </Members>
</Type>