<Type Name="PnrpPermission" FullName="System.Net.PeerToPeer.PnrpPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7eb19c1a4766825699a4a0659d4cb7fec6503ba2" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56762913" /></Metadata><TypeSignature Language="C#" Value="public sealed class PnrpPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PnrpPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PnrpPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PnrpPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class PnrpPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type PnrpPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="28bb3-101"><see cref="N:System.Net.PeerToPeer" /> 개체 권한에 사용되는 값을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-101">Specifies the values that are used in <see cref="N:System.Net.PeerToPeer" /> object permissions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28bb3-102">기본 권한은 모든 로컬 및 인트라넷 영역 애플리케이션에서 PNRP 서비스에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-102">The default permissions allow all local and Intranet zone applications to access PNRP services.</span></span> <span data-ttu-id="28bb3-103">기본 권한은 변경 되지 않으면 모든 링크-로컬 및 사이트-로컬 애플리케이션 피어-투-피어 서비스에 액세스할 수 있지만 전역 (인터넷) 애플리케이션에서는 액세스할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-103">If the default permissions are not changed, all link-local and site-local applications have access to Peer-to-Peer services, but global (internet) applications have no access.</span></span>  
  
 <span data-ttu-id="28bb3-104">이 형식의 인스턴스에 있는 두 개의 권한 상태가: 하거나, 사용 권한으로 보호 되는 리소스에 액세스할 수 없습니다 나 해당 리소스에 대 한 모든 권한을 무제한 있습니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-104">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
    <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
    <altmember cref="N:System.Security.Permissions" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink?LinkID=92731"><span data-ttu-id="28bb3-105">PNRP Namespace Provider API</span><span class="sxs-lookup"><span data-stu-id="28bb3-105">PNRP Namespace Provider API</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PnrpPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PnrpPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PnrpPermission : System.Security.Permissions.PermissionState -&gt; System.Net.PeerToPeer.PnrpPermission" Usage="new System.Net.PeerToPeer.PnrpPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="28bb3-106"><see cref="T:System.Security.Permissions.PermissionState" /> 열거형에 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-106">One of the values in the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="28bb3-107">제공된 초기 권한 상태를 사용하여 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-107">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> class with the supplied initial permission state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28bb3-108">이 형식의 인스턴스에 있는 두 개의 권한 상태가: 하거나, 사용 권한으로 보호 되는 리소스에 액세스할 수 없습니다 나 해당 리소스에 대 한 모든 권한을 무제한 있습니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-108">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 <span data-ttu-id="28bb3-109">경우 `state` 는 PnrpPermission 인스턴스에 전달 무제한, 모든 요청을 거부 합니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-109">If `state` is Unrestricted, the PnrpPermission instance passes all demands.</span></span> <span data-ttu-id="28bb3-110">경우 `state` 다른 값이 포함 되어 PnrpPermission 인스턴스가 모든 요청을 거부 합니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-110">If `state` contains any other value, the PnrpPermission instance fails all demands.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="pnrpPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28bb3-111">현재 <see cref="T:System.Net.PeerToPeer.PnrpPermission" />의 동일한 복사본을 만들어 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-111">Creates and returns an identical copy of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span></span></summary>
        <returns><span data-ttu-id="28bb3-112"><see cref="T:System.Net.PeerToPeer.PnrpPermission" />의 현재 인스턴스 복사본이 인스턴스에 포함된 IPermission 인터페이스를 갖는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-112">An object with an IPermission interface, whose instance contains a copy of the current instance of <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28bb3-113">권한 복사본이 원래 권한으로 리소스에 대 한 동일한 액세스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-113">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
 <span data-ttu-id="28bb3-114">이 형식의 인스턴스에 있는 두 개의 권한 상태가: 하거나, 사용 권한으로 보호 되는 리소스에 액세스할 수 없습니다 나 해당 리소스에 대 한 모든 권한을 무제한 있습니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-114">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28bb3-115">-  매개 변수가 유효한 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 요소가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="28bb3-115">-   The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span></span>  
  
<span data-ttu-id="28bb3-116">-  매개 변수의 버전 번호가 지원되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="28bb3-116">-   The parameter's version number is not supported.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28bb3-117">매개 변수가 <see langword="null" /> 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="28bb3-117">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink?LinkID=92731"><span data-ttu-id="28bb3-118">PNRP Namespace Provider API</span><span class="sxs-lookup"><span data-stu-id="28bb3-118">PNRP Namespace Provider API</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="pnrpPermission.FromXml e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="28bb3-119">사용 권한을 다시 생성하는 데 사용할 XML 인코딩입니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-119">The XML encoding to use to reconstruct the permission.</span></span></param>
        <summary><span data-ttu-id="28bb3-120">XML 인코딩의 지정된 상태를 사용하여 보안 개체를 다시 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-120">Reconstructs a security object with a specified state from an XML encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28bb3-121">보안 개체를 인코딩하기 위한 XML 개체 모델을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-121">Represents the XML object model for encoding security objects.</span></span> <span data-ttu-id="28bb3-122">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-122">This class cannot be inherited.</span></span>  
  
 <span data-ttu-id="28bb3-123">이 클래스를 사용 하 여 일반 XML 개체 모델을 사용 하지 않고에 보안 시스템에서 사용 하 여에 대 한 간단한 XML 개체 모델의 간단한 구현 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-123">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28bb3-124">-  매개 변수가 유효한 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 요소가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="28bb3-124">-   The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span></span>  
  
<span data-ttu-id="28bb3-125">-  매개 변수의 버전 번호가 지원되지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="28bb3-125">-   The parameter's version number is not supported.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28bb3-126">매개 변수가 <see langword="null" /> 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="28bb3-126">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Security.SecurityElement" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="pnrpPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="28bb3-127">현재 사용 권한과 <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />할 사용 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-127">A permission to <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> with the current permission.</span></span> <span data-ttu-id="28bb3-128">현재 사용 권한과 동일한 형식이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-128">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="28bb3-129">현재 <see cref="T:System.Net.PeerToPeer.PnrpPermission" />과 지정된 사용 권한의 교집합에 해당하는 사용 권한을 만들어 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-129">Creates and returns a permission that is the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="28bb3-130">현재 <see cref="T:System.Net.PeerToPeer.PnrpPermission" />과 지정된 사용 권한의 교집합을 나타내는 새 사용 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-130">A new permission that represents the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span> <span data-ttu-id="28bb3-131">교집합이 비어 있으면 새 사용 권한은 <see langword="null" /> 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-131">This new permission is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28bb3-132">두 사용 권한의 교집합에는 모두 공통으로 설명 하는 작업 집합을 설명 하는 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-132">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="28bb3-133">원래 사용 권한을 모두 전달 하는 요구만 교집합을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-133">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
 <span data-ttu-id="28bb3-134">다음 문은 해야 `true` Intersect 메서드는 모든 구현에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-134">The following statements are required to be `true` for all implementations of the Intersect method.</span></span> <span data-ttu-id="28bb3-135">X 및 Y 나타냅니다 <xref:System.Security.IPermission> 되지 않는 개체 참조는 `null` 참조 (Visual Basic의 경우 Nothing)입니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-135">X and Y represent <xref:System.Security.IPermission> object references that are not a `null` reference (Nothing in Visual Basic).</span></span>  
  
-   <span data-ttu-id="28bb3-136">X.Intersect(X) x 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-136">X.Intersect(X) returns a value equal to X.</span></span>  
  
-   <span data-ttu-id="28bb3-137">X.Intersect(Y)는 Y.Intersect(X)와 같은 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-137">X.Intersect(Y) returns the same value as Y.Intersect(X).</span></span>  
  
-   <span data-ttu-id="28bb3-138">X.Intersect (을 `null` 참조 (`Nothing` Visual Basic에서)) 반환을 `null` 참조 (`Nothing` Visual Basic의).</span><span class="sxs-lookup"><span data-stu-id="28bb3-138">X.Intersect(a `null` reference (`Nothing` in Visual Basic)) returns a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28bb3-139">target 매개 변수가 <see langword="null" /> 참조(Visual Basic의 경우 <see langword="Nothing" />)가 아니며 현재 사용 권한과 동일한 클래스의 인스턴스가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="28bb3-139">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="pnrpPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="28bb3-140">하위 집합 관계를 테스트할 사용 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-140">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="28bb3-141">이 사용 권한은 현재 사용 권한과 형식이 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-141">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="28bb3-142">현재 <see cref="T:System.Net.PeerToPeer.PnrpPermission" />이 지정된 사용 권한의 하위 집합인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-142">Determines whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission.</span></span></summary>
        <returns><span data-ttu-id="28bb3-143">현재 <see cref="T:System.Net.PeerToPeer.PnrpPermission" />이 지정된 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-143"><see langword="true" /> if the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28bb3-144">현재 <xref:System.Net.PeerToPeer.PnrpPermission> 현재 사용 권한과 지정 된 권한으로 완전히 포함 된 작업의 집합을 지정 하는 경우 지정한 사용 권한의 하위 집합입니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-144">The current <xref:System.Net.PeerToPeer.PnrpPermission> is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="28bb3-145">에 대 한 액세스를 나타내는 사용 권한의 예를 들어, "*C:\example.txt*"에 대 한 액세스를 나타내는 사용 권한의 하위 집합은 "*c:\\*"입니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-145">For example, a permission that represents access to "*C:\example.txt*" is a subset of a permission that represents access to "*C:\\*".</span></span> <span data-ttu-id="28bb3-146">이 메서드가 반환 하는 경우 `true`, 현재 사용 권한과 액세스 권한을 보호 되는 리소스의 지정한 사용 권한에 보다를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-146">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
 <span data-ttu-id="28bb3-147">다음 문은 해야 `true` IsSubsetOf 메서드는 모든 구현에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-147">The following statements are required to be `true` for all implementations of the IsSubsetOf method.</span></span> <span data-ttu-id="28bb3-148">X, Y 및 Z 나타냅니다 <xref:System.Security.IPermission> 되지 않은 개체를 `null` 참조 (`Nothing` Visual Basic에서).</span><span class="sxs-lookup"><span data-stu-id="28bb3-148">X, Y, and Z represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="28bb3-149">X.IsSubsetOf(X) 반환 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-149">X.IsSubsetOf(X) returns `true`.</span></span>  
  
-   <span data-ttu-id="28bb3-150">X와 Y 동일한 사용 권한 집합을 나타내는 경우에 X.IsSubsetOf(Y) Y.IsSubsetOf(X)와 같은 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-150">X.IsSubsetOf(Y) returns the same value as Y.IsSubsetOf(X) if and only if X and Y represent the same set of permissions.</span></span>  
  
-   <span data-ttu-id="28bb3-151">둘 다 반환 X.IsSubsetOf(Y) 및 Y.IsSubsetOf(Z) `true`, X.IsSubsetOf(Z) 반환 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-151">If X.IsSubsetOf(Y) and Y.IsSubsetOf(Z) both return `true`, X.IsSubsetOf(Z) returns `true`.</span></span>  
  
-  
  
 <span data-ttu-id="28bb3-152">X의 사용 권한 상태를 사용 하 여 빈 IPermission 개체를 나타내는 경우 *없음* Y IPermission 개체를 나타내며를 `null` 참조 (`Nothing` Visual Basic에서), X.IsSubsetOf(Y) 반환 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-152">If X represents an empty IPermission object with a permission state of *None* and Y represents an IPermission object that is a `null` reference (`Nothing` in Visual Basic), X.IsSubsetOf(Y) returns `true`.</span></span> <span data-ttu-id="28bb3-153">Z 빈 사용 권한을 인 경우 복합 작업 x.union (z)를 설정 합니다. IsSubsetOf(Y)도 반환 `true` 때문에 <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> 는 빈 사용 권한을 두 개의 빈 사용 권한.</span><span class="sxs-lookup"><span data-stu-id="28bb3-153">If Z is also an empty permission, the compound set operation X.Union(Z).IsSubsetOf(Y) also returns `true` because the <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> of two empty permissions is an empty permission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28bb3-154">target 매개 변수가 <see langword="null" /> 참조(Visual Basic의 경우 <see langword="Nothing" />)가 아니며 현재 사용 권한과 동일한 클래스의 인스턴스가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="28bb3-154">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="pnrpPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28bb3-155">현재 <see cref="T:System.Net.PeerToPeer.PnrpPermission" />이 무제한인지 여부를 지정하는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-155">Returns a value specifying whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is unrestricted.</span></span></summary>
        <returns><span data-ttu-id="28bb3-156">현재 사용 권한이 무제한이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-156"><see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28bb3-157">무제한 권한 사용 권한으로 보호 하는 모든 리소스에 대 한 액세스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-157">An unrestricted permission represents access to any and all resources protected by the permission.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="pnrpPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28bb3-158"><see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-158">Creates an XML encoding of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and its current state.</span></span></summary>
        <returns><span data-ttu-id="28bb3-159">상태 정보와 함께 사용 권한의 XML 인코딩을 포함하는 <see cref="T:System.Security.SecurityElement" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-159">A <see cref="T:System.Security.SecurityElement" /> object that contains an XML encoding of the permission, including any state information.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="pnrpPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="28bb3-160">현재 사용 권한과 결합할 사용 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-160">A permission to combine with the current permission.</span></span> <span data-ttu-id="28bb3-161">현재 사용 권한과 동일한 형식이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-161">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="28bb3-162">현재 <see cref="T:System.Net.PeerToPeer.PnrpPermission" />과 지정된 사용 권한의 합집합에 해당하는 사용 권한을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-162">Creates a permission that is the union of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="28bb3-163">현재 <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />과 지정된 사용 권한의 <see cref="T:System.Net.PeerToPeer.PnrpPermission" />을 나타내는 새 사용 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-163">A new permission that represents the <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28bb3-164">에 대 한 호출의 결과 <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> 는 모두 현재 표시 된 모든 작업을 나타내는 사용 권한 <xref:System.Net.PeerToPeer.PnrpPermission> 및 지정한 사용 권한의 합니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-164">The result of a call to <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> is a permission that represents all the operations represented by both the current <xref:System.Net.PeerToPeer.PnrpPermission> and the specified permission.</span></span> <span data-ttu-id="28bb3-165">사용 권한 중 하나를 전달 하는 모든 요청 전달 합집합에 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-165">Any demand that passes either permission passes their union.</span></span>  
  
 <span data-ttu-id="28bb3-166">다음 문은 해야 `true` Union 메서드는 모든 구현에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-166">The following statements are required to be `true` for all implementations of the Union method.</span></span> <span data-ttu-id="28bb3-167">X 및 Y 나타냅니다 <xref:System.Security.IPermission> 되지 않은 개체를 `null` 참조 (`Nothing` Visual Basic에서).</span><span class="sxs-lookup"><span data-stu-id="28bb3-167">X and Y represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="28bb3-168">X.Union(X) X와 동일한 값을 가진 개체를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-168">X.Union(X) returns an object that has the same value as X.</span></span>  
  
-   <span data-ttu-id="28bb3-169">X.Union(Y)는 Y.Union(X) 반환한 개체와 동일한 값을 가진 개체를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-169">X.Union(Y) returns an object that has the same value as the object returned by Y.Union(X).</span></span>  
  
-   <span data-ttu-id="28bb3-170">X.Union (한 `null` 참조 (`Nothing` Visual Basic에서)) X와 동일한 값을 가진 개체를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-170">X.Union(a `null` reference (`Nothing` in Visual Basic)) returns an object that has the same value as X.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28bb3-171"><paramref name="target" /> 매개 변수가 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="28bb3-171"><paramref name="target" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      </Docs>
    </Member>
  </Members>
</Type>