<Type Name="HttpWebRequest" FullName="System.Net.HttpWebRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d6513eb09c9c682954c909cdc6924cf4c2c9f593" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58690259" /></Metadata><TypeSignature Language="C#" Value="public class HttpWebRequest : System.Net.WebRequest, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable HttpWebRequest extends System.Net.WebRequest implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpWebRequest" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpWebRequest&#xA;Inherits WebRequest&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpWebRequest : System::Net::WebRequest, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type HttpWebRequest = class&#xA;    inherit WebRequest&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebRequest</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.FriendAccessAllowed</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b203a-101"><see cref="T:System.Net.WebRequest" /> 클래스의 HTTP 관련 구현을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-101">Provides an HTTP-specific implementation of the <see cref="T:System.Net.WebRequest" /> class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

> [!IMPORTANT]
>  <span data-ttu-id="b203a-102">사용 하는 것이 바람직하지 `HttpWebRequest` 새로운 개발에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-102">We don't recommend that you use `HttpWebRequest` for new development.</span></span> <span data-ttu-id="b203a-103">대신는 <xref:System.Net.Http.HttpClient?displayProperty=nameWithType> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-103">Instead, use the <xref:System.Net.Http.HttpClient?displayProperty=nameWithType> class.</span></span>

 <span data-ttu-id="b203a-104">합니다 <xref:System.Net.HttpWebRequest> 에 정의 된 메서드 및 클래스 속성에 대 한 지원을 제공 <xref:System.Net.WebRequest> 및 추가 속성 및 HTTP를 사용 하 여 서버와 직접 상호 작용할 수 있도록 하는 방법에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-104">The <xref:System.Net.HttpWebRequest> class provides support for the properties and methods defined in <xref:System.Net.WebRequest> and for additional properties and methods that enable the user to interact directly with servers using HTTP.</span></span>  
  
 <span data-ttu-id="b203a-105">사용 하지 마십시오는 <xref:System.Net.HttpWebRequest.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-105">Do not use the <xref:System.Net.HttpWebRequest.%23ctor%2A> constructor.</span></span> <span data-ttu-id="b203a-106">사용 된 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> 새로운 초기화 하는 방법 <xref:System.Net.HttpWebRequest> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-106">Use the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method to initialize new <xref:System.Net.HttpWebRequest> objects.</span></span> <span data-ttu-id="b203a-107">경우에 리소스 URI (Uniform Identifier) 체계 `http://` 또는 `https://`를 <xref:System.Net.WebRequest.Create%2A> 반환는 <xref:System.Net.HttpWebRequest> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-107">If the scheme for the Uniform Resource Identifier (URI) is `http://` or `https://`, <xref:System.Net.WebRequest.Create%2A> returns an <xref:System.Net.HttpWebRequest> object.</span></span>  
  
 <span data-ttu-id="b203a-108"><xref:System.Net.HttpWebRequest.GetResponse%2A> 에 지정 된 리소스 요청 동기 메서드를 <xref:System.Net.HttpWebRequest.RequestUri%2A> 속성과 반환을 <xref:System.Net.HttpWebResponse> 응답 개체를 포함 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-108">The <xref:System.Net.HttpWebRequest.GetResponse%2A> method makes a synchronous request to the resource specified in the <xref:System.Net.HttpWebRequest.RequestUri%2A> property and returns an <xref:System.Net.HttpWebResponse> that contains the response object.</span></span> <span data-ttu-id="b203a-109">반환한 스트림을 사용 하 여 응답 데이터를 받을 수 <xref:System.Net.HttpWebResponse.GetResponseStream%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-109">The response data can be received by using the stream returned by <xref:System.Net.HttpWebResponse.GetResponseStream%2A>.</span></span> <span data-ttu-id="b203a-110">응답 개체 또는 응답 스트림이 닫혀 있는 경우 데이터를 나머지 몰수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-110">If the response object or the response stream is closed, remaining data will be forfeited.</span></span> <span data-ttu-id="b203a-111">나머지 데이터를 배출할 수는 있으며 다음 조건을 포함 하는 경우 응답 개체 또는 스트림을 닫을 때 소켓 후속 요청에 다시 사용 됩니다: keep-alive 또는 파이프라인 요청, 적은 양의 데이터를 받을 수 해야 하는 경우 또는 남은 데이터는 짧은 시간에 수신 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-111">The remaining data will be drained and the socket will be re-used for subsequent requests when closing the response object or stream if the following conditions hold: it's a keep-alive or pipelined request, only a small amount of data needs to be received, or the remaining data is received in a small time interval.</span></span> <span data-ttu-id="b203a-112">보관에서 언급 한 조건이 하나도 없는 경우 드레이닝 시간이 초과 하는 소켓을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-112">If none of the mentioned conditions hold or the drain time is exceeded, the socket will be closed.</span></span> <span data-ttu-id="b203a-113">Keep-alive 또는 파이프라인 연결에 대 한 EOF 될 때까지 응용 프로그램의 스트림을 읽습니다 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-113">For keep-alive or pipelined connections, we strongly recommend that the application reads the streams until EOF.</span></span> <span data-ttu-id="b203a-114">이렇게 하면 소켓 성능 향상에 덜 사용 되는 리소스를 생성 하는 후속 요청에 대해 다시 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-114">This ensures that the socket will be re-used for subsequent requests resulting in better performance and less resources used.</span></span>  
  
 <span data-ttu-id="b203a-115">리소스에 데이터를 전송 하려는 경우는 <xref:System.Net.HttpWebRequest.GetRequestStream%2A> 메서드가 반환 되는 <xref:System.IO.Stream> 개체를 사용 하 여 데이터를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-115">When you want to send data to the resource, the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method returns a <xref:System.IO.Stream> object to use to send data.</span></span> <span data-ttu-id="b203a-116">합니다 <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> 고 <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> 메서드는 송신 데이터 스트림에 대 한 비동기 액세스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-116">The <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> and <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> methods provide asynchronous access to the send data stream.</span></span>  
  
 <span data-ttu-id="b203a-117">클라이언트 인증에 <xref:System.Net.HttpWebRequest>, 클라이언트 인증서를 설치 해야 합니다는 현재 사용자의 개인 인증서 저장소입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-117">For client authentication with <xref:System.Net.HttpWebRequest>, the client certificate must be installed in the My certificate store of the current user.</span></span>  
  
 <span data-ttu-id="b203a-118">합니다 <xref:System.Net.HttpWebRequest> throw 클래스는 <xref:System.Net.WebException> 리소스에 액세스 하는 동안 오류가 발생 한 경우.</span><span class="sxs-lookup"><span data-stu-id="b203a-118">The <xref:System.Net.HttpWebRequest> class throws a <xref:System.Net.WebException> when errors occur while accessing a resource.</span></span> <span data-ttu-id="b203a-119">합니다 <xref:System.Net.WebException.Status%2A?displayProperty=nameWithType> 속성에 포함을 <xref:System.Net.WebExceptionStatus> 오류의 출처를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-119">The <xref:System.Net.WebException.Status%2A?displayProperty=nameWithType> property contains a <xref:System.Net.WebExceptionStatus> value that indicates the source of the error.</span></span> <span data-ttu-id="b203a-120">때 <xref:System.Net.WebException.Status%2A?displayProperty=nameWithType> 은 <xref:System.Net.WebExceptionStatus.ProtocolError?displayProperty=nameWithType>의 <xref:System.Net.WebException.Response%2A> 속성을 포함 합니다 <xref:System.Net.HttpWebResponse> 리소스에서 받은 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-120">When <xref:System.Net.WebException.Status%2A?displayProperty=nameWithType> is <xref:System.Net.WebExceptionStatus.ProtocolError?displayProperty=nameWithType>, the <xref:System.Net.WebException.Response%2A> property contains the <xref:System.Net.HttpWebResponse> received from the resource.</span></span>  
  
 <span data-ttu-id="b203a-121"><xref:System.Net.HttpWebRequest> 메서드를 설정 하거나 시스템을 설정한 속성으로 인터넷 리소스에 전송 일반 HTTP 헤더 값을 표시 합니다. 다음 표에서 전체 목록을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-121"><xref:System.Net.HttpWebRequest> exposes common HTTP header values sent to the Internet resource as properties, set by methods, or set by the system; the following table contains a complete list.</span></span> <span data-ttu-id="b203a-122">다른 헤더를 설정할 수 있습니다는 <xref:System.Net.HttpWebRequest.Headers%2A> 속성 이름/값 쌍으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-122">You can set other headers in the <xref:System.Net.HttpWebRequest.Headers%2A> property as name/value pairs.</span></span> <span data-ttu-id="b203a-123">참고 서버 및 캐시가 변경 될 수 있습니다 하거나 요청 하는 동안 헤더를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-123">Note that servers and caches may change or add headers during the request.</span></span>  
  
 <span data-ttu-id="b203a-124">다음 표에서 속성, 메서드 또는 시스템에 의해 설정 된 HTTP 헤더를 나열 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-124">The following table lists the HTTP headers that are set either by properties or methods or the system.</span></span>  
  
|<span data-ttu-id="b203a-125">Header</span><span class="sxs-lookup"><span data-stu-id="b203a-125">Header</span></span>|<span data-ttu-id="b203a-126">설정한</span><span class="sxs-lookup"><span data-stu-id="b203a-126">Set by</span></span>|  
|------------|------------|  
|<span data-ttu-id="b203a-127">허용</span><span class="sxs-lookup"><span data-stu-id="b203a-127">Accept</span></span>|<span data-ttu-id="b203a-128">설정한는 <xref:System.Net.HttpWebRequest.Accept%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-128">Set by the <xref:System.Net.HttpWebRequest.Accept%2A> property.</span></span>|  
|<span data-ttu-id="b203a-129">연결</span><span class="sxs-lookup"><span data-stu-id="b203a-129">Connection</span></span>|<span data-ttu-id="b203a-130">으로 설정 합니다 <xref:System.Net.HttpWebRequest.Connection%2A> 속성인 <xref:System.Net.HttpWebRequest.KeepAlive%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-130">Set by the <xref:System.Net.HttpWebRequest.Connection%2A> property, <xref:System.Net.HttpWebRequest.KeepAlive%2A> property.</span></span>|  
|<span data-ttu-id="b203a-131">Content-Length</span><span class="sxs-lookup"><span data-stu-id="b203a-131">Content-Length</span></span>|<span data-ttu-id="b203a-132">설정한는 <xref:System.Net.HttpWebRequest.ContentLength%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-132">Set by the <xref:System.Net.HttpWebRequest.ContentLength%2A> property.</span></span>|  
|<span data-ttu-id="b203a-133">콘텐츠 형식</span><span class="sxs-lookup"><span data-stu-id="b203a-133">Content-Type</span></span>|<span data-ttu-id="b203a-134">설정한는 <xref:System.Net.HttpWebRequest.ContentType%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-134">Set by the <xref:System.Net.HttpWebRequest.ContentType%2A> property.</span></span>|  
|<span data-ttu-id="b203a-135">예상</span><span class="sxs-lookup"><span data-stu-id="b203a-135">Expect</span></span>|<span data-ttu-id="b203a-136">설정한는 <xref:System.Net.HttpWebRequest.Expect%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-136">Set by the <xref:System.Net.HttpWebRequest.Expect%2A> property.</span></span>|  
|<span data-ttu-id="b203a-137">날짜</span><span class="sxs-lookup"><span data-stu-id="b203a-137">Date</span></span>|<span data-ttu-id="b203a-138">현재 날짜를 시스템으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-138">Set by the system to current date.</span></span>|  
|<span data-ttu-id="b203a-139">호스트</span><span class="sxs-lookup"><span data-stu-id="b203a-139">Host</span></span>|<span data-ttu-id="b203a-140">현재 호스트 정보를 시스템으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-140">Set by the system to current host information.</span></span>|  
|<span data-ttu-id="b203a-141">If-수정-이후</span><span class="sxs-lookup"><span data-stu-id="b203a-141">If-Modified-Since</span></span>|<span data-ttu-id="b203a-142">설정한는 <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-142">Set by the <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property.</span></span>|  
|<span data-ttu-id="b203a-143">범위</span><span class="sxs-lookup"><span data-stu-id="b203a-143">Range</span></span>|<span data-ttu-id="b203a-144">설정한는 <xref:System.Net.HttpWebRequest.AddRange%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b203a-144">Set by the <xref:System.Net.HttpWebRequest.AddRange%2A> method.</span></span>|  
|<span data-ttu-id="b203a-145">참조 자</span><span class="sxs-lookup"><span data-stu-id="b203a-145">Referer</span></span>|<span data-ttu-id="b203a-146">설정한는 <xref:System.Net.HttpWebRequest.Referer%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-146">Set by the <xref:System.Net.HttpWebRequest.Referer%2A> property.</span></span>|  
|<span data-ttu-id="b203a-147">전송 인코딩</span><span class="sxs-lookup"><span data-stu-id="b203a-147">Transfer-Encoding</span></span>|<span data-ttu-id="b203a-148">으로 설정 합니다 <xref:System.Net.HttpWebRequest.TransferEncoding%2A> 속성 (합니다 <xref:System.Net.HttpWebRequest.SendChunked%2A> 속성 이어야 합니다 `true`).</span><span class="sxs-lookup"><span data-stu-id="b203a-148">Set by the <xref:System.Net.HttpWebRequest.TransferEncoding%2A> property (the <xref:System.Net.HttpWebRequest.SendChunked%2A> property must be `true`).</span></span>|  
|<span data-ttu-id="b203a-149">사용자 에이전트</span><span class="sxs-lookup"><span data-stu-id="b203a-149">User-Agent</span></span>|<span data-ttu-id="b203a-150">설정한는 <xref:System.Net.HttpWebRequest.UserAgent%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-150">Set by the <xref:System.Net.HttpWebRequest.UserAgent%2A> property.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="b203a-151"><xref:System.Net.HttpWebRequest> 자동으로 등록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-151"><xref:System.Net.HttpWebRequest> is registered automatically.</span></span> <span data-ttu-id="b203a-152">호출할 필요가 없습니다 합니다 <xref:System.Net.WebRequest.RegisterPrefix%2A> 등록 하는 방법 <xref:System.Net.HttpWebRequest?displayProperty=nameWithType> Uri를 사용 하기 전에 부터는 `http://` 또는 `https://`합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-152">You do not need to call the <xref:System.Net.WebRequest.RegisterPrefix%2A> method to register <xref:System.Net.HttpWebRequest?displayProperty=nameWithType> before using URIs beginning with `http://` or `https://`.</span></span>  
  
 <span data-ttu-id="b203a-153">로컬 컴퓨터 또는 응용 프로그램 구성 파일을 기본 프록시를 사용할 수 있는지 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-153">The local computer or application config file may specify that a default proxy be used.</span></span> <span data-ttu-id="b203a-154">경우는 <xref:System.Net.HttpWebRequest.Proxy%2A> 속성을 지정 하면에서 프록시 설정을 <xref:System.Net.HttpWebRequest.Proxy%2A> 로컬 컴퓨터 또는 응용 프로그램 구성 파일을 재정의 하는 속성 및 <xref:System.Net.HttpWebRequest> 인스턴스는 지정 된 프록시 설정을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-154">If the <xref:System.Net.HttpWebRequest.Proxy%2A> property is specified, then the proxy settings from the <xref:System.Net.HttpWebRequest.Proxy%2A> property override the local computer or application config file and the <xref:System.Net.HttpWebRequest> instance will use the proxy settings specified.</span></span> <span data-ttu-id="b203a-155">구성 파일에 없는 프록시를 지정 하는 경우 및 <xref:System.Net.HttpWebRequest.Proxy%2A> 속성이 지정 되어 있지는 <xref:System.Net.HttpWebRequest> 클래스에서에서 상속 되며, Internet Explorer 로컬 컴퓨터의 프록시 설정을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-155">If no proxy is specified in a config file and the <xref:System.Net.HttpWebRequest.Proxy%2A> property is unspecified, the <xref:System.Net.HttpWebRequest> class uses the proxy settings inherited from Internet Explorer on the local computer.</span></span> <span data-ttu-id="b203a-156">Internet Explorer의 프록시 설정이 없는 경우 요청이 서버로 직접 전송 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-156">If there are no proxy settings in Internet Explorer, the request is sent directly to the server.</span></span>  
  
 <span data-ttu-id="b203a-157"><xref:System.Net.HttpWebRequest> 클래스에서에서 상속 되며, Internet Explorer 다르게 바이패스 목록에는 Internet Explorer에서 직접 구문 분석 하는 보다 와일드 카드 문자를 사용 하 여 프록시 바이패스 목록이 구문 분석 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-157">The <xref:System.Net.HttpWebRequest> class parses a proxy bypass list with wildcard characters inherited from Internet Explorer differently than the bypass list is parsed directly by Internet Explorer.</span></span> <span data-ttu-id="b203a-158">예를 들어를 <xref:System.Net.HttpWebRequest> 클래스는 정규식으로 구문 분석 바이패스 목록이 "nt \*" Internet Explorer에서 "nt. $"입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-158">For example, the <xref:System.Net.HttpWebRequest> class will parse a bypass list of "nt\*" from Internet Explorer as a regular expression of "nt.$".</span></span> <span data-ttu-id="b203a-159">이 Internet Explorer의 기본 동작에서 서로 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-159">This differs from the native behavior of Internet Explorer.</span></span> <span data-ttu-id="b203a-160">따라서 URL "`http://intxxxxx`"을 사용 하 여 프록시를 무시는 <xref:System.Net.HttpWebRequest> 클래스 하지만 Internet Explorer를 사용 하 여 프록시를 바이패스는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-160">So a URL of "`http://intxxxxx`" would bypass the proxy using the <xref:System.Net.HttpWebRequest> class, but would not bypass the proxy using Internet Explorer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-161">프레임 워크를 만들 때 SSL 세션을 캐시 하 고 가능한 경우 새 요청에 대 한 캐시 된 세션을 사용 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-161">The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</span></span> <span data-ttu-id="b203a-162">SSL 세션을 다시 사용 하려고 시도할 때, 프레임 워크의 첫 번째 요소를 사용 하는 <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (있는 경우 하나) 하는 경우에 익명 세션을 다시 사용 하려고 <xref:System.Net.HttpWebRequest.ClientCertificates%2A> 비어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-162">When attempting to reuse an SSL session, the Framework uses the first element of <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (if there is one), or tries to reuse an anonymous sessions if <xref:System.Net.HttpWebRequest.ClientCertificates%2A> is empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-163">쿠키는 보안상의 이유로 기본적으로 비활성화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-163">For security reasons, cookies are disabled by default.</span></span> <span data-ttu-id="b203a-164">사용 하 여 쿠키를 사용 하려는 경우는 <xref:System.Net.HttpWebRequest.CookieContainer%2A> 쿠키를 사용 하도록 설정 하려면 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-164">If you want to use cookies, use the <xref:System.Net.HttpWebRequest.CookieContainer%2A> property to enable cookies.</span></span>  
  
 <span data-ttu-id="b203a-165">.NET Framework 4.6에는 안전 하지 않은 암호화 및 해시 알고리즘에 대 한 연결을 차단 하는 새로운 보안 기능이 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-165">The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections.</span></span> <span data-ttu-id="b203a-166">응용 프로그램 및 HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream 등 Api 통해 TLS/SSL을 사용 하 여.NET Framework 4.6을 대상으로 하는 기본적으로는 더 안전한 동작을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-166">Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.</span></span>  
  
 <span data-ttu-id="b203a-167">개발자는 RC4 서비스를 지 원하는 기존 SSL3 서비스 또는 TLS와의 상호 운용성을 유지 하기 위해이 동작을 옵트아웃 하려면 원할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-167">Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services.</span></span> <span data-ttu-id="b203a-168">[이 문서에서는](https://support.microsoft.com/kb/3069494) 새 동작 사용 되지 않도록 코드를 수정 하는 방법에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-168">[This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-169">다음 코드 예제는 <xref:System.Net.HttpWebRequest> uri http://www.contoso.com/합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-169">The following code example creates an <xref:System.Net.HttpWebRequest> for the URI http://www.contoso.com/.</span></span>  
  
 [!code-cpp[Classic HttpWebRequest Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpWebRequest Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpWebRequest Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpWebRequest Example/CS/source.cs#1)]
 [!code-vb[Classic HttpWebRequest Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpWebRequest Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission"><span data-ttu-id="b203a-170">요청된 된 URI 또는 URI에 요청을 리디렉션할에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-170">to access the requested URI or any URI that the request is redirected to.</span></span> <span data-ttu-id="b203a-171">연결 된 열거형: <see cref="F:System.Net.NetworkAccess.Connect" /></span><span class="sxs-lookup"><span data-stu-id="b203a-171">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Connect" /></span></span></permission>
    <related type="Article" href="https://msdn.microsoft.com/library/9d663c4b-07b4-4f6f-9b12-efbd3630354f"><span data-ttu-id="b203a-172">DefaultProxy 요소 (네트워크 설정)</span><span class="sxs-lookup"><span data-stu-id="b203a-172">DefaultProxy Element (Network Settings)</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/8bf0b428-5a21-4299-8d6e-bf8251fd978a"><span data-ttu-id="b203a-173">버전 3.5 SP1에서에서 HTTPWebRequest에 대 한 NTLM 인증 변경 내용</span><span class="sxs-lookup"><span data-stu-id="b203a-173">Changes to NTLM authentication for HTTPWebRequest in Version 3.5 SP1</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b203a-174"><see cref="T:System.Net.HttpWebRequest" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-174">Initializes a new instance of the <see cref="T:System.Net.HttpWebRequest" /> class.</span></span> <span data-ttu-id="b203a-175">이 생성자는 사용되지 않습니다. 자세한 내용은 설명 섹션을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="b203a-175">These constructors are obsolete; see the Remarks section for details.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="b203a-176">둘 다 <xref:System.Net.HttpWebRequest> 생성자는 사용 되지 않으며 사용 하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-176">Both <xref:System.Net.HttpWebRequest> constructors are obsolete and should not be used.</span></span> <span data-ttu-id="b203a-177">호출을 <xref:System.Net.WebRequest.CreateHttp%2A?displayProperty=nameWithType> 새로운 초기화 방법 <xref:System.Net.HttpWebRequest> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-177">Call the <xref:System.Net.WebRequest.CreateHttp%2A?displayProperty=nameWithType> method to initialize new <xref:System.Net.HttpWebRequest> objects.</span></span>     
  
      ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpWebRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpWebRequest();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b203a-178"><see cref="T:System.Net.HttpWebRequest" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-178">Initializes a new instance of the <see cref="T:System.Net.HttpWebRequest" /> class.</span></span> <span data-ttu-id="b203a-179">이 생성자는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-179">This constructor is obsolete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.#ctor(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpWebRequest(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="new System.Net.HttpWebRequest : Uri -&gt; System.Net.HttpWebRequest" Usage="new System.Net.HttpWebRequest uri" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpWebRequest (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpWebRequest(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="new System.Net.HttpWebRequest : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.HttpWebRequest" Usage="new System.Net.HttpWebRequest (serializationInfo, streamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Serialization is obsoleted for this type", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("Serialization is obsoleted for this type.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Serialization is obsoleted for this type.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="b203a-180">새 <see cref="T:System.Net.HttpWebRequest" /> 개체를 serialize하는 데 필요한 정보가 들어 있는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-180">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the information required to serialize the new <see cref="T:System.Net.HttpWebRequest" /> object.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="b203a-181">새 <see cref="T:System.Net.HttpWebRequest" /> 개체와 관련되어 있는 serialize된 스트림의 소스 및 대상이 들어 있는 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-181">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the source and destination of the serialized stream associated with the new <see cref="T:System.Net.HttpWebRequest" /> object.</span></span></param>
        <summary><span data-ttu-id="b203a-182"><see cref="T:System.Net.HttpWebRequest" />와 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 클래스에 지정된 인스턴스에서 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-182">Initializes a new instance of the <see cref="T:System.Net.HttpWebRequest" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.</span></span> <span data-ttu-id="b203a-183">이 생성자는 사용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-183">This constructor is obsolete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-184">Serialization을 사용 하는 경우 응용 프로그램은 완전 신뢰 모드로 실행 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-184">An application must run in full trust mode when using serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="b203a-185">네트워크 리소스에 무제한 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-185">for unrestricted access to network resources.</span></span> <span data-ttu-id="b203a-186">연결 된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="b203a-186">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="b203a-187">XML 및 SOAP Serialization</span><span class="sxs-lookup"><span data-stu-id="b203a-187">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public override void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Abort();" />
      <MemberSignature Language="F#" Value="override this.Abort : unit -&gt; unit" Usage="httpWebRequest.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b203a-188">인터넷 리소스에 대한 요청을 취소합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-188">Cancels a request to an Internet resource.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-189"><xref:System.Net.HttpWebRequest.Abort%2A> 메서드 리소스 요청을 취소 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-189">The <xref:System.Net.HttpWebRequest.Abort%2A> method cancels a request to a resource.</span></span> <span data-ttu-id="b203a-190">요청을 취소 된 후 호출을 <xref:System.Net.HttpWebRequest.GetResponse%2A>, <xref:System.Net.HttpWebRequest.BeginGetResponse%2A>, <xref:System.Net.HttpWebRequest.EndGetResponse%2A>, <xref:System.Net.HttpWebRequest.GetRequestStream%2A>, <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>, 또는 <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> 메서드를 사용 하면을 <xref:System.Net.WebException> 사용 하 여를 <xref:System.Net.WebException.Status%2A> 속성이로 설정 <xref:System.Net.WebExceptionStatus.RequestCanceled>합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-190">After a request is canceled, calling the <xref:System.Net.HttpWebRequest.GetResponse%2A>, <xref:System.Net.HttpWebRequest.BeginGetResponse%2A>, <xref:System.Net.HttpWebRequest.EndGetResponse%2A>, <xref:System.Net.HttpWebRequest.GetRequestStream%2A>, <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>, or <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> method causes a <xref:System.Net.WebException> with the <xref:System.Net.WebException.Status%2A> property set to <xref:System.Net.WebExceptionStatus.RequestCanceled>.</span></span>  
  
 <span data-ttu-id="b203a-191"><xref:System.Net.HttpWebRequest.Abort%2A> 메서드를 지정 된 콜백이 동기적으로 실행 합니다 합니다 <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> 또는 <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> 메서드 경우는 <xref:System.Net.HttpWebRequest.Abort%2A> 이러한 작업 중 하나는 처리 중인 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-191">The <xref:System.Net.HttpWebRequest.Abort%2A> method will synchronously execute the callback specified to the <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> or <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> methods if the <xref:System.Net.HttpWebRequest.Abort%2A> method is called while either of these operations are outstanding.</span></span> <span data-ttu-id="b203a-192">잠재적인 교착 상태 문제가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-192">This can lead to potential deadlock issues.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-193">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-193">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b203a-194">자세한 내용은 [네트워크 추적](https://msdn.microsoft.com/library/e993b7c3-087f-45d8-9c02-9dded936d804)합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-194">For more information, see [Network Tracing](https://msdn.microsoft.com/library/e993b7c3-087f-45d8-9c02-9dded936d804).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-195">비동기 요청의 경우 것은 자체 제한 시간 메커니즘을 구현 하는 클라이언트 응용 프로그램의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-195">In the case of asynchronous requests, it is the responsibility of the client application to implement its own time-out mechanism.</span></span> <span data-ttu-id="b203a-196">다음 코드 예제에서는이 작업을 수행 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-196">The following code example shows how to do this.</span></span>  
  
 [!code-cpp[System.Net.HttpWebRequest.BeginGetResponse#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.HttpWebRequest.BeginGetResponse/CPP/begingetresponse.cpp#1)]
 [!code-csharp[System.Net.HttpWebRequest.BeginGetResponse#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.HttpWebRequest.BeginGetResponse/CS/begingetresponse.cs#1)]
 [!code-vb[System.Net.HttpWebRequest.BeginGetResponse#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.HttpWebRequest.BeginGetResponse/VB/begingetresponse.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public string Accept { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Accept" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Accept" />
      <MemberSignature Language="VB.NET" Value="Public Property Accept As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Accept { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Accept : string with get, set" Usage="System.Net.HttpWebRequest.Accept" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-197">HTTP <see langword="Accept" /> 헤더의 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-197">Gets or sets the value of the <see langword="Accept" /> HTTP header.</span></span></summary>
        <value><span data-ttu-id="b203a-198">HTTP <see langword="Accept" /> 헤더의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-198">The value of the <see langword="Accept" /> HTTP header.</span></span> <span data-ttu-id="b203a-199">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-199">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-200">선택을 취소 합니다 `Accept` HTTP 헤더를 설정 합니다 <xref:System.Net.HttpWebRequest.Accept%2A> 속성을 `null`.</span><span class="sxs-lookup"><span data-stu-id="b203a-200">To clear the `Accept` HTTP header, set the <xref:System.Net.HttpWebRequest.Accept%2A> property to `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-201">이 속성의 값은 <xref:System.Net.WebHeaderCollection>에 저장됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-201">The value for this property is stored in <xref:System.Net.WebHeaderCollection>.</span></span> <span data-ttu-id="b203a-202">WebHeaderCollection이 설정되면 속성 값이 손실됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-202">If WebHeaderCollection is set, the property value is lost.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-203">다음 코드 예제에서는 <xref:System.Net.HttpWebRequest.Accept%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-203">The following code example sets the <xref:System.Net.HttpWebRequest.Accept%2A> property.</span></span>  
  
 [!code-cpp[HttpWebRequest_Accept#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_Accept/CPP/httpwebrequest_accept.cpp#1)]
 [!code-csharp[HttpWebRequest_Accept#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_Accept/CS/httpwebrequest_accept.cs#1)]
 [!code-vb[HttpWebRequest_Accept#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_Accept/VB/httpwebrequest_accept.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b203a-204">요청에 범위 헤더를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-204">Adds a range header to the request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-205">모든 HTTP 엔터티가 표시 되는 HTTP 메시지의 바이트 시퀀스로 바이트 범위 개념 이므로 모든 HTTP 엔터티에 대 한 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-205">Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</span></span> <span data-ttu-id="b203a-206">그러나 일부 클라이언트 및 서버에서 바이트 범위 작업을 지원 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-206">However, not all clients and servers need to support byte-range operations.</span></span>  
  
 <span data-ttu-id="b203a-207">요청에 범위 헤더 클라이언트가 요청 하려고 한다는 것만 HTTP 엔터티의 일부 지정 된 범위의 바이트를 수신 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-207">The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</span></span> <span data-ttu-id="b203a-208">서버 범위 헤더 요청을 지원할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-208">Servers are not required to support Range header requests.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (int range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(int32 range) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.AddRange(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (range As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(int range);" />
      <MemberSignature Language="F#" Value="member this.AddRange : int -&gt; unit" Usage="httpWebRequest.AddRange range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="range"><span data-ttu-id="b203a-209">범위의 시작점이나 끝점입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-209">The starting or ending point of the range.</span></span></param>
        <summary><span data-ttu-id="b203a-210">요청된 데이터의 시작이나 끝에서 특정 범위에 대해 바이트 범위 헤더를 요청에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-210">Adds a byte range header to a request for a specific range from the beginning or end of the requested data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-211"><xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> 메서드 요청 바이트 범위 헤더를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-211">The <xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> method adds a byte range header to the request.</span></span>  
  
 <span data-ttu-id="b203a-212">하는 경우 `range` 이 양수인 경우는 `range` 매개 변수 범위의 시작 지점을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-212">If `range` is positive, the `range` parameter specifies the starting point of the range.</span></span> <span data-ttu-id="b203a-213">서버에서 데이터를 보내기 시작 해야 합니다 `range` HTTP 엔터티에서 데이터의 끝에 지정 된 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-213">The server should start sending data from the `range` parameter specified to the end of the data in the HTTP entity.</span></span>  
  
 <span data-ttu-id="b203a-214">하는 경우 `range` 가 음수 이면는 `range` 매개 변수는 끝점의 범위를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-214">If `range` is negative, the `range` parameter specifies the ending point of the range.</span></span> <span data-ttu-id="b203a-215">서버에 HTTP 엔터티에서 데이터의 시작 부분에서 데이터를 보내기 시작 해야 합니다 `range` 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-215">The server should start sending data from the start of the data in the HTTP entity to the `range` parameter specified.</span></span>  
  
 <span data-ttu-id="b203a-216">모든 HTTP 엔터티가 표시 되는 HTTP 메시지의 바이트 시퀀스로 바이트 범위 개념 이므로 모든 HTTP 엔터티에 대 한 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-216">Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</span></span> <span data-ttu-id="b203a-217">그러나 일부 클라이언트 및 서버에서 바이트 범위 작업을 지원 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-217">However, not all clients and servers need to support byte-range operations.</span></span>  
  
 <span data-ttu-id="b203a-218">요청에 범위 헤더 클라이언트가 요청 하려고 한다는 것만 HTTP 엔터티의 일부 지정 된 범위의 바이트를 수신 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-218">The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</span></span> <span data-ttu-id="b203a-219">서버 범위 헤더 요청을 지원할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-219">Servers are not required to support Range header requests.</span></span>  
  
 <span data-ttu-id="b203a-220">예제 (99 바이트 위치로 시작)에서 처음 100 바이트가 전송 하도록 서버에는 다음 것을 요청 하는 HTTP 프로토콜 요청에 범위 헤더입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-220">An example of a Range header in an HTTP protocol request that requests the server send the first 100 bytes (from the start to byte position 99) would be the following:</span></span>  
  
 `Range: bytes=0-99\r\n\r\n`  
  
 <span data-ttu-id="b203a-221">예를 들어를 `range` 매개 변수-99 것입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-221">For this example, the `range` parameter would be -99.</span></span>  
  
 <span data-ttu-id="b203a-222">HTTP 서버 Accept-ranges 헤더를 사용 하 여 범위 헤더에 대 한 지원을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-222">A HTTP server indicates support for Range headers with the Accept-Ranges header.</span></span> <span data-ttu-id="b203a-223">바이트 범위를 지 원하는 서버에서 Accept-ranges 헤더의 예제는 다음과 같을 수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-223">An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</span></span>  
  
 `Accept-Ranges: bytes\r\n\r\n`  
  
 <span data-ttu-id="b203a-224">Accept-ranges 헤더를 서버에서 응답의 헤더에 수신 되지 않으면, 다음 서버 범위 헤더를 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-224">If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</span></span> <span data-ttu-id="b203a-225">범위를 지원 하지 않지만 Accept-ranges 헤더를 인식 하는 서버에서 Accept-ranges 헤더의 예제는 다음과 같을 수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-225">An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</span></span>  
  
 `Accept-Ranges: none\r\n\r\n`  
  
 <span data-ttu-id="b203a-226">전체 요청과 연관 된 HTTP 헤더만 구문 분석 되 고 속성을 통해 사용 가능 범위 요청에서 응답을 받을 때의 <xref:System.Net.HttpWebResponse> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-226">When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <xref:System.Net.HttpWebResponse> class.</span></span> <span data-ttu-id="b203a-227">각 범위와 연결 된 헤더는 응답에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-227">Headers associated with each range are returned in the response.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-228">다음 코드 예제에서는 요청에 범위 헤더를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-228">The following code example adds a range header to the request.</span></span>  
  
 [!code-cpp[System.Net.HttpWebRequest.AddRange#1](~/samples/snippets/cpp/VS_Snippets_Misc/system.net.httpwebrequest.addrange/cpp/source.cpp#1)]
 [!code-csharp[System.Net.HttpWebRequest.AddRange#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.net.httpwebrequest.addrange/cs/source.cs#1)]
 [!code-vb[System.Net.HttpWebRequest.AddRange#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.net.httpwebrequest.addrange/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b203a-229"><paramref name="rangeSpecifier" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-229"><paramref name="rangeSpecifier" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b203a-230">범위 헤더를 추가할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-230">The range header could not be added.</span></span></exception>
        <altmember cref="Overload:System.Net.HttpWebRequest.AddRange" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (long range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(int64 range) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.AddRange(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (range As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(long range);" />
      <MemberSignature Language="F#" Value="member this.AddRange : int64 -&gt; unit" Usage="httpWebRequest.AddRange range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="System.Int64" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="range"><span data-ttu-id="b203a-231">범위의 시작점이나 끝점입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-231">The starting or ending point of the range.</span></span></param>
        <summary><span data-ttu-id="b203a-232">요청된 데이터의 시작이나 끝에서 특정 범위에 대해 바이트 범위 헤더를 요청에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-232">Adds a byte range header to a request for a specific range from the beginning or end of the requested data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-233"><xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> 메서드 요청 바이트 범위 헤더를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-233">The <xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> method adds a byte range header to the request.</span></span>  
  
 <span data-ttu-id="b203a-234">하는 경우 `range` 이 양수인 경우는 `range` 매개 변수 범위의 시작 지점을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-234">If `range` is positive, the `range` parameter specifies the starting point of the range.</span></span> <span data-ttu-id="b203a-235">서버에서 데이터를 보내기 시작 해야 합니다 `range` HTTP 엔터티에서 데이터의 끝에 지정 된 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-235">The server should start sending data from the `range` parameter specified to the end of the data in the HTTP entity.</span></span>  
  
 <span data-ttu-id="b203a-236">하는 경우 `range` 가 음수 이면는 `range` 매개 변수는 끝점의 범위를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-236">If `range` is negative, the `range` parameter specifies the ending point of the range.</span></span> <span data-ttu-id="b203a-237">서버에 HTTP 엔터티에서 데이터의 시작 부분에서 데이터를 보내기 시작 해야 합니다 `range` 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-237">The server should start sending data from the start of the data in the HTTP entity to the `range` parameter specified.</span></span>  
  
 <span data-ttu-id="b203a-238">모든 HTTP 엔터티가 표시 되는 HTTP 메시지의 바이트 시퀀스로 바이트 범위 개념 이므로 모든 HTTP 엔터티에 대 한 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-238">Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</span></span> <span data-ttu-id="b203a-239">그러나 일부 클라이언트 및 서버에서 바이트 범위 작업을 지원 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-239">However, not all clients and servers need to support byte-range operations.</span></span>  
  
 <span data-ttu-id="b203a-240">요청에 범위 헤더 클라이언트가 요청 하려고 한다는 것만 HTTP 엔터티의 일부 지정 된 범위의 바이트를 수신 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-240">The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</span></span> <span data-ttu-id="b203a-241">서버 범위 헤더 요청을 지원할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-241">Servers are not required to support Range header requests.</span></span>  
  
 <span data-ttu-id="b203a-242">예제 (99 바이트 위치로 시작)에서 처음 100 바이트가 전송 하도록 서버에는 다음 것을 요청 하는 HTTP 프로토콜 요청에 범위 헤더입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-242">An example of a Range header in an HTTP protocol request that requests the server send the first 100 bytes (from the start to byte position 99) would be the following:</span></span>  
  
 `Range: bytes=0-99\r\n\r\n`  
  
 <span data-ttu-id="b203a-243">예를 들어를 `range` 매개 변수-99 것입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-243">For this example, the `range` parameter would be -99.</span></span>  
  
 <span data-ttu-id="b203a-244">HTTP 서버 Accept-ranges 헤더를 사용 하 여 범위 헤더에 대 한 지원을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-244">A HTTP server indicates support for Range headers with the Accept-Ranges header.</span></span> <span data-ttu-id="b203a-245">바이트 범위를 지 원하는 서버에서 Accept-ranges 헤더의 예제는 다음과 같을 수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-245">An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</span></span>  
  
 `Accept-Ranges: bytes\r\n\r\n`  
  
 <span data-ttu-id="b203a-246">Accept-ranges 헤더를 서버에서 응답의 헤더에 수신 되지 않으면, 다음 서버 범위 헤더를 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-246">If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</span></span> <span data-ttu-id="b203a-247">범위를 지원 하지 않지만 Accept-ranges 헤더를 인식 하는 서버에서 Accept-ranges 헤더의 예제는 다음과 같을 수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-247">An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</span></span>  
  
 `Accept-Ranges: none\r\n\r\n`  
  
 <span data-ttu-id="b203a-248">전체 요청과 연관 된 HTTP 헤더만 구문 분석 되 고 속성을 통해 사용 가능 범위 요청에서 응답을 받을 때의 <xref:System.Net.HttpWebResponse> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-248">When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <xref:System.Net.HttpWebResponse> class.</span></span> <span data-ttu-id="b203a-249">각 범위와 연결 된 헤더는 응답에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-249">Headers associated with each range are returned in the response.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b203a-250"><paramref name="rangeSpecifier" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-250"><paramref name="rangeSpecifier" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b203a-251">범위 헤더를 추가할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-251">The range header could not be added.</span></span></exception>
        <altmember cref="Overload:System.Net.HttpWebRequest.AddRange" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (int from, int to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(int32 from, int32 to) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (from As Integer, to As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(int from, int to);" />
      <MemberSignature Language="F#" Value="member this.AddRange : int * int -&gt; unit" Usage="httpWebRequest.AddRange (from, to)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="to" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="from"><span data-ttu-id="b203a-252">데이터를 보내기 시작하는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-252">The position at which to start sending data.</span></span></param>
        <param name="to"><span data-ttu-id="b203a-253">데이터 보내기를 중지하는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-253">The position at which to stop sending data.</span></span></param>
        <summary><span data-ttu-id="b203a-254">지정된 범위에 대해 요청에 바이트 범위 헤더를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-254">Adds a byte range header to the request for a specified range.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-255"><xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> 메서드 요청 바이트 범위 헤더를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-255">The <xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> method adds a byte range header to the request.</span></span>  
  
 <span data-ttu-id="b203a-256">모든 HTTP 엔터티가 표시 되는 HTTP 메시지의 바이트 시퀀스로 바이트 범위 개념 이므로 모든 HTTP 엔터티에 대 한 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-256">Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</span></span> <span data-ttu-id="b203a-257">그러나 일부 클라이언트 및 서버에서 바이트 범위 작업을 지원 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-257">However, not all clients and servers need to support byte-range operations.</span></span>  
  
 <span data-ttu-id="b203a-258">요청에 범위 헤더 클라이언트가 요청 하려고 한다는 것만 HTTP 엔터티의 일부 지정 된 범위의 바이트를 수신 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-258">The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</span></span> <span data-ttu-id="b203a-259">서버 범위 헤더 요청을 지원할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-259">Servers are not required to support Range header requests.</span></span>  
  
 <span data-ttu-id="b203a-260">처음 100 바이트가 요청 될 HTTP 프로토콜 요청에 범위 헤더의 예는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-260">An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</span></span>  
  
 `Range: bytes=0-99\r\n\r\n`  
  
 <span data-ttu-id="b203a-261">예를 들어 합니다 `from` 매개 변수는 0으로 지정 하며 `to` 매개 변수는 99로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-261">For this example, the `from` parameter would be specified as 0 and the `to` parameter would be specified as 99.</span></span> <span data-ttu-id="b203a-262">자동 범위 지정 자가이 메서드에서 "bytes"으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-262">The range specifier is automatically set as "bytes" by this method.</span></span>  
  
 <span data-ttu-id="b203a-263">HTTP 서버 Accept-ranges 헤더를 사용 하 여 범위 헤더에 대 한 지원을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-263">A HTTP server indicates support for Range headers with the Accept-Ranges header.</span></span> <span data-ttu-id="b203a-264">바이트 범위를 지 원하는 서버에서 Accept-ranges 헤더의 예제는 다음과 같을 수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-264">An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</span></span>  
  
 `Accept-Ranges: bytes\r\n\r\n`  
  
 <span data-ttu-id="b203a-265">Accept-ranges 헤더를 서버에서 응답의 헤더에 수신 되지 않으면, 다음 서버 범위 헤더를 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-265">If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</span></span> <span data-ttu-id="b203a-266">범위를 지원 하지 않지만 Accept-ranges 헤더를 인식 하는 서버에서 Accept-ranges 헤더의 예제는 다음과 같을 수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-266">An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</span></span>  
  
 `Accept-Ranges: none\r\n\r\n`  
  
 <span data-ttu-id="b203a-267">전체 요청과 연관 된 HTTP 헤더만 구문 분석 되 고 속성을 통해 사용 가능 범위 요청에서 응답을 받을 때의 <xref:System.Net.HttpWebResponse> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-267">When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <xref:System.Net.HttpWebResponse> class.</span></span> <span data-ttu-id="b203a-268">각 범위와 연결 된 헤더는 응답에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-268">Headers associated with each range are returned in the response.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-269">다음 코드 예제에서는 요청에 범위 헤더를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-269">The following code example adds a range header to the request.</span></span>  
  
 [!code-cpp[System.Net.HttpWebRequest.AddRange2#1](~/samples/snippets/cpp/VS_Snippets_Misc/system.net.httpwebrequest.addrange2/cpp/source.cpp#1)]
 [!code-csharp[System.Net.HttpWebRequest.AddRange2#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.net.httpwebrequest.addrange2/cs/source.cs#1)]
 [!code-vb[System.Net.HttpWebRequest.AddRange2#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.net.httpwebrequest.addrange2/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b203a-270"><paramref name="rangeSpecifier" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-270"><paramref name="rangeSpecifier" /> is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b203a-271"><paramref name="from" />이 <paramref name="to" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-271"><paramref name="from" /> is greater than <paramref name="to" /></span></span>  
  
<span data-ttu-id="b203a-272">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-272">-or-</span></span> 
 <span data-ttu-id="b203a-273"><paramref name="from" /> 또는 <paramref name="to" />가 0 미만입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-273"><paramref name="from" /> or <paramref name="to" /> is less than 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b203a-274">범위 헤더를 추가할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-274">The range header could not be added.</span></span></exception>
        <altmember cref="Overload:System.Net.HttpWebRequest.AddRange" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (long from, long to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(int64 from, int64 to) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (from As Long, to As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(long from, long to);" />
      <MemberSignature Language="F#" Value="member this.AddRange : int64 * int64 -&gt; unit" Usage="httpWebRequest.AddRange (from, to)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.Int64" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="to" Type="System.Int64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="from"><span data-ttu-id="b203a-275">데이터를 보내기 시작하는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-275">The position at which to start sending data.</span></span></param>
        <param name="to"><span data-ttu-id="b203a-276">데이터 보내기를 중지하는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-276">The position at which to stop sending data.</span></span></param>
        <summary><span data-ttu-id="b203a-277">지정된 범위에 대해 요청에 바이트 범위 헤더를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-277">Adds a byte range header to the request for a specified range.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-278"><xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> 메서드 요청 바이트 범위 헤더를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-278">The <xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> method adds a byte range header to the request.</span></span>  
  
 <span data-ttu-id="b203a-279">모든 HTTP 엔터티가 표시 되는 HTTP 메시지의 바이트 시퀀스로 바이트 범위 개념 이므로 모든 HTTP 엔터티에 대 한 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-279">Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</span></span> <span data-ttu-id="b203a-280">그러나 일부 클라이언트 및 서버에서 바이트 범위 작업을 지원 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-280">However, not all clients and servers need to support byte-range operations.</span></span>  
  
 <span data-ttu-id="b203a-281">요청에 범위 헤더 클라이언트가 요청 하려고 한다는 것만 HTTP 엔터티의 일부 지정 된 범위의 바이트를 수신 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-281">The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</span></span> <span data-ttu-id="b203a-282">서버 범위 헤더 요청을 지원할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-282">Servers are not required to support Range header requests.</span></span>  
  
 <span data-ttu-id="b203a-283">처음 100 바이트가 요청 될 HTTP 프로토콜 요청에 범위 헤더의 예는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-283">An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</span></span>  
  
 `Range: bytes=0-99\r\n\r\n`  
  
 <span data-ttu-id="b203a-284">예를 들어 합니다 `from` 매개 변수는 0으로 지정 하며 `to` 매개 변수는 99로 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-284">For this example, the `from` parameter would be specified as 0 and the `to` parameter would be specified as 99.</span></span> <span data-ttu-id="b203a-285">자동 범위 지정 자가이 메서드에서 "bytes"으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-285">The range specifier is automatically set as "bytes" by this method.</span></span>  
  
 <span data-ttu-id="b203a-286">HTTP 서버 Accept-ranges 헤더를 사용 하 여 범위 헤더에 대 한 지원을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-286">A HTTP server indicates support for Range headers with the Accept-Ranges header.</span></span> <span data-ttu-id="b203a-287">바이트 범위를 지 원하는 서버에서 Accept-ranges 헤더의 예제는 다음과 같을 수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-287">An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</span></span>  
  
 `Accept-Ranges: bytes\r\n\r\n`  
  
 <span data-ttu-id="b203a-288">Accept-ranges 헤더를 서버에서 응답의 헤더에 수신 되지 않으면, 다음 서버 범위 헤더를 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-288">If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</span></span> <span data-ttu-id="b203a-289">범위를 지원 하지 않지만 Accept-ranges 헤더를 인식 하는 서버에서 Accept-ranges 헤더의 예제는 다음과 같을 수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-289">An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</span></span>  
  
 `Accept-Ranges: none\r\n\r\n`  
  
 <span data-ttu-id="b203a-290">전체 요청과 연관 된 HTTP 헤더만 구문 분석 되 고 속성을 통해 사용 가능 범위 요청에서 응답을 받을 때의 <xref:System.Net.HttpWebResponse> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-290">When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <xref:System.Net.HttpWebResponse> class.</span></span> <span data-ttu-id="b203a-291">각 범위와 연결 된 헤더는 응답에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-291">Headers associated with each range are returned in the response.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b203a-292"><paramref name="rangeSpecifier" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-292"><paramref name="rangeSpecifier" /> is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b203a-293"><paramref name="from" />이 <paramref name="to" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-293"><paramref name="from" /> is greater than <paramref name="to" /></span></span>  
  
<span data-ttu-id="b203a-294">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-294">-or-</span></span> 
 <span data-ttu-id="b203a-295"><paramref name="from" /> 또는 <paramref name="to" />가 0 미만입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-295"><paramref name="from" /> or <paramref name="to" /> is less than 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b203a-296">범위 헤더를 추가할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-296">The range header could not be added.</span></span></exception>
        <altmember cref="Overload:System.Net.HttpWebRequest.AddRange" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (string rangeSpecifier, int range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(string rangeSpecifier, int32 range) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (rangeSpecifier As String, range As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::String ^ rangeSpecifier, int range);" />
      <MemberSignature Language="F#" Value="member this.AddRange : string * int -&gt; unit" Usage="httpWebRequest.AddRange (rangeSpecifier, range)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rangeSpecifier" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="range" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="rangeSpecifier"><span data-ttu-id="b203a-297">범위에 대한 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-297">The description of the range.</span></span></param>
        <param name="range"><span data-ttu-id="b203a-298">범위의 시작점이나 끝점입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-298">The starting or ending point of the range.</span></span></param>
        <summary><span data-ttu-id="b203a-299">요청된 데이터의 시작이나 끝에서 특정 범위에 대한 요청에 Range 헤더를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-299">Adds a Range header to a request for a specific range from the beginning or end of the requested data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-300"><xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> 메서드 요청에 범위 헤더를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-300">The <xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> method adds a Range header to the request.</span></span>  
  
 <span data-ttu-id="b203a-301">하는 경우 `range` 이 양수인 경우는 `range` 매개 변수 범위의 시작 지점을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-301">If `range` is positive, the `range` parameter specifies the starting point of the range.</span></span> <span data-ttu-id="b203a-302">서버에서 데이터를 보내기 시작 해야 합니다 `range` HTTP 엔터티에서 데이터의 끝에 지정 된 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-302">The server should start sending data from the `range` parameter specified to the end of the data in the HTTP entity.</span></span>  
  
 <span data-ttu-id="b203a-303">하는 경우 `range` 가 음수 이면는 `range` 매개 변수는 끝점의 범위를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-303">If `range` is negative, the `range` parameter specifies the ending point of the range.</span></span> <span data-ttu-id="b203a-304">서버에 HTTP 엔터티에서 데이터의 시작 부분에서 데이터를 보내기 시작 해야 합니다 `range` 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-304">The server should start sending data from the start of the data in the HTTP entity to the `range` parameter specified.</span></span>  
  
 <span data-ttu-id="b203a-305">모든 HTTP 엔터티가 표시 되는 HTTP 메시지의 바이트 시퀀스로 바이트 범위 개념 이므로 모든 HTTP 엔터티에 대 한 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-305">Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</span></span> <span data-ttu-id="b203a-306">그러나 일부 클라이언트 및 서버에서 바이트 범위 작업을 지원 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-306">However, not all clients and servers need to support byte-range operations.</span></span>  
  
 <span data-ttu-id="b203a-307">요청에 범위 헤더 클라이언트가 요청 하려고 한다는 것만 HTTP 엔터티의 일부 지정 된 범위의 바이트를 수신 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-307">The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</span></span> <span data-ttu-id="b203a-308">서버 범위 헤더 요청을 지원할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-308">Servers are not required to support Range header requests.</span></span>  
  
 <span data-ttu-id="b203a-309">`rangeSpecifier` 매개 변수는 일반적으로 지정 될 "bytes", 대부분의 HTTP 서버에서 인식 되는 유일한 범위 지정자 이기 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-309">The `rangeSpecifier` parameter would normally be specified as a "bytes", since this is the only range specifier recognized by most HTTP servers.</span></span> <span data-ttu-id="b203a-310">설정 된 `rangeSpecifier` 매개 변수를 다른 문자열을 바이트 (ietf RFC 2616에 정의 된 바이트 범위 지정자) 이외의 사용자 지정 범위 지정자 지원할 수 있게 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-310">Setting the `rangeSpecifier` parameter to some other string allows support for custom range specifiers other than bytes (the byte-range specifier defined in RFC 2616 by the IETF).</span></span>  
  
 <span data-ttu-id="b203a-311">처음 100 바이트가 요청 될 HTTP 프로토콜 요청에 범위 헤더의 예는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-311">An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</span></span>  
  
 `Range: bytes=-99\r\n\r\n`  
  
 <span data-ttu-id="b203a-312">예를 들어 합니다 `rangeSpecifier` 매개 변수는 "bytes"로 지정 됩니다 및 `range` 매개 변수-99 것입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-312">For this example, the `rangeSpecifier` parameter would be specified as "bytes" and the `range` parameter would be -99.</span></span>  
  
 <span data-ttu-id="b203a-313">HTTP 서버 응답에서 Accept-ranges 헤더를 사용 하 여 범위 헤더에 대 한 지원을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-313">A HTTP server indicates support for Range headers with the Accept-Ranges header in the response.</span></span> <span data-ttu-id="b203a-314">바이트 범위를 지 원하는 서버에서 Accept-ranges 헤더의 예제는 다음과 같을 수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-314">An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</span></span>  
  
 `Accept-Ranges: bytes\r\n\r\n`  
  
 <span data-ttu-id="b203a-315">Accept-ranges 헤더를 서버에서 응답의 헤더에 수신 되지 않으면, 다음 서버 범위 헤더를 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-315">If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</span></span> <span data-ttu-id="b203a-316">범위를 지원 하지 않지만 Accept-ranges 헤더를 인식 하는 서버에서 Accept-ranges 헤더의 예제는 다음과 같을 수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-316">An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</span></span>  
  
 `Accept-Ranges: none\r\n\r\n`  
  
 <span data-ttu-id="b203a-317">전체 요청과 연관 된 HTTP 헤더만 구문 분석 되 고 속성을 통해 사용 가능 범위 요청에서 응답을 받을 때의 <xref:System.Net.HttpWebResponse> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-317">When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <xref:System.Net.HttpWebResponse> class.</span></span> <span data-ttu-id="b203a-318">각 범위와 연결 된 헤더는 응답에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-318">Headers associated with each range are returned in the response.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b203a-319"><paramref name="rangeSpecifier" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-319"><paramref name="rangeSpecifier" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b203a-320"><paramref name="rangeSpecifier" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-320"><paramref name="rangeSpecifier" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b203a-321">범위 헤더를 추가할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-321">The range header could not be added.</span></span></exception>
        <altmember cref="Overload:System.Net.HttpWebRequest.AddRange" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (string rangeSpecifier, long range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(string rangeSpecifier, int64 range) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (rangeSpecifier As String, range As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::String ^ rangeSpecifier, long range);" />
      <MemberSignature Language="F#" Value="member this.AddRange : string * int64 -&gt; unit" Usage="httpWebRequest.AddRange (rangeSpecifier, range)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rangeSpecifier" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="range" Type="System.Int64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="rangeSpecifier"><span data-ttu-id="b203a-322">범위에 대한 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-322">The description of the range.</span></span></param>
        <param name="range"><span data-ttu-id="b203a-323">범위의 시작점이나 끝점입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-323">The starting or ending point of the range.</span></span></param>
        <summary><span data-ttu-id="b203a-324">요청된 데이터의 시작이나 끝에서 특정 범위에 대한 요청에 Range 헤더를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-324">Adds a Range header to a request for a specific range from the beginning or end of the requested data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-325"><xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> 메서드 요청에 범위 헤더를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-325">The <xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> method adds a Range header to the request.</span></span>  
  
 <span data-ttu-id="b203a-326">하는 경우 `range` 이 양수인 경우는 `range` 매개 변수 범위의 시작 지점을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-326">If `range` is positive, the `range` parameter specifies the starting point of the range.</span></span> <span data-ttu-id="b203a-327">서버에서 데이터를 보내기 시작 해야 합니다 `range` HTTP 엔터티에서 데이터의 끝에 지정 된 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-327">The server should start sending data from the `range` parameter specified to the end of the data in the HTTP entity.</span></span>  
  
 <span data-ttu-id="b203a-328">하는 경우 `range` 가 음수 이면는 `range` 매개 변수는 끝점의 범위를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-328">If `range` is negative, the `range` parameter specifies the ending point of the range.</span></span> <span data-ttu-id="b203a-329">서버에 HTTP 엔터티에서 데이터의 시작 부분에서 데이터를 보내기 시작 해야 합니다 `range` 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-329">The server should start sending data from the start of the data in the HTTP entity to the `range` parameter specified.</span></span>  
  
 <span data-ttu-id="b203a-330">모든 HTTP 엔터티가 표시 되는 HTTP 메시지의 바이트 시퀀스로 바이트 범위 개념 이므로 모든 HTTP 엔터티에 대 한 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-330">Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</span></span> <span data-ttu-id="b203a-331">그러나 일부 클라이언트 및 서버에서 바이트 범위 작업을 지원 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-331">However, not all clients and servers need to support byte-range operations.</span></span>  
  
 <span data-ttu-id="b203a-332">요청에 범위 헤더 클라이언트가 요청 하려고 한다는 것만 HTTP 엔터티의 일부 지정 된 범위의 바이트를 수신 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-332">The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</span></span> <span data-ttu-id="b203a-333">서버 범위 헤더 요청을 지원할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-333">Servers are not required to support Range header requests.</span></span>  
  
 <span data-ttu-id="b203a-334">`rangeSpecifier` 매개 변수는 일반적으로 지정 될 "bytes", 대부분의 HTTP 서버에서 인식 되는 유일한 범위 지정자 이기 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-334">The `rangeSpecifier` parameter would normally be specified as a "bytes", since this is the only range specifier recognized by most HTTP servers.</span></span> <span data-ttu-id="b203a-335">설정 된 `rangeSpecifier` 매개 변수를 다른 문자열을 바이트 (ietf RFC 2616에 정의 된 바이트 범위 지정자) 이외의 사용자 지정 범위 지정자 지원할 수 있게 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-335">Setting the `rangeSpecifier` parameter to some other string allows support for custom range specifiers other than bytes (the byte-range specifier defined in RFC 2616 by the IETF).</span></span>  
  
 <span data-ttu-id="b203a-336">처음 100 바이트가 요청 될 HTTP 프로토콜 요청에 범위 헤더의 예는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-336">An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</span></span>  
  
 `Range: bytes=-99\r\n\r\n`  
  
 <span data-ttu-id="b203a-337">예를 들어 합니다 `rangeSpecifier` 매개 변수는 "bytes"로 지정 됩니다 및 `range` 매개 변수-99 것입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-337">For this example, the `rangeSpecifier` parameter would be specified as "bytes" and the `range` parameter would be -99.</span></span>  
  
 <span data-ttu-id="b203a-338">HTTP 서버 응답에서 Accept-ranges 헤더를 사용 하 여 범위 헤더에 대 한 지원을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-338">A HTTP server indicates support for Range headers with the Accept-Ranges header in the response.</span></span> <span data-ttu-id="b203a-339">바이트 범위를 지 원하는 서버에서 Accept-ranges 헤더의 예제는 다음과 같을 수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-339">An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</span></span>  
  
 `Accept-Ranges: bytes\r\n\r\n`  
  
 <span data-ttu-id="b203a-340">Accept-ranges 헤더를 서버에서 응답의 헤더에 수신 되지 않으면, 다음 서버 범위 헤더를 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-340">If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</span></span> <span data-ttu-id="b203a-341">범위를 지원 하지 않지만 Accept-ranges 헤더를 인식 하는 서버에서 Accept-ranges 헤더의 예제는 다음과 같을 수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-341">An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</span></span>  
  
 `Accept-Ranges: none\r\n\r\n`  
  
 <span data-ttu-id="b203a-342">전체 요청과 연관 된 HTTP 헤더만 구문 분석 되 고 속성을 통해 사용 가능 범위 요청에서 응답을 받을 때의 <xref:System.Net.HttpWebResponse> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-342">When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <xref:System.Net.HttpWebResponse> class.</span></span> <span data-ttu-id="b203a-343">각 범위와 연결 된 헤더는 응답에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-343">Headers associated with each range are returned in the response.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b203a-344"><paramref name="rangeSpecifier" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-344"><paramref name="rangeSpecifier" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b203a-345"><paramref name="rangeSpecifier" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-345"><paramref name="rangeSpecifier" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b203a-346">범위 헤더를 추가할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-346">The range header could not be added.</span></span></exception>
        <altmember cref="Overload:System.Net.HttpWebRequest.AddRange" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (string rangeSpecifier, int from, int to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(string rangeSpecifier, int32 from, int32 to) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (rangeSpecifier As String, from As Integer, to As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::String ^ rangeSpecifier, int from, int to);" />
      <MemberSignature Language="F#" Value="member this.AddRange : string * int * int -&gt; unit" Usage="httpWebRequest.AddRange (rangeSpecifier, from, to)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rangeSpecifier" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="from" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="to" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="rangeSpecifier"><span data-ttu-id="b203a-347">범위에 대한 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-347">The description of the range.</span></span></param>
        <param name="from"><span data-ttu-id="b203a-348">데이터를 보내기 시작하는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-348">The position at which to start sending data.</span></span></param>
        <param name="to"><span data-ttu-id="b203a-349">데이터 보내기를 중지하는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-349">The position at which to stop sending data.</span></span></param>
        <summary><span data-ttu-id="b203a-350">지정된 범위에 대해 요청에 범위 헤더를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-350">Adds a range header to a request for a specified range.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-351"><xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> 메서드 요청에 범위 헤더를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-351">The <xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> method adds a Range header to the request.</span></span>  
  
 <span data-ttu-id="b203a-352">모든 HTTP 엔터티가 표시 되는 HTTP 메시지의 바이트 시퀀스로 바이트 범위 개념 이므로 모든 HTTP 엔터티에 대 한 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-352">Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</span></span> <span data-ttu-id="b203a-353">그러나 일부 클라이언트 및 서버에서 바이트 범위 작업을 지원 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-353">However, not all clients and servers need to support byte-range operations.</span></span>  
  
 <span data-ttu-id="b203a-354">요청에 범위 헤더 클라이언트가 요청 하려고 한다는 것만 HTTP 엔터티의 일부 지정 된 범위의 바이트를 수신 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-354">The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</span></span> <span data-ttu-id="b203a-355">서버 범위 헤더 요청을 지원할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-355">Servers are not required to support Range header requests.</span></span>  
  
 <span data-ttu-id="b203a-356">`rangeSpecifier` 매개 변수는 일반적으로 지정 될 "bytes", 대부분의 HTTP 서버에서 인식 되는 유일한 범위 지정자 이기 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-356">The `rangeSpecifier` parameter would normally be specified as a "bytes", since this is the only range specifier recognized by most HTTP servers.</span></span> <span data-ttu-id="b203a-357">설정 된 `rangeSpecifier` 매개 변수를 다른 문자열을 바이트 (ietf RFC 2616에 정의 된 바이트 범위 지정자) 이외의 사용자 지정 범위 지정자 지원할 수 있게 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-357">Setting the `rangeSpecifier` parameter to some other string allows support for custom range specifiers other than bytes (the byte-range specifier defined in RFC 2616 by the IETF).</span></span>  
  
 <span data-ttu-id="b203a-358">처음 100 바이트가 요청 될 HTTP 프로토콜 요청에 범위 헤더의 예는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-358">An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</span></span>  
  
 `Range: bytes=0-99\r\n\r\n`  
  
 <span data-ttu-id="b203a-359">예를 들어 합니다 `rangeSpecifier` 매개 변수를 "bytes"으로 지정 됩니다 합니다 `from` 매개 변수를 0이 됩니다 및 `to` 매개 변수는 99 것입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-359">For this example, the `rangeSpecifier` parameter would be specified as a "bytes", the `from` parameter would be 0, and the `to` parameter would be 99.</span></span>  
  
 <span data-ttu-id="b203a-360">HTTP 서버 응답에서 Accept-ranges 헤더를 사용 하 여 범위 헤더에 대 한 지원을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-360">A HTTP server indicates support for Range headers with the Accept-Ranges header in the response.</span></span> <span data-ttu-id="b203a-361">바이트 범위를 지 원하는 서버에서 Accept-ranges 헤더의 예제는 다음과 같을 수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-361">An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</span></span>  
  
 `Accept-Ranges: bytes\r\n\r\n`  
  
 <span data-ttu-id="b203a-362">Accept-ranges 헤더에 지정 된 문자열은에 의해 지정 되는 범위 지정자는 `rangeSpecifier` 이 메서드에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-362">The string specified in the Accept-Ranges header is the range-specifier that would be by specified in the `rangeSpecifier` parameter for this method.</span></span>  
  
 <span data-ttu-id="b203a-363">Accept-ranges 헤더를 서버에서 응답의 헤더에 수신 되지 않으면, 다음 서버 범위 헤더를 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-363">If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</span></span> <span data-ttu-id="b203a-364">범위를 지원 하지 않지만 Accept-ranges 헤더를 인식 하는 서버에서 Accept-ranges 헤더의 예제는 다음과 같을 수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-364">An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</span></span>  
  
 `Accept-Ranges: none\r\n\r\n`  
  
 <span data-ttu-id="b203a-365">전체 요청과 연관 된 HTTP 헤더만 구문 분석 되 고 속성을 통해 사용 가능 범위 요청에서 응답을 받을 때의 <xref:System.Net.HttpWebResponse> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-365">When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <xref:System.Net.HttpWebResponse> class.</span></span> <span data-ttu-id="b203a-366">각 범위와 연결 된 헤더는 응답에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-366">Headers associated with each range are returned in the response.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b203a-367"><paramref name="rangeSpecifier" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-367"><paramref name="rangeSpecifier" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b203a-368"><paramref name="from" />이 <paramref name="to" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-368"><paramref name="from" /> is greater than <paramref name="to" /></span></span>  
  
<span data-ttu-id="b203a-369">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-369">-or-</span></span> 
 <span data-ttu-id="b203a-370"><paramref name="from" /> 또는 <paramref name="to" />가 0 미만입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-370"><paramref name="from" /> or <paramref name="to" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b203a-371"><paramref name="rangeSpecifier" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-371"><paramref name="rangeSpecifier" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b203a-372">범위 헤더를 추가할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-372">The range header could not be added.</span></span></exception>
        <altmember cref="Overload:System.Net.HttpWebRequest.AddRange" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (string rangeSpecifier, long from, long to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(string rangeSpecifier, int64 from, int64 to) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (rangeSpecifier As String, from As Long, to As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::String ^ rangeSpecifier, long from, long to);" />
      <MemberSignature Language="F#" Value="member this.AddRange : string * int64 * int64 -&gt; unit" Usage="httpWebRequest.AddRange (rangeSpecifier, from, to)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rangeSpecifier" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="from" Type="System.Int64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="to" Type="System.Int64" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="rangeSpecifier"><span data-ttu-id="b203a-373">범위에 대한 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-373">The description of the range.</span></span></param>
        <param name="from"><span data-ttu-id="b203a-374">데이터를 보내기 시작하는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-374">The position at which to start sending data.</span></span></param>
        <param name="to"><span data-ttu-id="b203a-375">데이터 보내기를 중지하는 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-375">The position at which to stop sending data.</span></span></param>
        <summary><span data-ttu-id="b203a-376">지정된 범위에 대해 요청에 범위 헤더를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-376">Adds a range header to a request for a specified range.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-377"><xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> 메서드 요청에 범위 헤더를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-377">The <xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> method adds a Range header to the request.</span></span>  
  
 <span data-ttu-id="b203a-378">모든 HTTP 엔터티가 표시 되는 HTTP 메시지의 바이트 시퀀스로 바이트 범위 개념 이므로 모든 HTTP 엔터티에 대 한 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-378">Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</span></span> <span data-ttu-id="b203a-379">그러나 일부 클라이언트 및 서버에서 바이트 범위 작업을 지원 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-379">However, not all clients and servers need to support byte-range operations.</span></span>  
  
 <span data-ttu-id="b203a-380">요청에 범위 헤더 클라이언트가 요청 하려고 한다는 것만 HTTP 엔터티의 일부 지정 된 범위의 바이트를 수신 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-380">The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</span></span> <span data-ttu-id="b203a-381">서버 범위 헤더 요청을 지원할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-381">Servers are not required to support Range header requests.</span></span>  
  
 <span data-ttu-id="b203a-382">`rangeSpecifier` 매개 변수는 일반적으로 지정 될 "bytes", 대부분의 HTTP 서버에서 인식 되는 유일한 범위 지정자 이기 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-382">The `rangeSpecifier` parameter would normally be specified as a "bytes", since this is the only range specifier recognized by most HTTP servers.</span></span> <span data-ttu-id="b203a-383">설정 된 `rangeSpecifier` 매개 변수를 다른 문자열을 바이트 (ietf RFC 2616에 정의 된 바이트 범위 지정자) 이외의 사용자 지정 범위 지정자 지원할 수 있게 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-383">Setting the `rangeSpecifier` parameter to some other string allows support for custom range specifiers other than bytes (the byte-range specifier defined in RFC 2616 by the IETF).</span></span>  
  
 <span data-ttu-id="b203a-384">처음 100 바이트가 요청 될 HTTP 프로토콜 요청에 범위 헤더의 예는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-384">An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</span></span>  
  
 `Range: bytes=0-99\r\n\r\n`  
  
 <span data-ttu-id="b203a-385">예를 들어 합니다 `rangeSpecifier` 매개 변수를 "bytes"으로 지정 됩니다 합니다 `from` 매개 변수를 0이 됩니다 및 `to` 매개 변수는 99 것입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-385">For this example, the `rangeSpecifier` parameter would be specified as a "bytes", the `from` parameter would be 0, and the `to` parameter would be 99.</span></span>  
  
 <span data-ttu-id="b203a-386">HTTP 서버 응답에서 Accept-ranges 헤더를 사용 하 여 범위 헤더에 대 한 지원을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-386">A HTTP server indicates support for Range headers with the Accept-Ranges header in the response.</span></span> <span data-ttu-id="b203a-387">바이트 범위를 지 원하는 서버에서 Accept-ranges 헤더의 예제는 다음과 같을 수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-387">An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</span></span>  
  
 `Accept-Ranges: bytes\r\n\r\n`  
  
 <span data-ttu-id="b203a-388">Accept-ranges 헤더에 지정 된 문자열은에 의해 지정 되는 범위 지정자는 `rangeSpecifier` 이 메서드에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-388">The string specified in the Accept-Ranges header is the range-specifier that would be by specified in the `rangeSpecifier` parameter for this method.</span></span>  
  
 <span data-ttu-id="b203a-389">Accept-ranges 헤더를 서버에서 응답의 헤더에 수신 되지 않으면, 다음 서버 범위 헤더를 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-389">If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</span></span> <span data-ttu-id="b203a-390">범위를 지원 하지 않지만 Accept-ranges 헤더를 인식 하는 서버에서 Accept-ranges 헤더의 예제는 다음과 같을 수 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-390">An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</span></span>  
  
 `Accept-Ranges: none\r\n\r\n`  
  
 <span data-ttu-id="b203a-391">전체 요청과 연관 된 HTTP 헤더만 구문 분석 되 고 속성을 통해 사용 가능 범위 요청에서 응답을 받을 때의 <xref:System.Net.HttpWebResponse> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-391">When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <xref:System.Net.HttpWebResponse> class.</span></span> <span data-ttu-id="b203a-392">각 범위와 연결 된 헤더는 응답에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-392">Headers associated with each range are returned in the response.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b203a-393"><paramref name="rangeSpecifier" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-393"><paramref name="rangeSpecifier" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b203a-394"><paramref name="from" />이 <paramref name="to" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-394"><paramref name="from" /> is greater than <paramref name="to" /></span></span>  
  
<span data-ttu-id="b203a-395">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-395">-or-</span></span> 
 <span data-ttu-id="b203a-396"><paramref name="from" /> 또는 <paramref name="to" />가 0 미만입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-396"><paramref name="from" /> or <paramref name="to" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b203a-397"><paramref name="rangeSpecifier" />이 잘못되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-397"><paramref name="rangeSpecifier" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b203a-398">범위 헤더를 추가할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-398">The range header could not be added.</span></span></exception>
        <altmember cref="Overload:System.Net.HttpWebRequest.AddRange" />
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public Uri Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Address { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Address : Uri" Usage="System.Net.HttpWebRequest.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-399">요청에 실제로 응답하는 인터넷 리소스의 URI(Uniform Resource Identifier)를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-399">Gets the Uniform Resource Identifier (URI) of the Internet resource that actually responds to the request.</span></span></summary>
        <value><span data-ttu-id="b203a-400">요청에 실제로 응답하는 인터넷 리소스를 식별하는 <see cref="T:System.Uri" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-400">A <see cref="T:System.Uri" /> that identifies the Internet resource that actually responds to the request.</span></span> <span data-ttu-id="b203a-401">기본값은 요청을 초기화하기 위해 <see cref="M:System.Net.WebRequest.Create(System.String)" /> 메서드가 사용한 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-401">The default is the URI used by the <see cref="M:System.Net.WebRequest.Create(System.String)" /> method to initialize the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-402"><xref:System.Net.HttpWebRequest.Address%2A> 속성을 요청 하는 동안 발생 하는 모든 리디렉션이 완료 된 후 URI로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-402">The <xref:System.Net.HttpWebRequest.Address%2A> property is set to the URI after any redirections that happen during the request are complete.</span></span>  
  
 <span data-ttu-id="b203a-403">원래 요청의 URI에 유지 되는 <xref:System.Net.HttpWebRequest.RequestUri%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-403">The URI of the original request is kept in the <xref:System.Net.HttpWebRequest.RequestUri%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-404">다음 코드 예제에서는 확인 하는 <xref:System.Net.HttpWebRequest> 개체 `req` 이 요청을 다른 위치로 리디렉션되고의 값을 설정 합니다 `hasChanged` 변수를 `true` 요청이 리디렉션된; 경우이 고 그렇지 `hasChanged`로 설정 된 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-404">The following code example checks to see if the <xref:System.Net.HttpWebRequest> object `req` was redirected to another location to fulfill the request, and sets the value of the `hasChanged` variable to `true` if the request was redirected; otherwise `hasChanged` is set to `false`.</span></span>  
  
 [!code-cpp[Classic HttpWebRequest.RequestUri Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpWebRequest.RequestUri Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpWebRequest.RequestUri Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpWebRequest.RequestUri Example/CS/source.cs#1)]
 [!code-vb[Classic HttpWebRequest.RequestUri Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpWebRequest.RequestUri Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowAutoRedirect">
      <MemberSignature Language="C#" Value="public virtual bool AllowAutoRedirect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowAutoRedirect" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.AllowAutoRedirect" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowAutoRedirect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowAutoRedirect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowAutoRedirect : bool with get, set" Usage="System.Net.HttpWebRequest.AllowAutoRedirect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-405">요청이 리디렉션 응답을 따르는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-405">Gets or sets a value that indicates whether the request should follow redirection responses.</span></span></summary>
        <value><span data-ttu-id="b203a-406">요청이 인터넷 리소스의 리디렉션 응답을 자동으로 따르면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-406"><see langword="true" /> if the request should automatically follow redirection responses from the Internet resource; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b203a-407">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-407">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-408">설정할 <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> 에 `true` 리소스의 새 위치로 HTTP 리디렉션 헤더를 자동으로 수행 하려면 요청 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="b203a-408">Set <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> to `true` if you want the request to automatically follow HTTP redirection headers to the new location of the resource.</span></span> <span data-ttu-id="b203a-409">최대 리디렉션 수는 설정한는 <xref:System.Net.HttpWebRequest.MaximumAutomaticRedirections%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-409">The maximum number of redirections to follow is set by the <xref:System.Net.HttpWebRequest.MaximumAutomaticRedirections%2A> property.</span></span>  
  
 <span data-ttu-id="b203a-410">하는 경우 <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> 로 설정 된 `false`, 399 300의 HTTP 상태 코드를 사용 하 여 모든 응답은 응용 프로그램에 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-410">If <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> is set to `false`, all responses with an HTTP status code from 300 to 399 is returned to the application.</span></span>  
  
 <span data-ttu-id="b203a-411">자동 리디렉션 시 권한 부여 헤더의 선택을 취소 하 고 <xref:System.Net.HttpWebRequest> 자동으로 다시 리디렉션된 위치에 인증 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-411">The Authorization header is cleared on auto-redirects and <xref:System.Net.HttpWebRequest> automatically tries to re-authenticate to the redirected location.</span></span> <span data-ttu-id="b203a-412">즉 실제로에서 리디렉션이 발생할 수 있으면 응용 프로그램 권한 부여 헤더에 사용자 지정 인증 정보를 넣을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-412">In practice, this means that an application can't put custom authentication information into the Authorization header if it is possible to encounter redirection.</span></span> <span data-ttu-id="b203a-413">대신, 응용 프로그램을 구현 하 고 사용자 지정 인증 모듈을 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-413">Instead, the application must implement and register a custom authentication module.</span></span> <span data-ttu-id="b203a-414"><xref:System.Net.AuthenticationManager?displayProperty=nameWithType> 관련된 클래스는 사용자 지정 인증 모듈을 구현 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-414">The <xref:System.Net.AuthenticationManager?displayProperty=nameWithType> and related class are used to implement a custom authentication module.</span></span> <span data-ttu-id="b203a-415"><xref:System.Net.AuthenticationManager.Register%2A?displayProperty=nameWithType> 메서드는 사용자 지정 인증 모듈을 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-415">The <xref:System.Net.AuthenticationManager.Register%2A?displayProperty=nameWithType> method registers a custom authentication module.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-416">다음 코드 예제에서는 <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> 리디렉션 응답을 수행 하려면 요청을 허용 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-416">The following code example uses the <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> property to allow the request to follow redirection responses.</span></span>  
  
 [!code-cpp[HttpWebRequest_AllowAutoRedirect#2](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_AllowAutoRedirect/CPP/httpwebrequest_allowautoredirect.cpp#2)]
 [!code-csharp[HttpWebRequest_AllowAutoRedirect#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_AllowAutoRedirect/CS/httpwebrequest_allowautoredirect.cs#2)]
 [!code-vb[HttpWebRequest_AllowAutoRedirect#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_AllowAutoRedirect/VB/httpwebrequest_allowautoredirect.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowReadStreamBuffering">
      <MemberSignature Language="C#" Value="public virtual bool AllowReadStreamBuffering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReadStreamBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.AllowReadStreamBuffering" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowReadStreamBuffering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowReadStreamBuffering { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowReadStreamBuffering : bool with get, set" Usage="System.Net.HttpWebRequest.AllowReadStreamBuffering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-417">인터넷 리소스에서 받은 데이터를 버퍼링할지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-417">Gets or sets a value that indicates whether to buffer the received from the Internet resource.</span></span></summary>
        <value><span data-ttu-id="b203a-418">인터넷 리소스에서 받은 데이터를 버퍼링하려면 <see langword="true" />이고, 버퍼링하지 않으려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-418"><see langword="true" /> to enable buffering of the data received from the Internet resource; <see langword="false" /> to disable buffering.</span></span> <span data-ttu-id="b203a-419">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-419">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowWriteStreamBuffering">
      <MemberSignature Language="C#" Value="public virtual bool AllowWriteStreamBuffering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowWriteStreamBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowWriteStreamBuffering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowWriteStreamBuffering { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowWriteStreamBuffering : bool with get, set" Usage="System.Net.HttpWebRequest.AllowWriteStreamBuffering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-420">인터넷 리소스에 보낸 데이터를 버퍼링할 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-420">Gets or sets a value that indicates whether to buffer the data sent to the Internet resource.</span></span></summary>
        <value><span data-ttu-id="b203a-421">인터넷 리소스에 보낸 데이터를 버퍼링할 수 있게 하려면 <see langword="true" />이고, 버퍼링할 수 없게 하려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-421"><see langword="true" /> to enable buffering of the data sent to the Internet resource; <see langword="false" /> to disable buffering.</span></span> <span data-ttu-id="b203a-422">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-422">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-423">때 <xref:System.Net.HttpWebRequest.AllowWriteStreamBuffering%2A> 는 `true`, 요청 리디렉션 또는 인증 시 다시 전송에 사용할 준비가 되도록 데이터를 메모리에 버퍼링 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-423">When <xref:System.Net.HttpWebRequest.AllowWriteStreamBuffering%2A> is `true`, the data is buffered in memory so it is ready to be resent in the event of redirections or authentication requests.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-424">다음 코드 예제에서는 <xref:System.Net.HttpWebRequest.AllowWriteStreamBuffering%2A> 속성 데이터 버퍼링을 사용 하지 않도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-424">The following code example uses the <xref:System.Net.HttpWebRequest.AllowWriteStreamBuffering%2A> property to disable data buffering.</span></span>  
  
 [!code-cpp[HttpWebRequest_AllowWriteStreamBuffering#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_AllowWriteStreamBuffering/CPP/httpwebrequest_allowwritestreambuffering.cpp#1)]
 [!code-csharp[HttpWebRequest_AllowWriteStreamBuffering#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_AllowWriteStreamBuffering/CS/httpwebrequest_allowwritestreambuffering.cs#1)]
 [!code-vb[HttpWebRequest_AllowWriteStreamBuffering#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_AllowWriteStreamBuffering/VB/httpwebrequest_allowwritestreambuffering.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b203a-425">데이터 버퍼에서 사용 가능한 모든 메모리를 사용할 수 있기 때문에 큰 데이터 세트를 업로드 하는 경우 <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" />을 <see langword="true" />로 설정하면 성능 문제가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-425">Setting <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> to <see langword="true" /> might cause performance problems when uploading large datasets because the data buffer could use all available memory.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="AutomaticDecompression">
      <MemberSignature Language="C#" Value="public System.Net.DecompressionMethods AutomaticDecompression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.DecompressionMethods AutomaticDecompression" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.AutomaticDecompression" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomaticDecompression As DecompressionMethods" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::DecompressionMethods AutomaticDecompression { System::Net::DecompressionMethods get(); void set(System::Net::DecompressionMethods value); };" />
      <MemberSignature Language="F#" Value="member this.AutomaticDecompression : System.Net.DecompressionMethods with get, set" Usage="System.Net.HttpWebRequest.AutomaticDecompression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.DecompressionMethods</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-426">압축을 푸는 데 사용할 형식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-426">Gets or sets the type of decompression that is used.</span></span></summary>
        <value><span data-ttu-id="b203a-427"><see cref="T:System.Net.DecompressionMethods" /> 사용 되는 압축 유형을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-427">A <see cref="T:System.Net.DecompressionMethods" /> object that indicates the type of decompression that is used.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b203a-428">개체의 현재 상태는 이 속성을 설정하도록 허용하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-428">The object's current state does not allow this property to be set.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginGetRequestStream">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginGetRequestStream(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginGetRequestStream (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginGetRequestStream(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginGetRequestStream : AsyncCallback * obj -&gt; IAsyncResult" Usage="httpWebRequest.BeginGetRequestStream (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="b203a-429"><see cref="T:System.AsyncCallback" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-429">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="b203a-430">이 요청에 대한 상태 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-430">The state object for this request.</span></span></param>
        <summary><span data-ttu-id="b203a-431">데이터를 쓰는 데 사용할 <see cref="T:System.IO.Stream" /> 개체에 대한 비동기 요청을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-431">Begins an asynchronous request for a <see cref="T:System.IO.Stream" /> object to use to write data.</span></span></summary>
        <returns><span data-ttu-id="b203a-432">비동기 요청을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-432">An <see cref="T:System.IAsyncResult" /> that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-433">합니다 <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> 에 대 한 데이터를 보내는 데 스트림에 대 한 비동기 요청을 시작 하는 메서드는 <xref:System.Net.HttpWebRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-433">The <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> method starts an asynchronous request for a stream used to send data for the <xref:System.Net.HttpWebRequest>.</span></span> <span data-ttu-id="b203a-434">비동기 콜백 메서드를 사용 하 여 <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> 실제 스트림을 반환 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-434">The asynchronous callback method uses the <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> method to return the actual stream.</span></span>  
  
 <span data-ttu-id="b203a-435"><xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> 메서드 전에이 메서드는 비동기 됩니다 (DNS 확인, 프록시 검색 및 예제에 대 한 TCP 소켓 연결)를 완료 하려면 몇 가지 동기 설치 작업에 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-435">The <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> method requires some synchronous setup tasks to complete (DNS resolution, proxy detection, and TCP socket connection, for example) before this method becomes asynchronous.</span></span> <span data-ttu-id="b203a-436">결과적으로,이 메서드가 호출 되 면 안 사용자 인터페이스 (UI) 스레드에서 오류가 발생 한 예외가 전에 동기 방식으로 초기 설정 작업을 완료 하려면 네트워크 설정에 따라 몇 분) (최대 상당한 시간을 걸릴 수 있으므로 또는 메서드가 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-436">As a result, this method should never be called on a user interface (UI) thread because it might take considerable time (up to several minutes depending on network settings) to complete the initial synchronous setup tasks before an exception for an error is thrown or the method succeeds.</span></span>  
  
 <span data-ttu-id="b203a-437">스레드 풀에 대 한 자세한 내용은 참조 하세요 [관리 되는 스레드 풀](~/docs/standard/threading/the-managed-thread-pool.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-437">To learn more about the thread pool, see [The managed thread pool](~/docs/standard/threading/the-managed-thread-pool.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-438">응용 프로그램 특정 요청에 대 한 동기 및 비동기 메서드를 혼합할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-438">Your application cannot mix synchronous and asynchronous methods for a particular request.</span></span> <span data-ttu-id="b203a-439">호출 하는 경우는 <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> 를 사용 해야 메서드는 <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> 응답을 검색 하는 방법.</span><span class="sxs-lookup"><span data-stu-id="b203a-439">If you call the <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> method, you must use the <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method to retrieve the response.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-440">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-440">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b203a-441">자세한 내용은 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-441">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-442">다음 코드 예제에서는 <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> 스트림 인스턴스에 대 한 비동기 요청을 확인 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-442">The following code example uses the <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> method to make an asynchronous request for a stream instance.</span></span>  
  
 [!code-cpp[HttpWebRequest_BeginGetRequestStream#2](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_BeginGetRequestStream/CPP/httpwebrequest_begingetrequeststream.cpp#2)]
 [!code-csharp[HttpWebRequest_BeginGetRequestStream#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_BeginGetRequestStream/CS/httpwebrequest_begingetrequeststream.cs#2)]
 [!code-vb[HttpWebRequest_BeginGetRequestStream#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_BeginGetRequestStream/VB/httpwebrequest_begingetrequeststream.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.ProtocolViolationException"><span data-ttu-id="b203a-443"><see cref="P:System.Net.HttpWebRequest.Method" /> 속성이 GET 또는 HEAD인 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-443">The <see cref="P:System.Net.HttpWebRequest.Method" /> property is GET or HEAD.</span></span>  
  
<span data-ttu-id="b203a-444">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-444">-or-</span></span> 
 <span data-ttu-id="b203a-445"><see cref="P:System.Net.HttpWebRequest.KeepAlive" />가 <see langword="true" />이고, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" />이 <see langword="false" />이고, <see cref="P:System.Net.HttpWebRequest.ContentLength" />가 -1이고, <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />이고, <see cref="P:System.Net.HttpWebRequest.Method" />가 POST 또는 PUT인 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-445"><see cref="P:System.Net.HttpWebRequest.KeepAlive" /> is <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> is <see langword="false" />, <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />, and <see cref="P:System.Net.HttpWebRequest.Method" /> is POST or PUT.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b203a-446">스트림이 <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />에 대한 이전 호출에서 사용되고 있는 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-446">The stream is being used by a previous call to <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /></span></span>  
  
<span data-ttu-id="b203a-447">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-447">-or-</span></span> 
 <span data-ttu-id="b203a-448"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" />이 값으로 설정되었으며 <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-448"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> is set to a value and <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />.</span></span>  
  
<span data-ttu-id="b203a-449">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-449">-or-</span></span> 
<span data-ttu-id="b203a-450">스레드 풀에 스레드가 부족합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-450">The thread pool is running out of threads.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b203a-451">요청 캐시 유효성 검사기에서 이 요청에 대한 응답이 캐시에서 제공될 수 있지만 데이터를 쓰는 요청의 경우 캐시를 사용하지 않아야 함을 나타내는 경우.</span><span class="sxs-lookup"><span data-stu-id="b203a-451">The request cache validator indicated that the response for this request can be served from the cache; however, requests that write data must not use the cache.</span></span> <span data-ttu-id="b203a-452">이 예외는 제대로 구현되지 않은 사용자 지정 캐시 유효성 검사기를 사용하려는 경우에 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-452">This exception can occur if you are using a custom cache validator that is incorrectly implemented.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="b203a-453"><see cref="M:System.Net.HttpWebRequest.Abort" />가 이전에 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-453"><see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b203a-454">.NET Compact Framework 응용 프로그램에서 콘텐츠 길이가 0인 요청 스트림을 올바르게 가져오고 닫지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="b203a-454">In a .NET Compact Framework application, a request stream with zero content length was not obtained and closed correctly.</span></span> <span data-ttu-id="b203a-455">콘텐츠 길이가 0인 요청을 처리하는 방법에 대한 자세한 내용은 [.NET Compact Framework의 네트워크 프로그래밍](https://msdn.microsoft.com/subscriptions/downloads/1afx2b0f\(v=vs.80\).aspx)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="b203a-455">For more information about handling zero content length requests, see [Network Programming in the .NET Compact Framework](https://msdn.microsoft.com/subscriptions/downloads/1afx2b0f\(v=vs.80\).aspx).</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/9d663c4b-07b4-4f6f-9b12-efbd3630354f"><span data-ttu-id="b203a-456">DefaultProxy 요소 (네트워크 설정)</span><span class="sxs-lookup"><span data-stu-id="b203a-456">DefaultProxy Element (Network Settings)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginGetResponse">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginGetResponse (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginGetResponse(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginGetResponse (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginGetResponse(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginGetResponse : AsyncCallback * obj -&gt; IAsyncResult" Usage="httpWebRequest.BeginGetResponse (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="b203a-457"><see cref="T:System.AsyncCallback" /> 대리자</span><span class="sxs-lookup"><span data-stu-id="b203a-457">The <see cref="T:System.AsyncCallback" /> delegate</span></span></param>
        <param name="state"><span data-ttu-id="b203a-458">이 요청에 대한 상태 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-458">The state object for this request.</span></span></param>
        <summary><span data-ttu-id="b203a-459">인터넷 리소스에 대한 비동기 요청을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-459">Begins an asynchronous request to an Internet resource.</span></span></summary>
        <returns><span data-ttu-id="b203a-460">응답에 대한 비동기 요청을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-460">An <see cref="T:System.IAsyncResult" /> that references the asynchronous request for a response.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-461"><xref:System.Net.HttpWebRequest.BeginGetResponse%2A> 메서드 인터넷 리소스에서 응답에 대 한 비동기 요청을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-461">The <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method starts an asynchronous request for a response from the Internet resource.</span></span> <span data-ttu-id="b203a-462">비동기 콜백 메서드를 사용 하 여 <xref:System.Net.HttpWebRequest.EndGetResponse%2A> 실제 반환 하는 방법 <xref:System.Net.WebResponse>합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-462">The asynchronous callback method uses the <xref:System.Net.HttpWebRequest.EndGetResponse%2A> method to return the actual <xref:System.Net.WebResponse>.</span></span>  
  
 <span data-ttu-id="b203a-463">A <xref:System.Net.ProtocolViolationException> 속성을 설정 하는 경우 여러 경우에 throw 되는 <xref:System.Net.HttpWebRequest> 충돌 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-463">A <xref:System.Net.ProtocolViolationException> is thrown in several cases when the properties set on the <xref:System.Net.HttpWebRequest> class are conflicting.</span></span> <span data-ttu-id="b203a-464">응용 프로그램을 설정 하는 경우이 예외가 발생 합니다 <xref:System.Net.HttpWebRequest.ContentLength%2A> 속성 및 <xref:System.Net.HttpWebRequest.SendChunked%2A> 속성을 `true`, HTTP GET 요청을 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-464">This exception occurs if an application sets the <xref:System.Net.HttpWebRequest.ContentLength%2A> property and the <xref:System.Net.HttpWebRequest.SendChunked%2A> property to `true`, and then sends an HTTP GET request.</span></span> <span data-ttu-id="b203a-465">응용 프로그램이이 지원 되지 않습니다만 HTTP 1.0 프로토콜을 지 원하는 서버에 청크 분할 전송 하려고 하는 경우이 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-465">This exception occurs if an application tries to send chunked to a server that only supports HTTP 1.0 protocol, where this is not supported.</span></span> <span data-ttu-id="b203a-466">응용 프로그램에서 설정 하지 않고 데이터를 전송 하려고 하는 경우이 예외가 발생 합니다 <xref:System.Net.HttpWebRequest.ContentLength%2A> 속성 또는 <xref:System.Net.HttpWebRequest.SendChunked%2A> 됩니다 `false` keepalive 연결에 버퍼링 사용 하지 않도록 설정 하는 경우 및 (합니다 <xref:System.Net.HttpWebRequest.KeepAlive%2A> 속성은 `true`)`.`</span><span class="sxs-lookup"><span data-stu-id="b203a-466">This exception occurs if an application tries to send data without setting the <xref:System.Net.HttpWebRequest.ContentLength%2A> property or the <xref:System.Net.HttpWebRequest.SendChunked%2A> is `false` when buffering is disabled and on a keepalive connection (the <xref:System.Net.HttpWebRequest.KeepAlive%2A> property is `true`)`.`</span></span>  
  
 <span data-ttu-id="b203a-467">경우는 <xref:System.Net.WebException> 는 throw를 사용 합니다 <xref:System.Net.WebException.Response%2A> 및 <xref:System.Net.WebException.Status%2A> 서버에서 응답을 확인 하려면 예외의 속성.</span><span class="sxs-lookup"><span data-stu-id="b203a-467">If a <xref:System.Net.WebException> is thrown, use the <xref:System.Net.WebException.Response%2A> and <xref:System.Net.WebException.Status%2A> properties of the exception to determine the response from the server.</span></span>  
  
 <span data-ttu-id="b203a-468"><xref:System.Net.HttpWebRequest.BeginGetResponse%2A> 메서드 전에이 메서드는 비동기 됩니다 (DNS 확인, 프록시 검색 및 예제에 대 한 TCP 소켓 연결)를 완료 하려면 몇 가지 동기 설치 작업에 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-468">The <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method requires some synchronous setup tasks to complete (DNS resolution, proxy detection, and TCP socket connection, for example) before this method becomes asynchronous.</span></span> <span data-ttu-id="b203a-469">결과적으로,이 메서드가 호출 되 면 안 사용자 인터페이스 (UI) 스레드에서 오류가 발생 한 예외가 전에 동기 방식으로 초기 설정 작업을 완료 하려면 네트워크 설정에 따라 몇 분) (최대 상당한 시간을 걸릴 수 있으므로 또는 메서드가 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-469">As a result, this method should never be called on a user interface (UI) thread because it might take considerable time (up to several minutes depending on network settings) to complete the initial synchronous setup tasks before an exception for an error is thrown or the method succeeds.</span></span>  
  
 <span data-ttu-id="b203a-470">스레드 풀에 대 한 자세한 내용은 참조 하세요 [관리 되는 스레드 풀](~/docs/standard/threading/the-managed-thread-pool.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-470">To learn more about the thread pool, see [The managed thread pool](~/docs/standard/threading/the-managed-thread-pool.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-471">응용 프로그램 특정 요청에 대 한 동기 및 비동기 메서드를 혼합할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-471">Your application cannot mix synchronous and asynchronous methods for a particular request.</span></span> <span data-ttu-id="b203a-472">호출 하는 경우는 <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> 를 사용 해야 메서드는 <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> 응답을 검색 하는 방법.</span><span class="sxs-lookup"><span data-stu-id="b203a-472">If you call the <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> method, you must use the <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method to retrieve the response.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-473">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-473">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b203a-474">자세한 내용은 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-474">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-475">다음 코드 예제에서는 <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> 인터넷 리소스에 대 한 비동기 요청을 수행 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-475">The following code example uses the <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method to make an asynchronous request for an Internet resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-476">비동기 요청의 경우 것은 자체 제한 시간 메커니즘을 구현 하는 클라이언트 응용 프로그램의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-476">In the case of asynchronous requests, it is the responsibility of the client application to implement its own time-out mechanism.</span></span> <span data-ttu-id="b203a-477">다음 코드 예제에는 작업을 수행 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-477">The following code example shows how to do it.</span></span>  
  
 [!code-cpp[System.Net.HttpWebRequest.BeginGetResponse#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.HttpWebRequest.BeginGetResponse/CPP/begingetresponse.cpp#1)]
 [!code-csharp[System.Net.HttpWebRequest.BeginGetResponse#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.HttpWebRequest.BeginGetResponse/CS/begingetresponse.cs#1)]
 [!code-vb[System.Net.HttpWebRequest.BeginGetResponse#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.HttpWebRequest.BeginGetResponse/VB/begingetresponse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b203a-478">이 스트림은 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />에 대한 이전 호출에서 이미 사용 중입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-478">The stream is already in use by a previous call to <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /></span></span>  
  
<span data-ttu-id="b203a-479">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-479">-or-</span></span> 
 <span data-ttu-id="b203a-480"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" />이 값으로 설정되었으며 <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-480"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> is set to a value and <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />.</span></span>  
  
<span data-ttu-id="b203a-481">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-481">-or-</span></span> 
<span data-ttu-id="b203a-482">스레드 풀에 스레드가 부족합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-482">The thread pool is running out of threads.</span></span></exception>
        <exception cref="T:System.Net.ProtocolViolationException"><span data-ttu-id="b203a-483"><see cref="P:System.Net.HttpWebRequest.Method" />가 GET 또는 HEAD이고 <see cref="P:System.Net.HttpWebRequest.ContentLength" />가 0보다 크거나 <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-483"><see cref="P:System.Net.HttpWebRequest.Method" /> is GET or HEAD, and either <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is greater than zero or <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="true" />.</span></span>  
  
<span data-ttu-id="b203a-484">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-484">-or-</span></span> 
 <span data-ttu-id="b203a-485"><see cref="P:System.Net.HttpWebRequest.KeepAlive" />가 <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" />이 <see langword="false" />, <see cref="P:System.Net.HttpWebRequest.ContentLength" />가 -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />, 그리고 <see cref="P:System.Net.HttpWebRequest.Method" />가 POST 또는 PUT입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-485"><see cref="P:System.Net.HttpWebRequest.KeepAlive" /> is <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> is <see langword="false" />, and either <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" /> and <see cref="P:System.Net.HttpWebRequest.Method" /> is POST or PUT.</span></span>  
  
<span data-ttu-id="b203a-486">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-486">-or-</span></span> 
<span data-ttu-id="b203a-487"><see cref="T:System.Net.HttpWebRequest" />에 엔터티 본문이 있지만 <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> 메서드를 호출하지 않고 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-487">The <see cref="T:System.Net.HttpWebRequest" /> has an entity body but the <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> method is called without calling the <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> method.</span></span>  
  
<span data-ttu-id="b203a-488">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-488">-or-</span></span> 
<span data-ttu-id="b203a-489"><see cref="P:System.Net.HttpWebRequest.ContentLength" />가 0보다 크지만 애플리케이션에서 약속된 모든 데이터를 쓰지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-489">The <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is greater than zero, but the application does not write all of the promised data.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="b203a-490"><see cref="M:System.Net.HttpWebRequest.Abort" />가 이전에 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-490"><see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/9d663c4b-07b4-4f6f-9b12-efbd3630354f"><span data-ttu-id="b203a-491">DefaultProxy 요소 (네트워크 설정)</span><span class="sxs-lookup"><span data-stu-id="b203a-491">DefaultProxy Element (Network Settings)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); void set(System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificates : System.Security.Cryptography.X509Certificates.X509CertificateCollection with get, set" Usage="System.Net.HttpWebRequest.ClientCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-492">이 요청과 관련된 보안 인증서의 컬렉션을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-492">Gets or sets the collection of security certificates that are associated with this request.</span></span></summary>
        <value><span data-ttu-id="b203a-493">이 요청과 연결된 보안 인증서를 포함하는 <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-493">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains the security certificates associated with this request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-494">응용 프로그램을 컬렉션에 인증서를 추가할 수 있지만에 액세스 권한이 없을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-494">An application can add a certificate to a collection, but might not have access rights to it.</span></span> <span data-ttu-id="b203a-495">컬렉션에 포함 된 인증서를 사용 하려면 응용 프로그램에 인증서를 발급 한 엔터티를 동일한 액세스 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-495">To use a certificate contained in the collection, the application must have the same access rights as the entity that issued the certificate.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-496">프레임 워크를 만들 때 SSL 세션을 캐시 하 고 가능한 경우 새 요청에 대 한 캐시 된 세션을 사용 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-496">The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</span></span> <span data-ttu-id="b203a-497">SSL 세션을 다시 사용 하려고 시도할 때, 프레임 워크의 첫 번째 요소를 사용 하는 <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (있는 경우 하나) 하는 경우에 익명 세션을 다시 사용 하려고 <xref:System.Net.HttpWebRequest.ClientCertificates%2A> 비어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-497">When attempting to reuse an SSL session, the Framework uses the first element of <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (if there is one), or tries to reuse an anonymous sessions if <xref:System.Net.HttpWebRequest.ClientCertificates%2A> is empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-498">클라이언트 인증서를를 추가 하면 안 성능상의 이유로 <xref:System.Net.HttpWebRequest> 서버에 대 한 요청은 알 수 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="b203a-498">For performance reasons, you shouldn't add a client certificate to a <xref:System.Net.HttpWebRequest> unless you know the server will ask for it.</span></span>  
>   
>  <span data-ttu-id="b203a-499">클라이언트 인증서 저장소에 인증서를 열거 하는 방법을 보여 주는 코드 예제를 참조 하세요.를 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-499">For a code example illustrating how to enumerate the certificates in the client certificate store, see the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b203a-500">Set 작업에 대해 지정된 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-500">The value specified for a set operation is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public string Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Connection" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Connection { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Connection : string with get, set" Usage="System.Net.HttpWebRequest.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-501">HTTP <see langword="Connection" /> 헤더의 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-501">Gets or sets the value of the <see langword="Connection" /> HTTP header.</span></span></summary>
        <value><span data-ttu-id="b203a-502">HTTP <see langword="Connection" /> 헤더의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-502">The value of the <see langword="Connection" /> HTTP header.</span></span> <span data-ttu-id="b203a-503">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-503">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-504">요청을 보냅니다 합니다 <xref:System.Net.HttpWebRequest.Connection%2A> 속성으로 인터넷 리소스에는 `Connection` HTTP 헤더입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-504">The request sends the <xref:System.Net.HttpWebRequest.Connection%2A> property to the Internet resource as the `Connection` HTTP header.</span></span> <span data-ttu-id="b203a-505">경우의 값을 <xref:System.Net.HttpWebRequest.KeepAlive%2A> 속성은 `true`, "유지" 값의 끝에 추가 됩니다는 `Connection` 헤더입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-505">If the value of the <xref:System.Net.HttpWebRequest.KeepAlive%2A> property is `true`, the value "Keep-alive" is appended to the end of the `Connection` header.</span></span>  
  
 <span data-ttu-id="b203a-506">선택을 취소 합니다 `Connection` HTTP 헤더를 설정 합니다 <xref:System.Net.HttpWebRequest.Connection%2A> 속성을 `null`.</span><span class="sxs-lookup"><span data-stu-id="b203a-506">To clear the `Connection` HTTP header, set the <xref:System.Net.HttpWebRequest.Connection%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="b203a-507">변경를 <xref:System.Net.HttpWebRequest.Connection%2A> 호출 하 여 요청이 시작 된 후 속성을 <xref:System.Net.HttpWebRequest.GetRequestStream%2A>, <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.HttpWebRequest.GetResponse%2A>, 또는 <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> 메서드가 throw는 <xref:System.InvalidOperationException>합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-507">Changing the <xref:System.Net.HttpWebRequest.Connection%2A> property after the request has been started by calling the <xref:System.Net.HttpWebRequest.GetRequestStream%2A>, <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.HttpWebRequest.GetResponse%2A>, or <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method throws an <xref:System.InvalidOperationException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-508">이 속성의 값은 <xref:System.Net.WebHeaderCollection>에 저장됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-508">The value for this property is stored in <xref:System.Net.WebHeaderCollection>.</span></span> <span data-ttu-id="b203a-509">WebHeaderCollection이 설정되면 속성 값이 손실됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-509">If WebHeaderCollection is set, the property value is lost.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-510">다음 코드 예제에서는 <xref:System.Net.HttpWebRequest.Connection%2A> 연결 HTTP 헤더의 값을 설정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-510">The following code example uses the <xref:System.Net.HttpWebRequest.Connection%2A> property to set the value of the Connection HTTP Header.</span></span>  
  
 [!code-cpp[HttpWebRequest_Connection#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_Connection/CPP/httpwebrequest_connection.cpp#1)]
 [!code-csharp[HttpWebRequest_Connection#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_Connection/CS/httpwebrequest_connection.cs#1)]
 [!code-vb[HttpWebRequest_Connection#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_Connection/VB/httpwebrequest_connection.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b203a-511"><see cref="P:System.Net.HttpWebRequest.Connection" />의 값이 Keep-alive 또는 Close로 설정되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-511">The value of <see cref="P:System.Net.HttpWebRequest.Connection" /> is set to Keep-alive or Close.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupName">
      <MemberSignature Language="C#" Value="public override string ConnectionGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ConnectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionGroupName : string with get, set" Usage="System.Net.HttpWebRequest.ConnectionGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-512">요청에 대한 연결 그룹의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-512">Gets or sets the name of the connection group for the request.</span></span></summary>
        <value><span data-ttu-id="b203a-513">이 요청에 대한 연결 그룹의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-513">The name of the connection group for this request.</span></span> <span data-ttu-id="b203a-514">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-514">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-515"><xref:System.Net.HttpWebRequest.ConnectionGroupName%2A> 속성을 사용 하면 연결 그룹을 사용 하 여 요청을 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-515">The <xref:System.Net.HttpWebRequest.ConnectionGroupName%2A> property enables you to associate a request with a connection group.</span></span> <span data-ttu-id="b203a-516">응용 프로그램 데이터베이스 서버에서 고객 정보를 검색 하는 웹 사이트 등의 다른 사용자에 대 한 대 이상의 서버에 요청에서 하는 경우에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-516">This is useful when your application makes requests to one server for different users, such as a Web site that retrieves customer information from a database server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-517">사용자 정보를 사용 하 여 가정 하 고 연결 그룹을 형성 하는 방법을 다음 코드 예제에서는 변수 `username`, `password`, 및 `domain` 이 코드를 호출 하기 전에 응용 프로그램에 의해 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-517">The following code example show how to use user information to form a connection group, assuming that the variables `username`, `password`, and `domain` are set by the application before this code is called.</span></span>  
  
 [!code-cpp[Classic HttpWebRequest.ConnectionGroupName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpWebRequest.ConnectionGroupName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpWebRequest.ConnectionGroupName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpWebRequest.ConnectionGroupName Example/CS/source.cs#1)]
 [!code-vb[Classic HttpWebRequest.ConnectionGroupName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpWebRequest.ConnectionGroupName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b203a-518">각 연결 그룹을 서버에 대 한 추가 연결을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-518">Each connection group creates additional connections for a server.</span></span> <span data-ttu-id="b203a-519">설정한 연결 수가 초과 될 수 있습니다이 <see cref="P:System.Net.ServicePoint.ConnectionLimit" /> 해당 서버에 대 한 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-519">This may result in exceeding the number of connections set by the <see cref="P:System.Net.ServicePoint.ConnectionLimit" /> property for that server.</span></span></para></block>
        <altmember cref="P:System.Net.Configuration.ConnectionManagementElement.MaxConnection" />
        <altmember cref="P:System.Net.WebRequest.ConnectionGroupName" />
        <related type="Article" href="~/docs/framework/network-programming/connection-grouping.md"><span data-ttu-id="b203a-520">연결 그룹화</span><span class="sxs-lookup"><span data-stu-id="b203a-520">Connection Grouping</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public override long ContentLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long ContentLength { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int64 with get, set" Usage="System.Net.HttpWebRequest.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-521"><see langword="Content-length" /> HTTP 헤더를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-521">Gets or sets the <see langword="Content-length" /> HTTP header.</span></span></summary>
        <value><span data-ttu-id="b203a-522">인터넷 리소스에 보낼 데이터의 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-522">The number of bytes of data to send to the Internet resource.</span></span> <span data-ttu-id="b203a-523">기본값은 -1로, 해당 속성이 설정되지 않았으며 보낼 요청 데이터가 없음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-523">The default is -1, which indicates the property has not been set and that there is no request data to send.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-524"><xref:System.Net.HttpWebRequest.ContentLength%2A> 속성으로 보낼 값이 포함 된 `Content-length` 요청과 함께 HTTP 헤더입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-524">The <xref:System.Net.HttpWebRequest.ContentLength%2A> property contains the value to send as the `Content-length` HTTP header with the request.</span></span>  
  
 <span data-ttu-id="b203a-525">에-1이 아닌 모든 값을 <xref:System.Net.HttpWebRequest.ContentLength%2A> 속성을 지정 하는 요청 데이터를 업로드 하는 데이터를 업로드 하는 방법만 설정할 수 있습니다는 <xref:System.Net.HttpWebRequest.Method%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-525">Any value other than -1 in the <xref:System.Net.HttpWebRequest.ContentLength%2A> property indicates that the request uploads data and that only methods that upload data are allowed to be set in the <xref:System.Net.HttpWebRequest.Method%2A> property.</span></span>  
  
 <span data-ttu-id="b203a-526">후 합니다 <xref:System.Net.HttpWebRequest.ContentLength%2A> 속성 값을 바이트 수 써야를 호출 하 여 반환 되는 요청 스트림에 합니다 <xref:System.Net.HttpWebRequest.GetRequestStream%2A> 메서드 중 하나 또는 둘 다를 <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> 및 <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b203a-526">After the <xref:System.Net.HttpWebRequest.ContentLength%2A> property is set to a value, that number of bytes must be written to the request stream that is returned by calling the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method or both the <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> and the <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-527">이 속성의 값은 <xref:System.Net.WebHeaderCollection>에 저장됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-527">The value for this property is stored in <xref:System.Net.WebHeaderCollection>.</span></span> <span data-ttu-id="b203a-528">WebHeaderCollection이 설정되면 속성 값이 손실됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-528">If WebHeaderCollection is set, the property value is lost.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-529">다음 코드 예제에서는 <xref:System.Net.HttpWebRequest.ContentLength%2A> 게시 되는 문자열의 길이 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-529">The following code example sets the <xref:System.Net.HttpWebRequest.ContentLength%2A> property to the length of the string being posted.</span></span>  
  
 [!code-cpp[HttpWebRequest_ContentLength#4](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_ContentLength/CPP/httpwebrequest_contentlength.cpp#4)]
 [!code-csharp[HttpWebRequest_ContentLength#4](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_ContentLength/CS/httpwebrequest_contentlength.cs#4)]
 [!code-vb[HttpWebRequest_ContentLength#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_ContentLength/VB/httpwebrequest_contentlength.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b203a-530"><see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" /> 또는 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> 메서드를 호출하여 요청이 시작되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-530">The request has been started by calling the <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" />, or <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b203a-531">새 <see cref="P:System.Net.HttpWebRequest.ContentLength" /> 값이 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-531">The new <see cref="P:System.Net.HttpWebRequest.ContentLength" /> value is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public override string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Net.HttpWebRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-532">HTTP <see langword="Content-type" /> 헤더의 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-532">Gets or sets the value of the <see langword="Content-type" /> HTTP header.</span></span></summary>
        <value><span data-ttu-id="b203a-533">HTTP <see langword="Content-type" /> 헤더의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-533">The value of the <see langword="Content-type" /> HTTP header.</span></span> <span data-ttu-id="b203a-534">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-534">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-535"><xref:System.Net.HttpWebRequest.ContentType%2A> 속성 요청의 미디어 형식을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-535">The <xref:System.Net.HttpWebRequest.ContentType%2A> property contains the media type of the request.</span></span> <span data-ttu-id="b203a-536">에 할당 된 값을 <xref:System.Net.HttpWebRequest.ContentType%2A> 요청을 보내면 속성에 모든 기존 내용을 대체 합니다 `Content-type` HTTP 헤더입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-536">Values assigned to the <xref:System.Net.HttpWebRequest.ContentType%2A> property replace any existing contents when the request sends the `Content-type` HTTP header.</span></span>  
  
 <span data-ttu-id="b203a-537">선택을 취소 합니다 `Content-type` HTTP 헤더를 설정 합니다 <xref:System.Net.HttpWebRequest.ContentType%2A> 속성을 `null`.</span><span class="sxs-lookup"><span data-stu-id="b203a-537">To clear the `Content-type` HTTP header, set the <xref:System.Net.HttpWebRequest.ContentType%2A> property to `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-538">이 속성의 값에 저장 됩니다 <xref:System.Net.WebHeaderCollection> 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-538">The value for this property is stored in <xref:System.Net.WebHeaderCollection> .</span></span> <span data-ttu-id="b203a-539">경우 <xref:System.Net.WebHeaderCollection> 설정 속성 값이 손실 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-539">If <xref:System.Net.WebHeaderCollection> is set, the property value is lost.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-540">다음 코드 예제에서는 <xref:System.Net.HttpWebRequest.ContentType%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-540">The following code example sets the <xref:System.Net.HttpWebRequest.ContentType%2A> property.</span></span>  
  
 [!code-cpp[HttpWebRequest_ContentLength#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_ContentLength/CPP/httpwebrequest_contentlength.cpp#1)]
 [!code-csharp[HttpWebRequest_ContentLength#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_ContentLength/CS/httpwebrequest_contentlength.cs#1)]
 [!code-vb[HttpWebRequest_ContentLength#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_ContentLength/VB/httpwebrequest_contentlength.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueDelegate">
      <MemberSignature Language="C#" Value="public System.Net.HttpContinueDelegate ContinueDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpContinueDelegate ContinueDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ContinueDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property ContinueDelegate As HttpContinueDelegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpContinueDelegate ^ ContinueDelegate { System::Net::HttpContinueDelegate ^ get(); void set(System::Net::HttpContinueDelegate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContinueDelegate : System.Net.HttpContinueDelegate with get, set" Usage="System.Net.HttpWebRequest.ContinueDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.HttpContinueDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-541">인터넷 리소스에서 HTTP 100-continue 응답을 받을 때 호출된 대리자 메서드를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-541">Gets or sets the delegate method called when an HTTP 100-continue response is received from the Internet resource.</span></span></summary>
        <value><span data-ttu-id="b203a-542">인터넷 리소스에서 HTTP 계속 응답이 반환될 때 실행하는 콜백 메서드를 구현하는 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-542">A delegate that implements the callback method that executes when an HTTP Continue response is returned from the Internet resource.</span></span> <span data-ttu-id="b203a-543">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-543">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-544"><xref:System.Net.HttpWebRequest.ContinueDelegate%2A> 클라이언트가 100 수신 될 때 호출할 콜백 메서드를 지정 하는 속성-Continue 응답 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-544">The <xref:System.Net.HttpWebRequest.ContinueDelegate%2A> property specifies the callback method to call when the client receives a 100-Continue response.</span></span>  
  
 <span data-ttu-id="b203a-545">경우는 <xref:System.Net.HttpWebRequest.ContinueDelegate%2A> 속성을 설정 하면 클라이언트에 대리자를 호출 때마다 형식의 응답을 프로토콜 <xref:System.Net.HttpStatusCode.Continue?displayProperty=nameWithType> (100) 수신 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-545">When the <xref:System.Net.HttpWebRequest.ContinueDelegate%2A> property is set, the client calls the delegate whenever protocol responses of type <xref:System.Net.HttpStatusCode.Continue?displayProperty=nameWithType> (100) are received.</span></span> <span data-ttu-id="b203a-546">클라이언트를 인터넷 리소스에서 수신 중인 데이터의 상태를 표시 하려는 경우에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-546">This is useful if you want the client to display the status of the data being received from the Internet resource.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Configuration.HttpWebRequestElement.MaximumUnauthorizedUploadLength" />
      </Docs>
    </Member>
    <Member MemberName="ContinueTimeout">
      <MemberSignature Language="C#" Value="public int ContinueTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContinueTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ContinueTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ContinueTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ContinueTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ContinueTimeout : int with get, set" Usage="System.Net.HttpWebRequest.ContinueTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-547">서버에서 100-Continue가 수신될 때까지 기다릴 제한 시간(밀리초)을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-547">Gets or sets a timeout, in milliseconds, to wait until the 100-Continue is received from the server.</span></span></summary>
        <value><span data-ttu-id="b203a-548">100-Continue가 수신될 때까지 기다릴 제한 시간(밀리초)입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-548">The timeout, in milliseconds, to wait until the 100-Continue is received.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-549">경우 100-Continue 엔터티 본문을 보낼 수 제한 시간이 만료 되기 전에 응답을 받을입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-549">If the 100-Continue response is received before the timeout expires, the entity body can be sent.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieContainer">
      <MemberSignature Language="C#" Value="public virtual System.Net.CookieContainer CookieContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieContainer CookieContainer" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.CookieContainer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CookieContainer As CookieContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::CookieContainer ^ CookieContainer { System::Net::CookieContainer ^ get(); void set(System::Net::CookieContainer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CookieContainer : System.Net.CookieContainer with get, set" Usage="System.Net.HttpWebRequest.CookieContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.CookieContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-550">이 요청과 관련된 쿠키를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-550">Gets or sets the cookies associated with the request.</span></span></summary>
        <value><span data-ttu-id="b203a-551">이 요청과 관련된 쿠키가 들어 있는 A <see cref="T:System.Net.CookieContainer" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-551">A <see cref="T:System.Net.CookieContainer" /> that contains the cookies associated with this request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-552">합니다 <xref:System.Net.HttpWebRequest.CookieContainer%2A> 속성의 인스턴스를 제공 합니다 <xref:System.Net.CookieContainer> 이 요청과 연관 된 쿠키를 포함 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-552">The <xref:System.Net.HttpWebRequest.CookieContainer%2A> property provides an instance of the <xref:System.Net.CookieContainer> class that contains the cookies associated with this request.</span></span>  
  
 <span data-ttu-id="b203a-553"><xref:System.Net.HttpWebRequest.CookieContainer%2A> `null` 기본적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-553"><xref:System.Net.HttpWebRequest.CookieContainer%2A> is `null` by default.</span></span> <span data-ttu-id="b203a-554">할당 해야 합니다는 <xref:System.Net.CookieContainer> 개체 속성에서 반환 된 쿠키를를 <xref:System.Net.HttpWebResponse.Cookies%2A> 의 속성을 <xref:System.Net.HttpWebResponse> 반환한는 <xref:System.Net.HttpWebRequest.GetResponse%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b203a-554">You must assign a <xref:System.Net.CookieContainer> object to the property to have cookies returned in the <xref:System.Net.HttpWebResponse.Cookies%2A> property of the <xref:System.Net.HttpWebResponse> returned by the <xref:System.Net.HttpWebRequest.GetResponse%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-555">쿠키는 보안상의 이유로 기본적으로 비활성화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-555">For security reasons, cookies are disabled by default.</span></span> <span data-ttu-id="b203a-556">사용 하 여 쿠키를 사용 하려는 경우는 <xref:System.Net.HttpWebRequest.CookieContainer%2A> 쿠키를 사용 하도록 설정 하려면 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-556">If you want to use cookies, use the <xref:System.Net.HttpWebRequest.CookieContainer%2A> property to enable cookies.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-557">다음 코드 예제에서는 URL로 요청을를 보내고 응답에서 반환 된 쿠키를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-557">The following code example sends a request to a URL and displays the cookies returned in the response.</span></span>  
  
 [!code-cpp[NCLCookies#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCookies/CPP/cookiessnippets.cpp#1)]
 [!code-csharp[NCLCookies#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCookies/CS/cookiessnippets.cs#1)]
 [!code-vb[NCLCookies#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLCookies/VB/cookiessnippets.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.CookieContainer" />
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public override System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.HttpWebRequest.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-558">요청에 대한 인증 정보를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-558">Gets or sets authentication information for the request.</span></span></summary>
        <value><span data-ttu-id="b203a-559">요청과 관련된 인증 자격 증명이 들어 있는 <see cref="T:System.Net.ICredentials" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-559">An <see cref="T:System.Net.ICredentials" /> that contains the authentication credentials associated with the request.</span></span> <span data-ttu-id="b203a-560">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-560">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-561"><xref:System.Net.HttpWebRequest.Credentials%2A> 속성 요청의 작성자를 식별 하는 인증 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-561">The <xref:System.Net.HttpWebRequest.Credentials%2A> property contains authentication information to identify the maker of the request.</span></span> <span data-ttu-id="b203a-562"><xref:System.Net.HttpWebRequest.Credentials%2A> 속성 일 수 있습니다를 <xref:System.Net.NetworkCredential>, 있는 경우 사용자, 암호 및 도메인 정보에 포함 된 합니다 <xref:System.Net.NetworkCredential> 요청을 인증에 개체를 사용 하거나 수를 <xref:System.Net.CredentialCache>있으며이 경우 Uniform Resource 요청의 식별자 (URI)는 요청을 인증 하는 데 사용자, 암호 및 도메인 정보를 확인 하려면 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-562">The <xref:System.Net.HttpWebRequest.Credentials%2A> property can be either a <xref:System.Net.NetworkCredential>, in which case the user, password, and domain information contained in the <xref:System.Net.NetworkCredential> object is used to authenticate the request, or it can be a <xref:System.Net.CredentialCache>, in which case the Uniform Resource Identifier (URI) of the request is used to determine the user, password, and domain information to use to authenticate the request.</span></span>  
  
 <span data-ttu-id="b203a-563">대부분의 클라이언트 시나리오에서 사용 해야는 <xref:System.Net.CredentialCache.DefaultCredentials%2A> 현재 로그온된 한 사용자의 자격 증명을 포함 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-563">In most client scenarios, you should use the <xref:System.Net.CredentialCache.DefaultCredentials%2A> property, which contains the credentials of the currently logged on user.</span></span> <span data-ttu-id="b203a-564">이 위해 설정 된 <xref:System.Net.WebClient.UseDefaultCredentials%2A> 속성을 `true` 이 속성을 설정 하는 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-564">To do this, set the <xref:System.Net.WebClient.UseDefaultCredentials%2A> property to `true` instead of setting this property.</span></span>  
  
 <span data-ttu-id="b203a-565">경우는 <xref:System.Net.HttpWebRequest> 클래스는 ASP.NET 응용 프로그램에서 자격 증명 같은 중간 계층 응용 프로그램에서 사용 되는 <xref:System.Net.CredentialCache.DefaultCredentials%2A> 속성 ASP 페이지 (서버 쪽 자격 증명)를 실행 하는 계정에 속해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-565">If the <xref:System.Net.HttpWebRequest> class is being used in a middle-tier application, such as an ASP.NET application, the credentials in the <xref:System.Net.CredentialCache.DefaultCredentials%2A> property belong to the account running the ASP page (the server-side credentials).</span></span> <span data-ttu-id="b203a-566">일반적으로이 속성을 설정한 대신해 요청 클라이언트의 자격 증명입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-566">Typically, you would set this property to the credentials of the client on whose behalf the request is made.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-567">다른 사용자로 가장할 NTLM 인증 체계를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-567">The NTLM authentication scheme cannot be used to impersonate another user.</span></span> <span data-ttu-id="b203a-568">Kerberos는 가장을 지원 하기 위해 특수 하 게 구성 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-568">Kerberos must be specially configured to support impersonation.</span></span>  
  
 <span data-ttu-id="b203a-569">하나 이상의 인증 방법 HttpWebRequest를 제한 하려면를 <xref:System.Net.CredentialCache> 하나 이상의 인증 체계에 자격 증명를 바인딩하고 클래스</span><span class="sxs-lookup"><span data-stu-id="b203a-569">To restrict HttpWebRequest to one or more authentication methods, use the <xref:System.Net.CredentialCache> class and bind your credentials to one or more authentication schemes</span></span>  
  
 <span data-ttu-id="b203a-570">지원 되는 인증 체계는 다이제스트, 협상, Kerberos, NTLM 및 Basic에 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-570">Supported authentication schemes include Digest, Negotiate, Kerberos, NTLM, and Basic.</span></span>  
  
 <span data-ttu-id="b203a-571">보안상의 이유로 리디렉션을 자동으로 수행할 때에서 리디렉션에 포함 하려는 자격 증명을 저장 한 <xref:System.Net.CredentialCache> 이 속성에 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-571">For security reasons, when automatically following redirects, store the credentials that you want to be included in the redirect in a <xref:System.Net.CredentialCache> and assign it to this property.</span></span> <span data-ttu-id="b203a-572">이 속성에 자동으로 설정할 `null` 제외 하 고 있으면 리디렉션 시는 <xref:System.Net.CredentialCache>합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-572">This property will automatically be set to `null` upon redirection if it contains anything except a <xref:System.Net.CredentialCache>.</span></span> <span data-ttu-id="b203a-573">이 속성 값을 갖는 자동으로 설정할 `null` 해당 조건에서 자격 증명 의도 하지 않은 모든 대상에 전송 되지 않도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-573">Having this property value be automatically set to `null` under those conditions prevents credentials from being sent to any unintended destination.</span></span>
  
## Examples  
 <span data-ttu-id="b203a-574">다음 코드 예제는 요청에 대 한 자격 증명을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-574">The following code example sets the credentials for a request.</span></span>  
  
 [!code-cpp[NCLResponse1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLResponse1/CPP/httpwebrequest1.cpp#1)]
 [!code-csharp[NCLResponse1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLResponse1/CS/httpwebrequest1.cs#1)]
 [!code-vb[NCLResponse1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLResponse1/VB/httpwebrequest1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Date">
      <MemberSignature Language="C#" Value="public DateTime Date { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Date" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Date" />
      <MemberSignature Language="VB.NET" Value="Public Property Date As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime Date { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.Date : DateTime with get, set" Usage="System.Net.HttpWebRequest.Date" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-575">HTTP 요청에 사용할 <see langword="Date" /> HTTP 헤더 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-575">Gets or sets the <see langword="Date" /> HTTP header value to use in an HTTP request.</span></span></summary>
        <value><span data-ttu-id="b203a-576">HTTP 요청의 Date 헤더 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-576">The Date header value in the HTTP request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-577">Date 헤더 이면 `null`를 반환 값에 설정한 다음 <xref:System.DateTime.MinValue?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-577">If the Date header is `null`, then the return value will be set to <xref:System.DateTime.MinValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="b203a-578"><xref:System.Net.HttpWebRequest.Date%2A> 속성은 표준 <xref:System.DateTime?displayProperty=nameWithType> 개체를 포함할 수 있습니다는 <xref:System.DateTimeKind?displayProperty=nameWithType> 필드 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>를 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, 또는 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-578">The <xref:System.Net.HttpWebRequest.Date%2A> property is a standard <xref:System.DateTime?displayProperty=nameWithType> object and can contain a <xref:System.DateTimeKind?displayProperty=nameWithType> field of <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, or <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b203a-579">사용 하는 경우 모든 종류의 시간을 설정할 수는 <xref:System.Net.HttpWebRequest.Date%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-579">Any kind of time can be set when using the <xref:System.Net.HttpWebRequest.Date%2A> property.</span></span> <span data-ttu-id="b203a-580">하는 경우 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> 를 설정 하거나 검색 합니다 <xref:System.Net.HttpWebRequest.Date%2A> 속성으로 간주 됩니다 <xref:System.DateTimeKind.Local?displayProperty=nameWithType> (현지 시간).</span><span class="sxs-lookup"><span data-stu-id="b203a-580">If <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> is set or retrieved, the <xref:System.Net.HttpWebRequest.Date%2A> property is assumed to be <xref:System.DateTimeKind.Local?displayProperty=nameWithType> (local time).</span></span>  
  
 <span data-ttu-id="b203a-581">클래스는 <xref:System.Net> 네임 스페이스 항상 코드를 작성 합니다 <xref:System.Net.HttpWebRequest.Date%2A> GMT (Utc) 형식을 사용 하 여 표준 형태로 전송 하는 동안 통신 중에는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-581">The classes in the <xref:System.Net> namespace always write it out the <xref:System.Net.HttpWebRequest.Date%2A> property on the wire during transmission in standard form using GMT (Utc) format.</span></span>  
  
 <span data-ttu-id="b203a-582">경우는 <xref:System.Net.HttpWebRequest.Date%2A> 속성이 <xref:System.DateTime.MinValue?displayProperty=nameWithType>, 해당 `Date` HTTP 헤더에서 제거 됩니다는 <xref:System.Net.HttpWebRequest.Headers%2A> 속성 및 <xref:System.Net.WebHeaderCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-582">If the <xref:System.Net.HttpWebRequest.Date%2A> property is set to <xref:System.DateTime.MinValue?displayProperty=nameWithType>, then the `Date` HTTP header is removed from the <xref:System.Net.HttpWebRequest.Headers%2A> property and the <xref:System.Net.WebHeaderCollection>.</span></span>  
  
 <span data-ttu-id="b203a-583">경우는 <xref:System.Net.HttpWebRequest.Date%2A> 속성은 <xref:System.DateTime.MinValue?displayProperty=nameWithType>, 있음을 나타냅니다 합니다 `Date` HTTP 헤더에 포함 되지 않습니다는 <xref:System.Net.HttpWebRequest.Headers%2A> 속성 및 <xref:System.Net.WebHeaderCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-583">If the <xref:System.Net.HttpWebRequest.Date%2A> property is <xref:System.DateTime.MinValue?displayProperty=nameWithType>, this indicates that the `Date` HTTP header is not included in the <xref:System.Net.HttpWebRequest.Headers%2A> property and the <xref:System.Net.WebHeaderCollection>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-584">이 속성의 값은 <xref:System.Net.WebHeaderCollection>에 저장됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-584">The value for this property is stored in <xref:System.Net.WebHeaderCollection>.</span></span> <span data-ttu-id="b203a-585">WebHeaderCollection이 설정되면 속성 값이 손실됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-585">If WebHeaderCollection is set, the property value is lost.</span></span>  
  
 <span data-ttu-id="b203a-586">경우는 <xref:System.Net.HttpWebRequest.Date%2A> 설정 되어 전송 하려고 시도 하 고는 <xref:System.Net.HttpWebRequest> 본문이 없는 <xref:System.Net.ProtocolViolationException?displayProperty=nameWithType> 의해 throw 됩니다.는 <xref:System.Net.HttpWebRequest.BeginGetResponse%2A>를 <xref:System.Net.HttpWebRequest.GetResponse%2A>, 및 <xref:System.Net.HttpWebRequest.EndGetResponse%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b203a-586">If the <xref:System.Net.HttpWebRequest.Date%2A> is set and an attempt is made to send a <xref:System.Net.HttpWebRequest> with no body, then a <xref:System.Net.ProtocolViolationException?displayProperty=nameWithType> will be thrown by the <xref:System.Net.HttpWebRequest.BeginGetResponse%2A>, <xref:System.Net.HttpWebRequest.GetResponse%2A>, and <xref:System.Net.HttpWebRequest.EndGetResponse%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCachePolicy">
      <MemberSignature Language="C#" Value="public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.Cache.RequestCachePolicy DefaultCachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.DefaultCachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultCachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::Cache::RequestCachePolicy ^ DefaultCachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.HttpWebRequest.DefaultCachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-587">이 요청에 대한 기본 캐시 정책을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-587">Gets or sets the default cache policy for this request.</span></span></summary>
        <value><span data-ttu-id="b203a-588">다른 정책을 적용할 수 없을 때 이 요청에 대해 적용할 캐시 정책을 지정하는 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-588">A <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> that specifies the cache policy in effect for this request when no other policy is applicable.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-589">HTTP 및 HTTPS 체계를 지정 된 정책을 등록이 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-589">Setting this property registers the specified policy for the HTTP and HTTPS schemes.</span></span> <span data-ttu-id="b203a-590">이 요청에 대해이 정책을 사용 하는 경우:</span><span class="sxs-lookup"><span data-stu-id="b203a-590">This policy is used for this request if:</span></span>  
  
 <span data-ttu-id="b203a-591">방법이 없는 <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=nameWithType> 이 요청에 대 한 지정 된 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-591">There is no <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=nameWithType> property specified for this request.</span></span>  
  
<span data-ttu-id="b203a-592">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-592">-or-</span></span>
  
 <span data-ttu-id="b203a-593">컴퓨터 및 응용 프로그램 구성 파일에를이 요청을 만드는 데 사용 하는 리소스 URI (Uniform Identifier) 적용 되는 캐시 정책을 지정 하지 않으면.</span><span class="sxs-lookup"><span data-stu-id="b203a-593">The machine and application configuration files do not specify a cache policy that is applicable to the Uniform Resource Identifier (URI) used to create this request.</span></span>  
  
 <span data-ttu-id="b203a-594">캐시 정책 리소스 호스트 컴퓨터에 요청을 전송 하는 대신 캐시에서 요청된 된 리소스를 사용할 수 있는지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-594">The cache policy determines whether the requested resource can be taken from a cache instead of sending the request to the resource host computer.</span></span>  
  
 <span data-ttu-id="b203a-595">응답 스트림에 리소스를 검색 하 고 스트림의 끝까지 읽는 경우에 리소스의 복사본이 캐시에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-595">A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream.</span></span> <span data-ttu-id="b203a-596">이므로 동일한 리소스에 대 한 다른 요청에는이 요청에 대 한 캐시 정책 수준에 따라 캐시 된 복사본을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-596">So another request for the same resource could use a cached copy, depending on the cache policy level for this request.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="b203a-597">네트워크 리소스에 무제한 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-597">for unrestricted access to network resources.</span></span> <span data-ttu-id="b203a-598">연결 된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="b203a-598">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.Net.Cache.RequestCachePolicy" />
        <altmember cref="T:System.Net.Cache.HttpRequestCacheLevel" />
        <altmember cref="T:System.Net.Cache.RequestCacheLevel" />
        <altmember cref="P:System.Net.WebRequest.CachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="DefaultMaximumErrorResponseLength">
      <MemberSignature Language="C#" Value="public static int DefaultMaximumErrorResponseLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 DefaultMaximumErrorResponseLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.DefaultMaximumErrorResponseLength" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultMaximumErrorResponseLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int DefaultMaximumErrorResponseLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMaximumErrorResponseLength : int with get, set" Usage="System.Net.HttpWebRequest.DefaultMaximumErrorResponseLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-599">HTTP 오류 응답의 기본 최대 길이를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-599">Gets or sets the default maximum length of an HTTP error response.</span></span></summary>
        <value><span data-ttu-id="b203a-600">HTTP 오류 응답의 기본 최대 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-600">The default maximum length of an HTTP error response.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b203a-601">값이 0보다 작고 -1이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-601">The value is less than 0 and is not equal to -1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultMaximumResponseHeadersLength">
      <MemberSignature Language="C#" Value="public static int DefaultMaximumResponseHeadersLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 DefaultMaximumResponseHeadersLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultMaximumResponseHeadersLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int DefaultMaximumResponseHeadersLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMaximumResponseHeadersLength : int with get, set" Usage="System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Use this")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-602"><see cref="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength" /> 속성에 대한 기본값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-602">Gets or sets the default for the <see cref="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength" /> property.</span></span></summary>
        <value><span data-ttu-id="b203a-603">받은 응답 헤더의 기본 최대 길이이며 킬로바이트(1024바이트) 단위입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-603">The length, in kilobytes (1024 bytes), of the default maximum for response headers received.</span></span> <span data-ttu-id="b203a-604">기본 구성 파일에서는 이 값을 64KB로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-604">The default configuration file sets this value to 64 kilobytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-605">응답 헤더 길이 응답 상태 줄 및 HTTP 프로토콜의 일부로 받은 추가 제어 문자를 받았습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-605">The length of the response header received the response status line and any extra control characters that are received as part of HTTP protocol.</span></span> <span data-ttu-id="b203a-606">값이-1 이면 수신;은 응답 헤더에 제한 되지 않습니다 0 이면 모든 요청이 실패 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-606">A value of -1 means no limit is imposed on the response headers received; a value of 0 means that all requests fail.</span></span>  
  
 <span data-ttu-id="b203a-607">또한 구성 파일에서이 값을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-607">This value can also be changed in the configuration file.</span></span> <span data-ttu-id="b203a-608">이 속성의 영향을 설정 하 여 재정의할 수 있습니다 합니다 <xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A> 인스턴스의 속성을 <xref:System.Net.HttpWebRequest> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-608">The impact of this property can be overridden by setting the <xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A> property on an instance of the <xref:System.Net.HttpWebRequest> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b203a-609">값이 0보다 작고 -1이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-609">The value is not equal to -1 and is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EndGetRequestStream">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b203a-610">데이터를 쓰는 데 사용할 <see cref="T:System.IO.Stream" /> 개체에 대한 비동기 요청을 끝냅니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-610">Ends an asynchronous request for a <see cref="T:System.IO.Stream" /> object to use to write data.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EndGetRequestStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream EndGetRequestStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndGetRequestStream (asyncResult As IAsyncResult) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndGetRequestStream : IAsyncResult -&gt; System.IO.Stream" Usage="httpWebRequest.EndGetRequestStream asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="b203a-611">스트림에 대해 보류된 요청입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-611">The pending request for a stream.</span></span></param>
        <summary><span data-ttu-id="b203a-612">데이터를 쓰는 데 사용할 <see cref="T:System.IO.Stream" /> 개체에 대한 비동기 요청을 끝냅니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-612">Ends an asynchronous request for a <see cref="T:System.IO.Stream" /> object to use to write data.</span></span></summary>
        <returns><span data-ttu-id="b203a-613">요청 데이터를 쓰는 데 사용할 <see cref="T:System.IO.Stream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-613">A <see cref="T:System.IO.Stream" /> to use to write request data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-614">합니다 <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> 메서드에 의해 시작 된 스트림에 대 한 비동기 요청을 완료 합니다 <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b203a-614">The <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> method completes an asynchronous request for a stream that was started by the <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> method.</span></span> <span data-ttu-id="b203a-615">후 합니다 <xref:System.IO.Stream> 반환 된 개체를 사용 하 여 데이터를 보낼 수 있습니다 합니다 <xref:System.Net.HttpWebRequest> 사용 하 여를 <xref:System.IO.Stream.Write%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b203a-615">After the <xref:System.IO.Stream> object has been returned, you can send data with the <xref:System.Net.HttpWebRequest> by using the <xref:System.IO.Stream.Write%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-616">값을 설정 해야 합니다 <xref:System.Net.HttpWebRequest.ContentLength%2A> 스트림에 데이터를 쓰기 전에 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-616">You must set the value of the <xref:System.Net.HttpWebRequest.ContentLength%2A> property before writing data to the stream.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="b203a-617">호출 해야 합니다는 <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> 스트림을 닫습니다 재사용에 대 한 연결을 해제 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="b203a-617">You must call the <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> method to close the stream and release the connection for reuse.</span></span> <span data-ttu-id="b203a-618">스트림 닫기에 실패 하면 응용 프로그램을 연결에서 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-618">Failure to close the stream causes your application to run out of connections.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-619">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-619">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b203a-620">자세한 내용은 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-620">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-621">다음 코드 예제에서는 <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> 스트림 인스턴스에 대 한 비동기 요청을 종료 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-621">The following code example uses the <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> method to end an asynchronous request for a stream instance.</span></span>  
  
 [!code-cpp[HttpWebRequest_BeginGetRequestStream#2](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_BeginGetRequestStream/CPP/httpwebrequest_begingetrequeststream.cpp#2)]
 [!code-csharp[HttpWebRequest_BeginGetRequestStream#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_BeginGetRequestStream/CS/httpwebrequest_begingetrequeststream.cs#2)]
 [!code-vb[HttpWebRequest_BeginGetRequestStream#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_BeginGetRequestStream/VB/httpwebrequest_begingetrequeststream.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b203a-622"><paramref name="asyncResult" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-622"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b203a-623">요청이 완료되지 않아서 스트림을 사용할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-623">The request did not complete, and no stream is available.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b203a-624">현재 인스턴스에서 <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />을 호출한 결과 <paramref name="asyncResult" />가 반환되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-624"><paramref name="asyncResult" /> was not returned by the current instance from a call to <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b203a-625">이 메서드가 <paramref name="asyncResult" />를 사용하여 이미 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-625">This method was called previously using <paramref name="asyncResult" />.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="b203a-626"><see cref="M:System.Net.HttpWebRequest.Abort" />가 이전에 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-626"><see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.</span></span>  
  
<span data-ttu-id="b203a-627">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-627">-or-</span></span> 
<span data-ttu-id="b203a-628">이 요청을 처리하는 동안 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-628">An error occurred while processing the request.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndGetRequestStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult, out System.Net.TransportContext context);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream EndGetRequestStream(class System.IAsyncResult asyncResult, [out] class System.Net.TransportContext&amp; context) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetRequestStream (asyncResult As IAsyncResult, ByRef context As TransportContext) As Stream" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult, [Runtime::InteropServices::Out] System::Net::TransportContext ^ % context);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult, out System.Net.TransportContext transportContext);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream EndGetRequestStream(class System.IAsyncResult asyncResult, [out] class System.Net.TransportContext&amp; transportContext) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetRequestStream (asyncResult As IAsyncResult, ByRef transportContext As TransportContext) As Stream" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult, [Runtime::InteropServices::Out] System::Net::TransportContext ^ % transportContext);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.EndGetRequestStream : IAsyncResult *  -&gt; System.IO.Stream" Usage="httpWebRequest.EndGetRequestStream (asyncResult, transportContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Net.TransportContext" RefType="out" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="transportContext" Type="System.Net.TransportContext" RefType="out" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="b203a-629">스트림에 대해 보류된 요청입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-629">The pending request for a stream.</span></span></param>
        <param name="context"><span data-ttu-id="b203a-630"><see cref="T:System.Net.TransportContext" />에 대한 <see cref="T:System.IO.Stream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-630">The <see cref="T:System.Net.TransportContext" /> for the <see cref="T:System.IO.Stream" />.</span></span></param>
        <param name="transportContext"><span data-ttu-id="b203a-631"><see cref="T:System.Net.TransportContext" />에 대한 <see cref="T:System.IO.Stream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-631">The <see cref="T:System.Net.TransportContext" /> for the <see cref="T:System.IO.Stream" />.</span></span></param>
        <summary><span data-ttu-id="b203a-632">데이터를 쓰는 데 사용하는 <see cref="T:System.IO.Stream" /> 개체에 대한 비동기 요청을 종료하고 해당 스트림과 연결된 <see cref="T:System.Net.TransportContext" />를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-632">Ends an asynchronous request for a <see cref="T:System.IO.Stream" /> object to use to write data and outputs the <see cref="T:System.Net.TransportContext" /> associated with the stream.</span></span></summary>
        <returns><span data-ttu-id="b203a-633">요청 데이터를 쓰는 데 사용할 <see cref="T:System.IO.Stream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-633">A <see cref="T:System.IO.Stream" /> to use to write request data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-634"><xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> 메서드에 의해 시작 된 스트림에 대 한 비동기 요청을 완료 합니다 <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> 메서드 및 출력을 <xref:System.Net.TransportContext> 스트림과 연결 된.</span><span class="sxs-lookup"><span data-stu-id="b203a-634">The <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> method completes an asynchronous request for a stream that was started by the <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> method and outputs the <xref:System.Net.TransportContext> associated with the stream.</span></span> <span data-ttu-id="b203a-635">후 합니다 <xref:System.IO.Stream> 반환 된 개체를 사용 하 여 데이터를 보낼 수 있습니다 합니다 <xref:System.Net.HttpWebRequest> 사용 하 여를 <xref:System.IO.Stream.Write%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b203a-635">After the <xref:System.IO.Stream> object has been returned, you can send data with the <xref:System.Net.HttpWebRequest> by using the <xref:System.IO.Stream.Write%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b203a-636">확장 된 보호를 사용 하 여 통합된 Windows 인증을 사용 하는 일부 응용 프로그램에서 사용 하는 전송 계층을 쿼리할 수 해야 <xref:System.Net.HttpWebRequest> 기본 TLS 채널에서의 CBT (채널 바인딩 토큰)를 검색 하기 위해.</span><span class="sxs-lookup"><span data-stu-id="b203a-636">Some applications that use integrated Windows authentication with extended protection may need to be able to query the transport layer used by <xref:System.Net.HttpWebRequest> in order to retrieve the channel binding token (CBT) from the underlying TLS channel.</span></span> <span data-ttu-id="b203a-637">합니다 <xref:System.Net.HttpWebRequest.GetRequestStream%2A> 메서드는 요청 본문을 포함 하는 HTTP 메서드에 대해이 정보에 대 한 액세스를 제공 (`POST` 고 `PUT` 요청).</span><span class="sxs-lookup"><span data-stu-id="b203a-637">The <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method provides access to this information for HTTP methods which have a request body (`POST` and `PUT` requests).</span></span> <span data-ttu-id="b203a-638">응용 프로그램에서 자체 인증을 구현 하는 CBT에 액세스 해야 하는 경우에 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-638">This is only needed if the application is implementing its own authentication and needs access to the CBT.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-639">응용 프로그램의 값을 설정 해야 하는 경우는 <xref:System.Net.HttpWebRequest.ContentLength%2A> 속성을이 스트림을 검색 하 고 데이터를 기록 하기 전에 수행 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-639">If an application needs to set the value of the <xref:System.Net.HttpWebRequest.ContentLength%2A> property, then this must be done before retrieving the stream and writing data to it.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="b203a-640">호출 해야 합니다는 <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> 스트림을 닫습니다 재사용에 대 한 연결을 해제 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="b203a-640">You must call the <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> method to close the stream and release the connection for reuse.</span></span> <span data-ttu-id="b203a-641">스트림 닫기에 실패 하면 응용 프로그램을 연결에서 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-641">Failure to close the stream causes your application to run out of connections.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-642">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-642">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b203a-643">자세한 내용은 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-643">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b203a-644">현재 인스턴스에서 <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />을 호출한 결과 <paramref name="asyncResult" />가 반환되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-644"><paramref name="asyncResult" /> was not returned by the current instance from a call to <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b203a-645"><paramref name="asyncResult" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-645"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b203a-646">이 메서드가 <paramref name="asyncResult" />를 사용하여 이미 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-646">This method was called previously using <paramref name="asyncResult" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b203a-647">요청이 완료되지 않아서 스트림을 사용할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-647">The request did not complete, and no stream is available.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="b203a-648"><see cref="M:System.Net.HttpWebRequest.Abort" />가 이전에 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-648"><see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.</span></span>  
  
<span data-ttu-id="b203a-649">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-649">-or-</span></span> 
<span data-ttu-id="b203a-650">이 요청을 처리하는 동안 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-650">An error occurred while processing the request.</span></span></exception>
        <altmember cref="T:System.Net.TransportContext" />
        <altmember cref="M:System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="b203a-651">확장된 보호를 사용하는 Windows 통합 인증</span><span class="sxs-lookup"><span data-stu-id="b203a-651">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndGetResponse">
      <MemberSignature Language="C#" Value="public override System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.WebResponse EndGetResponse(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndGetResponse (asyncResult As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::WebResponse ^ EndGetResponse(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndGetResponse : IAsyncResult -&gt; System.Net.WebResponse" Usage="httpWebRequest.EndGetResponse asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="b203a-652">응답에 대해 보류된 요청입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-652">The pending request for a response.</span></span></param>
        <summary><span data-ttu-id="b203a-653">인터넷 리소스에 대한 비동기 요청을 종료합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-653">Ends an asynchronous request to an Internet resource.</span></span></summary>
        <returns><span data-ttu-id="b203a-654">인터넷 리소스로부터의 응답이 들어 있는 <see cref="T:System.Net.WebResponse" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-654">A <see cref="T:System.Net.WebResponse" /> that contains the response from the Internet resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-655">합니다 <xref:System.Net.HttpWebRequest.EndGetResponse%2A> 메서드를 호출 하 여 시작 된 인터넷 리소스에 대 한 비동기 요청을 완료 합니다 <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b203a-655">The <xref:System.Net.HttpWebRequest.EndGetResponse%2A> method completes an asynchronous request for an Internet resource that was started by calling the <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="b203a-656">호출 해야 합니다는 <xref:System.Net.HttpWebResponse.Close%2A> 방법 스트림을 닫고 연결을 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-656">You must call the <xref:System.Net.HttpWebResponse.Close%2A> method to close the stream and release the connection.</span></span> <span data-ttu-id="b203a-657">이렇게 하지 않으면 연결에서 실행 되도록 응용 프로그램에 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-657">Failure to do so may cause your application to run out of connections.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-658">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-658">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b203a-659">자세한 내용은 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-659">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-660">다음 코드 예제에서는 <xref:System.Net.HttpWebRequest.EndGetResponse%2A> 인터넷 리소스에 대 한 비동기 요청을 종료 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-660">The following code example uses the <xref:System.Net.HttpWebRequest.EndGetResponse%2A> method to end an asynchronous request for an Internet resource.</span></span>  
  
 [!code-cpp[HttpWebRequest_BeginGetResponse#2](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_BeginGetResponse/CPP/httpwebrequest_begingetresponse.cpp#2)]
 [!code-csharp[HttpWebRequest_BeginGetResponse#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_BeginGetResponse/CS/httpwebrequest_begingetresponse.cs#2)]
 [!code-vb[HttpWebRequest_BeginGetResponse#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_BeginGetResponse/VB/httpwebrequest_begingetresponse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b203a-661"><paramref name="asyncResult" />가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-661"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b203a-662">이 메서드가 <paramref name="asyncResult." />를 사용하여 이미 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-662">This method was called previously using <paramref name="asyncResult." /></span></span>  
  
<span data-ttu-id="b203a-663">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-663">-or-</span></span> 
<span data-ttu-id="b203a-664"><see cref="P:System.Net.HttpWebRequest.ContentLength" /> 속성이 0보다 큰데 데이터를 요청 스트림에 쓰지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-664">The <see cref="P:System.Net.HttpWebRequest.ContentLength" /> property is greater than 0 but the data has not been written to the request stream.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="b203a-665"><see cref="M:System.Net.HttpWebRequest.Abort" />가 이전에 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-665"><see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.</span></span>  
  
<span data-ttu-id="b203a-666">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-666">-or-</span></span> 
<span data-ttu-id="b203a-667">이 요청을 처리하는 동안 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-667">An error occurred while processing the request.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b203a-668">현재 인스턴스에서 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />을 호출한 결과 <paramref name="asyncResult" />가 반환되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-668"><paramref name="asyncResult" /> was not returned by the current instance from a call to <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Expect">
      <MemberSignature Language="C#" Value="public string Expect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expect" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Expect" />
      <MemberSignature Language="VB.NET" Value="Public Property Expect As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expect { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Expect : string with get, set" Usage="System.Net.HttpWebRequest.Expect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-669">HTTP <see langword="Expect" /> 헤더의 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-669">Gets or sets the value of the <see langword="Expect" /> HTTP header.</span></span></summary>
        <value><span data-ttu-id="b203a-670">HTTP <see langword="Expect" /> 헤더의 콘텐츠입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-670">The contents of the <see langword="Expect" /> HTTP header.</span></span> <span data-ttu-id="b203a-671">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-671">The default value is <see langword="null" />.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="b203a-672">이 속성의 값은 <see cref="T:System.Net.WebHeaderCollection" />에 저장됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-672">The value for this property is stored in <see cref="T:System.Net.WebHeaderCollection" />.</span></span> <span data-ttu-id="b203a-673">WebHeaderCollection이 설정되면 속성 값이 손실됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-673">If WebHeaderCollection is set, the property value is lost.</span></span>  
  
</para></block></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b203a-674"><see langword="Expect" />가 하위 문자열로 "100-continue"를 포함하는 문자열로 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-674"><see langword="Expect" /> is set to a string that contains "100-continue" as a substring.</span></span></exception>
        <altmember cref="P:System.Net.Configuration.HttpWebRequestElement.MaximumUnauthorizedUploadLength" />
        <related type="Article" href="https://msdn.microsoft.com/library/9d663c4b-07b4-4f6f-9b12-efbd3630354f"><span data-ttu-id="b203a-675">DefaultProxy 요소 (네트워크 설정)</span><span class="sxs-lookup"><span data-stu-id="b203a-675">DefaultProxy Element (Network Settings)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="httpWebRequest.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b203a-676"><see cref="T:System.Net.WebRequest" /> 인스턴스에 대한 해시 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-676">Returns a hash value for a <see cref="T:System.Net.WebRequest" /> instance.</span></span></summary>
        <returns><span data-ttu-id="b203a-677">정수 해시 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-677">An integer hash value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="b203a-678">GetHashCode 메서드는 웹 요청의 해시 코드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-678">The GetHashCode method returns a hash code of the web request.</span></span> <span data-ttu-id="b203a-679">이 값은 해시 테이블에서 키로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-679">This value can be used as a key in hash tables.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="httpWebRequest.GetObjectData (serializationInfo, streamingContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.Obsolete("Serialization is obsoleted for this type.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Serialization is obsoleted for this type.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="b203a-680">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-680">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="b203a-681">이 직렬화의 대상을 지정하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-681">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for this serialization.</span></span></param>
        <summary><span data-ttu-id="b203a-682">대상 개체를 serialize하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-682">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data required to serialize the target object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-683">에 포함 된 모든 개체는 <xref:System.Runtime.Serialization.SerializationInfo> 자동으로 추적 되 고 포맷터가 serialize 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-683">Any objects included in the <xref:System.Runtime.Serialization.SerializationInfo> are automatically tracked and serialized by the formatter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRequestStream">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b203a-684">요청 데이터를 쓰는 데 사용할 <see cref="T:System.IO.Stream" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-684">Gets a <see cref="T:System.IO.Stream" /> object to use to write request data.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRequestStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetRequestStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetRequestStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.GetRequestStream" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRequestStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetRequestStream();" />
      <MemberSignature Language="F#" Value="override this.GetRequestStream : unit -&gt; System.IO.Stream" Usage="httpWebRequest.GetRequestStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b203a-685">요청 데이터를 쓰는 데 사용할 <see cref="T:System.IO.Stream" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-685">Gets a <see cref="T:System.IO.Stream" /> object to use to write request data.</span></span></summary>
        <returns><span data-ttu-id="b203a-686">요청 데이터를 쓰는 데 사용할 <see cref="T:System.IO.Stream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-686">A <see cref="T:System.IO.Stream" /> to use to write request data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-687">합니다 <xref:System.Net.HttpWebRequest.GetRequestStream%2A> 메서드 데이터를 전송 하는 데는 스트림을 반환 합니다 <xref:System.Net.HttpWebRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-687">The <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method returns a stream to use to send data for the <xref:System.Net.HttpWebRequest>.</span></span> <span data-ttu-id="b203a-688">후 합니다 <xref:System.IO.Stream> 반환 된 개체를 사용 하 여 데이터를 보낼 수 있습니다 합니다 <xref:System.Net.HttpWebRequest> 사용 하 여를 <xref:System.IO.Stream.Write%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b203a-688">After the <xref:System.IO.Stream> object has been returned, you can send data with the <xref:System.Net.HttpWebRequest> by using the <xref:System.IO.Stream.Write%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b203a-689">응용 프로그램의 값을 설정 해야 하는 경우는 <xref:System.Net.HttpWebRequest.ContentLength%2A> 속성을이 스트림을 검색 하기 전에 수행 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-689">If an application needs to set the value of the <xref:System.Net.HttpWebRequest.ContentLength%2A> property, then this must be done before retrieving the stream.</span></span>  
  
 <span data-ttu-id="b203a-690">호출 해야 합니다는 <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> 스트림을 닫습니다 재사용에 대 한 연결을 해제 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="b203a-690">You must call the <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> method to close the stream and release the connection for reuse.</span></span> <span data-ttu-id="b203a-691">스트림 닫기에 실패 하면 응용 프로그램을 연결에서 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-691">Failure to close the stream causes your application to run out of connections.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-692">응용 프로그램 특정 요청에 대 한 동기 및 비동기 메서드를 혼합할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-692">Your application cannot mix synchronous and asynchronous methods for a particular request.</span></span> <span data-ttu-id="b203a-693">호출 하는 경우는 <xref:System.Net.HttpWebRequest.GetRequestStream%2A> 를 사용 해야 메서드는 <xref:System.Net.HttpWebRequest.GetResponse%2A> 응답을 검색 하는 방법.</span><span class="sxs-lookup"><span data-stu-id="b203a-693">If you call the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method, you must use the <xref:System.Net.HttpWebRequest.GetResponse%2A> method to retrieve the response.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-694">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-694">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b203a-695">자세한 내용은 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-695">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-696">다음 코드 예제에서는 <xref:System.Net.HttpWebRequest.GetRequestStream%2A> stream 인스턴스를 반환 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-696">The following code example uses the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method to return a stream instance.</span></span>  
  
 [!code-cpp[HttpWebRequest_ContentLength#4](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_ContentLength/CPP/httpwebrequest_contentlength.cpp#4)]
 [!code-csharp[HttpWebRequest_ContentLength#4](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_ContentLength/CS/httpwebrequest_contentlength.cs#4)]
 [!code-vb[HttpWebRequest_ContentLength#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_ContentLength/VB/httpwebrequest_contentlength.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.ProtocolViolationException"><span data-ttu-id="b203a-697"><see cref="P:System.Net.HttpWebRequest.Method" /> 속성이 GET 또는 HEAD인 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-697">The <see cref="P:System.Net.HttpWebRequest.Method" /> property is GET or HEAD.</span></span>  
  
<span data-ttu-id="b203a-698">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-698">-or-</span></span> 
 <span data-ttu-id="b203a-699"><see cref="P:System.Net.HttpWebRequest.KeepAlive" />가 <see langword="true" />이고, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" />이 <see langword="false" />이고, <see cref="P:System.Net.HttpWebRequest.ContentLength" />가 -1이고, <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />이고, <see cref="P:System.Net.HttpWebRequest.Method" />가 POST 또는 PUT인 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-699"><see cref="P:System.Net.HttpWebRequest.KeepAlive" /> is <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> is <see langword="false" />, <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />, and <see cref="P:System.Net.HttpWebRequest.Method" /> is POST or PUT.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b203a-700"><see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> 메서드가 두 번 이상 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-700">The <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> method is called more than once.</span></span>  
  
<span data-ttu-id="b203a-701">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-701">-or-</span></span> 
 <span data-ttu-id="b203a-702"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" />이 값으로 설정되었으며 <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-702"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> is set to a value and <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b203a-703">요청 캐시 유효성 검사기에서 이 요청에 대한 응답이 캐시에서 제공될 수 있지만 데이터를 쓰는 요청의 경우 캐시를 사용하지 않아야 함을 나타내는 경우.</span><span class="sxs-lookup"><span data-stu-id="b203a-703">The request cache validator indicated that the response for this request can be served from the cache; however, requests that write data must not use the cache.</span></span> <span data-ttu-id="b203a-704">이 예외는 제대로 구현되지 않은 사용자 지정 캐시 유효성 검사기를 사용하려는 경우에 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-704">This exception can occur if you are using a custom cache validator that is incorrectly implemented.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="b203a-705"><see cref="M:System.Net.HttpWebRequest.Abort" />가 이전에 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-705"><see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.</span></span>  
  
<span data-ttu-id="b203a-706">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-706">-or-</span></span> 
<span data-ttu-id="b203a-707">요청의 제한 시간이 만료된 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-707">The time-out period for the request expired.</span></span>  
  
<span data-ttu-id="b203a-708">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-708">-or-</span></span> 
<span data-ttu-id="b203a-709">이 요청을 처리하는 동안 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-709">An error occurred while processing the request.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b203a-710">.NET Compact Framework 응용 프로그램에서 콘텐츠 길이가 0인 요청 스트림을 올바르게 가져오고 닫지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="b203a-710">In a .NET Compact Framework application, a request stream with zero content length was not obtained and closed correctly.</span></span> <span data-ttu-id="b203a-711">콘텐츠 길이가 0인 요청을 처리하는 방법에 대한 자세한 내용은 [.NET Compact Framework의 네트워크 프로그래밍](https://msdn.microsoft.com/subscriptions/downloads/1afx2b0f\(v=vs.80\).aspx)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="b203a-711">For more information about handling zero content length requests, see [Network Programming in the .NET Compact Framework](https://msdn.microsoft.com/subscriptions/downloads/1afx2b0f\(v=vs.80\).aspx).</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/9d663c4b-07b4-4f6f-9b12-efbd3630354f"><span data-ttu-id="b203a-712">DefaultProxy 요소 (네트워크 설정)</span><span class="sxs-lookup"><span data-stu-id="b203a-712">DefaultProxy Element (Network Settings)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetRequestStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetRequestStream (out System.Net.TransportContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetRequestStream([out] class System.Net.TransportContext&amp; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRequestStream (ByRef context As TransportContext) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetRequestStream([Runtime::InteropServices::Out] System::Net::TransportContext ^ % context);" />
      <MemberSignature Language="F#" Value="override this.GetRequestStream :  -&gt; System.IO.Stream" Usage="httpWebRequest.GetRequestStream context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Net.TransportContext" RefType="out" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="b203a-713"><see cref="T:System.Net.TransportContext" />에 대한 <see cref="T:System.IO.Stream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-713">The <see cref="T:System.Net.TransportContext" /> for the <see cref="T:System.IO.Stream" />.</span></span></param>
        <summary><span data-ttu-id="b203a-714">요청 데이터를 쓰는 데 사용하는 <see cref="T:System.IO.Stream" /> 개체를 가져오고 해당 스트림과 연결된 <see cref="T:System.Net.TransportContext" />를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-714">Gets a <see cref="T:System.IO.Stream" /> object to use to write request data and outputs the <see cref="T:System.Net.TransportContext" /> associated with the stream.</span></span></summary>
        <returns><span data-ttu-id="b203a-715">요청 데이터를 쓰는 데 사용할 <see cref="T:System.IO.Stream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-715">A <see cref="T:System.IO.Stream" /> to use to write request data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-716"><xref:System.Net.HttpWebRequest.GetRequestStream%2A> 메서드 데이터를 전송 하는 데는 스트림을 반환 합니다 <xref:System.Net.HttpWebRequest> 출력는 <xref:System.Net.TransportContext> 스트림과 연결 된입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-716">The <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method returns a stream to use to send data for the <xref:System.Net.HttpWebRequest> and outputs the <xref:System.Net.TransportContext> associated with the stream.</span></span> <span data-ttu-id="b203a-717">후 합니다 <xref:System.IO.Stream> 반환 된 개체를 사용 하 여 데이터를 보낼 수 있습니다 합니다 <xref:System.Net.HttpWebRequest> 사용 하 여를 <xref:System.IO.Stream.Write%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b203a-717">After the <xref:System.IO.Stream> object has been returned, you can send data with the <xref:System.Net.HttpWebRequest> by using the <xref:System.IO.Stream.Write%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b203a-718">확장 된 보호를 사용 하 여 통합된 Windows 인증을 사용 하는 일부 응용 프로그램에서 사용 하는 전송 계층을 쿼리할 수 해야 <xref:System.Net.HttpWebRequest> 기본 TLS 채널에서의 CBT (채널 바인딩 토큰)를 검색 하기 위해.</span><span class="sxs-lookup"><span data-stu-id="b203a-718">Some applications that use integrated Windows authentication with extended protection may need to be able to query the transport layer used by <xref:System.Net.HttpWebRequest> in order to retrieve the channel binding token (CBT) from the underlying TLS channel.</span></span> <span data-ttu-id="b203a-719">합니다 <xref:System.Net.HttpWebRequest.GetRequestStream%2A> 메서드는 요청 본문을 포함 하는 HTTP 메서드에 대해이 정보에 대 한 액세스를 제공 (`POST` 고 `PUT` 요청).</span><span class="sxs-lookup"><span data-stu-id="b203a-719">The <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method provides access to this information for HTTP methods which have a request body (`POST` and `PUT` requests).</span></span> <span data-ttu-id="b203a-720">응용 프로그램에서 자체 인증을 구현 하는 CBT에 액세스 해야 하는 경우에 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-720">This is only needed if the application is implementing its own authentication and needs access to the CBT.</span></span>  
  
 <span data-ttu-id="b203a-721">응용 프로그램의 값을 설정 해야 하는 경우는 <xref:System.Net.HttpWebRequest.ContentLength%2A> 속성을이 스트림을 검색 하기 전에 수행 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-721">If an application needs to set the value of the <xref:System.Net.HttpWebRequest.ContentLength%2A> property, then this must be done before retrieving the stream.</span></span>  
  
 <span data-ttu-id="b203a-722">호출 해야 합니다는 <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> 스트림을 닫습니다 재사용에 대 한 연결을 해제 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="b203a-722">You must call the <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> method to close the stream and release the connection for reuse.</span></span> <span data-ttu-id="b203a-723">스트림 닫기에 실패 하면 응용 프로그램을 연결에서 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-723">Failure to close the stream causes your application to run out of connections.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-724">응용 프로그램 특정 요청에 대 한 동기 및 비동기 메서드를 혼합할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-724">Your application cannot mix synchronous and asynchronous methods for a particular request.</span></span> <span data-ttu-id="b203a-725">호출 하는 경우는 <xref:System.Net.HttpWebRequest.GetRequestStream%2A> 를 사용 해야 메서드는 <xref:System.Net.HttpWebRequest.GetResponse%2A> 응답을 검색 하는 방법.</span><span class="sxs-lookup"><span data-stu-id="b203a-725">If you call the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method, you must use the <xref:System.Net.HttpWebRequest.GetResponse%2A> method to retrieve the response.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-726">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-726">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b203a-727">자세한 내용은 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-727">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="b203a-728"><see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> 메서드는 <see cref="T:System.IO.Stream" />를 얻을 수 없었습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-728">The <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> method was unable to obtain the <see cref="T:System.IO.Stream" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b203a-729"><see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> 메서드가 두 번 이상 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-729">The <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> method is called more than once.</span></span>  
  
<span data-ttu-id="b203a-730">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-730">-or-</span></span> 
 <span data-ttu-id="b203a-731"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" />이 값으로 설정되었으며 <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-731"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> is set to a value and <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b203a-732">요청 캐시 유효성 검사기에서 이 요청에 대한 응답이 캐시에서 제공될 수 있지만 데이터를 쓰는 요청의 경우 캐시를 사용하지 않아야 함을 나타내는 경우.</span><span class="sxs-lookup"><span data-stu-id="b203a-732">The request cache validator indicated that the response for this request can be served from the cache; however, requests that write data must not use the cache.</span></span> <span data-ttu-id="b203a-733">이 예외는 제대로 구현되지 않은 사용자 지정 캐시 유효성 검사기를 사용하려는 경우에 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-733">This exception can occur if you are using a custom cache validator that is incorrectly implemented.</span></span></exception>
        <exception cref="T:System.Net.ProtocolViolationException"><span data-ttu-id="b203a-734"><see cref="P:System.Net.HttpWebRequest.Method" /> 속성이 GET 또는 HEAD인 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-734">The <see cref="P:System.Net.HttpWebRequest.Method" /> property is GET or HEAD.</span></span>  
  
<span data-ttu-id="b203a-735">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-735">-or-</span></span> 
 <span data-ttu-id="b203a-736"><see cref="P:System.Net.HttpWebRequest.KeepAlive" />가 <see langword="true" />이고, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" />이 <see langword="false" />이고, <see cref="P:System.Net.HttpWebRequest.ContentLength" />가 -1이고, <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />이고, <see cref="P:System.Net.HttpWebRequest.Method" />가 POST 또는 PUT인 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-736"><see cref="P:System.Net.HttpWebRequest.KeepAlive" /> is <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> is <see langword="false" />, <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />, and <see cref="P:System.Net.HttpWebRequest.Method" /> is POST or PUT.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="b203a-737"><see cref="M:System.Net.HttpWebRequest.Abort" />가 이전에 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-737"><see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.</span></span>  
  
<span data-ttu-id="b203a-738">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-738">-or-</span></span> 
<span data-ttu-id="b203a-739">요청의 제한 시간이 만료된 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-739">The time-out period for the request expired.</span></span>  
  
<span data-ttu-id="b203a-740">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-740">-or-</span></span> 
<span data-ttu-id="b203a-741">이 요청을 처리하는 동안 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-741">An error occurred while processing the request.</span></span></exception>
        <altmember cref="T:System.Net.TransportContext" />
        <altmember cref="M:System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="b203a-742">확장된 보호를 사용하는 Windows 통합 인증</span><span class="sxs-lookup"><span data-stu-id="b203a-742">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="public override System.Net.WebResponse GetResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.WebResponse GetResponse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.GetResponse" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetResponse () As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::WebResponse ^ GetResponse();" />
      <MemberSignature Language="F#" Value="override this.GetResponse : unit -&gt; System.Net.WebResponse" Usage="httpWebRequest.GetResponse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b203a-743">인터넷 리소스에서의 응답을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-743">Returns a response from an Internet resource.</span></span></summary>
        <returns><span data-ttu-id="b203a-744">인터넷 리소스로부터의 응답이 들어 있는 <see cref="T:System.Net.WebResponse" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-744">A <see cref="T:System.Net.WebResponse" /> that contains the response from the Internet resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-745">합니다 <xref:System.Net.HttpWebRequest.GetResponse%2A> 메서드가 반환 되는 <xref:System.Net.WebResponse> 인터넷 리소스 로부터의 응답이 들어 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-745">The <xref:System.Net.HttpWebRequest.GetResponse%2A> method returns a <xref:System.Net.WebResponse> object that contains the response from the Internet resource.</span></span> <span data-ttu-id="b203a-746">반환 되는 실제 인스턴스는 <xref:System.Net.HttpWebResponse>, 및 HTTP 관련 속성 액세스 하려면 해당 클래스에 형식 캐스팅 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-746">The actual instance returned is an <xref:System.Net.HttpWebResponse>, and can be typecast to that class to access HTTP-specific properties.</span></span>  
  
 <span data-ttu-id="b203a-747">A <xref:System.Net.ProtocolViolationException> 속성을 설정 하는 경우 여러 경우에 throw 되는 <xref:System.Net.HttpWebRequest> 충돌 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-747">A <xref:System.Net.ProtocolViolationException> is thrown in several cases when the properties set on the <xref:System.Net.HttpWebRequest> class are conflicting.</span></span> <span data-ttu-id="b203a-748">응용 프로그램을 설정 하는 경우이 예외가 발생 합니다 <xref:System.Net.HttpWebRequest.ContentLength%2A> 속성 및 <xref:System.Net.HttpWebRequest.SendChunked%2A> 속성을 `true`, HTTP GET 요청을 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-748">This exception occurs if an application sets the <xref:System.Net.HttpWebRequest.ContentLength%2A> property and the <xref:System.Net.HttpWebRequest.SendChunked%2A> property to `true`, and then sends an HTTP GET request.</span></span> <span data-ttu-id="b203a-749">응용 프로그램이이 지원 되지 않습니다만 HTTP 1.0 프로토콜을 지 원하는 서버에 청크 분할 전송 하려고 하는 경우이 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-749">This exception occurs if an application tries to send chunked to a server that only supports HTTP 1.0 protocol, where this is not supported.</span></span> <span data-ttu-id="b203a-750">응용 프로그램에서 설정 하지 않고 데이터를 전송 하려고 하는 경우이 예외가 발생 합니다 <xref:System.Net.HttpWebRequest.ContentLength%2A> 속성 또는 <xref:System.Net.HttpWebRequest.SendChunked%2A> 됩니다 `false` keepalive 연결에 버퍼링 사용 하지 않도록 설정 하는 경우 및 (합니다 <xref:System.Net.HttpWebRequest.KeepAlive%2A> 속성은 `true`)`.`</span><span class="sxs-lookup"><span data-stu-id="b203a-750">This exception occurs if an application tries to send data without setting the <xref:System.Net.HttpWebRequest.ContentLength%2A> property or the <xref:System.Net.HttpWebRequest.SendChunked%2A> is `false` when buffering is disabled and on a keepalive connection (the <xref:System.Net.HttpWebRequest.KeepAlive%2A> property is `true`)`.`</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="b203a-751">호출 해야 합니다는 <xref:System.Net.HttpWebResponse.Close%2A> 방법 스트림을 닫고 연결을 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-751">You must call the <xref:System.Net.HttpWebResponse.Close%2A> method to close the stream and release the connection.</span></span> <span data-ttu-id="b203a-752">이렇게 하지 않으면 연결에서 실행 되도록 응용 프로그램에 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-752">Failure to do so may cause your application to run out of connections.</span></span>  
  
 <span data-ttu-id="b203a-753">POST 메서드를 사용 하면 여 요청 스트림을 가져오고, 게시 될 데이터를 작성 하며 스트림을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-753">When using the POST method, you must get the request stream, write the data to be posted, and close the stream.</span></span> <span data-ttu-id="b203a-754">게시할; 콘텐츠에 대 한 대기를 차단 하는이 메서드 시간 제한 집합이 있는 경우 해당 호출 스레드는 차단 무기한으로 콘텐츠를 제공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-754">This method blocks waiting for content to post; if there is no time-out set and you do not provide content, the calling thread blocks indefinitely.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-755">여러 번 호출 <xref:System.Net.HttpWebRequest.GetResponse%2A> 동일한 응답 개체를 반환 합니다. 요청은 다시 발급 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-755">Multiple calls to <xref:System.Net.HttpWebRequest.GetResponse%2A> return the same response object; the request is not reissued.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-756">응용 프로그램 특정 요청에 대 한 동기 및 비동기 메서드를 혼합할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-756">Your application cannot mix synchronous and asynchronous methods for a particular request.</span></span> <span data-ttu-id="b203a-757">호출 하는 경우는 <xref:System.Net.HttpWebRequest.GetRequestStream%2A> 를 사용 해야 메서드는 <xref:System.Net.HttpWebRequest.GetResponse%2A> 응답을 검색 하는 방법.</span><span class="sxs-lookup"><span data-stu-id="b203a-757">If you call the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method, you must use the <xref:System.Net.HttpWebRequest.GetResponse%2A> method to retrieve the response.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-758">경우는 <xref:System.Net.WebException> 는 throw를 사용 합니다 <xref:System.Net.WebException.Response%2A> 및 <xref:System.Net.WebException.Status%2A> 서버에서 응답을 확인 하려면 예외의 속성.</span><span class="sxs-lookup"><span data-stu-id="b203a-758">If a <xref:System.Net.WebException> is thrown, use the <xref:System.Net.WebException.Response%2A> and <xref:System.Net.WebException.Status%2A> properties of the exception to determine the response from the server.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-759">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-759">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b203a-760">자세한 내용은 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-760">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-761">쿠키는 보안상의 이유로 기본적으로 비활성화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-761">For security reasons, cookies are disabled by default.</span></span> <span data-ttu-id="b203a-762">사용 하 여 쿠키를 사용 하려는 경우는 <xref:System.Net.HttpWebRequest.CookieContainer%2A> 쿠키를 사용 하도록 설정 하려면 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-762">If you wish to use cookies, use the <xref:System.Net.HttpWebRequest.CookieContainer%2A> property to enable cookies.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-763">다음 코드 예제는 요청에 대 한 응답을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-763">The following code example gets the response for a request.</span></span>  
  
 [!code-cpp[NCLResponse1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLResponse1/CPP/httpwebrequest1.cpp#1)]
 [!code-csharp[NCLResponse1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLResponse1/CS/httpwebrequest1.cs#1)]
 [!code-vb[NCLResponse1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLResponse1/VB/httpwebrequest1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b203a-764">스트림이 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />에 대한 이전 호출에서 이미 사용되고 있는 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-764">The stream is already in use by a previous call to <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</span></span>  
  
<span data-ttu-id="b203a-765">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-765">-or-</span></span> 
 <span data-ttu-id="b203a-766"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" />이 값으로 설정되었으며 <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-766"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> is set to a value and <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />.</span></span></exception>
        <exception cref="T:System.Net.ProtocolViolationException"><span data-ttu-id="b203a-767"><see cref="P:System.Net.HttpWebRequest.Method" />가 GET 또는 HEAD이고, <see cref="P:System.Net.HttpWebRequest.ContentLength" />가 0 이상이거나 <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="true" />인 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-767"><see cref="P:System.Net.HttpWebRequest.Method" /> is GET or HEAD, and either <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is greater or equal to zero or <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="true" />.</span></span>  
  
<span data-ttu-id="b203a-768">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-768">-or-</span></span> 
 <span data-ttu-id="b203a-769"><see cref="P:System.Net.HttpWebRequest.KeepAlive" />가 <see langword="true" />이고, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" />이 <see langword="false" />이고, <see cref="P:System.Net.HttpWebRequest.ContentLength" />가 -1이고, <see cref="P:System.Net.HttpWebRequest.SendChunked" />가 <see langword="false" />이고, <see cref="P:System.Net.HttpWebRequest.Method" />가 POST 또는 PUT인 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-769"><see cref="P:System.Net.HttpWebRequest.KeepAlive" /> is <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> is <see langword="false" />, <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />, and <see cref="P:System.Net.HttpWebRequest.Method" /> is POST or PUT.</span></span>  
  
<span data-ttu-id="b203a-770">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-770">-or-</span></span> 
<span data-ttu-id="b203a-771"><see cref="T:System.Net.HttpWebRequest" />에 엔터티 본문이 있지만 <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> 메서드를 호출하지 않고 <see cref="M:System.Net.HttpWebRequest.GetResponse" /> 메서드가 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-771">The <see cref="T:System.Net.HttpWebRequest" /> has an entity body but the <see cref="M:System.Net.HttpWebRequest.GetResponse" /> method is called without calling the <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> method.</span></span>  
  
<span data-ttu-id="b203a-772">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-772">-or-</span></span> 
<span data-ttu-id="b203a-773"><see cref="P:System.Net.HttpWebRequest.ContentLength" />가 0보다 크지만 애플리케이션에서 약속된 모든 데이터를 쓰지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-773">The <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is greater than zero, but the application does not write all of the promised data.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b203a-774">요청 캐시 유효성 검사기에서 이 요청에 대한 응답이 캐시에서 제공될 수 있지만 이 요청에는 서버로 보낼 데이터가 포함되어 있음을 나타내는 경우.</span><span class="sxs-lookup"><span data-stu-id="b203a-774">The request cache validator indicated that the response for this request can be served from the cache; however, this request includes data to be sent to the server.</span></span> <span data-ttu-id="b203a-775">데이터를 보내는 요청의 경우에는 캐시를 사용하지 말아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-775">Requests that send data must not use the cache.</span></span> <span data-ttu-id="b203a-776">이 예외는 제대로 구현되지 않은 사용자 지정 캐시 유효성 검사기를 사용하려는 경우에 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-776">This exception can occur if you are using a custom cache validator that is incorrectly implemented.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="b203a-777"><see cref="M:System.Net.HttpWebRequest.Abort" />가 이전에 호출되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-777"><see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.</span></span>  
  
<span data-ttu-id="b203a-778">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-778">-or-</span></span> 
<span data-ttu-id="b203a-779">요청의 제한 시간이 만료된 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-779">The time-out period for the request expired.</span></span>  
  
<span data-ttu-id="b203a-780">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-780">-or-</span></span> 
<span data-ttu-id="b203a-781">이 요청을 처리하는 동안 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-781">An error occurred while processing the request.</span></span></exception>
        <altmember cref="P:System.Net.HttpWebRequest.Timeout" />
        <related type="Article" href="https://msdn.microsoft.com/library/9d663c4b-07b4-4f6f-9b12-efbd3630354f"><span data-ttu-id="b203a-782">DefaultProxy 요소 (네트워크 설정)</span><span class="sxs-lookup"><span data-stu-id="b203a-782">DefaultProxy Element (Network Settings)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HaveResponse">
      <MemberSignature Language="C#" Value="public virtual bool HaveResponse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HaveResponse" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.HaveResponse" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HaveResponse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HaveResponse { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HaveResponse : bool" Usage="System.Net.HttpWebRequest.HaveResponse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-783">인터넷 리소스로부터 응답을 받았는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-783">Gets a value that indicates whether a response has been received from an Internet resource.</span></span></summary>
        <value><span data-ttu-id="b203a-784">응답을 받았으면 <see langword="true" />이고, 받지 않았으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-784"><see langword="true" /> if a response has been received; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b203a-785">다음 코드 예제에서는 <xref:System.Net.HttpWebRequest.HaveResponse%2A> 인터넷 리소스에서 응답을 받은 경우를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-785">The following code example checks the <xref:System.Net.HttpWebRequest.HaveResponse%2A> property to determine if a response has been received from an Internet resource.</span></span>  
  
 [!code-cpp[Httpwebrequest_HaveResponse#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Httpwebrequest_HaveResponse/CPP/httpwebrequest_haveresponse.cpp#1)]
 [!code-csharp[Httpwebrequest_HaveResponse#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Httpwebrequest_HaveResponse/CS/httpwebrequest_haveresponse.cs#1)]
 [!code-vb[Httpwebrequest_HaveResponse#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Httpwebrequest_HaveResponse/VB/httpwebrequest_haveresponse.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public override System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Net.WebHeaderCollection with get, set" Usage="System.Net.HttpWebRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-786">HTTP 헤더를 구성하는 이름/값 쌍의 컬렉션을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-786">Specifies a collection of the name/value pairs that make up the HTTP headers.</span></span></summary>
        <value><span data-ttu-id="b203a-787">HTTP 요청의 헤더를 구성하는 이름/값 쌍이 들어 있는 <see cref="T:System.Net.WebHeaderCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-787">A <see cref="T:System.Net.WebHeaderCollection" /> that contains the name/value pairs that make up the headers for the HTTP request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-788"><xref:System.Net.HttpWebRequest.Headers%2A> 요청과 연결 된 프로토콜 헤더를 포함 하는 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-788">The <xref:System.Net.HttpWebRequest.Headers%2A> collection contains the protocol headers associated with the request.</span></span> <span data-ttu-id="b203a-789">다음 표에서에 저장 되지 않은 HTTP 헤더를 <xref:System.Net.HttpWebRequest.Headers%2A> 되지만 컬렉션 시스템에 의해 설정 또는 속성 또는 메서드.</span><span class="sxs-lookup"><span data-stu-id="b203a-789">The following table lists the HTTP headers that are not stored in the <xref:System.Net.HttpWebRequest.Headers%2A> collection but are either set by the system or set by properties or methods.</span></span>  
  
|<span data-ttu-id="b203a-790">Header</span><span class="sxs-lookup"><span data-stu-id="b203a-790">Header</span></span>|<span data-ttu-id="b203a-791">설정한</span><span class="sxs-lookup"><span data-stu-id="b203a-791">Set by</span></span>|  
|------------|------------|  
|<span data-ttu-id="b203a-792">허용</span><span class="sxs-lookup"><span data-stu-id="b203a-792">Accept</span></span>|<span data-ttu-id="b203a-793">설정한는 <xref:System.Net.HttpWebRequest.Accept%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-793">Set by the <xref:System.Net.HttpWebRequest.Accept%2A> property.</span></span>|  
|<span data-ttu-id="b203a-794">연결</span><span class="sxs-lookup"><span data-stu-id="b203a-794">Connection</span></span>|<span data-ttu-id="b203a-795">으로 설정 합니다 <xref:System.Net.HttpWebRequest.Connection%2A> 속성 및 <xref:System.Net.HttpWebRequest.KeepAlive%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-795">Set by the <xref:System.Net.HttpWebRequest.Connection%2A> property and <xref:System.Net.HttpWebRequest.KeepAlive%2A> property.</span></span>|  
|<span data-ttu-id="b203a-796">Content-Length</span><span class="sxs-lookup"><span data-stu-id="b203a-796">Content-Length</span></span>|<span data-ttu-id="b203a-797">설정한는 <xref:System.Net.HttpWebRequest.ContentLength%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-797">Set by the <xref:System.Net.HttpWebRequest.ContentLength%2A> property.</span></span>|  
|<span data-ttu-id="b203a-798">콘텐츠 형식</span><span class="sxs-lookup"><span data-stu-id="b203a-798">Content-Type</span></span>|<span data-ttu-id="b203a-799">설정한는 <xref:System.Net.HttpWebRequest.ContentType%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-799">Set by the <xref:System.Net.HttpWebRequest.ContentType%2A> property.</span></span>|  
|<span data-ttu-id="b203a-800">예상</span><span class="sxs-lookup"><span data-stu-id="b203a-800">Expect</span></span>|<span data-ttu-id="b203a-801">설정한는 <xref:System.Net.HttpWebRequest.Expect%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-801">Set by the <xref:System.Net.HttpWebRequest.Expect%2A> property.</span></span>|  
|<span data-ttu-id="b203a-802">날짜</span><span class="sxs-lookup"><span data-stu-id="b203a-802">Date</span></span>|<span data-ttu-id="b203a-803">설정한는 <xref:System.Net.HttpWebRequest.Date%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-803">Set by the <xref:System.Net.HttpWebRequest.Date%2A> property.</span></span>|  
|<span data-ttu-id="b203a-804">호스트</span><span class="sxs-lookup"><span data-stu-id="b203a-804">Host</span></span>|<span data-ttu-id="b203a-805">설정한는 <xref:System.Net.HttpWebRequest.Host%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-805">Set by the <xref:System.Net.HttpWebRequest.Host%2A> property.</span></span>|  
|<span data-ttu-id="b203a-806">If-수정-이후</span><span class="sxs-lookup"><span data-stu-id="b203a-806">If-Modified-Since</span></span>|<span data-ttu-id="b203a-807">설정한는 <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-807">Set by the <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property.</span></span>|  
|<span data-ttu-id="b203a-808">범위</span><span class="sxs-lookup"><span data-stu-id="b203a-808">Range</span></span>|<span data-ttu-id="b203a-809">설정한는 <xref:System.Net.HttpWebRequest.AddRange%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b203a-809">Set by the <xref:System.Net.HttpWebRequest.AddRange%2A> method.</span></span>|  
|<span data-ttu-id="b203a-810">참조 자</span><span class="sxs-lookup"><span data-stu-id="b203a-810">Referer</span></span>|<span data-ttu-id="b203a-811">설정한는 <xref:System.Net.HttpWebRequest.Referer%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-811">Set by the <xref:System.Net.HttpWebRequest.Referer%2A> property.</span></span>|  
|<span data-ttu-id="b203a-812">전송 인코딩</span><span class="sxs-lookup"><span data-stu-id="b203a-812">Transfer-Encoding</span></span>|<span data-ttu-id="b203a-813">으로 설정 합니다 <xref:System.Net.HttpWebRequest.TransferEncoding%2A> 속성 (의 <xref:System.Net.HttpWebRequest.SendChunked%2A> 속성이 true 여야 합니다).</span><span class="sxs-lookup"><span data-stu-id="b203a-813">Set by the <xref:System.Net.HttpWebRequest.TransferEncoding%2A> property (the <xref:System.Net.HttpWebRequest.SendChunked%2A> property must be true).</span></span>|  
|<span data-ttu-id="b203a-814">사용자 에이전트</span><span class="sxs-lookup"><span data-stu-id="b203a-814">User-Agent</span></span>|<span data-ttu-id="b203a-815">설정한는 <xref:System.Net.HttpWebRequest.UserAgent%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-815">Set by the <xref:System.Net.HttpWebRequest.UserAgent%2A> property.</span></span>|  
  
 <span data-ttu-id="b203a-816">합니다 <xref:System.Net.WebHeaderCollection.Add%2A> 메서드가 throw는 <xref:System.ArgumentException> 보호 되는 이러한 헤더 중 하나를 설정 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="b203a-816">The <xref:System.Net.WebHeaderCollection.Add%2A> method throws an <xref:System.ArgumentException> if you try to set one of these protected headers.</span></span>  
  
 <span data-ttu-id="b203a-817">변경 합니다 <xref:System.Net.HttpWebRequest.Headers%2A> 를 호출 하 여 요청이 시작 된 후 속성 <xref:System.Net.HttpWebRequest.GetRequestStream%2A>, <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.HttpWebRequest.GetResponse%2A>, 또는 <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> 메서드가 throw는 <xref:System.InvalidOperationException>합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-817">Changing the <xref:System.Net.HttpWebRequest.Headers%2A> property after the request has been started by calling <xref:System.Net.HttpWebRequest.GetRequestStream%2A>, <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.HttpWebRequest.GetResponse%2A>, or <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="b203a-818">웹 서버 캐시 변경할 수도 있고 웹 요청에 헤더를 추가 하기 때문에 헤더 값을 변경 되지 가정 하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-818">You should not assume that the header values will remain unchanged, because Web servers and caches may change or add headers to a Web request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-819">다음 코드 예제에서는 <xref:System.Net.HttpWebRequest.Headers%2A> 속성을 콘솔에 HTTP 헤더 이름/값 쌍을 인쇄 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-819">The following code example uses the <xref:System.Net.HttpWebRequest.Headers%2A> property to print the HTTP header name/value pairs to the console.</span></span>  
  
 [!code-cpp[HttpWebRequest_Headers#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_Headers/CPP/httpwebrequest_headers.cpp#1)]
 [!code-csharp[HttpWebRequest_Headers#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_Headers/CS/httpwebrequest_headers.cs#1)]
 [!code-vb[HttpWebRequest_Headers#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_Headers/VB/httpwebrequest_headers.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b203a-820"><see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" /> 또는 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> 메서드를 호출하여 요청이 시작되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-820">The request has been started by calling the <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" />, or <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Host" />
      <MemberSignature Language="VB.NET" Value="Public Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Host : string with get, set" Usage="System.Net.HttpWebRequest.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-821">요청 URI와 독립적인 HTTP 요청에 사용할 Host 헤더 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-821">Gets or sets the Host header value to use in an HTTP request independent from the request URI.</span></span></summary>
        <value><span data-ttu-id="b203a-822">HTTP 요청의 Host 헤더 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-822">The Host header value in the HTTP request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-823"><xref:System.Net.HttpWebRequest.Host%2A> 호스트 헤더 값은 요청 URI와에서 독립적인 HTTP 요청에서 사용 하도록 설정 하려면 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-823">The <xref:System.Net.HttpWebRequest.Host%2A> property can be used to set the Host header value to use in an HTTP request independent from the request URI.</span></span> <span data-ttu-id="b203a-824"><xref:System.Net.HttpWebRequest.Host%2A> 속성 호스트 이름 및 선택적 포트 번호를 구성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-824">The <xref:System.Net.HttpWebRequest.Host%2A> property can consist of a hostname and an optional port number.</span></span> <span data-ttu-id="b203a-825">포트 정보가 없는 호스트 헤더는 요청 된 서비스 (포트 80 HTTP URL에 대 한 예를 들어)에 대 한 기본 포트를 의미합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-825">A Host header without port information implies the default port for the service requested (port 80 for an HTTP URL, for example).</span></span>  
  
 <span data-ttu-id="b203a-826">호스트 및 포트를 지정 하는 형식을 IETF에서 게시 RFC2616의 14.23에서 규칙을 따라야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-826">The format for specifying a host and port must follow the rules in section 14.23 of RFC2616 published by the IETF.</span></span> <span data-ttu-id="b203a-827">이러한 요구 사항을 준수 하 고 8080 포트를 지정 하는 예를 들어 수에 대해 다음 값을 <xref:System.Net.HttpWebRequest.Host%2A> 속성:</span><span class="sxs-lookup"><span data-stu-id="b203a-827">An example complying with these requirements that specifies a port of 8080 would be the following value for the <xref:System.Net.HttpWebRequest.Host%2A> property:</span></span>  
  
 `www.contoso.com:8080`  
  
 <span data-ttu-id="b203a-828">사용 하는 <xref:System.Net.HttpWebRequest.Host%2A> 속성을 명시적으로 사용자 지정 호스트 헤더 값을도 영향을 줍니다 캐싱 영역, 쿠키 및 인증 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-828">Using the <xref:System.Net.HttpWebRequest.Host%2A> property to explicitly specify a custom Host header value also affects areas caching, cookies, and authentication.</span></span> <span data-ttu-id="b203a-829">특정 URI 접두사에 대 한 자격 증명을 제공 하는 응용 프로그램, 응용 프로그램에서 URI에 있는 대상 서버가 아닌 호스트 헤더의 값이 포함 된 URI를 사용 하도록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-829">When an application provides credentials for a specific URI prefix, the applications needs to make sure to use the URI containing the value of the Host header, not the target server in the URI.</span></span> <span data-ttu-id="b203a-830">리소스를 캐시 하는 경우 사용 된 키에는 요청 URI 대신 호스트 헤더 값을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-830">The key used when caching resources, uses the Host header value rather than the request URI.</span></span> <span data-ttu-id="b203a-831">쿠키에 저장 되는 <xref:System.Net.CookieContainer> 서버 도메인 이름으로 논리적으로 그룹화 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-831">Cookies are stored in a <xref:System.Net.CookieContainer> and logically grouped by the server domain name.</span></span> <span data-ttu-id="b203a-832">응용 프로그램 호스트 헤더를 지정 하는 경우이 값이 도메인으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-832">If the application specifies a Host header, then this value will be used as domain.</span></span>  
  
 <span data-ttu-id="b203a-833">경우는 <xref:System.Net.HttpWebRequest.Host%2A> 속성을 설정 하지 않으면 다음 HTTP 요청에 사용할 호스트 헤더 값은 요청 URI에 기반 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-833">If the <xref:System.Net.HttpWebRequest.Host%2A> property is not set, then the Host header value to use in an HTTP request is based on the request URI.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b203a-834">호스트 헤더는 <see langword="null" />로 설정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-834">The Host header cannot be set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b203a-835">호스트 헤더 잘못된 값으로 설정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-835">The Host header cannot be set to an invalid value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b203a-836"><see cref="T:System.Net.HttpWebRequest" />가 이미 전송되기 시작한 다음에는 호스트 헤더를 설정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-836">The Host header cannot be set after the <see cref="T:System.Net.HttpWebRequest" /> has already started to be sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IfModifiedSince">
      <MemberSignature Language="C#" Value="public DateTime IfModifiedSince { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime IfModifiedSince" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.IfModifiedSince" />
      <MemberSignature Language="VB.NET" Value="Public Property IfModifiedSince As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime IfModifiedSince { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.IfModifiedSince : DateTime with get, set" Usage="System.Net.HttpWebRequest.IfModifiedSince" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-837">HTTP <see langword="If-Modified-Since" /> 헤더의 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-837">Gets or sets the value of the <see langword="If-Modified-Since" /> HTTP header.</span></span></summary>
        <value><span data-ttu-id="b203a-838"><see langword="If-Modified-Since" /> HTTP 헤더의 콘텐츠가 들어 있는 <see cref="T:System.DateTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-838">A <see cref="T:System.DateTime" /> that contains the contents of the <see langword="If-Modified-Since" /> HTTP header.</span></span> <span data-ttu-id="b203a-839">기본값이 현재 날짜와 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-839">The default value is the current date and time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-840"><xref:System.Net.HttpWebRequest.IfModifiedSince%2A> 속성은 표준 <xref:System.DateTime?displayProperty=nameWithType> 개체를 포함할 수 있습니다는 <xref:System.DateTimeKind?displayProperty=nameWithType> 필드 <xref:System.DateTimeKind.Local?displayProperty=nameWithType>를 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, 또는 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-840">The <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property is a standard <xref:System.DateTime?displayProperty=nameWithType> object and can contain a <xref:System.DateTimeKind?displayProperty=nameWithType> field of <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, or <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b203a-841">사용 하는 경우 모든 종류의 시간을 설정할 수는 <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-841">Any kind of time can be set when using the <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property.</span></span> <span data-ttu-id="b203a-842">하는 경우 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> 를 설정 하거나 검색 합니다 <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> 속성으로 간주 됩니다 <xref:System.DateTimeKind.Local?displayProperty=nameWithType> (현지 시간).</span><span class="sxs-lookup"><span data-stu-id="b203a-842">If <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> is set or retrieved, the <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property is assumed to be <xref:System.DateTimeKind.Local?displayProperty=nameWithType> (local time).</span></span>  
  
 <span data-ttu-id="b203a-843">클래스는 <xref:System.Net> 네임 스페이스 항상 코드를 작성 합니다 <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> GMT (Utc) 형식을 사용 하 여 표준 형태로 전송 하는 동안 통신 중에는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-843">The classes in the <xref:System.Net> namespace always write it out the <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property on the wire during transmission in standard form using GMT (Utc) format.</span></span>  
  
 <span data-ttu-id="b203a-844">경우는 <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> 속성이 <xref:System.DateTime.MinValue?displayProperty=nameWithType>, 해당 `If-Modified-Since` HTTP 헤더에서 제거 됩니다는 <xref:System.Net.HttpWebRequest.Headers%2A> 속성 및 <xref:System.Net.WebHeaderCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-844">If the <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property is set to <xref:System.DateTime.MinValue?displayProperty=nameWithType>, then the `If-Modified-Since` HTTP header is removed from the <xref:System.Net.HttpWebRequest.Headers%2A> property and the <xref:System.Net.WebHeaderCollection>.</span></span>  
  
 <span data-ttu-id="b203a-845">경우는 <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> 속성은 <xref:System.DateTime.MinValue?displayProperty=nameWithType>, 있음을 나타냅니다 합니다 `If-Modified-Since` HTTP 헤더에 포함 되지 않습니다는 <xref:System.Net.HttpWebRequest.Headers%2A> 속성 및 <xref:System.Net.WebHeaderCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-845">If the <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property is <xref:System.DateTime.MinValue?displayProperty=nameWithType>, this indicates that the `If-Modified-Since` HTTP header is not included in the <xref:System.Net.HttpWebRequest.Headers%2A> property and the <xref:System.Net.WebHeaderCollection>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-846">이 속성의 값은 <xref:System.Net.WebHeaderCollection>에 저장됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-846">The value for this property is stored in <xref:System.Net.WebHeaderCollection>.</span></span> <span data-ttu-id="b203a-847">WebHeaderCollection이 설정되면 속성 값이 손실됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-847">If WebHeaderCollection is set, the property value is lost.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-848">다음 코드 예제에서는 <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-848">The following code example checks the <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property.</span></span>  
  
 [!code-cpp[HttpWebRequest_IfModifiedSince#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_IfModifiedSince/CPP/httpwebrequest_ifmodifiedsince.cpp#1)]
 [!code-csharp[HttpWebRequest_IfModifiedSince#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_IfModifiedSince/CS/httpwebrequest_ifmodifiedsince.cs#1)]
 [!code-vb[HttpWebRequest_IfModifiedSince#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_IfModifiedSince/VB/httpwebrequest_ifmodifiedsince.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlive : bool with get, set" Usage="System.Net.HttpWebRequest.KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-849">인터넷 리소스에 영구 연결을 할 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-849">Gets or sets a value that indicates whether to make a persistent connection to the Internet resource.</span></span></summary>
        <value><span data-ttu-id="b203a-850">인터넷 리소스에 대한 요청의 <see langword="true" /> HTTP 헤더 값이 Keep-alive이면 <see langword="Connection" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-850"><see langword="true" /> if the request to the Internet resource should contain a <see langword="Connection" /> HTTP header with the value Keep-alive; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b203a-851">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-851">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-852">이 속성을 설정 `true` 보낼는 `Connection` HTTP 헤더의 값을 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-852">Set this property to `true` to send a `Connection` HTTP header with the value Keep-alive.</span></span> <span data-ttu-id="b203a-853">응용 프로그램에 사용 하 여 <xref:System.Net.HttpWebRequest.KeepAlive%2A> 영구 연결에 대 한 기본 설정을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-853">An application uses <xref:System.Net.HttpWebRequest.KeepAlive%2A> to indicate a preference for persistent connections.</span></span> <span data-ttu-id="b203a-854">경우는 <xref:System.Net.HttpWebRequest.KeepAlive%2A> 속성은 `true`, 응용 프로그램은 지 원하는 서버에 대 한 영구 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-854">When the <xref:System.Net.HttpWebRequest.KeepAlive%2A> property is `true`, the application makes persistent connections to the servers that support them.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-855">HTTP/1.1을 사용 하는 경우 Keep-alive 기본적으로 켜져 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-855">When using HTTP/1.1, Keep-Alive is on by default.</span></span> <span data-ttu-id="b203a-856">설정 <xref:System.Net.HttpWebRequest.KeepAlive%2A> 하 `false` 전송 될 수 있습니다는 `Connection: Close` 서버로 헤더입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-856">Setting <xref:System.Net.HttpWebRequest.KeepAlive%2A> to `false` may result in sending a `Connection: Close` header to the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-857">다음 코드 예제에서는 합니다 <xref:System.Net.HttpWebRequest.KeepAlive%2A> 속성을 `false` 인터넷 리소스를 사용 하 여 영구 연결을 설정 하지 않으려면입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-857">The following code example sets the <xref:System.Net.HttpWebRequest.KeepAlive%2A> property to `false` to avoid establishing a persistent connection with the Internet resource.</span></span>  
  
 [!code-cpp[HttpWebRequest_Connection#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_Connection/CPP/httpwebrequest_connection.cpp#1)]
 [!code-csharp[HttpWebRequest_Connection#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_Connection/CS/httpwebrequest_connection.cs#1)]
 [!code-vb[HttpWebRequest_Connection#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_Connection/VB/httpwebrequest_connection.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumAutomaticRedirections">
      <MemberSignature Language="C#" Value="public int MaximumAutomaticRedirections { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumAutomaticRedirections" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.MaximumAutomaticRedirections" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumAutomaticRedirections As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumAutomaticRedirections { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumAutomaticRedirections : int with get, set" Usage="System.Net.HttpWebRequest.MaximumAutomaticRedirections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-858">요청이 따르는 최대 리디렉션 수를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-858">Gets or sets the maximum number of redirects that the request follows.</span></span></summary>
        <value><span data-ttu-id="b203a-859">요청이 따르는 최대 리디렉션 응답 수입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-859">The maximum number of redirection responses that the request follows.</span></span> <span data-ttu-id="b203a-860">기본값은 50입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-860">The default value is 50.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-861"><xref:System.Net.HttpWebRequest.MaximumAutomaticRedirections%2A> 되는 경우 따라야 하는 요청에 대 한 리디렉션의 최대 수를 설정 하는 속성을 <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> 속성은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-861">The <xref:System.Net.HttpWebRequest.MaximumAutomaticRedirections%2A> property sets the maximum number of redirections for the request to follow if the <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-862">다음 코드 예제에서는이 속성의 값을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-862">The following code example sets the value of this property.</span></span>  
  
 [!code-cpp[NCLResponse1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLResponse1/CPP/httpwebrequest1.cpp#1)]
 [!code-csharp[NCLResponse1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLResponse1/CS/httpwebrequest1.cs#1)]
 [!code-vb[NCLResponse1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLResponse1/VB/httpwebrequest1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b203a-863">값이 0 이하로 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-863">The value is set to 0 or less.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumResponseHeadersLength">
      <MemberSignature Language="C#" Value="public int MaximumResponseHeadersLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumResponseHeadersLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumResponseHeadersLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumResponseHeadersLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumResponseHeadersLength : int with get, set" Usage="System.Net.HttpWebRequest.MaximumResponseHeadersLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Use this")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-864">응답 헤더의 허용되는 최대 길이를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-864">Gets or sets the maximum allowed length of the response headers.</span></span></summary>
        <value><span data-ttu-id="b203a-865">응답 헤더의 킬로바이트(1024바이트) 단위 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-865">The length, in kilobytes (1024 bytes), of the response headers.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-866">응답 헤더 길이 응답 상태 줄 및 HTTP 프로토콜의 일부로 받은 추가 제어 문자를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-866">The length of the response header includes the response status line and any extra control characters that are received as part of HTTP protocol.</span></span> <span data-ttu-id="b203a-867">값이-1 이면 응답 헤더;에 제한 되지 않습니다 0 이면 모든 요청이 실패 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-867">A value of -1 means no limit is imposed on the response headers; a value of 0 means that all requests fail.</span></span>  
  
 <span data-ttu-id="b203a-868">경우는 <xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A> 속성이 명시적으로 설정 되지 않은의 값을 기본적으로 <xref:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-868">If the <xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A> property is not explicitly set, it defaults to the value of the <xref:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength%2A> property.</span></span>  
  
 <span data-ttu-id="b203a-869">받은 응답 헤더 길이 값을 초과할 경우는 <xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A> 속성을 <xref:System.Net.HttpWebRequest.EndGetResponse%2A> 또는 <xref:System.Net.HttpWebRequest.GetResponse%2A> 메서드를 발생 시킵니다를 <xref:System.Net.WebException> 사용 하 여는 <xref:System.Net.WebException.Status%2A> 속성이로 설정 <xref:System.Net.WebExceptionStatus.MessageLengthLimitExceeded>.</span><span class="sxs-lookup"><span data-stu-id="b203a-869">If the length of the response header received exceeds the value of the <xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A> property, the <xref:System.Net.HttpWebRequest.EndGetResponse%2A> or <xref:System.Net.HttpWebRequest.GetResponse%2A> methods will throw a <xref:System.Net.WebException> with the <xref:System.Net.WebException.Status%2A> property set to <xref:System.Net.WebExceptionStatus.MessageLengthLimitExceeded>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-870">다음 코드 예제에서는이 속성의 값을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-870">The following code example sets the value of this property.</span></span>  
  
 [!code-cpp[NCLResponse1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLResponse1/CPP/httpwebrequest1.cpp#1)]
 [!code-csharp[NCLResponse1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLResponse1/CS/httpwebrequest1.cs#1)]
 [!code-vb[NCLResponse1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLResponse1/VB/httpwebrequest1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b203a-871">요청이 제출된 후에 속성이 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-871">The property is set after the request has already been submitted.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b203a-872">값이 0보다 작고 -1이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-872">The value is less than 0 and is not equal to -1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MediaType">
      <MemberSignature Language="C#" Value="public string MediaType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MediaType" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.MediaType" />
      <MemberSignature Language="VB.NET" Value="Public Property MediaType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MediaType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MediaType : string with get, set" Usage="System.Net.HttpWebRequest.MediaType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-873">요청의 미디어 형식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-873">Gets or sets the media type of the request.</span></span></summary>
        <value><span data-ttu-id="b203a-874">요청의 미디어 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-874">The media type of the request.</span></span> <span data-ttu-id="b203a-875">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-875">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-876">값을 <xref:System.Net.HttpWebRequest.MediaType%2A> 속성에 영향을 줍니다는 <xref:System.Net.HttpWebResponse.CharacterSet%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-876">The value of the <xref:System.Net.HttpWebRequest.MediaType%2A> property affects the <xref:System.Net.HttpWebResponse.CharacterSet%2A> property.</span></span> <span data-ttu-id="b203a-877">설정한 경우 합니다 <xref:System.Net.HttpWebRequest.MediaType%2A> 요청에서 해당 미디어 형식을 응답에 반환 하는 문자 집합의 목록에서 선택 됩니다 `Content-type` HTTP 헤더입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-877">When you set the <xref:System.Net.HttpWebRequest.MediaType%2A> in the request, the corresponding media type is chosen from the list of character sets returned in the response `Content-type` HTTP header.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public override string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Method" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.Net.HttpWebRequest.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-878">요청에 대한 메서드를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-878">Gets or sets the method for the request.</span></span></summary>
        <value><span data-ttu-id="b203a-879">인터넷 리소스에 접속하는 데 사용할 요청 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-879">The request method to use to contact the Internet resource.</span></span> <span data-ttu-id="b203a-880">기본값은 GET입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-880">The default value is GET.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-881"><xref:System.Net.HttpWebRequest.Method%2A> HTTP 1.1 프로토콜 동사 중 하나에 속성을 설정할 수 있습니다. GET, HEAD, POST, PUT, 추적 또는 옵션 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-881">The <xref:System.Net.HttpWebRequest.Method%2A> property can be set to any of the HTTP 1.1 protocol verbs: GET, HEAD, POST, PUT, DELETE, TRACE, or OPTIONS.</span></span>  
  
 <span data-ttu-id="b203a-882">경우는 <xref:System.Net.HttpWebRequest.ContentLength%2A> 속성이-1 이외의 값으로 설정 되는 <xref:System.Net.HttpWebRequest.Method%2A> 데이터를 업로드 하는 프로토콜 속성에 속성을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-882">If the <xref:System.Net.HttpWebRequest.ContentLength%2A> property is set to any value other than -1, the <xref:System.Net.HttpWebRequest.Method%2A> property must be set to a protocol property that uploads data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-883">다음 코드 예제에서는 <xref:System.Net.HttpWebRequest.Method%2A> 게시물에는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-883">The following code example sets the <xref:System.Net.HttpWebRequest.Method%2A> property to POST.</span></span>  
  
 [!code-cpp[HttpWebRequest_ContentLength#4](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_ContentLength/CPP/httpwebrequest_contentlength.cpp#4)]
 [!code-csharp[HttpWebRequest_ContentLength#4](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_ContentLength/CS/httpwebrequest_contentlength.cs#4)]
 [!code-vb[HttpWebRequest_ContentLength#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_ContentLength/VB/httpwebrequest_contentlength.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b203a-884">메서드를 지정하지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-884">No method is supplied.</span></span>  
  
<span data-ttu-id="b203a-885">또는</span><span class="sxs-lookup"><span data-stu-id="b203a-885">-or-</span></span> 
<span data-ttu-id="b203a-886">메서드 문자열에 잘못된 문자가 들어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-886">The method string contains invalid characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Pipelined">
      <MemberSignature Language="C#" Value="public bool Pipelined { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Pipelined" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Pipelined" />
      <MemberSignature Language="VB.NET" Value="Public Property Pipelined As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Pipelined { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Pipelined : bool with get, set" Usage="System.Net.HttpWebRequest.Pipelined" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-887">요청을 인터넷 리소스에 파이프라인할 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-887">Gets or sets a value that indicates whether to pipeline the request to the Internet resource.</span></span></summary>
        <value><span data-ttu-id="b203a-888">요청을 파이프라인해야 하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-888"><see langword="true" /> if the request should be pipelined; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b203a-889">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-889">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-890">응용 프로그램이 사용 하 여 <xref:System.Net.HttpWebRequest.Pipelined%2A> 파이프라인된 연결에 대 한 기본 설정을 나타내는 속성을 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-890">An application uses the <xref:System.Net.HttpWebRequest.Pipelined%2A> property to indicate a preference for pipelined connections.</span></span> <span data-ttu-id="b203a-891">때 <xref:System.Net.HttpWebRequest.Pipelined%2A> 는 `true`, 응용 프로그램에서 지 원하는 서버에 연결할 파이프라인.</span><span class="sxs-lookup"><span data-stu-id="b203a-891">When <xref:System.Net.HttpWebRequest.Pipelined%2A> is `true`, an application makes pipelined connections to the servers that support them.</span></span>  
  
 <span data-ttu-id="b203a-892">파이프라인 연결 하는 경우에만 합니다 <xref:System.Net.HttpWebRequest.KeepAlive%2A> 속성도 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-892">Pipelined connections are made only when the <xref:System.Net.HttpWebRequest.KeepAlive%2A> property is also `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-893">다음 코드 예제에서는 값을 인쇄 합니다 <xref:System.Net.HttpWebRequest.Pipelined%2A> 콘솔에는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-893">The following code example prints the value of the <xref:System.Net.HttpWebRequest.Pipelined%2A> property to the console.</span></span>  
  
 [!code-cpp[HttpWebRequest_PipeLined#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_PipeLined/CPP/httpwebrequest_pipelined.cpp#1)]
 [!code-csharp[HttpWebRequest_PipeLined#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_PipeLined/CS/httpwebrequest_pipelined.cs#1)]
 [!code-vb[HttpWebRequest_PipeLined#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_PipeLined/VB/httpwebrequest_pipelined.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public override bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.Net.HttpWebRequest.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-894">요청과 함께 인증 헤더를 보낼 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-894">Gets or sets a value that indicates whether to send an Authorization header with the request.</span></span></summary>
        <value><span data-ttu-id="b203a-895">인증을 수행한 이후 요청과 함께 HTTP 권한 부여 헤더를 함께 보내는 경우 <see langword="true" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-895"><see langword="true" /> to send an  HTTP Authorization header with requests after authentication has taken place; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b203a-896">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-896">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-897">특정 클라이언트 요청 후 <xref:System.Uri> 가 성공적으로 인증 하는 경우 <xref:System.Net.HttpWebRequest.PreAuthenticate%2A> 됩니다 `true` 자격 증명이 제공, 권한 부여 헤더에 각 요청과 함께 전송 되 고 <xref:System.Uri> 일치 하는 특정 <xref:System.Uri>마지막 슬래시까지 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-897">After a client request to a specific <xref:System.Uri> is successfully authenticated, if <xref:System.Net.HttpWebRequest.PreAuthenticate%2A> is `true` and credentials are supplied, the Authorization header is sent with each request to any <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash.</span></span> <span data-ttu-id="b203a-898">특정 클라이언트 요청이 성공적으로 인증 하면 <xref:System.Uri> 다음을 포함 하는:</span><span class="sxs-lookup"><span data-stu-id="b203a-898">So if the client request successfully authenticated to a specific <xref:System.Uri> that contains the following:</span></span>  
  
 `http://www.contoso.com/firstpath/`  
  
 <span data-ttu-id="b203a-899">사전 인증에 대 한 권한 부여 헤더는 다음 중 하나에 각 요청과 함께 전송 되는 다음 <xref:System.Uri> 인스턴스:</span><span class="sxs-lookup"><span data-stu-id="b203a-899">Then the Authorization header for preauthentication is sent with each request to any of the following <xref:System.Uri> instances:</span></span>  
  
 `http://www.contoso.com/firstpath/`  
  
 `http://www.contoso.com/firstpath/default`  
  
 `http://www.contoso.com/firstpath/default.html`  
  
 `http://www.contoso.com/firstpath/sample.html`  
  
 <span data-ttu-id="b203a-900">그러나 권한 부여 헤더를 보내지 요청을 사용 하 여 다음 중 하나에 <xref:System.Uri> 인스턴스:</span><span class="sxs-lookup"><span data-stu-id="b203a-900">However, the Authorization header is not sent with requests to any of the following <xref:System.Uri> instances:</span></span>  
  
 `http://www.contoso.com/`  
  
 `http://www.contoso.com/firstpath`  
  
 `http://www.contoso.com/secondpath/`  
  
 <span data-ttu-id="b203a-901">특정 클라이언트 요청 하는 경우 <xref:System.Uri> 는 표준 인증 프로시저를 사용 하 여 요청 되지 성공적으로 인증 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-901">If the client request to a specific <xref:System.Uri> is not successfully authenticated, the request uses standard authentication procedures.</span></span>  
  
 <span data-ttu-id="b203a-902">첫 번째 요청을 제외 하 고는 <xref:System.Net.WebRequest.PreAuthenticate%2A> 속성은 이후 요청에 인증 정보를 보낼지 여부를 나타냅니다는 <xref:System.Uri> 일치 하는 특정 <xref:System.Uri> 하기 위해 대기 하지 않고 마지막 슬래시까지 서버에서 요구 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-902">With the exception of the first request, the <xref:System.Net.WebRequest.PreAuthenticate%2A> property indicates whether to send authentication information with subsequent requests to a <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash without waiting to be challenged by the server.</span></span>  
  
 <span data-ttu-id="b203a-903">클라이언트와 서버 간에 다음 대화 상자에서는이 속성의 효과를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-903">The following dialog between client and server illustrates the effect of this property.</span></span> <span data-ttu-id="b203a-904">대화 상자는 기본 인증을 사용 하 여 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-904">The dialog assumes that basic authentication is in use.</span></span>  
  
 <span data-ttu-id="b203a-905"><xref:System.Net.HttpWebRequest.PreAuthenticate%2A> `false`:</span><span class="sxs-lookup"><span data-stu-id="b203a-905"><xref:System.Net.HttpWebRequest.PreAuthenticate%2A> is `false`:</span></span>  
  
 <span data-ttu-id="b203a-906">클라이언트 SomeUrl 가져오기</span><span class="sxs-lookup"><span data-stu-id="b203a-906">Client: GET someUrl</span></span>  
  
 <span data-ttu-id="b203a-907">서버: 401 Www-authenticate Basic</span><span class="sxs-lookup"><span data-stu-id="b203a-907">Server: 401 WWW-Authenticate Basic</span></span>  
  
 <span data-ttu-id="b203a-908">클라이언트 권한 부여 헤더를 사용 하 여 가져오기</span><span class="sxs-lookup"><span data-stu-id="b203a-908">Client: GET with Authorization headers</span></span>  
  
 <span data-ttu-id="b203a-909">서버: 200 정상</span><span class="sxs-lookup"><span data-stu-id="b203a-909">Server: 200 OK</span></span>  
  
 <span data-ttu-id="b203a-910">클라이언트 SomeUrl 가져오기</span><span class="sxs-lookup"><span data-stu-id="b203a-910">Client: GET someUrl</span></span>  
  
 <span data-ttu-id="b203a-911">서버: 401 Www-authenticate Basic</span><span class="sxs-lookup"><span data-stu-id="b203a-911">Server: 401 WWW-Authenticate Basic</span></span>  
  
 <span data-ttu-id="b203a-912">클라이언트 권한 부여 헤더를 사용 하 여 가져오기</span><span class="sxs-lookup"><span data-stu-id="b203a-912">Client: GET with Authorization headers</span></span>  
  
 <span data-ttu-id="b203a-913">서버: 200 정상</span><span class="sxs-lookup"><span data-stu-id="b203a-913">Server: 200 OK</span></span>  
  
 <span data-ttu-id="b203a-914"><xref:System.Net.HttpWebRequest.PreAuthenticate%2A> `true`:</span><span class="sxs-lookup"><span data-stu-id="b203a-914"><xref:System.Net.HttpWebRequest.PreAuthenticate%2A> is `true`:</span></span>  
  
 <span data-ttu-id="b203a-915">클라이언트 SomeUrl 가져오기</span><span class="sxs-lookup"><span data-stu-id="b203a-915">Client: GET someUrl</span></span>  
  
 <span data-ttu-id="b203a-916">서버: 401 Www-authenticate Basic</span><span class="sxs-lookup"><span data-stu-id="b203a-916">Server: 401 WWW-Authenticate Basic</span></span>  
  
 <span data-ttu-id="b203a-917">클라이언트 권한 부여 헤더를 사용 하 여 가져오기</span><span class="sxs-lookup"><span data-stu-id="b203a-917">Client: GET with Authorization headers</span></span>  
  
 <span data-ttu-id="b203a-918">서버: 200 정상</span><span class="sxs-lookup"><span data-stu-id="b203a-918">Server: 200 OK</span></span>  
  
 <span data-ttu-id="b203a-919">클라이언트 권한 부여 헤더를 사용 하 여 someUrl 가져오기</span><span class="sxs-lookup"><span data-stu-id="b203a-919">Client: GET someUrl with Authorization headers</span></span>  
  
 <span data-ttu-id="b203a-920">인증 체계를 사전 인증을 지원 하지 않는 경우이 속성의 값은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-920">If the authentication scheme does not support preauthentication, the value of this property is ignored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtocolVersion">
      <MemberSignature Language="C#" Value="public Version ProtocolVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ProtocolVersion" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ProtocolVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtocolVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ProtocolVersion { Version ^ get(); void set(Version ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProtocolVersion : Version with get, set" Usage="System.Net.HttpWebRequest.ProtocolVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-921">요청에 사용할 HTTP의 버전을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-921">Gets or sets the version of HTTP to use for the request.</span></span></summary>
        <value><span data-ttu-id="b203a-922">요청에 사용할 HTTP 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-922">The HTTP version to use for the request.</span></span> <span data-ttu-id="b203a-923">기본값은 <see cref="F:System.Net.HttpVersion.Version11" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-923">The default is <see cref="F:System.Net.HttpVersion.Version11" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-924"><xref:System.Net.HttpWebRequest> 클래스는 버전 1.0 및 1.1 http를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-924">The <xref:System.Net.HttpWebRequest> class supports only versions 1.0 and 1.1 of HTTP.</span></span> <span data-ttu-id="b203a-925">설정 <xref:System.Net.HttpWebRequest.ProtocolVersion%2A> 다른 버전으로 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-925">Setting <xref:System.Net.HttpWebRequest.ProtocolVersion%2A> to a different version throws an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-926">현재 요청의 HTTP 버전을 설정 하려면 사용 합니다 <xref:System.Net.HttpVersion.Version10> 및 <xref:System.Net.HttpVersion.Version11> 필드를 <xref:System.Net.HttpVersion> 클래스.</span><span class="sxs-lookup"><span data-stu-id="b203a-926">To set the HTTP version of the current request, use the <xref:System.Net.HttpVersion.Version10> and <xref:System.Net.HttpVersion.Version11> fields of the <xref:System.Net.HttpVersion> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-927">다음 코드 예제에서는 <xref:System.Net.HttpWebRequest.ProtocolVersion%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-927">The following code example sets the <xref:System.Net.HttpWebRequest.ProtocolVersion%2A> Property.</span></span>  
  
 [!code-cpp[HttpWebRequest_ProtocolVersion#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_ProtocolVersion/CPP/httpwebrequest_protocolversion.cpp#1)]
 [!code-csharp[HttpWebRequest_ProtocolVersion#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_ProtocolVersion/CS/httpwebrequest_protocolversion.cs#1)]
 [!code-vb[HttpWebRequest_ProtocolVersion#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_ProtocolVersion/VB/httpwebrequest_protocolversion.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b203a-928">HTTP 버전이 1.0이나 1.1 이외의 값으로 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-928">The HTTP version is set to a value other than 1.0 or 1.1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public override System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.HttpWebRequest.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-929">요청에 대한 프록시 정보를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-929">Gets or sets proxy information for the request.</span></span></summary>
        <value><span data-ttu-id="b203a-930">요청을 프록시하는 데 사용할 <see cref="T:System.Net.IWebProxy" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-930">The <see cref="T:System.Net.IWebProxy" /> object to use to proxy the request.</span></span> <span data-ttu-id="b203a-931">기본값은 <see cref="P:System.Net.GlobalProxySelection.Select" /> 속성을 호출함으로써 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-931">The default value is set by calling the <see cref="P:System.Net.GlobalProxySelection.Select" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-932">합니다 <xref:System.Net.HttpWebRequest.Proxy%2A> 속성을 식별 합니다 <xref:System.Net.WebProxy> 인터넷 리소스에 대 한 요청을 처리 하는 데 사용할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-932">The <xref:System.Net.HttpWebRequest.Proxy%2A> property identifies the <xref:System.Net.WebProxy> object to use to process requests to Internet resources.</span></span> <span data-ttu-id="b203a-933">없는 프록시를 사용 해야 함을 지정 하려면 설정 합니다 <xref:System.Net.HttpWebRequest.Proxy%2A> 속성을 반환 하 여 프록시 인스턴스는 <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b203a-933">To specify that no proxy should be used, set the <xref:System.Net.HttpWebRequest.Proxy%2A> property to the proxy instance returned by the <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b203a-934">로컬 컴퓨터 또는 응용 프로그램 구성 파일을 기본 프록시를 사용할 수 있는지 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-934">The local computer or application config file may specify that a default proxy be used.</span></span> <span data-ttu-id="b203a-935">경우는 <xref:System.Net.HttpWebRequest.Proxy%2A> 속성을 지정 하면에서 프록시 설정을 <xref:System.Net.HttpWebRequest.Proxy%2A> 로컬 컴퓨터 또는 응용 프로그램 구성 파일을 재정의 하는 속성 및 <xref:System.Net.HttpWebRequest> 인스턴스는 지정 된 프록시 설정을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-935">If the <xref:System.Net.HttpWebRequest.Proxy%2A> property is specified, then the proxy settings from the <xref:System.Net.HttpWebRequest.Proxy%2A> property override the local computer or application config file and the <xref:System.Net.HttpWebRequest> instance will use the proxy settings specified.</span></span> <span data-ttu-id="b203a-936">구성 파일에 없는 프록시를 지정 하는 경우 및 <xref:System.Net.HttpWebRequest.Proxy%2A> 속성이 지정 되어 있지는 <xref:System.Net.HttpWebRequest> 클래스에서에서 상속 되며, Internet Explorer 로컬 컴퓨터의 프록시 설정을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-936">If no proxy is specified in a config file and the <xref:System.Net.HttpWebRequest.Proxy%2A> property is unspecified, the <xref:System.Net.HttpWebRequest> class uses the proxy settings inherited from Internet Explorer on the local computer.</span></span> <span data-ttu-id="b203a-937">Internet Explorer의 프록시 설정이 없는 경우 요청이 서버로 직접 전송 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-937">If there are no proxy settings in Internet Explorer, the request is sent directly to the server.</span></span>  
  
 <span data-ttu-id="b203a-938"><xref:System.Net.HttpWebRequest> 클래스 구문 분석 하 여 와일드 카드 문자를 사용 하 여 프록시 무시 목록에서에서 상속 되며, Internet Explorer 동일한 바이패스 목록에는 Internet Explorer에서 직접 구문 분석 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-938">The <xref:System.Net.HttpWebRequest> class parses a proxy bypass list with wildcard characters inherited from Internet Explorer the same as the bypass list is parsed directly by Internet Explorer.</span></span> <span data-ttu-id="b203a-939">예를 들어 합니다 <xref:System.Net.HttpWebRequest> 클래스의 정규식을 바이패스 목록이 "nt \*" Internet Explorer에서 분석 "nt.\*"입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-939">For example, the <xref:System.Net.HttpWebRequest> class will parse a bypass list of "nt\*" from Internet Explorer as a regular expression of "nt.\*".</span></span> <span data-ttu-id="b203a-940">따라서 URL "`http://nt.com`"을 사용 하 여 프록시를 무시 합니다 <xref:System.Net.HttpWebRequest> 클래스 및 Internet Explorer를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-940">So a URL of "`http://nt.com`" would bypass the proxy using the <xref:System.Net.HttpWebRequest> class and using Internet Explorer.</span></span>  
  
 <span data-ttu-id="b203a-941"><xref:System.Net.HttpWebRequest> 클래스는 로컬 프록시 바이패스를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-941">The <xref:System.Net.HttpWebRequest> class supports local proxy bypass.</span></span> <span data-ttu-id="b203a-942">클래스에는 다음 조건 중 하나가 충족 되는 경우에 로컬 대상을 간주 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-942">The class considers a destination to be local if any of the following conditions are met:</span></span>  
  
-   <span data-ttu-id="b203a-943">대상 플랫 이름 (URL에 점 없음)를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-943">The destination contains a flat name (no dots in the URL).</span></span>  
  
-   <span data-ttu-id="b203a-944">루프백 주소를 포함 하는 대상 (<xref:System.Net.IPAddress.Loopback> 또는 <xref:System.Net.IPAddress.IPv6Loopback>) 하거나 대상 포함는 <xref:System.Net.IPAddress> 로컬 컴퓨터에 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-944">The destination contains a loopback address (<xref:System.Net.IPAddress.Loopback> or <xref:System.Net.IPAddress.IPv6Loopback>) or the destination contains an <xref:System.Net.IPAddress> assigned to the local computer.</span></span>  
  
-   <span data-ttu-id="b203a-945">로컬 컴퓨터의 도메인 접미사를 일치 대상의 도메인 접미사 (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>).</span><span class="sxs-lookup"><span data-stu-id="b203a-945">The domain suffix of the destination matches the local computer's domain suffix (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>).</span></span>  
  
 <span data-ttu-id="b203a-946">변경를 <xref:System.Net.HttpWebRequest.Proxy%2A> 호출 하 여 요청이 시작 된 후 속성을 <xref:System.Net.HttpWebRequest.GetRequestStream%2A>, <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.HttpWebRequest.GetResponse%2A>, 또는 <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> 메서드가 throw는 <xref:System.InvalidOperationException>합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-946">Changing the <xref:System.Net.HttpWebRequest.Proxy%2A> property after the request has been started by calling the <xref:System.Net.HttpWebRequest.GetRequestStream%2A>, <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.HttpWebRequest.GetResponse%2A>, or <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="b203a-947">Proxy 요소에 대 한 내용은 [ \&lt; defaultProxy\&gt; 요소 (네트워크 설정)](~/docs/framework/configure-apps/file-schema/network/defaultproxy-element-network-settings.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-947">For information on the proxy element see [\&lt;defaultProxy\&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/defaultproxy-element-network-settings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-948">다음 코드 예제에서는 <xref:System.Net.HttpWebRequest.Proxy%2A> 메서드는 요청에 대 한 프록시 정보를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-948">The following code example uses the <xref:System.Net.HttpWebRequest.Proxy%2A> method to get the proxy information for the request.</span></span>  
  
 [!code-cpp[Httpwebrequest_proxy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Httpwebrequest_proxy/CPP/httpwebrequest_proxy.cpp#1)]
 [!code-csharp[Httpwebrequest_proxy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Httpwebrequest_proxy/CS/httpwebrequest_proxy.cs#1)]
 [!code-vb[Httpwebrequest_proxy#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Httpwebrequest_proxy/VB/httpwebrequest_proxy.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b203a-949"><see cref="P:System.Net.HttpWebRequest.Proxy" />이 <see langword="null" />로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-949"><see cref="P:System.Net.HttpWebRequest.Proxy" /> is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b203a-950"><see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" /> 또는 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />를 호출하여 요청이 시작된 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-950">The request has been started by calling <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" />, or <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="b203a-951">호출자에게 요청된 작업에 대한 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-951">The caller does not have permission for the requested operation.</span></span></exception>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="b203a-952">가져오거나 설정할는 <see cref="P:System.Net.HttpWebRequest.Proxy" /> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-952">To get or set the <see cref="P:System.Net.HttpWebRequest.Proxy" /> property.</span></span> <span data-ttu-id="b203a-953">연결 된 열거형: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="b203a-953">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/9d663c4b-07b4-4f6f-9b12-efbd3630354f"><span data-ttu-id="b203a-954">DefaultProxy 요소 (네트워크 설정)</span><span class="sxs-lookup"><span data-stu-id="b203a-954">DefaultProxy Element (Network Settings)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/bb707c72-eed2-4a82-8800-c9e68df2fd4f"><span data-ttu-id="b203a-955">인터넷 애플리케이션 구성</span><span class="sxs-lookup"><span data-stu-id="b203a-955">Configuring Internet Applications</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/353c0a8b-4cee-44f6-8e65-60e286743df9"><span data-ttu-id="b203a-956">프록시 구성</span><span class="sxs-lookup"><span data-stu-id="b203a-956">Proxy Configuration</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/fcd9c3bd-93de-4c92-8ff3-837327ad18de"><span data-ttu-id="b203a-957">자동 프록시 검색</span><span class="sxs-lookup"><span data-stu-id="b203a-957">Automatic Proxy Detection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadWriteTimeout">
      <MemberSignature Language="C#" Value="public int ReadWriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadWriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ReadWriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadWriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadWriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadWriteTimeout : int with get, set" Usage="System.Net.HttpWebRequest.ReadWriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-958">스트림에 쓰거나 스트림에서 읽을 때의 제한 시간을 밀리초 단위로 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-958">Gets or sets a time-out in milliseconds when writing to or reading from a stream.</span></span></summary>
        <value><span data-ttu-id="b203a-959">쓰기 또는 읽기가 가능한 제한 시간(밀리초)입니다. 기본값은 300,000밀리초(5분)입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-959">The number of milliseconds before the writing or reading times out. The default value is 300,000 milliseconds (5 minutes).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-960">합니다 <xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A> 속성에서 반환 된 스트림에 쓸 때 사용 되는 <xref:System.Net.HttpWebRequest.GetRequestStream%2A> 메서드나 반환한 스트림의 읽을 <xref:System.Net.HttpWebResponse.GetResponseStream%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b203a-960">The <xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A> property is used when writing to the stream returned by the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method or reading from the stream returned by the <xref:System.Net.HttpWebResponse.GetResponseStream%2A> method.</span></span>  
  
 <span data-ttu-id="b203a-961">특히를 <xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A> 속성에 대 한 제한 시간을 제어 합니다 <xref:System.IO.Stream.Read%2A> 반환한 스트림을 읽는 데 사용 되는 메서드를를 <xref:System.Net.HttpWebResponse.GetResponseStream%2A> 메서드를 한를 <xref:System.IO.Stream.Write%2A> 합니다 에서반환된스트림으로쓰는데사용되는메서드를<xref:System.Net.HttpWebRequest.GetRequestStream%2A>메서드.</span><span class="sxs-lookup"><span data-stu-id="b203a-961">Specifically, the <xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A> property controls the time-out for the <xref:System.IO.Stream.Read%2A> method, which is used to read the stream returned by the <xref:System.Net.HttpWebResponse.GetResponseStream%2A> method, and for the <xref:System.IO.Stream.Write%2A> method, which is used to write to the stream returned by the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method.</span></span>  
  
 <span data-ttu-id="b203a-962">요청이 완료 될 때까지 기다리는 기간을 지정 하려면 사용 된 <xref:System.Net.HttpWebRequest.Timeout%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-962">To specify the amount of time to wait for the request to complete, use the <xref:System.Net.HttpWebRequest.Timeout%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-963">다음 코드 예제에서는 <xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A> 속성을 설정하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-963">The following code example shows how to set the <xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A> property.</span></span>  
  
 [!code-csharp[Classic HttpWebRequest Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpWebRequest Example/CS/source.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b203a-964">요청을 이미 보낸 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-964">The request has already been sent.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b203a-965">set 작업에 지정된 값이 0보다 작거나 같고 <see cref="F:System.Threading.Timeout.Infinite" />와 같지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-965">The value specified for a set operation is less than or equal to zero and is not equal to <see cref="F:System.Threading.Timeout.Infinite" /></span></span></exception>
        <altmember cref="P:System.Net.HttpWebRequest.Timeout" />
      </Docs>
    </Member>
    <Member MemberName="Referer">
      <MemberSignature Language="C#" Value="public string Referer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Referer" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Referer" />
      <MemberSignature Language="VB.NET" Value="Public Property Referer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Referer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Referer : string with get, set" Usage="System.Net.HttpWebRequest.Referer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-966">HTTP <see langword="Referer" /> 헤더의 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-966">Gets or sets the value of the <see langword="Referer" /> HTTP header.</span></span></summary>
        <value><span data-ttu-id="b203a-967">HTTP <see langword="Referer" /> 헤더의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-967">The value of the <see langword="Referer" /> HTTP header.</span></span> <span data-ttu-id="b203a-968">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-968">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-969">경우는 <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> 속성은 `true`는 <xref:System.Net.HttpWebRequest.Referer%2A> 속성은 다른 사이트로 요청을 리디렉션할 때 자동으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-969">If the <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> property is `true`, the <xref:System.Net.HttpWebRequest.Referer%2A> property is set automatically when the request is redirected to another site.</span></span>  
  
 <span data-ttu-id="b203a-970">선택을 취소 합니다 `Referer` HTTP 헤더를 설정 합니다 <xref:System.Net.HttpWebRequest.Referer%2A> 속성을 `null`.</span><span class="sxs-lookup"><span data-stu-id="b203a-970">To clear the `Referer` HTTP header, set the <xref:System.Net.HttpWebRequest.Referer%2A> property to `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-971">이 속성의 값은 <xref:System.Net.WebHeaderCollection>에 저장됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-971">The value for this property is stored in <xref:System.Net.WebHeaderCollection>.</span></span> <span data-ttu-id="b203a-972">WebHeaderCollection이 설정되면 속성 값이 손실됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-972">If WebHeaderCollection is set, the property value is lost.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-973">다음 코드 예제에서는 <xref:System.Net.HttpWebRequest.Referer%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-973">The following code example sets the <xref:System.Net.HttpWebRequest.Referer%2A> property.</span></span>  
  
 [!code-cpp[HttpWebRequest_Referer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_Referer/CPP/httpwebrequest_referer.cpp#1)]
 [!code-csharp[HttpWebRequest_Referer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_Referer/CS/httpwebrequest_referer.cs#1)]
 [!code-vb[HttpWebRequest_Referer#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_Referer/VB/httpwebrequest_referer.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestUri">
      <MemberSignature Language="C#" Value="public override Uri RequestUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RequestUri" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.RequestUri" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequestUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ RequestUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestUri : Uri" Usage="System.Net.HttpWebRequest.RequestUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-974">요청의 원래 URI(Uniform Resource Identifier)를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-974">Gets the original Uniform Resource Identifier (URI) of the request.</span></span></summary>
        <value><span data-ttu-id="b203a-975"><see cref="T:System.Uri" /> 메서드에 전달된 인터넷 리소스의 URI가 들어 있는 <see cref="M:System.Net.WebRequest.Create(System.String)" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-975">A <see cref="T:System.Uri" /> that contains the URI of the Internet resource passed to the <see cref="M:System.Net.WebRequest.Create(System.String)" /> method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-976">합니다 <xref:System.Uri> 에 전달 된 개체 <xref:System.Net.HttpWebRequest> 호출에 의해 <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-976">The <xref:System.Uri> object passed to <xref:System.Net.HttpWebRequest> by the call to <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="b203a-977">리디렉션을 다음 헤더 변경 되지 않습니다는 <xref:System.Net.HttpWebRequest.RequestUri%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-977">Following a redirection header does not change the <xref:System.Net.HttpWebRequest.RequestUri%2A> property.</span></span> <span data-ttu-id="b203a-978">요청에 응답 하는 실제 URI를 가져오려면 검사는 <xref:System.Net.HttpWebRequest.Address%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-978">To get the actual URI that responded to the request, examine the <xref:System.Net.HttpWebRequest.Address%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-979">다음 코드 예제에서는 확인 하는 <xref:System.Net.HttpWebRequest> 개체 `req` 이 요청을 다른 위치로 리디렉션되고의 값을 설정 합니다 `hasChanged` 변수를 `true` 요청 되었으면이 고, 그렇지 않으면 리디렉션된 `hasChanged` 로 설정 된 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-979">The following code example checks to see if the <xref:System.Net.HttpWebRequest> object `req` was redirected to another location to fulfill the request, and sets the value of the `hasChanged` variable to `true` if the request was redirected; otherwise, `hasChanged` is set to `false`.</span></span>  
  
 [!code-cpp[Classic HttpWebRequest.RequestUri Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpWebRequest.RequestUri Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpWebRequest.RequestUri Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpWebRequest.RequestUri Example/CS/source.cs#1)]
 [!code-vb[Classic HttpWebRequest.RequestUri Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpWebRequest.RequestUri Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendChunked">
      <MemberSignature Language="C#" Value="public bool SendChunked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SendChunked" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.SendChunked" />
      <MemberSignature Language="VB.NET" Value="Public Property SendChunked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SendChunked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SendChunked : bool with get, set" Usage="System.Net.HttpWebRequest.SendChunked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-980">인터넷 리소스에 데이터를 분할된 형태로 보낼 것인지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-980">Gets or sets a value that indicates whether to send data in segments to the Internet resource.</span></span></summary>
        <value><span data-ttu-id="b203a-981">인터넷 리소스에 데이터를 분할된 형태로 보내려면 <see langword="true" />로 설정하고 그렇지 않으면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-981"><see langword="true" /> to send data to the Internet resource in segments; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b203a-982">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-982">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-983">때 <xref:System.Net.HttpWebRequest.SendChunked%2A> 는 `true`, 요청이 인터넷 리소스 세그먼트에 데이터를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-983">When <xref:System.Net.HttpWebRequest.SendChunked%2A> is `true`, the request sends data to the Internet resource in segments.</span></span> <span data-ttu-id="b203a-984">인터넷 리소스는 청크 분할 된 데이터를 받는 지원 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-984">The Internet resource must support receiving chunked data.</span></span>  
  
 <span data-ttu-id="b203a-985">변경를 <xref:System.Net.HttpWebRequest.SendChunked%2A> 호출 하 여 요청이 시작 된 후 속성을 <xref:System.Net.HttpWebRequest.GetRequestStream%2A>, <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.HttpWebRequest.GetResponse%2A>, 또는 <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> 메서드가 throw는 <xref:System.InvalidOperationException>합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-985">Changing the <xref:System.Net.HttpWebRequest.SendChunked%2A> property after the request has been started by calling the <xref:System.Net.HttpWebRequest.GetRequestStream%2A>, <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.HttpWebRequest.GetResponse%2A>, or <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method throws an <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-986">다음 코드 예제에서는 합니다 <xref:System.Net.HttpWebRequest.SendChunked%2A> 속성을 `true` 인터넷 리소스에 대 한 세그먼트에 데이터를 보낼 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-986">The following code example sets the <xref:System.Net.HttpWebRequest.SendChunked%2A> property to `true` so that data can be sent in segments to the Internet resource.</span></span>  
  
 [!code-cpp[HttpWebRequest_SendChunked#2](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_SendChunked/CPP/httpwebrequest_sendchunked.cpp#2)]
 [!code-csharp[HttpWebRequest_SendChunked#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_SendChunked/CS/httpwebrequest_sendchunked.cs#2)]
 [!code-vb[HttpWebRequest_SendChunked#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_SendChunked/VB/httpwebrequest_sendchunked.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b203a-987"><see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" /> 또는 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> 메서드를 호출하여 요청이 시작되었습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-987">The request has been started by calling the <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" />, or <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ServerCertificateValidationCallback">
      <MemberSignature Language="C#" Value="public System.Net.Security.RemoteCertificateValidationCallback ServerCertificateValidationCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Security.RemoteCertificateValidationCallback ServerCertificateValidationCallback" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ServerCertificateValidationCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerCertificateValidationCallback As RemoteCertificateValidationCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::RemoteCertificateValidationCallback ^ ServerCertificateValidationCallback { System::Net::Security::RemoteCertificateValidationCallback ^ get(); void set(System::Net::Security::RemoteCertificateValidationCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServerCertificateValidationCallback : System.Net.Security.RemoteCertificateValidationCallback with get, set" Usage="System.Net.HttpWebRequest.ServerCertificateValidationCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.RemoteCertificateValidationCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-988">서버 인증서의 유효성을 검사할 콜백 함수를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-988">Gets or sets a callback function to validate the server certificate.</span></span></summary>
        <value><span data-ttu-id="b203a-989">서버 인증서의 유효성을 검사할 콜백 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-989">A callback function to validate the server certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-990">기본값은 콜백 함수가 설정 되어 있는지와 <xref:System.Net.HttpWebRequest.ServerCertificateValidationCallback%2A> 속성은 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-990">The default is that no callback function is set and the <xref:System.Net.HttpWebRequest.ServerCertificateValidationCallback%2A> property is `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServicePoint">
      <MemberSignature Language="C#" Value="public System.Net.ServicePoint ServicePoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ServicePoint ServicePoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ServicePoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicePoint As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ServicePoint ^ ServicePoint { System::Net::ServicePoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServicePoint : System.Net.ServicePoint" Usage="System.Net.HttpWebRequest.ServicePoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-991">요청에 사용할 서비스 지점을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-991">Gets the service point to use for the request.</span></span></summary>
        <value><span data-ttu-id="b203a-992">인터넷 리소스에 네트워크 연결을 나타내는 <see cref="T:System.Net.ServicePoint" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-992">A <see cref="T:System.Net.ServicePoint" /> that represents the network connection to the Internet resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-993">합니다 <xref:System.Net.ServicePoint.Address%2A?displayProperty=nameWithType> 속성에서 다를 수 <xref:System.Net.HttpWebRequest.Address%2A?displayProperty=nameWithType> 요청을 리디렉션할 경우.</span><span class="sxs-lookup"><span data-stu-id="b203a-993">The <xref:System.Net.ServicePoint.Address%2A?displayProperty=nameWithType> property may be different from <xref:System.Net.HttpWebRequest.Address%2A?displayProperty=nameWithType> if the request is redirected.</span></span>  
  
   
  
## Examples  
 [!code-cpp[System.Net.ServicePoint#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#6)]
 [!code-csharp[System.Net.ServicePoint#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#6)]
 [!code-vb[System.Net.ServicePoint#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCookieContainer">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCookieContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCookieContainer" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.SupportsCookieContainer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCookieContainer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCookieContainer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsCookieContainer : bool" Usage="System.Net.HttpWebRequest.SupportsCookieContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-994">요청이 <see cref="T:System.Net.CookieContainer" />를 지원하는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-994">Gets a value that indicates whether the request provides support for a <see cref="T:System.Net.CookieContainer" />.</span></span></summary>
        <value><span data-ttu-id="b203a-995">요청이 <see cref="T:System.Net.CookieContainer" />를 지원하면 <see langword="true" />이고, 지원하지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-995"><see langword="true" /> if the request provides support for a <see cref="T:System.Net.CookieContainer" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.Obsolete("Serialization is obsoleted for this type.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Serialization is obsoleted for this type.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serializationInfo"><span data-ttu-id="b203a-996">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-996">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</span></span></param>
        <param name="streamingContext"><span data-ttu-id="b203a-997">이 직렬화의 대상을 지정하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-997">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for this serialization.</span></span></param>
        <summary><span data-ttu-id="b203a-998">대상 개체를 직렬화하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-998">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-999">에 포함 된 모든 개체는 <xref:System.Runtime.Serialization.SerializationInfo> 자동으로 추적 되 고 포맷터가 serialize 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-999">Any objects included in the <xref:System.Runtime.Serialization.SerializationInfo> are automatically tracked and serialized by the formatter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public override int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Net.HttpWebRequest.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-1000"><see cref="M:System.Net.HttpWebRequest.GetResponse" /> 및 <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> 메서드의 제한 시간 값을 밀리초 단위로 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1000">Gets or sets the time-out value in milliseconds for the <see cref="M:System.Net.HttpWebRequest.GetResponse" /> and <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> methods.</span></span></summary>
        <value><span data-ttu-id="b203a-1001">요청이 시간 초과하기 전까지 기다리는 시간(밀리초)입니다. 기본값은 100,000밀리초(100초)입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1001">The number of milliseconds to wait before the request times out. The default value is 100,000 milliseconds (100 seconds).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-1002"><xref:System.Net.HttpWebRequest.Timeout%2A> 후속 동기 요청을 사용 하 여 만든 시간 (밀리초)입니다 합니다 <xref:System.Net.HttpWebRequest.GetResponse%2A> 메서드가 응답을 기다리는 및 <xref:System.Net.HttpWebRequest.GetRequestStream%2A> 메서드는 스트림에 대 한 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1002"><xref:System.Net.HttpWebRequest.Timeout%2A> is the number of milliseconds that a subsequent synchronous request made with the <xref:System.Net.HttpWebRequest.GetResponse%2A> method waits for a response, and the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method waits for a stream.</span></span> <span data-ttu-id="b203a-1003">합니다 <xref:System.Net.HttpWebRequest.Timeout%2A> 하지 개별적으로 전체 요청 및 응답에 적용 됩니다 합니다 <xref:System.Net.HttpWebRequest.GetRequestStream%2A> 및 <xref:System.Net.HttpWebRequest.GetResponse%2A> 메서드 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1003">The <xref:System.Net.HttpWebRequest.Timeout%2A> applies to the entire request and response, not individually to the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> and <xref:System.Net.HttpWebRequest.GetResponse%2A> method calls.</span></span> <span data-ttu-id="b203a-1004">리소스 제한 시간 안에 반환 되지 않으면 요청이 throw를 <xref:System.Net.WebException> 사용 하 여 합니다 <xref:System.Net.WebException.Status%2A> 속성으로 설정 <xref:System.Net.WebExceptionStatus.Timeout?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1004">If the resource is not returned within the time-out period, the request throws a <xref:System.Net.WebException> with the <xref:System.Net.WebException.Status%2A> property set to <xref:System.Net.WebExceptionStatus.Timeout?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="b203a-1005"><xref:System.Net.HttpWebRequest.Timeout%2A> 하기 전에 속성을 설정 해야 합니다 <xref:System.Net.HttpWebRequest.GetRequestStream%2A> 또는 <xref:System.Net.HttpWebRequest.GetResponse%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1005">The <xref:System.Net.HttpWebRequest.Timeout%2A> property must be set before the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> or <xref:System.Net.HttpWebRequest.GetResponse%2A> method is called.</span></span> <span data-ttu-id="b203a-1006">변경 된 <xref:System.Net.HttpWebRequest.Timeout%2A> 호출한 후 속성을 <xref:System.Net.HttpWebRequest.GetRequestStream%2A> 또는 <xref:System.Net.HttpWebRequest.GetResponse%2A> 메서드는 어떠한 영향도</span><span class="sxs-lookup"><span data-stu-id="b203a-1006">Changing the <xref:System.Net.HttpWebRequest.Timeout%2A> property after calling the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> or <xref:System.Net.HttpWebRequest.GetResponse%2A> method has no effect</span></span>  
  
 <span data-ttu-id="b203a-1007">합니다 <xref:System.Net.HttpWebRequest.Timeout%2A> 속성이 사용 하 여 비동기 요청에 영향을 주지 합니다 <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> 또는 <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b203a-1007">The <xref:System.Net.HttpWebRequest.Timeout%2A> property has no effect on asynchronous requests made with the <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> or <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="b203a-1008">비동기 요청의 경우 클라이언트 응용 프로그램 자체 제한 시간 메커니즘을 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1008">In the case of asynchronous requests, the client application implements its own time-out mechanism.</span></span> <span data-ttu-id="b203a-1009">예제를 참조 하십시오는 <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b203a-1009">Refer to the example in the <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method.</span></span>  
  
 <span data-ttu-id="b203a-1010">읽기 또는 쓰기 작업 시간이 초과 하는 시간을 지정 하려면 사용 된 <xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1010">To specify the amount of time to wait before a read or write operation times out, use the <xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A> property.</span></span>  
  
 <span data-ttu-id="b203a-1011">도메인 이름 시스템 (DNS) 쿼리는 최대 15 초 반환할 또는 제한 시간 걸릴 수 있습니다. 요청 확인이 필요 하는 호스트 이름을 포함 하 고 설정한 경우 <xref:System.Net.FileWebRequest.Timeout%2A> 값 보다 작거나 15 초 걸릴 수 있습니다 이전 15 초 이상는 <xref:System.Net.WebException> 요청에서 제한 시간을 나타내기 위해 throw 되는 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1011">A Domain Name System (DNS) query may take up to 15 seconds to return or time out. If your request contains a host name that requires resolution and you set <xref:System.Net.FileWebRequest.Timeout%2A> to a value less than 15 seconds, it may take 15 seconds or more before a <xref:System.Net.WebException> is thrown to indicate a timeout on your request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b203a-1012">다음 코드 예제에서는 합니다 <xref:System.Net.HttpWebRequest.Timeout%2A> 의 속성을 <xref:System.Net.HttpWebRequest> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1012">The following code example sets the <xref:System.Net.HttpWebRequest.Timeout%2A> property of the <xref:System.Net.HttpWebRequest> object.</span></span>  
  
 [!code-cpp[HttpWebRequest_Timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_Timeout/CPP/httpwebrequest_timeout.cpp#1)]
 [!code-csharp[HttpWebRequest_Timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_Timeout/CS/httpwebrequest_timeout.cs#1)]
 [!code-vb[HttpWebRequest_Timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_Timeout/VB/httpwebrequest_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b203a-1013">지정된 값이 0보다 작고 <see cref="F:System.Threading.Timeout.Infinite" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-1013">The value specified is less than zero and is not <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
        <altmember cref="P:System.Net.HttpWebRequest.ReadWriteTimeout" />
      </Docs>
    </Member>
    <Member MemberName="TransferEncoding">
      <MemberSignature Language="C#" Value="public string TransferEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransferEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.TransferEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property TransferEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransferEncoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransferEncoding : string with get, set" Usage="System.Net.HttpWebRequest.TransferEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-1014">HTTP <see langword="Transfer-encoding" /> 헤더의 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1014">Gets or sets the value of the <see langword="Transfer-encoding" /> HTTP header.</span></span></summary>
        <value><span data-ttu-id="b203a-1015">HTTP <see langword="Transfer-encoding" /> 헤더의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1015">The value of the <see langword="Transfer-encoding" /> HTTP header.</span></span> <span data-ttu-id="b203a-1016">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1016">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-1017">설정 하기 전에 합니다 <xref:System.Net.HttpWebRequest.TransferEncoding%2A> 속성을 먼저 설정 해야 합니다 <xref:System.Net.HttpWebRequest.SendChunked%2A> 속성을 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1017">Before you can set the <xref:System.Net.HttpWebRequest.TransferEncoding%2A> property, you must first set the <xref:System.Net.HttpWebRequest.SendChunked%2A> property to `true`.</span></span> <span data-ttu-id="b203a-1018">지우기 <xref:System.Net.HttpWebRequest.TransferEncoding%2A> 로 설정 하 여 `null` 의 값에 영향을 주지 <xref:System.Net.HttpWebRequest.SendChunked%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1018">Clearing <xref:System.Net.HttpWebRequest.TransferEncoding%2A> by setting it to `null` has no effect on the value of <xref:System.Net.HttpWebRequest.SendChunked%2A>.</span></span>  
  
 <span data-ttu-id="b203a-1019">에 할당 된 값을 <xref:System.Net.HttpWebRequest.TransferEncoding%2A> 속성에는 모든 기존 내용을 대체 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1019">Values assigned to the <xref:System.Net.HttpWebRequest.TransferEncoding%2A> property replace any existing contents.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-1020">이 속성의 값은 <xref:System.Net.WebHeaderCollection>에 저장됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1020">The value for this property is stored in <xref:System.Net.WebHeaderCollection>.</span></span> <span data-ttu-id="b203a-1021">WebHeaderCollection이 설정되면 속성 값이 손실됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1021">If WebHeaderCollection is set, the property value is lost.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b203a-1022"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" />가 <see langword="false" />일 때, <see cref="P:System.Net.HttpWebRequest.SendChunked" />이 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-1022"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> is set when <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b203a-1023"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" />이 "Chunked" 값으로 설정된 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-1023"><see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> is set to the value "Chunked".</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnsafeAuthenticatedConnectionSharing">
      <MemberSignature Language="C#" Value="public bool UnsafeAuthenticatedConnectionSharing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnsafeAuthenticatedConnectionSharing" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing" />
      <MemberSignature Language="VB.NET" Value="Public Property UnsafeAuthenticatedConnectionSharing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UnsafeAuthenticatedConnectionSharing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UnsafeAuthenticatedConnectionSharing : bool with get, set" Usage="System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-1024">고속 NTLM 인증 연결 공유가 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1024">Gets or sets a value that indicates whether to allow high-speed NTLM-authenticated connection sharing.</span></span></summary>
        <value><span data-ttu-id="b203a-1025">인증된 연결을 열어 두려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1025"><see langword="true" /> to keep the authenticated connection open; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-1026">이 속성의 기본값은 `false`, 요청이 완료 된 후에 닫을 수에 대 한 현재 연결에 이르게 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1026">The default value for this property is `false`, which causes the current connection to be closed after a request is completed.</span></span> <span data-ttu-id="b203a-1027">새 요청을 발급 될 때마다 응용 프로그램에 인증 시퀀스 거쳐야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1027">Your application must go through the authentication sequence every time it issues a new request.</span></span>  
  
 <span data-ttu-id="b203a-1028">이 속성 설정 된 경우 `true`, 응답을 검색 하는 데 사용 하는 연결 인증을 수행한 후에 계속 열려 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1028">If this property is set to `true`, the connection used to retrieve the response remains open after the authentication has been performed.</span></span> <span data-ttu-id="b203a-1029">이 경우에이 속성이 설정 요청 다른 `true` 다시 인증 하지 않고 연결을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1029">In this case, other requests that have this property set to `true` may use the connection without re-authenticating.</span></span> <span data-ttu-id="b203a-1030">즉, 사용자 A에 대 한 연결을 인증 된 경우 사용자 B 다시 사용할 수 있습니다 A의 연결 1. 사용자의 자격 증명에 따라 사용자 B의 요청이 처리 된</span><span class="sxs-lookup"><span data-stu-id="b203a-1030">In other words, if a connection has been authenticated for user A, user B may reuse A's connection; user B's request is fulfilled based on the credentials of user A.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="b203a-1031">수 있는지 관리 문제가 시스템의 경우이 속성을 설정 해야 하는 응용 프로그램을 인증 하지 않고 연결을 사용 하도록 이기 때문에 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1031">Because it is possible for an application to use the connection without being authenticated, you need to be sure that there is no administrative vulnerability in your system when setting this property to `true`.</span></span> <span data-ttu-id="b203a-1032">응용 프로그램에서 여러 사용자에 대 한 요청을 전송 하는 경우 (여러 사용자 계정을 가장 합니다.) 하며 리소스를 보호 하는 인증,이 속성 설정 하지 않으면이 `true` 아래 설명 된 대로 연결 그룹을 사용 하지 않는 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1032">If your application sends requests for multiple users (impersonates multiple user accounts) and relies on authentication to protect resources, do not set this property to `true` unless you use connection groups as described below.</span></span>  
  
 <span data-ttu-id="b203a-1033">하는 경우이 메커니즘을 사용 하도록 설정 하려는 경우에 성능 문제가 발생 하는 응용 프로그램 통합된 Windows 인증을 사용 하 여 웹 서버에서 실행 되 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1033">You may want to consider enabling this mechanism if your are having performance problems and your application is running on a Web server with integrated Windows authentication.</span></span>  
  
 <span data-ttu-id="b203a-1034">이 설정을 사용 하면 시스템 보안 위험을 엽니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1034">Enabling this setting opens the system to security risks.</span></span> <span data-ttu-id="b203a-1035">설정한 경우에 <xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A> 속성을 `true` 다음 예방 조치를 수행 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1035">If you set the <xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A> property to `true` be sure to take the following precautions:</span></span>  
  
-   <span data-ttu-id="b203a-1036">사용 된 <xref:System.Net.HttpWebRequest.ConnectionGroupName%2A> 다른 사용자에 대 한 연결을 관리 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1036">Use the <xref:System.Net.HttpWebRequest.ConnectionGroupName%2A> property to manage connections for different users.</span></span> <span data-ttu-id="b203a-1037">이 인증 되지 않은 응용 프로그램에서 연결의 사용 가능성을 방지합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1037">This avoids the potential use of the connection by non-authenticated applications.</span></span> <span data-ttu-id="b203a-1038">예를 들어 사용자 A는 사용자 2. 다른 고유한 연결 그룹 이름이 있어야 각 사용자 계정에 대 한 격리 계층을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1038">For example, user A should have a unique connection group name that is different from user B. This provides a layer of isolation for each user account.</span></span>  
  
-   <span data-ttu-id="b203a-1039">연결이 악용을 방지 하려면 보호 된 환경에서 응용 프로그램을 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1039">Run your application in a protected environment to help avoid possible connection exploits.</span></span>  
  
 <span data-ttu-id="b203a-1040">백 엔드 서버를 제어 하는 경우는 대 안으로 좋습니다 인증 지 속성을 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1040">If you control the back-end server, as an alternative you might consider turning off authentication persistence.</span></span> <span data-ttu-id="b203a-1041">어느 정도 성능이 향상 되지만 것이 더 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1041">This increases performance to a lesser degree, but it is safer.</span></span> <span data-ttu-id="b203a-1042">자세한 내용은 MSDN library에서 AuthPersistence 검색 [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library)합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1042">For more details, search for AuthPersistence in the MSDN library at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b203a-1043">모두 <xref:System.Net.WebRequest.PreAuthenticate%2A> 하 고 <xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A> 로 설정 됩니다 `true`, 각 요청은 안전 하지 않은 풀에서 하지만 권한 부여 헤더를 사용 하 여 연결을 사용 하 여 전송 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1043">If both <xref:System.Net.WebRequest.PreAuthenticate%2A> and <xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A> are set to `true`, each request is sent using a connection from the unsafe pool, but with an Authorization header.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="b203a-1044">이 속성을 설정 하려면 무제한 웹 권한이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1044">Unrestricted Web permission is required to set this property.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public override bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.HttpWebRequest.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-1045">기본 자격 증명을 요청과 함께 보내는지 여부를 제어하는 <see cref="T:System.Boolean" /> 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1045">Gets or sets a <see cref="T:System.Boolean" /> value that controls whether default credentials are sent with requests.</span></span></summary>
        <value><span data-ttu-id="b203a-1046">기본 자격 증명이 사용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1046"><see langword="true" /> if the default credentials are used; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b203a-1047">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1047">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b203a-1048">이 속성을 설정 `true` 에서이 요청을 수행 하는 경우 <xref:System.Net.HttpWebRequest> 개체, 서버에서 요청 하는 경우 인증 해야 현재 로그온된 한 사용자의 자격 증명을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1048">Set this property to `true` when requests made by this <xref:System.Net.HttpWebRequest> object should, if requested by the server, be authenticated using the credentials of the currently logged on user.</span></span> <span data-ttu-id="b203a-1049">클라이언트 응용 프로그램에 대 한 대부분의 시나리오에 필요한 동작은 이것이입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1049">For client applications, this is the desired behavior in most scenarios.</span></span> <span data-ttu-id="b203a-1050">이 속성을 사용 하는 대신 ASP.NET 응용 프로그램과 같은 중간 계층 응용 프로그램에 대 한 일반적으로 설정 된 <xref:System.Net.HttpWebRequest.Credentials%2A> 속성 대신 요청 클라이언트의 자격 증명을 합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1050">For middle-tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <xref:System.Net.HttpWebRequest.Credentials%2A> property to the credentials of the client on whose behalf the request is made.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b203a-1051">요청을 보낸 후에 이 속성을 설정하려고 한 경우</span><span class="sxs-lookup"><span data-stu-id="b203a-1051">You attempted to set this property after the request was sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserAgent : string with get, set" Usage="System.Net.HttpWebRequest.UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b203a-1052">HTTP <see langword="User-agent" /> 헤더의 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1052">Gets or sets the value of the <see langword="User-agent" /> HTTP header.</span></span></summary>
        <value><span data-ttu-id="b203a-1053">HTTP <see langword="User-agent" /> 헤더의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1053">The value of the <see langword="User-agent" /> HTTP header.</span></span> <span data-ttu-id="b203a-1054">기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1054">The default value is <see langword="null" />.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="b203a-1055">이 속성의 값은 <see cref="T:System.Net.WebHeaderCollection" />에 저장됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1055">The value for this property is stored in <see cref="T:System.Net.WebHeaderCollection" />.</span></span> <span data-ttu-id="b203a-1056">WebHeaderCollection이 설정되면 속성 값이 손실됩니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1056">If WebHeaderCollection is set, the property value is lost.</span></span>  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b203a-1057">다음 코드 예제에서는 <xref:System.Net.HttpWebRequest.UserAgent%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b203a-1057">The following code example sets the <xref:System.Net.HttpWebRequest.UserAgent%2A> property.</span></span>  
  
 [!code-cpp[HttpWebRequest_UserAgent#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_UserAgent/CPP/httpwebrequest_useragent.cpp#1)]
 [!code-csharp[HttpWebRequest_UserAgent#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_UserAgent/CS/httpwebrequest_useragent.cs#1)]
 [!code-vb[HttpWebRequest_UserAgent#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_UserAgent/VB/httpwebrequest_useragent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>