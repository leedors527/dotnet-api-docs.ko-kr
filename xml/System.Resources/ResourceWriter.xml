<Type Name="ResourceWriter" FullName="System.Resources.ResourceWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="20d6ff09554d82843b8cbcdd6d53c3e0ab5f365a" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58732057" /></Metadata><TypeSignature Language="C#" Value="public sealed class ResourceWriter : System.Resources.IResourceWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ResourceWriter extends System.Object implements class System.IDisposable, class System.Resources.IResourceWriter" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResourceWriter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ResourceWriter&#xA;Implements IResourceWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceWriter sealed : System::Resources::IResourceWriter" />
  <TypeSignature Language="F#" Value="type ResourceWriter = class&#xA;    interface IResourceWriter&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Resources.Writer</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Resources.IResourceWriter</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>출력 파일 또는 출력 스트림에 시스템 기본 형식으로 리소스를 기록합니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResourceWriter> 기본 구현을 제공 합니다 <xref:System.Resources.IResourceWriter> 인터페이스입니다. 프로그래밍 방식으로 이진 리소스 (.resources) 파일을 만들 수 있습니다.  
  
 리소스를 사용 하 여 이름 / 값 쌍으로 지정 된 된 <xref:System.Resources.ResourceWriter.AddResource%2A> 메서드. 리소스 이름 조회에 사용 되는 경우 대/소문자 구분 하지만 더욱 쉽게 제작 도구 지원 및 버그를 방지할 <xref:System.Resources.ResourceWriter> 대/소문자만 다른 이름을 가진.resources 파일을 허용 하지 것입니다. <xref:System.Resources.ResourceWriter> 클래스를 사용 하면 문자열, 개체 및 이진 리소스를 만들 수 있습니다. 바이트 배열 또는 스트림을 리소스 파일을 이진 리소스를 작성할 수 있습니다.  
  
> [!IMPORTANT]
>  이 형식이 구현 하는 <xref:System.IDisposable> 인터페이스입니다. 형식을 사용 하 여 마쳤으면 직접 또는 간접적으로의 삭제 해야 있습니다. 직접 형식의 dispose 호출 해당 <xref:System.IDisposable.Dispose%2A> 의 메서드를 `try` / `catch` 블록입니다. 삭제 하지 직접, 언어 구문 같은 사용 `using` (C#에서) 또는 `Using` (Visual Basic에서는). 자세한 내용은 "를 사용 하는 개체는 구현 IDisposable" 섹션을 참조 하세요.를 <xref:System.IDisposable> 인터페이스 항목입니다.  
  
 리소스 파일을 만들려면을 <xref:System.Resources.ResourceWriter> 고유한 파일 이름을 사용 하 여 호출할 <xref:System.Resources.ResourceWriter.AddResource%2A> 호출을 한 번 이상 <xref:System.Resources.ResourceWriter.Generate%2A> 리소스 파일을 디스크에 작성 한 다음 호출 <xref:System.Resources.ResourceWriter.Close%2A> 파일을 닫습니다. 호출 <xref:System.Resources.ResourceWriter.Close%2A> 암시적으로 호출 <xref:System.Resources.ResourceWriter.Generate%2A> 명시적으로 호출 하지 않으면 <xref:System.Resources.ResourceWriter.Generate%2A>합니다.  
  
 리소스 추가 된 동일한 순서로 반드시 기록 되지 않습니다.  
  
 의해 생성 된 이진.resources 파일에서 리소스를 검색할를 <xref:System.Resources.ResourceWriter> 클래스를 사용할 수는 <xref:System.Resources.ResourceManager> 명명 된 리소스를 검색할 수 있습니다, 클래스 또는 <xref:System.Resources.ResourceReader> 클래스를 사용 하면 파일의 모든 리소스를 열거할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 myResources.resources 파일에 여러 문자열을 씁니다.  
  
 [!code-cpp[Classic ResourceWriter Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ResourceWriter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ResourceWriter Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ResourceWriter Example/CS/source.cs#1)]
 [!code-vb[Classic ResourceWriter Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ResourceWriter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Resources.IResourceWriter" />
    <altmember cref="T:System.IDisposable" />
    <related type="Article" href="https://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890">데스크톱 응용 프로그램의 리소스</related>
    <related type="Article" href="https://msdn.microsoft.com/library/6c5ad891-66a0-4e7a-adcf-f41863ba6d8d">데스크톱 응용 프로그램용 리소스 파일 만들기</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Resources.ResourceWriter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceWriter (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceWriter.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceWriter(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceWriter : System.IO.Stream -&gt; System.Resources.ResourceWriter" Usage="new System.Resources.ResourceWriter stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">출력 스트림입니다.</param>
        <summary>제공된 스트림에 리소스를 쓰는 <see cref="T:System.Resources.ResourceWriter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 새 인스턴스를 정의 하는 다음 코드 예제는 <xref:System.Resources.ResourceWriter> 클래스는 지정 된 스트림에 씁니다. 코드는 기록기에 리소스를 추가 하 고 리소스를 스트림에 씁니다.  
  
 [!code-cpp[System.Resources.ResourceWriter Cstr1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceWriter Cstr1 Example/CPP/resourcewritercstr1.cpp#1)]
 [!code-csharp[System.Resources.ResourceWriter Cstr1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceWriter Cstr1 Example/CS/resourcewritercstr1.cs#1)]
 [!code-vb[System.Resources.ResourceWriter Cstr1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceWriter Cstr1 Example/VB/resourcewritercstr1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="stream" /> 매개 변수를 쓸 수 없는 경우</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <related type="Article" href="~/docs/standard/globalization-localization/index.md">.NET 애플리케이션 전역화 및 지역화</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceWriter (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceWriter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceWriter(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceWriter : string -&gt; System.Resources.ResourceWriter" Usage="new System.Resources.ResourceWriter fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName">출력 파일 이름입니다.</param>
        <summary>지정된 파일에 리소스를 쓰는 <see cref="T:System.Resources.ResourceWriter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 새 인스턴스를 정의 하는 다음 코드 예제는 <xref:System.Resources.ResourceWriter> 지정된 된 파일에 기록 하는 클래스입니다. 코드를 작성기에 리소스를 추가 하 고 리소스 파일에 기록 합니다.  
  
 [!code-cpp[Classic ResourceWriter Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ResourceWriter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ResourceWriter Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ResourceWriter Example/CS/source.cs#1)]
 [!code-vb[Classic ResourceWriter Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ResourceWriter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="fileName" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <related type="Article" href="~/docs/standard/globalization-localization/index.md">.NET 애플리케이션 전역화 및 지역화</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>기록할 리소스 목록에 리소스를 추가합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResource(string name, unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResource (name As String, value As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddResource(System::String ^ name, cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddResource : string * byte[] -&gt; unit&#xA;override this.AddResource : string * byte[] -&gt; unit" Usage="resourceWriter.AddResource (name, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Byte[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">리소스의 이름입니다.</param>
        <param name="value">리소스의 값은 부호 없는 8비트 정수 배열입니다.</param>
        <summary>기록할 리소스 목록에 바이트 배열로 지정된 명명된 리소스를 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 리소스 기록 됩니다 <xref:System.Resources.ResourceWriter.Generate%2A> 라고 합니다.  
  
 기록한 리소스를 검색할 수는 <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29> 메서드를 호출 합니다 <xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=nameWithType> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 합니다 <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29> 바이트의 배열로 읽은 그래픽 이미지를 추가 하는 메서드를 <xref:System.Resources.ResourceWriter> 개체입니다.  
  
 [!code-csharp[System.Resources.ResourceWriter.AddResource#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcewriter.addresource/cs/addresource_byt1.cs#4)]
 [!code-vb[System.Resources.ResourceWriter.AddResource#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcewriter.addresource/vb/addresource_byt1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> 또는 대소문자만 다른 이름이 이미 이 <see cref="T:System.Resources.ResourceWriter" />에 추가된 경우</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">이 <see cref="T:System.Resources.ResourceWriter" />가 닫혀 있으므로 해당 해시 테이블을 사용할 수 없습니다.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6c5ad891-66a0-4e7a-adcf-f41863ba6d8d">데스크톱 응용 프로그램용 리소스 파일 만들기</related>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, System.IO.Stream value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddResource(string name, class System.IO.Stream value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResource (name As String, value As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddResource(System::String ^ name, System::IO::Stream ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddResource : string * System.IO.Stream -&gt; unit" Usage="resourceWriter.AddResource (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.IO.Stream" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">추가할 리소스 이름입니다.</param>
        <param name="value">추가할 리소스의 값입니다. 리소스는 <see cref="P:System.IO.Stream.Length" /> 속성을 지원해야 합니다.</param>
        <summary>기록할 리소스 목록에 스트림으로 지정된 명명된 리소스를 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지 원하는 모든 스트림을 지정할 수 있습니다 합니다 <xref:System.IO.Stream.Length%2A?displayProperty=nameWithType> 속성에 대 한 `value`합니다.  
  
 기록한 리소스를 검색할 수는 <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29> 메서드를 호출 합니다 <xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=nameWithType> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 합니다 <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29> 에 저장 된 그래픽 이미지를 추가 하는 메서드를 <xref:System.IO.MemoryStream> 개체를 <xref:System.Resources.ResourceWriter> 개체.  
  
 [!code-csharp[System.Resources.ResourceWriter.AddResource#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcewriter.addresource/cs/addresource_str1.cs#2)]
 [!code-vb[System.Resources.ResourceWriter.AddResource#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcewriter.addresource/vb/addresource_str1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> 또는 대소문자만 다른 이름이 이미 이 <see cref="T:System.Resources.ResourceWriter" />에 추가된 경우  
  
또는 
스트림은 <see cref="P:System.IO.Stream.Length" /> 속성을 지원하지 않습니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 또는 <paramref name="value" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">이 <see cref="T:System.Resources.ResourceWriter" />이 닫혀 있는 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6c5ad891-66a0-4e7a-adcf-f41863ba6d8d">데스크톱 응용 프로그램용 리소스 파일 만들기</related>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResource(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResource (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddResource(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddResource : string * obj -&gt; unit&#xA;override this.AddResource : string * obj -&gt; unit" Usage="resourceWriter.AddResource (name, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceWriter.AddResource(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">리소스의 이름입니다.</param>
        <param name="value">리소스의 값입니다.</param>
        <summary>기록할 리소스 목록에 개체로 지정된 명명된 리소스를 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `value`는 serialize할 수 있어야 합니다.  
  
 리소스 기록 됩니다는 <xref:System.Resources.ResourceWriter.Generate%2A> 메서드가 호출 됩니다.  
  
 기록한 리소스를 검색할 수는 <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29> 메서드를 호출 합니다 <xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=nameWithType> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29> 이진 리소스 파일에 개체 데이터를 추가 하는 방법입니다.  
  
 [!code-csharp[System.Resources.ResourceWriter.AddResource#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcewriter.addresource/cs/addresource_obj1.cs#1)]  
  
 `DonorColumns` 해당 필드가 사용자 인터페이스에 표시할 열의 이름을 포함 사용자 지정 클래스가입니다. 참고로 표시 된 클래스는 <xref:System.SerializableAttribute> 특성입니다. 일반적으로 클래스는 별도 어셈블리에 정의 됩니다 및 컴파일 타임에 참조를 컴파일러에 제공 되는 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> 또는 대소문자만 다른 이름이 이미 이 <see cref="T:System.Resources.ResourceWriter" />에 추가된 경우</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">이 <see cref="T:System.Resources.ResourceWriter" />가 닫혀 있으므로 해당 해시 테이블을 사용할 수 없습니다.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6c5ad891-66a0-4e7a-adcf-f41863ba6d8d">데스크톱 응용 프로그램용 리소스 파일 만들기</related>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResource(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResource (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddResource(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddResource : string * string -&gt; unit&#xA;override this.AddResource : string * string -&gt; unit" Usage="resourceWriter.AddResource (name, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceWriter.AddResource(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">리소스의 이름입니다.</param>
        <param name="value">리소스의 값입니다.</param>
        <summary>기록할 리소스 목록에 문자열 리소스를 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 리소스 기록 됩니다 <xref:System.Resources.ResourceWriter.Generate%2A> 라고 합니다.  
  
 기록한 리소스를 검색할 수는 <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.String%29> 메서드를 호출 합니다 <xref:System.Resources.ResourceManager.GetString%2A?displayProperty=nameWithType> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 합니다 <xref:System.Resources.ResourceWriter.AddResource%2A> 문자열 리소스를 추가 하는 방법을 <xref:System.Resources.ResourceWriter> 개체입니다.  
  
 [!code-cpp[System.Resources.ResourceWriter Cstr1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceWriter Cstr1 Example/CPP/resourcewritercstr1.cpp#1)]
 [!code-csharp[System.Resources.ResourceWriter Cstr1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceWriter Cstr1 Example/CS/resourcewritercstr1.cs#1)]
 [!code-vb[System.Resources.ResourceWriter Cstr1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceWriter Cstr1 Example/VB/resourcewritercstr1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> 또는 대소문자만 다른 이름이 이미 이 ResourceWriter에 추가된 경우</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">이 <see cref="T:System.Resources.ResourceWriter" />가 닫혀 있으므로 해당 해시 테이블을 사용할 수 없습니다.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6c5ad891-66a0-4e7a-adcf-f41863ba6d8d">데스크톱 응용 프로그램용 리소스 파일 만들기</related>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, System.IO.Stream value, bool closeAfterWrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddResource(string name, class System.IO.Stream value, bool closeAfterWrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResource (name As String, value As Stream, closeAfterWrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddResource(System::String ^ name, System::IO::Stream ^ value, bool closeAfterWrite);" />
      <MemberSignature Language="F#" Value="member this.AddResource : string * System.IO.Stream * bool -&gt; unit" Usage="resourceWriter.AddResource (name, value, closeAfterWrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.IO.Stream" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="closeAfterWrite" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">추가할 리소스 이름입니다.</param>
        <param name="value">추가할 리소스의 값입니다. 리소스는 <see cref="P:System.IO.Stream.Length" /> 속성을 지원해야 합니다.</param>
        <param name="closeAfterWrite"><see cref="M:System.Resources.ResourceWriter.Generate" /> 메서드를 호출한 후 스트림을 닫으려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>기록할 리소스 목록에 스트림으로 지정된 명명된 리소스를 추가하고 <see cref="M:System.Resources.ResourceWriter.Generate" /> 메서드를 호출한 후 해당 스트림을 닫을지 여부를 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지 원하는 모든 스트림을 지정할 수 있습니다 합니다 <xref:System.IO.Stream.Length%2A?displayProperty=nameWithType> 속성에 대 한 `value`합니다.  
  
 기록한 리소스를 검색할 수는 <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29> 메서드를 호출 합니다 <xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=nameWithType> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 합니다 <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29> 에 저장 된 그래픽 이미지를 추가 하는 메서드를 <xref:System.IO.MemoryStream> 개체를 <xref:System.Resources.ResourceWriter> 개체.  
  
 [!code-csharp[System.Resources.ResourceWriter.AddResource#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcewriter.addresource/cs/addresource_str2.cs#3)]
 [!code-vb[System.Resources.ResourceWriter.AddResource#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcewriter.addresource/vb/addresource_str2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> 또는 대소문자만 다른 이름이 이미 이 <see cref="T:System.Resources.ResourceWriter" />에 추가된 경우  
  
또는 
스트림은 <see cref="P:System.IO.Stream.Length" /> 속성을 지원하지 않습니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 또는 <paramref name="value" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">이 <see cref="T:System.Resources.ResourceWriter" />이 닫혀 있는 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6c5ad891-66a0-4e7a-adcf-f41863ba6d8d">데스크톱 응용 프로그램용 리소스 파일 만들기</related>
      </Docs>
    </Member>
    <Member MemberName="AddResourceData">
      <MemberSignature Language="C#" Value="public void AddResourceData (string name, string typeName, byte[] serializedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddResourceData(string name, string typeName, unsigned int8[] serializedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResourceData (name As String, typeName As String, serializedData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddResourceData(System::String ^ name, System::String ^ typeName, cli::array &lt;System::Byte&gt; ^ serializedData);" />
      <MemberSignature Language="F#" Value="member this.AddResourceData : string * string * byte[] -&gt; unit" Usage="resourceWriter.AddResourceData (name, typeName, serializedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="serializedData" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">추가된 데이터가 포함된 리소스를 식별하는 이름입니다.</param>
        <param name="typeName">추가된 데이터의 형식 이름입니다.</param>
        <param name="serializedData">추가된 데이터의 이진 표현을 포함하는 바이트 배열입니다.</param>
        <summary>기록할 리소스 목록에 리소스로 데이터 단위를 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Resources.ResourceWriter.AddResourceData%2A> 이진 형식에서 리소스를 추가 하는 방법 (즉, 바이트의 배열로) 기록할 리소스 목록에 있습니다. 리소스 및 데이터 자체의 이진 표현에 포함 된 데이터의 형식 이름 리소스의 이름을 지정 해야 합니다. 필요한 각 리소스를 추가한 후 사용 하 여는 <xref:System.Resources.ResourceWriter.Generate%2A> 에 지정 된 리소스 파일에 리소스 목록을 작성 하거나 스트림으로 메서드는 <xref:System.Resources.ResourceWriter.%23ctor%2A> 생성자입니다.  
  
 `typeName` 리소스의 데이터 형식을 나타내는 문자열입니다. 다음 값 중 하나일 수 있습니다.  
  
-   문자열 표현을 `ResourceTypeCode` 리소스의 데이터 형식을 나타내는 열거형 멤버입니다. `ResourceTypeCode` 19 일반적인 데이터 형식 중 하나를 저장 하는 특수 이진 형식을 사용 함을 나타내기 위해에서 사용 되는 개인 열거형입니다. 여기에.NET Framework 기본 데이터 형식 (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.SByte>를 <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>), 뿐만 <xref:System.String>합니다 <xref:System.DateTime>, 및 <xref:System.TimeSpan>합니다. 또한는 `ResourceTypeCode` 열거형에는 다음 표에 나와 있는 값이 포함 됩니다.  
  
    |`ResourceTypeCode` 값|설명|  
    |------------------------------|-----------------|  
    |`ResourceTypeCode.ByteArray`|데이터는 바이트 배열입니다.|  
    |`ResourceTypeCode.Null`|데이터는 null 참조입니다.|  
    |`ResourceTypeCode.Stream`|데이터 스트림으로 저장 됩니다.|  
  
-   해당 이진 데이터에 할당 된 형식의 정규화 된 이름을 포함 하는 문자열을 `serializedData` 인수 (예를 들어 `System.String`). 또한.NET Framework 클래스 라이브러리의 일부분이 아닌 형식 이름, 버전, 문화권 및 형식을 포함 하는 어셈블리의 공개 키 포함 문자열입니다. 예를 들어 다음 문자열 임을 나타내는 serialize 된 데이터의 인스턴스를 `Person` 입력을 `Extensions` 없습니다 공개 키와 지정 된 문화권이 있는 유틸리티를 명명 된 어셈블리의 버전 1.0에서에서 발견 되는 네임 스페이스에 합니다.  
  
     `Extensions.Person, Utility, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null`  
  
 로 작성 된 리소스 데이터를 읽기 위한 병렬 메서드를 <xref:System.Resources.ResourceWriter.AddResourceData%2A> 메서드는 <xref:System.Resources.ResourceReader.GetResourceData%2A?displayProperty=nameWithType>합니다.  
  
   
  
## Examples  
 다음 예제에서는 합니다 <xref:System.Resources.ResourceWriter.AddResourceData%2A> 메서드 두 정수를.resources 파일에 값을 사용 하 여는 <xref:System.Resources.ResourceReader> 검색 하는 개체입니다.  
  
 [!code-csharp[System.Resources.ResourceWriter.AddResourceData#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcewriter.addresourcedata/cs/addresourcedata.cs#1)]
 [!code-vb[System.Resources.ResourceWriter.AddResourceData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcewriter.addresourcedata/vb/addresourcedata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" />, <paramref name="typeName" /> 또는 <paramref name="serializedData" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="name" />(또는 대문자 표시만 다른 이름)이 이 <see cref="T:System.Resources.ResourceWriter" /> 개체에 이미 추가되었습니다.</exception>
        <exception cref="T:System.InvalidOperationException">현재 <see cref="T:System.Resources.ResourceWriter" /> 개체가 초기화되지 않았습니다. 가능한 원인은 <see cref="T:System.Resources.ResourceWriter" /> 개체가 닫혀 있기 때문입니다.</exception>
        <altmember cref="Overload:System.Resources.ResourceWriter.#ctor" />
        <altmember cref="M:System.Resources.ResourceWriter.Close" />
        <altmember cref="M:System.Resources.ResourceWriter.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="resourceWriter.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceWriter.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>리소스를 출력 스트림에 저장한 다음 닫습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResourceWriter.Generate%2A> 암시적으로 호출 <xref:System.Resources.ResourceWriter.Close%2A>필요한 경우.  
  
   
  
## Examples  
 다음 예제에서는 합니다 <xref:System.Resources.ResourceWriter.Close%2A> 모든 리소스를 작성 하는 메서드 개체를 <xref:System.Resources.ResourceWriter> 출력 스트림에 클래스입니다. 다음 코드는 작성기를 종료 합니다.  
  
 [!code-cpp[System.Resources.ResourceWriter Cstr1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceWriter Cstr1 Example/CPP/resourcewritercstr1.cpp#1)]
 [!code-csharp[System.Resources.ResourceWriter Cstr1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceWriter Cstr1 Example/CS/resourcewritercstr1.cs#1)]
 [!code-vb[System.Resources.ResourceWriter Cstr1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceWriter Cstr1 Example/VB/resourcewritercstr1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">개체를 serialize하는 동안 오류가 발생한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="resourceWriter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>리소스 파일 또는 스트림을 닫아서 명시적으로 리소스를 해제할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드의 구현은 동일 <xref:System.Resources.ResourceWriter.Close%2A>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 합니다 <xref:System.Resources.ResourceWriter.Dispose%2A> 모든 리소스를 작성 하는 방법의 개체는 <xref:System.Resources.ResourceWriter> 출력 스트림에 클래스입니다. 다음 코드는 작성기를 종료 하 고 작성기 리소스를 다른 프로세스에 사용할 수 있도록 합니다.  
  
 [!code-cpp[System.Resources.ResourceWriter.Dispose Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceWriter.Dispose Example/CPP/resourcewriterdispose.cpp#1)]
 [!code-csharp[System.Resources.ResourceWriter.Dispose Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceWriter.Dispose Example/CS/resourcewriterdispose.cs#1)]
 [!code-vb[System.Resources.ResourceWriter.Dispose Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceWriter.Dispose Example/VB/resourcewriterdispose.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">개체를 serialize하는 동안 오류가 발생한 경우</exception>
        <altmember cref="T:System.IDisposable" />
      </Docs>
    </Member>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public void Generate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Generate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceWriter.Generate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Generate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Generate();" />
      <MemberSignature Language="F#" Value="abstract member Generate : unit -&gt; unit&#xA;override this.Generate : unit -&gt; unit" Usage="resourceWriter.Generate " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceWriter.Generate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>모든 리소스를 시스템 기본 형식으로 출력 스트림에 저장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResourceWriter.Generate%2A> 메서드를 암시적으로 호출 합니다 <xref:System.Resources.ResourceWriter.Close%2A> 응용 프로그램 코드에서 호출 하지 않으면 메서드.  
  
 <xref:System.Resources.ResourceWriter.Generate%2A> 에 대 한 모든 호출 후 한 번만 호출할 수 있습니다 <xref:System.Resources.ResourceWriter.AddResource%2A> 고 <xref:System.Resources.ResourceWriter.AddResourceData%2A> 이루어졌습니다. 리소스를 쓰는 동안 예외가 발생 하는 경우에 출력 스트림에 잘못 된 정보를 쓸 수 없도록 닫힙니다.  
  
 <xref:System.Resources.ResourceWriter.Generate%2A> 정상적인 경우에 출력 스트림을 닫지 않습니다. 호출 해야를.resources 파일을 사용 하 여 추가 데이터를 결합 하는 하거나 스트림에 대 한 액세스를 나중에 필요 하지 않으면 <xref:System.Resources.ResourceWriter.Close%2A> 호출한 후 <xref:System.Resources.ResourceWriter.Generate%2A>를 호출 하기만 하면 됩니다 또는 <xref:System.Resources.ResourceWriter.Close%2A>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 합니다 <xref:System.Resources.ResourceWriter.Generate%2A> 모든 리소스를 작성 하는 방법의 개체는 <xref:System.Resources.ResourceWriter> 출력 스트림에 클래스  
  
 [!code-cpp[System.Resources.ResourceWriter.Generate Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceWriter.Generate Example/CPP/resourcewritergenerate.cpp#1)]
 [!code-csharp[System.Resources.ResourceWriter.Generate Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceWriter.Generate Example/CS/resourcewritergenerate.cs#1)]
 [!code-vb[System.Resources.ResourceWriter.Generate Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceWriter.Generate Example/VB/resourcewritergenerate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">I/O 오류가 발생했습니다.</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">개체를 serialize하는 동안 오류가 발생한 경우</exception>
        <exception cref="T:System.InvalidOperationException">이 <see cref="T:System.Resources.ResourceWriter" />가 닫혀 있으므로 해당 해시 테이블을 사용할 수 없습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="TypeNameConverter">
      <MemberSignature Language="C#" Value="public Func&lt;Type,string&gt; TypeNameConverter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Type, string&gt; TypeNameConverter" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResourceWriter.TypeNameConverter" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeNameConverter As Func(Of Type, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;Type ^, System::String ^&gt; ^ TypeNameConverter { Func&lt;Type ^, System::String ^&gt; ^ get(); void set(Func&lt;Type ^, System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeNameConverter : Func&lt;Type, string&gt; with get, set" Usage="System.Resources.ResourceWriter.TypeNameConverter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Type,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>정규화된 어셈블리 이름을 사용하여 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 이전의 .NET Framework 대상 버전이 리소스 어셈블리에 기록되도록 설정하는 대리자를 가져오거나 설정합니다.</summary>
        <value>대리자에 의해 캡슐화되는 형식입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)] 및 이전 버전의.NET Framework를 대상으로 하는 경우 MSBuild는이 속성을 설정 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>