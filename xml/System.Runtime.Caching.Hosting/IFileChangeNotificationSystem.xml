<Type Name="IFileChangeNotificationSystem" FullName="System.Runtime.Caching.Hosting.IFileChangeNotificationSystem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="11a02d4fad4f8938df4cd402b81a6e257d7f1bac" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52207568" /></Metadata><TypeSignature Language="C#" Value="public interface IFileChangeNotificationSystem" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFileChangeNotificationSystem" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFileChangeNotificationSystem" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFileChangeNotificationSystem" />
  <TypeSignature Language="F#" Value="type IFileChangeNotificationSystem = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>사용자 지정 <see cref="T:System.Runtime.Caching.FileChangeMonitor" /> 개체를 캐시 구현에 노출하는 방법을 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET에서는 <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> 인터페이스는 내부 파일 변경 알림 관리에 대 한 액세스를 제공 합니다.  
  
 합니다 <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> 인터페이스에서 내부적으로 사용 되는 <xref:System.Runtime.Caching.HostFileChangeMonitor> 클래스입니다.  
  
 캐시 구현이 ASP.NET 애플리케이션 도메인에서 실행 될 때 ASP.NET에서 구현 하는 <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> 를 통해 인터페이스는 <xref:System.Runtime.Caching.ObjectCache.Host%2A> 속성입니다. <xref:System.Runtime.Caching.HostFileChangeMonitor> 클래스가이 속성을 검색 하 고 ASP.NET 파일 변경 알림 시스템을 사용 하 여 파일 변경 알림에 따라 캐시 엔트리를 제거 합니다.  
  
 ASP.NET 이외의 애플리케이션에는 사용자 지정을 구현 하는 호스트 환경이 없는 <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> 인터페이스입니다. 결과적으로 <xref:System.Runtime.Caching.HostFileChangeMonitor> 클래스가 사용 하는 <xref:System.IO.FileSystemWatcher> CLR의 클래스입니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="StartMonitoring">
      <MemberSignature Language="C#" Value="public void StartMonitoring (string filePath, System.Runtime.Caching.OnChangedCallback onChangedCallback, out object state, out DateTimeOffset lastWriteTime, out long fileSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartMonitoring(string filePath, class System.Runtime.Caching.OnChangedCallback onChangedCallback, [out] object&amp; state, [out] valuetype System.DateTimeOffset&amp; lastWriteTime, [out] int64&amp; fileSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartMonitoring(System::String ^ filePath, System::Runtime::Caching::OnChangedCallback ^ onChangedCallback, [Runtime::InteropServices::Out] System::Object ^ % state, [Runtime::InteropServices::Out] DateTimeOffset % lastWriteTime, [Runtime::InteropServices::Out] long % fileSize);" />
      <MemberSignature Language="F#" Value="abstract member StartMonitoring : string * System.Runtime.Caching.OnChangedCallback *  *  *  -&gt; unit" Usage="iFileChangeNotificationSystem.StartMonitoring (filePath, onChangedCallback, state, lastWriteTime, fileSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="onChangedCallback" Type="System.Runtime.Caching.OnChangedCallback" />
        <Parameter Name="state" Type="System.Object" RefType="out" />
        <Parameter Name="lastWriteTime" Type="System.DateTimeOffset" RefType="out" />
        <Parameter Name="fileSize" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="filePath">변경 내용을 모니터링할 디렉터리 또는 파일의 정규화된 실제 경로입니다.</param>
        <param name="onChangedCallback"><see cref="T:System.Runtime.Caching.OnChangedCallback" /> 대리자를 구현하는 메서드에 대한 참조입니다. 모니터링되는 파일 또는 디렉터리를 변경하면 <see cref="T:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem" /> 인터페이스의 호스트 환경 구현이 <see cref="T:System.Runtime.Caching.OnChangedCallback" /> 클래스를 호출하여 이벤트를 발생시킵니다.</param>
        <param name="state">호스트 환경에서 제공하는 상태입니다. 캐시 구현 및 사용자 지정 변경 모니터는 상태 값을 불분명한 값으로 취급해야 합니다. 그러나 캐시 구현이 <see cref="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)" /> 메서드를 호출할 때 호스트 환경에 전송될 수 있도록 상태를 저장해야 합니다.</param>
        <param name="lastWriteTime">이 메서드가 반환될 때 <paramref name="filePath" />에 쓰기 작업이 마지막으로 수행된 날짜와 시간을 포함합니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 이 매개 변수는 호스트 환경에서 반환됩니다.</param>
        <param name="fileSize">이 메서드가 반환될 때 모니터링된 <paramref name="filePath" />의 총 크기를 포함합니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다. 이 매개 변수는 호스트 환경에서 반환됩니다.</param>
        <summary>모니터링할 파일 경로를 호스트 환경에 등록합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 사용자 지정 캐시 개체에서 사용 하 고 사용자 지정 호스트 환경의 구현 하는 모니터 변경 <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> 호스트 환경으로 모니터링 하는 것에 대 한 파일 경로 등록 하기 위해 인터페이스입니다. <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring%2A> 구현자의 메서드를 호출 합니다 <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> 파일 또는 디렉터리 변경 모니터링을 위해 등록 하려면 인터페이스.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopMonitoring">
      <MemberSignature Language="C#" Value="public void StopMonitoring (string filePath, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopMonitoring(string filePath, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopMonitoring (filePath As String, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopMonitoring(System::String ^ filePath, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member StopMonitoring : string * obj -&gt; unit" Usage="iFileChangeNotificationSystem.StopMonitoring (filePath, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="filePath">모니터링을 중지할 파일 또는 폴더의 경로입니다. 이 경로는 <see cref="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)" /> 메서드에 대한 이전 호출에 전달된 파일 경로 값과 일치해야 합니다.</param>
        <param name="state"><see cref="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)" /> 메서드에 대한 이전 호출 시 호스트 환경에서 처음 제공한 상태 정보입니다.</param>
        <summary>변경 모니터링을 끝냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring%2A> 메서드를 호출 하 여 사용자 지정 캐시 해야 하 고 사용자 지정 파일 경로 및 디렉터리를 모니터링을 중지 하기 위해 호스트 환경에서 삭제 되는 모니터를 변경 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>