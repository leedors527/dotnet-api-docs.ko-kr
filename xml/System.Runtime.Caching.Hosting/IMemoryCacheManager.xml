<Type Name="IMemoryCacheManager" FullName="System.Runtime.Caching.Hosting.IMemoryCacheManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6f99638496338d9b269017fe2171b6dbbe3b1f43" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36542257" /></Metadata><TypeSignature Language="C#" Value="public interface IMemoryCacheManager" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMemoryCacheManager" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.Hosting.IMemoryCacheManager" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMemoryCacheManager" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMemoryCacheManager" />
  <TypeSignature Language="F#" Value="type IMemoryCacheManager = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>캐시가 캐시 메모리 사용량을 호스트 환경에 알리기 위해 사용하는 인터페이스를 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Runtime.Caching.Hosting.IMemoryCacheManager> 인터페이스는 ASP.NET과 같은 호스트 환경에 의해 구현 되며 되 <xref:System.Runtime.Caching.ObjectCache> 메모리 사용량을 확인 하려면 호스트 환경과 상호 작용 해야 하는 구현 합니다. 캐시는 종종 상당한 양의 메모리를 소비 하므로 <xref:System.Runtime.Caching.Hosting.IMemoryCacheManager> 인터페이스에는 호스트 환경 메모리 사용량을 관리할 수 있습니다.  
  
 일반적으로 <xref:System.Runtime.Caching.ObjectCache> 구현은 메모리에 캐시 개체를 관리 하는이 인터페이스를 사용 합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ReleaseCache">
      <MemberSignature Language="C#" Value="public void ReleaseCache (System.Runtime.Caching.MemoryCache cache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseCache(class System.Runtime.Caching.MemoryCache cache) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.Hosting.IMemoryCacheManager.ReleaseCache(System.Runtime.Caching.MemoryCache)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseCache (cache As MemoryCache)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseCache(System::Runtime::Caching::MemoryCache ^ cache);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseCache : System.Runtime.Caching.MemoryCache -&gt; unit" Usage="iMemoryCacheManager.ReleaseCache cache" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cache" Type="System.Runtime.Caching.MemoryCache" />
      </Parameters>
      <Docs>
        <param name="cache">캐시에 대한 참조입니다.</param>
        <summary>호스트 환경에서 캐시에 대한 참조를 모두 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 캐시에 이전에 자체 호스트 환경에 등록 하는 경우 캐시를 호출할 수는 <xref:System.Runtime.Caching.Hosting.IMemoryCacheManager.ReleaseCache%2A> 메서드 참조를 해제 합니다. 캐시에서 삭제 될 때 호출 해야 합니다 <xref:System.Runtime.Caching.Hosting.IMemoryCacheManager.ReleaseCache%2A> 캐시에 참조가 없는 호스트에서 유지 되는 있는지 확인 하는 방법입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCacheSize">
      <MemberSignature Language="C#" Value="public void UpdateCacheSize (long size, System.Runtime.Caching.MemoryCache cache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateCacheSize(int64 size, class System.Runtime.Caching.MemoryCache cache) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.Hosting.IMemoryCacheManager.UpdateCacheSize(System.Int64,System.Runtime.Caching.MemoryCache)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateCacheSize (size As Long, cache As MemoryCache)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateCacheSize(long size, System::Runtime::Caching::MemoryCache ^ cache);" />
      <MemberSignature Language="F#" Value="abstract member UpdateCacheSize : int64 * System.Runtime.Caching.MemoryCache -&gt; unit" Usage="iMemoryCacheManager.UpdateCacheSize (size, cache)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="cache" Type="System.Runtime.Caching.MemoryCache" />
      </Parameters>
      <Docs>
        <param name="size">캐시가 소비하는 메모리의 크기(바이트)입니다.</param>
        <param name="cache">캐시에 대한 참조입니다.</param>
        <summary>현재 캐시의 크기를 보고합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 잘 동작 하는 캐시 구현을 사용 해야는 <xref:System.Runtime.Caching.Hosting.IMemoryCacheManager.UpdateCacheSize%2A> 호스트 환경에 캐시의 메모리 사용 공간 크기를 주기적으로 보고 하는 방법입니다.  
  
 캐시 구현이 크기를 보고 하는 또한 매개 변수로 자체에 대 한 참조를 전달 합니다. 이 통해 다음 작업을 수행 하는 호스트 환경:  
  
-   알려진된 개체 캐시의 목록을 유지 관리 합니다.  
  
-   캐시를 호출 하 고 필요한 경우 캐시 보고 된 크기를 기준으로 하는 캐시 항목의 비율을 자르는 요청 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>