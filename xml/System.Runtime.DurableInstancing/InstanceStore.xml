<Type Name="InstanceStore" FullName="System.Runtime.DurableInstancing.InstanceStore">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c2b12f4e5d58ec2076b24cd5a49c59b380186a2e" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58710048" /></Metadata><TypeSignature Language="C#" Value="public abstract class InstanceStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InstanceStore extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.DurableInstancing.InstanceStore" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InstanceStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstanceStore abstract" />
  <TypeSignature Language="F#" Value="type InstanceStore = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>인스턴스 저장소를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지속성 공급자는 <xref:System.Runtime.DurableInstancing.InstanceStore> 클래스의 구체적 구현을 통해 인스턴스 저장소에 대한 액세스를 제공합니다.  
  
 지속성 공급자는 명령 실행이 종료된 후에도 TryCommand에 전달된 핸들에서 InstanceHandle.Free를 호출할 수 있습니다. 그러나 지속성 공급자는 InstanceHandle 또는 InstanceOwner 개체에 대한 강한 참조를 보유할 수 없습니다. 이 경우 InstanceStore의 가비지 수집이 차단될 수 있기 때문입니다.  
  
> [!WARNING]
>  지속형된 워크플로에 대 한 워크플로 정의 변경할 수 없습니다. 워크플로 정의 유지 된 후 변경 되 면 워크플로 런타임은 워크플로가 다시 로드 되 면 충돌 합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InstanceStore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InstanceStore();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Runtime.DurableInstancing.InstanceStore" /> 클래스의 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExecute">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute (System.Runtime.DurableInstancing.InstanceHandle handle, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute(class System.Runtime.DurableInstancing.InstanceHandle handle, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginExecute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute (handle As InstanceHandle, command As InstancePersistenceCommand, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecute(System::Runtime::DurableInstancing::InstanceHandle ^ handle, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginExecute : System.Runtime.DurableInstancing.InstanceHandle * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instanceStore.BeginExecute (handle, command, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handle">인스턴스 핸들입니다.</param>
        <param name="command">실행할 명령입니다.</param>
        <param name="timeout">명령 실행에 대한 시간 제한 값입니다.</param>
        <param name="callback">비동기 작업의 완료에 대한 알림을 수신하는 비동기 콜백 대리자입니다.</param>
        <param name="state">상태 정보입니다.</param>
        <summary><see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> 및 <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />와 같은 지속성 명령을 비동기적으로 실행합니다.</summary>
        <returns>비동기 작업의 상태입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호스트는 <xref:System.Runtime.DurableInstancing.InstanceStore.BeginExecute%2A> 메서드를 호출하여 인스턴스 핸들에 대해 비동기적으로 지속성 명령을 실행합니다. 호스트는 <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> 메서드를 호출하여 인스턴스 핸들을 가져옵니다. 인스턴스 핸들은 인스턴스, 인스턴스 소유자 또는 인스턴스 잠금과 같은 명령 주체 및 컨텍스트를 나타내는 엔터티에 바인딩될 수 있습니다.  하나의 인스턴스 핸들에 대해 한 번에 하나의 명령만 실행할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual IAsyncResult BeginTryCommand (System.Runtime.DurableInstancing.InstancePersistenceContext context, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult BeginTryCommand(class System.Runtime.DurableInstancing.InstancePersistenceContext context, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function BeginTryCommand (context As InstancePersistenceContext, command As InstancePersistenceCommand, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual IAsyncResult ^ BeginTryCommand(System::Runtime::DurableInstancing::InstancePersistenceContext ^ context, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginTryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instanceStore.BeginTryCommand (context, command, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.DurableInstancing.InstancePersistenceContext" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">인스턴스 컨텍스트입니다.</param>
        <param name="command">실행할 지속성 명령입니다.</param>
        <param name="timeout">명령 실행에 대한 시간 제한 값입니다.</param>
        <param name="callback">비동기 작업의 완료에 대한 알림을 수신하는 비동기 콜백 대리자입니다.</param>
        <param name="state">상태 정보입니다.</param>
        <summary>지속성 공급자는 특정 지속성 명령이 실행될 수 있는지 여부를 확인하는 이 메서드를 구현합니다. 명령을 실행할 수 있으면 비동기적으로 명령을 실행합니다.</summary>
        <returns>비동기 작업의 상태입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 명령을 실행할 수 있으면 지속성 공급자는 InstancePersistenceContext에서 관련 메서드를 호출하여 명령 결과를 제공합니다.  
  
> [!WARNING]
>  이 메서드는 선언 하는 경우에 `virtual` 대신 `abstract`를 구현 하지 않습니다. 기능을 제공 하기 위해이 메서드를 재정의 해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWaitForEvents">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWaitForEvents (System.Runtime.DurableInstancing.InstanceHandle handle, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginWaitForEvents(class System.Runtime.DurableInstancing.InstanceHandle handle, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWaitForEvents (handle As InstanceHandle, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWaitForEvents(System::Runtime::DurableInstancing::InstanceHandle ^ handle, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginWaitForEvents : System.Runtime.DurableInstancing.InstanceHandle * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instanceStore.BeginWaitForEvents (handle, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handle">인스턴스 핸들입니다.</param>
        <param name="timeout">작업 시간이 초과되는 기간입니다.</param>
        <param name="callback">비동기 작업이 완료된 후 호출되는 메서드입니다.</param>
        <param name="state">비동기 작업과 관련된 상태 정보가 포함된 개체입니다.</param>
        <summary>인스턴스 저장소에서 특정 인스턴스 핸들에 대해 발생한 이벤트를 수신하기 위하여 비동기 작업을 시작합니다.</summary>
        <returns><see cref="T:System.IAsyncResult" /> 개체를 반환합니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstanceHandle">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>인스턴스 핸들을 만듭니다. DefaultInstanceOwner가 설정되면 값은 자동으로 새 핸들의 인스턴스 소유자로 바인딩됩니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle () As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle();" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : unit -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>인스턴스 핸들을 만듭니다.</summary>
        <returns>인스턴스 핸들입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (instanceId As Guid) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : Guid -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">인스턴스 식별자입니다. Guid.Empty가 아니어야 합니다.</param>
        <summary>인스턴스 핸들을 만듭니다.  DefaultInstanceOwner가 설정되면 값은 자동으로 새 핸들의 인스턴스 소유자로 바인딩됩니다.  매개 변수로 전달된 인스턴스 식별자는 자동으로 새 핸들의 인스턴스로 바인딩됩니다.</summary>
        <returns>인스턴스 핸들입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (owner As InstanceOwner) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : System.Runtime.DurableInstancing.InstanceOwner -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="owner">인스턴스 소유자입니다.</param>
        <summary>인스턴스 핸들을 만듭니다. 매개 변수로 전달된 인스턴스 소유자가 null이 아닌 경우 값은 자동으로 새 핸들의 인스턴스 소유자로 바인딩됩니다.  그렇지 않은 경우 DefaultInstanceOwner가 설정되더라도 인스턴스 소유자가 바인딩되지 않습니다.</summary>
        <returns>인스턴스 핸들입니다. null 값은 새 핸들이 인스턴스 소유자로 자동으로 바인딩되지 않아야 함을 나타냅니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (System.Runtime.DurableInstancing.InstanceOwner owner, Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(class System.Runtime.DurableInstancing.InstanceOwner owner, valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (owner As InstanceOwner, instanceId As Guid) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(System::Runtime::DurableInstancing::InstanceOwner ^ owner, Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : System.Runtime.DurableInstancing.InstanceOwner * Guid -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle (owner, instanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="owner">인스턴스 소유자를 나타내는 InstanceOwner 개체입니다. null을 이 매개 변수의 값으로 전달하여 새 핸들이 인스턴스 소유자로 자동으로 바인딩되지 않아야 함을 나타냅니다.</param>
        <param name="instanceId">인스턴스 식별자입니다. Guid.Empty가 아니어야 합니다.</param>
        <summary>인스턴스 핸들을 만듭니다. 매개 변수로 전달된 인스턴스 소유자가 null이 아닌 경우 값은 자동으로 새 핸들의 인스턴스 소유자로 바인딩됩니다.  그렇지 않은 경우 DefaultInstanceOwner가 설정되더라도 인스턴스 소유자가 바인딩되지 않습니다. 매개 변수로 전달된 인스턴스 식별자는 자동으로 새 핸들의 인스턴스로 바인딩됩니다.</summary>
        <returns>인스턴스 핸들입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceOwner DefaultInstanceOwner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceOwner DefaultInstanceOwner" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultInstanceOwner As InstanceOwner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceOwner ^ DefaultInstanceOwner { System::Runtime::DurableInstancing::InstanceOwner ^ get(); void set(System::Runtime::DurableInstancing::InstanceOwner ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceOwner with get, set" Usage="System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceOwner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>기본 인스턴스 소유자를 가져오거나 설정합니다.</summary>
        <value>기본 인스턴스 소유자입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일부 호스트는 이 속성을 읽어 사용할 소유자를 유추합니다. WorkflowApplication에서 이 속성을 사용할 수 있습니다. WorkflowServiceHost에서는 이 속성을 사용하지 않습니다.  
  
 DefaultInstanceOwner 속성은 더 이상 필요한 경우 null로 설정 되어야 합니다. DefaultInstanceOwner가 null이 아닌 경우 InstanceStore 개체가 가비지 수집되지 않을 수 있습니다.  
  
> [!WARNING]
>  이 메서드는 선언 하는 경우에 `virtual` 대신 `abstract`를 구현 하지 않습니다. 기능을 제공 하기 위해이 메서드를 재정의 해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndExecute">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceView EndExecute (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceView EndExecute(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndExecute(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecute (result As IAsyncResult) As InstanceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceView ^ EndExecute(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndExecute : IAsyncResult -&gt; System.Runtime.DurableInstancing.InstanceView" Usage="instanceStore.EndExecute result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">작업의 결과입니다.</param>
        <summary>비동기 작업을 종료합니다.</summary>
        <returns>명령이 성공적으로 완료된 후 인스턴스의 알려진 상태를 나타내는 InstanceView 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 트랜잭션에서 BeginExecute가 호출되면 이 상태에는 커밋되지 않은 데이터가 포함될 수 있습니다. 트랜잭션이 성공적으로 커밋되면 InstanceView 개체의 데이터는 커밋된 것으로 간주될 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual bool EndTryCommand (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool EndTryCommand(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndTryCommand(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function EndTryCommand (result As IAsyncResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool EndTryCommand(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndTryCommand : IAsyncResult -&gt; bool&#xA;override this.EndTryCommand : IAsyncResult -&gt; bool" Usage="instanceStore.EndTryCommand result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">작업의 결과입니다.</param>
        <summary>비동기 작업을 끝냅니다.</summary>
        <returns>지속성 공급자 구현에서는 BeginTryCommand 메서드에 전달된 명령을 지원하지 않을 경우 false를 반환합니다. 그렇지 않은 경우 true를 반환하거나 예외를 throw합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  이 메서드는 선언 하는 경우에 `virtual` 대신 `abstract`를 구현 하지 않습니다. 기능을 제공 하기 위해이 메서드를 재정의 해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndWaitForEvents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; EndWaitForEvents (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; EndWaitForEvents(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWaitForEvents (result As IAsyncResult) As List(Of InstancePersistenceEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ EndWaitForEvents(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndWaitForEvents : IAsyncResult -&gt; System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;" Usage="instanceStore.EndWaitForEvents result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Begin 메서드에 의해 클라이언트에 전달된 IAsyncResult 개체입니다.</param>
        <summary><see cref="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" /> 메서드에 의해 시작된 비동기 작업을 끝냅니다.</summary>
        <returns><see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> 개체의 목록을 반환합니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceView Execute (System.Runtime.DurableInstancing.InstanceHandle handle, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceView Execute(class System.Runtime.DurableInstancing.InstanceHandle handle, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.Execute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute (handle As InstanceHandle, command As InstancePersistenceCommand, timeout As TimeSpan) As InstanceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceView ^ Execute(System::Runtime::DurableInstancing::InstanceHandle ^ handle, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Runtime.DurableInstancing.InstanceHandle * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan -&gt; System.Runtime.DurableInstancing.InstanceView" Usage="instanceStore.Execute (handle, command, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="handle">인스턴스 핸들입니다.</param>
        <param name="command">실행할 명령입니다.</param>
        <param name="timeout">작업의 시간 제한 값입니다.</param>
        <summary>지속성 명령을 동기적으로 실행합니다. 지속성 명령의 예로는 <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> 및 <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />가 있습니다.</summary>
        <returns>명령이 성공적으로 완료된 후 인스턴스의 알려진 상태를 나타내는 InstanceView 개체입니다.  트랜잭션에서 Execute가 호출되면 이 상태에는 커밋되지 않은 데이터가 포함될 수 있습니다. 트랜잭션이 성공적으로 커밋되면 InstanceView 개체의 데이터는 커밋된 것으로 간주될 수 있습니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호스트는 <xref:System.Runtime.DurableInstancing.InstanceStore.Execute%2A> 메서드를 호출하여 인스턴스 핸들에 대해 지속성 명령을 실행합니다. 이때 인스턴스 핸들은 호스트가 <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> 메서드를 호출하여 가져옵니다. 인스턴스 핸들은 인스턴스, 인스턴스 소유자 또는 인스턴스 잠금과 같은 명령 주체 및 컨텍스트를 나타내는 엔터티에 바인딩될 수 있습니다.  하나의 인스턴스 핸들에 대해 한 번에 하나의 명령만 실행할 수 있습니다.  
  
> [!WARNING]
>  이 메서드가 실행 되는 경우는 <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand>, 만들어집니다는 <xref:System.Runtime.DurableInstancing.InstanceOwner> 인스턴스에 바인딩합니다. 즉, 다른 프로세스가 해당 워크플로;에 액세스할 수 있게 됩니다는 프로세스 종료 되는 경우 워크플로 복구 하거나 실행할 수 없습니다. 이러한 워크플로 다시 실행 되는 경우는 <xref:System.Runtime.DurableInstancing.InstanceLockedException> throw 됩니다.  
>   
>  하는 경우 <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand> 는 사용 되지 인스턴스 저장소 만들어집니다. 임시 <xref:System.Runtime.DurableInstancing.InstanceOwner> 하는 프로세스의 끝에 삭제 됩니다. 그러나 프로세스 워크플로의 마지막 유지 지점 전에 종료 되는 경우이 예외가 throw 됩니다, 기간에 지정 된 경우가 아니면 합니다 **HostLockRenewalPeriod** 매개 변수가 만료 되었습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="protected System.Runtime.DurableInstancing.InstancePersistenceEvent[] GetEvents (System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Runtime.DurableInstancing.InstancePersistenceEvent[] GetEvents(class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.GetEvents(System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetEvents (owner As InstanceOwner) As InstancePersistenceEvent()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ GetEvents(System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.GetEvents : System.Runtime.DurableInstancing.InstanceOwner -&gt; System.Runtime.DurableInstancing.InstancePersistenceEvent[]" Usage="instanceStore.GetEvents owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstancePersistenceEvent[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="owner">인스턴스의 소유자를 나타내는 <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> 개체입니다.</param>
        <summary><see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> 개체에 바인딩된, 신호를 받은 모든 이벤트를 가져옵니다.</summary>
        <returns><see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> 개체의 배열을 반환합니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstanceOwners">
      <MemberSignature Language="C#" Value="protected System.Runtime.DurableInstancing.InstanceOwner[] GetInstanceOwners ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Runtime.DurableInstancing.InstanceOwner[] GetInstanceOwners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetInstanceOwners () As InstanceOwner()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Runtime::DurableInstancing::InstanceOwner ^&gt; ^ GetInstanceOwners();" />
      <MemberSignature Language="F#" Value="member this.GetInstanceOwners : unit -&gt; System.Runtime.DurableInstancing.InstanceOwner[]" Usage="instanceStore.GetInstanceOwners " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceOwner[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>유효한 인스턴스 핸들에 바인딩되거나 가비지 수집되지 않은 각 InstanceOwner 개체를 가져옵니다.</summary>
        <returns>인스턴스 소유자입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 InstanceOwner 개체 배열을 반환합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFreeInstanceHandle">
      <MemberSignature Language="C#" Value="protected virtual void OnFreeInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle, object userContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFreeInstanceHandle(class System.Runtime.DurableInstancing.InstanceHandle instanceHandle, object userContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFreeInstanceHandle(System::Runtime::DurableInstancing::InstanceHandle ^ instanceHandle, System::Object ^ userContext);" />
      <MemberSignature Language="F#" Value="abstract member OnFreeInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle * obj -&gt; unit&#xA;override this.OnFreeInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle * obj -&gt; unit" Usage="instanceStore.OnFreeInstanceHandle (instanceHandle, userContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceHandle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="userContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceHandle">해제된 인스턴스 핸들입니다.</param>
        <param name="userContext">OnNewInstanceHandle에서 반환된 지속성 공급자의 사용자 컨텍스트 정보이거나, OnNewInstanceHandle이 재정의되지 않는 경우 null입니다.</param>
        <summary>인스턴스 핸들이 해제될 때 호출됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNewInstanceHandle">
      <MemberSignature Language="C#" Value="protected virtual object OnNewInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object OnNewInstanceHandle(class System.Runtime.DurableInstancing.InstanceHandle instanceHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ OnNewInstanceHandle(System::Runtime::DurableInstancing::InstanceHandle ^ instanceHandle);" />
      <MemberSignature Language="F#" Value="abstract member OnNewInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle -&gt; obj&#xA;override this.OnNewInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle -&gt; obj" Usage="instanceStore.OnNewInstanceHandle instanceHandle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceHandle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
      </Parameters>
      <Docs>
        <param name="instanceHandle">인스턴스 핸들입니다.</param>
        <summary>새 인스턴스 핸들이 만들어질 때 호출됩니다.</summary>
        <returns>개체입니다.  이 사용자 컨텍스트 개체는 핸들을 사용하여 명령이 실행될 때, 그리고 핸들이 해제될 때 지속성 공급자에서 사용할 수 있습니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetEvent">
      <MemberSignature Language="C#" Value="protected void ResetEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ResetEvent(class System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.ResetEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ResetEvent (persistenceEvent As InstancePersistenceEvent, owner As InstanceOwner)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ResetEvent(System::Runtime::DurableInstancing::InstancePersistenceEvent ^ persistenceEvent, System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.ResetEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent * System.Runtime.DurableInstancing.InstanceOwner -&gt; unit" Usage="instanceStore.ResetEvent (persistenceEvent, owner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistenceEvent" Type="System.Runtime.DurableInstancing.InstancePersistenceEvent" />
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="persistenceEvent">이전에 신호를 받았으며 다시 설정될 지속성 이벤트입니다.</param>
        <param name="owner">지속성 이벤트와 연결된 인스턴스 소유자입니다.</param>
        <summary>신호를 받은 이벤트를 다시 설정하고, 인스턴스 소유자가 유지 관리하는 신호를 받은 이벤트 목록에서 이벤트를 제거합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignalEvent">
      <MemberSignature Language="C#" Value="protected void SignalEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SignalEvent(class System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.SignalEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SignalEvent (persistenceEvent As InstancePersistenceEvent, owner As InstanceOwner)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SignalEvent(System::Runtime::DurableInstancing::InstancePersistenceEvent ^ persistenceEvent, System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.SignalEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent * System.Runtime.DurableInstancing.InstanceOwner -&gt; unit" Usage="instanceStore.SignalEvent (persistenceEvent, owner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistenceEvent" Type="System.Runtime.DurableInstancing.InstancePersistenceEvent" />
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="persistenceEvent">신호를 받을 지속성 이벤트입니다.</param>
        <param name="owner">인스턴스 소유자입니다.</param>
        <summary>인스턴스 저장소는 이 메서드를 호출하여 이벤트를 알립니다. 이 지속성 이벤트를 구독하는 워크플로 호스트에서 이 신호를 받아 적절한 작업을 수행합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryCommand (System.Runtime.DurableInstancing.InstancePersistenceContext context, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryCommand(class System.Runtime.DurableInstancing.InstancePersistenceContext context, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.TryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryCommand (context As InstancePersistenceContext, command As InstancePersistenceCommand, timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryCommand(System::Runtime::DurableInstancing::InstancePersistenceContext ^ context, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member TryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan -&gt; bool&#xA;override this.TryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan -&gt; bool" Usage="instanceStore.TryCommand (context, command, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.DurableInstancing.InstancePersistenceContext" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="context">인스턴스 컨텍스트입니다.</param>
        <param name="command">실행할 명령입니다.</param>
        <param name="timeout">작업의 시간 제한 값입니다.</param>
        <summary>지속성 공급자는 특정 지속성 명령이 실행될 수 있는지 여부를 확인하는 이 메서드를 구현하고 명령을 실행할 수 있으면 이를 비동기적으로 실행합니다.</summary>
        <returns>지속성 공급자 구현에서는 매개 변수로 전달된 명령을 지원하지 않는 경우 <see langword="false" />를 반환합니다. 그렇지 않은 경우 <see langword="true" />를 반환하거나 예외를 throw합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 명령을 실행할 수 있으면 지속성 공급자는 <xref:System.Runtime.DurableInstancing.InstancePersistenceContext>에서 관련 메서드를 호출하여 명령 결과를 제공합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForEvents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; WaitForEvents (System.Runtime.DurableInstancing.InstanceHandle handle, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; WaitForEvents(class System.Runtime.DurableInstancing.InstanceHandle handle, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.WaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForEvents (handle As InstanceHandle, timeout As TimeSpan) As List(Of InstancePersistenceEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ WaitForEvents(System::Runtime::DurableInstancing::InstanceHandle ^ handle, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.WaitForEvents : System.Runtime.DurableInstancing.InstanceHandle * TimeSpan -&gt; System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;" Usage="instanceStore.WaitForEvents (handle, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="handle">이벤트에 바인딩된 인스턴스 핸들입니다.</param>
        <param name="timeout">대기 작업 시간이 초과되는 시간 범위입니다.</param>
        <summary>워크플로 호스트는 일반적으로 이 메서드를 호출하여 이벤트 신호를 대기합니다.</summary>
        <returns><see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> 개체의 목록입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>