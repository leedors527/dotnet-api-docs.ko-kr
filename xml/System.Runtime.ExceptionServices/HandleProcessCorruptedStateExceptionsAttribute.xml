<Type Name="HandleProcessCorruptedStateExceptionsAttribute" FullName="System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5b538bc310f2c201d2a8a184b0fff905b5602c52" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58711691" /></Metadata><TypeSignature Language="C#" Value="public sealed class HandleProcessCorruptedStateExceptionsAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HandleProcessCorruptedStateExceptionsAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HandleProcessCorruptedStateExceptionsAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class HandleProcessCorruptedStateExceptionsAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type HandleProcessCorruptedStateExceptionsAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>관리되는 코드가 손상된 프로세스 상태를 나타내는 예외를 처리하도록 합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 손상 된 프로세스 상태 예외는 손상 된 프로세스의 상태를 나타내는 예외입니다. 이 상태에서 응용 프로그램을 실행 하는 것은 좋지 않습니다.  
  
 기본적으로 CLR (공용 언어 런타임)을 전달 하지 이러한 예외 관리 코드로 하며 `try` / `catch` 블록 (및 다른 예외 처리 절)에 호출 되지 않습니다. 이러한 예외를 처리 하 여 유지 관리 하려는 확실히 인 경우 적용 해야 합니다는 <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute> 특성을 메서드에 예외 처리 절 실행 합니다. CLR 메서드에서만 둘 다 있는 해당 예외 절에 손상 된 프로세스 상태 예외를 제공 합니다 <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute> 고 <xref:System.Security.SecurityCriticalAttribute> 특성입니다.  
  
 추가할 수도 있습니다는 [ \<legacyCorruptedStateExceptionsPolicy >](~/docs/framework/configure-apps/file-schema/runtime/legacycorruptedstateexceptionspolicy-element.md) 요소를 응용 프로그램의 구성 파일입니다. 이 손상 된 상태 예외 없이 예외 처리기에 배달 되도록 합니다 <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute> 또는 <xref:System.Security.SecurityCriticalAttribute> 특성입니다. 이 구성 요소에 이전 버전에서 컴파일된 응용 프로그램에 영향을 주지는 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 하지만 실행 되는 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 나중; 손상 된 상태 예외는 계속 해당 응용 프로그램에 대 한 배달 또는 합니다. <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute> catch 하 고 이러한 심각한 예외를 무시 하기에 신뢰할 수 없는 추가-신뢰할 수 있는 호스트를 허용 하지 않아야 하기 때문에 특성은 부분적으로 신뢰할 수 있는 또는 투명 코드에서 발견 된 경우에 무시 됩니다.  
  
 손상 된 프로세스 상태 예외에 대 한 자세한 내용은 항목을 참조 하세요 [손상 된 상태 예외 처리](https://go.microsoft.com/fwlink/?LinkID=179681) CLR Inside Out 블로그에서.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HandleProcessCorruptedStateExceptionsAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HandleProcessCorruptedStateExceptionsAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>