<Type Name="ActivationArguments" FullName="System.Runtime.Hosting.ActivationArguments">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c9ce61afc2a7feeb5c4233fada0d394026c5573f" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55367275" /></Metadata><TypeSignature Language="C#" Value="public sealed class ActivationArguments : System.Security.Policy.EvidenceBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ActivationArguments extends System.Security.Policy.EvidenceBase" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Hosting.ActivationArguments" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ActivationArguments&#xA;Inherits EvidenceBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActivationArguments sealed : System::Security::Policy::EvidenceBase" />
  <TypeSignature Language="F#" Value="type ActivationArguments = class&#xA;    inherit EvidenceBase" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Policy.EvidenceBase</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-2.0">System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>애플리케이션의 매니페스트 기반 활성화를 위한 데이터를 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Runtime.Hosting.ActivationArguments> 클래스를 사용 합니다 <xref:System.AppDomainSetup> 클래스입니다.  
  
 매니페스트 기반 활성화 모델 활성화에 대 한 어셈블리 보다는 애플리케이션 매니페스트를 사용합니다. 매니페스트는 애플리케이션, 종속성, 보안 요구 사항 및 등 완벽 하 게 설명 합니다. 매니페스트 모델, 특히 웹 애플리케이션의 어셈블리 기반 정품 인증 모델을 통해 몇 가지 장점이 있습니다. 예를 들어 매니페스트는 사용자를 애플리케이션 코드를 다운로드 하기 전에 실행을 허용할지 여부를 결정할 수 있도록 하는 애플리케이션의 보안 요구 사항을 포함 합니다. 또한 매니페스트는 애플리케이션 종속성에 대 한 정보를 포함합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 현재를 가져오는 방법을 보여 줍니다 <xref:System.Runtime.Hosting.ActivationArguments> 에서 개체를 <xref:System.AppDomainSetup> 에 대 한는 <xref:System.AppDomain> 매니페스트 기반 애플리케이션입니다.  
  
 [!code-csharp[System.Runtime.Hosting.ApplicationActivator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.Hosting.ApplicationActivator/cs/program.cs#1)]
 [!code-vb[System.Runtime.Hosting.ApplicationActivator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.Hosting.ApplicationActivator/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Runtime.Hosting.ActivationArguments" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivationArguments (ActivationContext activationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ActivationContext activationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (activationData As ActivationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActivationArguments(ActivationContext ^ activationData);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Hosting.ActivationArguments : ActivationContext -&gt; System.Runtime.Hosting.ActivationArguments" Usage="new System.Runtime.Hosting.ActivationArguments activationData" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="activationData" Type="System.ActivationContext" />
      </Parameters>
      <Docs>
        <param name="activationData">매니페스트 기반 활성화 애플리케이션을 식별하는 개체입니다.</param>
        <summary>지정된 활성화 컨텍스트를 사용하여 <see cref="T:System.Runtime.Hosting.ActivationArguments" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ActivationContext> 가 나타내는 개체를 `activationData` 매개 변수를 포함 합니다 <xref:System.ApplicationIdentity> 및 매니페스트 기반 활성화에 대 한 컨텍스트 정보입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="activationData" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivationArguments (ApplicationIdentity applicationIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ApplicationIdentity applicationIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActivationArguments(ApplicationIdentity ^ applicationIdentity);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Hosting.ActivationArguments : ApplicationIdentity -&gt; System.Runtime.Hosting.ActivationArguments" Usage="new System.Runtime.Hosting.ActivationArguments applicationIdentity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="applicationIdentity" Type="System.ApplicationIdentity" />
      </Parameters>
      <Docs>
        <param name="applicationIdentity">매니페스트 기반 활성화 애플리케이션을 식별하는 개체입니다.</param>
        <summary>지정된 애플리케이션 ID를 사용하여 <see cref="T:System.Runtime.Hosting.ActivationArguments" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 애플리케이션 id는 고유 하 게 새 도메인에서 활성화할 매니페스트 기반 애플리케이션을 식별 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="applicationIdentity" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivationArguments (ActivationContext activationContext, string[] activationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ActivationContext activationContext, string[] activationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActivationArguments(ActivationContext ^ activationContext, cli::array &lt;System::String ^&gt; ^ activationData);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Hosting.ActivationArguments : ActivationContext * string[] -&gt; System.Runtime.Hosting.ActivationArguments" Usage="new System.Runtime.Hosting.ActivationArguments (activationContext, activationData)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
        <Parameter Name="activationData" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="activationContext">매니페스트 기반 활성화 애플리케이션을 식별하는 개체입니다.</param>
        <param name="activationData">호스트에서 제공한 활성화 데이터가 들어 있는 문자열의 배열입니다.</param>
        <summary>지정된 활성화 컨텍스트 및 활성화 데이터를 사용하여 <see cref="T:System.Runtime.Hosting.ActivationArguments" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ActivationContext> 가 나타내는 개체를 `activationContext` 매개 변수를 포함 합니다 <xref:System.ApplicationIdentity> 및 매니페스트 기반 활성화에 대 한 컨텍스트 정보입니다. 정품 인증 데이터는 URL의 쿼리 문자열 부분 등의 정보 이루어져 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="activationContext" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivationArguments (ApplicationIdentity applicationIdentity, string[] activationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ApplicationIdentity applicationIdentity, string[] activationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActivationArguments(ApplicationIdentity ^ applicationIdentity, cli::array &lt;System::String ^&gt; ^ activationData);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Hosting.ActivationArguments : ApplicationIdentity * string[] -&gt; System.Runtime.Hosting.ActivationArguments" Usage="new System.Runtime.Hosting.ActivationArguments (applicationIdentity, activationData)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="applicationIdentity" Type="System.ApplicationIdentity" />
        <Parameter Name="activationData" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="applicationIdentity">매니페스트 기반 활성화 애플리케이션을 식별하는 개체입니다.</param>
        <param name="activationData">호스트에서 제공한 활성화 데이터가 들어 있는 문자열의 배열입니다.</param>
        <summary>지정된 애플리케이션 ID 및 활성화 데이터를 사용하여 <see cref="T:System.Runtime.Hosting.ActivationArguments" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 애플리케이션 id는 고유 하 게 새 도메인에서 활성화할 매니페스트 기반 애플리케이션을 식별 합니다. 정품 인증 데이터는 URL의 쿼리 문자열 부분 등의 정보 이루어져 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="applicationIdentity" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ActivationContext">
      <MemberSignature Language="C#" Value="public ActivationContext ActivationContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ActivationContext ActivationContext" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Hosting.ActivationArguments.ActivationContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActivationContext As ActivationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ActivationContext ^ ActivationContext { ActivationContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActivationContext : ActivationContext" Usage="System.Runtime.Hosting.ActivationArguments.ActivationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ActivationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>애플리케이션의 매니페스트 기반 활성화를 위한 활성화 컨텍스트를 가져옵니다.</summary>
        <value>매니페스트 기반 활성화 애플리케이션을 식별하는 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.ActivationContext> 개체에 포함 되어는 <xref:System.ApplicationIdentity> 애플리케이션 매니페스트에 대 한 내부 전용 액세스를 제공 합니다. 활성화 컨텍스트는 도메인 정책을 설정 하 여 애플리케이션 기반 보안 모델을 제공 매니페스트 기반 활성화 동안 사용 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에는 값을 가져오는 방법을 보여 줍니다 합니다 <xref:System.Runtime.Hosting.ActivationArguments.ActivationContext%2A> 속성을 <xref:System.Runtime.Hosting.ActivationArguments> 매니페스트 기반 애플리케이션에 대 한 합니다.  
  
 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Runtime.Hosting.ActivationArguments> 클래스입니다.  
  
 [!code-csharp[System.Runtime.Hosting.ApplicationActivator#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.Hosting.ApplicationActivator/cs/program.cs#4)]
 [!code-vb[System.Runtime.Hosting.ApplicationActivator#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.Hosting.ApplicationActivator/vb/program.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivationData">
      <MemberSignature Language="C#" Value="public string[] ActivationData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ActivationData" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Hosting.ActivationArguments.ActivationData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActivationData As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ ActivationData { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActivationData : string[]" Usage="System.Runtime.Hosting.ActivationArguments.ActivationData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>호스트에서 활성화 데이터를 가져옵니다.</summary>
        <value>호스트에서 제공한 활성화 데이터가 들어 있는 문자열의 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 정품 인증 데이터는 URL의 쿼리 문자열 부분 등의 정보 이루어져 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationIdentity">
      <MemberSignature Language="C#" Value="public ApplicationIdentity ApplicationIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ApplicationIdentity ApplicationIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Hosting.ActivationArguments.ApplicationIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationIdentity As ApplicationIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ApplicationIdentity ^ ApplicationIdentity { ApplicationIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationIdentity : ApplicationIdentity" Usage="System.Runtime.Hosting.ActivationArguments.ApplicationIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ApplicationIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매니페스트 활성화 애플리케이션의 애플리케이션 ID를 가져옵니다.</summary>
        <value>매니페스트 기반 활성화 애플리케이션을 식별하는 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 애플리케이션 id는 고유 하 게 새 도메인에서 활성화할 매니페스트 기반 애플리케이션을 식별 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.EvidenceBase Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.EvidenceBase Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ActivationArguments.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As EvidenceBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Policy::EvidenceBase ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Security.Policy.EvidenceBase" Usage="activationArguments.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.EvidenceBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 <see cref="T:System.Runtime.Hosting.ActivationArguments" /> 개체의 복사본을 생성합니다.</summary>
        <returns>현재 개체의 복사본입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 만듭니다 <xref:System.Runtime.Hosting.ActivationArguments> 개체를 다음의 현재 멤버의 복사본을 사용 하 여 채웁니다 <xref:System.Runtime.Hosting.ActivationArguments> 개체  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>