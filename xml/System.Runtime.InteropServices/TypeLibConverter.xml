<Type Name="TypeLibConverter" FullName="System.Runtime.InteropServices.TypeLibConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0484c2a4328612a870865920c0e651184a7fa40e" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52198429" /></Metadata><TypeSignature Language="C#" Value="public sealed class TypeLibConverter : System.Runtime.InteropServices.ITypeLibConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeLibConverter extends System.Object implements class System.Runtime.InteropServices.ITypeLibConverter" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.TypeLibConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeLibConverter&#xA;Implements ITypeLibConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeLibConverter sealed : System::Runtime::InteropServices::ITypeLibConverter" />
  <TypeSignature Language="F#" Value="type TypeLibConverter = class&#xA;    interface ITypeLibConverter" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.ITypeLibConverter</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.Guid("f1c3bf79-c3e4-11d3-88e7-00902754c43a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("F1C3BF79-C3E4-11d3-88E7-00902754C43A")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>관리되는 어셈블리를 COM 형식 라이브러리로 변환하거나 반대로 변환하는 서비스 집합을 제공합니다.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeLibConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.TypeLibConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeLibConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Runtime.InteropServices.TypeLibConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertAssemblyToTypeLib">
      <MemberSignature Language="C#" Value="public object ConvertAssemblyToTypeLib (System.Reflection.Assembly assembly, string strTypeLibName, System.Runtime.InteropServices.TypeLibExporterFlags flags, System.Runtime.InteropServices.ITypeLibExporterNotifySink notifySink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertAssemblyToTypeLib(class System.Reflection.Assembly assembly, string strTypeLibName, valuetype System.Runtime.InteropServices.TypeLibExporterFlags flags, class System.Runtime.InteropServices.ITypeLibExporterNotifySink notifySink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertAssemblyToTypeLib(System::Reflection::Assembly ^ assembly, System::String ^ strTypeLibName, System::Runtime::InteropServices::TypeLibExporterFlags flags, System::Runtime::InteropServices::ITypeLibExporterNotifySink ^ notifySink);" />
      <MemberSignature Language="F#" Value="abstract member ConvertAssemblyToTypeLib : System.Reflection.Assembly * string * System.Runtime.InteropServices.TypeLibExporterFlags * System.Runtime.InteropServices.ITypeLibExporterNotifySink -&gt; obj&#xA;override this.ConvertAssemblyToTypeLib : System.Reflection.Assembly * string * System.Runtime.InteropServices.TypeLibExporterFlags * System.Runtime.InteropServices.ITypeLibExporterNotifySink -&gt; obj" Usage="typeLibConverter.ConvertAssemblyToTypeLib (assembly, strTypeLibName, flags, notifySink)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ITypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="strTypeLibName" Type="System.String" />
        <Parameter Name="flags" Type="System.Runtime.InteropServices.TypeLibExporterFlags" />
        <Parameter Name="notifySink" Type="System.Runtime.InteropServices.ITypeLibExporterNotifySink" />
      </Parameters>
      <Docs>
        <param name="assembly">변환할 어셈블리입니다.</param>
        <param name="strTypeLibName">결과로 만들어지는 형식 라이브러리의 파일 이름입니다.</param>
        <param name="flags">특별한 설정을 나타내는 <see cref="T:System.Runtime.InteropServices.TypeLibExporterFlags" /> 값입니다.</param>
        <param name="notifySink">호출자가 구현한 <see cref="T:System.Runtime.InteropServices.ITypeLibExporterNotifySink" /> 인터페이스입니다.</param>
        <summary>어셈블리를 COM 형식 라이브러리로 변환합니다.</summary>
        <returns><see langword="ITypeLib" /> 인터페이스를 구현하는 개체</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 자세한 `ITypeLib`, MSDN 라이브러리의 기존 설명서를 참조 하세요.  
  
   
  
## Examples  
 [!code-cpp[System.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1/CPP/convert2.cpp#1)]
 [!code-csharp[System.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1/CS/convert2.cs#1)]
 [!code-vb[System.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1/VB/convert2.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">관리 되지 않는 코드를 호출할 수 있는 권한입니다.  
  
보안 동작: 요청 합니다.  
  
연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTypeLibToAssembly">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>COM 형식 라이브러리를 어셈블리로 변환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTypeLibToAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder ConvertTypeLibToAssembly (object typeLib, string asmFileName, int flags, System.Runtime.InteropServices.ITypeLibImporterNotifySink notifySink, byte[] publicKey, System.Reflection.StrongNameKeyPair keyPair, bool unsafeInterfaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Emit.AssemblyBuilder ConvertTypeLibToAssembly(object typeLib, string asmFileName, int32 flags, class System.Runtime.InteropServices.ITypeLibImporterNotifySink notifySink, unsigned int8[] publicKey, class System.Reflection.StrongNameKeyPair keyPair, bool unsafeInterfaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertTypeLibToAssembly (typeLib As Object, asmFileName As String, flags As Integer, notifySink As ITypeLibImporterNotifySink, publicKey As Byte(), keyPair As StrongNameKeyPair, unsafeInterfaces As Boolean) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Emit::AssemblyBuilder ^ ConvertTypeLibToAssembly(System::Object ^ typeLib, System::String ^ asmFileName, int flags, System::Runtime::InteropServices::ITypeLibImporterNotifySink ^ notifySink, cli::array &lt;System::Byte&gt; ^ publicKey, System::Reflection::StrongNameKeyPair ^ keyPair, bool unsafeInterfaces);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTypeLibToAssembly : obj * string * int * System.Runtime.InteropServices.ITypeLibImporterNotifySink * byte[] * System.Reflection.StrongNameKeyPair * bool -&gt; System.Reflection.Emit.AssemblyBuilder&#xA;override this.ConvertTypeLibToAssembly : obj * string * int * System.Runtime.InteropServices.ITypeLibImporterNotifySink * byte[] * System.Reflection.StrongNameKeyPair * bool -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="typeLibConverter.ConvertTypeLibToAssembly (typeLib, asmFileName, flags, notifySink, publicKey, keyPair, unsafeInterfaces)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ITypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeLib" Type="System.Object" />
        <Parameter Name="asmFileName" Type="System.String" />
        <Parameter Name="flags" Type="System.Int32" />
        <Parameter Name="notifySink" Type="System.Runtime.InteropServices.ITypeLibImporterNotifySink" />
        <Parameter Name="publicKey" Type="System.Byte[]" />
        <Parameter Name="keyPair" Type="System.Reflection.StrongNameKeyPair" />
        <Parameter Name="unsafeInterfaces" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="typeLib"><see langword="ITypeLib" /> 인터페이스를 구현하는 개체입니다.</param>
        <param name="asmFileName">결과로 만들어지는 어셈블리의 파일 이름입니다.</param>
        <param name="flags">특별한 설정을 나타내는 <see cref="T:System.Runtime.InteropServices.TypeLibImporterFlags" /> 값입니다.</param>
        <param name="notifySink">호출자가 구현한 <see cref="T:System.Runtime.InteropServices.ITypeLibImporterNotifySink" /> 인터페이스입니다.</param>
        <param name="publicKey">공개 키를 포함하는 <see langword="byte" /> 배열입니다.</param>
        <param name="keyPair">공개 및 개인 암호화 키 쌍을 포함하는 <see cref="T:System.Reflection.StrongNameKeyPair" /> 개체입니다.</param>
        <param name="unsafeInterfaces"><see langword="true" />인 경우 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> 권한에 대한 링크 시간이 검사되어야 합니다. <see langword="false" />인 경우 스택 워크가 필요하고 비용은 더 많이 들지만 더 많은 보호 기능을 제공하는 런타임 검사가 수행되어야 합니다.</param>
        <summary>COM 형식 라이브러리를 어셈블리로 변환합니다.</summary>
        <returns>변환된 형식 라이브러리를 포함하는 <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 어셈블리에 대 한 강력한 이름을 생성 하지 않을 경우에 사용할 `publicKey` 하 고 `keyPair` 되도록 `null`으로 `flags` 같지 않음 <xref:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly?displayProperty=nameWithType>합니다. 그렇지 않은 경우 이러한 매개 변수 중 하나 이상을 지정 해야 합니다. 경우 `publicKey` 됩니다 `null`, 공개 키가 `keyPair` 대상 어셈블리의 매니페스트 메타 데이터에서 설정 되 고 어셈블리의 내용에 따라 서명을 생성 됩니다. 하는 경우 `keyPair` 됩니다 `null`, `publicKey` 대상 어셈블리의 매니페스트 메타 데이터에서 설정 되 고 서명이 생성 됩니다. 두 매개 변수를 지정 하는 일반적으로 유용 하지 않습니다 및 잘못 된 시그니처와 발생할 수 있습니다.  
  
 에 대 한 자세한 `ITypeLib`, MSDN 라이브러리의 기존 설명서를 참조 하세요.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="typeLib" />가 <see langword="null" />인 경우  
  
또는 
 <paramref name="asmFileName" />가 <see langword="null" />인 경우  
  
또는 
 <paramref name="notifySink" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="asmFileName" />이 빈 문자열인 경우  
  
또는 
 <paramref name="asmFileName" />이 시스템 정의 최대 길이보다 깁니다. 자세한 내용은 <see cref="T:System.IO.PathTooLongException" />을 참조하세요.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="flags" />이 <see cref="F:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly" />가 아닙니다.  
  
또는 
 <paramref name="publicKey" /> 및 <paramref name="keyPair" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Reflection.ReflectionTypeLoadException">생성된 메타데이터에 형식의 로드를 막는 오류가 있는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">관리 되지 않는 코드를 호출할 수 있는 권한입니다.  
  
보안 동작: 요청 합니다.  
  
연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ConvertTypeLibToAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder ConvertTypeLibToAssembly (object typeLib, string asmFileName, System.Runtime.InteropServices.TypeLibImporterFlags flags, System.Runtime.InteropServices.ITypeLibImporterNotifySink notifySink, byte[] publicKey, System.Reflection.StrongNameKeyPair keyPair, string asmNamespace, Version asmVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Emit.AssemblyBuilder ConvertTypeLibToAssembly(object typeLib, string asmFileName, valuetype System.Runtime.InteropServices.TypeLibImporterFlags flags, class System.Runtime.InteropServices.ITypeLibImporterNotifySink notifySink, unsigned int8[] publicKey, class System.Reflection.StrongNameKeyPair keyPair, string asmNamespace, class System.Version asmVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertTypeLibToAssembly (typeLib As Object, asmFileName As String, flags As TypeLibImporterFlags, notifySink As ITypeLibImporterNotifySink, publicKey As Byte(), keyPair As StrongNameKeyPair, asmNamespace As String, asmVersion As Version) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Emit::AssemblyBuilder ^ ConvertTypeLibToAssembly(System::Object ^ typeLib, System::String ^ asmFileName, System::Runtime::InteropServices::TypeLibImporterFlags flags, System::Runtime::InteropServices::ITypeLibImporterNotifySink ^ notifySink, cli::array &lt;System::Byte&gt; ^ publicKey, System::Reflection::StrongNameKeyPair ^ keyPair, System::String ^ asmNamespace, Version ^ asmVersion);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTypeLibToAssembly : obj * string * System.Runtime.InteropServices.TypeLibImporterFlags * System.Runtime.InteropServices.ITypeLibImporterNotifySink * byte[] * System.Reflection.StrongNameKeyPair * string * Version -&gt; System.Reflection.Emit.AssemblyBuilder&#xA;override this.ConvertTypeLibToAssembly : obj * string * System.Runtime.InteropServices.TypeLibImporterFlags * System.Runtime.InteropServices.ITypeLibImporterNotifySink * byte[] * System.Reflection.StrongNameKeyPair * string * Version -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="typeLibConverter.ConvertTypeLibToAssembly (typeLib, asmFileName, flags, notifySink, publicKey, keyPair, asmNamespace, asmVersion)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ITypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeLib" Type="System.Object" />
        <Parameter Name="asmFileName" Type="System.String" />
        <Parameter Name="flags" Type="System.Runtime.InteropServices.TypeLibImporterFlags" />
        <Parameter Name="notifySink" Type="System.Runtime.InteropServices.ITypeLibImporterNotifySink" />
        <Parameter Name="publicKey" Type="System.Byte[]" />
        <Parameter Name="keyPair" Type="System.Reflection.StrongNameKeyPair" />
        <Parameter Name="asmNamespace" Type="System.String" />
        <Parameter Name="asmVersion" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="typeLib"><see langword="ITypeLib" /> 인터페이스를 구현하는 개체입니다.</param>
        <param name="asmFileName">결과로 만들어지는 어셈블리의 파일 이름입니다.</param>
        <param name="flags">특별한 설정을 나타내는 <see cref="T:System.Runtime.InteropServices.TypeLibImporterFlags" /> 값입니다.</param>
        <param name="notifySink">호출자가 구현한 <see cref="T:System.Runtime.InteropServices.ITypeLibImporterNotifySink" /> 인터페이스입니다.</param>
        <param name="publicKey">공개 키를 포함하는 <see langword="byte" /> 배열입니다.</param>
        <param name="keyPair">공개 및 개인 암호화 키 쌍을 포함하는 <see cref="T:System.Reflection.StrongNameKeyPair" /> 개체입니다.</param>
        <param name="asmNamespace">결과로 만들어지는 어셈블리의 네임스페이스입니다.</param>
        <param name="asmVersion">결과로 만들어지는 어셈블리의 버전입니다. <see langword="null" />이면 형식 라이브러리의 버전이 사용됩니다.</param>
        <summary>COM 형식 라이브러리를 어셈블리로 변환합니다.</summary>
        <returns>변환된 형식 라이브러리를 포함하는 <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 어셈블리에 대 한 강력한 이름을 생성 하지 않을 경우에 사용할 `publicKey` 하 고 `keyPair` 되도록 `null`으로 `flags` 같지 않음 <xref:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly?displayProperty=nameWithType>합니다. 그렇지 않은 경우 이러한 매개 변수 중 하나 이상을 지정 되어야 합니다. 경우 `publicKey` 됩니다 `null`, 공개 키가 `keyPair` 대상 어셈블리의 매니페스트 메타 데이터에서 설정 되 고 어셈블리의 내용에 따라 서명을 생성 됩니다. 하는 경우 `keyPair` 됩니다 `null`, `publicKey` 대상 어셈블리의 매니페스트 메타 데이터에서 설정 되 고 서명이 생성 됩니다. 두 매개 변수를 지정 하는 일반적으로 유용 하지 않습니다 및 잘못 된 시그니처와 발생할 수 있습니다.  
  
 에 대 한 자세한 `ITypeLib`, MSDN 라이브러리의 기존 설명서를 참조 하세요.  
  
   
  
## Examples  
 [!code-cpp[System.Runtime.InteropServices.ConvertTypelibToASSembly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Runtime.InteropServices.ConvertTypelibToASSembly/CPP/convert1.cpp#1)]
 [!code-csharp[System.Runtime.InteropServices.ConvertTypelibToASSembly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.ConvertTypelibToASSembly/CS/convert1.cs#1)]
 [!code-vb[System.Runtime.InteropServices.ConvertTypelibToASSembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.ConvertTypelibToASSembly/VB/convert1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="typeLib" />가 <see langword="null" />인 경우  
  
또는 
 <paramref name="asmFileName" />가 <see langword="null" />인 경우  
  
또는 
 <paramref name="notifySink" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="asmFileName" />이 빈 문자열인 경우  
  
또는 
 <paramref name="asmFileName" />이 시스템 정의 최대 길이보다 깁니다. 자세한 내용은 <see cref="T:System.IO.PathTooLongException" />을 참조하세요.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="flags" />이 <see cref="F:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly" />가 아닙니다.  
  
또는 
 <paramref name="publicKey" /> 및 <paramref name="keyPair" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Reflection.ReflectionTypeLoadException">생성된 메타데이터에 형식의 로드를 막는 오류가 있는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">관리 되지 않는 코드를 호출할 수 있는 권한입니다.  
  
보안 동작: 요청 합니다.  
  
연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryInteropAssembly">
      <MemberSignature Language="C#" Value="public bool GetPrimaryInteropAssembly (Guid g, int major, int minor, int lcid, out string asmName, out string asmCodeBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPrimaryInteropAssembly(valuetype System.Guid g, int32 major, int32 minor, int32 lcid, [out] string&amp; asmName, [out] string&amp; asmCodeBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryInteropAssembly (g As Guid, major As Integer, minor As Integer, lcid As Integer, ByRef asmName As String, ByRef asmCodeBase As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetPrimaryInteropAssembly(Guid g, int major, int minor, int lcid, [Runtime::InteropServices::Out] System::String ^ % asmName, [Runtime::InteropServices::Out] System::String ^ % asmCodeBase);" />
      <MemberSignature Language="F#" Value="abstract member GetPrimaryInteropAssembly : Guid * int * int * int *  *  -&gt; bool&#xA;override this.GetPrimaryInteropAssembly : Guid * int * int * int *  *  -&gt; bool" Usage="typeLibConverter.GetPrimaryInteropAssembly (g, major, minor, lcid, asmName, asmCodeBase)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ITypeLibConverter.GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Guid" />
        <Parameter Name="major" Type="System.Int32" />
        <Parameter Name="minor" Type="System.Int32" />
        <Parameter Name="lcid" Type="System.Int32" />
        <Parameter Name="asmName" Type="System.String" RefType="out" />
        <Parameter Name="asmCodeBase" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="g">형식 라이브러리의 GUID입니다.</param>
        <param name="major">형식 라이브러리의 주 버전 번호입니다.</param>
        <param name="minor">형식 라이브러리의 부 버전 번호입니다.</param>
        <param name="lcid">형식 라이브러리의 LCID입니다.</param>
        <param name="asmName">반환이 성공적이면 <paramref name="g" />와 관련된 주 interop 어셈블리의 이름입니다.</param>
        <param name="asmCodeBase">반환이 성공적이면 <paramref name="g" />와 관련된 주 interop 어셈블리의 코드 베이스입니다.</param>
        <summary>지정된 형식 라이브러리에 대한 주 interop 어셈블리의 이름 및 코드 베이스를 가져옵니다.</summary>
        <returns>주 interop 어셈블리가 레지스트리에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>