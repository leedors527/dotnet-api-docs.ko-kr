<Type Name="SdlChannelSink" FullName="System.Runtime.Remoting.MetadataServices.SdlChannelSink">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f78d1a5dceb0b8274b996defa738f621540d7ef0" /><Meta Name="ms.sourcegitcommit" Value="800d45fb80a298c4bde743e8a40af69755fc850f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/24/2019" /><Meta Name="ms.locfileid" Value="54895293" /></Metadata><TypeSignature Language="C#" Value="public class SdlChannelSink : System.Runtime.Remoting.Channels.IServerChannelSink" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SdlChannelSink extends System.Object implements class System.Runtime.Remoting.Channels.IChannelSinkBase, class System.Runtime.Remoting.Channels.IServerChannelSink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.MetadataServices.SdlChannelSink" />
  <TypeSignature Language="VB.NET" Value="Public Class SdlChannelSink&#xA;Implements IServerChannelSink" />
  <TypeSignature Language="C++ CLI" Value="public ref class SdlChannelSink : System::Runtime::Remoting::Channels::IServerChannelSink" />
  <TypeSignature Language="F#" Value="type SdlChannelSink = class&#xA;    interface IServerChannelSink&#xA;    interface IChannelSinkBase" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelSinkBase</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IServerChannelSink</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>서버에서 동적으로 WSDL(Web Services Description Language)을 생성하는 서버 채널 싱크에 대한 구현을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Remoting.MetadataServices.SdlChannelSink> URL 문자열로 끝나는 경우 WSDL을 만드는 데 사용 됩니다 "? wsdl"입니다.  
  
 다음 표에서 채널이 채널 싱크를 지정할 수 있는 구성 속성을 보여 줍니다. 처음 두 속성은 애플리케이션 도메인에 의해 게시 된 개체의 WSDL 게시를 제어 하는 결합 합니다. 경우 `false` 없습니다 WSDL은 두 번째 속성에 관계 없이 반환 된 첫 번째 속성에 대 한 지정 됩니다. 기본값은 `true`입니다. 그렇지 않으면 두 번째 응답할 전역 메타 데이터 개체 URI 허용 되는지 여부를 제어 합니다. 기본값은 `false`입니다.  
  
|속성|설명|  
|--------------|-----------------|  
|`metadataEnabled`|끝나는 요청을 허용 여부를 지정 하는 부울 값 "? wsdl"이이 싱크는 채널 싱크 체인에 있는 경우. 기본 설정은 `true`입니다. `false`인 경우 싱크에서는 애플리케이션 도메인에 있는 임의의 개체에 대해 메타데이터가 요청된 모든 경우에 예외를 throw합니다.<br /><br /> 이 속성은 Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, Windows Server 2003 제품군의 .NET Framework 버전 1.1에서만 지원됩니다.|  
|`remoteApplicationMetadataEnabled`|URI 개체에 대 한 요청을 허용 여부를 지정 하는 부울 값 "RemoteApplicationMetadata? wsdl"을 애플리케이션 도메인 별로 게시 되는 모든 개체를 설명 하는 WSDL을 반환 하는 합니다. 경우 `false`, "RemoteApplicationMetadata.rem"에 대 한 요청 예외를 throw 합니다. 다른 모든 "? wsdl" 특정 개체 Uri에 대 한 요청에 적용 됩니다. `true`인 경우 전역 메타데이터 요청이 허용됩니다. 기본 설정은 `false`입니다.<br /><br /> 이 속성은 Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, Windows Server 2003 제품군의 .NET Framework 버전 1.1에서만 지원됩니다.|  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/77axffs8(v=vs.100)">XML Web services 설명</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SdlChannelSink (System.Runtime.Remoting.Channels.IChannelReceiver receiver, System.Runtime.Remoting.Channels.IServerChannelSink nextSink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Remoting.Channels.IChannelReceiver receiver, class System.Runtime.Remoting.Channels.IServerChannelSink nextSink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor(System.Runtime.Remoting.Channels.IChannelReceiver,System.Runtime.Remoting.Channels.IServerChannelSink)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (receiver As IChannelReceiver, nextSink As IServerChannelSink)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SdlChannelSink(System::Runtime::Remoting::Channels::IChannelReceiver ^ receiver, System::Runtime::Remoting::Channels::IServerChannelSink ^ nextSink);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.MetadataServices.SdlChannelSink : System.Runtime.Remoting.Channels.IChannelReceiver * System.Runtime.Remoting.Channels.IServerChannelSink -&gt; System.Runtime.Remoting.MetadataServices.SdlChannelSink" Usage="new System.Runtime.Remoting.MetadataServices.SdlChannelSink (receiver, nextSink)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="receiver" Type="System.Runtime.Remoting.Channels.IChannelReceiver" />
        <Parameter Name="nextSink" Type="System.Runtime.Remoting.Channels.IServerChannelSink" />
      </Parameters>
      <Docs>
        <param name="receiver"><see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSink" />의 새 인스턴스에 의해 serialize된 메시지를 받을 채널을 나타냅니다.</param>
        <param name="nextSink">싱크 체인의 다음 싱크입니다.</param>
        <summary><see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSink" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncProcessResponse">
      <MemberSignature Language="C#" Value="public void AsyncProcessResponse (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AsyncProcessResponse(class System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders headers, class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AsyncProcessResponse(System::Runtime::Remoting::Channels::IServerResponseChannelSinkStack ^ sinkStack, System::Object ^ state, System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Channels::ITransportHeaders ^ headers, System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member AsyncProcessResponse : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream -&gt; unit&#xA;override this.AsyncProcessResponse : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream -&gt; unit" Usage="sdlChannelSink.AsyncProcessResponse (sinkStack, state, msg, headers, stream)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="sinkStack">서버 전송 싱크로 다시 향하는 싱크 스택입니다.</param>
        <param name="state">요청쪽에서 생성되고 응답쪽에서 필요한 현재 싱크와 관련된 정보입니다.</param>
        <param name="msg">응답 메시지입니다.</param>
        <param name="headers">클라이언트로 보내는 반환 메시지 머리글에 추가할 헤더입니다.</param>
        <param name="stream">전송 싱크로 다시 향하는 스트림입니다.</param>
        <summary>보내진 메서드 호출에 대한 응답을 현재 싱크에서 비동기식으로 처리하도록 요청합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResponseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetResponseStream (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetResponseStream(class System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResponseStream (sinkStack As IServerResponseChannelSinkStack, state As Object, msg As IMessage, headers As ITransportHeaders) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetResponseStream(System::Runtime::Remoting::Channels::IServerResponseChannelSinkStack ^ sinkStack, System::Object ^ state, System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Channels::ITransportHeaders ^ headers);" />
      <MemberSignature Language="F#" Value="abstract member GetResponseStream : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders -&gt; System.IO.Stream&#xA;override this.GetResponseStream : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders -&gt; System.IO.Stream" Usage="sdlChannelSink.GetResponseStream (sinkStack, state, msg, headers)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
      </Parameters>
      <Docs>
        <param name="sinkStack">서버 전송 싱크로 다시 향하는 싱크 스택입니다.</param>
        <param name="state">요청쪽에서 생성되고 응답쪽에서 필요한 현재 싱크와 관련된 정보입니다.</param>
        <param name="msg">serialize할 응답 메시지입니다.</param>
        <param name="headers">클라이언트로 향하는 응답 스트림에 넣을 헤더입니다.</param>
        <summary>제공된 응답 메시지가 serialize될 <see cref="T:System.IO.Stream" />을 반환합니다.</summary>
        <returns>제공된 응답 메시지가 serialize될 <see cref="T:System.IO.Stream" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 현재 메서드는 응답 스트림에 작성 해야 하는 경우 호출 됩니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tdzwhfy3(v=vs.100)">싱크 및 싱크 체인</related>
      </Docs>
    </Member>
    <Member MemberName="NextChannelSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextChannelSink As IServerChannelSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Channels::IServerChannelSink ^ NextChannelSink { System::Runtime::Remoting::Channels::IServerChannelSink ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextChannelSink : System.Runtime.Remoting.Channels.IServerChannelSink" Usage="System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IServerChannelSink.NextChannelSink</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Channels.IServerChannelSink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>싱크 체인의 다음 <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" />를 가져옵니다.</summary>
        <value>싱크 체인의 다음 <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessMessage">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage (System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, System.Runtime.Remoting.Messaging.IMessage requestMsg, System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, System.IO.Stream requestStream, out System.Runtime.Remoting.Messaging.IMessage responseMsg, out System.Runtime.Remoting.Channels.ITransportHeaders responseHeaders, out System.IO.Stream responseStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage(class System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, class System.Runtime.Remoting.Messaging.IMessage requestMsg, class System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, class System.IO.Stream requestStream, [out] class System.Runtime.Remoting.Messaging.IMessage&amp; responseMsg, [out] class System.Runtime.Remoting.Channels.ITransportHeaders&amp; responseHeaders, [out] class System.IO.Stream&amp; responseStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProcessMessage (sinkStack As IServerChannelSinkStack, requestMsg As IMessage, requestHeaders As ITransportHeaders, requestStream As Stream, ByRef responseMsg As IMessage, ByRef responseHeaders As ITransportHeaders, ByRef responseStream As Stream) As ServerProcessing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Channels::ServerProcessing ProcessMessage(System::Runtime::Remoting::Channels::IServerChannelSinkStack ^ sinkStack, System::Runtime::Remoting::Messaging::IMessage ^ requestMsg, System::Runtime::Remoting::Channels::ITransportHeaders ^ requestHeaders, System::IO::Stream ^ requestStream, [Runtime::InteropServices::Out] System::Runtime::Remoting::Messaging::IMessage ^ % responseMsg, [Runtime::InteropServices::Out] System::Runtime::Remoting::Channels::ITransportHeaders ^ % responseHeaders, [Runtime::InteropServices::Out] System::IO::Stream ^ % responseStream);" />
      <MemberSignature Language="F#" Value="abstract member ProcessMessage : System.Runtime.Remoting.Channels.IServerChannelSinkStack * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream *  *  *  -&gt; System.Runtime.Remoting.Channels.ServerProcessing&#xA;override this.ProcessMessage : System.Runtime.Remoting.Channels.IServerChannelSinkStack * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream *  *  *  -&gt; System.Runtime.Remoting.Channels.ServerProcessing" Usage="sdlChannelSink.ProcessMessage (sinkStack, requestMsg, requestHeaders, requestStream, responseMsg, responseHeaders, responseStream)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Channels.ServerProcessing</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerChannelSinkStack" />
        <Parameter Name="requestMsg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="requestHeaders" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        <Parameter Name="requestStream" Type="System.IO.Stream" />
        <Parameter Name="responseMsg" Type="System.Runtime.Remoting.Messaging.IMessage" RefType="out" />
        <Parameter Name="responseHeaders" Type="System.Runtime.Remoting.Channels.ITransportHeaders" RefType="out" />
        <Parameter Name="responseStream" Type="System.IO.Stream" RefType="out" />
      </Parameters>
      <Docs>
        <param name="sinkStack">현재 싱크를 호출한 채널 싱크의 스택입니다.</param>
        <param name="requestMsg">해당 요청을 포함하는 메시지입니다.</param>
        <param name="requestHeaders">클라이언트로부터 들어오는 메시지에서 가져온 헤더입니다.</param>
        <param name="requestStream">처리되어 deserialization 싱크로 전달되어야 할 스트림입니다.</param>
        <param name="responseMsg">이 메서드가 반환하면 응답 메시지를 보유하는 <see cref="T:System.Runtime.Remoting.Messaging.IMessage" />를 포함합니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
        <param name="responseHeaders">이 메서드가 반환할 때 클라이언트로 보내는 반환 메시지 머리글에 추가할 헤더가 들어 있는 <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" />를 포함합니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
        <param name="responseStream">이 메서드가 반환될 때 전송 싱크로 향하는 <see cref="T:System.IO.Stream" />을 포함합니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
        <summary>현재 싱크에서 메시지 처리를 요청합니다.</summary>
        <returns>메시지 처리 방법에 대한 정보를 제공하는 <see cref="T:System.Runtime.Remoting.Channels.ServerProcessing" /> 상태 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 프록시의 역할은 메시지 개체에 대해 호출 되는 메서드 호출을 변환 하는 것입니다. 구현 하는 메시지 개체를 <xref:System.Runtime.Remoting.Messaging.IMessage> 인터페이스를 호출 하 여 클라이언트 쪽에서 서버 쪽 전달 <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> 메시지 싱크 개체에서. 즉, 모든 메시지 싱크 호출에 대 한 책임 지는 메시지 싱크를 함께 연결 <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> 에서 해당 작업을 수행한 후 다음 메시지 싱크 합니다. 예를 들어 동기화와 관련 된 메시지 싱크를 획득 또는 해제 하 고 다운스트림 메시지 싱크를 위임 된 잠금이 발생할 수 있습니다.  
  
 포맷터 채널 싱크 보낼 채널을 통해 호출 해야 하는 메시지를 가져옵니다 하는 경우 <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A>, 메시지를 매개 변수로 전달 합니다. 포맷터 싱크는 전송 헤더 배열 및 호출에 다음 만듭니다 <xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A> 포맷터 싱크의 합니다. 이 호출은 싱크 체인으로 전달되고 싱크는 포맷터 싱크로 다시 전달되는 요청 스트림을 만들 수 있습니다. 이 호출이 반환, 메시지를 serialize <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A> 싱크 체인에 있는 첫 번째 체인에서 호출 되 고 메시지 채널 싱크로 전달 됩니다.  
  
 채널 싱크 메시지가 스트림에 데이터를 쓸, 헤더 배열에 헤더를 추가 고 호출을 다음 싱크로 전달 하기 전에 싱크 스택에 추가 되도록 수 있습니다. 호출 전송 싱크 체인의 끝에 도달 하면 전송 싱크에서 헤더를 보내고 서버로 싱크에서 채널을 통해 메시지를 직렬화 합니다.  
  
 메시지 서버 쪽에 도달 하면 전송 싱크에서 헤더 검색 serialize 된 스트림에서 메시지 및 포맷터 싱크에 도달할 때까지 싱크 체인을 통해 전달 합니다. 그런 다음 포맷터 싱크는 메시지를 deserialize 하 고 원격을 사용할 수 있는 메시지는 메서드 호출으로 설정 되어 있으며 해당 서버 개체를 호출에 전달.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Properties" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Properties { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.IDictionary" Usage="System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IChannelSinkBase.Properties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 채널 싱크에 대한 속성의 <see cref="T:System.Collections.IDictionary" />를 가져옵니다.</summary>
        <value>현재 채널 싱크에 대한 속성의 <see cref="T:System.Collections.IDictionary" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  자세한 내용은 [채널 및 포맷터 구성 속성](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100))합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)">채널 및 포맷터 구성 속성</related>
      </Docs>
    </Member>
  </Members>
</Type>