<Type Name="RemotingConfiguration" FullName="System.Runtime.Remoting.RemotingConfiguration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="deefaf2f933b29d49c7852bb64c8ddc63ff5ec85" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57915817" /></Metadata><TypeSignature Language="C#" Value="public static class RemotingConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RemotingConfiguration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.RemotingConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class RemotingConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class RemotingConfiguration abstract sealed" />
  <TypeSignature Language="F#" Value="type RemotingConfiguration = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>원격 인프라 구성을 위한 다양한 정적 메서드를 제공합니다.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplicationId">
      <MemberSignature Language="C#" Value="public static string ApplicationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationId" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.RemotingConfiguration.ApplicationId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationId : string" Usage="System.Runtime.Remoting.RemotingConfiguration.ApplicationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 실행 중인 응용 프로그램의 ID를 가져옵니다.</summary>
        <value>현재 실행 중인 응용 프로그램의 ID가 들어 있는 <see cref="T:System.String" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 응용 프로그램 ID는 앞에서 현재 실행 중인 응용 프로그램에서 생성 되는 개체의 URI에 추가 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">직접 실행 호출자에 인프라 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">한 인프라 코드를 사용 하 여 작동 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public static string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.RemotingConfiguration.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Runtime.Remoting.RemotingConfiguration.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>원격 응용 프로그램 이름을 가져오거나 설정합니다.</summary>
        <value>원격 응용 프로그램 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 현재 속성을 통해 또는 구성 파일을 통해 응용 프로그램 이름은 한 번만 설정할 수 있습니다. 응용 프로그램 같은 인터넷 정보 서비스 (IIS)에 호스트 된 환경 내에서 실행 되는 경우이 값이 이미 설정 되어 (일반적으로 가상 디렉터리로). 현재 속성은 반환 `null` 응용 프로그램 이름이 설정 되지 않은 경우.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Runtime.Remoting.RemotingConfiguration.ApplicationName%2A> 원격 응용 프로그램의 이름을 나타내는 속성을 합니다. 전체 예제 코드에 대 한 예제를 참조 하세요. 합니다 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> 고 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType%2A> 메서드.  
  
 [!code-cpp[RemotingConfiguration.ServerActivation1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/server.cpp#2)]
 [!code-csharp[RemotingConfiguration.ServerActivation1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/server.cs#2)]
 [!code-vb[RemotingConfiguration.ServerActivation1#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/server.vb#2)]  
  
 다음 코드 예제에서는 명명된 된 응용 프로그램에서 원격 개체에 액세스 하는 방법에 설명 합니다.  
  
 [!code-cpp[RemotingConfiguration.ServerActivation1#6](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/client.cpp#6)]
 [!code-csharp[RemotingConfiguration.ServerActivation1#6](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/client.cs#6)]
 [!code-vb[RemotingConfiguration.ServerActivation1#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/client.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자 중 하나 이상에게 원격 형식 및 채널을 구성하기 위한 권한이 없는 경우 이 예외는 속성 값을 설정할 때만 throw됩니다.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">원격 인프라의 구성 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Configure">
      <MemberSignature Language="C#" Value="public static void Configure (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Configure(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.Configure(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Configure (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Configure(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="static member Configure : string -&gt; unit" Usage="System.Runtime.Remoting.RemotingConfiguration.Configure filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use Configure(String,Boolean)")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Use System.Runtime.Remoting.RemotingConfiguration.Configure(string fileName, bool ensureSecurity) instead.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">원격 구성 파일 이름입니다. <see langword="null" />일 수 있습니다.</param>
        <summary>구성 파일을 읽고 원격 인프라를 구성합니다. <see cref="M:System.Runtime.Remoting.RemotingConfiguration.Configure(System.String)" />는 사용되지 않습니다. 대신 <see cref="M:System.Runtime.Remoting.RemotingConfiguration.Configure(System.String,System.Boolean)" />를 사용하십시오.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%28System.String%29>는 사용되지 않습니다. 대신 <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%28System.String%2CSystem.Boolean%29>를 사용하십시오.  
  
 전달 `null` 으로 `filename` 매개 변수 구성 파일의 존재 여부를 요구 하지 않고 기본 원격 초기화를 수행 합니다.  
  
 구성 파일 구문에 대해서 [원격 설정 스키마](https://msdn.microsoft.com/library/dc2d1e62-9af7-4ca1-99fd-98b93bb4db9e)합니다.  
  
> [!NOTE]
>  참조로 마샬링 개체 (Mbr) 메모리에 계속 상주 하지 않습니다. 대신 형식을 재정의 하지 않는 한 <xref:System.MarshalByRefObject.InitializeLifetimeService%2A?displayProperty=nameWithType> 각 MBR은.NET Framework remoting 시스템 메모리를 확보 하 고 삭제 프로세스를 시작 하기 전에 유한 수명이 자체 수명 정책을 제어 합니다. 자세한 내용은 [수명 임대](https://msdn.microsoft.com/library/c72d561c-1266-4c8b-b258-2c168c08da9a)합니다.  
  
   
  
## Examples  
 [!code-cpp[RemotingConfiguration_Configure_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_Configure_Client/CPP/remotingconfiguration_configure_server.cpp#1)]
 [!code-csharp[RemotingConfiguration_Configure_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_Configure_Client/CS/remotingconfiguration_configure_server.cs#1)]
 [!code-vb[RemotingConfiguration_Configure_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_Configure_Client/VB/remotingconfiguration_configure_server.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자 중 하나 이상에게 원격 형식 및 채널을 구성하기 위한 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">원격 인프라의 구성 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Configure">
      <MemberSignature Language="C#" Value="public static void Configure (string filename, bool ensureSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Configure(string filename, bool ensureSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.Configure(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Configure (filename As String, ensureSecurity As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Configure(System::String ^ filename, bool ensureSecurity);" />
      <MemberSignature Language="F#" Value="static member Configure : string * bool -&gt; unit" Usage="System.Runtime.Remoting.RemotingConfiguration.Configure (filename, ensureSecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ensureSecurity" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="filename">원격 구성 파일 이름입니다. <see langword="null" />일 수 있습니다.</param>
        <param name="ensureSecurity"><see langword="true" />로 설정하면 보안이 필요합니다. <see langword="false" />로 설정하면 보안이 필요없지만 사용할 수 있습니다.</param>
        <summary>구성 파일을 읽고 원격 인프라를 구성합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 전달 `null` 으로 `filename` 매개 변수 구성 파일의 존재 여부를 요구 하지 않고 기본 원격 초기화를 수행 합니다. 원격 및 보안에 대 한 자세한 내용은 참조 하세요. [원격 서비스의 보안입니다.](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/9hwst9th(v=vs.100))  
  
 구성 파일 구문에 대해서 [원격 설정 스키마](https://msdn.microsoft.com/library/dc2d1e62-9af7-4ca1-99fd-98b93bb4db9e)합니다.  
  
> [!NOTE]
>  참조로 마샬링 개체 (Mbr) 메모리에 계속 상주 하지 않습니다. 대신 형식을 재정의 하지 않는 한 <xref:System.MarshalByRefObject.InitializeLifetimeService%2A?displayProperty=nameWithType> 각 MBR은.NET Framework remoting 시스템 메모리를 확보 하 고 삭제 프로세스를 시작 하기 전에 유한 수명이 자체 수명 정책을 제어 합니다. 자세한 내용은 [수명 임대](https://msdn.microsoft.com/library/c72d561c-1266-4c8b-b258-2c168c08da9a)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자 중 하나 이상에게 원격 형식 및 채널을 구성하기 위한 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">원격 인프라의 구성 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CustomErrorsEnabled">
      <MemberSignature Language="C#" Value="public static bool CustomErrorsEnabled (bool isLocalRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CustomErrorsEnabled(bool isLocalRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.CustomErrorsEnabled(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CustomErrorsEnabled (isLocalRequest As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CustomErrorsEnabled(bool isLocalRequest);" />
      <MemberSignature Language="F#" Value="static member CustomErrorsEnabled : bool -&gt; bool" Usage="System.Runtime.Remoting.RemotingConfiguration.CustomErrorsEnabled isLocalRequest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isLocalRequest" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isLocalRequest">로컬 호출자를 지정하려면 <see langword="true" />로 설정하고 원격 호출자를 지정하려면 <see langword="false" />로 설정합니다.</param>
        <summary>이 응용 프로그램 도메인의 서버 채널이 로컬 또는 원격 호출자에게 필터링된 예외 정보를 반환할지 또는 전체 예외 정보를 반환할지 여부를 나타냅니다.</summary>
        <returns><paramref name="isLocalRequest" /> 매개 변수에 지정된 것처럼 로컬 또는 원격 호출자에게 필터링된 정보만 반환하면 <see langword="true" />이고, 전체 예외 정보를 반환하면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 완전한 예외 정보에는 정확한 서버 예외와 서버 스택 추적 내용이 포함됩니다. 필터링된 정보에는 표준 원격 예외가 포함되지만 서버 스택 추적 내용은 포함되지 않습니다.  
  
 `CustomErrorsEnabled` 메서드는에 지정 된 구성 설정을 반영 합니다 `mode` 특성은 `<customErrors>` 응용 프로그램 구성 파일의 요소. 구성 옵션에 대 한 자세한 내용은 참조 하세요. [원격 응용 프로그램 구성](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/b8tysty8(v=vs.100))합니다.  
  
 다음 표에서 세 가지 서버 채널 예외 정보를 받는 호출자와 받게 정보의 유형을 지정 하는 속성 값을 보여 줍니다.  
  
|값|설명|  
|-----------|-----------------|  
|`off`|모든 호출자가 전체 예외 정보를 받습니다.|  
|`on`|모든 호출자가 필터링된 예외 정보를 받습니다.|  
|`remoteOnly`|로컬 호출자는 전체 예외 정보를 받고, 원격 호출자는 필터링된 예외 정보를 받습니다.|  
  
 다음 표에의 상호 작용을 `isLocalRequest` 매개 변수 및 서버 채널 속성입니다.  
  
|값|isLocalRequest|반환 값|설명|  
|-----------|--------------------|------------------|-----------------|  
|`on`|`true`|`true`|로컬 호출자가 필터링 된 예외 정보를 받습니다.|  
|`on`|`false`|`true`|원격 호출자가 필터링 된 예외 정보를 받습니다.|  
|`off`|`true`|`false`|로컬 호출자가 완전 한 예외 정보를 받습니다.|  
|`off`|`false`|`false`|원격 호출자가 완전 한 예외 정보를 받습니다.|  
|`remoteOnly`|`true`|`false`|로컬 호출자가 완전 한 예외 정보를 받습니다.|  
|`remoteOnly`|`false`|`true`|원격 호출자가 필터링 된 예외 정보를 받습니다.|  
  
 호출자에 게 반환 되는 예외 정보 제어를 응용 프로그램 구성 파일을 사용 하 여에 대 한 내용은 참조는 `<customErrors>` 요소입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomErrorsMode">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.CustomErrorsModes CustomErrorsMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Runtime.Remoting.CustomErrorsModes CustomErrorsMode" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.RemotingConfiguration.CustomErrorsMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CustomErrorsMode As CustomErrorsModes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::Remoting::CustomErrorsModes CustomErrorsMode { System::Runtime::Remoting::CustomErrorsModes get(); void set(System::Runtime::Remoting::CustomErrorsModes value); };" />
      <MemberSignature Language="F#" Value="member this.CustomErrorsMode : System.Runtime.Remoting.CustomErrorsModes with get, set" Usage="System.Runtime.Remoting.RemotingConfiguration.CustomErrorsMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.CustomErrorsModes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 지정 오류를 처리하는 방법을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>사용자 지정 오류를 처리하는 방법을 나타내는 <see cref="T:System.Runtime.Remoting.CustomErrorsModes" /> 열거형의 멤버입니다.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">원격 인프라의 구성 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredActivatedClientTypes">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ActivatedClientTypeEntry[] GetRegisteredActivatedClientTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ActivatedClientTypeEntry[] GetRegisteredActivatedClientTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.GetRegisteredActivatedClientTypes" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRegisteredActivatedClientTypes () As ActivatedClientTypeEntry()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Runtime::Remoting::ActivatedClientTypeEntry ^&gt; ^ GetRegisteredActivatedClientTypes();" />
      <MemberSignature Language="F#" Value="static member GetRegisteredActivatedClientTypes : unit -&gt; System.Runtime.Remoting.ActivatedClientTypeEntry[]" Usage="System.Runtime.Remoting.RemotingConfiguration.GetRegisteredActivatedClientTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ActivatedClientTypeEntry[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>원격으로 활성화되는 형식으로 클라이언트에 등록된 개체 형식의 배열을 검색합니다.</summary>
        <returns>원격으로 활성화되는 형식으로 클라이언트에 등록된 개체 형식의 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 클라이언트가 활성화 한 개체에 대 한 자세한 설명을 참조 하세요 [클라이언트 활성화](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w93betdk(v=vs.100))합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자 중 하나 이상에게 원격 형식 및 채널을 구성하기 위한 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">원격 인프라의 구성 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType(System.Type)" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredActivatedServiceTypes">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ActivatedServiceTypeEntry[] GetRegisteredActivatedServiceTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ActivatedServiceTypeEntry[] GetRegisteredActivatedServiceTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.GetRegisteredActivatedServiceTypes" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRegisteredActivatedServiceTypes () As ActivatedServiceTypeEntry()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Runtime::Remoting::ActivatedServiceTypeEntry ^&gt; ^ GetRegisteredActivatedServiceTypes();" />
      <MemberSignature Language="F#" Value="static member GetRegisteredActivatedServiceTypes : unit -&gt; System.Runtime.Remoting.ActivatedServiceTypeEntry[]" Usage="System.Runtime.Remoting.RemotingConfiguration.GetRegisteredActivatedServiceTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ActivatedServiceTypeEntry[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>클라이언트의 요청에 따라 활성화될 수 있는 형식으로 서비스 쪽에 등록된 개체 형식의 배열을 검색합니다.</summary>
        <returns>클라이언트의 요청에 따라 활성화될 수 있는 형식으로 서비스 쪽에 등록된 개체 형식의 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 클라이언트가 활성화 한 개체에 대 한 자세한 설명을 참조 하세요 [클라이언트 활성화](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w93betdk(v=vs.100))합니다.  
  
   
  
## Examples  
 [!code-cpp[RemotingConfiguration_GetRegisteredActivatedServer_Client#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredActivatedServer_Client/CPP/RemotingConfiguration_GetRegisteredActivatedService_server.cpp#2)]
 [!code-csharp[RemotingConfiguration_GetRegisteredActivatedServer_Client#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredActivatedServer_Client/CS/remotingconfiguration_getregisteredactivatedservice_server.cs#2)]
 [!code-vb[RemotingConfiguration_GetRegisteredActivatedServer_Client#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredActivatedServer_Client/VB/remotingconfiguration_getregisteredactivatedservice_server.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자 중 하나 이상에게 원격 형식 및 채널을 구성하기 위한 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">원격 인프라의 구성 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType(System.Type)" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredWellKnownClientTypes">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.WellKnownClientTypeEntry[] GetRegisteredWellKnownClientTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.WellKnownClientTypeEntry[] GetRegisteredWellKnownClientTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.GetRegisteredWellKnownClientTypes" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRegisteredWellKnownClientTypes () As WellKnownClientTypeEntry()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Runtime::Remoting::WellKnownClientTypeEntry ^&gt; ^ GetRegisteredWellKnownClientTypes();" />
      <MemberSignature Language="F#" Value="static member GetRegisteredWellKnownClientTypes : unit -&gt; System.Runtime.Remoting.WellKnownClientTypeEntry[]" Usage="System.Runtime.Remoting.RemotingConfiguration.GetRegisteredWellKnownClientTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.WellKnownClientTypeEntry[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>잘 알려진 형식으로 클라이언트 쪽에 등록된 개체 형식의 배열을 검색합니다.</summary>
        <returns>잘 알려진 형식으로 클라이언트 쪽에 등록된 개체 형식의 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Singlecall 또는 singleton 잘 알려진 개체 형식일 수 있습니다. 개체 유형을 singlecall 이면의 새 인스턴스를 만들어진 다음에 클라이언트에서 호출이 들어올 때마다 합니다. 단일 개체에 대 한 모든 호출 개체의 한 인스턴스에 의해 처리 됩니다.  
  
 에 대 한 자세한 설명은 잘 알려진 개체를 참조 하세요 [서버 활성화](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/y0h540a7(v=vs.100))합니다.  
  
   
  
## Examples  
 [!code-cpp[RemotingConfiguration_GetRegisteredWellKnownClient_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredWellKnownClient_Client/CPP/remotingconfiguration_getregisteredwellknownclient_client.cpp#1)]
 [!code-csharp[RemotingConfiguration_GetRegisteredWellKnownClient_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredWellKnownClient_Client/CS/remotingconfiguration_getregisteredwellknownclient_client.cs#1)]
 [!code-vb[RemotingConfiguration_GetRegisteredWellKnownClient_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredWellKnownClient_Client/VB/remotingconfiguration_getregisteredwellknownclient_client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자 중 하나 이상에게 원격 형식 및 채널을 구성하기 위한 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">원격 인프라의 구성 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType(System.Type,System.String,System.Runtime.Remoting.WellKnownObjectMode)" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredWellKnownServiceTypes">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.WellKnownServiceTypeEntry[] GetRegisteredWellKnownServiceTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.WellKnownServiceTypeEntry[] GetRegisteredWellKnownServiceTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.GetRegisteredWellKnownServiceTypes" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRegisteredWellKnownServiceTypes () As WellKnownServiceTypeEntry()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Runtime::Remoting::WellKnownServiceTypeEntry ^&gt; ^ GetRegisteredWellKnownServiceTypes();" />
      <MemberSignature Language="F#" Value="static member GetRegisteredWellKnownServiceTypes : unit -&gt; System.Runtime.Remoting.WellKnownServiceTypeEntry[]" Usage="System.Runtime.Remoting.RemotingConfiguration.GetRegisteredWellKnownServiceTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.WellKnownServiceTypeEntry[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>잘 알려진 형식으로 서비스 쪽에 등록된 개체 형식의 배열을 검색합니다.</summary>
        <returns>잘 알려진 형식으로 서비스 쪽에 등록된 개체 형식의 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Singlecall 또는 singleton 잘 알려진 개체 형식일 수 있습니다. 개체 유형을 singlecall 이면의 새 인스턴스를 만들어진 다음에 클라이언트에서 호출이 들어올 때마다 합니다. 단일 개체에 대 한 모든 호출 개체의 한 인스턴스에 의해 처리 됩니다.  
  
 에 대 한 자세한 설명은 잘 알려진 개체를 참조 하세요 [서버 활성화](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/y0h540a7(v=vs.100))합니다.  
  
   
  
## Examples  
 [!code-cpp[RemotingConfiguration_Configure_Client#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_Configure_Client/CPP/remotingconfiguration_configure_server.cpp#2)]
 [!code-csharp[RemotingConfiguration_Configure_Client#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_Configure_Client/CS/remotingconfiguration_configure_server.cs#2)]
 [!code-vb[RemotingConfiguration_Configure_Client#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_Configure_Client/VB/remotingconfiguration_configure_server.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자 중 하나 이상에게 원격 형식 및 채널을 구성하기 위한 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">원격 인프라의 구성 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType(System.Type,System.String,System.Runtime.Remoting.WellKnownObjectMode)" />
        <altmember cref="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsActivationAllowed">
      <MemberSignature Language="C#" Value="public static bool IsActivationAllowed (Type svrType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsActivationAllowed(class System.Type svrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.IsActivationAllowed(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsActivationAllowed (svrType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsActivationAllowed(Type ^ svrType);" />
      <MemberSignature Language="F#" Value="static member IsActivationAllowed : Type -&gt; bool" Usage="System.Runtime.Remoting.RemotingConfiguration.IsActivationAllowed svrType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="svrType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="svrType">확인할 개체 <see cref="T:System.Type" />입니다.</param>
        <summary>지정된 <see cref="T:System.Type" />을 클라이언트에서 활성화할 수 있는지 여부를 나타내는 부울 값을 반환합니다.</summary>
        <returns>지정된 <see cref="T:System.Type" />을 클라이언트에서 활성화할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 개체의 활성화 여부를 확인 하려면 현재 메서드는 서버 쪽에서 <xref:System.Type> 서버에서 명시적으로 허용 됩니다.  
  
   
  
## Examples  
 [!code-cpp[RemotingConfiguration_GetRegisteredActivatedServer_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredActivatedServer_Client/CPP/RemotingConfiguration_GetRegisteredActivatedService_server.cpp#1)]
 [!code-csharp[RemotingConfiguration_GetRegisteredActivatedServer_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredActivatedServer_Client/CS/remotingconfiguration_getregisteredactivatedservice_server.cs#1)]
 [!code-vb[RemotingConfiguration_GetRegisteredActivatedServer_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_GetRegisteredActivatedServer_Client/VB/remotingconfiguration_getregisteredactivatedservice_server.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자 중 하나 이상에게 원격 형식 및 채널을 구성하기 위한 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">원격 인프라의 구성 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsRemotelyActivatedClientType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 개체 형식이 원격 활성 클라이언트 형식으로 등록되었는지 여부를 확인합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsRemotelyActivatedClientType">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ActivatedClientTypeEntry IsRemotelyActivatedClientType (Type svrType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ActivatedClientTypeEntry IsRemotelyActivatedClientType(class System.Type svrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.IsRemotelyActivatedClientType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsRemotelyActivatedClientType (svrType As Type) As ActivatedClientTypeEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ActivatedClientTypeEntry ^ IsRemotelyActivatedClientType(Type ^ svrType);" />
      <MemberSignature Language="F#" Value="static member IsRemotelyActivatedClientType : Type -&gt; System.Runtime.Remoting.ActivatedClientTypeEntry" Usage="System.Runtime.Remoting.RemotingConfiguration.IsRemotelyActivatedClientType svrType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ActivatedClientTypeEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="svrType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="svrType">확인할 개체 형식입니다.</param>
        <summary>지정된 개체 <see cref="T:System.Type" />이 원격 활성 클라이언트 형식으로 등록되었는지 여부를 확인합니다.</summary>
        <returns>지정된 개체 형식에 해당하는 <see cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[RemotingConfiguration_IsRemotelyActivatedClientType1_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_IsRemotelyActivatedClientType1_Client/CPP/remotingconfiguration_isremotelyactivatedclienttype1_client.cpp#1)]
 [!code-csharp[RemotingConfiguration_IsRemotelyActivatedClientType1_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_IsRemotelyActivatedClientType1_Client/CS/remotingconfiguration_isremotelyactivatedclienttype1_client.cs#1)]
 [!code-vb[RemotingConfiguration_IsRemotelyActivatedClientType1_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_IsRemotelyActivatedClientType1_Client/VB/remotingconfiguration_isremotelyactivatedclienttype1_client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자 중 하나 이상에게 원격 형식 및 채널을 구성하기 위한 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">원격 인프라의 구성 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w93betdk(v=vs.100)">클라이언트 활성화</related>
      </Docs>
    </Member>
    <Member MemberName="IsRemotelyActivatedClientType">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ActivatedClientTypeEntry IsRemotelyActivatedClientType (string typeName, string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ActivatedClientTypeEntry IsRemotelyActivatedClientType(string typeName, string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.IsRemotelyActivatedClientType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsRemotelyActivatedClientType (typeName As String, assemblyName As String) As ActivatedClientTypeEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ActivatedClientTypeEntry ^ IsRemotelyActivatedClientType(System::String ^ typeName, System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="static member IsRemotelyActivatedClientType : string * string -&gt; System.Runtime.Remoting.ActivatedClientTypeEntry" Usage="System.Runtime.Remoting.RemotingConfiguration.IsRemotelyActivatedClientType (typeName, assemblyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ActivatedClientTypeEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">확인할 개체의 형식 이름입니다.</param>
        <param name="assemblyName">확인할 개체의 어셈블리 이름입니다.</param>
        <summary>형식 이름과 어셈블리 이름이 지정하는 개체가 원격 활성 클라이언트 형식으로 등록되었는지 여부를 확인합니다.</summary>
        <returns>지정된 개체 형식에 해당하는 <see cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[RemotingConfiguration_IsRemotelyActivatedClientType2_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_IsRemotelyActivatedClientType2_Client/CPP/remotingconfiguration_isremotelyactivatedclienttype2_client.cpp#1)]
 [!code-csharp[RemotingConfiguration_IsRemotelyActivatedClientType2_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_IsRemotelyActivatedClientType2_Client/CS/remotingconfiguration_isremotelyactivatedclienttype2_client.cs#1)]
 [!code-vb[RemotingConfiguration_IsRemotelyActivatedClientType2_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_IsRemotelyActivatedClientType2_Client/VB/remotingconfiguration_isremotelyactivatedclienttype2_client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자 중 하나 이상에게 원격 형식 및 채널을 구성하기 위한 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">원격 인프라의 구성 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w93betdk(v=vs.100)">클라이언트 활성화</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsWellKnownClientType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 개체 형식이 잘 알려진 클라이언트 형식으로 등록되었는지 여부를 확인합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsWellKnownClientType">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.WellKnownClientTypeEntry IsWellKnownClientType (Type svrType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.WellKnownClientTypeEntry IsWellKnownClientType(class System.Type svrType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.IsWellKnownClientType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWellKnownClientType (svrType As Type) As WellKnownClientTypeEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::WellKnownClientTypeEntry ^ IsWellKnownClientType(Type ^ svrType);" />
      <MemberSignature Language="F#" Value="static member IsWellKnownClientType : Type -&gt; System.Runtime.Remoting.WellKnownClientTypeEntry" Usage="System.Runtime.Remoting.RemotingConfiguration.IsWellKnownClientType svrType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.WellKnownClientTypeEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="svrType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="svrType">확인할 개체 <see cref="T:System.Type" />입니다.</param>
        <summary>지정된 개체 <see cref="T:System.Type" />이 잘 알려진 클라이언트 형식으로 등록되었는지 여부를 확인합니다.</summary>
        <returns>지정된 개체 형식에 해당하는 <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[RemotingConfiguration_IsWellKnownClientType1_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_IsWellKnownClientType1_Client/CPP/remotingconfiguration_iswellknownclienttype1_client.cpp#1)]
 [!code-csharp[RemotingConfiguration_IsWellKnownClientType1_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_IsWellKnownClientType1_Client/CS/remotingconfiguration_iswellknownclienttype1_client.cs#1)]
 [!code-vb[RemotingConfiguration_IsWellKnownClientType1_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_IsWellKnownClientType1_Client/VB/remotingconfiguration_iswellknownclienttype1_client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자 중 하나 이상에게 원격 형식 및 채널을 구성하기 위한 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">원격 인프라의 구성 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/y0h540a7(v=vs.100)">서버 활성화</related>
      </Docs>
    </Member>
    <Member MemberName="IsWellKnownClientType">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.WellKnownClientTypeEntry IsWellKnownClientType (string typeName, string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.WellKnownClientTypeEntry IsWellKnownClientType(string typeName, string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.IsWellKnownClientType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWellKnownClientType (typeName As String, assemblyName As String) As WellKnownClientTypeEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::WellKnownClientTypeEntry ^ IsWellKnownClientType(System::String ^ typeName, System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="static member IsWellKnownClientType : string * string -&gt; System.Runtime.Remoting.WellKnownClientTypeEntry" Usage="System.Runtime.Remoting.RemotingConfiguration.IsWellKnownClientType (typeName, assemblyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.WellKnownClientTypeEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">확인할 개체의 형식 이름입니다.</param>
        <param name="assemblyName">확인할 개체의 어셈블리 이름입니다.</param>
        <summary>형식 이름과 어셈블리 이름이 지정하는 개체가 잘 알려진 클라이언트 형식으로 등록되었는지 여부를 확인합니다.</summary>
        <returns>지정된 개체 형식에 해당하는 <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[RemotingConfiguration_IsWellKnownClientType2_Client#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration_IsWellKnownClientType2_Client/CPP/remotingconfiguration_iswellknownclienttype2_client.cpp#1)]
 [!code-csharp[RemotingConfiguration_IsWellKnownClientType2_Client#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration_IsWellKnownClientType2_Client/CS/remotingconfiguration_iswellknownclienttype2_client.cs#1)]
 [!code-vb[RemotingConfiguration_IsWellKnownClientType2_Client#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration_IsWellKnownClientType2_Client/VB/remotingconfiguration_iswellknownclienttype2_client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자 중 하나 이상에게 원격 형식 및 채널을 구성하기 위한 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">원격 인프라의 구성 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/y0h540a7(v=vs.100)">서버 활성화</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessId">
      <MemberSignature Language="C#" Value="public static string ProcessId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ProcessId" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.RemotingConfiguration.ProcessId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ProcessId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ProcessId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessId : string" Usage="System.Runtime.Remoting.RemotingConfiguration.ProcessId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 실행 중인 프로세스의 ID를 가져옵니다.</summary>
        <value>현재 실행 중인 프로세스의 ID가 들어 있는 <see cref="T:System.String" />입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">직접 실행 호출자에 인프라 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">한 인프라 코드를 사용 하 여 작동 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterActivatedClientType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>개체 <see cref="T:System.Type" />을 서버에서 활성화될 수 있는 형식으로 클라이언트 쪽에 등록합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterActivatedClientType">
      <MemberSignature Language="C#" Value="public static void RegisterActivatedClientType (System.Runtime.Remoting.ActivatedClientTypeEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterActivatedClientType(class System.Runtime.Remoting.ActivatedClientTypeEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType(System.Runtime.Remoting.ActivatedClientTypeEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterActivatedClientType (entry As ActivatedClientTypeEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterActivatedClientType(System::Runtime::Remoting::ActivatedClientTypeEntry ^ entry);" />
      <MemberSignature Language="F#" Value="static member RegisterActivatedClientType : System.Runtime.Remoting.ActivatedClientTypeEntry -&gt; unit" Usage="System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Runtime.Remoting.ActivatedClientTypeEntry" />
      </Parameters>
      <Docs>
        <param name="entry">클라이언트 활성 형식에 대한 구성 설정입니다.</param>
        <summary>제공된 <see cref="T:System.Type" />에 기록된 개체 <see cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />을 서버에서 활성화될 수 있는 형식으로 클라이언트 쪽에 등록합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 서버에서 클라이언트 활성 개체의 인스턴스를 만들려고 알아야 해당 <xref:System.Type> 를 사용 하 여 서버 쪽에 등록 해야 하 고는 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> 메서드. 클라이언트 활성 개체의 새 인스턴스에 대 한 프록시를 가져오려면 클라이언트 채널을 등록 먼저 해야 <xref:System.Runtime.Remoting.Channels.ChannelServices> 한 다음 호출 하 여 개체를 활성화 `new`합니다.  
  
 클라이언트 활성 개체 형식을 활성화 하는 `new` 키워드를 개체 형식을 사용 하 여 클라이언트 끝에 먼저 등록 해야 합니다는 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> 메서드. 호출 된 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> 메서드는 원격 응용 프로그램의 위치는 원격 인프라를 제공 여기서 `new` 를 만듭니다. 반면에 사용 하는 경우는 <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> 클라이언트가 활성화 한 개체의 새 인스턴스를 만드는 메서드를 하므로 클라이언트 쪽에 없는 이전 등록이 필요한 원격 응용 프로그램의 URL을 매개 변수로 제공 해야 합니다. 제공 된 <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> 메서드 개체를 만들려는 서버의 URL을 사용 하 여 인스턴스의 URL을 캡슐화 해야 합니다는 <xref:System.Runtime.Remoting.Activation.UrlAttribute> 클래스.  
  
 클라이언트가 활성화 한 개체에 대 한 자세한 설명을 참조 하세요 [클라이언트 활성화](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w93betdk(v=vs.100))합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자 중 하나 이상에게 원격 형식 및 채널을 구성하기 위한 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">원격 인프라의 구성 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" />
      </Docs>
    </Member>
    <Member MemberName="RegisterActivatedClientType">
      <MemberSignature Language="C#" Value="public static void RegisterActivatedClientType (Type type, string appUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterActivatedClientType(class System.Type type, string appUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterActivatedClientType(Type ^ type, System::String ^ appUrl);" />
      <MemberSignature Language="F#" Value="static member RegisterActivatedClientType : Type * string -&gt; unit" Usage="System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType (type, appUrl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="appUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">개체 <see cref="T:System.Type" />입니다.</param>
        <param name="appUrl">이 형식이 활성화될 응용 프로그램의 URL입니다.</param>
        <summary>지정된 매개 변수를 사용하여 <see cref="T:System.Type" /> 클래스의 새 인스턴스를 초기화하여 개체 <see cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />을 서버에서 활성화될 수 있는 형식으로 클라이언트 쪽에 등록합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 서버에서 클라이언트 활성 개체의 인스턴스를 만들려고 알아야 해당 <xref:System.Type> 를 사용 하 여 서버 쪽에 등록 해야 하 고는 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> 메서드. 클라이언트 활성 개체의 새 인스턴스에 대 한 프록시를 가져오려면 클라이언트 채널을 등록 먼저 해야 <xref:System.Runtime.Remoting.Channels.ChannelServices> 한 다음 호출 하 여 개체를 활성화 `new`합니다.  
  
 클라이언트 활성 개체 형식을 활성화 하는 `new` 키워드를 개체 형식을 사용 하 여 클라이언트 끝에 먼저 등록 해야 합니다는 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> 메서드. 호출 된 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> 메서드는 원격 응용 프로그램의 위치는 원격 인프라를 제공 여기서 `new` 를 만듭니다. 반면에 사용 하는 경우는 <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> 클라이언트가 활성화 한 개체의 새 인스턴스를 만드는 메서드를 하므로 클라이언트 쪽에 없는 이전 등록이 필요한 원격 응용 프로그램의 URL을 매개 변수로 제공 해야 합니다. 제공 된 <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> 메서드 개체를 만들려는 서버의 URL을 사용 하 여 인스턴스의 URL을 캡슐화 해야 합니다는 <xref:System.Runtime.Remoting.Activation.UrlAttribute> 클래스.  
  
 클라이언트가 활성화 한 개체에 대 한 자세한 설명을 참조 하세요. [클라이언트 활성화](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w93betdk(v=vs.100))  
  
   
  
## Examples  
 다음 코드 예제에서는 서버에서 활성화 될 수 있는 형식으로 클라이언트 쪽에 개체 형식의 등록을 보여 줍니다. 제공된 된 클라이언트 코드에 해당 하는 서버 코드에 대 한 예제를 참조 하세요.를 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> 메서드.  
  
 [!code-cpp[RemotingConfiguration.ClientActivation#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/CPP/client.cpp#1)]
 [!code-csharp[RemotingConfiguration.ClientActivation#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/CS/client.cs#1)]
 [!code-vb[RemotingConfiguration.ClientActivation#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/VB/client.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="typeName" /> 또는 <paramref name="URI" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자 중 하나 이상에게 원격 형식 및 채널을 구성하기 위한 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">원격 인프라의 구성 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterActivatedServiceType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>개체 <see cref="T:System.Type" />을 클라이언트의 요청에 따라 활성화될 수 있는 형식으로 서비스 쪽에 등록합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterActivatedServiceType">
      <MemberSignature Language="C#" Value="public static void RegisterActivatedServiceType (System.Runtime.Remoting.ActivatedServiceTypeEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterActivatedServiceType(class System.Runtime.Remoting.ActivatedServiceTypeEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType(System.Runtime.Remoting.ActivatedServiceTypeEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterActivatedServiceType (entry As ActivatedServiceTypeEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterActivatedServiceType(System::Runtime::Remoting::ActivatedServiceTypeEntry ^ entry);" />
      <MemberSignature Language="F#" Value="static member RegisterActivatedServiceType : System.Runtime.Remoting.ActivatedServiceTypeEntry -&gt; unit" Usage="System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Runtime.Remoting.ActivatedServiceTypeEntry" />
      </Parameters>
      <Docs>
        <param name="entry">클라이언트 활성 형식에 대한 구성 설정입니다.</param>
        <summary>제공된 <see cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" />에 기록된 개체 형식을 클라이언트의 요청에 따라 활성화될 수 있는 형식으로 서비스 쪽에 등록합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 서버에서 클라이언트 활성 개체의 인스턴스를 만들려고 알아야 해당 <xref:System.Type> 를 사용 하 여 서버 쪽에 등록 해야 하 고는 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> 메서드. 클라이언트 활성 개체의 새 인스턴스에 대 한 프록시를 가져오려면 클라이언트 채널을 등록 먼저 해야 <xref:System.Runtime.Remoting.Channels.ChannelServices> 한 다음 호출 하 여 개체를 활성화할 `new` 또는 <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType>합니다.  
  
 클라이언트 활성 개체 형식을 활성화 하는 `new` 키워드를 개체 형식을 사용 하 여 클라이언트 끝에 먼저 등록 해야 합니다는 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> 메서드. 호출 된 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> 메서드는 원격 인프라를 원격 응용 프로그램의 위치를 제공 여기서 `new` 를 만듭니다. 반면에 사용 하는 경우는 <xref:System.Activator.CreateInstance%2A> 클라이언트가 활성화 한 개체의 새 인스턴스를 만드는 메서드를 하므로 클라이언트 쪽에 없는 이전 등록이 필요한 원격 응용 프로그램의 URL을 매개 변수로 제공 해야 합니다. 제공 된 <xref:System.Activator.CreateInstance%2A> 메서드 개체를 만들려는 서버의 URL을 사용 하 여 인스턴스의 URL을 캡슐화 해야 합니다는 <xref:System.Runtime.Remoting.Activation.UrlAttribute> 클래스.  
  
 클라이언트가 활성화 한 개체에 대 한 자세한 설명을 참조 하세요 [클라이언트 활성화](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w93betdk(v=vs.100))합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자 중 하나 이상에게 원격 형식 및 채널을 구성하기 위한 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">원격 인프라의 구성 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />
      </Docs>
    </Member>
    <Member MemberName="RegisterActivatedServiceType">
      <MemberSignature Language="C#" Value="public static void RegisterActivatedServiceType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterActivatedServiceType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterActivatedServiceType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member RegisterActivatedServiceType : Type -&gt; unit" Usage="System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">등록할 개체의 <see cref="T:System.Type" />입니다.</param>
        <summary>지정된 개체 형식을 클라이언트의 요청에 따라 활성화될 수 있는 형식으로 서비스 쪽에 등록합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 서버에서 클라이언트 활성 개체의 인스턴스를 만들려고 알아야 해당 <xref:System.Type> 를 사용 하 여 서버 쪽에 등록 해야 하 고는 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType%2A> 메서드. 클라이언트 활성 개체의 새 인스턴스에 대 한 프록시를 가져오려면 클라이언트 채널을 등록 먼저 해야 <xref:System.Runtime.Remoting.Channels.ChannelServices> 한 다음 호출 하 여 개체를 활성화할 `new` 또는 <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType>합니다.  
  
 클라이언트 활성 개체 형식을 활성화 하는 `new` 키워드를 개체 형식을 사용 하 여 클라이언트 끝에 먼저 등록 해야 합니다는 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> 메서드. 호출 된 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> 메서드는 원격 인프라를 원격 응용 프로그램의 위치를 제공 여기서 `new` 를 만듭니다. 반면에 사용 하는 경우는 <xref:System.Activator.CreateInstance%2A> 클라이언트가 활성화 한 개체의 새 인스턴스를 만드는 메서드를 하므로 클라이언트 쪽에 없는 이전 등록이 필요한 원격 응용 프로그램의 URL을 매개 변수로 제공 해야 합니다. 제공 된 <xref:System.Activator.CreateInstance%2A> 메서드 개체를 만들려는 서버의 URL을 사용 하 여 인스턴스의 URL을 캡슐화 해야 합니다는 <xref:System.Runtime.Remoting.Activation.UrlAttribute> 클래스.  
  
 클라이언트가 활성화 한 개체에 대 한 자세한 설명을 참조 하세요 [클라이언트 활성화](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w93betdk(v=vs.100))합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 클라이언트에서 활성화 될 수 있는 형식으로 등록 서버에 개체 형식을 보여 줍니다. 제공된 된 서버 코드에 해당 하는 클라이언트 코드에 대 한 예제를 참조 하세요.를 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType%2A> 메서드.  
  
 [!code-cpp[RemotingConfiguration.ClientActivation#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/CPP/server.cpp#2)]
 [!code-csharp[RemotingConfiguration.ClientActivation#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/CS/server.cs#2)]
 [!code-vb[RemotingConfiguration.ClientActivation#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/VB/server.vb#2)]  
  
 다음 코드 예제에서는 위의 샘플 코드에 등록 된 서비스 개체를 보여 줍니다.  
  
 [!code-cpp[RemotingConfiguration.ClientActivation#3](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/CPP/service.cpp#3)]
 [!code-csharp[RemotingConfiguration.ClientActivation#3](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/CS/service.cs#3)]
 [!code-vb[RemotingConfiguration.ClientActivation#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ClientActivation/VB/service.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자 중 하나 이상에게 원격 형식 및 채널을 구성하기 위한 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">원격 인프라의 구성 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.ActivatedServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.ActivatedClientTypeEntry" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterWellKnownClientType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>개체 <see cref="T:System.Type" />을 잘 알려진 형식(SingleCall 또는 Singleton)으로 클라이언트 쪽에 등록합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterWellKnownClientType">
      <MemberSignature Language="C#" Value="public static void RegisterWellKnownClientType (System.Runtime.Remoting.WellKnownClientTypeEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterWellKnownClientType(class System.Runtime.Remoting.WellKnownClientTypeEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType(System.Runtime.Remoting.WellKnownClientTypeEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterWellKnownClientType (entry As WellKnownClientTypeEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterWellKnownClientType(System::Runtime::Remoting::WellKnownClientTypeEntry ^ entry);" />
      <MemberSignature Language="F#" Value="static member RegisterWellKnownClientType : System.Runtime.Remoting.WellKnownClientTypeEntry -&gt; unit" Usage="System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Runtime.Remoting.WellKnownClientTypeEntry" />
      </Parameters>
      <Docs>
        <param name="entry">잘 알려진 형식에 대한 구성 설정입니다.</param>
        <summary>제공된 <see cref="T:System.Type" />에 기록된 개체 <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />을 서버에서 활성화될 수 있는 잘 알려진 형식으로 클라이언트 쪽에 등록합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 등록된 된 잘 알려진 개체의 URI를 알고 있는 클라이언트 채널 사용 하 여 등록 하 여 개체에 대 한 프록시를 가져올 수 있습니다 <xref:System.Runtime.Remoting.Channels.ChannelServices>를 호출 하 여 개체를 활성화 `new` 또는 <xref:System.Activator.GetObject%2A?displayProperty=nameWithType>합니다. 사용 하 여 잘 알려진 개체를 활성화 하 `new`, 잘 알려진 개체 형식을 사용 하는 클라이언트에 먼저 등록 해야 합니다는 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> 메서드. 호출을 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> 메서드는 원격 인프라 허용 하는 원격 개체의 위치를 제공 합니다 `new` 키워드를 만듭니다. 반면에 사용 하는 경우는 <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> 잘 알려진 개체를 활성화 하는 방법 개체의 URL을 사용 하 여 인수로 제공 해야 하므로 클라이언트 쪽에 없는 이전 등록이 필요 합니다.  
  
 잘 알려진 개체에 대 한 자세한 설명을 참조 하세요 [서버 활성화](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/y0h540a7(v=vs.100))합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자 중 하나 이상에게 원격 형식 및 채널을 구성하기 위한 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">원격 인프라의 구성 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />
      </Docs>
    </Member>
    <Member MemberName="RegisterWellKnownClientType">
      <MemberSignature Language="C#" Value="public static void RegisterWellKnownClientType (Type type, string objectUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterWellKnownClientType(class System.Type type, string objectUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterWellKnownClientType(Type ^ type, System::String ^ objectUrl);" />
      <MemberSignature Language="F#" Value="static member RegisterWellKnownClientType : Type * string -&gt; unit" Usage="System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType (type, objectUrl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="objectUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">개체 <see cref="T:System.Type" />입니다.</param>
        <param name="objectUrl">잘 알려진 클라이언트 개체의 URL입니다.</param>
        <summary>지정된 매개 변수로 <see cref="T:System.Type" /> 클래스의 새 인스턴스를 초기화하여 개체 <see cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />을 서버에서 활성화될 수 있는 잘 알려진 형식으로 클라이언트 쪽에 등록합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 등록된 된 잘 알려진 개체의 URI를 알고 있는 클라이언트 채널 사용 하 여 등록 하 여 개체에 대 한 프록시를 가져올 수 있습니다 <xref:System.Runtime.Remoting.Channels.ChannelServices>를 호출 하 여 개체를 활성화 `new` 또는 <xref:System.Activator.GetObject%2A?displayProperty=nameWithType>합니다. 사용 하 여 잘 알려진 개체를 활성화 하 `new`, 잘 알려진 개체 형식을 사용 하는 클라이언트에 먼저 등록 해야 합니다는 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> 메서드. 호출을 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> 메서드는 원격 인프라 허용 하는 원격 개체의 위치를 제공 합니다 `new` 키워드를 만듭니다. 반면에 사용 하는 경우는 <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> 잘 알려진 개체를 활성화 하는 방법 개체의 URL을 사용 하 여 인수로 제공 해야 하므로 클라이언트 쪽에 없는 이전 등록이 필요 합니다.  
  
 잘 알려진 개체에 대 한 자세한 설명을 참조 하세요 [서버 활성화](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/y0h540a7(v=vs.100))합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 잘 알려진 형식으로 클라이언트 쪽에 개체 형식의 등록을 보여 줍니다. 제공된 된 클라이언트 코드에 해당 하는 서버 코드에 대 한 예제를 참조 하세요.를 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType%2A> 메서드.  
  
 [!code-cpp[RemotingConfiguration.ServerActivation1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/client.cpp#5)]
 [!code-csharp[RemotingConfiguration.ServerActivation1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/client.cs#5)]
 [!code-vb[RemotingConfiguration.ServerActivation1#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/client.vb#5)]  
[!code-cpp[RemotingConfiguration.ServerActivation1#6](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/client.cpp#6)]
[!code-csharp[RemotingConfiguration.ServerActivation1#6](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/client.cs#6)]
[!code-vb[RemotingConfiguration.ServerActivation1#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/client.vb#6)]  
[!code-cpp[RemotingConfiguration.ServerActivation1#7](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/client.cpp#7)]
[!code-csharp[RemotingConfiguration.ServerActivation1#7](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/client.cs#7)]
[!code-vb[RemotingConfiguration.ServerActivation1#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/client.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자 중 하나 이상에게 원격 형식 및 채널을 구성하기 위한 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">원격 인프라의 구성 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterWellKnownServiceType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>개체 <see cref="T:System.Type" />을 잘 알려진 형식(SingleCall 또는 Singleton)으로 서비스 쪽에 등록합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterWellKnownServiceType">
      <MemberSignature Language="C#" Value="public static void RegisterWellKnownServiceType (System.Runtime.Remoting.WellKnownServiceTypeEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterWellKnownServiceType(class System.Runtime.Remoting.WellKnownServiceTypeEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType(System.Runtime.Remoting.WellKnownServiceTypeEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterWellKnownServiceType (entry As WellKnownServiceTypeEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterWellKnownServiceType(System::Runtime::Remoting::WellKnownServiceTypeEntry ^ entry);" />
      <MemberSignature Language="F#" Value="static member RegisterWellKnownServiceType : System.Runtime.Remoting.WellKnownServiceTypeEntry -&gt; unit" Usage="System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Runtime.Remoting.WellKnownServiceTypeEntry" />
      </Parameters>
      <Docs>
        <param name="entry">잘 알려진 형식에 대한 구성 설정입니다.</param>
        <summary>제공된 <see cref="T:System.Type" />에 기록된 개체 <see cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />을 잘 알려진 형식으로 서비스 쪽에 등록합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 등록된 된 잘 알려진 개체의 URI를 알고 있는 클라이언트 채널 사용 하 여 등록 하 여 개체에 대 한 프록시를 가져올 수 있습니다 <xref:System.Runtime.Remoting.Channels.ChannelServices>를 호출 하 여 개체를 활성화 `new` 또는 <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> 메서드. 사용 하 여 잘 알려진 개체를 활성화 하 `new`, 잘 알려진 개체 형식을 사용 하는 클라이언트에 먼저 등록 해야 합니다는 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> 메서드. 호출을 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> 메서드는 원격 인프라 허용 하는 원격 개체의 위치를 제공 합니다 `new` 키워드를 만듭니다. 반면에 사용 하는 경우는 <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> 잘 알려진 개체를 활성화 하는 방법 개체의 URL을 사용 하 여 인수로 제공 해야 하므로 클라이언트 쪽에 없는 이전 등록이 필요 합니다.  
  
 호출 서버에 도착 하는 경우.NET Framework 메시지에서 URI를 추출, 개체 메서드 호출을 전달 URI와 일치 하는 다음 필요한 경우 개체를 인스턴스화하고 개체에 대 한 참조를 찾으려는 원격 테이블을 검사 합니다. 개체로 등록 된 경우 <xref:System.Runtime.Remoting.WellKnownObjectMode.SingleCall>, 메서드 호출이 완료 된 후 제거 됩니다. 개체의 새 인스턴스는 각 메서드에 대해 생성 됩니다. 유일한 차이점 <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> 고 `new` 전자를 사용 하면 URL을 매개 변수로 지정 하 고 후자의 경우 구성에서 URL을 가져옵니다.  
  
 원격 개체 자체 등록 프로세스에서 인스턴스화되지 않습니다. 이 클라이언트 개체에서 메서드를 호출 하려고 할 때 발생 하거나 클라이언트 쪽에서 개체를 활성화 합니다.  
  
 잘 알려진 개체에 대 한 자세한 설명을 참조 하세요 [서버 활성화](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/y0h540a7(v=vs.100))합니다.  
  
   
  
## Examples  
 [!code-cpp[CreateObjRef2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/CreateObjRef2/CPP/example.cpp#2)]
 [!code-csharp[CreateObjRef2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/CreateObjRef2/CS/example.cs#2)]
 [!code-vb[CreateObjRef2#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CreateObjRef2/VB/example.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자 중 하나 이상에게 원격 형식 및 채널을 구성하기 위한 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">원격 인프라의 구성 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />
      </Docs>
    </Member>
    <Member MemberName="RegisterWellKnownServiceType">
      <MemberSignature Language="C#" Value="public static void RegisterWellKnownServiceType (Type type, string objectUri, System.Runtime.Remoting.WellKnownObjectMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterWellKnownServiceType(class System.Type type, string objectUri, valuetype System.Runtime.Remoting.WellKnownObjectMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType(System.Type,System.String,System.Runtime.Remoting.WellKnownObjectMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterWellKnownServiceType(Type ^ type, System::String ^ objectUri, System::Runtime::Remoting::WellKnownObjectMode mode);" />
      <MemberSignature Language="F#" Value="static member RegisterWellKnownServiceType : Type * string * System.Runtime.Remoting.WellKnownObjectMode -&gt; unit" Usage="System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType (type, objectUri, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="objectUri" Type="System.String" />
        <Parameter Name="mode" Type="System.Runtime.Remoting.WellKnownObjectMode" />
      </Parameters>
      <Docs>
        <param name="type">개체 <see cref="T:System.Type" />입니다.</param>
        <param name="objectUri">개체 URL입니다.</param>
        <param name="mode">등록 중인 잘 알려진 개체 형식의 활성화 모드입니다. <see cref="T:System.Runtime.Remoting.WellKnownObjectMode" />을 참조하십시오.</param>
        <summary>지정된 매개 변수를 사용하여 <see cref="T:System.Type" />의 새 인스턴스를 초기화하여 개체 <see cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />을 서비스 쪽에 등록합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 등록된 된 잘 알려진 개체의 URI를 알고 있는 클라이언트 채널 사용 하 여 등록 하 여 개체에 대 한 프록시를 가져올 수 있습니다 <xref:System.Runtime.Remoting.Channels.ChannelServices>를 호출 하 여 개체를 활성화 `new` 또는 <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> 메서드. 사용 하 여 잘 알려진 개체를 활성화 하 `new`, 잘 알려진 개체 형식을 사용 하는 클라이언트에 먼저 등록 해야 합니다는 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> 메서드. 호출을 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> 메서드는 원격 인프라 허용 하는 원격 개체의 위치를 제공 합니다 `new` 키워드를 만듭니다. 반면에 사용 하는 경우는 <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> 잘 알려진 개체를 활성화 하는 방법 개체의 URL을 사용 하 여 인수로 제공 해야 하므로 클라이언트 쪽에 없는 이전 등록이 필요 합니다.  
  
 호출 서버에 도착 하는 경우.NET Framework 메시지에서 URI를 추출, 개체 메서드 호출을 전달 URI와 일치 하는 다음 필요한 경우 개체를 인스턴스화하고 개체에 대 한 참조를 찾으려는 원격 테이블을 검사 합니다. 개체로 등록 된 경우 <xref:System.Runtime.Remoting.WellKnownObjectMode.SingleCall>, 메서드 호출이 완료 된 후 제거 됩니다. 개체의 새 인스턴스는 각 메서드에 대해 생성 됩니다. 유일한 차이점 <xref:System.Activator.GetObject%2A?displayProperty=nameWithType> 고 `new` 전자를 사용 하면 URL을 매개 변수로 지정 하 고 후자의 경우 구성에서 URL을 가져옵니다.  
  
 원격 개체 자체 등록 프로세스에서 인스턴스화되지 않습니다. 이 클라이언트 개체에서 메서드를 호출 하려고 할 때 발생 하거나 클라이언트 쪽에서 개체를 활성화 합니다.  
  
 잘 알려진 개체에 대 한 자세한 설명을 참조 하세요 [서버 활성화](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/y0h540a7(v=vs.100))합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 잘 알려진 개체 형식으로 등록 서버에 개체 형식을 보여 줍니다. 제공된 된 서버 코드에 해당 하는 클라이언트 코드에 대 한 예제를 참조 하세요.를 <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> 메서드.  
  
 [!code-cpp[RemotingConfiguration.ServerActivation1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/server.cpp#1)]
 [!code-csharp[RemotingConfiguration.ServerActivation1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/server.cs#1)]
 [!code-vb[RemotingConfiguration.ServerActivation1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/server.vb#1)]  
[!code-cpp[RemotingConfiguration.ServerActivation1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/server.cpp#2)]
[!code-csharp[RemotingConfiguration.ServerActivation1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/server.cs#2)]
[!code-vb[RemotingConfiguration.ServerActivation1#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/server.vb#2)]  
[!code-cpp[RemotingConfiguration.ServerActivation1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/server.cpp#3)]
[!code-csharp[RemotingConfiguration.ServerActivation1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/server.cs#3)]
[!code-vb[RemotingConfiguration.ServerActivation1#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/server.vb#3)]  
  
 다음 코드 예제에서는 위의 샘플 코드에 등록 된 서비스 개체를 보여 줍니다.  
  
 [!code-cpp[RemotingConfiguration.ServerActivation1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CPP/service.cpp#4)]
 [!code-csharp[RemotingConfiguration.ServerActivation1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/CS/service.cs#4)]
 [!code-vb[RemotingConfiguration.ServerActivation1#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation1/VB/service.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자 중 하나 이상에게 원격 형식 및 채널을 구성하기 위한 권한이 없는 경우</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">원격 인프라의 구성 합니다. 요청 값: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />; 권한 값: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration" /></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownServiceTypeEntry" />
        <altmember cref="T:System.Runtime.Remoting.WellKnownClientTypeEntry" />
      </Docs>
    </Member>
  </Members>
</Type>