<Type Name="SoapFormatter" FullName="System.Runtime.Serialization.Formatters.Soap.SoapFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1f76dd47b146332488e2f959ebc05a74b951f1de" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53482902" /></Metadata><TypeSignature Language="C#" Value="public sealed class SoapFormatter : System.Runtime.Remoting.Messaging.IRemotingFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SoapFormatter extends System.Object implements class System.Runtime.Remoting.Messaging.IRemotingFormatter, class System.Runtime.Serialization.IFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SoapFormatter&#xA;Implements IRemotingFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapFormatter sealed : System::Runtime::Remoting::Messaging::IRemotingFormatter" />
  <TypeSignature Language="F#" Value="type SoapFormatter = class&#xA;    interface IRemotingFormatter&#xA;    interface IFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Messaging.IRemotingFormatter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>개체나 연결된 개체의 전체 그래프를 SOAP 형식으로 serialize 및 deserialize합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  이 클래스는.NET Framework 2.0 부터는 사용 되지 않습니다. 대신 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>를 사용하세요.  
  
 <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter> 및 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> 클래스 구현 합니다 <xref:System.Runtime.Remoting.Messaging.IRemotingFormatter> 원격 프로시저 호출 (Rpc)을 지원 하기 위해 인터페이스 및 <xref:System.Runtime.Serialization.IFormatter> 인터페이스 (에서 상속는 <xref:System.Runtime.Remoting.Messaging.IRemotingFormatter>) 개체 그래프 serialization을 지원 합니다. 합니다 <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter> 클래스에서는 Rpc <xref:System.Runtime.Serialization.Formatters.ISoapMessage> 개체를 사용 하지 않고는 <xref:System.Runtime.Remoting.Messaging.IRemotingFormatter> 기능.  
  
 Rpc를 하는 동안는 <xref:System.Runtime.Remoting.Messaging.IRemotingFormatter> 인터페이스를 사용 하면 두 개의 별도 개체 그래프의 사양을: (원격 함수 호출에 대 한 정보를 전달 하는 헤더 개체의 배열을 포함 하는 그래프를 추가 하 고 serialize 할 개체 그래프 예, 트랜잭션 ID 또는 메서드 서명을). 적절 한 serialization에 대 한 첫 번째 그래프의 루트 개체 중 하나를 구현 하는 개체 여야 합니다 <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage> 인터페이스 또는 <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage> 인터페이스입니다.  
  
 RPC 역직렬화 하는 동안를 <xref:System.Runtime.Remoting.Messaging.HeaderHandler> 대리자에 지정 된 된 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A> 포맷터의 메서드. 원격 인프라를 사용 합니다 <xref:System.Runtime.Remoting.Messaging.HeaderHandler> 지 원하는 개체를 생성 하는 대리자는 <xref:System.Runtime.Serialization.ISerializable> 인터페이스입니다. 이 개체는 머리글에 저장 된 정보를 포함 및 deserializer에 의해 반환 된 그래프의 루트가 됩니다.  
  
 합니다 <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter> 구현 하는 개체를 사용 하 여 생성 되는 Rpc를 처리할 수도 있습니다는 <xref:System.Runtime.Serialization.Formatters.ISoapMessage> 인터페이스입니다. RPC를 사용 하지 않고 만드는 합니다 <xref:System.Runtime.Remoting.Messaging.IRemotingFormatter> 기능을 지 원하는 개체를 현재 위치를 <xref:System.Runtime.Serialization.Formatters.ISoapMessage> serialize 되는 그래프의 루트에 있는 인터페이스입니다. 이 방식으로 만든 RPC를 deserialize 하는 데는 <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TopObject%2A> 지 원하는 다른 개체에 속성을 설정 해야 합니다 <xref:System.Runtime.Serialization.Formatters.ISoapMessage> 인터페이스 및 관련 원격 호출 정보를 포함 합니다.  
  
## <a name="timespan-serialization"></a>TimeSpan Serialization  
 TimeSpan 개체는 ISO 8601: 1998 5.5.3.2.1 섹션 "대체" 표준에 따라 직렬화 됩니다.  
  
## <a name="version-information"></a>버전 정보  
 <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter> .NET Framework의 버전 간에 직렬화 호환성을 지원 하지 않습니다. 종종 Framework의 버전 1.1 및 2.0 형식 간에 serialization에 실패합니다. 이 문제를 해결 하려면 다음 작업을 수행할 수 있습니다:  
  
-   사용 하도록 변환 된 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>, 1.1 및 2.0 간의 호환성을 제공 하는 합니다.  
  
-   새 형식으로 보관 된 기존 데이터를 변환 합니다.  
  
-   모든 생산자와 소비자가 직렬화 된 데이터의 2.0 버전으로 변환 합니다.  
  
-   1.1에서 2.0으로 변경 하는 사용 하지 마십시오.  
  
   
  
## Examples  
 [!code-cpp[SoapFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapFormatter Example/CPP/soapformatter.cpp#1)]
 [!code-csharp[SoapFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapFormatter Example/CS/soapformatter.cs#1)]
 [!code-vb[SoapFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapFormatter Example/VB/soapformatter.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>기본 속성 값으로 <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 표에서는 <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter> 인스턴스의 초기 속성 값을 보여 줍니다.  
  
|속성|값|  
|--------------|-----------|  
|<xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.SurrogateSelector%2A>|`null`|  
|<xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Context%2A>|새 <xref:System.Runtime.Serialization.StreamingContext> serialize 된 데이터를 전송 하거나 다른 컨텍스트에서 수신 될 수를 지정 하려면 초기화|  
  
   
  
## Examples  
 [!code-cpp[SoapFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapFormatter Example/CPP/soapformatter.cpp#1)]
 [!code-csharp[SoapFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapFormatter Example/CS/soapformatter.cs#1)]
 [!code-vb[SoapFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapFormatter Example/VB/soapformatter.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapFormatter (System.Runtime.Serialization.ISurrogateSelector selector, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.ISurrogateSelector selector, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selector As ISurrogateSelector, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapFormatter(System::Runtime::Serialization::ISurrogateSelector ^ selector, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.Formatters.Soap.SoapFormatter : System.Runtime.Serialization.ISurrogateSelector * System.Runtime.Serialization.StreamingContext -&gt; System.Runtime.Serialization.Formatters.Soap.SoapFormatter" Usage="new System.Runtime.Serialization.Formatters.Soap.SoapFormatter (selector, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selector" Type="System.Runtime.Serialization.ISurrogateSelector" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="selector"><see cref="T:System.Runtime.Serialization.ISurrogateSelector" />의 새 인스턴스와 함께 사용할 <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />입니다. <see langword="null" />일 수 있습니다.</param>
        <param name="context">serialization의 소스와 대상이 들어 있는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다. <paramref name="context" /> 매개 변수가 <see langword="null" />이면 <see cref="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Context" />는 <see cref="F:System.Runtime.Serialization.StreamingContextStates.CrossMachine" />을 기본값으로 사용합니다.</param>
        <summary>지정된 <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" /> 및 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />를 사용하여 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 개체가, 직렬화 또는 역직렬화 된에서 <xref:System.IO.Stream>합니다.  
  
 Serialization 또는 deserialization 프로세스를 사용 하 여 지정 된 <xref:System.Runtime.Serialization.ISurrogateSelector> 을 개체 형식에 대 한 등록 된 서로게이트를 deserialize 하려면 검색 합니다. 서로게이트는 특정 클래스의 개체 serialize 및 deserialize 하는 도우미입니다. 기본값 <xref:System.Runtime.Serialization.ISurrogateSelector> 에서 파생 된 개체의 serialization을 처리할 수 없습니다는 <xref:System.MarshalByRefObject> 원격 작업을 위해. 지정 된 원격 상황에서 <xref:System.Runtime.Serialization.ISurrogateSelector> 에서 파생 된 개체를 대체 <xref:System.MarshalByRefObject> 사용 하 여는 <xref:System.Runtime.Remoting.ObjRef> 지정 된 서로게이트 선택기에서 serialize 되는 개체입니다. 따라서 원격 개체를 사용 하려는 경우 설정 합니다 `selector` 인스턴스에 대 한 매개 변수 <xref:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector>합니다. 서로게이트를 필요 하지 않은 경우 설정 합니다 `selector` 매개 변수 수를 `null`입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="AssemblyFormat">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.FormatterAssemblyStyle AssemblyFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle AssemblyFormat" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.AssemblyFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property AssemblyFormat As FormatterAssemblyStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::FormatterAssemblyStyle AssemblyFormat { System::Runtime::Serialization::Formatters::FormatterAssemblyStyle get(); void set(System::Runtime::Serialization::Formatters::FormatterAssemblyStyle value); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyFormat : System.Runtime.Serialization.Formatters.FormatterAssemblyStyle with get, set" Usage="System.Runtime.Serialization.Formatters.Soap.SoapFormatter.AssemblyFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterAssemblyStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>어셈블리를 찾고 로드하는 작업과 관련된 deserializer 동작을 가져오거나 설정합니다.</summary>
        <value>deserializer 동작을 지정하는 <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 값 중 하나입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
      </Docs>
    </Member>
    <Member MemberName="Binder">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.SerializationBinder Binder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.SerializationBinder Binder" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Binder" />
      <MemberSignature Language="VB.NET" Value="Public Property Binder As SerializationBinder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::SerializationBinder ^ Binder { System::Runtime::Serialization::SerializationBinder ^ get(); void set(System::Runtime::Serialization::SerializationBinder ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Binder : System.Runtime.Serialization.SerializationBinder with get, set" Usage="System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Binder" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Serialization.IFormatter.Binder</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.SerializationBinder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>특정 형식으로 serialize된 개체의 바인딩을 제어하는 <see cref="T:System.Runtime.Serialization.SerializationBinder" />를 가져오거나 설정합니다.</summary>
        <value>이 <see cref="T:System.Runtime.Serialization.SerializationBinder" />와 함께 사용되는 <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Serialization.SerializationBinder" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.StreamingContext Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.StreamingContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As StreamingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::StreamingContext Context { System::Runtime::Serialization::StreamingContext get(); void set(System::Runtime::Serialization::StreamingContext value); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Runtime.Serialization.StreamingContext with get, set" Usage="System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Context" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Serialization.IFormatter.Context</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.StreamingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Runtime.Serialization.StreamingContext" />와 함께 사용되는 <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />를 가져오거나 설정합니다.</summary>
        <value>이 <see cref="T:System.Runtime.Serialization.StreamingContext" />와 함께 사용되는 <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Serialization.StreamingContext> 원본 및 대상 지정 된 serialize 된 스트림의 serialization 컨텍스트 및 추가 호출자 정의 컨텍스트를 유지 하는 방법을 설명 하는 열거형을 제공 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Deserialize">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>스트림을 개체 그래프로 deserialize합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.Stream serializationStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.IO.Stream serializationStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Deserialize(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (serializationStream As Stream) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Deserialize(System::IO::Stream ^ serializationStream);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.IO.Stream -&gt; obj&#xA;override this.Deserialize : System.IO.Stream -&gt; obj" Usage="soapFormatter.Deserialize serializationStream" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IFormatter.Deserialize(System.IO.Stream)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="serializationStream">deserialize할 데이터를 포함하는 스트림입니다.</param>
        <summary>제공된 스트림의 데이터를 deserialize하고 개체의 그래프를 다시 구성합니다.</summary>
        <returns>deserialize된 그래프(루트)의 최상위 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 성공적으로 역직렬화 스트림 내의 현재 위치 개체 그래프의 시작 부분에 있어야 합니다.  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
## Examples  
 [!code-cpp[SoapFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapFormatter Example/CPP/soapformatter.cpp#1)]
 [!code-csharp[SoapFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapFormatter Example/CS/soapformatter.cs#1)]
 [!code-vb[SoapFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapFormatter Example/VB/soapformatter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serializationStream" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.Stream serializationStream, System.Runtime.Remoting.Messaging.HeaderHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.IO.Stream serializationStream, class System.Runtime.Remoting.Messaging.HeaderHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Deserialize(System.IO.Stream,System.Runtime.Remoting.Messaging.HeaderHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (serializationStream As Stream, handler As HeaderHandler) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Deserialize(System::IO::Stream ^ serializationStream, System::Runtime::Remoting::Messaging::HeaderHandler ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.IO.Stream * System.Runtime.Remoting.Messaging.HeaderHandler -&gt; obj&#xA;override this.Deserialize : System.IO.Stream * System.Runtime.Remoting.Messaging.HeaderHandler -&gt; obj" Usage="soapFormatter.Deserialize (serializationStream, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Messaging.IRemotingFormatter.Deserialize(System.IO.Stream,System.Runtime.Remoting.Messaging.HeaderHandler)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
        <Parameter Name="handler" Type="System.Runtime.Remoting.Messaging.HeaderHandler" />
      </Parameters>
      <Docs>
        <param name="serializationStream">deserialize할 데이터를 포함하는 스트림입니다.</param>
        <param name="handler">해당 스트림에 있는 모든 헤더를 처리할 대리자입니다. <see langword="null" />일 수 있습니다.</param>
        <summary>지정된 <see cref="T:System.Runtime.Remoting.Messaging.HeaderHandler" />에서 처리하는 스트림의 모든 헤더와 함께 해당 스트림을 개체 그래프로 deserialize합니다.</summary>
        <returns>deserialize된 그래프(루트)의 최상위 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 헤더는 특정 원격 애플리케이션에만 사용 됩니다. <xref:System.Runtime.Remoting.Messaging.HeaderHandler> 매개 변수는 SOAP 원격 프로시저 호출 (RPC) 형식으로 스트림에서 헤더를 반환 하는 두 가지 방법 중 하나입니다. 다른 방법으로 사용 하는 것은 <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TopObject%2A> 속성입니다.  
  
 성공적으로 역직렬화 스트림 내의 현재 위치 개체 그래프의 시작 부분에 있어야 합니다.  
  
## <a name="timespan-serialization"></a>TimeSpan Serialization  
 TimeSpan 개체는 ISO 8601: 1998 5.5.3.2.1 섹션 "대체" 표준에 따라 직렬화 됩니다.  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serializationStream" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><paramref name="serializationStream" />에서는 검색을 지원하지만 길이가 0입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="FilterLevel">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.TypeFilterLevel FilterLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.TypeFilterLevel FilterLevel" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.FilterLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterLevel As TypeFilterLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::TypeFilterLevel FilterLevel { System::Runtime::Serialization::Formatters::TypeFilterLevel get(); void set(System::Runtime::Serialization::Formatters::TypeFilterLevel value); };" />
      <MemberSignature Language="F#" Value="member this.FilterLevel : System.Runtime.Serialization.Formatters.TypeFilterLevel with get, set" Usage="System.Runtime.Serialization.Formatters.Soap.SoapFormatter.FilterLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.TypeFilterLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>.NET Framework Remoting에 대한 자동 serialization의 <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" />을 가져오거나 설정합니다.</summary>
        <value>현재 자동 deserialization 수준을 나타내는 <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지원 되는 값은 <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low> 고 <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full> (기본값). Deserialization 수준에 대 한 자세한 내용은 참조 하세요 [.NET Remoting에서의 자동 Deserialization](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/5dxse167(v=vs.100))합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>개체나 연결된 개체의 그래프를 serialize합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream serializationStream, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Serialize(class System.IO.Stream serializationStream, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Serialize(System.IO.Stream,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (serializationStream As Stream, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Serialize(System::IO::Stream ^ serializationStream, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.IO.Stream * obj -&gt; unit&#xA;override this.Serialize : System.IO.Stream * obj -&gt; unit" Usage="soapFormatter.Serialize (serializationStream, graph)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IFormatter.Serialize(System.IO.Stream,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationStream">포맷터가 데이터를 serialize하도록 배치할 스트림입니다.</param>
        <param name="graph">serialize할 개체 그래프의 루트 또는 개체입니다. 이 루트 개체의 모든 자식 개체는 자동으로 serialize됩니다.</param>
        <summary>지정된 루트를 갖는 개체 그래프 또는 개체를 지정된 <see cref="T:System.IO.Stream" />으로 serialize합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 TimeSpan 개체는 ISO 8601: 1998 5.5.3.2.1 섹션 "대체" 표준에 따라 직렬화 됩니다.  
  
   
  
## Examples  
 [!code-cpp[SoapFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapFormatter Example/CPP/soapformatter.cpp#1)]
 [!code-csharp[SoapFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapFormatter Example/CS/soapformatter.cs#1)]
 [!code-vb[SoapFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapFormatter Example/VB/soapformatter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serializationStream" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream serializationStream, object graph, System.Runtime.Remoting.Messaging.Header[] headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Serialize(class System.IO.Stream serializationStream, object graph, class System.Runtime.Remoting.Messaging.Header[] headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Serialize(System.IO.Stream,System.Object,System.Runtime.Remoting.Messaging.Header[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (serializationStream As Stream, graph As Object, headers As Header())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Serialize(System::IO::Stream ^ serializationStream, System::Object ^ graph, cli::array &lt;System::Runtime::Remoting::Messaging::Header ^&gt; ^ headers);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.IO.Stream * obj * System.Runtime.Remoting.Messaging.Header[] -&gt; unit&#xA;override this.Serialize : System.IO.Stream * obj * System.Runtime.Remoting.Messaging.Header[] -&gt; unit" Usage="soapFormatter.Serialize (serializationStream, graph, headers)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Messaging.IRemotingFormatter.Serialize(System.IO.Stream,System.Object,System.Runtime.Remoting.Messaging.Header[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
        <Parameter Name="graph" Type="System.Object" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Messaging.Header[]" />
      </Parameters>
      <Docs>
        <param name="serializationStream">포맷터가 데이터를 serialize하도록 배치할 스트림입니다.</param>
        <param name="graph">serialize할 개체 그래프의 루트 또는 개체입니다. 이 루트 개체의 모든 자식 개체는 자동으로 serialize됩니다.</param>
        <param name="headers">serialization에 포함할 원격 헤더입니다. <see langword="null" />일 수 있습니다.</param>
        <summary>지정된 루트를 갖는 개체 그래프 또는 개체를 SOAP RPC(원격 프로시저 호출) 형식의 지정된 <see cref="T:System.IO.Stream" />으로 serialize합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 헤더는 특정 원격 애플리케이션에만 사용 됩니다.  
  
 TimeSpan 개체는 ISO 8601: 1998 5.5.3.2.1 섹션 "대체" 표준에 따라 직렬화 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serializationStream" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SurrogateSelector">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.ISurrogateSelector SurrogateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.ISurrogateSelector SurrogateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.SurrogateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property SurrogateSelector As ISurrogateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::ISurrogateSelector ^ SurrogateSelector { System::Runtime::Serialization::ISurrogateSelector ^ get(); void set(System::Runtime::Serialization::ISurrogateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SurrogateSelector : System.Runtime.Serialization.ISurrogateSelector with get, set" Usage="System.Runtime.Serialization.Formatters.Soap.SoapFormatter.SurrogateSelector" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Serialization.IFormatter.SurrogateSelector</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ISurrogateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>serialization 및 deserialization을 수행하는 동안 형식 대체를 제어하는 <see cref="T:System.Runtime.Serialization.SurrogateSelector" />를 가져오거나 설정합니다.</summary>
        <value>이 <see cref="T:System.Runtime.Serialization.SurrogateSelector" />와 함께 사용되는 <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용한 <xref:System.Runtime.Remoting> 생성할 <xref:System.Runtime.Remoting.ObjRef> 에 대 한 인스턴스 <xref:System.MarshalByRefObject> 개체입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopObject">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.ISoapMessage TopObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.Formatters.ISoapMessage TopObject" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TopObject" />
      <MemberSignature Language="VB.NET" Value="Public Property TopObject As ISoapMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::ISoapMessage ^ TopObject { System::Runtime::Serialization::Formatters::ISoapMessage ^ get(); void set(System::Runtime::Serialization::Formatters::ISoapMessage ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TopObject : System.Runtime.Serialization.Formatters.ISoapMessage with get, set" Usage="System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TopObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.ISoapMessage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SOAP 최상위 개체가 deserialize되는 <see cref="T:System.Runtime.Serialization.Formatters.ISoapMessage" />를 가져오거나 설정합니다.</summary>
        <value>SOAP 최상위 개체가 deserialize되는 <see cref="T:System.Runtime.Serialization.Formatters.ISoapMessage" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 SOAP 원격 프로시저 호출 (RPC) 형식에 대 한 사용 되며 SOAP 상위 레코드 라는 원격으로 공용 언어 런타임 개체 형식이 아니라 메서드 임을 지정 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeFormat">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TypeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeFormat As FormatterTypeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::FormatterTypeStyle TypeFormat { System::Runtime::Serialization::Formatters::FormatterTypeStyle get(); void set(System::Runtime::Serialization::Formatters::FormatterTypeStyle value); };" />
      <MemberSignature Language="F#" Value="member this.TypeFormat : System.Runtime.Serialization.Formatters.FormatterTypeStyle with get, set" Usage="System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TypeFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterTypeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>serialize된 스트림에서 형식 설명을 레이아웃하는 형식을 가져오거나 설정합니다.</summary>
        <value>형식 설명을 serialize된 스트림에 레이아웃하는 형식입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle" />
      </Docs>
    </Member>
  </Members>
</Type>