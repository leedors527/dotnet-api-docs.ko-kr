<Type Name="JsonReaderWriterFactory" FullName="System.Runtime.Serialization.Json.JsonReaderWriterFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a2db1b03cbf3918598a58fa9a3c845a83389857f" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58680186" /></Metadata><TypeSignature Language="C#" Value="public static class JsonReaderWriterFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit JsonReaderWriterFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.Json.JsonReaderWriterFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonReaderWriterFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonReaderWriterFactory abstract sealed" />
  <TypeSignature Language="F#" Value="type JsonReaderWriterFactory = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>스트림 또는 버퍼에서 JSON(JavaScript Object Notation) 인코딩 데이터를 읽고 XML Infoset에 매핑할 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />의 인스턴스와, XML Infoset을 JSON에 매핑하고 JSON으로 인코딩된 데이터를 스트림에 쓸 수 있는 <see cref="T:System.Xml.XmlDictionaryWriter" />의 인스턴스를 생성합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 JSON 데이터와 XML Infoset 간의 매핑을 사용 하 여 JSON 메시지를 처리 하는 Windows Communication Foundation (WCF). 일반적으로 이 매핑은 보기에서 숨겨집니다. 하지만 일부 고급 시나리오에서는 JSON과 XML 간에 수동으로 변환해야 할 수 있습니다. 이 경우 <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory> 클래스를 사용하여 필요한 XML 판독기와 작성기를 만들 수 있습니다. 모든 XML Infoset 요소를 JSON에 매핑할 수 있는 것은 아닙니다. 매핑에 대 한 자세한 내용은 참조 [하는 방법: 직렬화 및 역직렬화 JSON 데이터](~/docs/framework/wcf/feature-details/how-to-serialize-and-deserialize-json-data.md)합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateJsonReader">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>JSON(JavaScript Object Notation) 인코딩 스트림 또는 버퍼를 XML Infoset에 매핑할 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 각 오버로드는 신뢰할 수 없는 데이터를 읽을 때 <xref:System.Xml.XmlDictionaryReaderQuotas>를 사용하여 DOS(서비스 거부) 공격으로부터 보호합니다. 사용에 대 한 자세한 내용은 <xref:System.Xml.XmlDictionaryReaderQuotas> 신뢰할 수 없는 데이터를 읽을 때 서비스 거부 공격을 방지 하려면 참조 [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonReader (buffer As Byte(), quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : byte[] * System.Xml.XmlDictionaryReaderQuotas -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (buffer, quotas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="buffer">읽어올 입력 <see cref="T:System.Byte" /> 버퍼 배열입니다.</param>
        <param name="quotas">신뢰할 수 없는 데이터를 읽을 때 서비스 거부 공격을 방지하는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />입니다.</param>
        <summary>JSON(JavaScript Object Notation) 인코딩 버퍼를 XML Infoset에 매핑할 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />를 만듭니다.</summary>
        <returns>JSON 데이터를 처리할 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 오버로드에는 <xref:System.Text.Encoding> 매개 변수를 사용할 수 없습니다. 문자 인코딩(UTF-8, Unicode , Big-Endian Unicode )은 데이터를 읽을 때 자동으로 감지됩니다.  
  
 사용에 대 한 자세한 내용은 <xref:System.Xml.XmlDictionaryReaderQuotas> 신뢰할 수 없는 데이터를 읽을 때 서비스 거부 공격을 방지 하려면 참조 [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (System.IO.Stream stream, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(class System.IO.Stream stream, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(System::IO::Stream ^ stream, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : System.IO.Stream * System.Xml.XmlDictionaryReaderQuotas -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (stream, quotas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="stream">읽어올 입력 <see cref="T:System.IO.Stream" />입니다.</param>
        <param name="quotas">신뢰할 수 없는 데이터를 읽을 때 서비스 거부 공격을 방지하는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />입니다.</param>
        <summary>JSON(JavaScript Object Notation) 인코딩 스트림을 XML Infoset에 매핑할 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />를 만듭니다.</summary>
        <returns>JSON(JavaScript Object Notation)을 읽을 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 오버로드에는 <xref:System.Text.Encoding> 매개 변수를 사용할 수 없습니다. 문자 인코딩(UTF-8, Unicode , Big-Endian Unicode )은 데이터를 읽을 때 자동으로 감지됩니다.  
  
 사용에 대 한 자세한 내용은 <xref:System.Xml.XmlDictionaryReaderQuotas> 신뢰할 수 없는 데이터를 읽을 때 서비스 거부 공격을 방지 하려면 참조 [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, int offset, int count, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonReader (buffer As Byte(), offset As Integer, count As Integer, quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : byte[] * int * int * System.Xml.XmlDictionaryReaderQuotas -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (buffer, offset, count, quotas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="buffer">읽어올 입력 <see cref="T:System.Byte" /> 버퍼 배열입니다.</param>
        <param name="offset"><paramref name="buffer" />에서 읽어올 시작 위치입니다.</param>
        <param name="count"><paramref name="buffer" />에서 읽을 수 있는 바이트 수입니다.</param>
        <param name="quotas">신뢰할 수 없는 데이터를 읽을 때 서비스 거부 공격을 방지하는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />입니다.</param>
        <summary>지정된 크기와 오프셋을 사용하여 JSON(JavaScript Object Notation) 인코딩 버퍼를 XML Infoset에 매핑할 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />를 만듭니다.</summary>
        <returns>JSON(JavaScript Object Notation)을 읽을 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 오버로드에는 <xref:System.Text.Encoding> 매개 변수를 사용할 수 없습니다. 문자 인코딩(UTF-8, Unicode , Big-Endian Unicode )은 데이터를 읽을 때 자동으로 감지됩니다.  
  
 사용에 대 한 자세한 내용은 <xref:System.Xml.XmlDictionaryReaderQuotas> 신뢰할 수 없는 데이터를 읽을 때 서비스 거부 공격을 방지 하려면 참조 [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (System.IO.Stream stream, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(class System.IO.Stream stream, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : System.IO.Stream * System.Text.Encoding * System.Xml.XmlDictionaryReaderQuotas * System.Xml.OnXmlDictionaryReaderClose -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (stream, encoding, quotas, onClose)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="stream">읽어올 입력 <see cref="T:System.IO.Stream" />입니다.</param>
        <param name="encoding">판독기에서 사용하는 문자 인코딩을 지정하는 <see cref="T:System.Text.Encoding" />입니다. 이 값이 <see langword="null" />로 지정되면 판독기는 인코딩을 자동으로 감지하려고 시도합니다.</param>
        <param name="quotas">신뢰할 수 없는 데이터를 읽을 때 서비스 거부 공격을 방지하는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />입니다.</param>
        <param name="onClose">판독기가 닫힐 때 호출되는 <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> 대리자입니다.</param>
        <summary>지정된 크기와 오프셋을 사용하여 JSON(JavaScript Object Notation) 인코딩 스트림을 XML Infoset에 매핑할 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />를 만듭니다.</summary>
        <returns>JSON(JavaScript Object Notation)을 읽을 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용에 대 한 자세한 내용은 <xref:System.Xml.XmlDictionaryReaderQuotas> 신뢰할 수 없는 데이터를 읽을 때 서비스 거부 공격을 방지 하려면 참조 [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, int offset, int count, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : byte[] * int * int * System.Text.Encoding * System.Xml.XmlDictionaryReaderQuotas * System.Xml.OnXmlDictionaryReaderClose -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (buffer, offset, count, encoding, quotas, onClose)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="buffer">읽어올 입력 <see cref="T:System.Byte" /> 버퍼 배열입니다.</param>
        <param name="offset"><paramref name="buffer" />에서 읽어올 시작 위치입니다.</param>
        <param name="count"><paramref name="buffer" />에서 읽을 수 있는 바이트 수입니다.</param>
        <param name="encoding">판독기에서 사용하는 문자 인코딩을 지정하는 <see cref="T:System.Text.Encoding" />입니다. 이 값이 <see langword="null" />로 지정되면 판독기는 인코딩을 자동으로 감지하려고 시도합니다.</param>
        <param name="quotas">신뢰할 수 없는 데이터를 읽을 때 서비스 거부 공격을 방지하는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />입니다.</param>
        <param name="onClose">판독기가 닫힐 때 호출되는 <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> 대리자입니다. 기본값은 <see langword="null" />입니다.</param>
        <summary>지정된 크기와 오프셋 및 문자 인코딩을 사용하여 JSON(JavaScript Object Notation) 인코딩 버퍼를 XML Infoset에 매핑할 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />를 만듭니다.</summary>
        <returns>JSON(JavaScript Object Notation)을 읽을 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용에 대 한 자세한 내용은 <xref:System.Xml.XmlDictionaryReaderQuotas> 신뢰할 수 없는 데이터를 읽을 때 서비스 거부 공격을 방지 하려면 참조 [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateJsonWriter">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>JSON으로 인코딩된 데이터를 스트림에 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A> 정적 메서드는 XML Infoset을 JSON 스트림에 매핑할 수 있는 <xref:System.Xml.XmlDictionaryWriter>의 인스턴스를 반환합니다. <xref:System.Xml.XmlDictionaryWriter>는 생성한 JSON의 유효성을 보장하지 않습니다. JSON-XML 매핑에서 지원하지 않는 방법으로 작성기를 사용하면 예외가 throw되거나 작성된 JSON 문서가 유효하지 않을 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">JSON 작성기용 출력 <see cref="T:System.IO.Stream" />입니다.</param>
        <summary>JSON으로 인코딩된 데이터를 스트림에 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />를 만듭니다.</summary>
        <returns>JSON으로 인코딩된 데이터를 XML Infoset을 기반으로 하는 스트림에 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 문자 인코딩은 UTF-8입니다. 작성기가 닫히면 스트림도 닫힙니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream * System.Text.Encoding -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter (stream, encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream">JSON 작성기용 출력 <see cref="T:System.IO.Stream" />입니다.</param>
        <param name="encoding">작성기에서 사용하는 문자 인코딩을 지정하는 <see cref="T:System.Text.Encoding" />입니다. 기본 인코딩은 UTF-8입니다.</param>
        <summary>지정된 문자 인코딩을 사용하여 JSON 인코딩 데이터를 스트림에 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />를 만듭니다.</summary>
        <returns>JSON으로 인코딩된 데이터를 XML Infoset을 기반으로 하는 스트림에 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 작성기가 닫히면 스트림도 닫힙니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream * System.Text.Encoding * bool -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter (stream, encoding, ownsStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">JSON 작성기용 출력 <see cref="T:System.IO.Stream" />입니다.</param>
        <param name="encoding">작성기에서 사용하는 문자 인코딩을 지정하는 <see cref="T:System.Text.Encoding" />입니다. 기본 인코딩은 UTF-8입니다.</param>
        <param name="ownsStream"><see langword="true" />이면 완료될 때 작성기에서 출력 스트림이 닫히고, <see langword="false" />이면 닫히지 않습니다. 기본값은 <see langword="true" />입니다.</param>
        <summary>지정된 문자 인코딩을 사용하여 JSON 인코딩 데이터를 스트림에 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />를 만듭니다.</summary>
        <returns>JSON으로 인코딩된 데이터를 XML Infoset을 기반으로 하는 스트림에 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream, bool indent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream, bool indent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream, bool indent);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream * System.Text.Encoding * bool * bool -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter (stream, encoding, ownsStream, indent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="encoding" Type="System.Text.Encoding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ownsStream" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="indent" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream">JSON 작성기용 출력 <see cref="T:System.IO.Stream" />입니다.</param>
        <param name="encoding">작성기에서 사용하는 문자 인코딩을 지정하는 <see cref="T:System.Text.Encoding" />입니다. 기본 인코딩은 UTF-8입니다.</param>
        <param name="ownsStream"><see langword="true" />이면 완료될 때 작성기에서 출력 스트림이 닫히고, <see langword="false" />이면 닫히지 않습니다. 기본값은 <see langword="true" />입니다.</param>
        <param name="indent"><see langword="true" />인 경우 출력은 여러 줄 형식을 사용하며 각 수준에서 적절히 들여 씁니다. 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>지정된 문자를 사용하여 JSON 인코딩 데이터를 스트림에 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />를 만듭니다.</summary>
        <returns>JSON으로 인코딩된 데이터를 XML Infoset을 기반으로 하는 스트림에 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream, bool indent, string indentChars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream, bool indent, string indentChars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream, bool indent, System::String ^ indentChars);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream * System.Text.Encoding * bool * bool * string -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter (stream, encoding, ownsStream, indent, indentChars)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="encoding" Type="System.Text.Encoding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ownsStream" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="indent" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="indentChars" Type="System.String" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream">JSON 작성기용 출력 <see cref="T:System.IO.Stream" />입니다.</param>
        <param name="encoding">작성기에서 사용하는 문자 인코딩을 지정하는 <see cref="T:System.Text.Encoding" />입니다. 기본 인코딩은 UTF-8입니다.</param>
        <param name="ownsStream"><see langword="true" />이면 완료될 때 작성기에서 출력 스트림이 닫히고, <see langword="false" />이면 닫히지 않습니다. 기본값은 <see langword="true" />입니다.</param>
        <param name="indent"><see langword="true" />인 경우 출력은 여러 줄 형식을 사용하며 각 수준에서 적절히 들여 씁니다. 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="indentChars">각 수준을 들여쓰는 데 사용되는 문자열입니다.</param>
        <summary>지정된 문자를 사용하여 JSON 인코딩 데이터를 스트림에 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />를 만듭니다.</summary>
        <returns>JSON으로 인코딩된 데이터를 XML Infoset을 기반으로 하는 스트림에 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>