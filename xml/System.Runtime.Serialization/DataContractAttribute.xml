<Type Name="DataContractAttribute" FullName="System.Runtime.Serialization.DataContractAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cbe679b654d6fba89419ee144d5ce44764367008" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58714722" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataContractAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataContractAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.DataContractAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataContractAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataContractAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type DataContractAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>형식이 데이터 계약을 정의하거나 구현하며, <see cref="T:System.Runtime.Serialization.DataContractSerializer" />와 같은 serializer를 통해 serialize할 수 있도록 지정합니다. 형식을 serialize할 수 있게 만들려면 형식 작성자가 형식에 대해 데이터 계약을 정의해야 합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Serialization.DataContractAttribute>을 통한 serialization 및 deserialization 작업에 사용되는 형식(클래스, 구조체, 열거형)에 <xref:System.Runtime.Serialization.DataContractSerializer> 특성을 적용합니다. 또한 적용할 보내거나 Windows Communication Foundation (WCF) 인프라를 사용 하 여 메시지를 수신 하는 경우는 <xref:System.Runtime.Serialization.DataContractAttribute> 보유 하 고 메시지에 전송 된 데이터를 조작 하는 모든 클래스에 있습니다. 데이터 계약에 대 한 자세한 내용은 참조 하세요. [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md)합니다.  
  
 또한 serialize하려는 값을 보유하는 필드, 속성, 이벤트에도 <xref:System.Runtime.Serialization.DataMemberAttribute>를 적용해야 합니다. <xref:System.Runtime.Serialization.DataContractAttribute>를 적용하면 명시적으로 <xref:System.Runtime.Serialization.DataContractSerializer>를 사용하여 데이터를 serialize 및 deserialize할 수 있습니다.  
  
> [!CAUTION]
>  <xref:System.Runtime.Serialization.DataMemberAttribute>는 private 필드에 적용할 수 있습니다. private 필드인 경우에도 필드에서 반환한 데이터는 serialize 및 deserialize되므로 악의적인 사용자나 프로세스가 보거나 가로챌 수 있습니다.  
  
 데이터 계약에 대 한 자세한 내용은에 나열 된 항목을 참조 하세요 [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md)합니다.  
  
## <a name="data-contracts"></a>데이터 계약  
 A *데이터 계약* 각 필드에 대 한 이름 및 데이터 형식과 필드 집합의 추상 설명입니다. 데이터 계약은 여러 플랫폼의 서비스가 상호 운용할 수 있도록 하기 위해 단일 구현의 외부에 있습니다. 서비스 간에 전달되는 데이터가 동일한 계약을 따르기만 하면 모든 서비스에서 데이터를 처리할 수 있습니다. 이 처리는 라고도 *느슨하게 결합 된 시스템*입니다. 또한 데이터 계약은 응용 프로그램에서 데이터를 처리할 수 있도록 데이터를 전달해야 하는 방법을 지정한다는 점에서 인터페이스와도 비슷합니다. 예를 들어, 데이터 계약은 "FirstName" 및 "LastName"이라는 두 개의 텍스트 필드를 포함하는 "Person"이라는 데이터 형식을 호출할 수 있습니다. 데이터 계약을 만들려면 클래스에 <xref:System.Runtime.Serialization.DataContractAttribute>를 적용하고, serialize해야 할 필드나 속성에 <xref:System.Runtime.Serialization.DataMemberAttribute>를 적용합니다. serialize할 때 데이터는 해당 형식에 암시적으로 작성된 데이터 계약을 따릅니다.  
  
> [!NOTE]
>  데이터 계약은 상속 동작에 있어 실제 인터페이스와 상당히 다릅니다. 인터페이스는 파생 형식에서 상속됩니다. <xref:System.Runtime.Serialization.DataContractAttribute>를 기본 클래스에 적용하면 파생 형식이 특성이나 동작을 상속하지 않습니다. 하지만 파생 형식에 데이터 계약이 있는 경우 기본 클래스의 데이터 멤버가 serialize됩니다. 단, <xref:System.Runtime.Serialization.DataMemberAttribute>를 파생 클래스의 새 멤버에 적용하여 이 멤버를 serialize할 수 있게 만들어야 합니다.  
  
## <a name="xml-schema-documents-and-the-svcutil-tool"></a>XML 스키마 문서 및 SvcUtil 도구  
 다른 서비스와 데이터를 교환할 경우 데이터 계약을 설명해야 합니다. 현재 버전의 <xref:System.Runtime.Serialization.DataContractSerializer>는 XML 스키마를 사용하여 데이터 계약을 정의할 수 있으며, 다른 메타데이터/설명 형식을 사용할 수도 있습니다. 응용 프로그램에서 XML 스키마를 만들려면 사용 합니다 [ServiceModel Metadata 유틸리티 도구 (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) 사용 하 여 합니다 **/dconly** 명령줄 옵션입니다. 도구에 대한 입력이 어셈블리일 경우 기본적으로 이 도구는 해당 어셈블리에서 발견된 모든 데이터 계약 형식을 정의하는 XML 스키마 집합을 생성합니다. 반대로 데이터 계약으로 표현할 수 있는 구문을 사용하는 XML 스키마의 요구 사항을 따르는 Visual Basic 또는 C# 클래스 정의를 Svcutil.exe 도구를 사용하여 만들 수도 있습니다. 이 경우에 **/dconly** 명령줄 옵션이 필요 하지 않습니다.  
  
 Svcutil.exe 도구에 입력하는 내용이 XML 스키마인 경우에는 기본적으로 클래스 집합이 생성됩니다. 그러한 클래스를 검사하면 <xref:System.Runtime.Serialization.DataContractAttribute>가 적용되었음을 알 수 있으며, 그러한 클래스를 사용하여 다른 서비스와 교환해야 할 데이터를 처리하는 새로운 응용 프로그램을 작성할 수 있습니다.  
  
 또한 Windows Communication Foundation (WCF) 클라이언트를 만드는 구성과 코드를 자동으로 생성 하는 WSDL 웹 서비스 설명 언어 () 문서를 반환 하는 끝점에 대 한 도구를 실행할 수 있습니다. 생성된 코드에는 <xref:System.Runtime.Serialization.DataContractAttribute>로 표시된 형식이 포함됩니다.  
  
## <a name="reusing-existing-types"></a>기존 형식 다시 사용  
 데이터 계약의 두 가지 기본 요구 사항은 안정적인 이름과 멤버 목록입니다. 안정적인 이름은 네임스페이스 URI(Uniform Resource Identifier)와 계약의 로컬 이름으로 구성됩니다. 기본적으로 적용 하는 경우는 <xref:System.Runtime.Serialization.DataContractAttribute> 클래스는 클래스의 네임 스페이스 및 로컬 이름으로 클래스 이름을 사용 (접두사로 "http://schemas.datacontract.org/2004/07/") 네임 스페이스 URI로 합니다. <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> 및 <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> 속성을 설정하여 기본값을 재정의할 수 있습니다. 또한 <xref:System.Runtime.Serialization.ContractNamespaceAttribute>를 네임스페이스에 적용하여 네임스페이스를 변경할 수도 있습니다. 필요에 따라 정확히 데이터를 처리하지만 네임스페이스 및 클래스 이름이 데이터 계약과 다른 기존 형식이 있을 때 이 기능을 사용합니다. 기본값을 재정의하면 기존 형식을 다시 사용할 수 있으며 serialize된 데이터가 데이터 계약을 따르도록 할 수 있습니다.  
  
> [!NOTE]
>  어떤 코드에서든 `DataContract` 대신에 간결하게 <xref:System.Runtime.Serialization.DataContractAttribute>를 사용할 수 있습니다.  
  
## <a name="versioning"></a>버전 관리  
 데이터 계약은 해당 데이터 계약의 후속 버전도 수용할 수 있습니다. 즉, 계약의 후속 버전에 추가 데이터가 포함되면 이 데이터가 저장되고 전송자에게 그대로 반환됩니다. 이렇게 하려면 <xref:System.Runtime.Serialization.IExtensibleDataObject> 인터페이스를 구현합니다.  
  
 버전 관리에 대 한 자세한 내용은 참조 하세요. [데이터 계약 버전 관리](~/docs/framework/wcf/feature-details/data-contract-versioning.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 `Person`가 적용된 <xref:System.Runtime.Serialization.DataContractAttribute>이라는 클래스를 serialize 및 deserialize합니다. <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> 및 <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> 속성은 기본 설정을 재정의하는 값으로 설정되었습니다.  
  
 [!code-csharp[DataContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractattribute/cs/overview.cs#1)]
 [!code-vb[DataContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractattribute/vb/overview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
    <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.DataMemberAttribute" />
    <altmember cref="T:System.Runtime.Serialization.ISerializable" />
    <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
    <related type="Article" href="~/docs/framework/wcf/feature-details/using-data-contracts.md">데이터 계약 사용</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsNameSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Runtime.Serialization.DataContractAttribute.Name" />이 명시적으로 설정되었는지를 나타내는 값을 가져옵니다.</summary>
        <value><see langword="true" /> 이름을은 명시적으로 설정 된; 그렇지 않으면 <see langword="false" />합니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNamespaceSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsNamespaceSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNamespaceSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNamespaceSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNamespaceSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNamespaceSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Runtime.Serialization.DataContractAttribute.Namespace" />이 명시적으로 설정되었는지를 나타내는 값을 가져옵니다.</summary>
        <value><see langword="true" /> 네임 스페이스를 명시적으로 설정 되었으면; 그렇지 않으면 <see langword="false" />합니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReference">
      <MemberSignature Language="C#" Value="public bool IsReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReference" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsReference" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReference As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReference { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReference : bool with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.IsReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>개체 참조 데이터를 유지할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>표준 XML을 사용하여 개체 참조 데이터를 유지하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 개체 참조 정보를 유지하는 XML 구문을 삽입하도록 `IsReference`에 지시하려면 <xref:System.Runtime.Serialization.DataContractSerializer> 속성을 사용합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
      </Docs>
    </Member>
    <Member MemberName="IsReferenceSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsReferenceSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReferenceSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReferenceSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReferenceSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReferenceSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Runtime.Serialization.DataContractAttribute.IsReference" />이 명시적으로 설정되었는지를 나타내는 값을 가져옵니다.</summary>
        <value>참조가 명시적으로 설정된 경우 <see langword="true" />를 반환하고, 그러지 않은 경우 <see langword="false" />를 반환합니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>형식의 데이터 계약 이름을 가져오거나 설정합니다.</summary>
        <value>데이터 계약의 로컬 이름입니다. 기본값은 특성이 적용되는 클래스의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> 속성은 데이터 계약에 이름을 지정하는 데 사용되며, 이 이름은 XML 스키마에서 형식의 이름이 됩니다. 자세한 내용은 [Data Contract Names](~/docs/framework/wcf/feature-details/data-contract-names.md)합니다.  
  
 기본적으로 데이터 계약 이름은 <xref:System.Runtime.Serialization.DataContractAttribute>가 적용되는 형식의 이름입니다. 그러나 이 기본 이름을 변경해야 할 경우가 있습니다. 첫째, 기존 형식에서 기존 데이터 계약을 따라야 하는 데이터를 처리할 수 있도록 하기 위해서입니다. 예를 들어 `Person`이라는 형식 이름이 있지만 XML 스키마에 구현된 데이터 계약의 이름은 `Customer`여야 할 경우가 있습니다. 이 경우 속성 값을 `Customer`로 설정하여 계약을 충족시킬 수 있습니다.  
  
 둘째, 형식 이름으로는 부적합한 이름을 생성할 수 있도록 하기 위해서입니다. 예를 들어, 형식 이름으로 허용되지 않는 이름이 데이터 계약에 필요한 경우 속성 값을 허용되지 않는 이름으로 설정할 수 있습니다. 일례로 "$value" 문자열은 형식 이름으로 허용되지 않지만 <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> 속성 값으로는 허용됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>형식에 대한 데이터 계약의 네임스페이스를 가져오거나 설정합니다.</summary>
        <value>계약의 네임스페이스입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 형식에서 특정 데이터 계약을 따르는 데이터를 반환해야 할 경우 이 속성을 사용하여 특정 네임스페이스를 지정합니다.  
  
> [!TIP]
>  데이터가 성공적으로 전송되려면 클라이언트와 서버 모두에서 데이터 계약의 데이터 이름이 같아야 합니다. Visual Basic 프로젝트에서는 기본적으로 접두사를 추가 ("루트 네임 스페이스," 프로젝트 라고 함) 각 파일에 정의 된 네임 스페이스에 있습니다. 이 접두사가 추가되면 동일한 형식에 대해 클라이언트 및 서버 네임스페이스가 달라집니다. 솔루션 설정 하는 것을 <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> 속성을 "", 또는이 속성에서 데이터 계약 네임 스페이스를 명시적으로 설정 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>