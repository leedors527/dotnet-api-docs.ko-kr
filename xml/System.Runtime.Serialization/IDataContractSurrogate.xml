<Type Name="IDataContractSurrogate" FullName="System.Runtime.Serialization.IDataContractSurrogate">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cf8e25a030b6a777d8d3956ce601193d42daafec" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57919574" /></Metadata><TypeSignature Language="C#" Value="public interface IDataContractSurrogate" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataContractSurrogate" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.IDataContractSurrogate" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataContractSurrogate" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataContractSurrogate" />
  <TypeSignature Language="F#" Value="type IDataContractSurrogate = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>serialization, deserialization, XSD(XML 스키마 문서) 내보내기 또는 가져오기를 수행할 때 <see cref="T:System.Runtime.Serialization.DataContractSerializer" />에서 한 형식을 다른 형식으로 대체할 때 필요한 메서드를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Serialization.IDataContractSurrogate>를 사용할 때 한 형식이나 개체를 다른 형식이나 개체로 대체하거나 스키마 변화를 동적으로 생성해야 할 경우 <xref:System.Runtime.Serialization.DataContractSerializer>를 사용합니다. 샘플 응용 프로그램을 참조 하세요 [DataContract 서로게이트](~/docs/framework/wcf/samples/datacontract-surrogate.md)합니다. 데이터 계약에 대 한 자세한 내용은 참조 하세요. [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md)합니다.  
  
 런타임에 <xref:System.Runtime.Serialization.DataContractSerializer>을 사용하여 <xref:System.ServiceModel.Description.OperationDescription> 인스턴스를 검색함으로써 서비스의 작업에 대한 특정 <xref:System.ServiceModel.Description.DataContractSerializerOperationBehavior>를 찾을 수 있습니다. 서로게이트를 만들 인터페이스를 구현 하는 방법에 대 한 자세한 내용은 참조 하세요. [데이터 계약 서로게이트](~/docs/framework/wcf/extending/data-contract-surrogates.md)합니다.  
  
 <xref:System.Runtime.Serialization.IDataContractSurrogate> 및 <xref:System.Runtime.Serialization.XsdDataContractExporter> 클래스를 사용할 때 <xref:System.Runtime.Serialization.XsdDataContractImporter>를 사용하여 XML 스키마의 가져오기 및 내보내기에 영향을 줄 수도 있습니다. 이렇게 하려면 <xref:System.Runtime.Serialization.IDataContractSurrogate> 클래스의 <xref:System.Runtime.Serialization.ExportOptions.DataContractSurrogate%2A> 속성 또는 <xref:System.Runtime.Serialization.ExportOptions> 클래스의 <xref:System.Runtime.Serialization.ImportOptions.DataContractSurrogate%2A> 속성에 <xref:System.Runtime.Serialization.ImportOptions>를 할당합니다.  자세한 내용은 [스키마 가져오기 및 내보내기](~/docs/framework/wcf/feature-details/schema-import-and-export.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Runtime.Serialization.IDataContractSurrogate> 인터페이스의 구현을 보여 줍니다. 이 코드는 `Person` 클래스를 `PersonSurrogated` 형식의 serialization으로 대체합니다.  
  
 [!code-csharp[IDataContractSurrogate#0](~/samples/snippets/csharp/VS_Snippets_CFX/idatacontractsurrogate/cs/source.cs#0)]
 [!code-vb[IDataContractSurrogate#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/idatacontractsurrogate/vb/source.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.Description.DataContractSerializerOperationBehavior" />
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractExporter" />
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractImporter" />
    <related type="Article" href="https://msdn.microsoft.com/library/b0188f3c-00a9-4cf0-a887-a2284c8fb014">DataContract 서로게이트 샘플</related>
    <related type="Article" href="https://msdn.microsoft.com/library/8c31134c-46c5-4ed7-94af-bab0ac0dfce5">데이터 계약 서로게이트</related>
    <related type="Article" href="~/docs/framework/wcf/feature-details/using-data-contracts.md">데이터 계약 사용</related>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetCustomDataToExport">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>스키마 내보내기 작업 중, null이 아닌 반환 값의 스키마에 주석을 삽입합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomDataToExport">
      <MemberSignature Language="C#" Value="public object GetCustomDataToExport (System.Reflection.MemberInfo memberInfo, Type dataContractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetCustomDataToExport(class System.Reflection.MemberInfo memberInfo, class System.Type dataContractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCustomDataToExport(System::Reflection::MemberInfo ^ memberInfo, Type ^ dataContractType);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomDataToExport : System.Reflection.MemberInfo * Type -&gt; obj" Usage="iDataContractSurrogate.GetCustomDataToExport (memberInfo, dataContractType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="dataContractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="memberInfo">멤버를 설명하는 <see cref="T:System.Reflection.MemberInfo" />입니다.</param>
        <param name="dataContractType"><see cref="T:System.Type" /></param>
        <summary>스키마 내보내기 작업 중, null이 아닌 반환 값의 스키마에 주석을 삽입합니다.</summary>
        <returns>XML 스키마 정의에 삽입할 주석을 나타내는 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomDataToExport">
      <MemberSignature Language="C#" Value="public object GetCustomDataToExport (Type clrType, Type dataContractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetCustomDataToExport(class System.Type clrType, class System.Type dataContractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomDataToExport (clrType As Type, dataContractType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCustomDataToExport(Type ^ clrType, Type ^ dataContractType);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomDataToExport : Type * Type -&gt; obj" Usage="iDataContractSurrogate.GetCustomDataToExport (clrType, dataContractType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clrType" Type="System.Type" />
        <Parameter Name="dataContractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="clrType">바꿀 CLR 형식입니다.</param>
        <param name="dataContractType">주석을 달 데이터 계약 형식입니다.</param>
        <summary>스키마 내보내기 작업 중, null이 아닌 반환 값의 스키마에 주석을 삽입합니다.</summary>
        <returns>XML 스키마 정의에 삽입할 주석을 나타내는 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataContractType">
      <MemberSignature Language="C#" Value="public Type GetDataContractType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetDataContractType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetDataContractType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member GetDataContractType : Type -&gt; Type" Usage="iDataContractSurrogate.GetDataContractType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">대체할 CLR 형식 <see cref="T:System.Type" />입니다.</param>
        <summary>serialization, deserialization 및 스키마 가져오기/내보내기 중에 지정한 형식을 대체하는 데이터 계약 형식을 반환합니다.</summary>
        <returns><see cref="T:System.Type" /> 값을 대체할 <paramref name="type" />입니다. 이 형식은 <see cref="T:System.Runtime.Serialization.DataContractSerializer" />를 사용하여 serialize할 수 있어야 합니다. 예를 들어, <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성 또는 serializer가 인식하는 기타 메커니즘으로 표시해야 합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 <xref:System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType%2A> 메서드의 구현을 보여 줍니다.  
  
 [!code-csharp[IDataContractSurrogate#1](~/samples/snippets/csharp/VS_Snippets_CFX/idatacontractsurrogate/cs/source.cs#1)]
 [!code-vb[IDataContractSurrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/idatacontractsurrogate/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeserializedObject">
      <MemberSignature Language="C#" Value="public object GetDeserializedObject (object obj, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetDeserializedObject(object obj, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeserializedObject (obj As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetDeserializedObject(System::Object ^ obj, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="abstract member GetDeserializedObject : obj * Type -&gt; obj" Usage="iDataContractSurrogate.GetDeserializedObject (obj, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="obj">deserialize되어 대체될 개체입니다.</param>
        <param name="targetType">대체된 개체가 할당될 <see cref="T:System.Type" />입니다.</param>
        <summary>deserialization 중에 지정한 개체를 대체하는 개체를 반환합니다.</summary>
        <returns>대체되어 deserialize된 개체입니다. 이 개체는 <see cref="T:System.Runtime.Serialization.DataContractSerializer" />에서 serialize할 수 있는 형식이어야 합니다. 예를 들어, <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성 또는 serializer가 인식하는 기타 메커니즘으로 표시해야 합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 간단한 구현에서는 if…then…else 제어 구조를 사용하여 `obj` 값이 서로게이트된 형식인지 여부를 테스트합니다. 해당 형식인 경우 필요에 따라 변환하고 대체된 개체를 반환합니다. 대체된 개체는 새 인스턴스 또는 동일한 `obj` 인스턴스일 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject%2A> 메서드의 구현을 보여 줍니다.  
  
 [!code-csharp[IDataContractSurrogate#3](~/samples/snippets/csharp/VS_Snippets_CFX/idatacontractsurrogate/cs/source.cs#3)]
 [!code-vb[IDataContractSurrogate#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/idatacontractsurrogate/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownCustomDataTypes">
      <MemberSignature Language="C#" Value="public void GetKnownCustomDataTypes (System.Collections.ObjectModel.Collection&lt;Type&gt; customDataTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetKnownCustomDataTypes(class System.Collections.ObjectModel.Collection`1&lt;class System.Type&gt; customDataTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetKnownCustomDataTypes (customDataTypes As Collection(Of Type))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetKnownCustomDataTypes(System::Collections::ObjectModel::Collection&lt;Type ^&gt; ^ customDataTypes);" />
      <MemberSignature Language="F#" Value="abstract member GetKnownCustomDataTypes : System.Collections.ObjectModel.Collection&lt;Type&gt; -&gt; unit" Usage="iDataContractSurrogate.GetKnownCustomDataTypes customDataTypes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customDataTypes" Type="System.Collections.ObjectModel.Collection&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="customDataTypes">알려진 형식을 추가할 <see cref="T:System.Type" />의 <see cref="T:System.Collections.ObjectModel.Collection`1" />입니다.</param>
        <summary>사용자 지정 데이터 개체의 serialization 및 deserialization에 사용할 알려진 형식 컬렉션을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 <xref:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport%2A> 메서드를 사용하여 스키마에 주석을 삽입하는 경우에만 스키마 내보내기 또는 스키마 가져오기 중에 필요합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectToSerialize">
      <MemberSignature Language="C#" Value="public object GetObjectToSerialize (object obj, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObjectToSerialize(object obj, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectToSerialize (obj As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetObjectToSerialize(System::Object ^ obj, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectToSerialize : obj * Type -&gt; obj" Usage="iDataContractSurrogate.GetObjectToSerialize (obj, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="obj">대체할 개체입니다.</param>
        <param name="targetType">대체된 개체가 할당될 <see cref="T:System.Type" />입니다.</param>
        <summary>serialization 중에 지정한 개체를 대체하는 개체를 반환합니다.</summary>
        <returns>대체되어 serialize될 개체입니다. 이 개체는 <see cref="T:System.Runtime.Serialization.DataContractSerializer" />를 사용하여 serialize할 수 있어야 합니다. 예를 들어, <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성 또는 serializer가 인식하는 기타 메커니즘으로 표시해야 합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 반환 하지 않아야 `null` deserialization 시 데이터 형식으로 캐스팅 됩니다 때문 <xref:System.Object> 및 <xref:System.InvalidCastException> throw 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize%2A> 메서드의 구현을 보여 줍니다.  
  
 [!code-csharp[IDataContractSurrogate#2](~/samples/snippets/csharp/VS_Snippets_CFX/idatacontractsurrogate/cs/source.cs#2)]
 [!code-vb[IDataContractSurrogate#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/idatacontractsurrogate/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedTypeOnImport">
      <MemberSignature Language="C#" Value="public Type GetReferencedTypeOnImport (string typeName, string typeNamespace, object customData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetReferencedTypeOnImport(string typeName, string typeNamespace, object customData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReferencedTypeOnImport (typeName As String, typeNamespace As String, customData As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetReferencedTypeOnImport(System::String ^ typeName, System::String ^ typeNamespace, System::Object ^ customData);" />
      <MemberSignature Language="F#" Value="abstract member GetReferencedTypeOnImport : string * string * obj -&gt; Type" Usage="iDataContractSurrogate.GetReferencedTypeOnImport (typeName, typeNamespace, customData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="typeNamespace" Type="System.String" />
        <Parameter Name="customData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeName">스키마에 있는 형식의 이름입니다.</param>
        <param name="typeNamespace">스키마에 있는 형식의 네임스페이스입니다.</param>
        <param name="customData">XML 스키마 정의에 삽입된 주석을 나타내는 개체로, 참조된 형식을 찾을 때 사용할 수 있는 데이터입니다.</param>
        <summary>스키마 가져오기 중에 스키마가 참조하는 형식을 반환합니다.</summary>
        <returns>참조된 형식에 사용할 <see cref="T:System.Type" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 스키마 형식을 나타내기 위한 CLR 형식이 없으면 `Null`을 반환해야 합니다. 이 경우 스키마 가져오기 중에 새 형식이 생성됩니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport%2A> 메서드의 구현을 보여 줍니다.  
  
 [!code-csharp[IDataContractSurrogate#4](~/samples/snippets/csharp/VS_Snippets_CFX/idatacontractsurrogate/cs/source.cs#4)]
 [!code-vb[IDataContractSurrogate#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/idatacontractsurrogate/vb/source.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessImportedType">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeDeclaration ProcessImportedType (System.CodeDom.CodeTypeDeclaration typeDeclaration, System.CodeDom.CodeCompileUnit compileUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeTypeDeclaration ProcessImportedType(class System.CodeDom.CodeTypeDeclaration typeDeclaration, class System.CodeDom.CodeCompileUnit compileUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProcessImportedType (typeDeclaration As CodeTypeDeclaration, compileUnit As CodeCompileUnit) As CodeTypeDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::CodeTypeDeclaration ^ ProcessImportedType(System::CodeDom::CodeTypeDeclaration ^ typeDeclaration, System::CodeDom::CodeCompileUnit ^ compileUnit);" />
      <MemberSignature Language="F#" Value="abstract member ProcessImportedType : System.CodeDom.CodeTypeDeclaration * System.CodeDom.CodeCompileUnit -&gt; System.CodeDom.CodeTypeDeclaration" Usage="iDataContractSurrogate.ProcessImportedType (typeDeclaration, compileUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDeclaration" Type="System.CodeDom.CodeTypeDeclaration" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="typeDeclaration">스키마 가져오기 중에 생성된 형식 선언을 나타내는 프로세스에 대한 <see cref="T:System.CodeDom.CodeTypeDeclaration" />입니다.</param>
        <param name="compileUnit">스키마 가져오기 중에 생성된 다른 코드를 포함하는 <see cref="T:System.CodeDom.CodeCompileUnit" />입니다.</param>
        <summary>가져온 스키마에서 생성된 형식을 처리합니다.</summary>
        <returns>처리된 형식을 포함하는 <see cref="T:System.CodeDom.CodeTypeDeclaration" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 사용자가 입력 <xref:System.CodeDom.CodeTypeDeclaration> 또는 <xref:System.CodeDom.CodeCompileUnit>의 기타 정보를 수정할 수 있습니다. `null`이 반환되면 형식이 생성되지 않습니다. 새로운 <xref:System.CodeDom.CodeTypeDeclaration>이 반환되면 생성된 원래 형식을 대체합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>