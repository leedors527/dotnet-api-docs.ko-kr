<Type Name="IFormatter" FullName="System.Runtime.Serialization.IFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="23f47f6f000517dc57769bfe04fb4c405b492f4f" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58705082" /></Metadata><TypeSignature Language="C#" Value="public interface IFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.IFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFormatter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFormatter" />
  <TypeSignature Language="F#" Value="type IFormatter = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>serialize된 개체의 형식을 지정하기 위한 기능을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 인터페이스의 포맷터로 식별 되는 클래스에서 구현 해야 합니다는 <xref:System.Runtime.Serialization> 아키텍처입니다.  
  
 자체 serialization을 제어 이렇게 구현 하 여 개체를 <xref:System.Runtime.Serialization.ISerializable> 인터페이스입니다. Serialize 할 개체에 대 한 순서 대로 해당 개체를 직렬화 가능으로 표시 해야 합니다. 클래스를 serializable 특성을 적용 하 여이 수행할 수 있습니다. 그래프의 모든 개체를 직렬화 할 수 없는 경우 serialization이 실패 합니다.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>모든 포맷터는이 인터페이스를 구현 해야 합니다. 사용 하 여 <see cref="M:System.Runtime.Serialization.IFormatter.Serialize(System.IO.Stream,System.Object)" /> 개체 또는 개체 그래프를 serialize 합니다. 사용 하 여 <see cref="M:System.Runtime.Serialization.IFormatter.Deserialize(System.IO.Stream)" /> 원래 개체 또는 개체 그래프의 클론을 만들고 스트림을 deserialize 합니다.</para></block>
    <altmember cref="T:System.Runtime.Serialization.Formatter" />
    <altmember cref="T:System.Runtime.Serialization.ISerializable" />
    <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md">XML 및 SOAP Serialization</related>
  </Docs>
  <Members>
    <Member MemberName="Binder">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.SerializationBinder Binder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.SerializationBinder Binder" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.IFormatter.Binder" />
      <MemberSignature Language="VB.NET" Value="Public Property Binder As SerializationBinder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::SerializationBinder ^ Binder { System::Runtime::Serialization::SerializationBinder ^ get(); void set(System::Runtime::Serialization::SerializationBinder ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Binder : System.Runtime.Serialization.SerializationBinder with get, set" Usage="System.Runtime.Serialization.IFormatter.Binder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.SerializationBinder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>deserialization 중에 형식 조회를 수행하는 <see cref="T:System.Runtime.Serialization.SerializationBinder" />를 가져오거나 설정합니다.</summary>
        <value>deserialization 중에 형식 조회를 수행하는 <see cref="T:System.Runtime.Serialization.SerializationBinder" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 정보에서 형식을 확인 하려고 인코딩된 스트림을 포맷터에서 호출 합니다 <xref:System.Runtime.Serialization.SerializationBinder.BindToType%2A> 메서드는 <xref:System.Runtime.Serialization.SerializationBinder>합니다. 이 메서드는 이러한 매개 변수를 확인 한 <xref:System.Type> 개체입니다. 바인더를 찾을 수는 <xref:System.Type> serialization 시 보다 다른 어셈블리에는 deserialization 시간입니다.  
  
 이 속성은 serialization 중 효과가 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.StreamingContext Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.StreamingContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.IFormatter.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As StreamingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::StreamingContext Context { System::Runtime::Serialization::StreamingContext get(); void set(System::Runtime::Serialization::StreamingContext value); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Runtime.Serialization.StreamingContext with get, set" Usage="System.Runtime.Serialization.IFormatter.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.StreamingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>serialization 및 deserialization에 사용되는 <see cref="T:System.Runtime.Serialization.StreamingContext" />를 가져오거나 설정합니다.</summary>
        <value>serialization 및 deserialization에 사용되는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 값을 구현 하는 모든 개체에 전달 됩니다 <xref:System.Runtime.Serialization.ISerializable> 또는 <xref:System.Runtime.Serialization.ISerializationSurrogate>합니다. <xref:System.Runtime.Serialization.StreamingContext> (직렬화) 하는 동안 대상 또는 원본 (역직렬화) 하는 동안 데이터를 나타냅니다. 구현 하는 개체 <xref:System.Runtime.Serialization.ISerializable> 의 값에 따라 전송 하는 데이터를 변경할 수는 <xref:System.Runtime.Serialization.IFormatter.Context%2A>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.Stream serializationStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.IO.Stream serializationStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IFormatter.Deserialize(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (serializationStream As Stream) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::IO::Stream ^ serializationStream);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.IO.Stream -&gt; obj" Usage="iFormatter.Deserialize serializationStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="serializationStream">deserialize할 데이터를 포함하는 스트림입니다.</param>
        <summary>제공된 스트림의 데이터를 deserialize하고 개체의 그래프를 다시 구성합니다.</summary>
        <returns>deserialize된 그래프의 최상위 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Serialization.IFormatter.Deserialize%2A> 메서드 스트림에서 그래프 정보를 읽고 원본 그래프의 복제를 다시 만듭니다. 그래프의 토폴로지 유지 됩니다.  
  
 Deserialization 프로세스를 적절 한 형식의 빈 개체를 할당 하 고 해당 필드에서 전송 되는 데이터를 다시 채웁니다는 `serializationStream` 스트림 합니다. 역직렬화 하는 동안 생성자가 없습니다.이 개체에서 그 어느 때 라 하는 것이 반드시 합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md">XML 및 SOAP Serialization</related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream serializationStream, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Serialize(class System.IO.Stream serializationStream, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.IFormatter.Serialize(System.IO.Stream,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (serializationStream As Stream, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::Stream ^ serializationStream, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.IO.Stream * obj -&gt; unit" Usage="iFormatter.Serialize (serializationStream, graph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationStream">포맷터가 serialize된 데이터를 두는 스트림입니다. 이 스트림은 파일, 네트워크, 메모리 같은 다양한 백업 저장소를 참조할 수 있습니다.</param>
        <param name="graph">serialize할 개체 그래프의 루트 또는 개체입니다. 이 루트 개체의 모든 자식 개체는 자동으로 serialize됩니다.</param>
        <summary>개체 또는 루트가 지정된 개체 그래프를 제공된 스트림에 Serialize합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Serialization.IFormatter.Serialize%2A> 메서드는 자동으로 제공 된 개체를 serialize 하 고, 제공 된 스트림에 연결 된 모든 개체입니다.  
  
 기본적으로 serialization 프로세스 (공용 및 개인)는 모든 필드의 값을 수집 하 여 개체의 상태를 기록 합니다. 이러한 필드는 해당 형식에 대 한 어셈블리로 한정 된 이름 같은 개체에 대 한 정보와 함께 스트림에 저장 됩니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md">XML 및 SOAP Serialization</related>
      </Docs>
    </Member>
    <Member MemberName="SurrogateSelector">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.ISurrogateSelector SurrogateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.ISurrogateSelector SurrogateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.IFormatter.SurrogateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property SurrogateSelector As ISurrogateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::ISurrogateSelector ^ SurrogateSelector { System::Runtime::Serialization::ISurrogateSelector ^ get(); void set(System::Runtime::Serialization::ISurrogateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SurrogateSelector : System.Runtime.Serialization.ISurrogateSelector with get, set" Usage="System.Runtime.Serialization.IFormatter.SurrogateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ISurrogateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 포맷터가 사용하는 <see cref="T:System.Runtime.Serialization.SurrogateSelector" />를 가져오거나 설정합니다.</summary>
        <value>이 포맷터가 사용하는 <see cref="T:System.Runtime.Serialization.SurrogateSelector" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Serialization.ISerializationSurrogate> 사용자 지정 가장 적합 한 개체는 특정 개체 또는 개체 클래스의 serialization을 처리할 수 있습니다. 구현으로 생각해 <xref:System.Runtime.Serialization.ISerializable> 하지만 다른 개체에서 제공 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>