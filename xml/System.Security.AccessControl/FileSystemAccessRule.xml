<Type Name="FileSystemAccessRule" FullName="System.Security.AccessControl.FileSystemAccessRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bf298630e77f1516eb18c5c54e25c66c699f8fdd" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56774574" /></Metadata><TypeSignature Language="C#" Value="public sealed class FileSystemAccessRule : System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileSystemAccessRule extends System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSystemAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileSystemAccessRule&#xA;Inherits AccessRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemAccessRule sealed : System::Security::AccessControl::AccessRule" />
  <TypeSignature Language="F#" Value="type FileSystemAccessRule = class&#xA;    inherit AccessRule" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AccessRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>파일이나 디렉터리에 대한 액세스 규칙을 정의하는 ACE(액세스 제어 항목)를 추상적으로 나타낸 클래스입니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemAccessRule> 클래스 액세스 (읽기, 쓰기 및 등)를 제공 하려면 유형의 사용자 계정을 지정 하는 기본 액세스 제어 항목 (ACE)의 추상화를 나타냅니다 및 해당 권한을 허용 하거나 거부 여부.  이 클래스는 자식 개체에 대 한 액세스 규칙 전파 되는 방법을 지정할 수도 있습니다.  
  
 사용 된 <xref:System.Security.AccessControl.FileSystemAccessRule> 새 액세스 규칙을 만들려면 클래스입니다.  사용 하 여 규칙을 유지할 수 있습니다 합니다 <xref:System.Security.AccessControl.FileSecurity> 또는 <xref:System.Security.AccessControl.DirectorySecurity> 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Security.AccessControl.FileSecurity> 클래스를 추가 하 고 다음 파일에서 액세스 제어 항목 (ACE)를 제거 합니다.  이 예제를 실행하려면 유효한 사용자 또는 그룹 계정을 제공해야 합니다.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::FileSystemRights fileSystemRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.FileSystemAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.FileSystemRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.FileSystemAccessRule" Usage="new System.Security.AccessControl.FileSystemAccessRule (identity, fileSystemRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">사용자 계정에 대한 참조를 캡슐화하는 <see cref="T:System.Security.Principal.IdentityReference" /> 개체입니다.</param>
        <param name="fileSystemRights">액세스 규칙과 관련된 작업 형식을 지정하는 <see cref="T:System.Security.AccessControl.FileSystemRights" /> 값 중 하나입니다.</param>
        <param name="type">작업의 허용 여부를 지정하는 <see cref="T:System.Security.AccessControl.AccessControlType" /> 값 중 하나입니다.</param>
        <summary>사용자 계정에 대한 참조, 액세스 규칙과 관련된 작업 형식을 지정하는 값 및 작업의 허용 여부를 지정하는 값을 사용하여 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> 클래스의 새 인스턴스를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 유지할 수 있는 액세스 제어 규칙을 만들려면이 생성자를 사용 합니다 <xref:System.Security.AccessControl.FileSecurity> 또는 <xref:System.Security.AccessControl.DirectorySecurity> 클래스입니다.  액세스 제어 규칙에는 허용 되거나 사용할 수 없습니다. Microsoft Windows를 실행 하는 컴퓨터는 작업을 결정 하는 사용자 계정 권한을 정의 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="identity" /> 매개 변수가 <see cref="T:System.Security.Principal.IdentityReference" /> 개체가 아닌 경우</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">잘못된 열거형이 <paramref name="type" /> 매개 변수에 전달된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAccessRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemAccessRule(System::String ^ identity, System::Security::AccessControl::FileSystemRights fileSystemRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.FileSystemAccessRule : string * System.Security.AccessControl.FileSystemRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.FileSystemAccessRule" Usage="new System.Security.AccessControl.FileSystemAccessRule (identity, fileSystemRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">사용자 계정의 이름입니다.</param>
        <param name="fileSystemRights">액세스 규칙과 관련된 작업 형식을 지정하는 <see cref="T:System.Security.AccessControl.FileSystemRights" /> 값 중 하나입니다.</param>
        <param name="type">작업의 허용 여부를 지정하는 <see cref="T:System.Security.AccessControl.AccessControlType" /> 값 중 하나입니다.</param>
        <summary>사용자 계정의 이름, 액세스 규칙과 관련된 작업 형식을 지정하는 값 및 작업의 허용 여부를 설명하는 값을 사용하여 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> 클래스의 새 인스턴스를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 유지할 수 있는 액세스 제어 규칙을 만들려면이 생성자를 사용 합니다 <xref:System.Security.AccessControl.FileSecurity> 또는 <xref:System.Security.AccessControl.DirectorySecurity> 클래스입니다.  액세스 제어 규칙에는 허용 되거나 사용할 수 없습니다. Microsoft Windows를 실행 하는 컴퓨터는 작업을 결정 하는 사용자 계정 권한을 정의 합니다.  
  
 `identity` 매개 변수는 현재 컴퓨터 또는 도메인에 유효한 계정을 식별 해야 합니다.  문자열의 다음 형식을 사용 위치 `DOMAIN` 올바른 도메인 또는 컴퓨터 이름의 이름 및 `account` 도메인 또는 컴퓨터의 유효한 사용자 계정 이름: `DOMAIN\account`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Security.AccessControl.FileSecurity> 클래스를 추가 하 고 다음 파일에서 액세스 제어 항목 (ACE)를 제거 합니다.  이 예제를 실행하려면 유효한 사용자 또는 그룹 계정을 제공해야 합니다.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">잘못된 열거형이 <paramref name="type" /> 매개 변수에 전달된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::FileSystemRights fileSystemRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.FileSystemAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.FileSystemRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.FileSystemAccessRule" Usage="new System.Security.AccessControl.FileSystemAccessRule (identity, fileSystemRights, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">사용자 계정에 대한 참조를 캡슐화하는 <see cref="T:System.Security.Principal.IdentityReference" /> 개체입니다.</param>
        <param name="fileSystemRights">액세스 규칙과 관련된 작업 형식을 지정하는 <see cref="T:System.Security.AccessControl.FileSystemRights" /> 값 중 하나입니다.</param>
        <param name="inheritanceFlags">자식 개체에 액세스 마스크가 전파되는 방법을 지정하는 <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 값 중 하나입니다.</param>
        <param name="propagationFlags">자식 개체에 ACE(액세스 제어 항목)가 전파되는 방법을 지정하는 <see cref="T:System.Security.AccessControl.PropagationFlags" /> 값 중 하나입니다.</param>
        <param name="type">작업의 허용 여부를 지정하는 <see cref="T:System.Security.AccessControl.AccessControlType" /> 값 중 하나입니다.</param>
        <summary>사용자 계정에 대한 참조, 액세스 규칙과 관련된 작업 형식을 지정하는 값, 권한이 상속되는 방법을 결정하는 값, 권한이 전파되는 방법을 결정하는 값 및 작업의 허용 여부를 지정하는 값을 사용하여 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 유지할 수 있는 액세스 제어 규칙을 만들려면이 생성자를 사용 합니다 <xref:System.Security.AccessControl.FileSecurity> 또는 <xref:System.Security.AccessControl.DirectorySecurity> 클래스입니다.  액세스 제어 규칙에는 허용 되거나 사용할 수 없습니다. Microsoft Windows를 실행 하는 컴퓨터는 작업을 결정 하는 사용자 계정 권한을 정의 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="identity" /> 매개 변수가 <see cref="T:System.Security.Principal.IdentityReference" /> 개체가 아닌 경우</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">잘못된 열거형이 <paramref name="type" /> 매개 변수에 전달된 경우  
  
또는 
잘못된 열거형이 <paramref name="inheritanceFlags" /> 매개 변수에 전달된 경우  
  
또는 
잘못된 열거형이 <paramref name="propagationFlags" /> 매개 변수에 전달된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemAccessRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.FileSystemRights fileSystemRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemAccessRule(System::String ^ identity, System::Security::AccessControl::FileSystemRights fileSystemRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.FileSystemAccessRule : string * System.Security.AccessControl.FileSystemRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.FileSystemAccessRule" Usage="new System.Security.AccessControl.FileSystemAccessRule (identity, fileSystemRights, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="fileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">사용자 계정의 이름입니다.</param>
        <param name="fileSystemRights">액세스 규칙과 관련된 작업 형식을 지정하는 <see cref="T:System.Security.AccessControl.FileSystemRights" /> 값 중 하나입니다.</param>
        <param name="inheritanceFlags">자식 개체에 액세스 마스크가 전파되는 방법을 지정하는 <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 값 중 하나입니다.</param>
        <param name="propagationFlags">자식 개체에 ACE(액세스 제어 항목)가 전파되는 방법을 지정하는 <see cref="T:System.Security.AccessControl.PropagationFlags" /> 값 중 하나입니다.</param>
        <param name="type">작업의 허용 여부를 지정하는 <see cref="T:System.Security.AccessControl.AccessControlType" /> 값 중 하나입니다.</param>
        <summary>사용자 계정의 이름, 액세스 규칙과 관련된 작업 형식을 지정하는 값, 권한이 상속되는 방법을 결정하는 값, 권한이 전파되는 방법을 결정하는 값 및 작업의 허용 여부를 지정하는 값을 사용하여 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 유지할 수 있는 액세스 제어 규칙을 만들려면이 생성자를 사용 합니다 <xref:System.Security.AccessControl.FileSecurity> 또는 <xref:System.Security.AccessControl.DirectorySecurity> 클래스입니다.  액세스 제어 규칙에는 허용 되거나 사용할 수 없습니다. Microsoft Windows를 실행 하는 컴퓨터는 작업을 결정 하는 사용자 계정 권한을 정의 합니다.  
  
 `identity` 매개 변수는 현재 컴퓨터 또는 도메인에 유효한 계정을 식별 해야 합니다.  문자열의 다음 형식을 사용 위치 `DOMAIN` 올바른 도메인 또는 컴퓨터 이름의 이름 및 `account` 도메인 또는 컴퓨터의 유효한 사용자 계정 이름: `DOMAIN\account`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">잘못된 열거형이 <paramref name="type" /> 매개 변수에 전달된 경우  
  
또는 
잘못된 열거형이 <paramref name="inheritanceFlags" /> 매개 변수에 전달된 경우  
  
또는 
잘못된 열거형이 <paramref name="propagationFlags" /> 매개 변수에 전달된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="FileSystemRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.FileSystemRights FileSystemRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.FileSystemRights FileSystemRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemAccessRule.FileSystemRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileSystemRights As FileSystemRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::FileSystemRights FileSystemRights { System::Security::AccessControl::FileSystemRights get(); };" />
      <MemberSignature Language="F#" Value="member this.FileSystemRights : System.Security.AccessControl.FileSystemRights" Usage="System.Security.AccessControl.FileSystemAccessRule.FileSystemRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.FileSystemRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Security.AccessControl.FileSystemRights" /> 개체와 관련된 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> 플래그를 가져옵니다.</summary>
        <value>현재 <see cref="T:System.Security.AccessControl.FileSystemRights" /> 개체와 관련된 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> 플래그입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>