<Type Name="FileSystemSecurity" FullName="System.Security.AccessControl.FileSystemSecurity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="26eb0c101ec79349f5994f491a84399bed6ba0b3" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56787743" /></Metadata><TypeSignature Language="C#" Value="public abstract class FileSystemSecurity : System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FileSystemSecurity extends System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FileSystemSecurity&#xA;Inherits NativeObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemSecurity abstract : System::Security::AccessControl::NativeObjectSecurity" />
  <TypeSignature Language="F#" Value="type FileSystemSecurity = class&#xA;    inherit NativeObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.NativeObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>파일이나 디렉터리에 대한 액세스 제어 및 감사 보안을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity> 클래스에 대 한 기본 클래스인 합니다 <xref:System.Security.AccessControl.FileSecurity> 및 <xref:System.Security.AccessControl.DirectorySecurity> 클래스입니다.  이러한 클래스는 모든 시스템 파일이 나 디렉터리에 대 한 액세스 권한을 나타내는 하 고 액세스 시도 감사 하는 방법을 정의 합니다.  
  
 <xref:System.Security.AccessControl.FileSystemSecurity> 클래스 규칙의 집합으로 액세스 및 감사 권한을 나타냅니다. 각 액세스 규칙은 표현 된 <xref:System.Security.AccessControl.FileSystemAccessRule> 개체를 각 감사 규칙은 표현 하는 동안를 <xref:System.Security.AccessControl.FileSystemAuditRule> 개체.  
  
 <xref:System.Security.AccessControl.FileSystemSecurity> 클래스 기본 Microsoft Windows 파일 보안 시스템의 추상화입니다. 이 시스템에서 각 파일 또는 디렉터리에 파일 또는 디렉터리에 대 한 액세스를 제어 하는 임의 액세스 제어 목록 (DACL) 및 시스템 액세스 제어 목록 (SACL) 감사 된 액세스 제어 시도 지정 하는 합니다.  합니다 <xref:System.Security.AccessControl.FileSystemAccessRule> 고 <xref:System.Security.AccessControl.FileSystemAuditRule> 클래스는 Dacl과 Sacl을 구성 하는 액세스 제어 항목 (Ace)의 추상화 합니다.  
  
 <xref:System.Security.AccessControl.FileSystemSecurity> 클래스 다양 한 Dacl과 Sacl의 세부 정보를 숨깁니다; ACE 순서를 지정 하거나 null DACL을 걱정할 필요가 없습니다.  
  
 파일에 새롭거나 변경 된 액세스 제어 목록 (ACL) 정보를 유지 하려면 사용 합니다 <xref:System.IO.File.SetAccessControl%2A> 또는 <xref:System.IO.FileInfo.SetAccessControl%2A> 메서드.  디렉터리에 새롭거나 변경 된 ACL 정보를 유지 하려면 사용 합니다 <xref:System.IO.Directory.SetAccessControl%2A> 또는 <xref:System.IO.FileInfo.SetAccessControl%2A> 메서드.  
  
 파일에서 ACL 정보를 검색 하려면 사용 합니다 <xref:System.IO.File.GetAccessControl%2A> 또는 <xref:System.IO.FileInfo.GetAccessControl%2A> 메서드.  디렉터리에서 ACL 정보를 검색 하려면 사용 합니다 <xref:System.IO.Directory.GetAccessControl%2A> 또는 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 메서드.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Security.AccessControl.FileSecurity> 클래스를 추가 하 고 다음 파일에서 액세스 제어 목록 (ACL) 항목을 제거 합니다.  이 예제를 실행하려면 유효한 사용자 또는 그룹 계정을 제공해야 합니다.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRightType : Type" Usage="System.Security.AccessControl.FileSystemSecurity.AccessRightType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Security.AccessControl.FileSystemSecurity" /> 클래스가 액세스 권한을 나타내는 데 사용하는 열거형을 가져옵니다.</summary>
        <value><see cref="T:System.Type" /> 열거형을 나타내는 <see cref="T:System.Security.AccessControl.FileSystemRights" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생 된 클래스는 <xref:System.Security.AccessControl.FileSystemSecurity> 재정의 클래스를 <xref:System.Security.AccessControl.FileSystemSecurity.AccessRightType%2A> 속성 및 액세스 권한을 나타내는 데 사용 하는 형식 반환 합니다. 배열 또는 여러 유형의 보안 개체를 포함 하는 컬렉션을 사용 하 여 작업할 때 각 보안 개체에 사용할 올바른 열거형 형식을 확인 하려면이 속성을 사용 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="override this.AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.AccessRule" Usage="fileSystemSecurity.AccessRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference">사용자 계정을 나타내는 <see cref="T:System.Security.Principal.IdentityReference" /> 개체입니다.</param>
        <param name="accessMask">액세스 형식을 지정하는 정수입니다.</param>
        <param name="isInherited">액세스 규칙이 상속된 것이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="inheritanceFlags">자식 개체에 액세스 마스크를 전파하는 방법을 지정하는 <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 값 중 하나입니다.</param>
        <param name="propagationFlags">자식 개체에 ACE(액세스 제어 항목)를 전파하는 방법을 지정하는 <see cref="T:System.Security.AccessControl.PropagationFlags" /> 값 중 하나입니다.</param>
        <param name="type">액세스가 허용되는지 여부를 지정하는 <see cref="T:System.Security.AccessControl.AccessControlType" /> 값 중 하나입니다.</param>
        <summary>지정된 액세스 권한, 액세스 제어 및 플래그를 사용하여 지정된 사용자에 대한 새 액세스 제어 규칙을 나타내는 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <returns>지정된 액세스 권한, 액세스 제어 및 플래그를 사용하여 지정된 사용자에 대한 새 액세스 제어 규칙을 나타내는 새 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 액세스 제어 규칙 만들기에 대 한 권장 되는 방법은 생성자를 사용 하는 것은 <xref:System.Security.AccessControl.FileSystemAccessRule> 클래스입니다.  
  
 반환 형식은 합니다 <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory%2A> 메서드는 기본 클래스 <xref:System.Security.AccessControl.AccessRule>, 반환 값을 파생된 클래스도 안전 하 게 캐스팅 될 수 있지만.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">잘못된 값이 <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> 또는 <paramref name="type" /> 매개 변수에 지정된 경우</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="identityReference" /> 매개 변수가 <see langword="null" />인 경우  
  
또는 
<paramref name="accessMask" /> 매개 변수가 0인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="identityReference" /> 매개 변수가 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 형식이 아니고, <see cref="T:System.Security.Principal.NTAccount" /> 형식으로 변환할 수 있는 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 형식도 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRuleType : Type" Usage="System.Security.AccessControl.FileSystemSecurity.AccessRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Security.AccessControl.FileSystemSecurity" /> 클래스에서 액세스 규칙을 나타내는 데 사용하는 열거형을 가져옵니다.</summary>
        <value><see cref="T:System.Type" /> 클래스를 나타내는 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생 된 클래스는 <xref:System.Security.AccessControl.FileSystemSecurity> 재정의 클래스를 <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleType%2A> 속성과 액세스 규칙을 나타내는 데 사용 하는 형식 반환 합니다. 배열 또는 여러 유형의 보안 개체를 포함 하는 컬렉션을 사용 하 여 작업할 때 사용할 각 보안 개체에 대 한 올바른 액세스 규칙을 확인 하려면이 속성을 사용 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.AddAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">파일이나 디렉터리에 추가할 ACL(액세스 제어 목록) 권한을 나타내는 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> 개체입니다.</param>
        <summary>지정된 ACL(액세스 제어 목록) 권한을 현재 파일이나 디렉터리에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> 에 포함 된 규칙 목록에 새 규칙을 추가 하는 메서드를 <xref:System.Security.AccessControl.FileSystemSecurity> 개체입니다.  
  
 지정 된 규칙에 대 한 액세스 제어 목록 (ACL)을 이미 있는 경우는 <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> 메서드는 한 가지 예외를 사용 하 여 규칙을 추가 여전히:를 <xref:System.Security.AccessControl.FileSystemAccessRule> 사용 하 여 만든 개체는 <xref:System.Security.AccessControl.AccessControlType.Deny> 를사용하여만든개체를대체하는열거형값<xref:System.Security.AccessControl.AccessControlType.Allow> 열거형 값입니다.  
  
 파일에 새롭거나 변경 된 ACL 정보를 유지 하려면 사용 합니다 <xref:System.IO.File.SetAccessControl%2A> 또는 <xref:System.IO.FileInfo.SetAccessControl%2A> 메서드.  디렉터리에 새롭거나 변경 된 ACL 정보를 유지 하려면 사용 합니다 <xref:System.IO.Directory.SetAccessControl%2A> 또는 <xref:System.IO.FileInfo.SetAccessControl%2A> 메서드.  
  
 파일에서 ACL 정보를 검색 하려면 사용 합니다 <xref:System.IO.File.GetAccessControl%2A> 또는 <xref:System.IO.FileInfo.GetAccessControl%2A> 메서드.  디렉터리에서 ACL 정보를 검색 하려면 사용 합니다 <xref:System.IO.Directory.GetAccessControl%2A> 또는 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 메서드.  
  
 설정 하지 않고 액세스 규칙을 추가 하는 경우는 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> 플래그를 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> 규칙에 플래그를 자동으로 추가 됩니다.  지정 하지 않고 나중에 규칙을 제거 하는 경우는 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> 플래그를 플래그를 자동으로 제거 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Security.AccessControl.FileSecurity> 클래스를 추가 하 고 다음 파일에서 액세스 제어 목록 (ACL) 항목을 제거 합니다.  이 예제를 실행하려면 유효한 사용자 또는 그룹 계정을 제공해야 합니다.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAuditRule : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.AddAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">파일이나 디렉터리에 추가할 감사 규칙을 나타내는 <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> 개체입니다.</param>
        <summary>지정된 감사 규칙을 현재 파일이나 디렉터리에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> 에 포함 된 규칙 목록에 새 감사 규칙을 추가 하는 메서드를 <xref:System.Security.AccessControl.FileSystemSecurity> 개체입니다.  
  
 지정 된 규칙에 대 한 감사 규칙을 이미 있는 경우는 <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> 메서드 규칙 추가 계속 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 합니다 <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> 메서드를 사용 하 여 파일에 감사 규칙을 추가 합니다 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> 파일에서 감사 규칙을 제거 하는 방법입니다.  이 예제를 실행하려면 유효한 사용자 또는 그룹 계정을 제공해야 합니다.  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="override this.AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.AuditRule" Usage="fileSystemSecurity.AuditRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference">사용자 계정을 나타내는 <see cref="T:System.Security.Principal.IdentityReference" /> 개체입니다.</param>
        <param name="accessMask">액세스 형식을 지정하는 정수입니다.</param>
        <param name="isInherited">액세스 규칙이 상속된 것이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="inheritanceFlags">자식 개체에 액세스 마스크를 전파하는 방법을 지정하는 <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 값 중 하나입니다.</param>
        <param name="propagationFlags">자식 개체에 ACE(액세스 제어 항목)를 전파하는 방법을 지정하는 <see cref="T:System.Security.AccessControl.PropagationFlags" /> 값 중 하나입니다.</param>
        <param name="flags">수행할 감사 형식을 지정하는 <see cref="T:System.Security.AccessControl.AuditFlags" /> 값 중 하나입니다.</param>
        <summary>지정된 사용자에 대한 지정된 감사 규칙을 나타내는 <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <returns>지정된 사용자에 대한 지정된 감사 규칙을 나타내는 새 <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 감사 규칙을 만들기 위한 권장된 방법의 생성자를 사용 하는 것은 <xref:System.Security.AccessControl.FileSystemAuditRule> 클래스입니다.  
  
 반환 형식은 합니다 <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory%2A> 메서드는 기본 클래스 <xref:System.Security.AccessControl.AuditRule>, 반환 값을 파생된 클래스도 안전 하 게 캐스팅 될 수 있지만.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> 또는 <paramref name="flags" /> 속성에 잘못된 값을 지정한 경우</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="identityReference" /> 속성이 <see langword="null" />일 경우(이 속성은  
  
또는 
<paramref name="accessMask" /> 속성이 0인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="identityReference" /> 속성이 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 형식이 아니고, <see cref="T:System.Security.Principal.NTAccount" /> 형식으로 변환할 수 있는 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 형식도 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuditRuleType : Type" Usage="System.Security.AccessControl.FileSystemSecurity.AuditRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Security.AccessControl.FileSystemSecurity" /> 클래스에서 감사 규칙을 나타내는 데 사용하는 형식을 가져옵니다.</summary>
        <value><see cref="T:System.Type" /> 클래스를 나타내는 <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생 된 클래스는 <xref:System.Security.AccessControl.FileSystemSecurity> 재정의 클래스를 <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleType%2A> 속성과 감사 권한을 나타내는 데 사용 하는 형식 반환 합니다. 배열 또는 여러 유형의 보안 개체를 포함 하는 컬렉션을 사용 하 여 작업할 때 각 보안 개체에 사용할 올바른 감사 규칙을 확인 하려면이 속성을 사용 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As FileSystemAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; bool" Usage="fileSystemSecurity.RemoveAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">파일이나 디렉터리에서 제거할 ACL(액세스 제어 목록) 권한을 나타내는 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> 개체입니다.</param>
        <summary>현재 파일이나 디렉터리에서 일치하는 모든 허용/거부 ACL(액세스 제어 목록) 권한을 제거합니다.</summary>
        <returns>액세스 규칙이 성공적으로 제거되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> 메서드를 제거 하거나 일치 하는 모든 <xref:System.Security.AccessControl.AccessControlType.Deny> 액세스 규칙 또는 일치 하는 모든 <xref:System.Security.AccessControl.AccessControlType.Allow> 액세스 규칙을 현재에서 <xref:System.Security.AccessControl.FileSystemSecurity> 개체입니다.  모두 제거 하려면이 메서드를 사용할 수는 예를 들어 <xref:System.Security.AccessControl.AccessControlType.Deny> 전달 하 여 사용자에 대 한 액세스를 <xref:System.Security.AccessControl.FileSystemAccessRule> 사용 하 여 만든 개체를 <xref:System.Security.AccessControl.AccessControlType.Deny> 값은 <xref:System.Security.AccessControl.FileSystemRights.Read> 값 및 사용자 계정.  이 작업을 수행 하는 경우는 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> 메서드를 지정 하는 모든 거부 규칙을 제거 합니다 <xref:System.Security.AccessControl.FileSystemRights.Read> 값 또는 <xref:System.Security.AccessControl.FileSystemRights.Write> 값입니다.  
  
 파일에 새롭거나 변경 된 액세스 제어 목록 (ACL) 정보를 유지 하려면 사용 합니다 <xref:System.IO.File.SetAccessControl%2A> 또는 <xref:System.IO.FileInfo.SetAccessControl%2A> 메서드.  디렉터리에 새롭거나 변경 된 ACL 정보를 유지 하려면 사용 합니다 <xref:System.IO.Directory.SetAccessControl%2A> 또는 <xref:System.IO.FileInfo.SetAccessControl%2A> 메서드.  
  
 파일에서 ACL 정보를 검색 하려면 사용 합니다 <xref:System.IO.File.GetAccessControl%2A> 또는 <xref:System.IO.FileInfo.GetAccessControl%2A> 메서드.  디렉터리에서 ACL 정보를 검색 하려면 사용 합니다 <xref:System.IO.Directory.GetAccessControl%2A> 또는 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 메서드.  
  
 설정 하지 않고 액세스 규칙을 추가 하는 경우는 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> 플래그를 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> 규칙에 플래그를 자동으로 추가 됩니다.  지정 하지 않고 나중에 규칙을 제거 하는 경우는 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> 플래그를 플래그를 자동으로 제거 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Security.AccessControl.FileSecurity> 클래스를 추가 하 고 다음 파일에서 액세스 제어 목록 (ACL) 항목을 제거 합니다.  이 예제를 실행하려면 유효한 사용자 또는 그룹 계정을 제공해야 합니다.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleAll (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleAll(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleAll (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleAll(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleAll : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.RemoveAccessRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">파일이나 디렉터리에서 ACL(액세스 제어 목록) 권한을 제거할 사용자를 지정하는 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> 개체입니다.</param>
        <summary>현재 파일이나 디렉터리에서 지정된 사용자의 모든 ACL(액세스 제어 목록) 권한을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll%2A> 메서드는 지정된 된 사용자에 대 한 모든 액세스 제어 목록 (ACL) 권한을 제거 합니다.  모든 값을 무시 하는 메서드는 <xref:System.Security.AccessControl.FileSystemAccessRule> 사용자 계정 제외 하 고 개체입니다.  
  
 파일에 새롭거나 변경 된 ACL 정보를 유지 하려면 사용 합니다 <xref:System.IO.File.SetAccessControl%2A> 또는 <xref:System.IO.FileInfo.SetAccessControl%2A> 메서드.  디렉터리에 새롭거나 변경 된 ACL 정보를 유지 하려면 사용 합니다 <xref:System.IO.Directory.SetAccessControl%2A> 또는 <xref:System.IO.FileInfo.SetAccessControl%2A> 메서드.  
  
 파일에서 ACL 정보를 검색 하려면 사용 합니다 <xref:System.IO.File.GetAccessControl%2A> 또는 <xref:System.IO.FileInfo.GetAccessControl%2A> 메서드.  디렉터리에서 ACL 정보를 검색 하려면 사용 합니다 <xref:System.IO.Directory.GetAccessControl%2A> 또는 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 메서드.  
  
 설정 하지 않고 액세스 규칙을 추가 하는 경우는 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> 플래그를 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> 규칙에 플래그를 자동으로 추가 됩니다.  지정 하지 않고 나중에 규칙을 제거 하는 경우는 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> 플래그를 플래그를 자동으로 제거 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleSpecific : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.RemoveAccessRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">파일이나 디렉터리에서 ACL(액세스 제어 목록) 권한을 제거할 사용자를 지정하는 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> 개체입니다.</param>
        <summary>현재 파일이나 디렉터리에서 일치하는 특정 허용/거부 ACL(액세스 제어 목록) 권한을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> 메서드는 지정 된 제거 <xref:System.Security.AccessControl.AccessControlType.Deny> 규칙 또는 일치 하는 지정 된 액세스 <xref:System.Security.AccessControl.AccessControlType.Allow> 현재에서 액세스 규칙 <xref:System.Security.AccessControl.FileSystemSecurity> 개체입니다.  예를 들어, 지정 된 제거 하려면이 메서드를 사용할 수 있습니다 <xref:System.Security.AccessControl.AccessControlType.Deny> 전달 하 여 사용자에 대 한 액세스 규칙을 <xref:System.Security.AccessControl.FileSystemAccessRule> 사용 하 여 만든 개체를 <xref:System.Security.AccessControl.AccessControlType.Deny> 값을 <xref:System.Security.AccessControl.FileSystemRights.Read> 값 및 사용자 계정.  이 작업을 수행 하는 경우는 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> 메서드를 지정 하는 거부 규칙을 제거 합니다 <xref:System.Security.AccessControl.FileSystemRights.Read> 값입니다.  지정 된 거부 규칙을 제거 하지 않습니다는 <xref:System.Security.AccessControl.FileSystemRights.Write> 값입니다.  
  
 파일에 새롭거나 변경 된 액세스 제어 목록 (ACL) 정보를 유지 하려면 사용 합니다 <xref:System.IO.File.SetAccessControl%2A> 또는 <xref:System.IO.FileInfo.SetAccessControl%2A> 메서드.  디렉터리에 새롭거나 변경 된 ACL 정보를 유지 하려면 사용 합니다 <xref:System.IO.Directory.SetAccessControl%2A> 또는 <xref:System.IO.FileInfo.SetAccessControl%2A> 메서드.  
  
 파일에서 ACL 정보를 검색 하려면 사용 합니다 <xref:System.IO.File.GetAccessControl%2A> 또는 <xref:System.IO.FileInfo.GetAccessControl%2A> 메서드.  디렉터리에서 ACL 정보를 검색 하려면 사용 합니다 <xref:System.IO.Directory.GetAccessControl%2A> 또는 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 메서드.  
  
 설정 하지 않고 액세스 규칙을 추가 하는 경우는 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> 플래그를 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> 규칙에 플래그를 자동으로 추가 됩니다.  지정 하지 않고 나중에 규칙을 제거 하는 경우는 <xref:System.Security.AccessControl.FileSystemRights.Synchronize> 플래그를 플래그를 자동으로 제거 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As FileSystemAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRule : System.Security.AccessControl.FileSystemAuditRule -&gt; bool" Usage="fileSystemSecurity.RemoveAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">파일이나 디렉터리에서 제거할 감사 규칙을 나타내는 <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> 개체입니다.</param>
        <summary>현재 파일이나 디렉터리에서 일치하는 모든 허용/거부 감사 규칙을 제거합니다.</summary>
        <returns>감사 규칙이 성공적으로 제거되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> 메서드를 제거 하거나 일치 하는 모든 <xref:System.Security.AccessControl.AccessControlType.Deny> 감사 규칙 또는 일치 하는 모든 <xref:System.Security.AccessControl.AccessControlType.Allow> 감사는 현재 규칙 <xref:System.Security.AccessControl.FileSystemSecurity> 개체입니다.  모두 제거 하려면이 메서드를 사용할 수는 예를 들어 <xref:System.Security.AccessControl.AccessControlType.Deny> 전달 하 여 사용자에 대 한 규칙을 감사를 <xref:System.Security.AccessControl.FileSystemAuditRule> 사용 하 여 만든 개체를 <xref:System.Security.AccessControl.AccessControlType.Deny> 값을 <xref:System.Security.AccessControl.AuditFlags.Failure> 값 및 사용자 계정.  이 작업을 수행 하는 경우는 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> 메서드를 지정 하는 모든 거부 규칙을 제거 합니다 <xref:System.Security.AccessControl.AuditFlags.Failure> 값 또는 <xref:System.Security.AccessControl.AuditFlags.Success> 값입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 합니다 <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> 메서드를 사용 하 여 파일에 감사 규칙을 추가 합니다 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> 파일에서 감사 규칙을 제거 하는 방법입니다.  이 예제를 실행하려면 유효한 사용자 또는 그룹 계정을 제공해야 합니다.  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleAll (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleAll(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleAll (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleAll(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleAll : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.RemoveAuditRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">파일이나 디렉터리에서 감사 규칙을 제거할 사용자를 지정하는 <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> 개체입니다.</param>
        <summary>현재 파일이나 디렉터리에서 지정된 사용자의 모든 감사 규칙을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll%2A> 메서드는 지정된 된 사용자에 대 한 모든 감사 규칙을 제거 합니다.  모든 값을 무시 합니다 <xref:System.Security.AccessControl.FileSystemAuditRule> 사용자 계정 제외 하 고 개체입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleSpecific : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.RemoveAuditRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">파일이나 디렉터리에서 제거할 감사 규칙을 나타내는 <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> 개체입니다.</param>
        <summary>현재 파일이나 디렉터리에서 일치하는 특정 허용/거부 감사 규칙을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> 메서드는 일치 하는 지정 된 제거 <xref:System.Security.AccessControl.AccessControlType.Deny> 규칙 또는 일치 하는 지정 된 감사 <xref:System.Security.AccessControl.AccessControlType.Allow> 현재에서 감사 규칙 <xref:System.Security.AccessControl.FileSystemSecurity> 개체입니다.  예를 들어, 지정 된 제거 하려면이 메서드를 사용할 수 있습니다 <xref:System.Security.AccessControl.AccessControlType.Deny> 전달 하 여 사용자에 대 한 감사 규칙을 <xref:System.Security.AccessControl.FileSystemAuditRule> 사용 하 여 만든 개체를 <xref:System.Security.AccessControl.AccessControlType.Deny> 값을 <xref:System.Security.AccessControl.AuditFlags.Failure> 값 및 사용자 계정.  이 작업을 수행 하는 경우는 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> 메서드를 지정 하는 거부 규칙을 제거 합니다 <xref:System.Security.AccessControl.AuditFlags.Failure> 값입니다.  지정 된 거부 규칙을 제거 하지 않습니다는 <xref:System.Security.AccessControl.AuditFlags.Success> 값입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.ResetAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.ResetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">파일이나 디렉터리에 추가할 ACL(액세스 제어 목록) 권한을 나타내는 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> 개체입니다.</param>
        <summary>지정된 ACL(액세스 제어 목록) 권한을 현재 파일이나 디렉터리에 추가하고 일치하는 모든 ACL 권한을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> 메서드는 지정 된 액세스 제어 목록 (ACL) 규칙을 추가 또는 일치 하는 모든 동일한 ACL 규칙을 덮어씁니다를 `rule` 매개 변수입니다.  예를 들어 경우는 `rule` 매개 변수를 지정을 <xref:System.Security.AccessControl.FileSystemRights.Read> 값 및 <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> 메서드를 지정 하는 동일한 ACL 규칙을 찾습니다는 <xref:System.Security.AccessControl.FileSystemRights.Read> 값 동일한 규칙을 덮어씁니다.  경우는 <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> 메서드를 지정 하는 동일한 ACL 규칙을 찾습니다는 <xref:System.Security.AccessControl.FileSystemRights.Write> 값 동일한 규칙 또한를 덮어쓰게 됩니다.  
  
 파일에 새롭거나 변경 된 ACL 정보를 유지 하려면 사용 합니다 <xref:System.IO.File.SetAccessControl%2A> 또는 <xref:System.IO.FileInfo.SetAccessControl%2A> 메서드.  디렉터리에 새롭거나 변경 된 ACL 정보를 유지 하려면 사용 합니다 <xref:System.IO.Directory.SetAccessControl%2A> 또는 <xref:System.IO.FileInfo.SetAccessControl%2A> 메서드.  
  
 파일에서 ACL 정보를 검색 하려면 사용 합니다 <xref:System.IO.File.GetAccessControl%2A> 또는 <xref:System.IO.FileInfo.GetAccessControl%2A> 메서드.  디렉터리에서 ACL 정보를 검색 하려면 사용 합니다 <xref:System.IO.Directory.GetAccessControl%2A> 또는 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.SetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">파일이나 디렉터리에 설정할 ACL(액세스 제어 목록) 권한을 나타내는 <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> 개체입니다.</param>
        <summary>지정된 ACL(액세스 제어 목록) 권한을 현재 파일이나 디렉터리에 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> 메서드는 지정 된 액세스 제어 목록 (ACL) 규칙을 추가 또는 일치 하는 모든 동일한 ACL 규칙을 덮어씁니다를 <xref:System.Security.AccessControl.FileSystemRights> 의 값을 `rule` 매개 변수입니다.  예를 들어 경우는 `rule` 매개 변수를 지정을 <xref:System.Security.AccessControl.FileSystemRights.Read> 값 및 <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> 메서드를 지정 하는 동일한 ACL 규칙을 찾습니다는 <xref:System.Security.AccessControl.FileSystemRights.Read> 값 동일한 규칙을 덮어씁니다.  경우는 <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> 메서드를 지정 하는 동일한 ACL 규칙을 찾습니다는 <xref:System.Security.AccessControl.FileSystemRights.Write> 값 동일한 규칙이 없습니다를 덮어쓰게 됩니다.  
  
 파일에 새롭거나 변경 된 ACL 정보를 유지 하려면 사용 합니다 <xref:System.IO.File.SetAccessControl%2A> 또는 <xref:System.IO.FileInfo.SetAccessControl%2A> 메서드.  디렉터리에 새롭거나 변경 된 ACL 정보를 유지 하려면 사용 합니다 <xref:System.IO.Directory.SetAccessControl%2A> 또는 <xref:System.IO.FileInfo.SetAccessControl%2A> 메서드.  
  
 파일에서 ACL 정보를 검색 하려면 사용 합니다 <xref:System.IO.File.GetAccessControl%2A> 또는 <xref:System.IO.FileInfo.GetAccessControl%2A> 메서드.  디렉터리에서 ACL 정보를 검색 하려면 사용 합니다 <xref:System.IO.Directory.GetAccessControl%2A> 또는 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAuditRule : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.SetAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">파일이나 디렉터리에 설정할 감사 규칙을 나타내는 <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> 개체입니다.</param>
        <summary>지정된 감사 규칙을 현재 파일이나 디렉터리에 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> 메서드는 지정 된 감사 규칙을 추가 또는 일치 하는 모든 동일한 감사 규칙을 덮어씁니다를 <xref:System.Security.AccessControl.FileSystemRights> 의 값을 `rule` 매개 변수입니다.  예를 들어 경우는 `rule` 매개 변수를 지정을 <xref:System.Security.AccessControl.FileSystemRights.Read> 값 및 <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> 메서드를 지정 하는 동일한 감사 규칙을 찾습니다는 <xref:System.Security.AccessControl.FileSystemRights.Read> 값 동일한 규칙을 덮어씁니다.  경우는 <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> 메서드를 지정 하는 동일한 감사 규칙을 찾습니다는 <xref:System.Security.AccessControl.FileSystemRights.Write> 값 동일한 규칙이 없습니다를 덮어쓰게 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> 매개 변수가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
  </Members>
</Type>