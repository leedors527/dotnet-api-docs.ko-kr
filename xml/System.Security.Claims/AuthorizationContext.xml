<Type Name="AuthorizationContext" FullName="System.Security.Claims.AuthorizationContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d43a0f74c03bb57b03eed3834487dba58ccaf3e" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36531785" /></Metadata><TypeSignature Language="C#" Value="public class AuthorizationContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthorizationContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Claims.AuthorizationContext" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthorizationContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthorizationContext" />
  <TypeSignature Language="F#" Value="type AuthorizationContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>권한 부여 이벤트의 컨텍스트 정보를 제공합니다. 여기에는 호출자를 나타내는 주체, 요청 중인 리소스 및 수행 중인 작업이 포함됩니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Claims.AuthorizationContext> 클래스는 클레임 권한 부여 관리자의 구현에서 사용 되는 컨텍스트를 나타냅니다는 <xref:System.Security.Claims.ClaimsAuthorizationManager> 클래스에 보안 주체 (제목)에 지정된 된 리소스에 지정 된 작업을 수행할 권한이 부여 되어야 하는지 여부를 결정 합니다. 권한 부여 컨텍스트를 평가 하는 클레임 권한 부여 관리자는 <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A> 메서드와 하거나 거부 하거나 사용자에 의해 표시 되는 클레임을 기반으로 액세스를 부여 합니다.  
  
 <xref:System.Security.Claims.AuthorizationContext.Principal%2A> 속성에는 권한 부여 요청 하는 보안 주체가 포함 되어 있습니다 합니다 <xref:System.Security.Claims.AuthorizationContext.Resource%2A> 는 보안 주체는 권한이 부여 될 리소스를 포함 하는 속성 및 <xref:System.Security.Claims.AuthorizationContext.Action%2A> 속성 동작을 포함 하는 보안 주체가 리소스에서 수행 하는입니다. 리소스와 작업을 모두 클레임의 컬렉션으로 표시 됩니다. 그러나 대부분의 경우, 각 컬렉션에 단일 클레임을 포함합니다.  
  
   
  
## Examples  
 에 사용 되는 코드 예제는 <xref:System.Security.Claims.AuthorizationContext> 항목에서 가져온 것은 `Claims Based Authorization` 샘플입니다. 이 샘플 구성에 지정 된 정책에 따라 주체 권한을 부여할 수 있는 사용자 지정 클레임 권한 부여 관리자를 제공 합니다. 이 사용자 지정 관리자 세 가지 기본 구성 요소로 이루어져:에서 파생 된 클래스 <xref:System.Security.Claims.ClaimsAuthorizationManager> 관리자를 구현 하는 `ResourceAction` 리소스 및 작업을 하는 클래스 및 정책 판독기를 읽고 정책에 지정 된 컴파일는 구성 파일입니다. 이 정책 수를 컴파일된 다음 리소스에 대 한 액세스 권한을 부여 하기 위해 보안 주체를 평가 하기 위해 클레임 인증 관리자에서 사용할 수 있습니다. 일부 요소는 간단히 하기 위해 표시 됩니다. 이 샘플 및 사용할 수 있는 다른 샘플에 대 한 WIF에 대 한 다운로드 위치에 대 한, 참조 [WIF 코드 샘플 인덱스](~/docs/framework/security/wif-code-sample-index.md)합니다.  
  
 다음 코드에서는 <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A> 메서드는 사용자 지정 클레임 권한 부여 관리자에 대 한 합니다. 보안 주체는 함수 및 기준으로 리소스에 지정 된 작업을 <xref:System.Security.Claims.AuthorizationContext> 가 호출 됩니다. 이 함수를 반환 하거나 `true` 또는 `false`, 부여 또는 보안 주체에 대 한 액세스를 거부 하는 합니다.  
  
 [!code-csharp[WifClaimsBasedAuthorization#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifclaimsbasedauthorization/cs/claimsauthorizationlibrary/myclaimsauthorizationmanager.cs#3)]  
[!code-csharp[WifClaimsBasedAuthorization#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifclaimsbasedauthorization/cs/claimsauthorizationlibrary/myclaimsauthorizationmanager.cs#5)]  
  
 다음 XML 구성에 지정 된 권한 부여 정책의 예를 보여 줍니다. 첫 번째 정책에서 하나 지정된 된 리소스에서 지정 된 작업을 수행 하기 위해 지정된 된 클레임 보안 주체가 있어야 합니다. 두 번째 정책에서 보안 주체 모두 클레임을 지정된 된 리소스에서 지정 된 작업을 수행할 수 있어야 합니다. 나머지 모든 보안 주체가 소유 하는 클레임에 관계 없이 액세스를 자동으로 부여 됩니다.  
  
```xml  
<system.identityModel>  
  <identityConfiguration>  
    <claimsAuthorizationManager type="ClaimsAuthorizationLibrary.MyClaimsAuthorizationManager, ClaimsAuthorizationLibrary">  
      <policy resource="http://localhost:28491/Developers.aspx" action="GET">  
        <or>  
          <claim claimType="http://schemas.microsoft.com/ws/2008/06/identity/claims/role" claimValue="developer" />  
          <claim claimType="http://schemas.xmlsoap.org/claims/Group" claimValue="Administrator" />  
        </or>  
      </policy>  
      <policy resource="http://localhost:28491/Administrators.aspx" action="GET">  
        <and>  
          <claim claimType="http://schemas.xmlsoap.org/claims/Group" claimValue="Administrator" />  
          <claim claimType="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/country" claimValue="USA" />  
        </and>  
      </policy>  
      <policy resource="http://localhost:28491/Default.aspx" action="GET">  
      </policy>  
      <policy resource="http://localhost:28491/" action="GET">  
      </policy>  
      <policy resource="http://localhost:28491/Claims.aspx" action="GET">  
      </policy>  
    </claimsAuthorizationManager>  
  
    ...  
  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Security.Claims.AuthorizationContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthorizationContext (System.Security.Claims.ClaimsPrincipal principal, System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt; resource, System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal principal, class System.Collections.ObjectModel.Collection`1&lt;class System.Security.Claims.Claim&gt; resource, class System.Collections.ObjectModel.Collection`1&lt;class System.Security.Claims.Claim&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.AuthorizationContext.#ctor(System.Security.Claims.ClaimsPrincipal,System.Collections.ObjectModel.Collection{System.Security.Claims.Claim},System.Collections.ObjectModel.Collection{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (principal As ClaimsPrincipal, resource As Collection(Of Claim), action As Collection(Of Claim))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthorizationContext(System::Security::Claims::ClaimsPrincipal ^ principal, System::Collections::ObjectModel::Collection&lt;System::Security::Claims::Claim ^&gt; ^ resource, System::Collections::ObjectModel::Collection&lt;System::Security::Claims::Claim ^&gt; ^ action);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.AuthorizationContext : System.Security.Claims.ClaimsPrincipal * System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt; * System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt; -&gt; System.Security.Claims.AuthorizationContext" Usage="new System.Security.Claims.AuthorizationContext (principal, resource, action)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="resource" Type="System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt;" />
        <Parameter Name="action" Type="System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="principal">권한 부여가 확인되는 보안 주체입니다.</param>
        <param name="resource">권한이 부여될 보안 주체의 리소스를 나타내는 클레임의 컬렉션입니다. 컬렉션에는 일반적으로 단일 요소가 들어 있습니다.</param>
        <param name="action">리소스에 수행될 작업을 나타내는 클레임의 컬렉션입니다. 컬렉션에는 일반적으로 단일 요소가 들어 있습니다.</param>
        <summary>지정된 보안 주체, 리소스 클레임과 작업 클레임을 사용하여 <see cref="T:System.Security.Claims.AuthorizationContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="principal" />가 <see langword="null" />인 경우  
  
또는 
 <paramref name="resource" />가 <see langword="null" />인 경우  
  
또는 
 <paramref name="action" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthorizationContext (System.Security.Claims.ClaimsPrincipal principal, string resource, string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal principal, string resource, string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.AuthorizationContext.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (principal As ClaimsPrincipal, resource As String, action As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthorizationContext(System::Security::Claims::ClaimsPrincipal ^ principal, System::String ^ resource, System::String ^ action);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.AuthorizationContext : System.Security.Claims.ClaimsPrincipal * string * string -&gt; System.Security.Claims.AuthorizationContext" Usage="new System.Security.Claims.AuthorizationContext (principal, resource, action)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="resource" Type="System.String" />
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="principal">권한 부여가 확인되는 보안 주체입니다.</param>
        <param name="resource">권한을 부여할 주체에 대한 리소스입니다. 리소스는 이름 클레임의 값으로 지정됩니다.</param>
        <param name="action">리소스에 대해 수행할 작업입니다. 해당 작업은 이름 클레임의 값으로 지정됩니다.</param>
        <summary>지정된 보안 주체, 리소스 이름과 작업 이름을 사용하여 <see cref="T:System.Security.Claims.AuthorizationContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Security.Claims.AuthorizationContext.Action%2A> 속성은 이름 클레임을 포함 하도록 초기화 (<xref:System.Security.Claims.ClaimTypes.Name?displayProperty=nameWithType>)에 의해 지정 된 값을 `action` 매개 변수입니다. 합니다 <xref:System.Security.Claims.AuthorizationContext.Resource%2A> 속성에 지정 된 값을 포함 하는 이름 클레임을 포함 하도록 초기화 됩니다는 `resource` 매개 변수입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="principal" />가 <see langword="null" />인 경우  
  
또는 
 <paramref name="resource" />가 <see langword="null" />인 경우  
  
또는 
 <paramref name="action" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt; Action { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Security.Claims.Claim&gt; Action" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.AuthorizationContext.Action" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Action As Collection(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Security::Claims::Claim ^&gt; ^ Action { System::Collections::ObjectModel::Collection&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Action : System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Claims.AuthorizationContext.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>주체에 대해 권한을 부여할 작업을 가져옵니다.</summary>
        <value>요청과 관련된 동작을 나타내는 클레임의 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컬렉션에는 일반적으로 단일 요소가 들어 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Principal">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsPrincipal Principal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsPrincipal Principal" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.AuthorizationContext.Principal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Principal As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Claims::ClaimsPrincipal ^ Principal { System::Security::Claims::ClaimsPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Principal : System.Security.Claims.ClaimsPrincipal" Usage="System.Security.Claims.AuthorizationContext.Principal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>권한 부여가 요청되는 보안 주체를 가져옵니다.</summary>
        <value>권한 부여가 요청되는 보안 주체입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resource">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt; Resource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Security.Claims.Claim&gt; Resource" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.AuthorizationContext.Resource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Resource As Collection(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Security::Claims::Claim ^&gt; ^ Resource { System::Collections::ObjectModel::Collection&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Resource : System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Claims.AuthorizationContext.Resource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>권한을 부여할 주체에 대한 리소스를 가져옵니다.</summary>
        <value>리소스를 나타내는 클레임의 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컬렉션에는 일반적으로 단일 요소가 들어 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>