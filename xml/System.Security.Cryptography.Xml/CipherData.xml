<Type Name="CipherData" FullName="System.Security.Cryptography.Xml.CipherData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3d705611779fa59bb0be6e865ef2f86ad6b003f6" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56763586" /></Metadata><TypeSignature Language="C#" Value="public sealed class CipherData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CipherData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.CipherData" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CipherData" />
  <TypeSignature Language="C++ CLI" Value="public ref class CipherData sealed" />
  <TypeSignature Language="F#" Value="type CipherData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>XML 암호화의 <see langword="&lt;CipherData&gt;" /> 요소를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Security.Cryptography.Xml.CipherData> 나타내는 클래스를 `<CipherData>` XML 암호화의 요소입니다. 암호화 된 데이터를 제공 하는 필수 요소입니다. 하거나 암호화 된 데이터의 base64로 인코딩된 텍스트를 포함 해야 합니다는 `<CipherValue>` 요소를 사용 하 여 암호화 된 데이터를 포함 하는 외부 위치에 대 한 참조를 제공 하거나는 `<CipherReference>` 요소입니다.  
  
 대부분의 경우 직접의 새 인스턴스를 만들 필요가 <xref:System.Security.Cryptography.Xml.CipherData> 클래스입니다.  합니다 <xref:System.Security.Cryptography.Xml.SignedXml.EncryptedXml%2A>, <xref:System.Security.Cryptography.Xml.EncryptedData>, 및 <xref:System.Security.Cryptography.Xml.EncryptedKey> 클래스 인스턴스를 만들 수도 있습니다.  
  
> [!NOTE]
>  <xref:System.Security.Cryptography.Xml.CipherData> 개체 중 하나를 가질 수는 <xref:System.Security.Cryptography.Xml.CipherReference> 속성 또는 <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> 속성, 하지만 둘 다. A <xref:System.Security.Cryptography.CryptographicException> 둘 다에 할당 된 경우 throw 되는 <xref:System.Security.Cryptography.Xml.CipherData> 개체입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 합니다 <xref:System.Security.Cryptography.Xml.EncryptedData> 만들 클래스는 <`EncryptedData`> 포함 하는 요소는 <`CipherData`> 요소와 XML XML 파일로 씁니다.  
  
 [!code-cpp[cryptgraphy.Xml.EncryptedData#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/cpp/encrypteddata.cpp#1)]
 [!code-csharp[cryptgraphy.Xml.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/CS/encrypteddata.cs#1)]
 [!code-vb[cryptgraphy.Xml.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/VB/encrypteddata.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Security.Cryptography.Xml.CipherData" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CipherData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CipherData();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Security.Cryptography.Xml.CipherData" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 만듭니다는 <xref:System.Security.Cryptography.Xml.CipherData> 나타내는 개체를 `<CipherData>` XML 암호화의 요소입니다. `<CipherData>` XML 암호화의 필수 요소입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Security.Cryptography.Xml.CipherData> 클래스의 새 인스턴스를 만드는 방법을 보여 줍니다. 전체 샘플을 찾을 수 있습니다는 <xref:System.Security.Cryptography.Xml.CipherData> 클래스 항목입니다.  
  
 [!code-cpp[cryptgraphy.Xml.EncryptedData#2](~/samples/snippets/cpp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/cpp/encrypteddata.cpp#2)]
 [!code-csharp[cryptgraphy.Xml.EncryptedData#2](~/samples/snippets/csharp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/CS/encrypteddata.cs#2)]
 [!code-vb[cryptgraphy.Xml.EncryptedData#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/VB/encrypteddata.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CipherData (byte[] cipherValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] cipherValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherData.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cipherValue As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CipherData(cli::array &lt;System::Byte&gt; ^ cipherValue);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.CipherData : byte[] -&gt; System.Security.Cryptography.Xml.CipherData" Usage="new System.Security.Cryptography.Xml.CipherData cipherValue" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cipherValue" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="cipherValue"><see langword="&lt;CipherValue&gt;" /> 요소에 사용할 암호화된 데이터입니다.</param>
        <summary>바이트 배열을 <see cref="T:System.Security.Cryptography.Xml.CipherData" /> 값으로 사용하여 <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 만듭니다는 <xref:System.Security.Cryptography.Xml.CipherData> 나타내는 개체를 `<CipherData>` XML 암호화의 요소입니다. 생성자를 할당 합니다 `cipherValue` 값을 <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> 실제 속성 데이터를 암호화 합니다.  
  
> [!NOTE]
>  `<CipherData>` 요소 중 하나를 포함할 수 있습니다를 <xref:System.Security.Cryptography.Xml.CipherReference> 또는 <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> 자식 요소가 하나만 있습니다. A <xref:System.Security.Cryptography.CryptographicException> 둘 다에 할당 된 경우 throw 되는 <xref:System.Security.Cryptography.Xml.CipherData> 개체입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Security.Cryptography.Xml.CipherData> 클래스의 새 인스턴스를 만드는 방법을 보여 줍니다.  
  
 [!code-cpp[cryptography.Xml.EncryptedData2#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/CPP/encrypteddata.cpp#1)]
 [!code-csharp[cryptography.Xml.EncryptedData2#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/CS/encrypteddata.cs#1)]
 [!code-vb[cryptography.Xml.EncryptedData2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/VB/encrypteddata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="cipherValue" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> 속성이 이미 설정되어 있는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CipherData (System.Security.Cryptography.Xml.CipherReference cipherReference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.Xml.CipherReference cipherReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherData.#ctor(System.Security.Cryptography.Xml.CipherReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CipherData(System::Security::Cryptography::Xml::CipherReference ^ cipherReference);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.CipherData : System.Security.Cryptography.Xml.CipherReference -&gt; System.Security.Cryptography.Xml.CipherData" Usage="new System.Security.Cryptography.Xml.CipherData cipherReference" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cipherReference" Type="System.Security.Cryptography.Xml.CipherReference" />
      </Parameters>
      <Docs>
        <param name="cipherReference">사용할 <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> 개체입니다.</param>
        <summary><see cref="T:System.Security.Cryptography.Xml.CipherData" /> 개체를 사용하여 <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 만듭니다는 <xref:System.Security.Cryptography.Xml.CipherData> 나타내는 개체를 `<CipherData>` XML 암호화 요소 할당을 `cipherReference` 값을 <xref:System.Security.Cryptography.Xml.CipherReference> 속성. 합니다 <xref:System.Security.Cryptography.Xml.CipherReference> 개체가 나타내는 `<CipherReference>` 암호화 된 데이터의 위치를 제공 하는 요소입니다.  
  
> [!NOTE]
>  <xref:System.Security.Cryptography.Xml.CipherData> 개체 중 하나를 가질 수는 <xref:System.Security.Cryptography.Xml.CipherReference> 속성 또는 <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> 속성, 하지만 둘 다. A <xref:System.Security.Cryptography.CryptographicException> 둘 다에 할당 된 경우 throw 되는 <xref:System.Security.Cryptography.Xml.CipherData> 개체입니다.  
  
   
  
## Examples  
 다음 코드 예제에는의 새 인스턴스를 만드는 방법을 보여 줍니다 합니다 <xref:System.Security.Cryptography.Xml.CipherData> 클래스를 사용 하 여 <xref:System.Security.Cryptography.Xml.CipherReference> 정보입니다.  
  
 [!code-cpp[cryptography.Xml.CipherReference#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CPP/example.cpp#1)]
 [!code-csharp[cryptography.Xml.CipherReference#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CS/example.cs#1)]
 [!code-vb[cryptography.Xml.CipherReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.CipherReference/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="cipherValue" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> 속성이 이미 설정되어 있는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="CipherReference">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.CipherReference CipherReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.CipherReference CipherReference" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.CipherData.CipherReference" />
      <MemberSignature Language="VB.NET" Value="Public Property CipherReference As CipherReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::CipherReference ^ CipherReference { System::Security::Cryptography::Xml::CipherReference ^ get(); void set(System::Security::Cryptography::Xml::CipherReference ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CipherReference : System.Security.Cryptography.Xml.CipherReference with get, set" Usage="System.Security.Cryptography.Xml.CipherData.CipherReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.CipherReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="&lt;CipherReference&gt;" /> 요소를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Security.Cryptography.Xml.CipherReference" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `<CipherReference>` 소스를 식별 하는 요소는 처리 될 때 암호화 된 데이터를 생성 합니다. 이 요소에 대 한 자세한 내용은 참조 하세요. <xref:System.Security.Cryptography.Xml.CipherReference>합니다.  
  
> [!NOTE]
>  <xref:System.Security.Cryptography.Xml.CipherData> 개체 중 하나를 가질 수는 <xref:System.Security.Cryptography.Xml.CipherReference> 속성 또는 <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> 속성, 하지만 둘 다. A <xref:System.Security.Cryptography.CryptographicException> 둘 다에 할당 된 경우 throw 되는 <xref:System.Security.Cryptography.Xml.CipherData> 개체입니다.  
  
   
  
## Examples  
 다음 코드 예제에는의 새 인스턴스를 만드는 방법을 보여 줍니다 합니다 <xref:System.Security.Cryptography.Xml.CipherData> 클래스를 사용 하 여 <xref:System.Security.Cryptography.Xml.CipherReference> 정보입니다.  
  
 [!code-cpp[cryptography.Xml.CipherReference#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CPP/example.cpp#1)]
 [!code-csharp[cryptography.Xml.CipherReference#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CS/example.cs#1)]
 [!code-vb[cryptography.Xml.CipherReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.CipherReference/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" /> 속성이 <see langword="null" />로 설정된 경우</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" /> 속성이 두 번 이상 설정된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="CipherValue">
      <MemberSignature Language="C#" Value="public byte[] CipherValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] CipherValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.CipherData.CipherValue" />
      <MemberSignature Language="VB.NET" Value="Public Property CipherValue As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ CipherValue { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CipherValue : byte[] with get, set" Usage="System.Security.Cryptography.Xml.CipherData.CipherValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="&lt;CipherValue&gt;" /> 요소를 가져오거나 설정합니다.</summary>
        <value><see langword="&lt;CipherValue&gt;" /> 요소를 나타내는 바이트 배열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값은 암호화 된 데이터입니다.  
  
> [!NOTE]
>  `<CipherData>` 요소 중 하나를 포함할 수 있습니다를 <xref:System.Security.Cryptography.Xml.CipherReference> 또는 <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> 자식 요소가 하나만 있습니다. A <xref:System.Security.Cryptography.CryptographicException> 둘 다에 할당 된 경우 throw 되는 <xref:System.Security.Cryptography.Xml.CipherData> 개체입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Security.Cryptography.Xml.CipherData> 클래스의 새 인스턴스를 만드는 방법을 보여 줍니다.  
  
 [!code-cpp[cryptography.Xml.EncryptedData2#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/CPP/encrypteddata.cpp#1)]
 [!code-csharp[cryptography.Xml.EncryptedData2#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/CS/encrypteddata.cs#1)]
 [!code-vb[cryptography.Xml.EncryptedData2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/VB/encrypteddata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> 속성이 <see langword="null" />로 설정된 경우</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> 속성이 두 번 이상 설정된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherData.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ GetXml();" />
      <MemberSignature Language="F#" Value="member this.GetXml : unit -&gt; System.Xml.XmlElement" Usage="cipherData.GetXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Security.Cryptography.Xml.CipherData" /> 개체의 XML 값을 가져옵니다.</summary>
        <returns><see cref="T:System.Xml.XmlElement" /> 개체에 대한 XML 정보를 나타내는 <see cref="T:System.Security.Cryptography.Xml.CipherData" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하 여에 대 한 XML 출력을 <xref:System.Security.Cryptography.Xml.CipherData> 개체입니다.  
  
   
  
## Examples  
 다음 코드 예제에는의 새 인스턴스를 만드는 방법을 보여 줍니다는 <xref:System.Security.Cryptography.Xml.CipherData> 개체입니다.  
  
 [!code-cpp[cryptgraphy.Xml.EncryptedData#2](~/samples/snippets/cpp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/cpp/encrypteddata.cpp#2)]
 [!code-csharp[cryptgraphy.Xml.EncryptedData#2](~/samples/snippets/csharp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/CS/encrypteddata.cs#2)]
 [!code-vb[cryptgraphy.Xml.EncryptedData#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/VB/encrypteddata.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> 속성과 <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" /> 속성이 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherData.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberSignature Language="F#" Value="member this.LoadXml : System.Xml.XmlElement -&gt; unit" Usage="cipherData.LoadXml value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">로드할 XML 데이터를 나타내는 <see cref="T:System.Xml.XmlElement" />입니다.</param>
        <summary><see cref="T:System.Xml.XmlElement" />의 XML 데이터를 <see cref="T:System.Security.Cryptography.Xml.CipherData" /> 개체로 로드합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Security.Cryptography.Xml.CipherData.LoadXml%2A> 메서드는 기존 XML 요소를 덮어씁니다를 `value` 매개 변수입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> 속성과 <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" /> 속성이 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
  </Members>
</Type>