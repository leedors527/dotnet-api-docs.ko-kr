<Type Name="CspParameters" FullName="System.Security.Cryptography.CspParameters">
  <Metadata><Meta Name="ms.openlocfilehash" Value="aa865685f1ff5f1ec9e821f08208a23b1037f40d" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58709159" /></Metadata><TypeSignature Language="C#" Value="public sealed class CspParameters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CspParameters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CspParameters" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CspParameters" />
  <TypeSignature Language="C++ CLI" Value="public ref class CspParameters sealed" />
  <TypeSignature Language="F#" Value="type CspParameters = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>암호화 계산을 수행하는 CSP(암호화 서비스 공급자)에 전달된 매개 변수가 들어 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.CspParameters> 클래스는 내부적으로 Microsoft 암호화 서비스 공급자 (Csp)에서 관리 되지 않는 Microsoft 암호화 API (CAPI)를 사용 하는 관리 되는 암호화 클래스에 전달할 수 있는 매개 변수를 나타냅니다. "CryptoServiceProvider"로 끝나는 이름의 클래스는 해당 CSP에 대 한 관리 코드 래퍼입니다.  
  
 사용 된 <xref:System.Security.Cryptography.CspParameters> 다음을 수행 하는 클래스:  
  
-   특정 CSP의 공급자 형식을 전달 하 여 지정 된 <xref:System.Security.Cryptography.CspParameters.ProviderType> 또는 <xref:System.Security.Cryptography.CspParameters.ProviderName> 속성입니다.  또한 생성자의 오버 로드를 사용 하 여 CSP를 지정할 수 있습니다.  
  
-   암호화 키를 저장할 수 있는 키 컨테이너를 만듭니다.  키 컨테이너에는 암호화 키를 유지 하 고 악의적인 제 3 자에서 비밀로 유지 하세요는 가장 안전한 방법을 제공 합니다.  키 컨테이너를 만드는 방법에 대 한 자세한 내용은 참조 하세요. [방법: 키 컨테이너에 비대칭 키 저장](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md)합니다.  
  
-   비대칭 서명 키 또는 비대칭 교환 키 사용을 만들지 여부를 지정 합니다 <xref:System.Security.Cryptography.CspParameters.KeyNumber> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하 여 키 컨테이너를 만듭니다.는 <xref:System.Security.Cryptography.CspParameters> 클래스 및 컨테이너에 키를 저장 합니다.  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 다음 코드 예제에서는 <xref:System.Security.Cryptography.CspParameters> 클래스 스마트 카드 암호화 서비스 공급자를 선택 합니다.  그런 다음 서명 하 고 스마트 카드를 사용 하 여 데이터를 확인 합니다.  
  
 [!code-cpp[Cryptography.SmartCardCSP#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CPP/Cryptography.SmartCardCSP.cpp#1)]
 [!code-csharp[Cryptography.SmartCardCSP#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CS/example.cs#1)]
 [!code-vb[Cryptography.SmartCardCSP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.SmartCardCSP/VB/example.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md">암호화 서비스</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Security.Cryptography.CspParameters" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Security.Cryptography.CspParameters" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이러한 형태의 <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> 를 초기화 합니다 <xref:System.Security.Cryptography.CspParameters.ProviderType> 필드의 값을 값 `24`, PROV_RSA_AES 공급자를 지정 하는 합니다.  이 기본 공급자와 호환 되는 <xref:System.Security.Cryptography.Aes> 알고리즘입니다.  
  
 다른 공급자 형식에 대 한 자세한 내용은 참조는 <xref:System.Security.Cryptography.CspParameters.ProviderType> 필드입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하 여 키 컨테이너를 만듭니다.는 <xref:System.Security.Cryptography.CspParameters> 클래스 및 컨테이너에 키를 저장 합니다.  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">암호화 서비스</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int dwTypeIn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwTypeIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwTypeIn As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int dwTypeIn);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters dwTypeIn" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwTypeIn" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwTypeIn">만들 공급자의 종류를 지정하는 공급자 형식 코드입니다.</param>
        <summary>지정된 공급자 형식 코드를 사용하여 <see cref="T:System.Security.Cryptography.CspParameters" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> 생성자는 숫자 값을 전달 하 여 공급자 형식을 지정 하는 공급자를 나타냅니다.  기본 공급자 형식을 나타내는 숫자 값 WinCrypt.h 헤더 파일에서 정의 됩니다.  
  
-   호환 공급자를 지정 하려면 합니다 <xref:System.Security.Cryptography.RSA> 알고리즘인 값 전달 `1` 에 `dwTypeIn` 매개 변수.  
  
-   호환 공급자를 지정 하려면 합니다 <xref:System.Security.Cryptography.DSA> 알고리즘인 값 전달 `13` 에 `dwTypeIn` 매개 변수.  
  
 다른 공급자 형식 값에 대 한 내용은 참조는 <xref:System.Security.Cryptography.CspParameters.ProviderType> 필드입니다.  기본 공급자 형식 및 동작에 대 한 자세한 내용은 MSDN 라이브러리의 Microsoft CAPI (Cryptography API) 설명서를 참조 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하 여 키 컨테이너를 만듭니다.는 <xref:System.Security.Cryptography.CspParameters> 클래스 및 컨테이너에 키를 저장 합니다.  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">암호화 서비스</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int dwTypeIn, string strProviderNameIn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwTypeIn, string strProviderNameIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwTypeIn As Integer, strProviderNameIn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int dwTypeIn, System::String ^ strProviderNameIn);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (dwTypeIn, strProviderNameIn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwTypeIn" Type="System.Int32" />
        <Parameter Name="strProviderNameIn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dwTypeIn">만들 공급자의 종류를 지정하는 공급자 형식 코드입니다.</param>
        <param name="strProviderNameIn">공급자 이름입니다.</param>
        <summary>지정된 공급자 형식 코드와 이름을 사용하여 <see cref="T:System.Security.Cryptography.CspParameters" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> 공급자 형식 및 이름을 지정 하는 생성자입니다.  
  
 원하는 공급자 형식을 나타내는 숫자 값을 전달 하 여 공급자 형식을 지정 합니다.  기본 공급자 형식을 나타내는 숫자 값 WinCrypt.h 헤더 파일에서 정의 됩니다.  
  
-   호환 공급자를 지정 하려면 합니다 <xref:System.Security.Cryptography.RSA> 알고리즘인 값 전달 `1` 에 `dwTypeIn` 매개 변수.  
  
-   호환 공급자를 지정 하려면 합니다 <xref:System.Security.Cryptography.DSA> 알고리즘인 값 전달 `13` 에 `dwTypeIn` 매개 변수.  
  
 다른 공급자 형식 값에 대 한 내용은 참조는 <xref:System.Security.Cryptography.CspParameters.ProviderType> 필드입니다.  기본 공급자 형식 및 동작에 대 한 자세한 내용은 MSDN 라이브러리의 Microsoft CAPI (Cryptography API) 설명서를 참조 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Security.Cryptography.CspParameters> 클래스 스마트 카드 암호화 서비스 공급자를 선택 합니다.  그런 다음 서명 하 고 스마트 카드를 사용 하 여 데이터를 확인 합니다.  
  
 [!code-cpp[Cryptography.SmartCardCSP#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CPP/Cryptography.SmartCardCSP.cpp#1)]
 [!code-csharp[Cryptography.SmartCardCSP#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CS/example.cs#1)]
 [!code-vb[Cryptography.SmartCardCSP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.SmartCardCSP/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">암호화 서비스</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int dwTypeIn, string strProviderNameIn, string strContainerNameIn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwTypeIn, string strProviderNameIn, string strContainerNameIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwTypeIn As Integer, strProviderNameIn As String, strContainerNameIn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int dwTypeIn, System::String ^ strProviderNameIn, System::String ^ strContainerNameIn);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string * string -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (dwTypeIn, strProviderNameIn, strContainerNameIn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwTypeIn" Type="System.Int32" />
        <Parameter Name="strProviderNameIn" Type="System.String" />
        <Parameter Name="strContainerNameIn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dwTypeIn">만들 공급자의 종류를 지정하는 공급자 형식 코드입니다.</param>
        <param name="strProviderNameIn">공급자 이름입니다.</param>
        <param name="strContainerNameIn">컨테이너 이름입니다.</param>
        <summary>지정된 공급자 형식 코드와 이름 및 지정한 컨테이너 이름을 사용하여 <see cref="T:System.Security.Cryptography.CspParameters" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> 공급자 형식, 공급자 이름 및 컨테이너 이름을 지정 하는 생성자입니다.  
  
 해당 컨테이너 내에서 키를 검색 하려면 컨테이너 이름을 사용할 수 있습니다.  
  
 원하는 공급자 형식을 나타내는 숫자 값을 전달 하 여 공급자 형식을 지정 합니다.  기본 공급자 형식을 나타내는 숫자 값 WinCrypt.h 헤더 파일에서 정의 됩니다.  
  
-   호환 공급자를 지정 하려면 합니다 <xref:System.Security.Cryptography.RSA> 알고리즘인 값 전달 `1` 에 `dwTypeIn` 매개 변수.  
  
-   호환 공급자를 지정 하려면 합니다 <xref:System.Security.Cryptography.DSA> 알고리즘인 값 전달 `13` 에 `dwTypeIn` 매개 변수.  
  
 다른 공급자 형식 값에 대 한 내용은 참조는 <xref:System.Security.Cryptography.CspParameters.ProviderType> 필드입니다.  기본 공급자 형식 및 동작에 대 한 자세한 내용은 MSDN 라이브러리의 Microsoft CAPI (Cryptography API) 설명서를 참조 합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">암호화 서비스</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, IntPtr parentWindowHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 providerType, string providerName, string keyContainerName, class System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, native int parentWindowHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int providerType, System::String ^ providerName, System::String ^ keyContainerName, System::Security::AccessControl::CryptoKeySecurity ^ cryptoKeySecurity, IntPtr parentWindowHandle);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string * string * System.Security.AccessControl.CryptoKeySecurity * nativeint -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (providerType, providerName, keyContainerName, cryptoKeySecurity, parentWindowHandle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerType" Type="System.Int32" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="providerName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="keyContainerName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cryptoKeySecurity" Type="System.Security.AccessControl.CryptoKeySecurity" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parentWindowHandle" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="providerType">만들 공급자의 종류를 지정하는 공급자 형식 코드입니다.</param>
        <param name="providerName">공급자 이름입니다.</param>
        <param name="keyContainerName">컨테이너 이름입니다.</param>
        <param name="cryptoKeySecurity">컨테이너에 대한 액세스 권한과 감사 규칙을 나타내는 개체입니다.</param>
        <param name="parentWindowHandle">스마트 카드 암호 대화 상자의 부모 창에 대한 핸들입니다.</param>
        <summary>공급자 형식, 공급자 이름, 컨테이너 이름, 액세스 정보 및 비관리 스마트 카드 암호 대화 상자에 대한 핸들을 사용하여 <see cref="T:System.Security.Cryptography.CspParameters" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 해당 컨테이너 내에서 키를 검색 하려면 컨테이너 이름을 사용할 수 있습니다.  
  
 원하는 공급자 형식을 나타내는 숫자 값을 전달 하 여 공급자 형식을 지정 합니다.  기본 공급자 형식을 나타내는 숫자 값 WinCrypt.h 헤더 파일에서 정의 됩니다.  
  
-   호환 공급자를 지정 하려면 합니다 <xref:System.Security.Cryptography.RSA> 알고리즘인 값 전달 `1` 에 `dwTypeIn` 매개 변수.  
  
-   호환 공급자를 지정 하려면 합니다 <xref:System.Security.Cryptography.DSA> 알고리즘인 값 전달 `13` 에 `dwTypeIn` 매개 변수.  
  
 다른 공급자 형식 값에 대 한 내용은 참조는 <xref:System.Security.Cryptography.CspParameters.ProviderType> 필드입니다.  기본 공급자 형식 및 동작에 대 한 자세한 내용은 MSDN 라이브러리의 Microsoft CAPI (Cryptography API) 설명서를 참조 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, System.Security.SecureString keyPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 providerType, string providerName, string keyContainerName, class System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, class System.Security.SecureString keyPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int providerType, System::String ^ providerName, System::String ^ keyContainerName, System::Security::AccessControl::CryptoKeySecurity ^ cryptoKeySecurity, System::Security::SecureString ^ keyPassword);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CspParameters : int * string * string * System.Security.AccessControl.CryptoKeySecurity * System.Security.SecureString -&gt; System.Security.Cryptography.CspParameters" Usage="new System.Security.Cryptography.CspParameters (providerType, providerName, keyContainerName, cryptoKeySecurity, keyPassword)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerType" Type="System.Int32" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="providerName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="keyContainerName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cryptoKeySecurity" Type="System.Security.AccessControl.CryptoKeySecurity" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="keyPassword" Type="System.Security.SecureString" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="providerType">만들 공급자의 종류를 지정하는 공급자 형식 코드입니다.</param>
        <param name="providerName">공급자 이름입니다.</param>
        <param name="keyContainerName">컨테이너 이름입니다.</param>
        <param name="cryptoKeySecurity">컨테이너에 대한 액세스 권한과 감사 규칙을 나타내는 개체입니다.</param>
        <param name="keyPassword">스마트 카드 키와 관련된 암호입니다.</param>
        <summary>공급자 형식, 공급자 이름, 컨테이너 이름, 액세스 정보 및 스마트 카드 키와 관련된 암호를 사용하여 <see cref="T:System.Security.Cryptography.CspParameters" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 해당 컨테이너 내에서 키를 검색 하려면 컨테이너 이름을 사용할 수 있습니다.  
  
 원하는 공급자 형식을 나타내는 숫자 값을 전달 하 여 공급자 형식을 지정 합니다.  기본 공급자 형식을 나타내는 숫자 값 WinCrypt.h 헤더 파일에서 정의 됩니다.  
  
-   호환 공급자를 지정 하려면 합니다 <xref:System.Security.Cryptography.RSA> 알고리즘인 값 전달 `1` 에 `dwTypeIn` 매개 변수.  
  
-   호환 공급자를 지정 하려면 합니다 <xref:System.Security.Cryptography.DSA> 알고리즘인 값 전달 `13` 에 `dwTypeIn` 매개 변수.  
  
 다른 공급자 형식 값에 대 한 내용은 참조는 <xref:System.Security.Cryptography.CspParameters.ProviderType> 필드입니다.  기본 공급자 형식 및 동작에 대 한 자세한 내용은 MSDN 라이브러리의 Microsoft CAPI (Cryptography API) 설명서를 참조 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CryptoKeySecurity">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.CryptoKeySecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property CryptoKeySecurity As CryptoKeySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::CryptoKeySecurity ^ CryptoKeySecurity { System::Security::AccessControl::CryptoKeySecurity ^ get(); void set(System::Security::AccessControl::CryptoKeySecurity ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CryptoKeySecurity : System.Security.AccessControl.CryptoKeySecurity with get, set" Usage="System.Security.Cryptography.CspParameters.CryptoKeySecurity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.CryptoKeySecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨테이너에 대한 액세스 권한과 감사 규칙을 나타내는 <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> 개체를 가져오거나 설정합니다.</summary>
        <value>컨테이너에 대한 액세스 권한과 감사 규칙을 나타내는 <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Security.Cryptography.CspParameters.CryptoKeySecurity%2A> 지정 하는 속성을 <xref:System.Security.AccessControl.CryptoKeySecurity> 임의 액세스 제어의 생성을 관리 하는 개체 (DACL)를 나열 하 고 컨테이너에 대 한 (SACL)에 대 한 시스템 액세스 제어 목록.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CspProviderFlags Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.CspProviderFlags Flags" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Property Flags As CspProviderFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CspProviderFlags Flags { System::Security::Cryptography::CspProviderFlags get(); void set(System::Security::Cryptography::CspProviderFlags value); };" />
      <MemberSignature Language="F#" Value="member this.Flags : System.Security.Cryptography.CspProviderFlags with get, set" Usage="System.Security.Cryptography.CspParameters.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CspProviderFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>CSP(암호화 서비스 공급자)의 동작을 수정하는 <see cref="T:System.Security.Cryptography.CspParameters" />의 플래그를 나타냅니다.</summary>
        <value>열거형 값 또는 열거형 값의 비트 조합입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">값이 유효한  열거형 값이 아닌 경우</exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">암호화 서비스</related>
      </Docs>
    </Member>
    <Member MemberName="KeyContainerName">
      <MemberSignature Language="C#" Value="public string KeyContainerName;" />
      <MemberSignature Language="ILAsm" Value=".field public string KeyContainerName" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.KeyContainerName" />
      <MemberSignature Language="VB.NET" Value="Public KeyContainerName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ KeyContainerName;" />
      <MemberSignature Language="F#" Value="val mutable KeyContainerName : string" Usage="System.Security.Cryptography.CspParameters.KeyContainerName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Security.Cryptography.CspParameters" />에 대한 키 컨테이너 이름을 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Security.Cryptography.CspParameters.KeyContainerName> 필드를 키 컨테이너의 이름을 지정 합니다.  해당 컨테이너 내에서 유지 되는 키를 검색 하려면 컨테이너 이름을 사용할 수 있습니다.  
  
 키 컨테이너를 만드는 방법에 대 한 자세한 내용은 참조 하세요. [방법: 키 컨테이너에 비대칭 키 저장](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하 여 키 컨테이너를 만듭니다.는 <xref:System.Security.Cryptography.CspParameters> 클래스 및 컨테이너에 키를 저장 합니다.  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">암호화 서비스</related>
      </Docs>
    </Member>
    <Member MemberName="KeyNumber">
      <MemberSignature Language="C#" Value="public int KeyNumber;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 KeyNumber" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.KeyNumber" />
      <MemberSignature Language="VB.NET" Value="Public KeyNumber As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: int KeyNumber;" />
      <MemberSignature Language="F#" Value="val mutable KeyNumber : int" Usage="System.Security.Cryptography.CspParameters.KeyNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>비대칭 키를 서명 키로 만들 것인지 교환 키로 만들 것인지 여부를 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.CspParameters.KeyNumber> 초기화 필드를 <xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A> 초기화할 때 속성을 <xref:System.Security.Cryptography.CspKeyContainerInfo> 개체를 <xref:System.Security.Cryptography.CspParameters> 개체입니다.  
  
 exchange 키는 안전 하 게 저장 하 고 다른 사용자와 교환할 수 있도록 세션 키를 암호화 하는 데 사용 되는 비대칭 키 쌍입니다.  사용할 수는 <xref:System.Security.Cryptography.KeyNumber.Exchange> 값 (`1`) 교환 키를 지정 합니다.  이 값에 해당 하는 `AT_KEYEXCHANGE` 에서 관리 되지 않는 Microsoft 암호화 API (CAPI)를 사용 하는 값입니다.  
  
 서명 키는 디지털 서명 된 메시지 또는 파일을 인증에 사용 되는 비대칭 키 쌍입니다.  사용할 수는 <xref:System.Security.Cryptography.KeyNumber.Signature> 값 (`2`) 서명 키를 지정 합니다.  이 값에 해당 하는 `AT_SIGNATURE` CAPI에 사용 되는 값입니다.  
  
 기본적으로 <xref:System.Security.Cryptography.CspParameters.KeyNumber> 필드 교환 키를 지정 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Security.Cryptography.KeyNumber> 열거형에 대 한 키 형식을 지정 하는 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 개체입니다.  
  
 [!code-cpp[Cryptography.KeyNumber#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.KeyNumber/cpp/sample.cpp#1)]
 [!code-csharp[Cryptography.KeyNumber#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.KeyNumber/CS/sample.cs#1)]
 [!code-vb[Cryptography.KeyNumber#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.KeyNumber/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">암호화 서비스</related>
      </Docs>
    </Member>
    <Member MemberName="KeyPassword">
      <MemberSignature Language="C#" Value="public System.Security.SecureString KeyPassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.SecureString KeyPassword" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.KeyPassword" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyPassword As SecureString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::SecureString ^ KeyPassword { System::Security::SecureString ^ get(); void set(System::Security::SecureString ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyPassword : System.Security.SecureString with get, set" Usage="System.Security.Cryptography.CspParameters.KeyPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecureString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>스마트 카드 키와 관련된 암호를 가져오거나 설정합니다.</summary>
        <value>스마트 카드 키와 관련된 암호입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> 스마트 카드 키에 대 한 암호를 제공 하는 속성입니다.  이 속성을 사용 하 여 암호를 지정 하는 경우 암호 대화 상자를 사용자에 게 표시 되지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentWindowHandle">
      <MemberSignature Language="C#" Value="public IntPtr ParentWindowHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ParentWindowHandle" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.ParentWindowHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentWindowHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ParentWindowHandle { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.ParentWindowHandle : nativeint with get, set" Usage="System.Security.Cryptography.CspParameters.ParentWindowHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>스마트 카드 암호 대화 상자의 비관리 부모 창에 대한 핸들을 가져오거나 설정합니다.</summary>
        <value>스마트 카드 암호 대화 상자의 부모 창에 대한 핸들입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Security.Cryptography.CspParameters.ParentWindowHandle%2A> 속성을 통해 스마트 카드 암호 대화 상자의 비관리 부모 창에 대 한 핸들을 지정 합니다.  이 속성을 사용 하 여 핸들을 지정 하면 스마트 카드 암호 대화 상자의 사용자에 게 표시 됩니다.  
  
 명시적으로 사용 하 여 암호를 지정 하 여 스마트 카드 암호 대화 상자를 표시 하지 않아도 <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName;" />
      <MemberSignature Language="ILAsm" Value=".field public string ProviderName" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public ProviderName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ProviderName;" />
      <MemberSignature Language="F#" Value="val mutable ProviderName : string" Usage="System.Security.Cryptography.CspParameters.ProviderName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Security.Cryptography.CspParameters" />에 대한 공급자 이름을 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 공급자 이름에 대 한 자세한 내용은 MSDN 라이브러리의 Microsoft CAPI (Cryptography API) 설명서를 참조 하세요.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">암호화 서비스</related>
      </Docs>
    </Member>
    <Member MemberName="ProviderType">
      <MemberSignature Language="C#" Value="public int ProviderType;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 ProviderType" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.ProviderType" />
      <MemberSignature Language="VB.NET" Value="Public ProviderType As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: int ProviderType;" />
      <MemberSignature Language="F#" Value="val mutable ProviderType : int" Usage="System.Security.Cryptography.CspParameters.ProviderType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Security.Cryptography.CspParameters" />에 대한 공급자 형식 코드를 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Security.Cryptography.CspParameters.ProviderType> 해당 공급자를 나타내는 숫자 값을 전달 하 여 공급자 형식을 지정 하는 필드입니다.  기본 공급자 형식을 나타내는 숫자 값 WinCrypt.h 헤더 파일에서 정의 됩니다.  
  
-   호환 공급자를 지정 합니다 <xref:System.Security.Cryptography.RSA> 클래스, 값을 전달 `1`합니다.  
  
-   호환 공급자를 지정 합니다 <xref:System.Security.Cryptography.DSA> 클래스, 값을 전달 `13`합니다.  
  
 다음 표에서 공급자 유형 및 WinCrypt.h 헤더 파일에 정의 된 해당 숫자 값을 나열 합니다.  
  
|공급자 유형|숫자 값|  
|-------------------|-------------------|  
|`PROV_RSA_FULL`|1|  
|`PROV_RSA_SIG`|2|  
|`PROV_DSS`|3|  
|`PROV_FORTEZZA`|4|  
|`PROV_MS_EXCHANGE`|5|  
|`PROV_SSL`|6|  
|`PROV_RSA_SCHANNEL`|12|  
|`PROV_DSS_DH`|13|  
|`PROV_EC_ECDSA_SIG`|14|  
|`PROV_EC_ECNRA_SIG`|15|  
|`PROV_EC_ECDSA_FULL`|16|  
|`PROV_EC_ECNRA_FULL`|17|  
|`PROV_DH_SCHANNEL`|18|  
|`PROV_SPYRUS_LYNKS`|20|  
|`PROV_RNG`|21|  
|`PROV_INTEL_SEC`|22|  
|`PROV_REPLACE_OWF`|23|  
|`PROV_RSA_AES`|24|  
  
 기본 공급자 형식 및 동작에 대 한 자세한 내용은 MSDN 라이브러리의 Microsoft CAPI (Cryptography API) 설명서를 참조 합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md">암호화 서비스</related>
      </Docs>
    </Member>
  </Members>
</Type>