<Type Name="ProtectedData" FullName="System.Security.Cryptography.ProtectedData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bcc571c1b9e91c577a9733b53e867330b9c48f83" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56771506" /></Metadata><TypeSignature Language="C#" Value="public sealed class ProtectedData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProtectedData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ProtectedData" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProtectedData" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProtectedData sealed" />
  <TypeSignature Language="F#" Value="type ProtectedData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>데이터를 암호화하거나 해독하는 메서드를 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 클래스에는 DPAPI 데이터 보호 API () Microsoft Windows 2000 이상의 운영 체제에서 사용할 수 있는 액세스를 제공합니다. 추가 라이브러리가 필요 하지 않습니다 하 고 운영 체제에서 제공 되는 서비스입니다. 암호화 하거나 데이터를 해독 하는 사용자 또는 컴퓨터 자격 증명을 사용 하 여 보호를 제공 합니다.  
  
 클래스는 관리 되지 않는 DPAPI에 대 한 두 래퍼 이루어져 <xref:System.Security.Cryptography.ProtectedData.Protect%2A> 고 <xref:System.Security.Cryptography.ProtectedData.Unprotect%2A>입니다. 이러한 두 메서드는 암호화 및 암호, 키 및 연결 문자열 등의 데이터를 암호 해독에 사용할 수 있습니다.  
  
 이러한 메서드를 사용 하 여 가장 하는 동안 다음 오류가 나타날 수 있습니다. "키가 올바르지 않음 지정 된 상태에서 사용 합니다." DPAPI는 사용자 프로필에서 키 데이터를 저장 하기 때문에 발생 합니다. 프로필 로드 되지 않은 경우 DPAPI를 암호 해독을 수행 하는 일을 할 수 없습니다. 이 오류를 방지 하려면 메서드를 호출 하기 전에 먼저 가장 하려는 사용자의 프로필을 로드 합니다. DPAPI를 사용 하 여 가장을 사용 하 여 중요 한 문제를 초래할 수 있습니다 및 신중한 디자인 선택 해야 합니다.  
  
   
  
## Examples  
 다음 예제에서는 데이터 보호를 사용 하는 방법을 보여 줍니다.  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public static byte[] Protect (byte[] userData, byte[] optionalEntropy, System.Security.Cryptography.DataProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Protect(unsigned int8[] userData, unsigned int8[] optionalEntropy, valuetype System.Security.Cryptography.DataProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Protect (userData As Byte(), optionalEntropy As Byte(), scope As DataProtectionScope) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Protect(cli::array &lt;System::Byte&gt; ^ userData, cli::array &lt;System::Byte&gt; ^ optionalEntropy, System::Security::Cryptography::DataProtectionScope scope);" />
      <MemberSignature Language="F#" Value="static member Protect : byte[] * byte[] * System.Security.Cryptography.DataProtectionScope -&gt; byte[]" Usage="System.Security.Cryptography.ProtectedData.Protect (userData, optionalEntropy, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" />
        <Parameter Name="optionalEntropy" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.DataProtectionScope" />
      </Parameters>
      <Docs>
        <param name="userData">암호화할 데이터가 들어 있는 바이트 배열입니다.</param>
        <param name="optionalEntropy">복잡성을 추가한 경우 암호화의 복잡성을 증가하는 데 사용한 선택적 추가 바이트 배열이며, 그렇지 않은 경우는 <see langword="null" />입니다.</param>
        <param name="scope">암호화 범위를 지정하는 열거형 값 중 하나입니다.</param>
        <summary>지정된 바이트 배열에 있는 데이터를 암호화하고 암호화된 데이터가 포함된 바이트 배열을 반환합니다.</summary>
        <returns>암호화된 데이터를 나타내는 바이트 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 암호, 키 또는 연결 문자열 등의 데이터를 암호화 하려면이 메서드를 사용할 수 있습니다. 합니다 `optionalEntropy` 매개 변수 암호화의 복잡성을 증가 하는 데이터를 추가할 수 있습니다; 지정 `null` 복잡성이 추가 되지 않습니다. 제공 된 경우이 정보 사용 해야 하 여 데이터를 암호 해독할 때의 <xref:System.Security.Cryptography.ProtectedData.Unprotect%2A> 메서드.  
  
> [!NOTE]
>  가장 하는 동안이 메서드를 사용 하는 경우 다음 오류가 나타날 수 있습니다. "키가 올바르지 않음 지정 된 상태에서 사용 합니다." 이 오류를 방지 하려면 메서드를 호출 하기 전에 먼저 가장 하려는 사용자의 프로필을 로드 합니다.  
  
   
  
## Examples  
 다음 예제에서는 데이터 보호를 사용 하는 방법을 보여 줍니다.  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="userData" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">암호화하지 못했습니다.</exception>
        <exception cref="T:System.NotSupportedException">운영 체제에서 이 메서드를 지원하지 않는 경우.</exception>
        <exception cref="T:System.OutOfMemoryException">데이터를 암호화하는 동안 시스템의 메모리가 부족한 경우</exception>
        <permission cref="T:System.Security.Permissions.DataProtectionPermission">연결을 사용 하 여 <see cref="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectData" /> 데이터를 보호 하는 데 필요한 권한 플래그입니다.</permission>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public static byte[] Unprotect (byte[] encryptedData, byte[] optionalEntropy, System.Security.Cryptography.DataProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Unprotect(unsigned int8[] encryptedData, unsigned int8[] optionalEntropy, valuetype System.Security.Cryptography.DataProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedData.Unprotect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Unprotect (encryptedData As Byte(), optionalEntropy As Byte(), scope As DataProtectionScope) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Unprotect(cli::array &lt;System::Byte&gt; ^ encryptedData, cli::array &lt;System::Byte&gt; ^ optionalEntropy, System::Security::Cryptography::DataProtectionScope scope);" />
      <MemberSignature Language="F#" Value="static member Unprotect : byte[] * byte[] * System.Security.Cryptography.DataProtectionScope -&gt; byte[]" Usage="System.Security.Cryptography.ProtectedData.Unprotect (encryptedData, optionalEntropy, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Byte[]" />
        <Parameter Name="optionalEntropy" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.DataProtectionScope" />
      </Parameters>
      <Docs>
        <param name="encryptedData"><see cref="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" /> 메서드를 사용하여 암호화된 데이터가 들어 있는 바이트 배열입니다.</param>
        <param name="optionalEntropy">추가 바이트 배열을 사용한 경우 데이터를 암호화하는 데 사용된 선택적 추가 바이트 배열이며, 그렇지 않은 경우는 <see langword="null" />입니다.</param>
        <param name="scope">데이터를 암호화하는 데 사용한 데이터 보호의 범위를 지정하는 열거형 값 중 하나입니다.</param>
        <summary>지정된 바이트 배열에 있는 데이터를 해독하고 해독된 데이터가 포함된 바이트 배열을 반환합니다.</summary>
        <returns>해독된 데이터를 나타내는 바이트 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하 여 암호화 된 데이터를 보호 해제할 수는 <xref:System.Security.Cryptography.ProtectedData.Protect%2A> 메서드. 경우는 `optionalEntropy` 암호화 하는 동안 사용 된 매개 변수, 데이터를 해독 하는 데 제공 되어야 합니다.  
  
> [!NOTE]
>  가장 하는 동안이 메서드를 사용 하는 경우 다음 오류가 나타날 수 있습니다. "키가 올바르지 않음 지정 된 상태에서 사용 합니다." 이 오류를 방지 하려면 메서드를 호출 하기 전에 먼저 가장 하려는 사용자의 프로필을 로드 합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 데이터 보호를 사용 하는 방법을 보여 줍니다.  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="encryptedData" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">해독하지 못했습니다.</exception>
        <exception cref="T:System.NotSupportedException">운영 체제에서 이 메서드를 지원하지 않는 경우.</exception>
        <exception cref="T:System.OutOfMemoryException">메모리가 부족합니다.</exception>
        <permission cref="T:System.Security.Permissions.DataProtectionPermission">연결을 사용 하 여 <see cref="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectData" /> 데이터 보호를 해제 하는 권한에 대 한 플래그입니다.</permission>
      </Docs>
    </Member>
  </Members>
</Type>