<Type Name="IApplicationTrustManager" FullName="System.Security.Policy.IApplicationTrustManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4a821c3d4bc7de406dcf5e610d0df87f9d144e26" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48586399" /></Metadata><TypeSignature Language="C#" Value="public interface IApplicationTrustManager : System.Security.ISecurityEncodable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IApplicationTrustManager implements class System.Security.ISecurityEncodable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Policy.IApplicationTrustManager" />
  <TypeSignature Language="VB.NET" Value="Public Interface IApplicationTrustManager&#xA;Implements ISecurityEncodable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IApplicationTrustManager : System::Security::ISecurityEncodable" />
  <TypeSignature Language="F#" Value="type IApplicationTrustManager = interface&#xA;    interface ISecurityEncodable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>애플리케이션을 실행해야 하는지 여부와 애플리케이션에 부여해야 하는 권한 집합을 확인합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 트러스트 관리자를 구현 해야 합니다는 <xref:System.Security.Policy.IApplicationTrustManager> 인터페이스입니다. 호스트 호출을 <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A?displayProperty=nameWithType> 애플리케이션에 권한을 부여 해야 하 고 애플리케이션을 실행 해야 하는지 여부를 결정 하는 방법입니다.  
  
 에 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 나중에 사용자 지정 구현 될 수 있는 하나의 트러스트 관리자가 및의 <xref:System.Security.Policy.IApplicationTrustManager> 인터페이스입니다. 사용 권한에 대 한 사용자 애플리케이션을 설치 하 고 애플리케이션에 부여 된 권한에 elevate 라는 메시지를 표시 하는 기본 트러스트 관리자 구현입니다. 다른 트러스트 관리자 구현에서는 다른 사용자 환경을 제공할 수 있습니다. 예를 들어는 구현 정보에 대 한 사용자에 게 확인 하는 대신 신뢰할 수 있는 애플리케이션에 대 한 엔터프라이즈 목록을 확인할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는의 간단한 구현을 <xref:System.Security.Policy.IApplicationTrustManager>합니다.  
  
 [!code-csharp[System.Security.Policy.IApplicationTrustManager#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.IApplicationTrustManager/CS/customTrustManager.cs#1)]
 [!code-vb[System.Security.Policy.IApplicationTrustManager#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.IApplicationTrustManager/VB/customtrustmanager.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DetermineApplicationTrust">
      <MemberSignature Language="C#" Value="public System.Security.Policy.ApplicationTrust DetermineApplicationTrust (ActivationContext activationContext, System.Security.Policy.TrustManagerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Policy.ApplicationTrust DetermineApplicationTrust(class System.ActivationContext activationContext, class System.Security.Policy.TrustManagerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Policy::ApplicationTrust ^ DetermineApplicationTrust(ActivationContext ^ activationContext, System::Security::Policy::TrustManagerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member DetermineApplicationTrust : ActivationContext * System.Security.Policy.TrustManagerContext -&gt; System.Security.Policy.ApplicationTrust" Usage="iApplicationTrustManager.DetermineApplicationTrust (activationContext, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.ApplicationTrust</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
        <Parameter Name="context" Type="System.Security.Policy.TrustManagerContext" />
      </Parameters>
      <Docs>
        <param name="activationContext">애플리케이션에 대한 활성화 컨텍스트입니다.</param>
        <param name="context">애플리케이션에 대한 트러스트 관리자 컨텍스트입니다.</param>
        <summary>애플리케이션을 실행해야 하는지 여부와 애플리케이션에 부여해야 하는 권한 집합을 확인합니다.</summary>
        <returns>애플리케이션에 대한 보안 결정이 들어 있는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A> 는 설정의 사용 권한을 부여 해야 합니다 응용 프로그램을 실행 해야 하는지 여부를 확인 하려면 호스트에서 호출 됩니다. <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A> 반환 합니다는 <xref:System.Security.Policy.ApplicationTrust> 개체는 <xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A> 응용 프로그램의 컨텍스트 내에서 실행 하는 각 어셈블리에 부여할 사용 권한을 나타내는 사용 권한을 포함 하는 속성 설정 합니다. 전역 어셈블리 캐시에 어셈블리에 부여 된 권한을 적용 되지 않습니다. 합니다 <xref:System.Security.Policy.ApplicationTrust> 개체에는 <xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> 신뢰 관리자는 애플리케이션을 신뢰할 수 있는지 여부를 나타낼를 설정 하는 속성입니다. 트러스트 관리자 애플리케이션이 신뢰할 수 있는지를 나타내는 경우 호스트 애플리케이션을 활성화 하 고 해당 어셈블리에 제공 된 권한 집합을 부여 합니다 <xref:System.Security.Policy.ApplicationTrust> 컬렉션입니다.  
  
   
  
## Examples  
 다음 예제에서는 구현을 보여 줍니다는 <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A> 메서드는 사용자 지정 신뢰 관리자에 대 한 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Policy.IApplicationTrustManager> 인터페이스입니다.  
  
 [!code-csharp[System.Security.Policy.IApplicationTrustManager#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Policy.IApplicationTrustManager/CS/customTrustManager.cs#2)]
 [!code-vb[System.Security.Policy.IApplicationTrustManager#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Policy.IApplicationTrustManager/VB/customtrustmanager.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>