<Type Name="SecureEnvironment" FullName="System.Security.RightsManagement.SecureEnvironment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1067195c635fa6803b2807efd360454d4c5d9d97" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55423682" /></Metadata><TypeSignature Language="C#" Value="public class SecureEnvironment : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SecureEnvironment extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.RightsManagement.SecureEnvironment" />
  <TypeSignature Language="VB.NET" Value="Public Class SecureEnvironment&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecureEnvironment : IDisposable" />
  <TypeSignature Language="F#" Value="type SecureEnvironment = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>사용자 활성화, 라이선스 바인딩 및 기타 권한 관리 작업에 대한 보안 클라이언트 세션을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다른와 마찬가지로 <xref:System.Security.RightsManagement> 형식을 <xref:System.Security.RightsManagement.SecureEnvironment> 완전 신뢰 애플리케이션에만 유용 합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 된 <xref:System.Security.RightsManagement.SecureEnvironment> 클래스  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplicationManifest">
      <MemberSignature Language="C#" Value="public string ApplicationManifest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationManifest" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationManifest As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationManifest { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationManifest : string" Usage="System.Security.RightsManagement.SecureEnvironment.ApplicationManifest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest" />를 만들 때 지정된 <see cref="T:System.Security.RightsManagement.SecureEnvironment" />를 가져옵니다.</summary>
        <value><see cref="Overload:System.Security.RightsManagement.SecureEnvironment.Create" />를 만들 때 <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> 메서드에 지정된 애플리케이션 매니페스트입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 사용 된 <xref:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest%2A> 메서드.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Security.RightsManagement.SecureEnvironment.Create" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>권한 관리 작업에 대한 보안 클라이언트 세션을 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 안전한 환경을 만들려면이 메서드를 사용 하는 방법을 보여 줍니다.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.RightsManagement.SecureEnvironment Create (string applicationManifest, System.Security.RightsManagement.ContentUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.RightsManagement.SecureEnvironment Create(string applicationManifest, class System.Security.RightsManagement.ContentUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (applicationManifest As String, user As ContentUser) As SecureEnvironment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::RightsManagement::SecureEnvironment ^ Create(System::String ^ applicationManifest, System::Security::RightsManagement::ContentUser ^ user);" />
      <MemberSignature Language="F#" Value="static member Create : string * System.Security.RightsManagement.ContentUser -&gt; System.Security.RightsManagement.SecureEnvironment" Usage="System.Security.RightsManagement.SecureEnvironment.Create (applicationManifest, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.SecureEnvironment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationManifest" Type="System.String" />
        <Parameter Name="user" Type="System.Security.RightsManagement.ContentUser" />
      </Parameters>
      <Docs>
        <param name="applicationManifest">애플리케이션 권한 매니페스트입니다.</param>
        <param name="user">권한 관리 콘텐츠에 대한 액세스를 부여하기 위한 사용자 또는 사용자 그룹입니다.</param>
        <summary>지정된 권한 매니페스트를 사용하여 지정된 사용자에 대한 보안 클라이언트 세션을 만듭니다.</summary>
        <returns>활성화, 라이선스 바인딩 및 기타 권한 관리 작업에 대한 보안 클라이언트 세션입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이렇게 <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> 메서드 사용 하기 위한 이미 활성화 되어 있는 사용자를 사용 하 여에서 반환 된 목록에 제공 된 같은 <xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A>합니다.  대체를 사용 하 여 <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> 메서드는 아직 활성화 되지 않은 사용자에 대 한 합니다.  
  
   
  
## Examples  
 다음 예제에서는 안전한 환경을 만들려면이 메서드를 사용 하는 방법을 보여 줍니다.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.RightsManagement.UserActivationMode" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.RightsManagement.SecureEnvironment Create (string applicationManifest, System.Security.RightsManagement.AuthenticationType authentication, System.Security.RightsManagement.UserActivationMode userActivationMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.RightsManagement.SecureEnvironment Create(string applicationManifest, valuetype System.Security.RightsManagement.AuthenticationType authentication, valuetype System.Security.RightsManagement.UserActivationMode userActivationMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::RightsManagement::SecureEnvironment ^ Create(System::String ^ applicationManifest, System::Security::RightsManagement::AuthenticationType authentication, System::Security::RightsManagement::UserActivationMode userActivationMode);" />
      <MemberSignature Language="F#" Value="static member Create : string * System.Security.RightsManagement.AuthenticationType * System.Security.RightsManagement.UserActivationMode -&gt; System.Security.RightsManagement.SecureEnvironment" Usage="System.Security.RightsManagement.SecureEnvironment.Create (applicationManifest, authentication, userActivationMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.SecureEnvironment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationManifest" Type="System.String" />
        <Parameter Name="authentication" Type="System.Security.RightsManagement.AuthenticationType" />
        <Parameter Name="userActivationMode" Type="System.Security.RightsManagement.UserActivationMode" />
      </Parameters>
      <Docs>
        <param name="applicationManifest">애플리케이션 권한 매니페스트입니다.</param>
        <param name="authentication">인증 방법입니다.</param>
        <param name="userActivationMode">사용자 권한 계정 인증서의 형식입니다.</param>
        <summary>애플리케이션 권한 매니페스트, <see cref="T:System.Security.RightsManagement.AuthenticationType" /> 및 <see cref="T:System.Security.RightsManagement.UserActivationMode" />를 제공한 보안 클라이언트 세션을 만듭니다.</summary>
        <returns>활성화, 라이선스 바인딩 및 기타 권한 관리 작업에 대한 보안 클라이언트 세션입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> 메서드는 아직 활성화 되지 않은 새 사용자를 대상으로 합니다.  
  
 새 사용자를 활성화 사용자 인증서와 클라이언트 라이선스 인증서를 가져오려면 왕복 server 트랜잭션이 포함 되어 있습니다.  
  
 대체 <xref:System.Security.RightsManagement.SecureEnvironment.Create%2A> 메서드 수는 사용자가 이미 활성화 되어 있는 경우에서 반환 된 목록에 나와 있는 것 <xref:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers%2A>입니다.  
  
   
  
## Examples  
 다음 예제에서는 안전한 환경을 만들려면이 메서드를 사용 하는 방법을 보여 줍니다.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Security.RightsManagement.SecureEnvironment" />에서 사용하는 리소스를 해제합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.SecureEnvironment.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="secureEnvironment.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Security.RightsManagement.SecureEnvironment" />에서 사용하는 모든 리소스를 해제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 애플리케이션을 호출 해야 <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> 사용을 마쳤으면는 <xref:System.Security.RightsManagement.SecureEnvironment>합니다.  이후에 <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> 라고, 할당 된 리소스는 <xref:System.Security.RightsManagement.SecureEnvironment> 가비지 수집기에서 회수 됩니다.  자세한 내용은 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 하 고 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  
  
> [!NOTE]
>  항상 호출 <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> 에 대 한 마지막 참조 하기 전에 <xref:System.Security.RightsManagement.SecureEnvironment> 해제 됩니다.  하는 경우 <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> 를 호출 하지 않으면 할당 된 리소스를 <xref:System.Security.RightsManagement.SecureEnvironment> 가비지 수집기 인스턴스를 호출할 때까지 해제 되지 것입니다 <xref:System.Object.Finalize%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.SecureEnvironment.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="secureEnvironment.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
        <summary><see cref="T:System.Security.RightsManagement.SecureEnvironment" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 공용 <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> 메서드 및 <xref:System.Object.Finalize%2A> 메서드. <xref:System.Security.RightsManagement.SecureEnvironment.Dispose> 보호 된 호출 <xref:System.Security.RightsManagement.SecureEnvironment.Dispose%28System.Boolean%29> 메서드를 `disposing` 매개 변수 설정 `true`합니다. <xref:System.Object.Finalize%2A> 호출 `Dispose` 사용 하 여 `disposing` 로 `false`합니다.  
  
 `disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.Security.RightsManagement.SecureEnvironment>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다. 이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다. <see langword="Dispose(Boolean)" />를 재정의할 때 이전 <see langword="Dispose" /> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오. 구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />를 참조 하세요 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  
  
에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />를 참조 하십시오 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드 재정의](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetActivatedUsers">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentUser&gt; GetActivatedUsers ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.RightsManagement.ContentUser&gt; GetActivatedUsers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetActivatedUsers () As ReadOnlyCollection(Of ContentUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::RightsManagement::ContentUser ^&gt; ^ GetActivatedUsers();" />
      <MemberSignature Language="F#" Value="static member GetActivatedUsers : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentUser&gt;" Usage="System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentUser&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>활성화된 사용자의 목록을 반환합니다.</summary>
        <returns>현재 활성화된 사용자의 목록입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserActivated">
      <MemberSignature Language="C#" Value="public static bool IsUserActivated (System.Security.RightsManagement.ContentUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUserActivated(class System.Security.RightsManagement.ContentUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUserActivated (user As ContentUser) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUserActivated(System::Security::RightsManagement::ContentUser ^ user);" />
      <MemberSignature Language="F#" Value="static member IsUserActivated : System.Security.RightsManagement.ContentUser -&gt; bool" Usage="System.Security.RightsManagement.SecureEnvironment.IsUserActivated user" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Security.RightsManagement.ContentUser" />
      </Parameters>
      <Docs>
        <param name="user">권한 관리 콘텐츠에 대한 액세스를 부여하기 위한 사용자 또는 사용자 그룹입니다.</param>
        <summary>지정된 사용자가 권한 관리 콘텐츠에 액세스하기 위해 활성화되었는지 여부를 나타냅니다.</summary>
        <returns>지정된 <paramref name="user" />가 권한 관리 콘텐츠에 액세스하기 위해 활성화된 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 사용 된 <xref:System.Security.RightsManagement.SecureEnvironment.IsUserActivated%2A> 사용자 권한 관리 콘텐츠에 액세스 하려면 권한이 지정 된 경우 확인 하는 방법입니다.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubsecenv)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubsecenv)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveActivatedUser">
      <MemberSignature Language="C#" Value="public static void RemoveActivatedUser (System.Security.RightsManagement.ContentUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveActivatedUser(class System.Security.RightsManagement.ContentUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveActivatedUser (user As ContentUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveActivatedUser(System::Security::RightsManagement::ContentUser ^ user);" />
      <MemberSignature Language="F#" Value="static member RemoveActivatedUser : System.Security.RightsManagement.ContentUser -&gt; unit" Usage="System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser user" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Security.RightsManagement.ContentUser" />
      </Parameters>
      <Docs>
        <param name="user">라이선스 정품 인증을 제거할 사용자입니다.</param>
        <summary>지정된 사용자에 대한 라이선스 정품 인증을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows 인증 또는 Passport 인증을 사용 하 여 사용자 인증을 수행 해야 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="user" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">지정된 <paramref name="user" />가 Windows 인증 또는 Passport 인증으로 인증되지 않은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.ContentUser User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.RightsManagement.ContentUser User" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.SecureEnvironment.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As ContentUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::RightsManagement::ContentUser ^ User { System::Security::RightsManagement::ContentUser ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.User : System.Security.RightsManagement.ContentUser" Usage="System.Security.RightsManagement.SecureEnvironment.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.ContentUser</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Security.RightsManagement.SecureEnvironment" />를 만들 때 지정된 사용자 또는 사용자 그룹을 가져옵니다.</summary>
        <value><see cref="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)" />를 만들 때 <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> 메서드에 지정된 사용자 또는 사용자 그룹입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 사용 된 <xref:System.Security.RightsManagement.SecureEnvironment.User%2A> 속성  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewSecEnv](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewsecenv)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewSecEnv](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewsecenv)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)" />
        <altmember cref="M:System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)" />
        <altmember cref="M:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers" />
      </Docs>
    </Member>
  </Members>
</Type>