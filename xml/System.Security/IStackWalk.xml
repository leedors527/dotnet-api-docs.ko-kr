<Type Name="IStackWalk" FullName="System.Security.IStackWalk">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ffff6974a1ebf871cd84ed3f0b180c1e73b50d37" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56402371" /></Metadata><TypeSignature Language="C#" Value="public interface IStackWalk" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStackWalk" />
  <TypeSignature Language="DocId" Value="T:System.Security.IStackWalk" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStackWalk" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStackWalk" />
  <TypeSignature Language="F#" Value="type IStackWalk = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>호출 스택의 모든 호출자가 보호된 리소스에 액세스하는 데 필요한 권한이 있는지 여부를 결정하는 스택 워크를 관리합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 부분적으로 신뢰할 수 있는 코드에는 항상 보안 위험을 보여 줍니다. 이 리소스에 액세스 권한이 있는 악의적인 코드를 대신 하 여 작업을 수행할 경우에 따라 조작할 수 있습니다. 이러한 방식으로 악성 코드를 허용 하는 보다 더 높은 보안 액세스를 얻을 수 있습니다.  
  
 공용 언어 런타임에 대 한 모든 호출에서 스택 워크를 실행 하 여 이러한 공격 으로부터 관리 되는 코드를 보호할 수 있습니다. 스택 워크는 호출 스택의 모든 코드 보호 된 리소스에 액세스할 수 있는 권한이 필요 합니다. 공격을 시도 하는 코드는 호출 스택의 어딘가에 있을 항상, 때문에 자체 보안 권한을 초과 없게 됩니다 것입니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public void Assert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Assert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Assert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Assert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Assert();" />
      <MemberSignature Language="F#" Value="abstract member Assert : unit -&gt; unit" Usage="iStackWalk.Assert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>스택의 상위 호출자에게 리소스에 액세스할 수 있는 권한이 부여되지 않더라도 호출 코드에서 현재 사용 권한 개체로 식별되는 리소스에 액세스할 수 있음을 어설션합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 <xref:System.Security.IStackWalk.Assert%2A> 호출 스택의 상위 호출자 권한 검사를 중지 합니다. 따라서 이러한 호출자에이 게 필수 사용 권한을 없는 경우에 리소스 여전히 액세스할 수 있습니다. 어설션 코드를 호출 하는 경우에 유효 <xref:System.Security.IStackWalk.Assert%2A> 어설션 중인 권한에 대 한 보안 검사를 통과 합니다.  
  
 에 대 한 호출 <xref:System.Security.IStackWalk.Assert%2A> 호출 코드에 대 한 후속 호출 될 때까지 또는 해당 호출자에 게 반환 될 때까지 유효 <xref:System.Security.IStackWalk.Assert%2A> 이전 어설션이 비효율적인 렌더링 합니다. 또한 <xref:System.Security.CodeAccessPermission.RevertAssert%2A> 나 <xref:System.Security.CodeAccessPermission.RevertAll%2A> 제거는 보류 중인 <xref:System.Security.IStackWalk.Assert%2A>합니다.  
  
 <xref:System.Security.IStackWalk.Assert%2A> 해당 권한 요청에 실패 합니다 부여 되지 않은 사용 권한을 무시 됩니다. 그러나 호출 스택에 있는 낮은 코드를 호출 하는 경우 <xref:System.Security.IStackWalk.Demand%2A> 해당 사용 권한에 대 한는 <xref:System.Security.SecurityException> 스택 워크를 호출 하려고 하는 코드에 도달할 때 발생 하는 <xref:System.Security.IStackWalk.Assert%2A>합니다. 코드는 호출 되므로 이런 <xref:System.Security.IStackWalk.Assert%2A> 에 권한이 부여 되지는, 하 려 했지만 <xref:System.Security.IStackWalk.Assert%2A> 것입니다.  
  
> [!CAUTION]
>  호출 하므로 <xref:System.Security.IStackWalk.Assert%2A> 제거 호출 체인에 모든 코드는 요구 사항을 받아야 지정된 된 리소스를 액세스할 수 있는 권한이, 잘못 되었거나 부적절 하 게 사용 하는 경우 보안 문제가 발생할 수 있습니다. 따라서 주의 기울여야를 사용 하 여 사용 해야 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출 코드에 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />이 없습니다.</exception>
        <related type="Article" href="~/docs/framework/misc/using-the-assert-method.md">Assert 메서드 사용</related>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Demand();" />
      <MemberSignature Language="F#" Value="abstract member Demand : unit -&gt; unit" Usage="iStackWalk.Demand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>호출 스택의 모든 호출자에게 현재 사용 권한 개체가 지정한 사용 권한이 부여되어 있는지를 런타임에 확인합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 일반적으로 기본 호출자에 게 리소스에 액세스할 수 있는 권한이 있는지 확인 되는 보안 라이브러리에서 사용 됩니다. 보안 클래스 라이브러리에 파일 클래스를 호출 하는 예를 들어 <xref:System.Security.IStackWalk.Demand%2A> 필요한 <xref:System.Security.Permissions.FileIOPermission> 는 호출자가 요청한 파일 작업을 수행 하기 전에 합니다.  
  
 이 메서드를 호출 하는 코드의 사용 권한은 검사 하지 않습니다. 확인 코드의 직접 실행 호출자에서 시작 하 고 스택을 나아갑니다. <xref:System.Security.IStackWalk.Demand%2A> 없는 경우에 성공 <xref:System.Security.SecurityException> 발생 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출 스택의 상위에 있는 호출자에게 현재 사용 권한 개체가 지정한 사용 권한이 없습니다.  
  
또는 
호출 스택의 호출자가 현재 사용 권한 개체에 대해 <see cref="M:System.Security.IStackWalk.Deny" />를 호출했습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deny">
      <MemberSignature Language="C#" Value="public void Deny ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Deny" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deny ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Deny();" />
      <MemberSignature Language="F#" Value="abstract member Deny : unit -&gt; unit" Usage="iStackWalk.Deny " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>호출 코드를 통과하는 현재 개체에 대한 모든 <see cref="M:System.Security.IStackWalk.Demand" />가 실패합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 호출 스택의 상위 호출자가 해당 호출자가 액세스할 권한이 부여 된 경우에이 메서드를 호출 하는 코드를 통해 보호 되는 리소스에 액세스 하지 못하도록 방지 합니다. 호출 스택의 메서드 호출 스택의 상위에 메서드를 호출 낮은 호출 스택의 있도록에 일반적으로 하향식으로 표시 됩니다.  
  
 <xref:System.Security.IStackWalk.Deny%2A> 프로그래머의 책임을 제한 하거나 호출 하는 메서드를 방지할 수 있으므로 실수로 인 한 보안 취약점을 방지할 수 있습니다 <xref:System.Security.IStackWalk.Deny%2A> 를 사용 하 여 거부 된 권한으로 보호 되는 리소스에 액세스 합니다. 메서드를 호출 하는 경우 <xref:System.Security.IStackWalk.Deny%2A> 는 권한에 경우에 <xref:System.Security.IStackWalk.Demand%2A> 에 도달 하면 해당 보안 확인이 실패 한 해당 권한을 하위 호출 스택의 호출자가 호출 되는 <xref:System.Security.IStackWalk.Deny%2A>합니다.  
  
 <xref:System.Security.IStackWalk.Deny%2A> 해당 권한 요청에 실패 합니다 부여 되지 않은 사용 권한을 무시 됩니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>이 메서드를 재정의할 수 없습니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="PermitOnly">
      <MemberSignature Language="C#" Value="public void PermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.PermitOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub PermitOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PermitOnly();" />
      <MemberSignature Language="F#" Value="abstract member PermitOnly : unit -&gt; unit" Usage="iStackWalk.PermitOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>호출 스택의 상위 코드에 다른 리소스에 대한 액세스 권한이 부여된 경우에도, 호출 코드를 통과하는 현재 개체를 제외하고 모든 개체에 대한 모든 <see cref="M:System.Security.IStackWalk.Demand" />가 실패하는 원인이 됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.IStackWalk.PermitOnly%2A> 비슷합니다 <xref:System.Security.IStackWalk.Deny%2A>스택 워크는 성공이 고, 그렇지 때 있는 상황에서, 합니다. 점이 <xref:System.Security.IStackWalk.Deny%2A> 실패는 스택 워크는 사용 권한을 지정 하지만 <xref:System.Security.IStackWalk.PermitOnly%2A> 실패 스택 워크가 발생 하지 않는 유일한 사용 권한을 지정 합니다. 지정 된 리소스에 액세스 하려면 코드를 사용할 수 있도록 하려면이 메서드를 호출 합니다.  
  
 <xref:System.Security.IStackWalk.PermitOnly%2A> 해당 권한 요청에 실패 합니다 부여 되지 않은 사용 권한을 무시 됩니다. 그러나 하위 호출에서 나중에 스택 하는 경우 호출 <xref:System.Security.IStackWalk.Demand%2A> 해당 사용 권한에 대 한는 <xref:System.Security.SecurityException> 스택 워크를 호출 하려고 하는 코드에 도달할 때 발생 하는 <xref:System.Security.IStackWalk.PermitOnly%2A>합니다. 코드는 호출 되므로이 작업이 <xref:System.Security.IStackWalk.PermitOnly%2A> 에 권한이 부여 되지를 호출 했지만 <xref:System.Security.IStackWalk.PermitOnly%2A> 해당 사용 권한에 대 한 합니다. 호출 스택의 메서드 호출 스택의 상위에 메서드를 호출 낮은 호출 스택의 있도록에 일반적으로 하향식으로 표시 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>