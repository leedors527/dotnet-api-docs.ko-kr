<Type Name="SupportedAddressingMode" FullName="System.ServiceModel.Channels.SupportedAddressingMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1ae63748c67f545e380dccbb2d4ab05c995bd875" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37460099" /></Metadata><TypeSignature Language="C#" Value="public enum SupportedAddressingMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SupportedAddressingMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.SupportedAddressingMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum SupportedAddressingMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class SupportedAddressingMode" />
  <TypeSignature Language="F#" Value="type SupportedAddressingMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>서비스에서 익명 주소에 대해서만 응답을 보내는지, 익명이 아닌 주소에 대해서만 응답을 보내는지 또는 둘 모두에 대해 응답을 보내는지를 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 열거형은 서버의 기능을 지정하는 데 사용되며 여기에는 클라이언트에 대한 요구 사항도 포함됩니다.  
  
 Windows Communication Foundation (WCF)에 다양 한 메시지를 보낼 위치를 지정 하기 위한 주소 지정 제어 방법이 있습니다. 예를 들어, 메시지 대상의 논리적 <xref:System.ServiceModel.Channels.MessageHeaders.To%2A> 주소, 전송에 사용되고 서비스에서 수신 대기하는 물리적("Via") 주소, 클라이언트 엔드포인트의 주소를 제공하는 엔드포인트의 <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> 주소 등이 있습니다.  
  
 가장 기본적인 경우, 양쪽 당사자 간에 메시지를 교환할 때에는 이러한 주소를 별도로 지정할 필요가 없습니다. 그러나 다른 메시지 대상과의 교환이 이루어질 수도 있기 때문에 주소를 명시적으로 제공해야 할 때 이를 지정할 수 있어야 합니다. 서버에서 HTTP 요청을 직접 생성해야 하는 양방향 HTTP의 경우처럼 두 대상 간에도 이 기능이 필요한 경우가 있습니다. <xref:System.ServiceModel.Channels.SupportedAddressingMode> 열거형은 이러한 메시징 패턴을 얻기 위해 다음과 같은 유형의 관계를 정의합니다.  
  
-   익명 주소는 주소 지정에 대 한 가장 기본적인 형태의입니다. 익명 주소 지정은 응답에 대한 기본 경로가 있을 때 사용됩니다. TCP는 양방향 통신 전송이며, 원본 메시지를 보낸 소켓의 다른 쪽에 TCP 메시지에 대한 응답을 보낼 수 있습니다. 마찬가지로 HTTP의 요청-회신 모델은 HTTP 회신 채널을 통해 응답을 보냅니다. 이러한 응답에서는 응답 메시지의 전송 대상을 지정할 필요가 없습니다. 서버는 클라이언트의 익명 응답이 필요한 경우 익명 열거 값을 사용 합니다. 시스템 제공 WCF <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.BasicHttpBinding> 고 <xref:System.ServiceModel.WSHttpBinding> 바인딩은 항상 익명 주소를 사용 합니다.  
  
-   익명이 아닌 주소는 응답을 보내는 통신을 위한 새 채널을 만들어야 하는 경우에 사용 됩니다. 시스템 제공 WCF <xref:System.ServiceModel.WSDualHttpBinding> 바인딩에서는 익명이 아닌 주소를 사용 합니다. 양방향 HTTP에서 클라이언트가 HTTP 요청을 생성하여 메시지를 보내면, 서버에서는 HTTP 요청을 직접 생성하여 응답을 보내야 합니다. 서버에서는 보내기 작업을 시작하기 때문에 연결이 설정된 특정 엔드포인트가 있어야 합니다. 따라서 응답을 위한 엔드포인트 주소를 서버에 제공해야 합니다. 마찬가지로, 서비스 수신 된 단방향 메시지에 응답 해야 하는 경우 또한 필요는 NonAnonymous 이므로 없습니다 백 채널 통신에 사용할 주소입니다. 서버에서 메시지를 돌려 보내는 경우 첫 번째 메시지를 보내는 데 사용된 작업과 완전히 다른 별도의 작업을 수행해야 합니다.  
  
-   혼합는 세 번째 형태의 전송 되는 메시지에 따라 익명 및 NonAnonymous 주소를 결합 하는 주소를 지정 합니다. 혼합 모드 주소 지정의 일반적인 예로 전용 시스템을 사용한 오류 또는 승인 메시지 처리를 들 수 있습니다. 응답에 대 한 표준 교환 시퀀스가 HTTP 또는 TCP 인 경우 익명 주소 지정을 사용 하 여 응답 하지만 오류 익명이 아닌 주소 지정을 사용 합니다. 회신 채널 (응답 주소가 익명) 하는 경우에 직접 또는 별도 채널에서 응답을 보낼 수 있는 채널을 작성할 수 있기 WCF 혼합 주소 지정 표준 바인딩 중 하나에 기능을 제공 하지 않지만, (경우 응답 주소는 NonAnonymous)입니다. 이 경우 채널의 바인딩 요소는 데 설정 <xref:System.ServiceModel.Channels.SupportedAddressingMode> Mixed로 합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Anonymous">
      <MemberSignature Language="C#" Value="Anonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Anonymous = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Anonymous" />
      <MemberSignature Language="VB.NET" Value="Anonymous" />
      <MemberSignature Language="C++ CLI" Value="Anonymous" />
      <MemberSignature Language="F#" Value="Anonymous = 0" Usage="System.ServiceModel.Channels.SupportedAddressingMode.Anonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>서버는 익명 주소만 지원하며, 클라이언트는 익명 응답 주소를 제공해야 합니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="Mixed">
      <MemberSignature Language="C#" Value="Mixed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Mixed = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Mixed" />
      <MemberSignature Language="VB.NET" Value="Mixed" />
      <MemberSignature Language="C++ CLI" Value="Mixed" />
      <MemberSignature Language="F#" Value="Mixed = 2" Usage="System.ServiceModel.Channels.SupportedAddressingMode.Mixed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>서버는 익명 주소와 익명이 아닌 주소를 모두 지원하며, 클라이언트는 두 주소 중 하나 또는 모두를 사용할 수 있습니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="NonAnonymous">
      <MemberSignature Language="C#" Value="NonAnonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode NonAnonymous = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous" />
      <MemberSignature Language="VB.NET" Value="NonAnonymous" />
      <MemberSignature Language="C++ CLI" Value="NonAnonymous" />
      <MemberSignature Language="F#" Value="NonAnonymous = 1" Usage="System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>서버는 익명이 아닌 주소만 지원하며, 클라이언트는 익명이 아닌 응답 주소를 제공해야 합니다.</summary>
      </Docs>
    </Member>
  </Members>
</Type>