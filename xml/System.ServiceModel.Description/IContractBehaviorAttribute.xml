<Type Name="IContractBehaviorAttribute" FullName="System.ServiceModel.Description.IContractBehaviorAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fb25c9bff84e2b2782cf8b483630323908c462b2" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37456654" /></Metadata><TypeSignature Language="C#" Value="public interface IContractBehaviorAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContractBehaviorAttribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IContractBehaviorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContractBehaviorAttribute" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContractBehaviorAttribute" />
  <TypeSignature Language="F#" Value="type IContractBehaviorAttribute = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.ServiceModel.Description.IContractBehavior" /> 인터페이스를 구현하는 특성이 활성화되는 계약을 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 서비스 유형에 대한 계약 동작 특성을 사용하려 하지만 <xref:System.ServiceModel.Description.IContractBehaviorAttribute> 속성에 지정된 계약으로 적용을 제한하려면 <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> 개체이기도 한 특성에서 <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A> 인터페이스를 구현합니다.  
  
 사용자 지정 계약 동작 특성에 대한 <xref:System.ServiceModel.Description.IContractBehaviorAttribute> 구현 요구 사항은 없으며, 특성을 계약 인터페이스 또는 이중 콜백 클래스에 적용할 경우 <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A> 속성 값은 무시됩니다.  
  
 자세한 내용은 <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType>을 참조하세요.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용자 지정 <xref:System.ServiceModel.Dispatcher.IInstanceProvider?displayProperty=nameWithType> 구현이 항상 동일한 서비스 인스턴스를 반환하고 이 인스턴스를 재사용하지 않는 "단일" 동작을 제공하는 `ObjectProviderBehavior`를 호출했다고 가정합니다.  
  
 인스턴스 공급자 사용자 지정을 삽입하기 위해 이 예제에서는 `SingletonBehaviorAttribute`를 구현하여 사용자 지정 서비스 인스턴스 공급자를 삽입하는 사용자 지정 특성(<xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType>)을 구현하는 방법을 보여 줍니다. 또한 <xref:System.ServiceModel.Description.IContractBehaviorAttribute> 계약에 애플리케이션을 바인딩하는 `ISampleService`를 구현합니다.  
  
 [!code-csharp[IContractBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#2)]
 [!code-vb[IContractBehavior#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="TargetContract">
      <MemberSignature Language="C#" Value="public Type TargetContract { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TargetContract" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetContract As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TargetContract { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetContract : Type" Usage="System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>계약 동작을 적용할 수 있는 계약 형식을 가져옵니다.</summary>
        <value>계약 동작을 적용할 수 있는 계약 형식입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 구현하는 <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A> 특성이 서비스 클래스에 적용될 때 계약 동작이 적용되는 계약을 지정하려면 <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> 속성을 구현합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용자 지정 <xref:System.ServiceModel.Dispatcher.IInstanceProvider?displayProperty=nameWithType> 구현이 항상 동일한 서비스 인스턴스를 반환하고 이 인스턴스를 재사용하지 않는 "단일" 동작을 제공하는 `ObjectProviderBehavior`를 호출했다고 가정합니다.  
  
 인스턴스 공급자 사용자 지정을 삽입하기 위해 이 예제에서는 `SingletonBehaviorAttribute`를 구현하여 사용자 지정 서비스 인스턴스 공급자를 삽입하는 사용자 지정 특성(<xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType>)을 구현하는 방법을 보여 줍니다. 또한 <xref:System.ServiceModel.Description.IContractBehaviorAttribute> 계약에 애플리케이션을 바인딩하는 `ISampleService`를 구현합니다.  
  
 [!code-csharp[IContractBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#2)]
 [!code-vb[IContractBehavior#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>