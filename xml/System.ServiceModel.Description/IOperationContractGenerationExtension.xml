<Type Name="IOperationContractGenerationExtension" FullName="System.ServiceModel.Description.IOperationContractGenerationExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec962a591b45f7a8ae2f254f0b74f0b27c88e8e3" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37456539" /></Metadata><TypeSignature Language="C#" Value="public interface IOperationContractGenerationExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOperationContractGenerationExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IOperationContractGenerationExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOperationContractGenerationExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IOperationContractGenerationExtension" />
  <TypeSignature Language="F#" Value="type IOperationContractGenerationExtension = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>계약 생성 중에 호출되고, 작업에 대해 생성된 코드를 수정하는 데 사용할 수 있는 메서드를 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 작업 동작(<xref:System.ServiceModel.Description.IOperationContractGenerationExtension> 형식)에 대해 <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType> 인터페이스를 구현하면 계약 또는 엔드포인트가 코드로 컴파일될 때 생성되는 코드를 수정할 수 있습니다. 일반적으로 사용자 지정 <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType>은 <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> 또는 <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A?displayProperty=nameWithType>를 호출하는 중에 사용자 지정 작업 동작을 <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportEndpoint%2A?displayProperty=nameWithType> 컬렉션에 삽입합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.ServiceModel.Description.IOperationContractGenerationExtension.GenerateOperation%2A> 네임스페이스를 사용하여 작업의 주석 섹션에 문자열을 추가하는 <xref:System.CodeDom?displayProperty=nameWithType> 메서드를 구현하는 방법을 보여 줍니다.  
  
  
  
 다음 코드 예제에서는 <xref:System.ServiceModel.Description.IOperationContractGenerationExtension>을 구현하는 작업 동작이 <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType>를 호출하는 동안 <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A?displayProperty=nameWithType> 컬렉션에 어떻게 삽입되는지를 보여 줍니다.  
  
 [!code-csharp[C_CustomWSDLExtensions#4](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationimporter.cs#4)]  
  
 마지막으로 다음 코드 예제에서는 Visual Basic과 C# 모두에서 생성되는 작업을 보여 줍니다.  
  
 [!code-csharp[C_CustomWSDLExtensions#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/newgeneratedcontract.cs#3)]
 [!code-vb[C_CustomWSDLExtensions#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/newgeneratedcontract.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GenerateOperation">
      <MemberSignature Language="C#" Value="public void GenerateOperation (System.ServiceModel.Description.OperationContractGenerationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateOperation(class System.ServiceModel.Description.OperationContractGenerationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IOperationContractGenerationExtension.GenerateOperation(System.ServiceModel.Description.OperationContractGenerationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GenerateOperation (context As OperationContractGenerationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GenerateOperation(System::ServiceModel::Description::OperationContractGenerationContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GenerateOperation : System.ServiceModel.Description.OperationContractGenerationContext -&gt; unit" Usage="iOperationContractGenerationExtension.GenerateOperation context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Description.OperationContractGenerationContext" />
      </Parameters>
      <Docs>
        <param name="context">생성된 작업을 수정하는 데 필요한 <see cref="N:System.CodeDom" /> 형식을 포함하는 작업 컨텍스트입니다.</param>
        <summary>계약 생성 프로세스에 앞서 코드 문서 개체 모델을 수정하려면 구현합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 사용자 지정 <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType>은 <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> 또는 <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A?displayProperty=nameWithType>를 호출하는 중에 사용자 지정 작업 동작을 <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportEndpoint%2A?displayProperty=nameWithType> 컬렉션에 삽입합니다.  
  
 <xref:System.ServiceModel.Description.IOperationContractGenerationExtension.GenerateOperation%2A> 메서드는 계약마다 한 번씩 호출됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.ServiceModel.Description.IOperationContractGenerationExtension.GenerateOperation%2A> 네임스페이스를 사용하여 작업의 주석 섹션에 문자열을 추가하는 <xref:System.CodeDom?displayProperty=nameWithType> 메서드를 구현하는 방법을 보여 줍니다.  
  
  
  
 다음 코드 예제에서는 <xref:System.ServiceModel.Description.IOperationContractGenerationExtension>을 구현하는 작업 동작이 <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType>를 호출하는 동안 <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A?displayProperty=nameWithType> 컬렉션에 어떻게 삽입되는지를 보여 줍니다.  
  
 [!code-csharp[C_CustomWSDLExtensions#4](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationimporter.cs#4)]  
  
 마지막으로 다음 코드 예제에서는 Visual Basic과 C# 모두에서 생성되는 작업을 보여 줍니다.  
  
 [!code-csharp[C_CustomWSDLExtensions#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/newgeneratedcontract.cs#3)]
 [!code-vb[C_CustomWSDLExtensions#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/newgeneratedcontract.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>