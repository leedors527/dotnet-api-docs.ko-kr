<Type Name="IWsdlImportExtension" FullName="System.ServiceModel.Description.IWsdlImportExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="151befd6c344b14acafcf311ffc6f4e701050e5b" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57948590" /></Metadata><TypeSignature Language="C#" Value="public interface IWsdlImportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWsdlImportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IWsdlImportExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWsdlImportExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWsdlImportExtension" />
  <TypeSignature Language="F#" Value="type IWsdlImportExtension = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.ServiceModel.Description.WsdlImporter" /> 개체를 구현하고 연결하여 가져오기에서 WSDL(웹 서비스 기술 언어) 부분을 <see cref="T:System.Web.Services.Description.ServiceDescription" /> 개체의 해당 부분으로 매핑하는 방법을 제어합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.IWsdlImportExtension> 인터페이스를 구현하여 WSDL과 <xref:System.ServiceModel.Description.ServiceEndpoint> 및 <xref:System.ServiceModel.Description.ContractDescription> 개체 간의 매핑을 제어합니다. 이 기능은 사용자 지정 WSDL 확장을 읽고 계약 또는 엔드포인트 정보를 수정할 때 특히 유용합니다. 그런 다음 프로그래밍 방식이나 응용 프로그램 구성 파일을 사용하여 사용자 지정 <xref:System.ServiceModel.Description.IWsdlImportExtension> 개체를 <xref:System.ServiceModel.Description.WsdlImporter>에 연결합니다. 사용자를 연결할 수도 있습니다 <xref:System.ServiceModel.Description.IWsdlImportExtension> 내부 개체 <xref:System.ServiceModel.Description.WsdlImporter> 에서 사용 하는 합니다 [ServiceModel Metadata 유틸리티 도구 (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) 응용 프로그램 구성 파일을 사용 합니다.  
  
 계약을 가져오기 위해 <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A> 메서드가 호출됩니다.  
  
 <xref:System.ServiceModel.Description.IWsdlImportExtension.BeforeImport%2A> 및 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 가져온 메타데이터를 수정하려면 <xref:System.ServiceModel.Description.ContractDescription> 메서드를 사용합니다.  
  
   
  
## Examples  
 다음 코드 예제는 사용 방법을 보여 줍니다 <xref:System.ServiceModel.Description.IWsdlImportExtension> 추가할는 <xref:System.ServiceModel.Description.IServiceContractGenerationExtension?displayProperty=nameWithType> 및 <xref:System.ServiceModel.Description.IOperationContractGenerationExtension?displayProperty=nameWithType> (를 `WsdlDocumentationImporter`,이 경우) 인터페이스 및 작업 수준에서 생성 된 WCF 클라이언트 코드를 수정 합니다.  
  
 [!code-csharp[C_CustomWSDLExtensions#4](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationimporter.cs#4)]  
  
 다음 코드 예제에서는 응용 프로그램 구성 파일에서 사용자 지정 <xref:System.ServiceModel.Description.IWsdlImportExtension>을 사용하도록 클라이언트 메타데이터 시스템을 구성하는 방법을 보여 줍니다.  
  
 [!code-xml[C_CustomWSDLExtensions#9](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.exe.config#9)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeforeImport">
      <MemberSignature Language="C#" Value="public void BeforeImport (System.Web.Services.Description.ServiceDescriptionCollection wsdlDocuments, System.Xml.Schema.XmlSchemaSet xmlSchemas, System.Collections.Generic.ICollection&lt;System.Xml.XmlElement&gt; policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeforeImport(class System.Web.Services.Description.ServiceDescriptionCollection wsdlDocuments, class System.Xml.Schema.XmlSchemaSet xmlSchemas, class System.Collections.Generic.ICollection`1&lt;class System.Xml.XmlElement&gt; policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlImportExtension.BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeforeImport (wsdlDocuments As ServiceDescriptionCollection, xmlSchemas As XmlSchemaSet, policy As ICollection(Of XmlElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeforeImport(System::Web::Services::Description::ServiceDescriptionCollection ^ wsdlDocuments, System::Xml::Schema::XmlSchemaSet ^ xmlSchemas, System::Collections::Generic::ICollection&lt;System::Xml::XmlElement ^&gt; ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member BeforeImport : System.Web.Services.Description.ServiceDescriptionCollection * System.Xml.Schema.XmlSchemaSet * System.Collections.Generic.ICollection&lt;System.Xml.XmlElement&gt; -&gt; unit" Usage="iWsdlImportExtension.BeforeImport (wsdlDocuments, xmlSchemas, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlDocuments" Type="System.Web.Services.Description.ServiceDescriptionCollection" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="xmlSchemas" Type="System.Xml.Schema.XmlSchemaSet" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="policy" Type="System.Collections.Generic.ICollection&lt;System.Xml.XmlElement&gt;" Index="2" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="wsdlDocuments">수정할 서비스 설명입니다.</param>
        <param name="xmlSchemas">가져올 때 사용할 스키마 컬렉션입니다.</param>
        <param name="policy">가져올 때 사용되는 정책 어설션입니다.</param>
        <summary>메타데이터 문서를 가져오기 전에 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 등록된 모든 <xref:System.ServiceModel.Description.IWsdlImportExtension.BeforeImport%2A> 개체의 <xref:System.ServiceModel.Description.IWsdlImportExtension> 메서드는 제공된 메타데이터에서 가져오기를 수행하기 전에 호출됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportContract">
      <MemberSignature Language="C#" Value="public void ImportContract (System.ServiceModel.Description.WsdlImporter importer, System.ServiceModel.Description.WsdlContractConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportContract(class System.ServiceModel.Description.WsdlImporter importer, class System.ServiceModel.Description.WsdlContractConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlImportExtension.ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportContract (importer As WsdlImporter, context As WsdlContractConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ImportContract(System::ServiceModel::Description::WsdlImporter ^ importer, System::ServiceModel::Description::WsdlContractConversionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ImportContract : System.ServiceModel.Description.WsdlImporter * System.ServiceModel.Description.WsdlContractConversionContext -&gt; unit" Usage="iWsdlImportExtension.ImportContract (importer, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importer" Type="System.ServiceModel.Description.WsdlImporter" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlContractConversionContext" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="importer">가져오기입니다.</param>
        <param name="context">수정할 가져오기 컨텍스트입니다.</param>
        <summary>계약을 가져올 때 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A> 메서드는 계약을 가져올 때 호출됩니다. 계약을 수정하거나 <xref:System.ServiceModel.Description.IServiceContractGenerationExtension?displayProperty=nameWithType> 및 <xref:System.ServiceModel.Description.IOperationContractGenerationExtension?displayProperty=nameWithType> 개체와 같은 다른 내보내기 동작을 삽입하여 계약에 대해 생성되는 코드를 수정할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제는 사용 방법을 보여 줍니다 <xref:System.ServiceModel.Description.IWsdlImportExtension> 추가할는 <xref:System.ServiceModel.Description.IServiceContractGenerationExtension?displayProperty=nameWithType> 및 <xref:System.ServiceModel.Description.IOperationContractGenerationExtension?displayProperty=nameWithType> (를 `WsdlDocumentationImporter`,이 경우) 인터페이스 및 작업 수준에서 생성 된 WCF 클라이언트 코드를 수정 합니다.  
  
 [!code-csharp[C_CustomWSDLExtensions#4](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationimporter.cs#4)]  
  
 다음 코드 예제에서는 응용 프로그램 구성 파일에서 사용자 지정 <xref:System.ServiceModel.Description.IWsdlImportExtension>을 사용하도록 클라이언트 메타데이터 시스템을 구성하는 방법을 보여 줍니다.  
  
 [!code-xml[C_CustomWSDLExtensions#9](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.exe.config#9)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoint">
      <MemberSignature Language="C#" Value="public void ImportEndpoint (System.ServiceModel.Description.WsdlImporter importer, System.ServiceModel.Description.WsdlEndpointConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportEndpoint(class System.ServiceModel.Description.WsdlImporter importer, class System.ServiceModel.Description.WsdlEndpointConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlImportExtension.ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportEndpoint (importer As WsdlImporter, context As WsdlEndpointConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ImportEndpoint(System::ServiceModel::Description::WsdlImporter ^ importer, System::ServiceModel::Description::WsdlEndpointConversionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ImportEndpoint : System.ServiceModel.Description.WsdlImporter * System.ServiceModel.Description.WsdlEndpointConversionContext -&gt; unit" Usage="iWsdlImportExtension.ImportEndpoint (importer, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importer" Type="System.ServiceModel.Description.WsdlImporter" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlEndpointConversionContext" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="importer">가져오기입니다.</param>
        <param name="context">수정할 가져오기 컨텍스트입니다.</param>
        <summary>엔드포인트를 가져올 때 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportEndpoint%2A> 메서드는 엔드포인트를 가져올 때 호출됩니다. 컨텍스트 속성을 수정하여 가져온 엔드포인트를 사용자 지정합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>