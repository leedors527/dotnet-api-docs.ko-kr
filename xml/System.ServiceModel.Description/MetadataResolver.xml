<Type Name="MetadataResolver" FullName="System.ServiceModel.Description.MetadataResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3d74ae750b135b6054dad6d8ea0395fce5611640" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37456518" /></Metadata><TypeSignature Language="C#" Value="public static class MetadataResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MetadataResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.MetadataResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class MetadataResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataResolver abstract sealed" />
  <TypeSignature Language="F#" Value="type MetadataResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>메타데이터를 검색하여 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체로 가져옵니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 메타데이터에서 서비스에 대한 엔드포인트를 신속하게 가져오려면 <xref:System.ServiceModel.Description.MetadataResolver> 클래스를 사용합니다. 이 클래스는 메타데이터를 다운로드하여 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 변환합니다. 메타데이터를 다운로드한 후 해당 정보를 <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType>으로 처리하려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.ServiceModel.Description.MetadataResolver> 클래스를 사용하여 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체 컬렉션으로 메타데이터를 반환하는 방법을 보여 줍니다. 이렇게 반환된 개체는 서비스 인스턴스에 연결하는 데 사용됩니다.  
  
 [!code-csharp[MetadataResolver#1](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#1)]  
  
 다음 코드 예제에서는 WS-Transfer 대신 HTTP GET 요청을 사용하여 <xref:System.ServiceModel.Description.MetadataResolver>를 통해 메타데이터를 다운로드한 다음 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체 컬렉션으로 반환하는 방법을 보여 줍니다.  
  
 [!code-csharp[MetadataResolver#2](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginResolve">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>메타데이터 주소를 해당 서비스에 대한 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체 컬렉션으로 확인하는 비동기 호출을 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이러한 메서드는 비동기 버전의 <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> 메서드를 시작합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">메타데이터를 다운로드하여 확인할 대상 계약입니다.</param>
        <param name="address">메타데이터 주소입니다.</param>
        <param name="callback">호출이 완료되면 호출되는 비동기 콜백 대리자입니다.</param>
        <param name="asyncState">비동기 호출과 관련된 상태입니다.</param>
        <summary>지정된 주소와 비동기 상태 및 대리자를 사용하여 지정된 계약에 대한 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체로 메타데이터 주소를 확인하는 비동기 호출을 시작합니다.</summary>
        <returns>비동기 분석 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>의 기본 설정은 메타데이터를 검색하는 데 사용되며, 기본 <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType>는 <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>입니다.  
  
 @FSHO1@메타데이터를 다운로드하지만 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 정보를 확인하지 않으려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 직접 사용하십시오.  
  
> [!NOTE]
>  엔드포인트를 하나도 가져오지 않았거나 계약과 일치하는 엔드포인트가 없으면 빈 컬렉션이 반환됩니다. 빈 컬렉션이 반환되면 경고 추적이 기록됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">주소, 계약 또는 콜백이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contracts" />가 비어 있거나, 하나 이상의 <paramref name="contracts" /> 멤버가 <see langword="null" />이거나, <paramref name="contracts" />에 이름과 네임스페이스가 동일한 계약이 둘 이상 포함된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (Type contract, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Type contract, class System.ServiceModel.EndpointAddress address, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contract As Type, address As EndpointAddress, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(Type ^ contract, System::ServiceModel::EndpointAddress ^ address, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : Type * System.ServiceModel.EndpointAddress * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contract, address, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contract">메타데이터를 다운로드하여 확인할 대상 계약입니다.</param>
        <param name="address">메타데이터 주소입니다.</param>
        <param name="callback">호출이 완료되면 호출되는 비동기 콜백 대리자입니다.</param>
        <param name="asyncState">비동기 호출과 관련된 상태입니다.</param>
        <summary>지정된 주소와 비동기 상태 및 대리자를 사용하여 지정된 계약에 대한 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체로 메타데이터 주소를 확인하는 비동기 호출을 시작합니다.</summary>
        <returns>비동기 분석 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>의 기본 설정은 메타데이터를 검색하는 데 사용되며, 기본 <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType>는 <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>입니다.  
  
 @FSHO1@메타데이터를 다운로드하지만 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 정보를 확인하지 않으려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 직접 사용하십시오.  
  
> [!NOTE]
>  엔드포인트를 하나도 가져오지 않았거나 계약과 일치하는 엔드포인트가 없으면 빈 컬렉션이 반환됩니다. 빈 컬렉션이 반환되면 경고 추적이 기록됩니다.  
  
 이 메서드를 사용하려면 계약 형식을 지정해야 합니다. 클라이언트 코드에서 서비스 인터페이스를 선언 하거나 Svcutil.exe에 의해 생성 된 WCF 클라이언트를 사용 하 여 계약을 지정할 수 있습니다. 인터페이스가 변경 되 면 (예를 들어 새 작업을 추가)을 클라이언트 코드에서 인터페이스를 업데이트 하거나 새 WCF 클라이언트 생성. 이렇게 하지 않으면 예외가 throw됩니다. Add(), Sub(), Mult() 및 Div()를 정의하는 ICalculator라는 서비스 계약을 구현하는 서비스를 예로 들어 보겠습니다. 클라이언트 애플리케이션을 만들고 WCF 클라이언트를 생성 합니다. ICalculator에 Echo()라는 메서드를 추가합니다. 다음 호출 하는 애플리케이션 작성 하는 경우 <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> 새 WCF 클라이언트를 생성 하지 않고 다음 예외를 가져옵니다.  
  
 `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">주소, 계약 또는 콜백이 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address, class System.ServiceModel.Description.MetadataExchangeClient client, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress, client As MetadataExchangeClient, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address, System::ServiceModel::Description::MetadataExchangeClient ^ client, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress * System.ServiceModel.Description.MetadataExchangeClient * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, client, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">메타데이터를 다운로드하여 확인할 대상 계약입니다.</param>
        <param name="address">메타데이터 주소입니다.</param>
        <param name="client">메타데이터를 검색하는 데 사용되는 <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />입니다.</param>
        <param name="callback">호출이 완료되면 호출되는 비동기 콜백 대리자입니다.</param>
        <param name="asyncState">비동기 호출과 관련된 상태입니다.</param>
        <summary>지정된 주소, <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, 비동기 상태 및 대리자를 사용하여 지정된 계약에 대한 <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> 개체로 메타데이터 주소를 확인하는 비동기 호출을 시작합니다.</summary>
        <returns>비동기 분석 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType>는 <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>입니다.  
  
 @FSHO1@메타데이터를 다운로드하지만 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 정보를 확인하지 않으려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 직접 사용하십시오.  
  
> [!NOTE]
>  엔드포인트를 하나도 가져오지 않았거나 계약과 일치하는 엔드포인트가 없으면 빈 컬렉션이 반환됩니다. 빈 컬렉션이 반환되면 경고 추적이 기록됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">주소, 계약, 클라이언트 또는 콜백이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contracts" />가 비어 있거나, 하나 이상의 <paramref name="contracts" /> 멤버가 null이거나, <paramref name="contracts" />에 이름과 네임스페이스가 동일한 계약이 둘 이상 포함된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, mode, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">메타데이터를 다운로드하여 확인할 대상 계약입니다.</param>
        <param name="address">메타데이터 주소입니다.</param>
        <param name="mode">검색 모드입니다.</param>
        <param name="callback">호출이 완료되면 호출되는 비동기 콜백 대리자입니다.</param>
        <param name="asyncState">비동기 호출과 관련된 상태입니다.</param>
        <summary>지정된 주소, <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 값, 비동기 상태 및 대리자를 사용하여 지정된 계약에 대한 <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" /> 개체로 메타데이터 주소를 확인하는 비동기 호출을 시작합니다.</summary>
        <returns>비동기 분석 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>의 기본 설정은 메타데이터를 검색하는 데 사용됩니다.  
  
 @FSHO1@메타데이터를 다운로드하지만 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 정보를 확인하지 않으려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 직접 사용하십시오.  
  
> [!NOTE]
>  엔드포인트를 하나도 가져오지 않았거나 계약과 일치하는 엔드포인트가 없으면 빈 컬렉션이 반환됩니다. 빈 컬렉션이 반환되면 경고 추적이 기록됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">주소, 계약 또는 콜백이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contracts" />가 비어 있거나, 하나 이상의 <paramref name="contracts" /> 멤버가 null이거나, <paramref name="contracts" />에 이름과 네임스페이스가 동일한 계약이 둘 이상 포함된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Type contract, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contract As Type, address As Uri, mode As MetadataExchangeClientMode, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(Type ^ contract, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : Type * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contract, address, mode, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contract">메타데이터를 다운로드하여 확인할 대상 계약입니다.</param>
        <param name="address">메타데이터 주소입니다.</param>
        <param name="mode">검색 모드입니다.</param>
        <param name="callback">호출이 완료되면 호출되는 비동기 콜백 대리자입니다.</param>
        <param name="asyncState">비동기 호출과 관련된 상태입니다.</param>
        <summary>지정된 주소, <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, 비동기 상태 및 대리자를 사용하여 지정된 계약에 대한 <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" /> 개체로 메타데이터 주소를 확인하는 비동기 호출을 시작합니다.</summary>
        <returns>비동기 분석 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>의 기본 설정은 메타데이터를 검색하는 데 사용됩니다.  
  
 @FSHO1@메타데이터를 다운로드하지만 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 정보를 확인하지 않으려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 직접 사용하십시오.  
  
> [!NOTE]
>  엔드포인트를 하나도 가져오지 않았거나 계약과 일치하는 엔드포인트가 없으면 빈 컬렉션이 반환됩니다. 빈 컬렉션이 반환되면 경고 추적이 기록됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">주소, 계약 또는 콜백이 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.ServiceModel.Description.MetadataExchangeClient client, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode, client As MetadataExchangeClient, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, System::ServiceModel::Description::MetadataExchangeClient ^ client, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * System.ServiceModel.Description.MetadataExchangeClient * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, mode, client, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">메타데이터를 다운로드하여 확인할 대상 계약입니다.</param>
        <param name="address">메타데이터 주소입니다.</param>
        <param name="mode">검색 모드입니다.</param>
        <param name="client">메타데이터를 검색하는 데 사용되는 <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />입니다.</param>
        <param name="callback">호출이 완료되면 호출되는 비동기 콜백 대리자입니다.</param>
        <param name="asyncState">비동기 호출과 관련된 상태입니다.</param>
        <summary>지정된 주소, <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />, 비동기 상태 및 대리자를 사용하여 지정된 계약에 대한 <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" /> 개체로 메타데이터 주소를 확인하는 비동기 호출을 시작합니다.</summary>
        <returns>비동기 분석 작업을 참조하는 <see cref="T:System.IAsyncResult" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 @FSHO1@메타데이터를 다운로드하지만 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 정보를 확인하지 않으려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 직접 사용하십시오.  
  
> [!NOTE]
>  엔드포인트를 하나도 가져오지 않았거나 계약과 일치하는 엔드포인트가 없으면 빈 컬렉션이 반환됩니다. 빈 컬렉션이 반환되면 경고 추적이 기록됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">주소, 계약 또는 콜백이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contracts" />가 비어 있거나, 하나 이상의 <paramref name="contracts" /> 멤버가 null이거나, <paramref name="contracts" />에 이름과 네임스페이스가 동일한 계약이 둘 이상 포함된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="EndResolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection EndResolve (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection EndResolve(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndResolve (result As IAsyncResult) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ EndResolve(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="static member EndResolve : IAsyncResult -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.EndResolve result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" /> 메서드를 호출하여 받은 <see cref="Overload:System.ServiceModel.Description.MetadataResolver.BeginResolve" /> 개체입니다.</param>
        <summary>비동기 호출을 완료하여 메타데이터를 엔드포인트 컬렉션으로 확인합니다.</summary>
        <returns>메타데이터에 포함된 엔드포인트에 대한 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체 컬렉션입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A> 메서드 중 하나에 대한 비동기 호출을 종료합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>메타데이터 주소를 다운로드한 후 해당 서비스에 대한 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체로 확인합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 @FSHO1@메타데이터를 다운로드하지만 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 정보를 확인하지 않으려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 직접 사용하십시오.  
  
 모든 동기 및 비동기 `Resolve` 메서드는 가져온 엔드포인트가나 계약과 일치하는 엔드포인트가 없으면 빈 컬렉션을 반환합니다. 빈 컬렉션이 반환되면 경고 추적이 기록됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="contracts">메타데이터를 다운로드하여 확인할 대상 계약입니다.</param>
        <param name="address">메타데이터 주소입니다.</param>
        <summary>지정된 메타데이터 주소를 사용하여 지정된 계약에 대한 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체로 메타데이터 주소를 확인합니다.</summary>
        <returns>지정된 계약의 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체 컬렉션입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>의 기본 설정은 메타데이터를 검색하는 데 사용되며, 기본 <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType>는 <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>입니다.  
  
 @FSHO1@메타데이터를 다운로드하지만 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 정보를 확인하지 않으려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 직접 사용하십시오.  
  
> [!NOTE]
>  엔드포인트를 하나도 가져오지 않았거나 계약과 일치하는 엔드포인트가 없으면 빈 컬렉션이 반환됩니다. 빈 컬렉션이 반환되면 경고 추적이 기록됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">주소 또는 계약 컬렉션이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contracts" />가 비어 있거나, 하나 이상의 <paramref name="contracts" /> 멤버가 null이거나, <paramref name="contracts" />에 이름과 네임스페이스가 동일한 계약이 둘 이상 포함된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Type contract, class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contract As Type, address As EndpointAddress) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(Type ^ contract, System::ServiceModel::EndpointAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member Resolve : Type * System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contract, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="contract">메타데이터를 다운로드하여 확인할 대상 계약입니다.</param>
        <param name="address">메타데이터 주소입니다.</param>
        <summary>메타데이터 주소를 다운로드한 후 지정된 주소의 지정된 계약에 대한 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체 컬렉션으로 확인합니다.</summary>
        <returns>지정된 계약의 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체 컬렉션입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> 메서드를 사용하여 메타데이터를 다운로드하고 분석할 때 사용할 계약 및 메타데이터 주소를 지정합니다.  
  
 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>의 기본 설정은 메타데이터를 검색하는 데 사용되며, 기본 <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType>는 <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>입니다.  
  
 @FSHO1@메타데이터를 다운로드하지만 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 정보를 확인하지 않으려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 직접 사용하십시오.  
  
> [!NOTE]
>  엔드포인트를 하나도 가져오지 않았거나 계약과 일치하는 엔드포인트가 없으면 빈 컬렉션이 반환됩니다. 빈 컬렉션이 반환되면 경고 추적이 기록됩니다.  
  
 이 메서드를 사용하려면 계약 형식을 지정해야 합니다. 클라이언트 코드에서 서비스 인터페이스를 선언 하거나 Svcutil.exe에 의해 생성 된 WCF 클라이언트를 사용 하 여 계약을 지정할 수 있습니다. 인터페이스가 변경 되 면 (예를 들어 새 작업을 추가)을 클라이언트 코드에서 인터페이스를 업데이트 하거나 새 WCF 클라이언트 생성. 이렇게 하지 않으면 예외가 throw됩니다. Add(), Sub(), Mult() 및 Div()를 정의하는 ICalculator라는 서비스 계약을 구현하는 서비스를 예로 들어 보겠습니다. 클라이언트 애플리케이션을 만들고 WCF 클라이언트를 생성 합니다. ICalculator에 Echo()라는 메서드를 추가합니다. 다음 호출 하는 애플리케이션 작성 하는 경우 <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> 새 WCF 클라이언트를 생성 하지 않고 다음 예외를 가져옵니다.  
  
 `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.ServiceModel.Description.MetadataResolver> 클래스를 사용하여 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체 컬렉션으로 메타데이터를 반환하는 방법을 보여 줍니다. 이렇게 반환된 개체는 서비스 인스턴스에 연결하는 데 사용됩니다.  
  
 [!code-csharp[MetadataResolver#1](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">주소 또는 계약이 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address, class System.ServiceModel.Description.MetadataExchangeClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress, client As MetadataExchangeClient) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address, System::ServiceModel::Description::MetadataExchangeClient ^ client);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress * System.ServiceModel.Description.MetadataExchangeClient -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address, client)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
      </Parameters>
      <Docs>
        <param name="contracts">메타데이터를 다운로드하여 확인할 대상 계약입니다.</param>
        <param name="address">메타데이터 주소입니다.</param>
        <param name="client">메타데이터를 검색하는 데 사용되는 <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />입니다.</param>
        <summary>지정된 메타데이터 주소 및 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />를 사용하여 지정된 계약에 대한 <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> 개체로 메타데이터 주소를 확인합니다.</summary>
        <returns>지정된 계약의 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체 컬렉션입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType>는 <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>입니다.  
  
 @FSHO1@메타데이터를 다운로드하지만 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 정보를 확인하지 않으려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 직접 사용하십시오.  
  
> [!NOTE]
>  엔드포인트를 하나도 가져오지 않았거나 계약과 일치하는 엔드포인트가 없으면 빈 컬렉션이 반환됩니다. 빈 컬렉션이 반환되면 경고 추적이 기록됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">주소, 계약 컬렉션 또는 클라이언트가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contracts" />가 비어 있거나, 하나 이상의 <paramref name="contracts" /> 멤버가 null이거나, <paramref name="contracts" />에 이름과 네임스페이스가 동일한 계약이 둘 이상 포함된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
      </Parameters>
      <Docs>
        <param name="contracts">메타데이터를 다운로드하여 확인할 대상 계약입니다.</param>
        <param name="address">메타데이터 주소입니다.</param>
        <param name="mode">검색 모드입니다.</param>
        <summary>지정된 주소 및 전송 모드를 사용하여 지정된 계약에 대한 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체로 메타데이터 주소를 확인합니다.</summary>
        <returns>지정된 계약의 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체 컬렉션입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>의 기본 설정은 메타데이터를 검색하는 데 사용됩니다.  
  
 @FSHO1@메타데이터를 다운로드하지만 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 정보를 확인하지 않으려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 직접 사용하십시오.  
  
> [!NOTE]
>  엔드포인트를 하나도 가져오지 않았거나 계약과 일치하는 엔드포인트가 없으면 빈 컬렉션이 반환됩니다. 빈 컬렉션이 반환되면 경고 추적이 기록됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">주소 또는 계약 컬렉션이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contracts" />가 비어 있거나, 하나 이상의 <paramref name="contracts" /> 멤버가 null이거나, <paramref name="contracts" />에 이름과 네임스페이스가 동일한 계약이 둘 이상 포함된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Type contract, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contract As Type, address As Uri, mode As MetadataExchangeClientMode) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(Type ^ contract, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode);" />
      <MemberSignature Language="F#" Value="static member Resolve : Type * Uri * System.ServiceModel.Description.MetadataExchangeClientMode -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contract, address, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
      </Parameters>
      <Docs>
        <param name="contract">메타데이터를 다운로드하여 확인할 대상 계약입니다.</param>
        <param name="address">메타데이터 주소입니다.</param>
        <param name="mode">검색 모드입니다.</param>
        <summary>지정된 주소 및 전송 모드를 사용하여 지정된 계약에 대한 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체로 메타데이터 주소를 확인합니다.</summary>
        <returns>지정된 계약의 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체 컬렉션입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> 메서드를 사용하여 계약, 주소 및 사용할 다운로드 메커니즘을 지정합니다.  
  
 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>의 기본 설정은 메타데이터를 검색하는 데 사용됩니다.  
  
 @FSHO1@메타데이터를 다운로드하지만 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 정보를 확인하지 않으려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 직접 사용하십시오.  
  
> [!NOTE]
>  엔드포인트를 하나도 가져오지 않았거나 계약과 일치하는 엔드포인트가 없으면 빈 컬렉션이 반환됩니다. 빈 컬렉션이 반환되면 경고 추적이 기록됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 WS-Transfer 대신 HTTP GET 요청을 사용하여 <xref:System.ServiceModel.Description.MetadataResolver>를 통해 메타데이터를 다운로드한 다음 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체 컬렉션으로 반환하는 방법을 보여 줍니다.  
  
 [!code-csharp[MetadataResolver#2](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">주소 또는 계약이 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.ServiceModel.Description.MetadataExchangeClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode, client As MetadataExchangeClient) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, System::ServiceModel::Description::MetadataExchangeClient ^ client);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * System.ServiceModel.Description.MetadataExchangeClient -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address, mode, client)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
      </Parameters>
      <Docs>
        <param name="contracts">메타데이터를 다운로드하여 확인할 대상 계약입니다.</param>
        <param name="address">메타데이터 주소입니다.</param>
        <param name="mode">검색 모드입니다.</param>
        <param name="client">메타데이터를 검색하는 데 사용되는 <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />입니다.</param>
        <summary>지정된 주소, 전송 모드 및 전송 클라이언트를 사용하여 지정된 계약에 대한 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체로 메타데이터 주소를 확인합니다.</summary>
        <returns>지정된 계약의 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 개체 컬렉션입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 @FSHO1@메타데이터를 다운로드하지만 <xref:System.ServiceModel.Description.ServiceEndpoint> 개체로 정보를 확인하지 않으려면 <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>를 직접 사용하십시오.  
  
> [!NOTE]
>  엔드포인트를 하나도 가져오지 않았거나 계약과 일치하는 엔드포인트가 없으면 빈 컬렉션이 반환됩니다. 빈 컬렉션이 반환되면 경고 추적이 기록됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">주소, 계약 컬렉션 또는 클라이언트가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contracts" />가 비어 있거나, 하나 이상의 <paramref name="contracts" /> 멤버가 null이거나, <paramref name="contracts" />에 이름과 네임스페이스가 동일한 계약이 둘 이상 포함된 경우</exception>
      </Docs>
    </Member>
  </Members>
</Type>