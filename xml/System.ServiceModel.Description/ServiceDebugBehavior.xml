<Type Name="ServiceDebugBehavior" FullName="System.ServiceModel.Description.ServiceDebugBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="af7c14d8b565e396c9b5dbe54da5e22f2cd2f339" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51908795" /></Metadata><TypeSignature Language="C#" Value="public class ServiceDebugBehavior : System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceDebugBehavior extends System.Object implements class System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.ServiceDebugBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceDebugBehavior&#xA;Implements IServiceBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceDebugBehavior : System::ServiceModel::Description::IServiceBehavior" />
  <TypeSignature Language="F#" Value="type ServiceDebugBehavior = class&#xA;    interface IServiceBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IServiceBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>WCF(Windows Communication Foundation) 서비스에 대한 디버깅 및 도움말 정보 기능을 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 디버깅을 위해 클라이언트에 예외 정보를 전달하고 웹 브라우저에서 서비스를 검색하는 사용자를 위해 HTML 정보 파일을 게시하려면 프로그래밍 방식 또는 구성 파일에서 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 속성을 사용합니다.  
  
 설정 된 <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A> 속성을 `true` 관리 되는 반환 하도록 WCF에 지시 예외 정보를 SOAP 오류의 클라이언트로 디버깅 목적으로 합니다.  
  
> [!CAUTION]
>  관리되는 예외 정보를 클라이언트에 반환하면 예외 정보가 내부 서비스 구현 정보를 노출하여 권한이 없는 클라이언트에서 사용할 수 있으므로 보안상 위험할 수 있습니다. 또한 프로그래밍 방식으로 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 속성을 설정할 수도 있지만 배포 시 <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A> 비활성화를 잊기 쉬울 수 있습니다.  
  
 보안 문제와 관련이 있으므로 다음 작업을 수행하는 것이 좋습니다.  
  
-   애플리케이션 구성 파일을 사용하여 <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A> 속성 값을 `true`로 설정합니다.  
  
-   이 작업은 제어된 디버깅 시나리오에서만 수행하도록 합니다.  
  
 관리 되는 예외 정보와 관련 된 보안 문제에 대 한 자세한 내용은 참조 하세요. [지정 및 계약 및 서비스에서 오류 처리](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md)합니다.  
  
 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageEnabled%2A> 및 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageEnabled%2A> 속성은 HTML 브라우저를 사용하여 서비스를 볼 때 해당 서비스에 HTML 도움말 파일을 게시하도록 지시합니다.  
  
 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageUrl%2A> 및 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl%2A> 속성은 표시되는 HTML 도움말 페이지의 위치를 제어합니다.  
  
 구성 파일을 사용하여 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 기능 중 하나를 사용하거나 사용하지 않도록 설정하려면 다음을 수행합니다.  
  
1.  추가 `behaviorConfiguration` 특성을 합니다 [ &lt;service&gt; ](~/docs/framework/configure-apps/file-schema/wcf/service.md) WCF 서비스에 대 한 요소입니다. 에 구성 된 끝점 동작 [ \<끝점 >](https://msdn.microsoft.com/library/13aa23b7-2f08-4add-8dbf-a99f8127c017) 요소, 서비스 동작은 [ &lt;service&gt; ](~/docs/framework/configure-apps/file-schema/wcf/service.md) 요소입니다.  
  
2.  추가 하거나 만듭니다는 [ &lt;serviceBehaviors&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicebehaviors.md) 추가한 섹션을 [ &lt;동작&gt; ](~/docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md) 합니다 일치하는이름사용하여요소를`behaviorConfiguration`1 단계에서 특성 값입니다. 끝점 동작은 [ &lt;endpointBehaviors&gt; ](~/docs/framework/configure-apps/file-schema/wcf/endpointbehaviors.md) 요소, 서비스 동작은 [ &lt;serviceBehaviors&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicebehaviors.md) 요소입니다.  
  
3.  추가 된 [ &lt;serviceDebug&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicedebug.md) 요소를 [ &lt;동작&gt; ](~/docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md) 2 단계에서 요소 및 사용 또는 사용 안 함에 적합 한 다양 한 속성 시나리오입니다.  
  
 구체적인 예를 보려면 예제 부분을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는 구성 파일을 사용하여 메타데이터 지원 및 HTML 도움말 페이지 기능을 사용하도록 설정하고 디버깅 목적으로 SOAP 오류 내부의 예외 정보를 클라이언트에 반환하는 방법을 보여 줍니다. 이 구성 파일에서는 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 기능을 지원하는 다음과 같은 기본 단계를 보여 줍니다.  
  
-   때문에 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 형식은 <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> 구현 합니다 [ &lt;서비스&gt; ](~/docs/framework/configure-apps/file-schema/wcf/service.md) 서비스 형식을 나타내는 요소에의 동작 구성 식별자가 `behaviorConfiguration="metadataAndDebug"`입니다.  
  
-   때문에 합니다 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 형식은 <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> 구현을 [ &lt;동작&gt; ](~/docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md) 요소에 추가 됩니다을 [ &lt;serviceBehaviors&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicebehaviors.md)섹션입니다. 설정를 `name` 특성을 [ &lt;동작&gt; ](~/docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md) 요소는 값의 식별자를 `behaviorConfiguration` 특성을 [ &lt;서비스&gt; ](~/docs/framework/configure-apps/file-schema/wcf/service.md) 요소입니다. 이 경우 값은 `metadataAndDebug`입니다.  
  
-   추가 된 [ &lt;serviceDebug&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicedebug.md) 요소 다양 한 특성을 사용 하 여 원하는 구성으로 설정 합니다. 이 경우 `httpHelpPageEnabled` 및 `includeExceptionDetailInFaults` 특성 값을 `true`로 설정합니다.  
  
 [!code-xml[ServiceDebugBehaviorConfig#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicedebugbehaviorconfig/cs/hostapplication.exe.config#1)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceDebugBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceDebugBehavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceDebugBehavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.ServiceModel.Description.ServiceDebugBehavior" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 다음 기본값을 사용하여 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 개체를 만듭니다.  
  
-   <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A> 속성은 `false`입니다.  
  
-   <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageEnabled%2A> 속성은 `true`입니다.  
  
-   <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageEnabled%2A> 속성은 `true`입니다.  
  
-   <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageUrl%2A> 속성 = HTTP 요청을 지원하는 서비스의 기본 주소  
  
-   <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl%2A>은 HTTPS 요청을 지원하는 서비스의 기본 주소입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpHelpPageBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding HttpHelpPageBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Binding HttpHelpPageBinding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpHelpPageBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::Binding ^ HttpHelpPageBinding { System::ServiceModel::Channels::Binding ^ get(); void set(System::ServiceModel::Channels::Binding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpHelpPageBinding : System.ServiceModel.Channels.Binding with get, set" Usage="System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>바인딩 정의에 대한 높은 수준의 액세스를 가져오거나 설정합니다.</summary>
        <value>채널 바인딩입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpHelpPageEnabled">
      <MemberSignature Language="C#" Value="public bool HttpHelpPageEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpHelpPageEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpHelpPageEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpHelpPageEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HttpHelpPageEnabled : bool with get, set" Usage="System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WCF(Windows Communication Foundation)가 <see cref="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageUrl" /> 속성으로 제어된 주소에 HTML 도움말 페이지를 게시할지 여부를 제어하는 값을 가져오거나 설정합니다.</summary>
        <value>WCF가 HTML 도움말 페이지를 게시하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 HTML 브라우저에 표시되는 HTML 도움말 페이지가 게시되지 않게 하려면 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageEnabled%2A> 속성을 `false`로 설정합니다.  
  
 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl%2A> 속성으로 지정된 위치에 HTML 도움말 페이지를 게시하려면 이 속성을 `true`로 설정하고 다음 조건 중 하나를 충족해야 합니다.  
  
-   <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl%2A> 속성이 HTTP 프로토콜 체계를 지원하는 절대 주소이어야 합니다.  
  
-   HTTP 프로토콜 체계를 지원하는 서비스의 기본 주소가 있어야 합니다.  
  
 HTTP 프로토콜 체계를 지원하지 않는 절대 주소가 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl%2A> 속성에 지정되면 예외가 throw되지만, 위의 조건을 모두 충족하지 않는 시나리오에서는 예외가 발생하지 않고 HTML 도움말 페이지도 생성되지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 구성 파일을 사용하여 HTML 도움말 페이지 기능을 사용하도록 설정하고 디버깅 목적으로 SOAP 오류 내부의 예외 정보를 클라이언트에 반환하는 방법을 보여 줍니다. 이 구성 파일에서는 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 기능을 지원하는 다음과 같은 기본 단계를 보여 줍니다.  
  
-   때문에 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 형식은 <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> 구현 합니다 [ &lt;서비스&gt; ](~/docs/framework/configure-apps/file-schema/wcf/service.md) 서비스 형식을 나타내는 요소에의 동작 구성 식별자가 `behaviorConfiguration="metadataAndDebug"`입니다.  
  
-   마찬가지로 때문에 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 형식은 <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> 구현을 [ &lt;동작&gt; ](~/docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md) 요소에 추가 됩니다을 [ &lt;serviceBehaviors&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicebehaviors.md) 섹션입니다. `name` 특성을 [ &lt;동작&gt; ](~/docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md) 요소 값의 식별자를 `behaviorConfiguration` 특성을 [ &lt;서비스&gt; ](~/docs/framework/configure-apps/file-schema/wcf/service.md) 요소입니다. 이 경우 값은 `metadataAndDebug`입니다.  
  
-   추가 된 [ &lt;serviceDebug&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicedebug.md) 요소 다양 한 특성을 사용 하 여 원하는 구성으로 설정 합니다. 이 경우 `httpHelpPageEnabled` 및 `includeExceptionDetailInFaults` 특성 값을 `true`로 설정합니다.  
  
 [!code-xml[ServiceDebugBehaviorConfig#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicedebugbehaviorconfig/cs/hostapplication.exe.config#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpHelpPageUrl">
      <MemberSignature Language="C#" Value="public Uri HttpHelpPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri HttpHelpPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpHelpPageUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ HttpHelpPageUrl { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpHelpPageUrl : Uri with get, set" Usage="System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>HTML 도움말 파일이 게시되는 위치를 가져오거나 설정합니다.</summary>
        <value>HTML 브라우저를 사용하여 엔드포인트를 볼 때 사용자에게 표시되는 사용자 지정 HTML 도움말 파일의 상대 또는 절대 HTTP 기반 URL입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageUrl%2A> 속성을 사용하면 HTML 브라우저 등에서 HTTP/Get 요청으로부터 반환되는 사용자 지정 HTML 도움말 파일을 사용하도록 설정할 수 있습니다. HTML 도움말 파일의 위치는 다음과 같이 확인됩니다.  
  
-   이 속성의 값이 상대 주소라면 HTML 도움말 파일의 위치는 HTTP 요청을 지원하는 서비스 기본 주소에 이 속성 값을 추가한 것입니다.  
  
-   이 속성의 값이 절대 주소이고 HTTP 요청을 지원한다면 HTML 도움말 파일의 위치는 이 속성의 값입니다.  
  
-   이 속성의 값이 절대 주소이지만 HTTP 요청을 지원하지 않는다면 예외가 throw됩니다.  
  
 이 속성은 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageEnabled%2A> 속성이 `true`인 경우에만 적용됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpsHelpPageBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding HttpsHelpPageBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Binding HttpsHelpPageBinding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsHelpPageBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::Binding ^ HttpsHelpPageBinding { System::ServiceModel::Channels::Binding ^ get(); void set(System::ServiceModel::Channels::Binding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpsHelpPageBinding : System.ServiceModel.Channels.Binding with get, set" Usage="System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>바인딩 정의에 대한 높은 수준의 액세스를 가져오거나 설정합니다.</summary>
        <value>채널 바인딩입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpsHelpPageEnabled">
      <MemberSignature Language="C#" Value="public bool HttpsHelpPageEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpsHelpPageEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsHelpPageEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpsHelpPageEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HttpsHelpPageEnabled : bool with get, set" Usage="System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WCF(Windows Communication Foundation)가 <see cref="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl" /> 속성으로 제어된 주소에 HTTPS를 통해 HTML 도움말 파일을 반환할지 여부를 제어하는 값을 가져오거나 설정합니다.</summary>
        <value>HTML 브라우저 등에서 HTTP/GET 요청을 수행하여 HTML 도움말 파일이 클라이언트에 반환되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 HTML 브라우저에 표시되는 HTML 도움말 페이지가 게시되지 않게 하려면 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageEnabled%2A> 속성을 `false`로 설정합니다.  
  
 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl%2A> 속성으로 지정된 위치에 HTML 도움말 페이지를 게시하려면 이 속성을 `true`로 설정하고 다음 조건 중 하나를 충족해야 합니다.  
  
-   <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl%2A> 속성이 HTTPS 프로토콜 체계를 지원하는 절대 주소이어야 합니다.  
  
-   HTTPS 프로토콜 체계를 지원하는 서비스의 기본 주소가 있어야 합니다.  
  
 HTTPS 프로토콜 체계를 지원하지 않는 절대 주소가 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl%2A> 속성에 지정되면 예외가 throw되지만, 위의 조건을 모두 충족하지 않는 시나리오에서는 예외가 발생하지 않고 HTML 도움말 페이지도 생성되지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpsHelpPageUrl">
      <MemberSignature Language="C#" Value="public Uri HttpsHelpPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri HttpsHelpPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsHelpPageUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ HttpsHelpPageUrl { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpsHelpPageUrl : Uri with get, set" Usage="System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>HTTPS를 통해 HTML 파일이 게시되는 위치를 가져오거나 설정합니다.</summary>
        <value>HTML 브라우저를 사용하여 엔드포인트를 볼 때 사용자에게 표시되는 사용자 지정 HTML 도움말 파일의 상대 또는 절대 HTTPS 기반 URL입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageUrl%2A> 속성을 사용하면 HTML 브라우저 등에서 HTTPS/Get 요청으로부터 반환되는 사용자 지정 HTML 도움말 파일을 사용하도록 설정할 수 있습니다.  
  
 HTML 도움말 파일의 위치는 다음과 같이 확인됩니다.  
  
-   이 속성의 값이 상대 주소이면 HTML 도움말 파일의 위치는 HTTPS 요청을 지원하는 서비스 기본 주소에 이 속성 값을 추가한 것입니다.  
  
-   이 속성의 값이 절대 주소이고 HTTPS 요청을 지원하면 HTML 도움말 파일의 위치는 이 속성의 값입니다.  
  
-   이 속성의 값이 절대 주소이지만 HTTPS 요청을 지원하지 않는다면 예외가 throw됩니다.  
  
 이 속성은 <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageEnabled%2A> 속성이 `true`인 경우에만 적용됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeExceptionDetailInFaults">
      <MemberSignature Language="C#" Value="public bool IncludeExceptionDetailInFaults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeExceptionDetailInFaults" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeExceptionDetailInFaults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeExceptionDetailInFaults { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeExceptionDetailInFaults : bool with get, set" Usage="System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>디버깅 목적으로 클라이언트에 반환되는 SOAP 오류 정보에 관리되는 예외 정보를 포함할지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
        <value><see langword="true" /> Windows Communication Foundation (WCF) 디버깅을 위해; 클라이언트에 대 한 SOAP 오류에서 관리 되는 예외 정보를 반환 하는 경우 그렇지 않으면 <see langword="false" />합니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정 된 <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A> 속성을 `true` 예외 정보를 클라이언트에 SOAP 오류 관리 되는 반환 하도록 WCF에 지시 하려면 손쉬운 디버깅을 위해에 합니다.  
  
> [!CAUTION]
>  관리되는 예외 정보를 클라이언트에 반환하면 예외 정보가 내부 서비스 구현 정보를 노출하여 권한이 없는 클라이언트에서 사용할 수 있으므로 보안상 위험할 수 있습니다. 또한 프로그래밍 방식으로 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 속성을 설정할 수도 있지만 배포 시 <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A> 비활성화를 잊기 쉬울 수 있습니다.  
  
 보안 문제와 관련이 있으므로 다음 작업을 수행하는 것이 좋습니다.  
  
-   애플리케이션 구성 파일을 사용하여 <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A> 속성 값을 `true`로 설정합니다.  
  
-   이 작업은 제어된 디버깅 시나리오에서만 수행하도록 합니다.  
  
 자세한 내용은 [지정 및 계약 및 서비스에서 오류 처리](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 구성 파일을 사용하여 HTML 도움말 페이지 기능을 사용하도록 설정하고 디버깅 목적으로 SOAP 오류 내부의 예외 정보를 클라이언트에 반환하는 방법을 보여 줍니다. 이 구성 파일에서는 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 기능을 지원하는 다음과 같은 기본 단계를 보여 줍니다.  
  
-   때문에 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 형식은 <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> 구현 합니다 [ &lt;서비스&gt; ](~/docs/framework/configure-apps/file-schema/wcf/service.md) 서비스 형식을 나타내는 요소에의 동작 구성 식별자가 `behaviorConfiguration="metadataAndDebug"`입니다.  
  
-   마찬가지로 때문에 <xref:System.ServiceModel.Description.ServiceDebugBehavior> 형식은 <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> 구현을 [ &lt;동작&gt; ](~/docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md) 요소에 추가 됩니다을 [ &lt;serviceBehaviors&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicebehaviors.md) 섹션입니다. 설정를 `name` 특성을 [ &lt;동작&gt; ](~/docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md) 요소는 값의 식별자를 `behaviorConfiguration` 특성을 [ &lt;서비스&gt; ](~/docs/framework/configure-apps/file-schema/wcf/service.md) 요소입니다. 이 경우 값은 `metadataAndDebug`입니다.  
  
-   추가 된 [ &lt;serviceDebug&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicedebug.md) 요소 다양 한 특성을 사용 하 여 원하는 구성으로 설정 합니다. 이 경우 `httpHelpPageEnabled` 및 `includeExceptionDetailInFaults` 특성 값을 `true`로 설정합니다.  
  
 [!code-xml[ServiceDebugBehaviorConfig#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicedebugbehaviorconfig/cs/hostapplication.exe.config#1)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceDebugBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IServiceBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description">서비스 설명입니다.</param>
        <param name="serviceHostBase">서비스 호스트입니다.</param>
        <param name="endpoints">서비스에 대한 엔드포인트입니다.</param>
        <param name="parameters">바인딩 수정을 지원하는 바인딩 매개 변수입니다.</param>
        <summary><see cref="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" /> 메서드를 구현하여 동작을 지원합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 동작을 지원하도록 바인딩을 수정합니다. 자세한 내용은 <xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A?displayProperty=nameWithType> 메서드를 참조하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceDebugBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">서비스 설명입니다.</param>
        <param name="serviceHostBase">서비스 호스트입니다.</param>
        <summary><see cref="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" /> 메서드를 구현하여 동작을 지원합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.Validate">
      <MemberSignature Language="C#" Value="void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.Validate(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceDebugBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.Validate(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">서비스 설명입니다.</param>
        <param name="serviceHostBase">서비스 호스트입니다.</param>
        <summary><see cref="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" /> 메서드를 구현하여 동작을 지원합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>