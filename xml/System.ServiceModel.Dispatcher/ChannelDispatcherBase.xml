<Type Name="ChannelDispatcherBase" FullName="System.ServiceModel.Dispatcher.ChannelDispatcherBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6ba8e27d5da87417e1566c1bc6af49bc5699abb2" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39758139" /></Metadata><TypeSignature Language="C#" Value="public abstract class ChannelDispatcherBase : System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChannelDispatcherBase extends System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChannelDispatcherBase&#xA;Inherits CommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChannelDispatcherBase abstract : System::ServiceModel::Channels::CommunicationObject" />
  <TypeSignature Language="F#" Value="type ChannelDispatcherBase = class&#xA;    inherit CommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.CommunicationObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>채널을 수락하여 서비스에 연결하는 채널 디스패처에 대한 추상 기본 클래스입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows Communication Foundation (WCF) 프로그래밍 모델을 유지 하지만 시스템 제공 런타임을 대체 하려는 개발자가 사용 됩니다. 그러한 애플리케이션은 채널에서 메시지를 끌어온 후 사용자 정의 디스패처를 사용하여 직접 처리합니다. <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>를 사용하려면 파생 클래스를 만들고, <xref:System.ServiceModel.ServiceHost>를 확장한 다음 <xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A>을 재정의하여 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>에서 파생된 클래스 인스턴스를 <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>에 추가합니다.  
  
 <xref:System.ServiceModel.Channels.IChannelListener> 개체와 연결된 <xref:System.ServiceModel.ServiceHost> 및 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>는 각각 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A> 및 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A>를 통해 검사하거나 수정하는 데 사용할 수 있습니다.  
  
 <xref:System.ServiceModel.ServiceHost>는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29> 컬렉션에서 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29> 항목을 추가하거나 제거할 때 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> 또는 <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> 메서드를 호출합니다.  
  
 <xref:System.ServiceModel.ServiceHost>는 시스템을 종료하는 동안 InstanceContexts를 닫기 전에 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A>을 호출합니다. Windows Communication Foundation (WCF)이이 호출을 사용 하 여 데이터 그램 채널을 닫고 모든 메시지를 InstanceContext로 가져올 때까지 기다립니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChannelDispatcherBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChannelDispatcherBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="protected virtual void Attach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Attach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Attach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Attach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberSignature Language="F#" Value="abstract member Attach : System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.Attach : System.ServiceModel.ServiceHostBase -&gt; unit" Usage="channelDispatcherBase.Attach host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host">서비스에 대한 <see cref="T:System.ServiceModel.ServiceHostBase" />입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 채널 디스패처를 특정 호스트에 연결합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>의 인스턴스가 <xref:System.ServiceModel.CommunicationState.Created> 상태에 있는 경우에만 설정할 수 있는데 그 이유는 이 상태가 변경 가능하면서 삭제되지 않은 유일한 상태이기 때문입니다.  
  
 <xref:System.ServiceModel.ServiceHost>는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>가 <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> 컬렉션에 추가될 때 이 메서드를 호출합니다.  이 메서드는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>에서 이벤트를 후크하여 <xref:System.ServiceModel.ServiceHost>를 검사할 수 있을 뿐만 아니라 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> 속성에서 반환되어야 하는 값을 제공합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="host" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 상태이거나 호스트가 이미 설정되어 있는 경우</exception>
        <exception cref="T:System.ObjectDisposedException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 상태에 있는 경우</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태에 있는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="CloseInput">
      <MemberSignature Language="C#" Value="public virtual void CloseInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseInput();" />
      <MemberSignature Language="F#" Value="abstract member CloseInput : unit -&gt; unit&#xA;override this.CloseInput : unit -&gt; unit" Usage="channelDispatcherBase.CloseInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>파생 클래스에서 재정의된 경우 채널 디스패처에 연결된 엔드포인트 디스패처를 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.ServiceHost>는 종료하는 동안 디스패처에서 메시지를 비울 수 있도록 이 메서드를 호출합니다. <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>는 이 호출을 사용하여 데이터그램 채널을 닫습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="protected virtual void Detach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Detach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Detach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Detach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberSignature Language="F#" Value="abstract member Detach : System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.Detach : System.ServiceModel.ServiceHostBase -&gt; unit" Usage="channelDispatcherBase.Detach host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host"><see cref="T:System.ServiceModel.ServiceHostBase" /></param>
        <summary>파생 클래스에서 재정의된 경우 채널 디스패처를 특정 호스트에서 분리합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.ServiceHostBase>는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>의 인스턴스가 <xref:System.ServiceModel.CommunicationState.Created> 상태에 있는 경우에만 분리할 수 있는데 그 이유는 이 상태가 변경 가능하면서 삭제되지 않은 유일한 상태이기 때문입니다.  
  
 채널 디스패처에 연결된 <xref:System.ServiceModel.ServiceHostBase>를 `null`로 설정해야 합니다.  
  
 <xref:System.ServiceModel.ServiceHost>는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>를 <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> 컬렉션에서 제거할 때 이 메서드를 호출합니다. 이 메서드는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>에서 이벤트를 언후크하여 <xref:System.ServiceModel.ServiceHost>를 검사할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="host" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.InvalidOperationException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 상태이거나 호스트가 이미 설정되어 있는 경우</exception>
        <exception cref="T:System.ObjectDisposedException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 또는 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 상태에 있는 경우</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">통신 개체가 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 상태에 있는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.ServiceHostBase Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceHostBase Host" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Host As ServiceHostBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::ServiceHostBase ^ Host { System::ServiceModel::ServiceHostBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Host : System.ServiceModel.ServiceHostBase" Usage="System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHostBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>파생 클래스에서 재정의된 경우 채널 디스패처에 연결된 서비스 호스트를 가져옵니다.</summary>
        <value>디스패처에 연결된 서비스에 대한 <see cref="T:System.ServiceModel.ServiceHostBase" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 각 <xref:System.ServiceModel.ServiceHost> 개체는 해당 서비스에 대한 서로 다른 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>에 연결된 여러 개의 <xref:System.ServiceModel.Channels.IChannelListener> 개체를 가질 수 있습니다. 호스트는 이러한 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> 개체의 목록을 <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> 컬렉션에 보관합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Listener">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.IChannelListener Listener { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.IChannelListener Listener" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Listener As IChannelListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::Channels::IChannelListener ^ Listener { System::ServiceModel::Channels::IChannelListener ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listener : System.ServiceModel.Channels.IChannelListener" Usage="System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>파생 클래스에서 재정의된 경우 채널 디스패처에 연결된 채널 수신기를 가져옵니다.</summary>
        <value>채널 디스패처에 연결된 <see cref="T:System.ServiceModel.Channels.IChannelListener" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>는 이 <xref:System.ServiceModel.Channels.IChannelListener>에서 해당 채널과 메시지를 디스패치하는 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>를 연결합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>