<Type Name="IInteractiveChannelInitializer" FullName="System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4bd12d5380309862688eee03402aeafd14bf034f" /><Meta Name="ms.sourcegitcommit" Value="7461f9e28c2f184bd1596e6f07c25a3f34984516" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/28/2019" /><Meta Name="ms.locfileid" Value="58548525" /></Metadata><TypeSignature Language="C#" Value="public interface IInteractiveChannelInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInteractiveChannelInitializer" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInteractiveChannelInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInteractiveChannelInitializer" />
  <TypeSignature Language="F#" Value="type IInteractiveChannelInitializer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>클라이언트 응용 프로그램에서 채널을 만들기 전에 사용자 인터페이스를 표시하여 ID 정보를 수집할 수 있게 해주는 메서드를 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 채널을 열기 전에 응용 프로그램 사용자가 자격 증명을 만들거나 선택할 수 있는 사용자 인터페이스를 클라이언트 응용 프로그램에서 표시하게 하려면 <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> 인터페이스를 구현합니다.  
  
 <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>를 구현하려면 <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType>에서 다음 단계를 수행합니다.  
  
1.  사용자에게 프롬프트를 표시하고 적절한 <xref:System.Net.NetworkCredential?displayProperty=nameWithType>을 가져옵니다.  
  
2.  <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> 형식의 매개 변수를 사용하여 <xref:System.ServiceModel.IClientChannel> 개체에서 <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType> 메서드에 의해 반환되는 컬렉션에 사용자 지정 채널 매개 변수 개체를 추가합니다. 이 채널 매개 변수 개체는 사용자 지정 <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType>가 채널에 대한 보안 토큰을 설정하는 데 사용됩니다.  
  
3.  반환합니다.  
  
 <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>를 삽입하려면 다음을 수행합니다.  
  
1.  <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=nameWithType> 클래스에서 <xref:System.ServiceModel.Description.ClientCredentials?displayProperty=nameWithType> 메서드를 재정의합니다.  
  
2.  이 메서드에서 엔드포인트에 <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>가 필요한지 여부를 확인하고, 필요한 경우 <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> 컬렉션에 <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=nameWithType>를 추가합니다.  
  
 응용 프로그램 개발자는 삽입된 <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>를 두 가지 방법으로 사용할 수 있습니다. 클라이언트 응용 프로그램이 호출할 수 있습니다 <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> 또는 <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> (또는 비동기 버전) 채널을 열기 전에 (합니다 *명시적* 접근 방식을) 첫 번째 작업을 호출 하거나 (의 *암시적* 접근 방식).  
  
 암시적 방법을 사용하는 경우 응용 프로그램은 <xref:System.ServiceModel.ClientBase%601> 또는 <xref:System.ServiceModel.IClientChannel> 확장에서 첫 번째 작업을 호출해야 합니다. 다른 작업을 호출하면 예외가 throw됩니다.  
  
 명시적 방법을 사용하는 경우 애플리케이션은 다음 단계를 순서대로 수행해야 합니다.  
  
1.  <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> 또는 <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType>(또는 비동기 버전)를 호출합니다.  
  
2.  이니셜라이저가 반환되면 <xref:System.ServiceModel.ICommunicationObject.Open%2A> 개체 또는 <xref:System.ServiceModel.IClientChannel> 속성에서 반환된 <xref:System.ServiceModel.IClientChannel> 개체에서 <xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=nameWithType> 메서드를 호출합니다.  
  
3.  작업을 호출합니다.  
  
 프로덕션 품질 응용 프로그램에서는 명시적 방법을 사용하여 사용자 인터페이스 프로세스를 제어하는 것이 좋습니다.  
  
 암시적 방법을 사용하는 응용 프로그램은 사용자 인터페이스 이니셜라이저를 호출하지만, 응용 프로그램 사용자가 바인딩에 대한 전송 시간 제한 내에 응답하지 않을 경우 사용자 인터페이스가 반환될 때 예외가 throw됩니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginDisplayInitializationUI (System.ServiceModel.IClientChannel channel, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginDisplayInitializationUI(class System.ServiceModel.IClientChannel channel, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginDisplayInitializationUI (channel As IClientChannel, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginDisplayInitializationUI(System::ServiceModel::IClientChannel ^ channel, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginDisplayInitializationUI : System.ServiceModel.IClientChannel * AsyncCallback * obj -&gt; IAsyncResult" Usage="iInteractiveChannelInitializer.BeginDisplayInitializationUI (channel, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IClientChannel" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="channel">클라이언트 채널입니다.</param>
        <param name="callback">콜백 개체입니다.</param>
        <param name="state">상태 데이터입니다.</param>
        <summary>자격 증명 정보를 얻기 위해 사용자 인터페이스를 사용하여 시작할 비동기 호출입니다.</summary>
        <returns>처리가 완료되면 콜백하는 데 사용할 <see cref="T:System.IAsyncResult" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>를 구현하려면 <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType>에서 다음 단계를 수행합니다.  
  
1.  적합한 방식으로 사용자에게 프롬프트를 표시하고 적절한 <xref:System.Net.NetworkCredential?displayProperty=nameWithType>을 가져옵니다.  
  
2.  <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> 형식의 매개 변수를 사용하여 <xref:System.ServiceModel.IClientChannel> 개체에서 <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType> 메서드에 의해 반환되는 컬렉션에 사용자 지정 채널 매개 변수 개체를 추가합니다. 이 채널 매개 변수 개체는 사용자 지정 <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType>가 채널에 대한 보안 토큰을 설정하는 데 사용됩니다.  
  
3.  반환합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public void EndDisplayInitializationUI (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDisplayInitializationUI(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndDisplayInitializationUI (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndDisplayInitializationUI(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndDisplayInitializationUI : IAsyncResult -&gt; unit" Usage="iInteractiveChannelInitializer.EndDisplayInitializationUI result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" /></param>
        <summary><see cref="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" />가 완료되면 호출됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>