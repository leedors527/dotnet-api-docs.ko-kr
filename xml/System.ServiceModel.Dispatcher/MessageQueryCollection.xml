<Type Name="MessageQueryCollection" FullName="System.ServiceModel.Dispatcher.MessageQueryCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e106ed35673d491d8de53b357658d7a227385af0" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39988100" /></Metadata><TypeSignature Language="C#" Value="public abstract class MessageQueryCollection : System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.MessageQuery&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageQueryCollection extends System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Dispatcher.MessageQuery&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.MessageQueryCollection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageQueryCollection&#xA;Inherits Collection(Of MessageQuery)" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueryCollection abstract : System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Dispatcher::MessageQuery ^&gt;" />
  <TypeSignature Language="F#" Value="type MessageQueryCollection = class&#xA;    inherit Collection&lt;MessageQuery&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.MessageQuery&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.ServiceModel.Dispatcher.MessageQuery</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>메시지 쿼리 개체의 컬렉션입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 구체적 구현은 <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> 클래스를 참조하십시오.  
  
   
  
## Examples  
 다음 예제에서는 메시지와 XPath 메시지 쿼리를 만듭니다. 쿼리는 <xref:System.ServiceModel.XPathMessageQuery> 개체에 포함된 <xref:System.ServiceModel.Dispatcher.XPathMessageQueryCollection> 개체를 통해 실행됩니다. 각 쿼리의 결과는 <xref:System.ServiceModel.Dispatcher.XPathResult.ResultType%2A> 클래스의 <xref:System.ServiceModel.Dispatcher.XPathResult> 속성을 사용하여 테스트됩니다.  
  
 [!code-csharp[XPathMessageQuery#0](~/samples/snippets/csharp/VS_Snippets_CFX/xpathmessagequery/cs/source.cs#0)]
 [!code-vb[XPathMessageQuery#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/xpathmessagequery/vb/source.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageQueryCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQueryCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageQueryCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.ServiceModel.Dispatcher.MessageQueryCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Evaluate&lt;TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>메시지에 대해 쿼리를 실행하고 쿼리를 충족하는 값을 반환합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 두 오버로드 간의 차이점은 하나는 <xref:System.ServiceModel.Channels.Message> 매개 변수를 사용하고 본문을 검사할 수 없으며, 다른 하나는 <xref:System.ServiceModel.Channels.MessageBuffer> 매개 변수를 사용하고 메시지의 모든 부분을 검사할 수 있다는 점입니다. 메시지 헤더는 자동으로 버퍼링되므로 별도의 사용 없이도 쿼리할 수 있습니다. 그러나 버퍼링되지 않은 메시지 본문은 쿼리에 사용될 수 있으므로 본문을 쿼리하려면 전체 메시지를 버퍼링해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Evaluate&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TResult&gt;&gt; Evaluate&lt;TResult&gt; (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageQuery, !!TResult&gt;&gt; Evaluate&lt;TResult&gt;(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageQuery ^, TResult&gt;&gt; ^ Evaluate(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.ServiceModel.Channels.Message -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery, 'Result&gt;&gt;" Usage="messageQueryCollection.Evaluate message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">쿼리 결과의 형식입니다.</typeparam>
        <param name="message">쿼리를 실행할 대상 메시지입니다.</param>
        <summary>메시지에 대해 쿼리를 실행하고 결과를 반환합니다. 본문은 쿼리할 수 없습니다.</summary>
        <returns>쿼리 결과입니다. 형식은 제네릭 <paramref name="TResult" /> 인수에 의해 결정됩니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TResult&gt;&gt; Evaluate&lt;TResult&gt; (System.ServiceModel.Channels.MessageBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.ServiceModel.Dispatcher.MessageQuery, !!TResult&gt;&gt; Evaluate&lt;TResult&gt;(class System.ServiceModel.Channels.MessageBuffer buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Evaluate(Of TResult) (buffer As MessageBuffer) As IEnumerable(Of KeyValuePair(Of MessageQuery, TResult))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::ServiceModel::Dispatcher::MessageQuery ^, TResult&gt;&gt; ^ Evaluate(System::ServiceModel::Channels::MessageBuffer ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.ServiceModel.Channels.MessageBuffer -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery, 'Result&gt;&gt;" Usage="messageQueryCollection.Evaluate buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.ServiceModel.Dispatcher.MessageQuery,TResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">반환할 개체의 형식입니다.</typeparam>
        <param name="buffer">쿼리를 실행할 대상 메시지입니다.</param>
        <summary>메시지에 대해 쿼리를 실행하고 결과를 반환합니다.</summary>
        <returns>쿼리 결과입니다. 형식은 제네릭 <paramref name="TResult" /> 인수에 의해 결정됩니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>