<Type Name="ServiceThrottle" FullName="System.ServiceModel.Dispatcher.ServiceThrottle">
  <Metadata><Meta Name="ms.openlocfilehash" Value="64cce57aa8fb280734af6c45b027060aaa599b61" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37454892" /></Metadata><TypeSignature Language="C#" Value="public sealed class ServiceThrottle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceThrottle extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.ServiceThrottle" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServiceThrottle" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceThrottle sealed" />
  <TypeSignature Language="F#" Value="type ServiceThrottle = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>서비스의 처리량을 제어하여 가용성과 성능을 최적화합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 서비스의 성능 특성을 조정하려면 <xref:System.ServiceModel.Dispatcher.ServiceThrottle>을 사용합니다. 서비스에 대한 <xref:System.ServiceModel.Dispatcher.ServiceThrottle>을 구성하는 가장 쉬운 방법은 특히, 애플리케이션 구성 파일에서 <xref:System.ServiceModel.Description.ServiceThrottlingBehavior>를 사용하는 것입니다.  
  
 <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> 속성은 <xref:System.ServiceModel.ServiceHost> 개체의 모든 디스패처 개체에서 동시에 처리할 수 있는 최대 메시지 수를 지정합니다.  
  
 <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> 속성은 서비스의 최대 <xref:System.ServiceModel.InstanceContext> 개체 수를 지정합니다.  
  
 <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> 속성은 <xref:System.ServiceModel.ServiceHost>에서 수락할 수 있는 최대 세션 수를 지정합니다.  
  
> [!NOTE]
>  첫 번째 호출, <xref:System.ServiceModel.InstanceContext> 또는 세션이 대기 목록의 큐에 대기 중일 때 추적이 기록됩니다. 첫 번째 추적이 경고로 기록됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 애플리케이션 구성 파일에서 <xref:System.ServiceModel.Dispatcher.ServiceThrottle>를 참조하여 <xref:System.ServiceModel.Description.ServiceThrottlingBehavior>을 사용하는 일반적인 방법을 보여 줍니다. 이 경우 지정되는 값은 한 <xref:System.ServiceModel.InstanceContext>에 대한 하나의 연결에서 한 번에 최대 하나의 메시지 처리만 설정합니다. 실제 사용량은 경험을 통해 결정해야 합니다.  
  
 [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="MaxConcurrentCalls">
      <MemberSignature Language="C#" Value="public int MaxConcurrentCalls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConcurrentCalls" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConcurrentCalls As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConcurrentCalls { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConcurrentCalls : int with get, set" Usage="System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.ServiceModel.ServiceHost" />의 모든 디스패처 개체에서 동시에 처리하는 최대 메시지 수를 가져오거나 설정합니다.</summary>
        <value>서비스의 활성 메시지에 대한 최대 개수입니다. 기본값은 16 * 컴퓨터의 프로세서 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> 속성은 <xref:System.ServiceModel.ServiceHost> 개체의 모든 디스패처 개체에서 동시에 처리할 수 있는 최대 메시지 수를 지정합니다. 각 채널 메시지의 값에 계산 되지 않는 보류 중 하나일 수 있습니다 <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> Windows Communication Foundation (WCF) 처리를 시작할 때까지 합니다.  
  
> [!NOTE]
>  이 속성 값이 초과될 때마다 추적이 기록됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 애플리케이션 구성 파일에서 <xref:System.ServiceModel.Dispatcher.ServiceThrottle>를 참조하여 <xref:System.ServiceModel.Description.ServiceThrottlingBehavior>을 사용하는 일반적인 방법을 보여 줍니다. 이 경우 지정되는 값은 한 <xref:System.ServiceModel.InstanceContext>에 대한 하나의 연결에서 한 번에 최대 하나의 메시지 처리만 설정합니다. 실제 사용량은 경험을 통해 결정해야 합니다.  
  
 [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConcurrentInstances">
      <MemberSignature Language="C#" Value="public int MaxConcurrentInstances { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConcurrentInstances" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConcurrentInstances As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConcurrentInstances { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConcurrentInstances : int with get, set" Usage="System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>한 번에 실행할 수 있는 최대 서비스 개체 수를 가져오거나 설정합니다.</summary>
        <value>한 번에 실행할 수 있는 서비스의 최대 <see cref="T:System.ServiceModel.InstanceContext" /> 개체 수입니다. 기본값은 최대 동시 호출 수 + 최대 동시 세션 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> 속성은 서비스의 최대 <xref:System.ServiceModel.InstanceContext> 개체 수를 지정합니다. <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> 속성과 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 속성의 관계에 유의해야 합니다. 하는 경우 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 는 <xref:System.ServiceModel.InstanceContextMode.PerSession> 결과 값은 세션의 총 수입니다. <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>가 <xref:System.ServiceModel.InstanceContextMode.PerCall>이면 결과 값은 동시 호출 수입니다. 최대 <xref:System.ServiceModel.InstanceContext> 개체 수에 이미 도달한 상태에서 메시지가 도착하면 해당 메시지는 <xref:System.ServiceModel.InstanceContext> 개체가 닫힐 때까지 보류됩니다.  
  
> [!NOTE]
>  이 속성 값이 초과될 때마다 추적이 기록됩니다. 첫 번째 추적이 경고로 기록됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 애플리케이션 구성 파일에서 <xref:System.ServiceModel.Dispatcher.ServiceThrottle>를 참조하여 <xref:System.ServiceModel.Description.ServiceThrottlingBehavior>을 사용하는 일반적인 방법을 보여 줍니다. 이 경우 지정되는 값은 한 <xref:System.ServiceModel.InstanceContext>에 대한 하나의 연결에서 한 번에 최대 하나의 메시지 처리만 설정합니다. 실제 사용량은 경험을 통해 결정해야 합니다.  
  
 [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConcurrentSessions">
      <MemberSignature Language="C#" Value="public int MaxConcurrentSessions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConcurrentSessions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConcurrentSessions As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConcurrentSessions { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConcurrentSessions : int with get, set" Usage="System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.ServiceModel.ServiceHost" /> 개체가 한 번에 수락할 수 있는 최대 세션 수를 지정하는 값을 가져오거나 설정합니다.</summary>
        <value>서비스 호스트가 수락하는 최대 세션 수입니다. 기본값은 100 * 컴퓨터의 프로세서 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> 속성은 <xref:System.ServiceModel.ServiceHost>가 수락할 수 있는 최대 채널 수를 지정합니다. 각 수신기 개체의 값에 계산 되지 않는 채널 보류 중 하나일 수 있습니다 <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> WCF 채널을 수락한 후 메시지 처리 시작 될 때까지 합니다. 이 속성은 세션을 활용하는 시나리오에서 가장 유용합니다.  
  
> [!NOTE]
>  이 속성 값이 초과될 때마다 추적이 기록됩니다. 첫 번째 추적이 경고로 기록됩니다.  
  
 세션에 대 한 자세한 내용은 참조 하십시오 [를 사용 하 여 세션](~/docs/framework/wcf/using-sessions.md)합니다.  
  
 일반적으로 이 속성은 <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A?displayProperty=nameWithType> 속성을 사용하여 설정됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 애플리케이션 구성 파일에서 <xref:System.ServiceModel.Dispatcher.ServiceThrottle>를 참조하여 <xref:System.ServiceModel.Description.ServiceThrottlingBehavior>을 사용하는 일반적인 방법을 보여 줍니다. 이 경우 지정되는 값은 한 <xref:System.ServiceModel.InstanceContext>에 대한 하나의 연결에서 한 번에 최대 하나의 메시지 처리만 설정합니다. 실제 사용량은 경험을 통해 결정해야 합니다.  
  
 [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>