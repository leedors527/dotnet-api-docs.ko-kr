<Type Name="SecurityContextSecurityTokenResolver" FullName="System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1a79bd9982f6aa491a42d6b37a32790eef388b80" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57912684" /></Metadata><TypeSignature Language="C#" Value="public class SecurityContextSecurityTokenResolver : System.IdentityModel.Selectors.SecurityTokenResolver, System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SecurityContextSecurityTokenResolver extends System.IdentityModel.Selectors.SecurityTokenResolver implements class System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class SecurityContextSecurityTokenResolver&#xA;Inherits SecurityTokenResolver&#xA;Implements ISecurityContextSecurityTokenCache" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityContextSecurityTokenResolver : System::IdentityModel::Selectors::SecurityTokenResolver, System::ServiceModel::Security::Tokens::ISecurityContextSecurityTokenCache" />
  <TypeSignature Language="F#" Value="type SecurityContextSecurityTokenResolver = class&#xA;    inherit SecurityTokenResolver&#xA;    interface ISecurityContextSecurityTokenCache" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenResolver</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>보안 컨텍스트 토큰을 확인합니다.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityContextSecurityTokenResolver (int securityContextCacheCapacity, bool removeOldestTokensOnCacheFull);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 securityContextCacheCapacity, bool removeOldestTokensOnCacheFull) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.#ctor(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (securityContextCacheCapacity As Integer, removeOldestTokensOnCacheFull As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityContextSecurityTokenResolver(int securityContextCacheCapacity, bool removeOldestTokensOnCacheFull);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver : int * bool -&gt; System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver" Usage="new System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver (securityContextCacheCapacity, removeOldestTokensOnCacheFull)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityContextCacheCapacity" Type="System.Int32" />
        <Parameter Name="removeOldestTokensOnCacheFull" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="securityContextCacheCapacity">보안 컨텍스트 캐시의 크기입니다.</param>
        <param name="removeOldestTokensOnCacheFull">캐시가 가득 찼을 때 가장 오래된 토큰을 제거해야 할 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary><see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 `removeOldestTokensOnCacheFull` 됩니다 `false`, `AddContext` throw를 <xref:System.ServiceModel.QuotaExceededException> 캐시 용량에 도달한 경우입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityContextSecurityTokenResolver (int securityContextCacheCapacity, bool removeOldestTokensOnCacheFull, TimeSpan clockSkew);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 securityContextCacheCapacity, bool removeOldestTokensOnCacheFull, valuetype System.TimeSpan clockSkew) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.#ctor(System.Int32,System.Boolean,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (securityContextCacheCapacity As Integer, removeOldestTokensOnCacheFull As Boolean, clockSkew As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityContextSecurityTokenResolver(int securityContextCacheCapacity, bool removeOldestTokensOnCacheFull, TimeSpan clockSkew);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver : int * bool * TimeSpan -&gt; System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver" Usage="new System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver (securityContextCacheCapacity, removeOldestTokensOnCacheFull, clockSkew)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityContextCacheCapacity" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="removeOldestTokensOnCacheFull" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="clockSkew" Type="System.TimeSpan" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="securityContextCacheCapacity">보안 컨텍스트 캐시의 크기입니다.</param>
        <param name="removeOldestTokensOnCacheFull">캐시가 가득 찼을 때 가장 오래된 토큰을 제거해야 할 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="clockSkew">클라이언트와 서버의 클록 설정 사이에 허용되는 최대 오차입니다.</param>
        <summary>지정된 보안 컨텍스트 캐시 용량과 최대 클록 오차를 사용하여 <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddContext">
      <MemberSignature Language="C#" Value="public void AddContext (System.ServiceModel.Security.Tokens.SecurityContextSecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddContext(class System.ServiceModel.Security.Tokens.SecurityContextSecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.AddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddContext (token As SecurityContextSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddContext(System::ServiceModel::Security::Tokens::SecurityContextSecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member AddContext : System.ServiceModel.Security.Tokens.SecurityContextSecurityToken -&gt; unit&#xA;override this.AddContext : System.ServiceModel.Security.Tokens.SecurityContextSecurityToken -&gt; unit" Usage="securityContextSecurityTokenResolver.AddContext token" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.AddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">보안 컨텍스트 토큰입니다.</param>
        <summary>보안 컨텍스트 보안 토큰을 토큰 캐시에 추가합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ServiceModel.QuotaExceededException"><see cref="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull" /> 속성이 <see langword="false" />이고 캐시 용량에 도달했거나 용량을 초과했습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearContexts">
      <MemberSignature Language="C#" Value="public void ClearContexts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearContexts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.ClearContexts" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearContexts ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearContexts();" />
      <MemberSignature Language="F#" Value="abstract member ClearContexts : unit -&gt; unit&#xA;override this.ClearContexts : unit -&gt; unit" Usage="securityContextSecurityTokenResolver.ClearContexts " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.ClearContexts</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>콘텐츠의 토큰 캐시를 지웁니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClockSkew">
      <MemberSignature Language="C#" Value="public TimeSpan ClockSkew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ClockSkew" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.ClockSkew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClockSkew As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ClockSkew { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.ClockSkew : TimeSpan" Usage="System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.ClockSkew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>클라이언트와 서버의 클록 설정 사이에 허용되는 최대 오차를 반환합니다.</summary>
        <value>클라이언트와 서버의 클록 설정 사이에 허용되는 최대 오차입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllContexts">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&gt; GetAllContexts (System.Xml.UniqueId contextId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&gt; GetAllContexts(class System.Xml.UniqueId contextId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.GetAllContexts(System.Xml.UniqueId)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllContexts (contextId As UniqueId) As Collection(Of SecurityContextSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Security::Tokens::SecurityContextSecurityToken ^&gt; ^ GetAllContexts(System::Xml::UniqueId ^ contextId);" />
      <MemberSignature Language="F#" Value="abstract member GetAllContexts : System.Xml.UniqueId -&gt; System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&gt;&#xA;override this.GetAllContexts : System.Xml.UniqueId -&gt; System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&gt;" Usage="securityContextSecurityTokenResolver.GetAllContexts contextId" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetAllContexts(System.Xml.UniqueId)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
      </Parameters>
      <Docs>
        <param name="contextId">지정된 보안 컨텍스트 ID입니다.</param>
        <summary>지정된 컨텍스트 ID와 일치하는 보안 컨텍스트 보안 토큰 ID의 컬렉션을 가져옵니다.</summary>
        <returns>보안 컨텍스트 토큰의 제네릭 컬렉션입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.Tokens.SecurityContextSecurityToken GetContext (System.Xml.UniqueId contextId, System.Xml.UniqueId generation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Security.Tokens.SecurityContextSecurityToken GetContext(class System.Xml.UniqueId contextId, class System.Xml.UniqueId generation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.GetContext(System.Xml.UniqueId,System.Xml.UniqueId)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContext (contextId As UniqueId, generation As UniqueId) As SecurityContextSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Security::Tokens::SecurityContextSecurityToken ^ GetContext(System::Xml::UniqueId ^ contextId, System::Xml::UniqueId ^ generation);" />
      <MemberSignature Language="F#" Value="abstract member GetContext : System.Xml.UniqueId * System.Xml.UniqueId -&gt; System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&#xA;override this.GetContext : System.Xml.UniqueId * System.Xml.UniqueId -&gt; System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" Usage="securityContextSecurityTokenResolver.GetContext (contextId, generation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetContext(System.Xml.UniqueId,System.Xml.UniqueId)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.Tokens.SecurityContextSecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
        <Parameter Name="generation" Type="System.Xml.UniqueId" />
      </Parameters>
      <Docs>
        <param name="contextId">지정된 보안 컨텍스트 ID입니다.</param>
        <param name="generation">생성입니다.</param>
        <summary>지정된 컨텍스트 ID 및 생성과 일치하는 보안 컨텍스트 보안 토큰 ID를 가져옵니다.</summary>
        <returns>일치하는 보안 컨텍스트 토큰입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllContexts">
      <MemberSignature Language="C#" Value="public void RemoveAllContexts (System.Xml.UniqueId contextId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAllContexts(class System.Xml.UniqueId contextId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveAllContexts(System.Xml.UniqueId)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAllContexts (contextId As UniqueId)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAllContexts(System::Xml::UniqueId ^ contextId);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAllContexts : System.Xml.UniqueId -&gt; unit&#xA;override this.RemoveAllContexts : System.Xml.UniqueId -&gt; unit" Usage="securityContextSecurityTokenResolver.RemoveAllContexts contextId" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveAllContexts(System.Xml.UniqueId)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
      </Parameters>
      <Docs>
        <param name="contextId">지정된 보안 컨텍스트 ID입니다.</param>
        <summary>제공된 컨텍스트 ID와 일치하는 캐시에서 모든 토큰을 제거합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveContext">
      <MemberSignature Language="C#" Value="public void RemoveContext (System.Xml.UniqueId contextId, System.Xml.UniqueId generation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveContext(class System.Xml.UniqueId contextId, class System.Xml.UniqueId generation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveContext(System.Xml.UniqueId,System.Xml.UniqueId)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveContext (contextId As UniqueId, generation As UniqueId)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveContext(System::Xml::UniqueId ^ contextId, System::Xml::UniqueId ^ generation);" />
      <MemberSignature Language="F#" Value="abstract member RemoveContext : System.Xml.UniqueId * System.Xml.UniqueId -&gt; unit&#xA;override this.RemoveContext : System.Xml.UniqueId * System.Xml.UniqueId -&gt; unit" Usage="securityContextSecurityTokenResolver.RemoveContext (contextId, generation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveContext(System.Xml.UniqueId,System.Xml.UniqueId)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
        <Parameter Name="generation" Type="System.Xml.UniqueId" />
      </Parameters>
      <Docs>
        <param name="contextId">지정된 보안 컨텍스트 ID입니다.</param>
        <param name="generation">생성입니다.</param>
        <summary>제공된 컨텍스트 ID 및 생성과 일치하는 캐시에서 토큰을 제거합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveOldestTokensOnCacheFull">
      <MemberSignature Language="C#" Value="public bool RemoveOldestTokensOnCacheFull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RemoveOldestTokensOnCacheFull" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoveOldestTokensOnCacheFull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RemoveOldestTokensOnCacheFull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoveOldestTokensOnCacheFull : bool" Usage="System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>캐시가 가득 찼을 때 가장 오래된 토큰을 제거해야 하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>캐시가 가득 찼을 때 가장 오래된 토큰을 제거해야 할 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityContextTokenCacheCapacity">
      <MemberSignature Language="C#" Value="public int SecurityContextTokenCacheCapacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SecurityContextTokenCacheCapacity" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.SecurityContextTokenCacheCapacity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecurityContextTokenCacheCapacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SecurityContextTokenCacheCapacity { int get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityContextTokenCacheCapacity : int" Usage="System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.SecurityContextTokenCacheCapacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>보안 컨텍스트 캐시 크기를 가져옵니다.</summary>
        <value>보안 컨텍스트 토큰 캐시의 크기입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddContext">
      <MemberSignature Language="C#" Value="public bool TryAddContext (System.ServiceModel.Security.Tokens.SecurityContextSecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryAddContext(class System.ServiceModel.Security.Tokens.SecurityContextSecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryAddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAddContext (token As SecurityContextSecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryAddContext(System::ServiceModel::Security::Tokens::SecurityContextSecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member TryAddContext : System.ServiceModel.Security.Tokens.SecurityContextSecurityToken -&gt; bool&#xA;override this.TryAddContext : System.ServiceModel.Security.Tokens.SecurityContextSecurityToken -&gt; bool" Usage="securityContextSecurityTokenResolver.TryAddContext token" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.TryAddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">보안 컨텍스트 토큰입니다.</param>
        <summary>토큰을 캐시에 추가하려고 합니다.</summary>
        <returns>토큰이 성공적으로 캐시에 추가되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="token" />이 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="token" /> 날짜 또는 시간이 범위를 벗어난 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="TryResolveSecurityKeyCore">
      <MemberSignature Language="C#" Value="protected override bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryResolveSecurityKeyCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryResolveSecurityKeyCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef key As SecurityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryResolveSecurityKeyCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityKey ^ % key);" />
      <MemberSignature Language="F#" Value="override this.TryResolveSecurityKeyCore : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="securityContextSecurityTokenResolver.TryResolveSecurityKeyCore (keyIdentifierClause, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SecurityKey" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">보안 키 식별자 절입니다.</param>
        <param name="key">이 메서드의 반환 값에는 확인된 키 핵심이 포함됩니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
        <summary>지정된 키 식별자 절이 제공되는 경우 보안 키 핵심을 확인하려고 시도합니다.</summary>
        <returns>키 핵심이 성공적으로 확인되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryResolveTokenCore">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 키 식별자가 제공되는 경우 토큰을 확인하려고 시도합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryResolveTokenCore (keyIdentifier As SecurityKeyIdentifier, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="override this.TryResolveTokenCore : System.IdentityModel.Tokens.SecurityKeyIdentifier *  -&gt; bool" Usage="securityContextSecurityTokenResolver.TryResolveTokenCore (keyIdentifier, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier">보안 키 식별자입니다.</param>
        <param name="token">이 메서드의 반환 값에는 확인된 키 핵심이 포함됩니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
        <summary>지정된 키 식별자가 제공되는 경우 토큰을 확인하려고 시도합니다.</summary>
        <returns>키 토큰이 성공적으로 확인되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryResolveTokenCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="override this.TryResolveTokenCore : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="securityContextSecurityTokenResolver.TryResolveTokenCore (keyIdentifierClause, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">보안 키 식별자 절입니다.</param>
        <param name="token">이 메서드의 반환 값에는 확인된 키 핵심이 포함됩니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
        <summary>지정된 키 식별자 절이 제공되는 경우 토큰을 확인하려고 시도합니다.</summary>
        <returns>키 토큰이 성공적으로 확인되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateContextCachingTime">
      <MemberSignature Language="C#" Value="public void UpdateContextCachingTime (System.ServiceModel.Security.Tokens.SecurityContextSecurityToken context, DateTime expirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateContextCachingTime(class System.ServiceModel.Security.Tokens.SecurityContextSecurityToken context, valuetype System.DateTime expirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.UpdateContextCachingTime(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateContextCachingTime (context As SecurityContextSecurityToken, expirationTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateContextCachingTime(System::ServiceModel::Security::Tokens::SecurityContextSecurityToken ^ context, DateTime expirationTime);" />
      <MemberSignature Language="F#" Value="abstract member UpdateContextCachingTime : System.ServiceModel.Security.Tokens.SecurityContextSecurityToken * DateTime -&gt; unit&#xA;override this.UpdateContextCachingTime : System.ServiceModel.Security.Tokens.SecurityContextSecurityToken * DateTime -&gt; unit" Usage="securityContextSecurityTokenResolver.UpdateContextCachingTime (context, expirationTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.UpdateContextCachingTime(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken,System.DateTime)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="context">보안 컨텍스트입니다.</param>
        <param name="expirationTime">새 만료 시간 및 날짜입니다.</param>
        <summary>캐시에서 토큰의 만료 날짜를 업데이트합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>