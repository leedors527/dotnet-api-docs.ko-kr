<Type Name="SecureConversationServiceCredential" FullName="System.ServiceModel.Security.SecureConversationServiceCredential">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b507ff86d3d28a0198880442d73a284a2a76dd60" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39810637" /></Metadata><TypeSignature Language="C#" Value="public sealed class SecureConversationServiceCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SecureConversationServiceCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.SecureConversationServiceCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecureConversationServiceCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecureConversationServiceCredential sealed" />
  <TypeSignature Language="F#" Value="type SecureConversationServiceCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>보안 대화 서비스의 자격 증명 설정을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 보안 대화에서는 여러 메시지를 교환하며 SCT(보안 컨텍스트 토큰)를 사용하여 보안을 보장합니다. SCT는 통신 세션의 수명이 끝날 때까지 통신 당사자 간에 공유됩니다. 하나의 서비스는 두 가지 종류의 SCT를 발급할 수 있습니다.  
  
-   첫 번째는 고유한 ID를 포함하는 세션 기반의 SCT입니다. 메시지는 ID만 전달하고, 서비스에서 SCT ID와 콘텐츠(예: 클레임, 보안 키 등) 간을 매핑하는 상태 매핑 캐시를 유지합니다. 제대로 작동하는 클라이언트는 서비스가 캐시 리소스를 최적화할 수 있도록 SCT 취소를 보내야 합니다. <xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A> 매개 변수를 `requireCancellation`로 지정한 `true`를 호출하여 이 클래스를 인스턴스화할 경우 SCT가 이러한 방식으로 발급됩니다.  
  
-   두 번째는 클라이언트의 쿠키에 상주하는 독립적인 SCT입니다. 이 SCT는 전체 상태 정보를 포함하므로 서비스의 상태 관리나 클라이언트의 SCT 취소가 필요하지 않습니다. 이를 "쿠키 모드" SCT라고도 합니다. SCT에 전체 상태 정보가 포함되므로 세션 기반 경우보다 SCT의 크기가 큽니다. 세션 기반 SCT에서는 상태 정보의 대부분이 서비스에 저장됩니다. 그러나 이 SCT는 독립적이므로 서비스 수명이 끝날 때까지 사용 가능하며 서비스 종료 후 다시 시작하더라도 지속됩니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SecurityContextClaimTypes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Type&gt; SecurityContextClaimTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Type&gt; SecurityContextClaimTypes" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecurityContextClaimTypes As Collection(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;Type ^&gt; ^ SecurityContextClaimTypes { System::Collections::ObjectModel::Collection&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityContextClaimTypes : System.Collections.ObjectModel.Collection&lt;Type&gt;" Usage="System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>쿠키 serialization을 위한 <see cref="T:System.Type" /> 클레임 컬렉션을 가져옵니다.</summary>
        <value>쿠키 serialization을 위한 <see cref="T:System.Type" /> 클레임 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows Communication Foundation (WCF) 사용 하 여 클레임을 SCT 쿠키를 serialize 하려면 <xref:System.Runtime.Serialization.DataContractSerializer> 기본적으로 합니다. 클레임 리소스는 확장이 가능 하기 때문에 WCF를 사용 하면 알려진된 리소스 형식의 목록을 제공할 수 있습니다. 이 목록은 <xref:System.Runtime.Serialization.DataContractSerializer>에서 쿠키의 클레임을 deserialization할 때 원래의 강력한 형식 개체를 반환할 수 있도록 지원합니다.  
  
   
  
## Examples  
 다음 코드에서는 이 속성을 가져오는 방법을 보여 줍니다.  
  
 [!code-csharp[S_UE_SecureConversationServiceCredential#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_secureconversationservicecredential/cs/source.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityStateEncoder">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.SecurityStateEncoder SecurityStateEncoder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.SecurityStateEncoder SecurityStateEncoder" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityStateEncoder As SecurityStateEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::SecurityStateEncoder ^ SecurityStateEncoder { System::ServiceModel::Security::SecurityStateEncoder ^ get(); void set(System::ServiceModel::Security::SecurityStateEncoder ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityStateEncoder : System.ServiceModel.Security.SecurityStateEncoder with get, set" Usage="System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityStateEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>쿠키 serialization을 인코딩 및 디코딩하는 데 사용되는 사용자 지정 <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" />를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.ServiceModel.Security.SecurityStateEncoder" />의 사용자 지정 <see cref="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 "쿠키 모드"에서 서비스는 SCT(보안 컨텍스트 토큰)를 쿠키 형태로 클라이언트에 발급하므로 클라이언트가 보안 상태를 유지할 필요가 없습니다. 클라이언트는 서비스에서 요청 메시지를 보호 해제하고 확인하는 방법을 알 수 있도록 요청 메시지에 쿠키를 돌려 보냅니다. SCT는 비보안 네트워크를 통해 전송되는 경우가 많으므로 보호해야 합니다.  
  
 기본적으로 Windows Communication Foundation (WCF)은 사용 된 <xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder> 데이터 보호 API (DPAPI)를 사용 하 여 쿠키를 보호 하는 클래스입니다. DPAPI가 웹 팜 환경에서 제대로 작동하려면 모든 백엔드 서비스가 동일한 도메인 사용자 계정으로 실행되어야 합니다. 즉 서비스가 웹 호스팅되는 경우 IIS(인터넷 정보 서비스) 작업자 프로세스는 도메인 사용자로 실행되도록 구성되어야 합니다.  
  
 이 속성을 사용하면 사용자 지정 <xref:System.ServiceModel.Security.SecurityStateEncoder>를 사용하여 쿠키를 암호화하고 해독할 수 있으므로 DPAPI를 사용할 필요가 없습니다.  
  
   
  
## Examples  
 다음 코드에서는 이 속성을 설정하는 방법을 보여 줍니다.  
  
 [!code-csharp[S_UE_SecureConversationServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_secureconversationservicecredential/cs/source.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>