<Type Name="UserNamePasswordServiceCredential" FullName="System.ServiceModel.Security.UserNamePasswordServiceCredential">
  <Metadata><Meta Name="ms.openlocfilehash" Value="02b9bc7c53dafeb720e50be2ae10d0c9ebea5154" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39758347" /></Metadata><TypeSignature Language="C#" Value="public sealed class UserNamePasswordServiceCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit UserNamePasswordServiceCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.UserNamePasswordServiceCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UserNamePasswordServiceCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class UserNamePasswordServiceCredential sealed" />
  <TypeSignature Language="F#" Value="type UserNamePasswordServiceCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>서비스가 사용자 이름/암호 인증을 사용하는 사용자를 인증하는 방법을 구성하고 로그온 토큰의 캐싱을 구성하는 데 사용하는 클래스를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자 이름/암호 기반 인증을 위해 구성된 서비스에서 사용하는 바인딩이 없으면 이 클래스의 관련 속성이 무시됩니다. 이러한 속성에는 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator%2A>, <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.IncludeWindowsGroups%2A>, <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> 및 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> 속성이 포함됩니다.  
  
 사용자 이름/암호에 대한 Windows 인증을 사용하기 위해 구성된 서비스에서 사용하는 바인딩이 없으면 로그온 토큰의 캐싱과 관련된 설정이 무시됩니다. 이러한 설정에는 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime%2A>, <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens%2A> 및 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens%2A> 속성이 포함됩니다.  
  
   
  
## Examples  
 다음 예제에서는 서비스에 대한 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential> 속성의 값을 출력합니다.  
  
 [!code-csharp[UserNamePasswordServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamepasswordservicecredential/cs/source.cs#1)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamepasswordservicecredential/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CachedLogonTokenLifetime">
      <MemberSignature Language="C#" Value="public TimeSpan CachedLogonTokenLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CachedLogonTokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Property CachedLogonTokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan CachedLogonTokenLifetime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.CachedLogonTokenLifetime : TimeSpan with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>토큰이 캐시되는 최대 시간 길이를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.TimeSpan" /> 토큰이 캐시 되는 최대 기간을 나타내는입니다. 기본값은 5분입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 자세한 내용은 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens%2A>을 참조하세요.  
  
   
  
## Examples  
 다음 예제에서는 이 속성의 값을 가져옵니다.  
  
 [!code-csharp[UserNamePasswordServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamepasswordservicecredential/cs/source.cs#1)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamepasswordservicecredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheLogonTokens">
      <MemberSignature Language="C#" Value="public bool CacheLogonTokens { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CacheLogonTokens" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheLogonTokens As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CacheLogonTokens { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CacheLogonTokens : bool with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>로그온 토큰이 캐시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>로그온 토큰이 캐시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로 WCF 보안 사용자 이름이 Windows 계정에 매핑되는 경우 모든 들어오는 사용자 이름/암호 보안 토큰에 대 한 로그온 토큰을 만들려면 Windows 보안 하위 시스템을 요청 합니다. <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> 속성을 설정하면 이 동작을 변경할 수 있습니다.  
  
 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Windows> 모드의 경우 서비스는 사용자 이름/암호 인증에 Win32의 `LogonUser` 함수를 사용합니다. <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens%2A>가 `true`로 설정되면 결과 Windows 토큰이 캐시되고, 같은 사용자 이름/암호 쌍에 다시 사용됩니다. <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime%2A>에 대해 캐시가 유효합니다. 최대 캐시 수는 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens%2A>로 제한됩니다.  
  
   
  
## Examples  
 다음 예제에서는 이 속성의 값을 가져옵니다.  
  
 [!code-csharp[UserNamePasswordServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamepasswordservicecredential/cs/source.cs#1)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamepasswordservicecredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomUserNamePasswordValidator">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Selectors.UserNamePasswordValidator CustomUserNamePasswordValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Selectors.UserNamePasswordValidator CustomUserNamePasswordValidator" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomUserNamePasswordValidator As UserNamePasswordValidator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Selectors::UserNamePasswordValidator ^ CustomUserNamePasswordValidator { System::IdentityModel::Selectors::UserNamePasswordValidator ^ get(); void set(System::IdentityModel::Selectors::UserNamePasswordValidator ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomUserNamePasswordValidator : System.IdentityModel.Selectors.UserNamePasswordValidator with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.UserNamePasswordValidator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 지정 사용자 이름 및 암호 유효성 검사기를 가져오거나 설정합니다.</summary>
        <value>사용자 지정 사용자 이름 및 암호 유효성 검사기입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 변경 내용을 적용하려면 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A>에 대해 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider> 속성을 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A>로 설정해야 합니다. 경우는 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> 속성을 설정 및 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> 속성이 아닙니다, WCF Windows 인증을 사용 하 고 값을 무시 합니다 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> 속성.  
  
 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Custom> 모드의 경우, 서비스는 <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> 메서드를 호출함으로써 사용자 이름/암호 인증에 <xref:System.IdentityModel.Selectors.UserNamePasswordValidator.Validate%2A>를 사용합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeWindowsGroups">
      <MemberSignature Language="C#" Value="public bool IncludeWindowsGroups { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeWindowsGroups" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.IncludeWindowsGroups" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeWindowsGroups As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeWindowsGroups { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeWindowsGroups : bool with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.IncludeWindowsGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Windows 그룹이 보안 컨텍스트에 포함되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>Windows 그룹이 보안 컨텍스트에 포함되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows 사용자 이름 및 암호의 유효성을 검사할 때 대부분의 시나리오에서는 사용자가 속한 Windows 그룹이 인증 결정에 유용한 정보를 제공합니다. 그러나 Windows 그룹이 필요하지 않은 경우 이 속성을 `false`로 설정하여 전체 그룹 클레임 채우기를 사용하지 않음으로써 성능을 향상시킬 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 이 속성의 값을 가져옵니다.  
  
 [!code-csharp[UserNamePasswordServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamepasswordservicecredential/cs/source.cs#1)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamepasswordservicecredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCachedLogonTokens">
      <MemberSignature Language="C#" Value="public int MaxCachedLogonTokens { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCachedLogonTokens" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCachedLogonTokens As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxCachedLogonTokens { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxCachedLogonTokens : int with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>캐시할 최대 로그온 토큰 수를 가져오거나 설정합니다.</summary>
        <value>캐시할 최대 로그온 토큰 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본값은 128입니다. 자세한 내용은 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens%2A>을 참조하세요.  
  
   
  
## Examples  
 다음 예제에서는 이 속성의 값을 가져옵니다.  
  
 [!code-csharp[UserNamePasswordServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamepasswordservicecredential/cs/source.cs#1)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamepasswordservicecredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MembershipProvider">
      <MemberSignature Language="C#" Value="public System.Web.Security.MembershipProvider MembershipProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Security.MembershipProvider MembershipProvider" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property MembershipProvider As MembershipProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Security::MembershipProvider ^ MembershipProvider { System::Web::Security::MembershipProvider ^ get(); void set(System::Web::Security::MembershipProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MembershipProvider : System.Web.Security.MembershipProvider with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>멤버 자격 공급자를 가져오거나 설정합니다.</summary>
        <value>이 서비스에 대한 <see cref="T:System.Web.Security.MembershipProvider" />입니다. 기본값은 <see cref="T:System.Web.Security.SqlMembershipProvider" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider> 모드의 경우, 서비스는 <xref:System.Web.Security.MembershipProvider> 메서드를 호출함으로써 사용자 이름/암호 인증에 <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>를 사용합니다.  
  
> [!NOTE]
>  변경 내용을 적용하려면 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A>에 대해 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider> 속성을 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A>로 설정해야 합니다. 경우는 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> 속성을 설정 및 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> 속성이 아닙니다, WCF Windows 인증을 사용 하 고 값을 무시 합니다 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> 속성.  
  
 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode> 속성은 `MembershipProvider`로 설정되고 `MembershipProvider` 속성은 값으로 설정되지 않으면, 기본값은 <xref:System.Web.Security.SqlMembershipProvider> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">자격 증명이 읽기 전용일 때 이 속성을 설정하려고 한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="UserNamePasswordValidationMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.UserNamePasswordValidationMode UserNamePasswordValidationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Security.UserNamePasswordValidationMode UserNamePasswordValidationMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode" />
      <MemberSignature Language="VB.NET" Value="Public Property UserNamePasswordValidationMode As UserNamePasswordValidationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::UserNamePasswordValidationMode UserNamePasswordValidationMode { System::ServiceModel::Security::UserNamePasswordValidationMode get(); void set(System::ServiceModel::Security::UserNamePasswordValidationMode value); };" />
      <MemberSignature Language="F#" Value="member this.UserNamePasswordValidationMode : System.ServiceModel.Security.UserNamePasswordValidationMode with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.UserNamePasswordValidationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 이름 및 암호의 유효성을 검사하는 메서드를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.ServiceModel.Security.UserNamePasswordValidationMode" />의 열거형에서 가져온 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 가능한 값은 다음과 같습니다.  
  
-   <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Custom>  
  
-   <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider>  
  
-   <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Windows>  
  
 이 속성이 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Custom>으로 설정되면, 서비스는 들어오는 메시지의 사용자 이름 및 암호에 대한 유효성 검사를 위해 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator%2A>에서 반환된 개체를 사용합니다.  
  
> [!NOTE]
>  WCF 서비스에서 인터넷 정보 서비스 (IIS) 전송 수준 보안을 사용 하 여 호스팅된 경우 및 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> 속성이 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Custom>, 사용자 지정 인증 체계는 Windows 인증의 하위 집합을 사용 합니다. 이것은 IIS이이 시나리오에서는 WCF 사용자 지정 인증자를 호출 하기 전에 Windows 인증을 수행 합니다.  
  
 이 속성의 값이 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider>로 설정되면, <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> 속성을 설정하여 멤버 자격 공급자를 지정한 다음 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> 속성에 의해 지정된 멤버 자격 공급자 인스턴스를 사용하여 들어오는 메시지의 사용자 이름 및 암호에 대해 유효성 검사를 수행합니다.  
  
   
  
## Examples  
 다음 예제에서는 이 속성의 값을 가져옵니다.  
  
 [!code-csharp[UserNamePasswordServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamepasswordservicecredential/cs/source.cs#1)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamepasswordservicecredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>