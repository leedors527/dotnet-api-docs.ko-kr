<Type Name="WindowsClientCredential" FullName="System.ServiceModel.Security.WindowsClientCredential">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6a36d7f1a3e40b77cf1c8b65ca7c8b2d58241a1d" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56792436" /></Metadata><TypeSignature Language="C#" Value="public sealed class WindowsClientCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WindowsClientCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.WindowsClientCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WindowsClientCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsClientCredential sealed" />
  <TypeSignature Language="F#" Value="type WindowsClientCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>클라이언트를 나타내기 위해 사용할 Windows 자격 증명 관련 속성을 지정할 수 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Security.WindowsClientCredential>을 사용하면 서비스와 통신할 때 사용되는 Windows 클라이언트 속성을 설정할 수 있습니다. <xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A>은 서비스가 클라이언트를 가장할 때의 가장 수준을 설정합니다. <xref:System.ServiceModel.Security.WindowsClientCredential.ClientCredential%2A>은 클라이언트가 사용자 이름과 암호를 사용하여 서비스의 인증을 얻을 수 있도록 합니다. <xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A>에 따라 Kerberos를 사용하지 않을 경우 클라이언트 인증에 NTLM을 사용할 수 있는지 여부가 결정됩니다.  
  
   
  
## Examples  
 다음 예제에서는 클라이언트를 생성하고 <xref:System.ServiceModel.Security.WindowsClientCredential>에 대한 참조를 가져옵니다. 그런 다음 <xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A>을 새 값으로 변경합니다.  
  
 [!code-csharp[WindowsClientCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#1)]
 [!code-vb[WindowsClientCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/windowsclientcredential/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowedImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowedImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel AllowedImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); void set(System::Security::Principal::TokenImpersonationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.AllowedImpersonationLevel : System.Security.Principal.TokenImpersonationLevel with get, set" Usage="System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>허용되는 가장 수준을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 Windows SSPI 협상 인증 사용 시 클라이언트가 서버에 부여하는 가장 수준을 지정합니다. 서버가 클라이언트 토큰을 가장할 때 얻는 가장 수준은 이 설정에 의해서만 지정되는 것은 아니며, 서비스가 실행 중인 계정의 연결된 권한 및 도메인 설정에 의해서도 지정됩니다.  
  
 클라이언트는 이 속성을 사용하여 허용된 가장 수준을 명시적으로 설정해야 합니다.  
  
 클라이언트가 익명 가장을 지정하면 서비스에 대해 어떤 가장도 수행되지 않을 때도 클라이언트는 항상 익명으로 서비스의 인증을 얻습니다. 이것이 Windows 운영 체제의 기본 동작이기 때문입니다.  
  
 Windows 가장에 대 한 자세한 내용은 이동 [가장 및 되돌리기](https://go.microsoft.com/fwlink/?LinkId=96178)합니다. Windows Communication Foundation을 사용 하는 가장에 대 한 자세한 내용은 참조 하세요. [위임 및 가장](~/docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 이 속성을 설정하는 방법을 보여 줍니다.  
  
 [!code-csharp[WindowsClientCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#1)]
 [!code-vb[WindowsClientCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/windowsclientcredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowNtlm">
      <MemberSignature Language="C#" Value="public bool AllowNtlm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowNtlm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowNtlm As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowNtlm { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowNtlm : bool with get, set" Usage="System.ServiceModel.Security.WindowsClientCredential.AllowNtlm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This property is deprecated and is maintained for backward compatibility only. The local machine policy will be used to determine if NTLM should be used.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Windows SSPI 협상 인증으로 NTLM 인증이 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>Windows SSPI 협상 인증으로 NTLM 인증이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 `true`로 설정하면 Kerberos를 사용할 수 없는 경우 NTLM으로 인증을 다운그레이드할 수 있습니다.  
  
 이 속성을 설정 `false` 하면 NTLM이 사용 하는 경우 예외를 throw 하는 최상의 노력을 하도록 Windows Communication Foundation (WCF). 이 속성을 `false`로 설정하면 유선을 통해 NTLM 자격 증명을 보낼 수 있습니다.  
  
 작업 그룹 및 로컬 계정과 같은 특정 배포에서는 NTLM 인증이 필요합니다. 이 플래그 설정 `false` 이러한 배포 결과 WCF를 사용 하는 경우 인증이 실패에서 합니다. Kerberos에서만 지원하는 상호 인증이 필요한 배포에서는 이 플래그를 `false`로 설정합니다.  
  
 NTLM (Windows NT LAN Manager)은 Windows NT 운영 체제를 실행 하는 시스템이 포함 된 네트워크와 독립 실행형 시스템에서 사용 하는 인증 프로토콜입니다.  
  
 Microsoft Kerberos 보안 패키지는 NTLM보다 강력한 보안을 네트워크의 시스템에 추가합니다. Microsoft Kerberos 프로토콜을 선택한 경우에 NTLM이 계속 지원 및 독립 실행형 시스템에 Windows NT 4.0 이전 버전을 실행 하는 시스템이 포함 하는 경우에 네트워크 인증을 사용 해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential ClientCredential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkCredential ClientCredential" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.WindowsClientCredential.ClientCredential" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCredential As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkCredential ^ ClientCredential { System::Net::NetworkCredential ^ get(); void set(System::Net::NetworkCredential ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCredential : System.Net.NetworkCredential with get, set" Usage="System.ServiceModel.Security.WindowsClientCredential.ClientCredential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Windows 클라이언트 자격 증명을 가져오거나 설정합니다.</summary>
        <value>클라이언트의 <see cref="T:System.Net.NetworkCredential" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로 현재 스레드의 자격 증명은 Windows SSPI 협상 인증을 수행 하기 위한 WCF에서 사용 됩니다.  
  
 클라이언트를 다른 주체로 인증하려면 이 속성에서 반환하는 <xref:System.Net.NetworkCredential> 클래스 인스턴스의 속성을 변경합니다. 또는 <xref:System.Net.NetworkCredential> 클래스의 새 인스턴스를 만들어 이 속성에 할당합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 다른 보안 주체로 클라이언트를 인증하는 방법을 보여 줍니다.  
  
 다음은 이 속성에 의해 반환되는 <xref:System.Net.NetworkCredential> 클래스의 인스턴스 속성을 변경하는 방법입니다.  
  
 [!code-csharp[WindowsClientCredential#2](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#2)]  
  
 다음은 <xref:System.Net.NetworkCredential> 클래스의 새 인스턴스를 만들고 이 속성에 할당하는 방법입니다.  
  
 [!code-csharp[WindowsClientCredential#3](~/samples/snippets/csharp/VS_Snippets_CFX/windowsclientcredential/cs/source.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>