<Type Name="IClientChannel" FullName="System.ServiceModel.IClientChannel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="31e125d4cdee1456f764a56dec9c8807f4c18715" /><Meta Name="ms.sourcegitcommit" Value="7461f9e28c2f184bd1596e6f07c25a3f34984516" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/28/2019" /><Meta Name="ms.locfileid" Value="58554492" /></Metadata><TypeSignature Language="C#" Value="public interface IClientChannel : IDisposable, System.ServiceModel.IContextChannel, System.ServiceModel.IExtensibleObject&lt;System.ServiceModel.IContextChannel&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IClientChannel implements class System.IDisposable, class System.ServiceModel.Channels.IChannel, class System.ServiceModel.ICommunicationObject, class System.ServiceModel.IContextChannel, class System.ServiceModel.IExtensibleObject`1&lt;class System.ServiceModel.IContextChannel&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.IClientChannel" />
  <TypeSignature Language="VB.NET" Value="Public Interface IClientChannel&#xA;Implements IContextChannel, IDisposable, IExtensibleObject(Of IContextChannel)" />
  <TypeSignature Language="C++ CLI" Value="public interface class IClientChannel : IDisposable, System::ServiceModel::IContextChannel, System::ServiceModel::IExtensibleObject&lt;System::ServiceModel::IContextChannel ^&gt;" />
  <TypeSignature Language="F#" Value="type IClientChannel = interface&#xA;    interface IContextChannel&#xA;    interface ICommunicationObject&#xA;    interface IDisposable&#xA;    interface IChannel&#xA;    interface IExtensibleObject&lt;IContextChannel&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.IContextChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.IExtensibleObject&lt;System.ServiceModel.IContextChannel&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>클라이언트 응용 프로그램에서 사용하는 아웃바운드 요청 및 요청/응답 채널의 동작을 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.IClientChannel> 인터페이스에서는 <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType>을 호출하여 반환되는 모든 채널에서 지원하는 작업을 정의합니다. 아웃바운드 형식의 채널을 검사하고 수정하려면 <xref:System.ServiceModel.IClientChannel> 메서드 및 속성을 사용합니다. 합니다 [ServiceModel Metadata 유틸리티 도구 (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) 둘 다 내보냅니다를 <xref:System.ServiceModel.ClientBase%601> 클래스와 대상 서비스 계약에 모두에서 상속 되는 계약 인터페이스를 만들어 서비스 계약 인터페이스 및 <xref:System.ServiceModel.IClientChannel>, 서비스에 모두 프록시로 확장 된 계약을 사용 하 고 클라이언트 채널에 액세스할 수 있도록 합니다.  
  
 자세한 내용은 [WCF 클라이언트 아키텍처](~/docs/framework/wcf/feature-details/client-architecture.md)합니다. 생성 된 클라이언트 코드 파일에서 해당 모양의 예제를 참조 하세요 [생성 된 클라이언트 코드 이해](~/docs/framework/wcf/feature-details/understanding-generated-client-code.md)합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowInitializationUI">
      <MemberSignature Language="C#" Value="public bool AllowInitializationUI { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowInitializationUI" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.IClientChannel.AllowInitializationUI" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowInitializationUI As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowInitializationUI { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowInitializationUI : bool with get, set" Usage="System.ServiceModel.IClientChannel.AllowInitializationUI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>해당 컬렉션이 비어 있지 않은 경우 <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" />에서 <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" /> 속성의 <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" /> 개체를 호출하려고 시도할지 또는 throw할지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see langword="true" /> Windows Communication Foundation (WCF) 대화형 채널 이니셜라이저를 호출 하는 허용 되는 경우 그렇지 않으면 <see langword="false" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 초기화 대화 상자를 표시하는 대신 예외를 throw하려면 이 속성을 `false`로 설정합니다. 이 속성은 응용 프로그램이 대화 상자를 표시하도록 구성된 경우에도 대화 상자를 표시하지 않도록 하려는 중간 계층 시나리오에 유용합니다. 세부 정보를 참조 하세요 [WCF 클라이언트를 사용 하 여 액세스 서비스](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) 고 <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType>입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginDisplayInitializationUI (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginDisplayInitializationUI(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginDisplayInitializationUI (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginDisplayInitializationUI(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginDisplayInitializationUI : AsyncCallback * obj -&gt; IAsyncResult" Usage="iClientChannel.BeginDisplayInitializationUI (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">이 메서드가 완료될 때 호출되는 메서드입니다.</param>
        <param name="state">채널 상태에 대한 정보입니다.</param>
        <summary>자격 증명 정보를 얻기 위해 사용자 인터페이스를 사용하여 시작할 비동기 호출입니다.</summary>
        <returns>처리가 완료되면 콜백하는 데 사용할 <see cref="T:System.IAsyncResult" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 대화형 채널 초기화(예: CardSpace 카드 선택)를 발생시키려면 이 메서드를 호출합니다. <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType>을 명시적으로 호출하지 않고 채널을 사용하는 경우에는 자동으로 호출되므로 이 호출은 여러 응용 프로그램에서 선택 사항입니다.  
  
 그러나 선택 프로세스에서 시간이 오래 걸리는 경우 이 메서드를 자동으로 호출한 작업의 제한 시간이 초과될 수 있습니다. 이를 방지하려면 <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> 또는 <xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A>와 <xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A>를 명시적으로 호출합니다. 이러한 작업에는 시간 제한이 없으므로 응용 프로그램에서 이 대화 상자가 나타나는 위치를 정확히 제어할 수 있습니다.  
  
 응용 프로그램이 이러한 작업을 수행하도록 구성된 경우 이 메서드는 대화 상자만 표시합니다. 응용 프로그램이 CardSpace 또는 다른 대화형 채널 이니셜라이저를 사용하도록 구성되지 않은 경우 아무런 동작도 없이 이 호출이 반환됩니다.  
  
 이 메서드를 명시적으로 호출하는 경우에는 또한 채널을 사용하기 전에 명시적으로 열어야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DidInteractiveInitialization">
      <MemberSignature Language="C#" Value="public bool DidInteractiveInitialization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DidInteractiveInitialization" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DidInteractiveInitialization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DidInteractiveInitialization { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DidInteractiveInitialization : bool" Usage="System.ServiceModel.IClientChannel.DidInteractiveInitialization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>자격 증명 정보를 얻기 위해 사용자 인터페이스를 호출했는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> 메서드를 호출했거나 <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> 및 <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" /> 메서드를 호출했으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.IClientChannel> 및 <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A>을 호출하지 않고 <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType>에서 작업을 호출한 경우 이러한 메서드가 자동으로 호출됩니다. 세부 정보를 참조 하세요 [WCF 클라이언트를 사용 하 여 액세스 서비스](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) 고 <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType>입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInitializationUI">
      <MemberSignature Language="C#" Value="public void DisplayInitializationUI ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisplayInitializationUI() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisplayInitializationUI ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisplayInitializationUI();" />
      <MemberSignature Language="F#" Value="abstract member DisplayInitializationUI : unit -&gt; unit" Usage="iClientChannel.DisplayInitializationUI " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>자격 증명 정보를 얻기 위한 사용자 인터페이스 호출입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 대화형 채널 초기화(예: CardSpace 카드 선택)를 발생시키려면 이 메서드를 호출합니다. <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType>을 명시적으로 호출하지 않고 채널을 사용하는 경우에는 자동으로 호출되므로 이 호출은 여러 응용 프로그램에서 선택 사항입니다.  
  
 그러나 선택 프로세스에서 시간이 오래 걸리는 경우 이 메서드를 자동으로 호출한 작업의 제한 시간이 초과될 수 있습니다. 이를 방지하려면 <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> 또는 <xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A>와 <xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A>를 명시적으로 호출합니다. 이러한 작업에는 시간 제한이 없으므로 응용 프로그램에서 이 대화 상자가 나타나는 위치를 정확히 제어할 수 있습니다.  
  
 응용 프로그램이 이러한 작업을 수행하도록 구성된 경우 이 메서드는 대화 상자만 표시합니다. 응용 프로그램이 CardSpace 또는 다른 대화형 채널 이니셜라이저를 사용하도록 구성되지 않은 경우 아무런 동작도 없이 이 호출이 반환됩니다.  
  
 이 메서드를 명시적으로 호출하는 경우에는 또한 채널을 사용하기 전에 명시적으로 열어야 합니다.  
  
 세부 정보를 참조 하세요 [WCF 클라이언트를 사용 하 여 액세스 서비스](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md) 고 <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType>입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public void EndDisplayInitializationUI (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDisplayInitializationUI(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndDisplayInitializationUI (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndDisplayInitializationUI(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndDisplayInitializationUI : IAsyncResult -&gt; unit" Usage="iClientChannel.EndDisplayInitializationUI result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" /></param>
        <summary><see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> 호출이 끝나면 호출됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownMessageReceived">
      <MemberSignature Language="C#" Value="event EventHandler&lt;System.ServiceModel.UnknownMessageReceivedEventArgs&gt; UnknownMessageReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ServiceModel.UnknownMessageReceivedEventArgs&gt; UnknownMessageReceived" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.IClientChannel.UnknownMessageReceived" />
      <MemberSignature Language="VB.NET" Value="Event UnknownMessageReceived As EventHandler(Of UnknownMessageReceivedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::ServiceModel::UnknownMessageReceivedEventArgs ^&gt; ^ UnknownMessageReceived;" />
      <MemberSignature Language="F#" Value="member this.UnknownMessageReceived : EventHandler&lt;System.ServiceModel.UnknownMessageReceivedEventArgs&gt; " Usage="member this.UnknownMessageReceived : System.EventHandler&lt;System.ServiceModel.UnknownMessageReceivedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ServiceModel.UnknownMessageReceivedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>예약된 이벤트입니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Via">
      <MemberSignature Language="C#" Value="public Uri Via { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Via" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.IClientChannel.Via" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Via As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Via { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Via : Uri" Usage="System.ServiceModel.IClientChannel.Via" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>클라이언트 채널에서 보낸 메시지의 전송 주소를 포함하는 URI를 가져옵니다.</summary>
        <value>채널에서 보낸 메시지의 전송 주소를 포함하는 <see cref="T:System.Uri" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.EndpointAddress>가 지정되지 않은 경우 <xref:System.ServiceModel.IClientChannel.Via%2A>가 최종 대상과 물리적 주소 둘 모두로 사용됩니다. <xref:System.ServiceModel.IClientChannel.Via%2A>가 지정된 경우 이 속성이 메시지를 보낸 실제 물리적 주소이고 이 주소를 통해 메시지가 대상에 도착해야 합니다. 이 값은 <xref:System.ServiceModel.Description.ClientViaBehavior?displayProperty=nameWithType>를 사용하여 구성 파일에서 설정할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>