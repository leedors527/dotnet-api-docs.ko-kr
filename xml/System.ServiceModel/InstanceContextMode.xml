<Type Name="InstanceContextMode" FullName="System.ServiceModel.InstanceContextMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6cc670a91ba9cd04f8f15714a1fe94480758599e" /><Meta Name="ms.sourcegitcommit" Value="2d8393b83688679d14f9fafe22c1fddd0ea39674" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/17/2019" /><Meta Name="ms.locfileid" Value="54363143" /></Metadata><TypeSignature Language="C#" Value="public enum InstanceContextMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed InstanceContextMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.InstanceContextMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum InstanceContextMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class InstanceContextMode" />
  <TypeSignature Language="F#" Value="type InstanceContextMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>들어오는 메시지에 포함된 호출을 처리할 수 있는 서비스 인스턴스 수를 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType>는 채널과 사용자 정의 서비스 개체 간의 연결을 관리합니다. <xref:System.ServiceModel.InstanceContextMode> 속성이 있는 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> 열거형을 사용하여 <xref:System.ServiceModel.InstanceContext> 개체의 수명을 지정합니다. Windows Communication Foundation (WCF)을 새로 만들 수 있습니다 <xref:System.ServiceModel.InstanceContext> 모든 호출과 모든 세션에 대 한 개체 또는 지정 된 <xref:System.ServiceModel.InstanceContext> 단일 서비스 개체에 바인딩된 개체입니다. 작업 예제를 참조 합니다 [Instancing](~/docs/framework/wcf/samples/instancing.md)합니다.  
  
 단일 값을 지정 하는 단일 <xref:System.ServiceModel.InstanceContextMode.Single> 서비스의 수명에 대 한 개체를 사용 해야 합니다.  
  
> [!NOTE]
>  경우는 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 는 서비스 수 하나의 메시지만 처리할 번도 설정 하지 않으면 결과 단일 값이 설정의 <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> 값을 <xref:System.ServiceModel.ConcurrencyMode.Multiple>입니다.  
  
   
  
## Examples  
 다음 코드에서는 서비스 클래스에 대해 <xref:System.ServiceModel.InstanceContextMode>를 설정하는 방법을 보여 줍니다.  
  
 [!code-csharp[S_ReliableSession#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_reliablesession/cs/service.cs#1)]
 [!code-vb[S_ReliableSession#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_reliablesession/vb/service.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" />
    <altmember cref="P:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
  </Docs>
  <Members>
    <Member MemberName="PerCall">
      <MemberSignature Language="C#" Value="PerCall" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.InstanceContextMode PerCall = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.InstanceContextMode.PerCall" />
      <MemberSignature Language="VB.NET" Value="PerCall" />
      <MemberSignature Language="C++ CLI" Value="PerCall" />
      <MemberSignature Language="F#" Value="PerCall = 1" Usage="System.ServiceModel.InstanceContextMode.PerCall" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContextMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>새 <see cref="T:System.ServiceModel.InstanceContext" /> 개체는 매번 호출하기 전에 만들어지고 매번 호출한 후에 재활용됩니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="PerSession">
      <MemberSignature Language="C#" Value="PerSession" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.InstanceContextMode PerSession = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.InstanceContextMode.PerSession" />
      <MemberSignature Language="VB.NET" Value="PerSession" />
      <MemberSignature Language="C++ CLI" Value="PerSession" />
      <MemberSignature Language="F#" Value="PerSession = 0" Usage="System.ServiceModel.InstanceContextMode.PerSession" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContextMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>각 세션마다 새 <see cref="T:System.ServiceModel.InstanceContext" /> 개체가 만들어집니다. 채널에서 세션을 만들지 않으면 이 값은 <see cref="F:System.ServiceModel.InstanceContextMode.PerCall" />인 것처럼 동작합니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="Single">
      <MemberSignature Language="C#" Value="Single" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.InstanceContextMode Single = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.InstanceContextMode.Single" />
      <MemberSignature Language="VB.NET" Value="Single" />
      <MemberSignature Language="C++ CLI" Value="Single" />
      <MemberSignature Language="F#" Value="Single = 2" Usage="System.ServiceModel.InstanceContextMode.Single" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContextMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>하나의 <see cref="T:System.ServiceModel.InstanceContext" /> 개체만 들어오는 모든 호출에 대해 사용되며 호출 후에는 재활용되지 않습니다. 서비스 개체가 없는 경우 새로 만들어집니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Singleton 수명 동작에 대 한 (호스트 애플리케이션을 호출 하는 경우에 예를 들어 합니다 <xref:System.ServiceModel.ServiceHost.%23ctor%2A> 생성자 서비스로 사용할 개체를 전달), 서비스 클래스를 설정 해야 합니다 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 단일, 서비스 호스트가 열릴 때 예외가 throw 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>