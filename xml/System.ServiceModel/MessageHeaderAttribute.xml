<Type Name="MessageHeaderAttribute" FullName="System.ServiceModel.MessageHeaderAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="223839b9e1f260cb0ec8b9482354f41ddcfa85a4" /><Meta Name="ms.sourcegitcommit" Value="7461f9e28c2f184bd1596e6f07c25a3f34984516" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/28/2019" /><Meta Name="ms.locfileid" Value="58552087" /></Metadata><TypeSignature Language="C#" Value="public class MessageHeaderAttribute : System.ServiceModel.MessageContractMemberAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageHeaderAttribute extends System.ServiceModel.MessageContractMemberAttribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.MessageHeaderAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageHeaderAttribute&#xA;Inherits MessageContractMemberAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageHeaderAttribute : System::ServiceModel::MessageContractMemberAttribute" />
  <TypeSignature Language="F#" Value="type MessageHeaderAttribute = class&#xA;    inherit MessageContractMemberAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.MessageContractMemberAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>데이터 멤버가 SOAP 메시지 헤더임을 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.MessageHeaderAttribute> 특성을 사용하면 <xref:System.ServiceModel.MessageContractAttribute> 특성으로 표시된 형식의 필드와 속성을 SOAP 메시지 헤더에 매핑할 수 있습니다. 필드 또는 속성은 serialize할 수 있는 단순 형식이나 복합 형식 중 하나입니다.  
  
 기본 SOAP 봉투 자체를 수정 하지 않고 SOAP 본문 내용의 serialization을 제어에 대 한 내용은 참조 하세요 <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=nameWithType>, [Specifying Data Transfer in Service Contracts](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md), 및 [데이터 사용 계약](~/docs/framework/wcf/feature-details/using-data-contracts.md)합니다.  
  
 메시지 계약을 만드는 방법에 대 한 자세한 내용은 참조 하세요. [Using Message Contracts](~/docs/framework/wcf/feature-details/using-message-contracts.md)합니다.  
  
 SOAP 표준은 헤더에 있을 수 있는 다음 특성을 정의합니다.  
  
-   `Actor` 또는 `Role`(SOAP 1.1에서는 `Actor`, SOAP 1.2에서는 `Role`)  
  
-   `MustUnderstand`  
  
-   `Relay`  
  
 `Actor` 또는 `Role` 특성은 지정된 헤더를 사용할 노드의 URI를 지정합니다. `MustUnderstand` 특성은 헤더에서 노드 처리를 인식하는지 여부를 지정합니다. `Relay` 특성은 헤더를 다운스트림 노드로 릴레이할지 여부를 지정합니다. Windows Communication Foundation (WCF)는 제외 하 고 들어오는 메시지에 이러한 특성의 처리를 수행 하지는 `MustUnderstand` 특성입니다.  
  
 이러한 특성을 기본적으로 보내지는 않더라도 읽고 쓸 수 있습니다. 해당 특성 값은 두 가지 방법으로 지정할 수 있습니다. 먼저 <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A>에서 <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A>, <xref:System.ServiceModel.MessageHeaderAttribute.Relay%2A> 및 <xref:System.ServiceModel.MessageHeaderAttribute> 속성을 변경할 수 있습니다. (방법이 없는 `Role` 설정-합니다 <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A> 속성 및 `Role` SOAP 1.2을 사용 하는 경우 전달 됩니다). 예:  
  
  
  
 이러한 특성을 제어하는 두 번째 방법은 필요한 헤더 형식을 <xref:System.ServiceModel.MessageHeader%601> 클래스의 형식 매개 변수로 만들고 그렇게 만들어진 형식과 <xref:System.ServiceModel.MessageHeaderAttribute>를 함께 사용하는 것입니다. 그런 다음 <xref:System.ServiceModel.MessageHeader%601> 속성을 사용하여 SOAP 특성을 프로그래밍 방식으로 설정합니다. 예:  
  
  
  
  
  
 동적 및 정적 제어 메커니즘을 모두 사용하는 경우 기본값은 정적 설정이지만 동적 메커니즘을 사용하여 재정의할 수 있습니다. 예:  
  
  
  
  
  
 동적 특성 제어로 반복되는 헤더를 만들 수 있습니다. 예:  
  
```  
[MessageHeaderArray] public MessageHeader<Person> documentApprovers[];  
```  
  
 제네릭 <xref:System.ServiceModel.MessageHeader%601> 클래스를 사용하는 경우 받는 쪽에서는 이러한 SOAP 특성을 읽기만 가능합니다. 받는 메시지에서 특성 설정을 검색하려면 <xref:System.ServiceModel.MessageHeader%601.Actor%2A> 형식 헤더의 <xref:System.ServiceModel.MessageHeader%601.Relay%2A>, <xref:System.ServiceModel.MessageHeader%601.MustUnderstand%2A> 또는 <xref:System.ServiceModel.MessageHeader%601> 속성을 검사합니다.  
  
 메시지를 받은 다음 다시 보내면 SOAP 특성 설정은 <xref:System.ServiceModel.MessageHeader%601> 형식의 헤더에 대해서만 라운드트립을 수행합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.ServiceModel.MessageHeaderAttribute>를 사용하여 이 헤더에 적절한 값으로 설정된 <xref:System.ServiceModel.MessageContractMemberAttribute.Name%2A>, <xref:System.ServiceModel.MessageContractMemberAttribute.Namespace%2A> 및 <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> 속성으로 응답 메시지의 SOAP 헤더를 만드는 방법을 보여 줍니다. 메시지를 보내면 코드 예제 다음에 메시지의 예제가 표시됩니다.  
  
 [!code-csharp[MessageHeaderAttribute#4](~/samples/snippets/csharp/VS_Snippets_CFX/messageheaderattribute/cs/services.cs#4)]
 [!code-vb[MessageHeaderAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/messageheaderattribute/vb/services.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageHeaderAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MessageHeaderAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageHeaderAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.ServiceModel.MessageHeaderAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Actor">
      <MemberSignature Language="C#" Value="public string Actor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Actor" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageHeaderAttribute.Actor" />
      <MemberSignature Language="VB.NET" Value="Public Property Actor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Actor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Actor : string with get, set" Usage="System.ServiceModel.MessageHeaderAttribute.Actor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 헤더의 대상이 되는 노드를 나타내는 URI를 가져오거나 설정합니다. SOAP 1.2를 사용하는 경우에는 역할 헤더 특성에 매핑하고, SOAP 1.1을 사용하는 경우에는 행위자 헤더 특성에 매핑합니다.</summary>
        <value>이 헤더의 대상이 되는 노드를 나타내는 URI입니다. 이 URI는 SOAP 1.2를 사용하는 경우 역할 헤더 특성에 매핑하고, SOAP 1.1을 사용하는 경우 행위자 헤더 특성에 매핑합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 자세한 내용은 <xref:System.ServiceModel.MessageHeaderAttribute>의 설명 부분을 참조하십시오.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MustUnderstand">
      <MemberSignature Language="C#" Value="public bool MustUnderstand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MustUnderstand" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageHeaderAttribute.MustUnderstand" />
      <MemberSignature Language="VB.NET" Value="Public Property MustUnderstand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MustUnderstand { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MustUnderstand : bool with get, set" Usage="System.ServiceModel.MessageHeaderAttribute.MustUnderstand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.ServiceModel.MessageHeaderAttribute.Actor" /> 역할에서 동작하는 노드가 이 헤더를 인식해야 하는지 여부를 지정합니다. 이 설정은 <see langword="mustUnderstand" /> SOAP 헤더 특성에 매핑됩니다.</summary>
        <value><see cref="P:System.ServiceModel.MessageHeaderAttribute.Actor" /> 역할에서 동작하는 노드이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 자세한 내용은 <xref:System.ServiceModel.MessageHeaderAttribute>의 설명 부분을 참조하십시오.  
  
> [!IMPORTANT]
>  보내는 중인 메시지에서 <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> 속성이 `true`이고 받는 쪽 응용 프로그램에서 헤더를 인식하지 못하면 오류가 생성됩니다. 반대로, 경우 함께 헤더를 `mustUnderstand` SOAP 헤더 특성이로 설정 `true` 수신 하 여 Windows Communication Foundation (WCF), 메시지 계약의 일부 여야 합니다 (또는 Windows Communication Foundation (WCF) 중 하나에서 처리 되어야 합니다 채널); 그렇지 않으면 헤더를 인식 하지 못하면 예외가 throw 됩니다 하 간주 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.ServiceModel.MessageHeaderAttribute>를 사용하여 이 헤더에 적절한 값으로 설정된 <xref:System.ServiceModel.MessageContractMemberAttribute.Name%2A>, <xref:System.ServiceModel.MessageContractMemberAttribute.Namespace%2A> 및 <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> 속성으로 응답 메시지의 SOAP 헤더를 만드는 방법을 보여 줍니다. 메시지를 보내면 코드 예제 다음에 메시지의 예제가 표시됩니다.  
  
 [!code-csharp[MessageHeaderAttribute#4](~/samples/snippets/csharp/VS_Snippets_CFX/messageheaderattribute/cs/services.cs#4)]
 [!code-vb[MessageHeaderAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/messageheaderattribute/vb/services.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Relay">
      <MemberSignature Language="C#" Value="public bool Relay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Relay" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageHeaderAttribute.Relay" />
      <MemberSignature Language="VB.NET" Value="Public Property Relay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Relay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Relay : bool with get, set" Usage="System.ServiceModel.MessageHeaderAttribute.Relay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 헤더를 다운스트림 노드로 릴레이할지 여부를 지정합니다. 이 설정은 <see langword="relay" /> SOAP 헤더 특성에 매핑됩니다.</summary>
        <value>이 헤더를 다운스트림 노드로 릴레이하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SOAP 1.1을 사용하는 경우 이 속성이 무시됩니다. 자세한 내용은 <xref:System.ServiceModel.MessageHeaderAttribute>의 설명 부분을 참조하십시오.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>