<Type Name="MessageSecurityOverHttp" FullName="System.ServiceModel.MessageSecurityOverHttp">
  <Metadata><Meta Name="ms.openlocfilehash" Value="07fbf13f408610276e376f9b52753ac29a127e6d" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53485086" /></Metadata><TypeSignature Language="C#" Value="public class MessageSecurityOverHttp" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageSecurityOverHttp extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.MessageSecurityOverHttp" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageSecurityOverHttp" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageSecurityOverHttp" />
  <TypeSignature Language="F#" Value="type MessageSecurityOverHttp = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>wsDualHttpBinding 바인딩에서 메시지 수준 보안 속성을 설정할 수 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 개체는 <xref:System.ServiceModel.WSDualHttpBinding.Security%2A> 개체를 반환하는 <xref:System.ServiceModel.WSDualHttpSecurity> 속성을 사용하여 바인딩에서 액세스합니다. <xref:System.ServiceModel.WSDualHttpSecurity.Message%2A> 속성은 <xref:System.ServiceModel.MessageSecurityOverHttp> 개체에 대한 참조를 제공합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageSecurityOverHttp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MessageSecurityOverHttp.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageSecurityOverHttp();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.ServiceModel.MessageSecurityOverHttp" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlgorithmSuite">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.SecurityAlgorithmSuite AlgorithmSuite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.SecurityAlgorithmSuite AlgorithmSuite" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite" />
      <MemberSignature Language="VB.NET" Value="Public Property AlgorithmSuite As SecurityAlgorithmSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::SecurityAlgorithmSuite ^ AlgorithmSuite { System::ServiceModel::Security::SecurityAlgorithmSuite ^ get(); void set(System::ServiceModel::Security::SecurityAlgorithmSuite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmSuite : System.ServiceModel.Security.SecurityAlgorithmSuite with get, set" Usage="System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityAlgorithmSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SOAP 수준에서 보안 메시지에 사용되는 알고리즘 모음을 지정합니다.</summary>
        <value><see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> 기본값은 <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 기본값과 다른 알고리즘 집합을 사용 하는 Windows Communication Foundation WCF 이외의 플랫폼에서 작업 하는 경우 가장 적합 합니다. 이 설정을 수정하는 경우 관련 알고리즘의 장점과 단점을 파악해야 합니다.  
  
   
  
## Examples  
 다음 코드에서는 이 속성에 액세스하여 해당 속성을 설정하는 방법을 보여 줍니다.  
  
 [!code-csharp[c_ProgrammingSecurity#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_programmingsecurity/cs/source.cs#8)]
 [!code-vb[c_ProgrammingSecurity#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_programmingsecurity/vb/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite" /> 값이 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ClientCredentialType">
      <MemberSignature Language="C#" Value="public System.ServiceModel.MessageCredentialType ClientCredentialType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.MessageCredentialType ClientCredentialType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCredentialType As MessageCredentialType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::MessageCredentialType ClientCredentialType { System::ServiceModel::MessageCredentialType get(); void set(System::ServiceModel::MessageCredentialType value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCredentialType : System.ServiceModel.MessageCredentialType with get, set" Usage="System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.MessageCredentialType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>wsHttpBinding 또는 wsDualHttpBinding 바인딩에서 클라이언트 인증에 사용되는 클라이언트 자격 증명 형식을 지정합니다.</summary>
        <value><see cref="T:System.ServiceModel.MessageCredentialType" /> 기본값은 <see cref="F:System.ServiceModel.MessageCredentialType.Windows" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 서비스에서 호출자 인증 시 사용되는 `MessageCredentialType`을 설정하는 데 사용됩니다. 유효한 형식은 다음과 같습니다.  
  
-   <xref:System.ServiceModel.MessageCredentialType.Certificate>  
  
-   <xref:System.ServiceModel.MessageCredentialType.IssuedToken>  
  
-   <xref:System.ServiceModel.MessageCredentialType.None>  
  
-   <xref:System.ServiceModel.MessageCredentialType.UserName>  
  
-   <xref:System.ServiceModel.MessageCredentialType.Windows>  
  
   
  
## Examples  
 다음 코드에서는 이 속성을 설정합니다.  
  
 [!code-csharp[c_CreateSecureSession#4](~/samples/snippets/csharp/VS_Snippets_CFX/c_createsecuresession/cs/secureservice.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType" />의 값이 올바른 <see cref="T:System.ServiceModel.MessageCredentialType" />이 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSecureConversationEnabled">
      <MemberSignature Language="C#" Value="protected virtual bool IsSecureConversationEnabled ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsSecureConversationEnabled() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MessageSecurityOverHttp.IsSecureConversationEnabled" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsSecureConversationEnabled () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsSecureConversationEnabled();" />
      <MemberSignature Language="F#" Value="abstract member IsSecureConversationEnabled : unit -&gt; bool&#xA;override this.IsSecureConversationEnabled : unit -&gt; bool" Usage="messageSecurityOverHttp.IsSecureConversationEnabled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.ServiceModel.MessageSecurityOverHttp" />에서 파생된 클래스의 인스턴스가 WS-SecurityConversation에서 설명한 대로 보안 대화를 수행하도록 구성되는지 여부를 나타내기 위해 확장성 시나리오에서만 사용됩니다.</summary>
        <returns>파생 클래스에서 재정의되지 않는 한 항상 <see langword="true" />를 반환합니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NegotiateServiceCredential">
      <MemberSignature Language="C#" Value="public bool NegotiateServiceCredential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NegotiateServiceCredential" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential" />
      <MemberSignature Language="VB.NET" Value="Public Property NegotiateServiceCredential As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NegotiateServiceCredential { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NegotiateServiceCredential : bool with get, set" Usage="System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서비스 자격 증명이 클라이언트에서 out of band 방식으로 제공되는지 아니면 협상 프로세스를 통해 서비스로부터 전달되는지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>협상 프로세스를 통해 서비스 자격 증명을 가져오면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 `true`로 설정하려면 클라이언트와 서비스에서 WS-Trust 및 WS-SecureConversation을 지원해야 합니다. 이 속성을 `false`로 설정하면 WS-Trust 또는 WS-SecureConversation 지원이 필요 없습니다.  
  
 Anonymous, Username 또는 Certificate 클라이언트 자격 증명 형식의 경우 이 속성을 `false`로 설정하면 서비스 자격 증명이 클라이언트에서 out of band 방식으로 사용할 수 있고, 사용할 서비스의 자격 증명을 클라이언트가 지정해야 함을 의미합니다.  
  
 Windows 자격 증명의 경우 이 속성을 `false`로 설정하면 `KerberosToken` 기반 인증이 사용됩니다. 그러기 위해서는 클라이언트와 서비스가 Kerberos 도메인의 일부여야 합니다. 이 모드는 OASIS로부터 Kerberos 토큰 프로필을 구현하는 SOAP 스택과 상호 운용할 수 있습니다. 이 속성을 `true`로 설정하면 SOAP 메시지를 통한 SPNego 교환을 터널링하는 SOAP 협상이 수행됩니다. 이 모드는 상호 운용할 수 없습니다.  
  
 이 속성은 서비스 자격 증명이 클라이언트와 서비스 간에 자동으로 협상되는지 여부를 나타냅니다. 이 속성이 `true`이면 해당 협상이 발생합니다. 이 속성이 `false`이면 서비스 자격 증명을 클라이언트에서 지정해야 서비스와의 통신이 발생할 수 있습니다.  
  
 이 속성이 `false`로 설정되고 Windows를 클라이언트 자격 증명 형식으로 사용하도록 바인딩이 구성된 경우 서비스 계정은 SPN(서비스 사용자 이름)과 연결되어야 합니다. 이렇게 하려면 NETWORK SERVICE 계정이나 LOCAL SYSTEM 계정에서 서비스를 실행합니다. 또는 SetSpn.exe 도구를 사용하여 서비스 계정의 SPN을 만듭니다. 두 경우 모두 클라이언트에는 정확한 SPN을 사용 해야 합니다는 [ &lt;servicePrincipalName&gt; ](~/docs/framework/configure-apps/file-schema/wcf/serviceprincipalname.md) 요소를 또는 사용 하 여는 <xref:System.ServiceModel.EndpointAddress> 생성자입니다. 자세한 내용은 [서비스 Id 및 인증](~/docs/framework/wcf/feature-details/service-identity-and-authentication.md)합니다.  
  
   
  
## Examples  
 다음 코드에서는 이 속성에 액세스하여 해당 속성을 설정하는 방법을 보여 줍니다.  
  
 [!code-csharp[c_ProgrammingSecurity#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_programmingsecurity/cs/source.cs#7)]
 [!code-vb[c_ProgrammingSecurity#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_programmingsecurity/vb/source.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeAlgorithmSuite">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeAlgorithmSuite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeAlgorithmSuite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeAlgorithmSuite () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeAlgorithmSuite();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeAlgorithmSuite : unit -&gt; bool" Usage="messageSecurityOverHttp.ShouldSerializeAlgorithmSuite " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite" /> 속성이 기본값에서 변경되었으며 이를 serialize해야 하는지 여부를 나타내는 값을 반환합니다.</summary>
        <returns><see cref="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite" /> 속성 값을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeClientCredentialType">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeClientCredentialType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeClientCredentialType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeClientCredentialType" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeClientCredentialType () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeClientCredentialType();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeClientCredentialType : unit -&gt; bool" Usage="messageSecurityOverHttp.ShouldSerializeClientCredentialType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType" /> 속성이 기본값에서 변경되었으며 이를 serialize해야 하는지 여부를 나타내는 값을 반환합니다.</summary>
        <returns><see cref="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType" /> 속성 값을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeNegotiateServiceCredential">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeNegotiateServiceCredential ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeNegotiateServiceCredential() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeNegotiateServiceCredential () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeNegotiateServiceCredential();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeNegotiateServiceCredential : unit -&gt; bool" Usage="messageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential" /> 속성이 기본값에서 변경되었으며 이를 serialize해야 하는지 여부를 나타내는 값을 반환합니다.</summary>
        <returns><see cref="P:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential" /> 속성 값을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>