<Type Name="OperationBehaviorAttribute" FullName="System.ServiceModel.OperationBehaviorAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="529dc78c1be46e5e3e1509201e4bc9c9af8e1413" /><Meta Name="ms.sourcegitcommit" Value="662f143e6be46d519ff8ab4451d543d91e651478" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/18/2018" /><Meta Name="ms.locfileid" Value="53565719" /></Metadata><TypeSignature Language="C#" Value="public sealed class OperationBehaviorAttribute : Attribute, System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperationBehaviorAttribute extends System.Attribute implements class System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.OperationBehaviorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperationBehaviorAttribute&#xA;Inherits Attribute&#xA;Implements IOperationBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperationBehaviorAttribute sealed : Attribute, System::ServiceModel::Description::IOperationBehavior" />
  <TypeSignature Language="F#" Value="type OperationBehaviorAttribute = class&#xA;    inherit Attribute&#xA;    interface IOperationBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IOperationBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>서비스 메서드의 로컬 실행 동작을 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 작업 실행 시 어떤 작업별 실행 동작이 있는지 나타내려면 <xref:System.ServiceModel.OperationBehaviorAttribute> 특성을 사용합니다. 서비스 수준의 실행 동작을 지정하려면 <xref:System.ServiceModel.ServiceBehaviorAttribute> 특성을 사용합니다.  
  
> [!NOTE]
>  또한 <xref:System.ServiceModel.OperationBehaviorAttribute>를 사용하여 이중 클라이언트 애플리케이션에서 콜백 계약 작업을 구성할 수도 있습니다. 콜백 작업에 사용하는 경우 <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 속성이 <xref:System.ServiceModel.ReleaseInstanceMode.None>이어야 하며, 그렇지 않으면 런타임에 <xref:System.InvalidOperationException> 예외가 throw됩니다.  
  
 <xref:System.ServiceModel.OperationBehaviorAttribute> 특성은 개발자가 직접 구현 해야 하는 일반적인 기능을 사용 하는 Windows Communication Foundation (WCF) 프로그래밍 모델 기능입니다.  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> 속성은 작업 완료 시 작업에 전달된 매개 변수 개체의 삭제 여부를 제어합니다.  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> 속성은 처리되지 않은 예외가 발생하지 않는 경우 메서드가 실행되는 트랜잭션의 자동 커밋 여부를 지정합니다.  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> 속성은 트랜잭션 내에서 메서드를 실행해야 하는지 여부를 지정합니다.  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> 속성은 서비스 작업이 호출자의 ID를 가장할 수 있는지, 가장해야 하는지 또는 가장할 수 없는지를 지정합니다.  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 속성은 메서드 호출 프로세스 중에 서비스 개체를 재활용하는 시점을 지정합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 필수 분산 트랜잭션 내에서 실행되는 작업을 보여 줍니다. <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> 속성은 메서드가 호출자의 트랜잭션에서 실행됨을 나타내며, <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> 속성은 처리되지 않은 예외가 발생하지 않을 경우 트랜잭션이 자동으로 커밋됨을 나타냅니다. 처리되지 않은 예외가 발생하면 트랜잭션은 중단됩니다.  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationBehaviorAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationBehaviorAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 생성자는 다음 기본값을 사용하여 클래스의 인스턴스를 만듭니다.  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> 속성은 `true`입니다.  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> 속성은 `false`입니다.  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 속성은 <xref:System.ServiceModel.ReleaseInstanceMode.None>입니다.  
  
-   <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A>이 <xref:System.ServiceModel.ImpersonationOption.NotAllowed>인 경우  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoDisposeParameters">
      <MemberSignature Language="C#" Value="public bool AutoDisposeParameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoDisposeParameters" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoDisposeParameters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoDisposeParameters { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoDisposeParameters : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매개 변수가 자동으로 삭제되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see langword="true" /> 매개 변수를 자동으로 삭제 될 경우 그렇지 않으면 <see langword="false" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 메시지를 처리하는 동안 생성된 모든 삭제 가능 매개 변수(입력, 출력, 참조 매개 변수)를 서비스에서 삭제할지 여부를 지정합니다. 기본값은 `true`입니다. 시스템의 리소스 삭제를 방지하고 필요한 경우 리소스를 캐시하려면 이 속성을 `false`로 설정합니다.  
  
 예를 들어 <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A>가 `false`이면 발신자가 발신측에서 스트림을 닫아야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Impersonation">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ImpersonationOption Impersonation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ImpersonationOption Impersonation" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.Impersonation" />
      <MemberSignature Language="VB.NET" Value="Public Property Impersonation As ImpersonationOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ImpersonationOption Impersonation { System::ServiceModel::ImpersonationOption get(); void set(System::ServiceModel::ImpersonationOption value); };" />
      <MemberSignature Language="F#" Value="member this.Impersonation : System.ServiceModel.ImpersonationOption with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.Impersonation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ImpersonationOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>작업에서 지원하는 호출자 가장 수준을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.ServiceModel.ImpersonationOption" /> 값 중 하나입니다. 기본값은 <see cref="F:System.ServiceModel.ImpersonationOption.NotAllowed" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정된 메서드, 즉 <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> 속성이 <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> 또는 <xref:System.ServiceModel.ImpersonationOption.Allowed>로 설정되어 표시된 메서드가 호출자의 ID로 실행될 수 있게 하려면 가장을 지원하는 바인딩 구성과 함께 <xref:System.ServiceModel.ImpersonationOption.Required> 속성을 사용합니다. 세부 정보를 사용 하는 경우 가장이 수행 하는 방법을 비롯 한 <xref:System.ServiceModel.ImpersonationOption.Allowed> 와 함께 <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations%2A?displayProperty=nameWithType> 속성을 참조 하세요 [위임 및 가장](~/docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md) 및 [방법:서비스에서클라이언트가장](~/docs/framework/wcf/how-to-impersonate-a-client-on-a-service.md).  
  
> [!NOTE]
>  가장을 수행하는 서비스 엔드포인트를 프로그래밍 방식으로 추가할 때는 <xref:System.ServiceModel.ServiceHost.AddServiceEndpoint%2A> 메서드나 <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A?displayProperty=nameWithType> 메서드 중 하나를 사용하여 계약을 새 <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> 개체에 제대로 로드해야 합니다. 구성 파일을 사용하기 위해 추가로 필요한 단계는 없습니다.  
  
 특정 시나리오에서는 가장이 지원되지 않을 수 있습니다. 자세한 내용은 [지원 되지 않는 시나리오](~/docs/framework/wcf/feature-details/unsupported-scenarios.md)합니다.  
  
   
  
## Examples  
 다음 서비스 코드 예제에는 <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> 속성을 <xref:System.ServiceModel.ImpersonationOption.Required>로 설정하는 방식을 통한 가장이 필요합니다.  
  
 [!code-csharp[OperationBehaviorAttribute_Impersonation#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_impersonation/cs/services.cs#1)]
 [!code-vb[OperationBehaviorAttribute_Impersonation#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_impersonation/vb/services.vb#1)]  
  
 다음 코드 예제에서는 가장에 클라이언트 애플리케이션 자격 증명이 필요한 작업에서 작업 호출에 앞서 자격 증명을 설정하기 위해 <xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A> 속성을 사용하는 것을 보여 줍니다.  
  
 [!code-csharp[OperationBehaviorAttribute_Impersonation#3](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_impersonation/cs/client.cs#3)]
 [!code-vb[OperationBehaviorAttribute_Impersonation#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_impersonation/vb/client.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseInstanceMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReleaseInstanceMode ReleaseInstanceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ReleaseInstanceMode ReleaseInstanceMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ReleaseInstanceMode As ReleaseInstanceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ReleaseInstanceMode ReleaseInstanceMode { System::ServiceModel::ReleaseInstanceMode get(); void set(System::ServiceModel::ReleaseInstanceMode value); };" />
      <MemberSignature Language="F#" Value="member this.ReleaseInstanceMode : System.ServiceModel.ReleaseInstanceMode with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReleaseInstanceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>작업 호출 과정에서 서비스 개체를 재활용할 시점을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.ServiceModel.ReleaseInstanceMode" /> 값 중 하나입니다. 기본값은 <see cref="F:System.ServiceModel.ReleaseInstanceMode.None" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 속성을 통해 Windows Communication Foundation (WCF) 메서드를 실행 하는 과정에서 서비스 개체를 재활용 하는 경우를 지정 합니다. 기본 동작은 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 값에 따라 서비스 개체를 재활용하는 것입니다. <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 속성을 설정하면 이 기본 동작이 변경됩니다.  
  
 <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A>는 스레딩 수행을 보증하지는 않습니다. 서비스 실행 시 수정되지 않은 새로운 개체가 필요한 경우 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 속성을 <xref:System.ServiceModel.InstanceContextMode.PerCall>로 설정합니다.  
  
 트랜잭션 시나리오에서 <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 속성은 메서드 호출을 처리하기 전에 서비스 개체와 연결된 기존 데이터를 정리하는 데 자주 사용됩니다. 또한 <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> 속성을 `true`로 설정하면 트랜잭션이 성공적으로 완료된 후 트랜잭션과 연결된 서비스 개체를 재활용하도록 할 수 있습니다.  
  
 다음 동작 중에서 선택할 수 있습니다.  
  
-   작업 호출 전에 서비스 개체 재활용  
  
-   작업 호출 후에 서비스 개체 재활용  
  
-   작업 호출 전후에 서비스 개체 재활용  
  
-   재활용 동작 없음  
  
 또한 <xref:System.ServiceModel.OperationBehaviorAttribute>를 사용하여 이중 클라이언트 애플리케이션에서 콜백 계약 작업을 구성할 수도 있습니다. 콜백 작업에 사용하는 경우 <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> 속성이 <xref:System.ServiceModel.ReleaseInstanceMode.None>이어야 하며, 그렇지 않으면 런타임에 <xref:System.InvalidOperationException> 예외가 throw됩니다.  
  
 또한 서비스 개체를 <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29?displayProperty=nameWithType> 생성자에 전달하는 방법으로 서비스를 생성한 경우 이 속성의 값은 <xref:System.ServiceModel.ReleaseInstanceMode.None>처럼 처리됩니다.  
  
   
  
## Examples  
 다음 예제 코드에서는 호출 전후에 서비스 개체를 재활용하기 위해 <xref:System.ServiceModel.ReleaseInstanceMode>를 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[OBA.ReleaseInstanceMode#1](~/samples/snippets/csharp/VS_Snippets_CFX/oba.releaseinstancemode/cs/services.cs#1)]
 [!code-vb[OBA.ReleaseInstanceMode#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/oba.releaseinstancemode/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">값이 <see cref="T:System.ServiceModel.ReleaseInstanceMode" /> 값 중 하나가 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IOperationBehavior.AddBindingParameters (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Sub AddBindingParameters (description As OperationDescription, parameters As BindingParameterCollection) Implements IOperationBehavior.AddBindingParameters" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IOperationBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description"><see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> 속성을 지원하도록 수정된 작업 설명입니다.</param>
        <param name="parameters">바인딩 동작을 지원하기 위해 전달된 바인딩 매개 변수입니다.</param>
        <summary><see cref="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" /> 메서드를 구현합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior">
      <MemberSignature Language="C#" Value="void IOperationBehavior.ApplyClientBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.ClientOperation proxy);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Dispatcher.ClientOperation proxy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyClientBehavior (description As OperationDescription, proxy As ClientOperation) Implements IOperationBehavior.ApplyClientBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Dispatcher::ClientOperation ^ proxy) = System::ServiceModel::Description::IOperationBehavior::ApplyClientBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="proxy" Type="System.ServiceModel.Dispatcher.ClientOperation" />
      </Parameters>
      <Docs>
        <param name="description"><see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> 속성을 지원하도록 수정된 작업 설명입니다.</param>
        <param name="proxy">이 작업에 대한 사용자 지정 클라이언트 수정을 삽입하는 확장성 액세스 지점입니다.</param>
        <summary>클라이언트 작업 동작을 구현합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IOperationBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.DispatchOperation dispatch);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Dispatcher.DispatchOperation dispatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyDispatchBehavior (description As OperationDescription, dispatch As DispatchOperation) Implements IOperationBehavior.ApplyDispatchBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Dispatcher::DispatchOperation ^ dispatch) = System::ServiceModel::Description::IOperationBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="dispatch" Type="System.ServiceModel.Dispatcher.DispatchOperation" />
      </Parameters>
      <Docs>
        <param name="description"><see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> 속성을 지원하도록 수정된 작업 설명입니다.</param>
        <param name="dispatch">이 작업에 대한 사용자 지정 서비스 수정을 삽입하는 확장 지점입니다.</param>
        <summary>서비스 작업 동작을 구현합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.Validate">
      <MemberSignature Language="C#" Value="void IOperationBehavior.Validate (System.ServiceModel.Description.OperationDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.Validate(class System.ServiceModel.Description.OperationDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)" />
      <MemberSignature Language="VB.NET" Value="Sub Validate (description As OperationDescription) Implements IOperationBehavior.Validate" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.Validate(System::ServiceModel::Description::OperationDescription ^ description) = System::ServiceModel::Description::IOperationBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
      </Parameters>
      <Docs>
        <param name="description">유효성을 검사할 작업 설명입니다.</param>
        <summary>유효성 검사 동작을 구현합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionAutoComplete">
      <MemberSignature Language="C#" Value="public bool TransactionAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionAutoComplete" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionAutoComplete { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionAutoComplete : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>처리되지 않은 예외가 발생하지 않을 때 현재 트랜잭션 범위를 자동으로 완료할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>작업을 성공적으로 실행했을 때 트랜잭션 범위를 자동으로 완료하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 작업 코드에서 직접 트랜잭션을 완료하거나 중단하려면 <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> 속성을 `false`로 설정합니다.  
  
 처리된 예외는 작업 과정에서 트랜잭션 자동 중단 없이 throw할 수 있습니다. 처리되지 않은 예외가 있을 때만 자동 중단이 발생합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 필수 분산 트랜잭션 내에서 실행되는 작업을 보여 줍니다. <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> 속성은 작업이 트랜잭션 범위에서 실행됨을 나타내며, <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> 속성은 처리되지 않은 예외가 발생하지 않을 경우 트랜잭션 범위가 자동으로 완료됨을 나타냅니다. 처리되지 않은 예외가 발생하면 트랜잭션은 중단됩니다.  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionScopeRequired">
      <MemberSignature Language="C#" Value="public bool TransactionScopeRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionScopeRequired" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionScopeRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionScopeRequired { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionScopeRequired : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>메서드 실행에 트랜잭션 범위가 필요한지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>메서드 실행에 트랜잭션 범위가 필요하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 작업이 트랜잭션 범위 내에서 실행되도록 하려면 <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A>를 `true`로 설정합니다. 흐름이 지정된 트랜잭션을 사용할 수 있는 경우 작업은 해당 트랜잭션 내에서 실행됩니다. 그렇지 않으면 새 트랜잭션이 만들어져 작업 실행에 사용됩니다. 엔드포인트에서 지정된 바인딩이 흐름이 지정된 트랜잭션 지원 여부를 제어합니다. 따라서 적절한 동작을 얻기 위해서는 바인딩에서 트랜잭션 흐름을 허용하는지 여부와 <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> 속성 간의 상호 작용을 이해해야 합니다. 다음 표에는 가능한 동작이 나와 있습니다.  
  
|TransactionScopeRequired|바인딩이 트랜잭션 흐름 허용|호출자가 트랜잭션 흐름 지정|결과|  
|-|-|-|-|  
|False|False|아니요|메서드가 트랜잭션 없이 실행됩니다.|  
|True|False|아니요|메서드가 새 트랜잭션 내에서 생성되고 실행됩니다.|  
|True 또는 False|False|예|트랜잭션 헤더에 대해 SOAP 오류가 반환됩니다.|  
|False|True|예|메서드가 트랜잭션 없이 실행됩니다.|  
|True|True|예|메서드가 흐름이 지정된 트랜잭션에서 실행됩니다.|  
  
   
  
## Examples  
 다음 코드 예제에서는 필수 분산 트랜잭션 내에서 실행되는 작업을 보여 줍니다. <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> 속성은 작업이 트랜잭션 범위에서 실행됨을 나타내며, <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> 속성은 처리되지 않은 예외가 발생하지 않을 경우 트랜잭션 범위가 자동으로 완료됨을 나타냅니다. 처리되지 않은 예외가 발생하면 트랜잭션은 중단됩니다.  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>