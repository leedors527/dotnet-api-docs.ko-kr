<Type Name="OperationFormatStyle" FullName="System.ServiceModel.OperationFormatStyle">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dd8d8184cff474f31abd007d317816eeb22c37e1" /><Meta Name="ms.sourcegitcommit" Value="7461f9e28c2f184bd1596e6f07c25a3f34984516" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/28/2019" /><Meta Name="ms.locfileid" Value="58561135" /></Metadata><TypeSignature Language="C#" Value="public enum OperationFormatStyle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed OperationFormatStyle extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.OperationFormatStyle" />
  <TypeSignature Language="VB.NET" Value="Public Enum OperationFormatStyle" />
  <TypeSignature Language="C++ CLI" Value="public enum class OperationFormatStyle" />
  <TypeSignature Language="F#" Value="type OperationFormatStyle = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>서비스의 WSDL 메타데이터 형식 지정 방법을 결정하는 SOAP 스타일을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로 메시지 본문 문서로 설정 하는 스타일을 사용 하 여 서식이 지정 됩니다. `RPC` 스타일은 작업에 대해 교환된 메시지의 WSDL 표현에는 원격 프로시저 호출인 것처럼 매개 변수가 포함되어 있음을 의미합니다. 다음은 예제입니다.  
  
```  
<wsdl:message name="IUseAndStyleCalculator_Add_InputMessage">  
  <wsdl:part name="n1" type="xsd:double"/>  
  <wsdl:part name="n2" type="xsd:double"/>  
</wsdl:message>  
  
```  
  
 스타일을 `Document`로 설정하면 다음 예제와 같이 WSDL 표현에는 작업에 대해 교환된 문서를 나타내는 요소가 하나 포함됨을 의미합니다.  
  
```  
<wsdl:message name="IUseAndStyleCalculator_Add_InputMessage">  
  <wsdl:part name="parameters" element="tns:Add"/>  
</wsdl:message>  
```  
  
 <xref:System.ServiceModel.XmlSerializerFormatAttribute?displayProperty=nameWithType>를 사용하여 이 값을 설정합니다.  
  
   
  
## Examples  
 다음 코드는 이 열거형을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[style_and_Use#0](~/samples/snippets/csharp/VS_Snippets_CFX/style_and_use/cs/source.cs#0)]
 [!code-vb[style_and_Use#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/style_and_use/vb/source.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="Document" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.OperationFormatStyle Document = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.OperationFormatStyle.Document" />
      <MemberSignature Language="VB.NET" Value="Document" />
      <MemberSignature Language="C++ CLI" Value="Document" />
      <MemberSignature Language="F#" Value="Document = 0" Usage="System.ServiceModel.OperationFormatStyle.Document" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.OperationFormatStyle</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>WSDL 표현에 작업에 대해 교환된 문서를 나타내는 요소가 하나 포함되도록 합니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="Rpc">
      <MemberSignature Language="C#" Value="Rpc" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.OperationFormatStyle Rpc = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.OperationFormatStyle.Rpc" />
      <MemberSignature Language="VB.NET" Value="Rpc" />
      <MemberSignature Language="C++ CLI" Value="Rpc" />
      <MemberSignature Language="F#" Value="Rpc = 1" Usage="System.ServiceModel.OperationFormatStyle.Rpc" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.OperationFormatStyle</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>작업에 대해 교환된 메시지의 WSDL 표현에 원격 프로시저 호출인 것처럼 매개 변수가 포함되도록 합니다.</summary>
      </Docs>
    </Member>
  </Members>
</Type>