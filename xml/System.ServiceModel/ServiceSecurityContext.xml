<Type Name="ServiceSecurityContext" FullName="System.ServiceModel.ServiceSecurityContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8181d319a9dcf1044981df99d26437ccb0791c94" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51912227" /></Metadata><TypeSignature Language="C#" Value="public class ServiceSecurityContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceSecurityContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ServiceSecurityContext" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceSecurityContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceSecurityContext" />
  <TypeSignature Language="F#" Value="type ServiceSecurityContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>원격 상대방의 보안 컨텍스트를 나타냅니다. 클라이언트에서는 서비스 ID를 나타내고 서비스에서는 클라이언트 ID를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터는 메시지에 대한 <xref:System.ServiceModel.Security.SecurityMessageProperty>의 일부입니다.  
  
 이 클래스를 사용 하 여 원격에 대 한 정보를 가져올 *보안 컨텍스트* 런타임 시. 메서드에 액세스할 수 있도록 클라이언트가 인증되고 권한이 부여된 경우 보안 컨텍스트가 만들어집니다. 메시지가 인증되고 권한이 부여된 경우 이 클래스의 인스턴스에서 클라이언트 및 현재 서비스 인스턴스의 보안 정보를 가져올 수 있습니다.  
  
 <xref:System.ServiceModel.ServiceSecurityContext> 클래스의 <xref:System.ServiceModel.OperationContext.Current%2A> 속성에서 <xref:System.ServiceModel.OperationContext>의 인스턴스를 검색하거나, 아래의 예제와 같이 서비스 작업 메서드 내에서 이 클래스를 사용할 수 있습니다.  
  
## <a name="parsing-a-claimset"></a>ClaimSet 구문 분석  
 클래스의 일반적인 용도는 메서드에 액세스할 때 클라이언트를 식별하고 권한을 부여하기 위해 현재 클레임 집합을 검색하는 것입니다. <xref:System.IdentityModel.Claims.ClaimSet> 클래스는 <xref:System.IdentityModel.Claims.Claim> 개체의 컬렉션을 포함하며, 특정 클레임이 있는지 여부를 확인하기 위해 각 개체를 구문 분석할 수 있습니다. 지정된 클레임이 있는 경우 권한을 부여할 수 있습니다. <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> 클래스의 <xref:System.ServiceModel.ServiceAuthorizationManager> 메서드를 재정의하면 이 기능을 사용할 수 있습니다.  전체 예제를 참조 하세요. 합니다 [권한 부여 정책](~/docs/framework/wcf/samples/authorization-policy.md)합니다.  
  
## <a name="cookie-mode-and-isauthenticated"></a>쿠키 모드 및 IsAuthenticated  
 특정 상황에서는 원격 클라이언트가 익명 사용자로 인증된 경우에도 <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A> 인터페이스의 <xref:System.Security.Principal.IIdentity> 속성에서 `true`를 반환합니다. <xref:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity%2A> 속성은 <xref:System.Security.Principal.IIdentity> 인터페이스의 구현을 반환합니다. 그러려면 다음과 같은 경우를 충족해야 합니다.  
  
-   서비스에서 Windows 인증을 사용하는 경우  
  
-   서비스에서 익명 로그온을 허용하는 경우  
  
-   바인딩은 [ &lt;customBinding&gt;](~/docs/framework/configure-apps/file-schema/wcf/custombinding.md)합니다.  
  
-   사용자 지정 바인딩에 `<security>` 요소가 있는 경우  
  
-   `<security>` 요소를 포함을 [ &lt;secureConversationBootstrap&gt; ](~/docs/framework/configure-apps/file-schema/wcf/secureconversationbootstrap.md) 사용 하 여 합니다 `requireSecurityContextCancellation` 특성이로 설정 `false`합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.ServiceModel.ServiceSecurityContext> 클래스를 사용하여 현재 보안 컨텍스트에 대한 정보를 제공합니다. 이 코드는 <xref:System.IO.StreamWriter> 클래스의 인스턴스를 만들어 파일에 정보를 씁니다.  
  
 [!code-csharp[ServiceSecurityContext#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicesecuritycontext/cs/source.cs#1)]
 [!code-vb[ServiceSecurityContext#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicesecuritycontext/vb/source.vb#1)]  
  
 다음 예제에서는 클레임 집합을 구문 분석하는 데 <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>를 사용하는 <xref:System.ServiceModel.ServiceSecurityContext> 메서드의 구현을 보여 줍니다.  
  
 [!code-csharp[ServiceSecurityContext#2](~/samples/snippets/csharp/VS_Snippets_CFX/servicesecuritycontext/cs/source.cs#2)]
 [!code-vb[ServiceSecurityContext#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicesecuritycontext/vb/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ServiceModel.OperationContext.Current" />
    <altmember cref="T:System.ServiceModel.OperationContext" />
    <altmember cref="T:System.IdentityModel.Claims.Claim" />
    <altmember cref="T:System.IdentityModel.Claims.ClaimSet" />
    <altmember cref="T:System.ServiceModel.ServiceAuthorizationManager" />
    <related type="Article" href="https://msdn.microsoft.com/library/389b5a57-4175-4bc0-ada0-fc750d51149f">방법: 보안 컨텍스트 검사</related>
    <related type="Article" href="https://msdn.microsoft.com/library/1db325ec-85be-47d0-8b6e-3ba2fdf3dda0">권한 부여 정책 샘플</related>
    <related type="Article" href="https://msdn.microsoft.com/library/f0ecc6f7-f4b5-42a4-9cb1-b02e28e26620">서비스에 보안 설정</related>
    <related type="Article" href="https://msdn.microsoft.com/library/099defbb-5d35-434e-9336-1a49b9ec7663">클레임 및 권한 부여</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.ServiceModel.ServiceSecurityContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceSecurityContext (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; authorizationPolicies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; authorizationPolicies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (authorizationPolicies As ReadOnlyCollection(Of IAuthorizationPolicy))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceSecurityContext(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ authorizationPolicies);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ServiceSecurityContext : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; -&gt; System.ServiceModel.ServiceSecurityContext" Usage="new System.ServiceModel.ServiceSecurityContext authorizationPolicies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="authorizationPolicies" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;" />
      </Parameters>
      <Docs>
        <param name="authorizationPolicies">인증 정책이 포함된 <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> 형식의 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />입니다.</param>
        <summary>정책 개체의 컬렉션을 사용하여 <see cref="T:System.ServiceModel.ServiceSecurityContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 기본 정책 연결 엔진을 사용합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceSecurityContext (System.IdentityModel.Policy.AuthorizationContext authorizationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Policy.AuthorizationContext authorizationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceSecurityContext(System::IdentityModel::Policy::AuthorizationContext ^ authorizationContext);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ServiceSecurityContext : System.IdentityModel.Policy.AuthorizationContext -&gt; System.ServiceModel.ServiceSecurityContext" Usage="new System.ServiceModel.ServiceSecurityContext authorizationContext" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="authorizationContext" Type="System.IdentityModel.Policy.AuthorizationContext" />
      </Parameters>
      <Docs>
        <param name="authorizationContext">권한 정보가 포함된 <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />입니다.</param>
        <summary>지정된 인증 매개 변수를 사용하여 <see cref="T:System.ServiceModel.ServiceSecurityContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 이 생성자는 애플리케이션이 고유한 정책 연결 엔진을 실행하여 <xref:System.IdentityModel.Policy.AuthorizationContext>를 만드는 시나리오에 사용합니다. 기본 정책 엔진의 경우에는 <xref:System.IdentityModel.Policy.IAuthorizationPolicy>의 컬렉션을 매개 변수로 사용하는 생성자를 사용합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceSecurityContext (System.IdentityModel.Policy.AuthorizationContext authorizationContext, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; authorizationPolicies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Policy.AuthorizationContext authorizationContext, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; authorizationPolicies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceSecurityContext(System::IdentityModel::Policy::AuthorizationContext ^ authorizationContext, System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ authorizationPolicies);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ServiceSecurityContext : System.IdentityModel.Policy.AuthorizationContext * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; -&gt; System.ServiceModel.ServiceSecurityContext" Usage="new System.ServiceModel.ServiceSecurityContext (authorizationContext, authorizationPolicies)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="authorizationContext" Type="System.IdentityModel.Policy.AuthorizationContext" />
        <Parameter Name="authorizationPolicies" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;" />
      </Parameters>
      <Docs>
        <param name="authorizationContext">권한 설정이 포함된 <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />입니다.</param>
        <param name="authorizationPolicies">인증 정책이 포함된 <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> 형식의 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />입니다.</param>
        <summary>지정된 인증 매개 변수 및 정책 컬렉션을 사용하여 <see cref="T:System.ServiceModel.ServiceSecurityContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Anonymous">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.ServiceSecurityContext Anonymous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.ServiceSecurityContext Anonymous" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceSecurityContext.Anonymous" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Anonymous As ServiceSecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::ServiceSecurityContext ^ Anonymous { System::ServiceModel::ServiceSecurityContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Anonymous : System.ServiceModel.ServiceSecurityContext" Usage="System.ServiceModel.ServiceSecurityContext.Anonymous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceSecurityContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>일반적으로 익명의 상대방을 나타내는 데 사용되는 빈 클레임 컬렉션, ID 및 기타 컨텍스트 데이터가 포함된 <see cref="T:System.ServiceModel.ServiceSecurityContext" /> 클래스의 인스턴스를 반환합니다.</summary>
        <value><see cref="T:System.ServiceModel.ServiceSecurityContext" />의 빈 인스턴스입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationContext">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Policy.AuthorizationContext AuthorizationContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Policy.AuthorizationContext AuthorizationContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceSecurityContext.AuthorizationContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthorizationContext As AuthorizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Policy::AuthorizationContext ^ AuthorizationContext { System::IdentityModel::Policy::AuthorizationContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthorizationContext : System.IdentityModel.Policy.AuthorizationContext" Usage="System.ServiceModel.ServiceSecurityContext.AuthorizationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Policy.AuthorizationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 클래스의 인스턴스에 대한 인증 정보를 가져옵니다.  <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />는 응용 프로그램에서 상대방의 정보를 조사하고 가져올 수 있는 <see cref="T:System.IdentityModel.Claims.ClaimSet" />의 컬렉션을 포함합니다.</summary>
        <value>권한 설정이 포함된 <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationPolicies">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; AuthorizationPolicies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; AuthorizationPolicies" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthorizationPolicies As ReadOnlyCollection(Of IAuthorizationPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ AuthorizationPolicies { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ get(); void set(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthorizationPolicies : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; with get, set" Usage="System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 클래스의 인스턴스와 연결된 정책의 컬렉션을 가져옵니다.</summary>
        <value>정책이 포함된 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 형식의 <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [ID 모델을 사용하여 클레임 및 권한 부여 관리](~/docs/framework/wcf/feature-details/managing-claims-and-authorization-with-the-identity-model.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.ServiceSecurityContext Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.ServiceSecurityContext Current" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceSecurityContext.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As ServiceSecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::ServiceSecurityContext ^ Current { System::ServiceModel::ServiceSecurityContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.ServiceModel.ServiceSecurityContext" Usage="System.ServiceModel.ServiceSecurityContext.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceSecurityContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.ServiceModel.ServiceSecurityContext" />를 가져옵니다.</summary>
        <value>현재 <see cref="T:System.ServiceModel.ServiceSecurityContext" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnonymous">
      <MemberSignature Language="C#" Value="public bool IsAnonymous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnonymous" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceSecurityContext.IsAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAnonymous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAnonymous { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAnonymous : bool" Usage="System.ServiceModel.ServiceSecurityContext.IsAnonymous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 클라이언트에서 서비스에 대한 자격 증명을 제공했는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>클라이언트에서 자격 증명을 제공했으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryIdentity">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IIdentity PrimaryIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity PrimaryIdentity" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrimaryIdentity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IIdentity ^ PrimaryIdentity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryIdentity : System.Security.Principal.IIdentity" Usage="System.ServiceModel.ServiceSecurityContext.PrimaryIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 설정에 연결된 기본 ID를 가져옵니다.</summary>
        <value>현재 설정과 연결된 <see cref="T:System.Security.Principal.IIdentity" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 현재 사용자를 인증하는 데 사용되는 자격 증명에서 기본 ID를 가져옵니다. 자격 증명이 X.509 인증서인 경우 ID는 주체 이름과 지문을 순서대로 연결하여 만들어집니다. 세미콜론과 공백을 사용하여 주체 이름은 지문과 구분됩니다. 인증서의 주체 필드가 `null`이면 기본 ID에 세미콜론, 공백 및 지문만 포함됩니다.  
  
 Kerberos 직접 인증과 함께 이중 메시지 교환 패턴을 사용할 경우 이 속성은 콜백 시 비어 있고 claimset도 비어 있습니다. 이 발생 하지 않습니다 때 *SspiNegotiated* Kerberos 대신 사용 됩니다.  
  
 Kerberos Requester Token은 서비스를 나타내기 위해 클라이언트에서만 사용됩니다. Kerbros Requestor Token에서 생성하는 권한 정책에는 SPN이라는 클레임 하나만 포함되므로 클레임에 ID가 없습니다. 대부분의 경우에는 클라이언트에서 <xref:System.ServiceModel.ServiceSecurityContext>를 사용하지 않기 때문에 문제가 없습니다. 이중 시나리오의 경우 콜백 시 콜백에서 이 속성을 검사하면 익명 ID가 사용됩니다.  
  
   
  
## Examples  
 사용 하는 예는 `PrimaryIdentity` 인증서를 사용 하 여 클라이언트에 권한을 부여 하는 속성 참조 [방법: 보안 컨텍스트 검사](~/docs/framework/wcf/how-to-examine-the-security-context.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Permissions.PrincipalPermissionAttribute" />
        <altmember cref="T:System.Security.Principal.IPrincipal" />
        <related type="Article" href="https://msdn.microsoft.com/library/389b5a57-4175-4bc0-ada0-fc750d51149f">방법: 보안 컨텍스트 검사</related>
      </Docs>
    </Member>
    <Member MemberName="WindowsIdentity">
      <MemberSignature Language="C#" Value="public System.Security.Principal.WindowsIdentity WindowsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.WindowsIdentity WindowsIdentity" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceSecurityContext.WindowsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WindowsIdentity As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::WindowsIdentity ^ WindowsIdentity { System::Security::Principal::WindowsIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WindowsIdentity : System.Security.Principal.WindowsIdentity" Usage="System.ServiceModel.ServiceSecurityContext.WindowsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 설정의 Windows ID를 가져옵니다.</summary>
        <value>Windows 도메인 사용자를 나타내는 <see cref="T:System.Security.Principal.WindowsIdentity" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 원격 상대방을 Windows 계정과 연결할 수 없는 경우 <xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> 속성은 `true`로 설정됩니다.  
  
   
  
## Examples  
 <xref:System.Security.Permissions.PrincipalPermissionAttribute>  
  
 <xref:System.Security.Principal.IPrincipal>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>