<Type Name="Grammar" FullName="System.Speech.Recognition.Grammar">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a950bf12102fd3587a67b8af5b69cf1c23cfac2b" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58718743" /></Metadata><TypeSignature Language="C#" Value="public class Grammar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Grammar extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.Grammar" />
  <TypeSignature Language="VB.NET" Value="Public Class Grammar" />
  <TypeSignature Language="C++ CLI" Value="public ref class Grammar" />
  <TypeSignature Language="F#" Value="type Grammar = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Grammar: {(_uri != null ? "uri=" + _uri.ToString () + " " : "") + "rule=" + _ruleName }")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>응용 프로그램이 음성 인식에 대한 제한 조건을 정의하는 데 사용할 수 있는 음성 인식 문법을 참조하는 런타임 개체입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 음성 인식 문법을 의미 있는 입력으로 인식 하는 음성 인식 엔진 수를 정의 하는 제약 조건 또는 규칙의 집합. 만들기 및 음성 인식 문법을 사용 하는 방법에 대 한 자세한 내용은 참조 하세요. [음성 인식](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14))를 [문법을 사용 하 여 XML 만들기](https://msdn.microsoft.com/library/2d799487-49c6-4cc9-b42f-f71cd3824fe1), [만들기 문법을 사용 하 여 GrammarBuilder](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae), 및 [SrgsGrammar를 사용 하 여 문법을 만들](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14))합니다.  
  
 에 작성 해야 문법을 만든 후를 <xref:System.Speech.Recognition.Grammar> 개체 음성 인식 엔진을 로드할 수 있습니다 및 음성 인식 기능을 관리 하려면 응용 프로그램이 런타임 시 사용할 수 있습니다. 사용할 수는 <xref:System.Speech.Recognition.Grammar.%23ctor%2A> 만드는 생성자입니다를 <xref:System.Speech.Recognition.Grammar> 에서 인스턴스를 <xref:System.Speech.Recognition.GrammarBuilder> 또는 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> 개체 또는 파일 또는 <xref:System.IO.Stream> 문법 지원 되는 형식에서에 대 한 설명을 포함 하는 합니다. 지원 되는 형식은 다음과 같습니다.  
  
-   W3C에 따르는 XML 형식 파일 [음성 인식 문법 Specification (SRGS) 버전 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)  
  
-   파일 확장명이.cfg 인 이진 파일을 컴파일되지 않은 문법  
  
 XML 형식의 문법 파일에 해당 인수를 수락 하는 문법 생성자에는 음성 인식 엔진에 의해 로드 및 사용에 대 한 최적화를 이진 형식으로 XML 문법을 컴파일합니다. 생성 하는 데 필요한 시간을 줄일 수 있습니다는 <xref:System.Speech.Recognition.Grammar> 중 하나를 사용 하 여 문법 미리 컴파일하여 XML 형식 문법의 개체는 <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> 메서드.  
  
 응용 프로그램의 음성 인식 엔진을 관리 하는 <xref:System.Speech.Recognition.SpeechRecognizer> 또는 <xref:System.Speech.Recognition.SpeechRecognitionEngine> 개체, 여러 음성 인식 문법을 로드할 수 있습니다. 응용 프로그램이 독립적으로 설정 하거나 해제할 수 개별 문법 설정 하 여는 <xref:System.Speech.Recognition.Grammar.Enabled%2A> 속성을 통해 인식 동작을 수정 하 고 <xref:System.Speech.Recognition.Grammar> 속성을 같은 합니다 <xref:System.Speech.Recognition.Grammar.Priority%2A> 및 <xref:System.Speech.Recognition.Grammar.Weight%2A> 속성.  
  
 문법의 <xref:System.Speech.Recognition.Grammar.SpeechRecognized> 입력 문법을 통해 경로 일치 하는 이벤트가 발생 합니다.  
  
> [!NOTE]
>  URI 또는 빌드하는 데 사용 되는 DLL의 안전성을 확인 하는 것이 좋습니다는 <xref:System.Speech.Recognition.Grammar> 개체입니다.  
>   
>  Windows 및 음성 플랫폼 제공 생성 하는 응용 프로그램에 대 한 보안을 <xref:System.Speech.Recognition.Grammar> DLL 또는 스크립팅을 지 원하는 문법의 인스턴스.  
>   
>  스크립트 <xref:System.Speech.Recognition.Grammar> 웹 페이지에서 다운로드 한 것 처럼 개체는 항상 실행을 `Internet Zone`입니다. 공용 언어 런타임 (CLR) 문법 정의 가져오려면 로드 된 DLL을 격리 합니다.  
  
   
  
## Examples  
 다음 예제에서는 생성을 <xref:System.Speech.Recognition.Grammar> XML 파일 (cities.xml)에 정의 된 음성 인식 문법 개체입니다. Cities.xml 파일의 내용을 다음 XML 예제에 표시 됩니다.  
  
```csharp  
// Load a cities grammar from a local file and return the grammar object.   
private static Grammar CreateGrammarFromFile()  
{  
  Grammar citiesGrammar = new Grammar(@"c:\temp\cities.xml");  
  citiesGrammar.Name = "SRGS File Cities Grammar";  
  return citiesGrammar;  
}  
  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item> Seattle </item>  
      <item> Los Angeles </item>  
      <item> New York </item>  
      <item> Miami </item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
    <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
    <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
    <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">음성 인식 문법 사양</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Speech.Recognition.Grammar" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 <xref:System.Speech.Recognition.Grammar.%23ctor%2A> 만드는 생성자입니다를 <xref:System.Speech.Recognition.Grammar> 에서 인스턴스를 <xref:System.Speech.Recognition.GrammarBuilder> 또는 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> 개체 또는 파일 또는 <xref:System.IO.Stream> 문법 지원 되는 형식에서에 대 한 설명을 포함 하는 합니다. 지원 되는 형식은 다음과 같습니다.  
  
-   W3C에 따르는 XML 형식 파일 [음성 인식 문법 Specification (SRGS) 버전 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)  
  
-   파일 확장명이.cfg 인 이진 파일을 컴파일되지 않은 문법  
  
 XML 형식의 문법 파일에 해당 인수를 수락 하는 문법 생성자에는 음성 인식 엔진에 의해 로드 및 사용에 대 한 최적화를 이진 형식으로 XML 문법을 컴파일합니다. 생성 하는 데 필요한 시간을 줄일 수 있습니다는 <xref:System.Speech.Recognition.Grammar> 중 하나를 사용 하 여 문법 미리 컴파일하여 XML 형식 문법의 개체는 <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> 메서드.  
  
 음성 인식 문법을 루트 규칙을 정의할 수 있습니다. 만들려는 <xref:System.Speech.Recognition.Grammar> 받아들이는 생성자를 사용 하는 해당 루트 규칙으로 사용 하는 규칙을 지정 하는 개체는 `ruleName` 매개 변수입니다.  
  
 만들려는 <xref:System.Speech.Recognition.Grammar> 사용 하는 생성자를 사용 하는 상대 규칙 참조를 확인 하는 기본 URI를 지정 하는 개체는 `baseUri` 매개 변수입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Grammar ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Grammar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Speech.Recognition.Grammar" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.IO.Stream -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">지원되는 형식의 음성 인식을 문법을 설명하는 스트림</param>
        <summary><see cref="T:System.Speech.Recognition.Grammar" />에서 <see cref="T:System.IO.Stream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 초기화 처리기에 매개 변수를 전달 하지 않습니다 하 고 설명 해야 인수를 필요로 하는 초기화 처리기를 정의 하지 않습니다.  
  
 이 생성자를 만들 수는 <xref:System.Speech.Recognition.Grammar> 다음 형식에서 인스턴스:  
  
-   W3C에 따르는 XML 형식 파일 [음성 인식 문법 Specification (SRGS) 버전 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)  
  
-   파일 확장명이.cfg 인 이진 파일을 컴파일되지 않은 문법  
  
 이 생성자는 음성 인식 엔진에 의해 로드 및 사용에 대 한 최적화를 이진 형식으로 XML 형식 문법 파일을 컴파일합니다. 생성 하는 데 필요한 시간을 줄일 수 있습니다는 <xref:System.Speech.Recognition.Grammar> 중 하나를 사용 하 여 문법 미리 컴파일하여 XML 형식 문법의 개체는 <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> 메서드.  
  
 SRGS 문법을 루트 규칙을 정의할 수 있습니다. 만들려는 <xref:System.Speech.Recognition.Grammar> 스트림에서 개체 루트 규칙을 지정 하 고 사용 합니다 <xref:System.Speech.Recognition.Grammar.%23ctor%2A> 또는 <xref:System.Speech.Recognition.Grammar.%23ctor%2A> 생성자입니다.  
  
 만들려는 <xref:System.Speech.Recognition.Grammar> 스트림에서 개체를 사용 하 여 상대 규칙 참조를 확인 하는 데 기본 URI를 지정 합니다 <xref:System.Speech.Recognition.Grammar.%23ctor%2A> 생성자입니다.  
  
   
  
## Examples  
 다음 예제에서는 파일 스트림을 사용 하 여 로컬 SRGS 파일 (cities.xml)에서 음성 인식 문법을 만듭니다. C# 예제에서는 다음 cities.xml 파일의 내용을 표시 됩니다.  
  
```csharp  
  
// Load a cities grammar from an I/O stream and    
// return the new grammar.   
private static Grammar CreateGrammarFromStream()  
{  
  string fileName = @"c:\temp\cities.xml";  
  Grammar citiesGrammar =  
    new Grammar(new FileStream(fileName, FileMode.Open));  
  citiesGrammar.Name = "Stream Cities Grammar";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item>Seattle</item>  
      <item>Los Angeles</item>  
      <item>New York</item>  
      <item>Miami</item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="stream" /> 은 루트 규칙을 포함하지 않는 문법을 설명합니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.FormatException">스트림에 문법에 대한 올바른 설명이 포함되어 있지 않거나 스트림이 확인할 수 없는 규칙 참조가 포함된 문법을 설명합니다.</exception>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">음성 인식 문법 사양</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar builder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">음성 인식 문법에 대한 제약 조건을 포함하는 <see cref="T:System.Speech.Recognition.GrammarBuilder" />의 인스턴스</param>
        <summary><see cref="T:System.Speech.Recognition.Grammar" /> 개체에서 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용에 대 한 자세한 내용은 합니다 <xref:System.Speech.Recognition.GrammarBuilder> 문법을 정의 참조를 클래스 [문법을 사용 하 여 GrammarBuilder 만들](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하 여 음성 인식 문법 <xref:System.Speech.Recognition.Choices> 고 <xref:System.Speech.Recognition.GrammarBuilder> 개체입니다. 합니다 <xref:System.Speech.Recognition.Grammar.%23ctor%2A> 생성자를 만듭니다를 <xref:System.Speech.Recognition.Grammar> 에서 개체를 <xref:System.Speech.Recognition.GrammarBuilder> 개체입니다.  
  
```csharp  
  
// Create a grammar using a GrammarBuilder and return the new grammar.   
private static Grammar CreateGrammarBuilderGrammar()  
{  
  GrammarBuilder builder = new GrammarBuilder();  
  
  Choices cityChoice = new Choices (new string[]   
  {"Seattle", "New York", "Miami", "Los Angeles"});  
  
  builder.Append("I would like to fly from");  
  builder.Append(cityChoice);  
  builder.Append("to");  
  builder.Append(cityChoice);  
  
  Grammar citiesGrammar = new Grammar(builder);  
  citiesGrammar.Name = "GrammarBuilder Cities Grammar";  
  
  return citiesGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::Speech::Recognition::SrgsGrammar::SrgsDocument ^ srgsDocument);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.Speech.Recognition.SrgsGrammar.SrgsDocument -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar srgsDocument" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="srgsDocument" Type="System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
      </Parameters>
      <Docs>
        <param name="srgsDocument">음성 인식 문법에 대한 제약 조건입니다.</param>
        <summary><see cref="T:System.Speech.Recognition.Grammar" /> 개체를 사용하여 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 초기화 처리기에 매개 변수를 전달 하지 않습니다 및 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> 인수를 필요로 하는 초기화 처리기를 포함 하지 않아야 합니다.  
  
 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> 루트 규칙을 가질 수 있습니다. 만들려는 <xref:System.Speech.Recognition.Grammar> 루트 규칙을 사용 하 여 지정 하는 개체를 <xref:System.Speech.Recognition.Grammar.%23ctor%2A> 또는 <xref:System.Speech.Recognition.Grammar.%23ctor%2A> 생성자입니다.  
  
 음성 인식을 만들려는 <xref:System.Speech.Recognition.Grammar> 에서 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> 사용 하 여 상대 규칙 참조를 확인 하는 데 기본 URI를 지정 하 고는 <xref:System.Speech.Recognition.Grammar.%23ctor%2A> 생성자입니다.  
  
   
  
## Examples  
 다음 예제에서는 음성 인식 문법을 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> 생성을 사용 하는 경우는 <xref:System.Speech.Recognition.Grammar> 개체입니다.  
  
```csharp  
private static Grammar CreateSrgsDocumentGrammar()  
{  
  // Create the SrgsDocument.  
  SrgsDocument document = new SrgsDocument();  
  
  // Create the Cities rule and add it to the document.  
  SrgsRule citiesRule = new SrgsRule("Cities");  
  
  SrgsOneOf cityChoice = new SrgsOneOf();  
  cityChoice.Add(new SrgsItem("Seattle"));  
  cityChoice.Add(new SrgsItem("Los Angeles"));  
  cityChoice.Add(new SrgsItem("New York"));  
  cityChoice.Add(new SrgsItem("Miami"));  
  
  citiesRule.Add(cityChoice);  
  document.Rules.Add(citiesRule);  
  
  // Create the Main rule and add it to the document.  
  SrgsRule mainRule = new SrgsRule("Main");  
  mainRule.Scope = SrgsRuleScope.Public;  
  
  SrgsItem item = new SrgsItem("I would like to fly from");  
  item.Add(new SrgsRuleRef(citiesRule));  
  item.Add(new SrgsText("to"));  
  item.Add(new SrgsRuleRef(citiesRule));  
  
  mainRule.Add(item);  
  document.Rules.Add(mainRule);  
  
  // Set the root rule.  
  document.Root = mainRule;  
  
  // Create the Grammar object.  
  Grammar citiesGrammar = new Grammar(document);  
  citiesGrammar.Name = "SrgsDocument Cities Grammar";  
  
  return citiesGrammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="srgsDocument" />에 루트 규칙이 포함되지 않습니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="srgsDocument" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.FormatException"><paramref name="srgsDocument" />확인할 수 없는 규칙 참조를 포함합니다.</exception>
        <altmember cref="N:System.Speech.Recognition.SrgsGrammar" />
        <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">음성 인식 문법 사양</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : string -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">지원되는 형식으로 음성 인식 문법을 설명하는 파일의 경로입니다.</param>
        <summary>파일에서 <see cref="T:System.Speech.Recognition.Grammar" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 초기화 처리기에 매개 변수를 전달 하지 않습니다 하 고 설명 해야 인수를 필요로 하는 초기화 처리기를 정의 하지 않습니다.  
  
 이 생성자를 만들 수는 <xref:System.Speech.Recognition.Grammar> 다음 형식에서 인스턴스:  
  
-   W3C에 따르는 XML 형식 파일 [음성 인식 문법 Specification (SRGS) 버전 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)  
  
-   파일 확장명이.cfg 인 이진 파일을 컴파일되지 않은 문법  
  
 이 생성자는 음성 인식 엔진에 의해 로드 및 사용에 대 한 최적화를 이진 형식으로 XML 형식 문법 파일을 컴파일합니다. 생성 하는 데 필요한 시간을 줄일 수 있습니다는 <xref:System.Speech.Recognition.Grammar> 중 하나를 사용 하 여 문법 미리 컴파일하여 XML 형식 문법의 개체는 <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> 메서드.  
  
 SRGS 문법을 루트 규칙을 정의할 수 있습니다. 만들려는 <xref:System.Speech.Recognition.Grammar> 문자열에서 개체 루트 규칙을 지정 하 고 사용 하 여는 <xref:System.Speech.Recognition.Grammar.%23ctor%2A> 생성자입니다.  
  
 만들려는 <xref:System.Speech.Recognition.Grammar> 상대 규칙 참조를 확인 하는 데 기본 URI를 지정 하는 개체 파일 스트림 및 사용 하 여 파일을 엽니다는 <xref:System.Speech.Recognition.Grammar.%23ctor%2A?displayProperty=nameWithType> 생성자입니다.  
  
   
  
## Examples  
 다음 예제에서는 빌드 SRGS 파일을 로컬에서 음성 인식 문법을 로드를 <xref:System.Speech.Recognition.Grammar> 개체입니다. Cities.xml 파일의 내용을 C# 예제에서는 다음 XML 예제에 표시 됩니다.  
  
```csharp  
// Load a cities grammar from a local file and  
// return the new grammar.   
private static Grammar CreateGrammarFromFile()  
{  
  Grammar citiesGrammar = new Grammar(@"c:\temp\cities.xml");  
  citiesGrammar.Name = "SRGS File Cities Grammar";  
  return citiesGrammar;  
}  
  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item>Seattle</item>  
      <item>Los Angeles</item>  
      <item>New York</item>  
      <item>Miami</item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="path" />가 빈 문자열("")을 포함하거나, 또는 파일이 루트 규칙을 포함하지 않는 문법을 설명합니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="path" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.FormatException">파일에 올바른 설명이 포함되어 있지 않거나, 확인할 수 없는 규칙 참조가 포함된 문법을 설명합니다.</exception>
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">음성 인식 문법 사양</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.IO.Stream stream, string ruleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string ruleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::IO::Stream ^ stream, System::String ^ ruleName);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.IO.Stream * string -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (stream, ruleName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="ruleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream">지원되는 형식의 음성 인식을 문법을 설명하는 스트림</param>
        <param name="ruleName">음성 인식 문법의 진입점으로 사용하는 규칙의 식별자이거나, 문법 설명의 기본 루트 규칙을 사용하는 <see langword="null" />입니다.</param>
        <summary><see cref="T:System.Speech.Recognition.Grammar" />에서 <see cref="T:System.IO.Stream" /> 클래스의 새 인스턴스를 초기화하고 루트 규칙을 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 초기화 처리기에 매개 변수를 전달 하지 않습니다 하 고 설명 해야 인수를 필요로 하는 초기화 처리기를 정의 하지 않습니다.  
  
 이 생성자를 만들 수는 <xref:System.Speech.Recognition.Grammar> 다음 형식에서 인스턴스:  
  
-   W3C에 따르는 XML 형식 파일 [음성 인식 문법 Specification (SRGS) 버전 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)  
  
-   파일 확장명이.cfg 인 이진 파일을 컴파일되지 않은 문법  
  
 이 생성자는 음성 인식 엔진에 의해 로드 및 사용에 대 한 최적화를 이진 형식으로 XML 형식 문법 파일을 컴파일합니다. 생성 하는 데 필요한 시간을 줄일 수 있습니다는 <xref:System.Speech.Recognition.Grammar> 중 하나를 사용 하 여 문법 미리 컴파일하여 XML 형식 문법의 개체는 <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> 메서드.  
  
 만들려는 <xref:System.Speech.Recognition.Grammar> 스트림에서 사용 하 여 상대 규칙 참조를 확인 하는 데 기본 URI를 지정 하 고는 <xref:System.Speech.Recognition.Grammar.%23ctor%2A> 생성자입니다.  
  
   
  
## Examples  
 다음 예제에서는 로컬 SRGS 파일 (cities.xml)는 파일 스트림에서 로드 하 고 문법의 루트로 사용 하는 규칙을 지정 합니다. Cities.xml 파일의 내용을 C# 예제에서는 다음 XML 예제에 표시 됩니다.  
  
```csharp  
  
// Load a cities grammar from an I/O stream, use a specific  
// rule as the root of the grammar, and return the new grammar.   
private static Grammar CreateGrammarFromStream2()  
{  
  FileInfo file = new FileInfo(@"c:\temp\cities.xml");  
  Grammar citiesGrammar = new Grammar(file.OpenRead(), "Main");  
  citiesGrammar.Name = "Stream Cities Grammar 2";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item>Seattle</item>  
      <item>Los Angeles</item>  
      <item>New York</item>  
      <item>Miami</item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="ruleName" />을 확인할 수 없거나 public이 아닙니다. 또는 <paramref name="ruleName" />은 <see langword="null" />이고 문법 설명에서 루트 규칙을 정의하지 않습니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.FormatException">스트림에 올바른 설명이 포함되어 있지 않거나 스트림이 확인할 수 없는 규칙 참조가 포함된 문법을 설명합니다.</exception>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">음성 인식 문법 사양</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::Speech::Recognition::SrgsGrammar::SrgsDocument ^ srgsDocument, System::String ^ ruleName);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.Speech.Recognition.SrgsGrammar.SrgsDocument * string -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (srgsDocument, ruleName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="srgsDocument" Type="System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <Parameter Name="ruleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="srgsDocument">음성 인식 문법에 대한 제약 조건입니다.</param>
        <param name="ruleName">음성 인식 문법의 진입점으로 사용하는 규칙의 식별자 또는 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />의 기본 루트 규칙을 사용하는 <see langword="null" /></param>
        <summary><see cref="T:System.Speech.Recognition.Grammar" /> 개체 및 지정된 루트 규칙에서의 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 초기화 처리기에 매개 변수를 전달 하지 않습니다 및 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> 인수를 필요로 하는 초기화 처리기를 포함 하지 않아야 합니다.  
  
 만들려는 <xref:System.Speech.Recognition.Grammar> 에서 개체를 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> 사용 하 여 상대 규칙 참조를 확인 하는 데 기본 URI를 지정 하 고는 <xref:System.Speech.Recognition.Grammar.%23ctor%2A> 생성자입니다.  
  
   
  
## Examples  
 다음 예제에서는 음성 인식 문법을 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> 인스턴스 및 문법의 루트 규칙으로 사용할 규칙을 지정 합니다. 예에서는 한 <xref:System.Speech.Recognition.Grammar> 에서 개체를 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> 인스턴스 및 음성 인식 엔진에 로드 합니다.  
  
```csharp  
using System;  
using System.Speech.Recognition;  
using System.Speech.Recognition.SrgsGrammar;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an in-process speech recognition engine.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine())  
      {  
  
        // Create the SrgsDocument.  
        SrgsDocument document = new SrgsDocument();  
  
        // Create the Cities rule and add it to the document.  
        SrgsRule citiesRule = new SrgsRule("Cities");  
        citiesRule.Scope = SrgsRuleScope.Public;  
  
        SrgsOneOf cityChoice = new SrgsOneOf();  
        cityChoice.Add(new SrgsItem("Seattle"));  
        cityChoice.Add(new SrgsItem("Los Angeles"));  
        cityChoice.Add(new SrgsItem("New York"));  
        cityChoice.Add(new SrgsItem("Miami"));  
  
        citiesRule.Add(cityChoice);  
        document.Rules.Add(citiesRule);  
  
        // Create the Main rule and add it to the document.  
        SrgsRule mainRule = new SrgsRule("Main");  
        mainRule.Scope = SrgsRuleScope.Public;  
  
        mainRule.Add(new SrgsItem("I would like to fly from"));  
        mainRule.Add(new SrgsRuleRef(citiesRule));  
        mainRule.Add(new SrgsItem("to"));  
        mainRule.Add(new SrgsRuleRef(citiesRule));  
  
        document.Rules.Add(mainRule);  
  
        // Create the Grammar object and specify which rule to use as the root.  
        Grammar citiesGrammar = new Grammar(document,"Main");  
  
        // Load the grammar object to the recognizer.  
        recognizer.LoadGrammarAsync(citiesGrammar);  
  
        // Attach a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=  
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Set the input to the recognizer.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Start recognition.  
        recognizer.RecognizeAsync();  
        Console.WriteLine("Starting asynchronous recognition...");  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("  Speech recognized: " + e.Result.Text);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="ruleName" />을 확인할 수 없거나 public이 아닙니다. 또는 <paramref name="ruleName" />은 <see langword="null" />이고 <paramref name="srgsDocument" />에 루트 규칙이 포함되지 않습니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="srgsDocument" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.FormatException"><paramref name="srgsDocument" />확인할 수 없는 규칙 참조를 포함합니다.</exception>
        <altmember cref="N:System.Speech.Recognition.SrgsGrammar" />
        <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">음성 인식 문법 사양</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (string path, string ruleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string ruleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, ruleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::String ^ path, System::String ^ ruleName);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : string * string -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (path, ruleName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="ruleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">지원되는 형식으로 음성 인식 문법을 설명하는 파일의 경로입니다.</param>
        <param name="ruleName">음성 인식 문법의 진입점으로 사용하는 규칙의 식별자이거나, 문법 설명의 기본 루트 규칙을 사용하는 <see langword="null" />입니다.</param>
        <summary>파일에서 <see cref="T:System.Speech.Recognition.Grammar" /> 클래스의 새로운 인스턴스를 초기화하고 루트 규칙을 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 초기화 처리기에 매개 변수를 전달 하지 않습니다 하 고 설명 해야 인수를 필요로 하는 초기화 처리기를 정의 하지 않습니다.  
  
 이 생성자를 만들 수는 <xref:System.Speech.Recognition.Grammar> 다음 형식에서 인스턴스:  
  
-   W3C에 따르는 XML 형식 파일 [음성 인식 문법 Specification (SRGS) 버전 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)  
  
-   파일 확장명이.cfg 인 이진 파일을 컴파일되지 않은 문법  
  
 이 생성자는 음성 인식 엔진에 의해 로드 및 사용에 대 한 최적화를 이진 형식으로 XML 형식 문법 파일을 컴파일합니다. 생성 하는 데 필요한 시간을 줄일 수 있습니다는 <xref:System.Speech.Recognition.Grammar> 중 하나를 사용 하 여 문법 미리 컴파일하여 XML 형식 문법의 개체는 <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> 메서드.  
  
 만들려는 <xref:System.Speech.Recognition.Grammar> 상대 규칙 참조를 확인 한 파일에 대 한 파일 스트림을 열고 사용 하는 데 기본 URI를 지정 하는 <xref:System.Speech.Recognition.Grammar.%23ctor%2A> 생성자입니다.  
  
   
  
## Examples  
 다음 예제에서는 로컬 SRGS 파일 (cities.xml) 파일에서 로드 하 고 문법의 루트로 사용 하는 규칙을 지정 합니다. Cities.xml 파일의 내용을 C# 예제에서는 다음 XML 예제에 표시 됩니다.  
  
```csharp  
  
// Load a cities grammar from a local file, use a specific  
// rule as the root of the grammar, and return the new grammar.  
private static Grammar CreateGrammarFromFile2()  
{  
  Grammar citiesGrammar = new Grammar(@"c:\temp\cities.xml", "Main");  
  citiesGrammar.Name = "SRGS File Cities Grammar 2";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item>Seattle</item>  
      <item>Los Angeles</item>  
      <item>New York</item>  
      <item>Miami</item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="ruleName" />이 확인할 수 없거나 public이 아닙니다. 또는 <paramref name="path" />가 빈 문자열("")이거나 <paramref name="ruleName" />은 <see langword="null" />이고 문법 설명에서 루트 규칙을 정의하지 않습니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="path" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.FormatException">파일에 올바른 설명이 포함되어 있지 않거나 확인할 수 없는 규칙 참조가 포함된 문법을 설명합니다.</exception>
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">음성 인식 문법 사양</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.IO.Stream stream, string ruleName, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string ruleName, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::IO::Stream ^ stream, System::String ^ ruleName, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.IO.Stream * string * obj[] -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (stream, ruleName, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="stream">문법 사양을 포함하는 입력/출력 개체(파일, VisualStudio 리소스, DLL 포함)에 연결된 <see cref="T:System.IO.Stream" />입니다.</param>
        <param name="ruleName">음성 인식 문법의 진입점으로 사용하는 규칙의 식별자이거나, 문법 설명의 기본 루트 규칙을 사용하는 <see langword="null" />입니다.</param>
        <param name="parameters">생성되는 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" />의 루트 규칙 또는 진입점에 대한 <see cref="T:System.Speech.Recognition.Grammar" /> 속성에 지정된 초기화 처리기에 전달되는 매개 변수입니다. 이 매개 변수는 null일 수 있습니다.</param>
        <summary><see cref="T:System.Speech.Recognition.Grammar" />에서 <see cref="T:System.IO.Stream" /> 클래스의 새 인스턴스를 초기화하고 루트 규칙을 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 매개 변수는 초기화 처리기에 대 한을 지정할 수도 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="stream" /> 은 다음 문법으로 연결합니다: 
-  <paramref name="ruleName" />에 지정된 규칙을 포함하지 않습니다.  
  
-  <paramref name="parameters" />에서 정해진 것들과 다른 초기화 매개 변수를 요구합니다.  
  
-  문법에 대한 기본 기준 <see cref="T:System.Uri" /> 규칙으로 확인될 수 없는 상대 규칙 참조를 포함합니다.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.IO.Stream stream, string ruleName, Uri baseUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string ruleName, class System.Uri baseUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::IO::Stream ^ stream, System::String ^ ruleName, Uri ^ baseUri);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.IO.Stream * string * Uri -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (stream, ruleName, baseUri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="baseUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="stream">지원되는 형식의 음성 인식을 문법을 설명하는 스트림</param>
        <param name="ruleName">음성 인식 문법의 진입점으로 사용하는 규칙의 식별자이거나, 문법 설명의 기본 루트 규칙을 사용하는 <see langword="null" />입니다.</param>
        <param name="baseUri">문법 설명에서 관련 규칙 참조를 해결하기 위해 사용하는 기본 URI 또는 <see langword="null" />입니다.</param>
        <summary>스트림에서의 <see cref="T:System.Speech.Recognition.Grammar" /> 클래스의 새 인스턴스를 초기화하며, 루트 규칙을 지정하고, 상대 규칙 참조를 확인하기 위해 기본 URI(Uniform Resource Identifier)를 정의합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 초기화 처리기에 매개 변수를 전달 하지 않습니다 하 고 설명 해야 인수를 필요로 하는 초기화 처리기를 정의 하지 않습니다.  
  
 이 생성자를 만들 수는 <xref:System.Speech.Recognition.Grammar> 다음 형식에서 인스턴스:  
  
-   W3C에 따르는 XML 형식 파일 [음성 인식 문법 Specification (SRGS) 버전 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)  
  
-   파일 확장명이.cfg 인 이진 파일을 컴파일되지 않은 문법  
  
 이 생성자는 음성 인식 엔진에 의해 로드 및 사용에 대 한 최적화를 이진 형식으로 XML 형식 문법 파일을 컴파일합니다. 생성 하는 데 필요한 시간을 줄일 수 있습니다는 <xref:System.Speech.Recognition.Grammar> 중 하나를 사용 하 여 문법 미리 컴파일하여 XML 형식 문법의 개체는 <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> 메서드.  
  
 이 생성자를 확인 하지 않습니다 `baseUri`합니다. 그러나 합니다 `LoadGrammar` 메서드를 <xref:System.Speech.Recognition.SpeechRecognitionEngine> 또는 <xref:System.Speech.Recognition.SpeechRecognizer> 개체는 모든 규칙 참조 문법 설명에서 확인할 수 없는 경우 예외를 throw 합니다. 하는 경우 `baseUri` 아닙니다 `null`, `LoadGrammar` 메서드 URI를 사용 하 여 그렇지 않으면 확인할 수 없는 규칙 참조를 확인 합니다. 하는 경우 `baseUri` 파일을 나타냅니다는 `LoadGrammar` 상대 규칙 참조를 확인 하려고 할 때 지정 된 파일 및 파일의 디렉터리를 사용 합니다.  
  
   
  
## Examples  
 다음 예제에서는 파일 스트림에서 로컬 SRGS 파일 (shuttle.xml)를 로드합니다. 파일은 cities.xml 파일에서 규칙에 대 한 상대 규칙 참조를 포함 하 고 규칙 참조를 해결 하는 데 기본 URI를 지정 합니다. Shuttle.xml 및 cities.xml 파일의 콘텐츠는 C# 예제를 따르는 XML 예제에 표시 됩니다.  
  
```csharp  
  
private static Grammar CreateGrammarFromStream3()  
{  
  FileInfo file = new FileInfo(@".\shuttle.xml");  
  Uri baseUri = new Uri(@"file://c:\temp\");  
  Grammar citiesGrammar = new Grammar(file.OpenRead(), null, baseUri);  
  citiesGrammar.Name = "Stream Cities Grammar 3";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- shuttle.xml:   
    Defines an SRGS grammar for asking about a shuttle service. This grammar  
    references a Cities rule that is defined in the cities.xml grammar. -->  
  
  <rule id="Main">  
    <item>  
      Can I get a shuttle in  
      <ruleref uri="cities.xml#Cities"/>  
    </item>  
  </rule>  
</grammar>  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item>Seattle</item>  
      <item>Los Angeles</item>  
      <item>New York</item>  
      <item>Miami</item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="ruleName" />을 확인할 수 없거나 public이 아닙니다. 또는 <paramref name="ruleName" />은 <see langword="null" />이고 문법 설명에서 루트 규칙을 정의하지 않습니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.FormatException">스트림에 올바른 설명이 포함되어 있지 않거나 스트림이 확인할 수 없는 규칙 참조가 포함된 문법을 설명합니다.</exception>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">음성 인식 문법 사양</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::Speech::Recognition::SrgsGrammar::SrgsDocument ^ srgsDocument, System::String ^ ruleName, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.Speech.Recognition.SrgsGrammar.SrgsDocument * string * obj[] -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (srgsDocument, ruleName, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="srgsDocument" Type="System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="srgsDocument">음성 인식 문법에 대한 제약 조건을 포함하는 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />의 인스턴스</param>
        <param name="ruleName">음성 인식 문법의 진입점으로 사용하는 규칙의 식별자이거나, 문법 설명의 기본 루트 규칙을 사용하는 <see langword="null" />입니다.</param>
        <param name="parameters">생성되는 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" />의 루트 규칙 또는 진입점에 대한 <see cref="T:System.Speech.Recognition.Grammar" /> 속성에 지정된 초기화 처리기에 전달되는 매개 변수입니다. 이 매개 변수는 null일 수 있습니다.</param>
        <summary><see cref="T:System.Speech.Recognition.Grammar" />의 인스턴스에서의 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 클래스의 새 인스턴스를 초기화하며, 문법으로의 진입점이 될 규칙의 이름을 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 매개 변수는 초기화 처리기에 대 한을 지정할 수도 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-  매개 변수에 잘못된 값이 있는 경우  
  
-  <paramref name="srgsDocument" />에서 지정한 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />는 <paramref name="ruleName" />에서 지정한 규칙을 포함하지 않습니다.  
  
-  배열 매개 변수의 내용이 규칙의 초기화 처리기의 인수와 일치하지 않습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, Uri baseUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, class System.Uri baseUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::Speech::Recognition::SrgsGrammar::SrgsDocument ^ srgsDocument, System::String ^ ruleName, Uri ^ baseUri);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.Speech.Recognition.SrgsGrammar.SrgsDocument * string * Uri -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (srgsDocument, ruleName, baseUri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="srgsDocument" Type="System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="baseUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="srgsDocument">음성 인식 문법에 대한 제약 조건입니다.</param>
        <param name="ruleName">음성 인식 문법의 진입점으로 사용하는 규칙의 식별자 또는 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />의 기본 루트 규칙을 사용하는 <see langword="null" /></param>
        <param name="baseUri"><see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />에서 관련 규칙 참조를 해결하기 위해 사용하는 기본 URI 또는 <see langword="null" />입니다.</param>
        <summary>상대 규칙 참조를 확인하기 위해 루트 규칙을 지정하고, 기본 URI(Uniform Resource Identifier)를 정의하는 <see cref="T:System.Speech.Recognition.Grammar" /> 개체에서의 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 초기화 처리기에 매개 변수를 전달 하지 않습니다 및 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> 인수를 필요로 하는 초기화 처리기를 포함 하지 않아야 합니다.  
  
 이 생성자를 확인 하지 않습니다 `baseUri`합니다. 그러나 합니다 `LoadGrammar` 메서드를 <xref:System.Speech.Recognition.SpeechRecognitionEngine> 또는 <xref:System.Speech.Recognition.SpeechRecognizer> 개체는 모든 규칙 참조 문법 설명에서 확인할 수 없는 경우 예외를 throw 합니다. 하는 경우 `baseUri` 아닙니다 `null`, `LoadGrammar` 메서드 URI를 사용 하 여 그렇지 않으면 확인할 수 없는 규칙 참조를 확인 합니다. 하는 경우 `baseUri` 파일을 나타내는 경우 `LoadGrammar` 메서드 사용 하 여 지정 된 파일 및 파일의 디렉터리가 상대 규칙 참조를 확인 하려고 할 때입니다.  
  
   
  
## Examples  
 다음 예제에서는 음성 인식 문법을 <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> cities.xml 파일에 대 한 상대 규칙 참조를 포함 하 고 규칙 참조를 해결 하는 데 URI를 지정 합니다. Cities.xml 파일의 내용을 C# 예제에서는 다음 XML 예제에 표시 됩니다.  
  
```csharp  
  
private static Grammar CreateSrgsDocumentGrammar3()  
{  
  // Create the SrgsDocument.  
  SrgsDocument document = new SrgsDocument();  
  
  // Create the Main rule and add it to the document.  
  SrgsRule mainRule = new SrgsRule("Main");  
  mainRule.Scope = SrgsRuleScope.Public;  
  
  SrgsItem item = new SrgsItem("Can I get a shuttle in");  
  
  // Create a relative URI for the cities rule.  
  Uri ruleUri = new Uri("cities.xml#Cities", UriKind.Relative);  
  
  item.Add(new SrgsRuleRef(ruleUri));  
  
  mainRule.Add(item);  
  document.Rules.Add(mainRule);  
  
  // Set the root rule.  
  document.Root = mainRule;  
  
  // Create the grammar.  
  Uri baseUri = new Uri(@"file://c:\temp\");  
  Grammar citiesGrammar = new Grammar(document, null, baseUri);  
  citiesGrammar.Name = "SrgsDocument Cities Grammar 3";  
  
  return citiesGrammar;  
}  
  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item>Seattle</item>  
      <item>Los Angeles</item>  
      <item>New York</item>  
      <item>Miami</item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="ruleName" />을 확인할 수 없거나 public이 아닙니다. 또는 <paramref name="ruleName" />은 <see langword="null" />이고 <paramref name="srgsDocument" />에 루트 규칙이 포함되지 않습니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="srgsDocument" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.FormatException"><paramref name="srgsDocument" />확인할 수 없는 규칙 참조를 포함합니다.</exception>
        <altmember cref="N:System.Speech.Recognition.SrgsGrammar" />
        <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">음성 인식 문법 사양</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (string path, string ruleName, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string ruleName, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, ruleName As String, parameters As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::String ^ path, System::String ^ ruleName, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : string * string * obj[] -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (path, ruleName, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="path">DLL을 포함한 문법 사양이 들어 있는 파일의 경로입니다.</param>
        <param name="ruleName">음성 인식 문법의 진입점으로 사용하는 규칙의 식별자이거나, 문법 설명의 기본 루트 규칙을 사용하는 <see langword="null" />입니다.</param>
        <param name="parameters">생성되는 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" />의 루트 규칙 또는 진입점에 대한 <see cref="T:System.Speech.Recognition.Grammar" /> 속성에 지정된 초기화 처리기에 전달되는 매개 변수입니다. 이 매개 변수는 null일 수 있습니다.</param>
        <summary>문법 정의를 포함하는 파일에서의 <see cref="T:System.Speech.Recognition.Grammar" /> 클래스의 새 인스턴스를 초기화하며, 문법으로의 진입점이 될 규칙의 이름을 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 매개 변수는 초기화 처리기에 대 한을 지정할 수도 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-  매개 변수에 잘못된 값이 있는 경우  
  
-  <paramref name="path" />에서 지정된 파일에 유효한 문법이나 <paramref name="ruleName" />에 지정된 규칙이 없습니다.  
  
-  배열 매개 변수의 내용이 규칙의 초기화 처리기의 인수와 일치하지 않습니다.  
  
-  문법은 문법에 대한 기본 기준 <see cref="T:System.Uri" /> 규칙으로 확인할 수 없는 상대 규칙 참조를 포함합니다.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.IO.Stream stream, string ruleName, Uri baseUri, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string ruleName, class System.Uri baseUri, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::IO::Stream ^ stream, System::String ^ ruleName, Uri ^ baseUri, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.IO.Stream * string * Uri * obj[] -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (stream, ruleName, baseUri, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="stream">문법 사양을 포함하는 입력/출력 개체(파일, VisualStudio 리소스, DLL 포함)에 연결된 <see cref="T:System.IO.Stream" />입니다.</param>
        <param name="ruleName">음성 인식 문법의 진입점으로 사용하는 규칙의 식별자이거나, 문법 설명의 기본 루트 규칙을 사용하는 <see langword="null" />입니다.</param>
        <param name="baseUri">문법 설명에서 관련 규칙 참조를 해결하기 위해 사용하는 기본 URI 또는 <see langword="null" />입니다.</param>
        <param name="parameters">생성되는 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" />의 루트 규칙 또는 진입점에 대한 <see cref="T:System.Speech.Recognition.Grammar" /> 속성에 지정된 초기화 처리기에 전달되는 매개 변수입니다. 이 매개 변수는 null일 수 있습니다.</param>
        <summary><see cref="T:System.IO.Stream" />인 <see cref="T:System.Speech.Recognition.Grammar" /> 클래스의 새 인스턴스를 초기화하며 상대 참조를 확인하기 위해 루트 규칙 및 기본 URI를 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 매개 변수는 초기화 처리기에 대 한을 지정할 수도 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-  매개 변수에 잘못된 값이 있는 경우  
  
-  <paramref name="stream" />이 <paramref name="ruleName" />에서 지정한 규칙을 포함하지 않는 문법에 연결됩니다.  
  
-  배열 매개 변수의 내용이 규칙의 초기화 처리기의 인수와 일치하지 않습니다.  
  
문법에는 <paramref name="baseUri" />가 제공한 URI나 문법에 대한 기본 기준 <see cref="T:System.Uri" /> 규칙으로 확인할 수 없는 상대 규칙 참조가 포함됩니다.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, Uri baseUri, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, class System.Uri baseUri, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::Speech::Recognition::SrgsGrammar::SrgsDocument ^ srgsDocument, System::String ^ ruleName, Uri ^ baseUri, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.Speech.Recognition.SrgsGrammar.SrgsDocument * string * Uri * obj[] -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (srgsDocument, ruleName, baseUri, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="srgsDocument" Type="System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="srgsDocument">음성 인식 문법에 대한 제약 조건을 포함하는 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />의 인스턴스</param>
        <param name="ruleName">음성 인식 문법의 진입점으로 사용하는 규칙의 식별자이거나, 문법 설명의 기본 루트 규칙을 사용하는 <see langword="null" />입니다.</param>
        <param name="baseUri">문법 설명에서 관련 규칙 참조를 해결하기 위해 사용하는 기본 URI 또는 <see langword="null" />입니다.</param>
        <param name="parameters">생성되는 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" />의 루트 규칙 또는 진입점에 대한 <see cref="T:System.Speech.Recognition.Grammar" /> 속성에 지정된 초기화 처리기에 전달되는 매개 변수입니다. 이 매개 변수는 null일 수 있습니다.</param>
        <summary><see cref="T:System.Speech.Recognition.Grammar" />의 인스턴스에서의 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 클래스의 새 인스턴스를 초기화하며, 상대 참조를 확인하기 위해 문법 및 기본 URI로의 진입점이 될 규칙의 이름을 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 매개 변수는 초기화 처리기에 대 한을 지정할 수도 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-  매개 변수에 잘못된 값이 있는 경우  
  
-  <paramref name="srgsDocument" />에서 지정한 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />는 <paramref name="ruleName" />에서 지정한 규칙을 포함하지 않습니다.  
  
-  배열 매개 변수의 내용이 규칙의 초기화 처리기의 인수와 일치하지 않습니다.  
  
-  문법은 <paramref name="baseUri" />가 제공한 URI나 문법에 대한 기본 기준 <see cref="T:System.Uri" /> 규칙으로 확인할 수 없는 상대 규칙 참조를 포함합니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Speech.Recognition.Grammar.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>음성 인식기가 <see cref="T:System.Speech.Recognition.Grammar" />를 사용하여 인식을 수행할 수 있는지 여부를 제어하는 값을 가져오거나 설정합니다.</summary>
        <value>음성 인식기가 음성 인식 문법을 사용해 인식을 수행하는 경우, <see langword="Enabled" /> 속성은 <see langword="true" />를 반환하며, 그렇지 않은 경우 해당 속성은 <see langword="false" />를 반환합니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스의 <xref:System.Speech.Recognition.Grammar> 사용 또는 음성 인식 엔진에 의해 로드 되 고 독립적으로 사용할 수 있습니다.  
  
   
  
## Examples  
 에 대 한 정보를 기록 하는 다음 예제는 <xref:System.Speech.Recognition.Grammar> 개체를 [콘솔](https://go.microsoft.com/fwlink/?LinkId=159613)합니다.  
  
```csharp  
  
private static void DumpGrammarStatus(Grammar item)  
{  
  Console.WriteLine("Grammar name is {0}:", item.Name);  
  Console.WriteLine("  The Grammar {0} loaded.",  
    item.Loaded ? "is" : "is not");  
  Console.WriteLine("  The Grammar {0} enabled.",  
    item.Enabled ? "is" : "is not");  
  if (item.RuleName != null)  
  {  
    Console.WriteLine("  The root rule is {0}.", item.RuleName);  
  }  
  else  
  {  
    Console.WriteLine("  The Grammar does not specify a root rule.");  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Speech.Recognition.Grammar.Loaded" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">음성 인식 문법 사양</related>
      </Docs>
    </Member>
    <Member MemberName="IsStg">
      <MemberSignature Language="C#" Value="protected internal virtual bool IsStg { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStg" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.IsStg" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property IsStg As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool IsStg { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStg : bool" Usage="System.Speech.Recognition.Grammar.IsStg" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>문법이 강력한 형식으로 되어있는지 여부를 가져옵니다.</summary>
        <value>문법이 강력한 형식인 경우 <see langword="IsStg" /> 속성은 <see langword="true" />를 반환하고, 그렇지 않으면 속성이 <see langword="false" />를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 강력한 형식의 <xref:System.Speech.Recognition.Grammar> 개체 (`IsStg` equals `true`) 클라이언트 응용 프로그램 개체 대신 원시 텍스트 강력한 형식의 결과 반환할 수 있습니다. 예를 들어, 강력한 형식의 문법을 반환할 수 있습니다 <xref:System.DateTime> 원시 인식 된 입력 하는 대신 개체입니다.  
  
 강력한 형식의 문법을 문법의 규칙에 코드를 연결 하 여 구현할 수 있습니다. 인식 엔진을 지정 된 규칙 처리를 하는 대로 찍은 현재 부분 결과 입력, 관련된 코드를 실행 및 텍스트 정보가 다양 한 형식 개체 이 클라이언트가 더 쉽게 여러 문화권 및 내부 문법 논리에 대 한 지원, 향상 된 의미 체계 검사를 사용 하는 데 사용 합니다.  
  
 강력한 형식의 인스턴스 <xref:System.Speech.Recognition.Grammar> 개체는 어셈블리의 리소스에서 가져온 일반적으로 <xref:System.Type> 의 언어 런타임 (CLR (공용). 다른 언어를 지 원하는 데 지역화 된 형식은 이러한 예가 <xref:System.Speech.Recognition.Grammar> 개체입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>상속 하는 강력한 형식의 문법을 <see cref="T:System.Speech.Recognition.Grammar" /> 의 기본 동작을 재정의할 필요가 <see langword="IsStg" />를 반환 하는 <see langword="false" />합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Loaded">
      <MemberSignature Language="C#" Value="public bool Loaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Loaded" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.Loaded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Loaded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Loaded { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Loaded : bool" Usage="System.Speech.Recognition.Grammar.Loaded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>음성 인식기가 <see cref="T:System.Speech.Recognition.Grammar" />을 로드했는지 여부를 가져옵니다.</summary>
        <value>참조된 음성 인식 문법이 음성 인식기에 현재 로드된 경우, <see langword="Loaded" /> 속성은 <see langword="true" />를 반환하며, 그렇지 않은 경우 해당 속성은 <see langword="false" />를 반환합니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 한 번을 <xref:System.Speech.Recognition.Grammar> 의 값을 로드 된 <xref:System.Speech.Recognition.Grammar.Weight%2A>, 및 <xref:System.Speech.Recognition.Grammar.Priority%2A> 변경할 수 없습니다.  
  
   
  
## Examples  
 에 대 한 정보를 기록 하는 다음 예제는 <xref:System.Speech.Recognition.Grammar> 개체를 [콘솔](https://go.microsoft.com/fwlink/?LinkId=159613)합니다.  
  
```csharp  
  
private static void DumpGrammarStatus(Grammar item)  
{  
  Console.WriteLine("Grammar name is {0}:", item.Name);  
  Console.WriteLine("  The Grammar {0} loaded.",  
    item.Loaded ? "is" : "is not");  
  Console.WriteLine("  The Grammar {0} enabled.",  
    item.Enabled ? "is" : "is not");  
  if (item.RuleName != null)  
  {  
    Console.WriteLine("  The root rule is {0}.", item.RuleName);  
  }  
  else  
  {  
    Console.WriteLine("  The Grammar does not specify a root rule.");  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Speech.Recognition.Grammar.Enabled" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
    <Member MemberName="LoadLocalizedGrammarFromType">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.Grammar LoadLocalizedGrammarFromType (Type type, params object[] onInitParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.Grammar LoadLocalizedGrammarFromType(class System.Type type, object[] onInitParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::Grammar ^ LoadLocalizedGrammarFromType(Type ^ type, ... cli::array &lt;System::Object ^&gt; ^ onInitParameters);" />
      <MemberSignature Language="F#" Value="static member LoadLocalizedGrammarFromType : Type * obj[] -&gt; System.Speech.Recognition.Grammar" Usage="System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType (type, onInitParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.Grammar</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="onInitParameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">어셈블리에서 <see cref="T:System.Type" />를 기반으로 개체의 <see cref="T:System.Speech.Recognition.Grammar" />입니다.</param>
        <param name="onInitParameters"><see cref="T:System.Speech.Recognition.Grammar" />를 기반으로 지역화된 개체의 초기화 메서드에 전달할 매개 변수입니다. 이 매개 변수는 null일 수 있습니다.</param>
        <summary><see langword="LoadLocalizedGrammarFromType" /> 메서드는 <see cref="T:System.Speech.Recognition.Grammar" />에서 파생된 <see cref="T:System.Type" /> 개체의 지역화된 인스턴스를 반환합니다.</summary>
        <returns><see langword="LoadLocalizedGrammarFromType" /> 메서드는 <see cref="T:System.Speech.Recognition.Grammar" />를 토대로 한 유효한 개체, 또는 오류가 있는 경우 <see langword="null" />을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 문법을 사용 하 여 얻은 지역화 `LoadLocalizedGrammarFromType` 는 일반적으로 강력한 형식의 (참조 <xref:System.Speech.Recognition.Grammar.IsStg%2A> 강력한 형식의 문법 대 한 자세한 내용은). 경우 `onInitParameters` 가 null 참조 (Visual Basic에서는 Nothing)는 지역화 된 초기화 메서드가, 또는 메서드 인수를 받지 않는 문법이 있어야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Speech.Recognition.Grammar.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Speech.Recognition.Grammar" /> 개체의 이름을 가져오거나 설정합니다.</summary>
        <value><see langword="Name" /> 속성은 <see cref="T:System.Speech.Recognition.Grammar" /> 개체의 이름을 반환합니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 두 개의 <xref:System.Speech.Recognition.Grammar> 자릿수 및 소수에 대 한 개체입니다. 문법 개체 이름과 상대 가중치, 우선 순위를 할당 하 고는 in process 음성 인식기에 의해 로드 됩니다. 합니다 `CreateDigitsGrammar`, `CreateFractionsGrammar`, 및 `recognizer_SpeechRecognized` 메서드 여기 표시 되지 않습니다.  
  
```csharp  
  
// Create a Grammar for recognizing numeric digits.  
Grammar digitsGrammar = CreateDigitsGrammar();  
digitsGrammar.Name = "Digits Grammar";  
digitsGrammar.Priority = 2;  
digitsGrammar.Weight = 0.6f;  
  
// Create a Grammar for recognizing fractions.  
Grammar fractionsGrammar = CreateFractionsGrammar();  
fractionsGrammar.Name = "Fractions Grammar";  
fractionsGrammar.Priority = 1;  
fractionsGrammar.Weight = 1f;  
  
// Create an in-process speech recognizer.  
SpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  
  
recognizer.SpeechRecognized +=  
  new EventHandler<SpeechRecognizedEventArgs>(  
    recognizer_SpeechRecognized);  
  
// Load the digits and fractions Grammar objects.  
recognizer.LoadGrammar(digitsGrammar);  
recognizer.LoadGrammar(fractionsGrammar);  
  
// Start recognition.  
recognizer.SetInputToDefaultAudioDevice();  
recognizer.RecognizeAsync(RecognizeMode.Multiple);  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public int Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Priority { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : int with get, set" Usage="System.Speech.Recognition.Grammar.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Speech.Recognition.Grammar" /> 개체의 우선 순위 값을 가져오거나 설정합니다.</summary>
        <value><see langword="Priority" /> 속성은 고유한 <see cref="T:System.Speech.Recognition.Grammar" /> 의 상대적 우선 순위를 나타내는 정수 값을 반환합니다. 범위는 -128에서 127까지 포함합니다. 기본값은 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Priority` 속성 둘 이상의 문법 동일한 인식 결과 생성 합니다 문법을 선택 하는 데 사용 됩니다. 음성 인식기에 둘 이상의 음성 인식 문법을 로드 하 고 사용 하도록 설정 된 입력과 일치 하는 및 일치가 인식기에서 최상의 결과 경우 인식기 최고의 있는 문법을 사용 하 여 `Priority`입니다. 동일한 인식 결과 생성 하는 문법 수도 동일한 경우 `Priority` 인식기를 사용 하는 문법 정의 되지 않습니다. 값입니다.  
  
   
  
## Examples  
 다음 예제에서는 두 개의 <xref:System.Speech.Recognition.Grammar> 자릿수 및 소수에 대 한 개체입니다. <xref:System.Speech.Recognition.Grammar> 개체를 이름 및 상대 가중치 및 우선 순위를 할당 하 고는 in process 음성 인식기에서 로드 합니다. 합니다 `CreateDigitsGrammar`, `CreateFractionsGrammar`, 및 `recognizer_SpeechRecognized` 메서드 여기 표시 되지 않습니다.  
  
```csharp  
  
// Create a Grammar for recognizing numeric digits.  
Grammar digitsGrammar = CreateDigitsGrammar();  
digitsGrammar.Name = "Digits Grammar";  
digitsGrammar.Priority = 2;  
digitsGrammar.Weight = 0.6f;  
  
// Create a Grammar for recognizing fractions.  
Grammar fractionsGrammar = CreateFractionsGrammar();  
fractionsGrammar.Name = "Fractions Grammar";  
fractionsGrammar.Priority = 1;  
fractionsGrammar.Weight = 1f;  
  
// Create an in-process speech recognizer.  
SpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  
  
recognizer.SpeechRecognized +=  
  new EventHandler<SpeechRecognizedEventArgs>(  
    recognizer_SpeechRecognized);  
  
// Load the digits and fractions Grammar objects.  
recognizer.LoadGrammar(digitsGrammar);  
recognizer.LoadGrammar(fractionsGrammar);  
  
// Start recognition.  
recognizer.SetInputToDefaultAudioDevice();  
recognizer.RecognizeAsync(RecognizeMode.Multiple);  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Speech.Recognition.Grammar.Loaded" />
        <altmember cref="P:System.Speech.Recognition.Grammar.Enabled" />
        <altmember cref="P:System.Speech.Recognition.Grammar.Weight" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
    <Member MemberName="ResourceName">
      <MemberSignature Language="C#" Value="protected string ResourceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResourceName" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.ResourceName" />
      <MemberSignature Language="VB.NET" Value="Protected Property ResourceName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ ResourceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResourceName : string with get, set" Usage="System.Speech.Recognition.Grammar.ResourceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Speech.Recognition.Grammar" />를 로드하는 데 사용하는 이진 리소스의 이름을 사용하여 값을 가져오거나 설정합니다.</summary>
        <value><see langword="ResourceName" /> 속성은 <see cref="T:System.Speech.Recognition.Grammar" />에 사용되는 강력한 형식의 문법이 로드된 이진 리소스의 이름을 반환합니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuleName">
      <MemberSignature Language="C#" Value="public string RuleName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RuleName" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.RuleName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RuleName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RuleName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RuleName : string" Usage="System.Speech.Recognition.Grammar.RuleName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Speech.Recognition.Grammar" /> 개체의 루트 규칙 또는 입력 지점의 이름을 가져옵니다.</summary>
        <value><see langword="RuleName" /> 속성은 참조된 음성 인식 문법의 루트 규칙에 대한 식별자를 반환합니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 생성 하는 <xref:System.Speech.Recognition.Grammar> 개체 및 해당 루트 규칙에 대 한 이름을 설정 중 하나를 사용 합니다 <xref:System.Speech.Recognition.Grammar.%23ctor%2A> 받아들이는 생성자는 `ruleName` 매개 변수.  
  
 하는 경우의 루트 규칙을 <xref:System.Speech.Recognition.Grammar> 이름이 없는 속성을 반환 합니다 `null`합니다.  
  
 루트 규칙 <xref:System.Speech.Recognition.Grammar> 에서 생성 된 인스턴스 <xref:System.Speech.Recognition.GrammarBuilder> 개체 일반적으로 이름이 없음, 따라서 <xref:System.Speech.Recognition.Grammar.RuleName%2A> 반환 `null`합니다.  
  
   
  
## Examples  
 에 대 한 정보를 기록 하는 다음 예제는 <xref:System.Speech.Recognition.Grammar> 개체를 [콘솔](https://go.microsoft.com/fwlink/?LinkId=159613)합니다.  
  
```csharp  
  
private static void DumpGrammarStatus(Grammar item)  
{  
  Console.WriteLine("Grammar name is {0}:", item.Name);  
  Console.WriteLine("  The Grammar {0} loaded.",  
    item.Loaded ? "is" : "is not");  
  Console.WriteLine("  The Grammar {0} enabled.",  
    item.Enabled ? "is" : "is not");  
  if (item.RuleName != null)  
  {  
    Console.WriteLine("  The root rule is {0}.", item.RuleName);  
  }  
  else  
  {  
    Console.WriteLine("  The Grammar does not specify a root rule.");  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
    <Member MemberName="SpeechRecognized">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Recognition.SpeechRecognizedEventArgs&gt; SpeechRecognized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Recognition.SpeechRecognizedEventArgs&gt; SpeechRecognized" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Recognition.Grammar.SpeechRecognized" />
      <MemberSignature Language="VB.NET" Value="Public Event SpeechRecognized As EventHandler(Of SpeechRecognizedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Recognition::SpeechRecognizedEventArgs ^&gt; ^ SpeechRecognized;" />
      <MemberSignature Language="F#" Value="member this.SpeechRecognized : EventHandler&lt;System.Speech.Recognition.SpeechRecognizedEventArgs&gt; " Usage="member this.SpeechRecognized : System.EventHandler&lt;System.Speech.Recognition.SpeechRecognizedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Recognition.SpeechRecognizedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>음성 인식기가 <see cref="T:System.Speech.Recognition.Grammar" /> 개체를 사용하여 인식을 수행할 때 발생했습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 음성 인식기 발생을 `SpeechRecognized` 입력 인식 하는 경우 이벤트입니다. 합니다 <xref:System.Speech.Recognition.Grammar> 개체의 <xref:System.Speech.Recognition.Grammar.SpeechRecognized> 이벤트는 음성 인식기의 이전 `SpeechRecognized` 이벤트입니다. 자세한 내용은 참조는 <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=nameWithType>, <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=nameWithType>, 및 <xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted> 이벤트입니다.  
  
 항상 특정 문법과 관련 된 모든 작업에 대 한 처리기에서 처리 해야 합니다 <xref:System.Speech.Recognition.Grammar> 개체의 <xref:System.Speech.Recognition.Grammar.SpeechRecognized> 이벤트입니다.  
  
   
  
## Examples  
 다음 예제에서는 이벤트 처리기를 사용 합니다 <xref:System.Speech.Recognition.Grammar> 개체의 <xref:System.Speech.Recognition.Grammar.SpeechRecognized> 이벤트입니다. 인식 결과를 출력 합니다 [콘솔](https://go.microsoft.com/fwlink/?LinkId=159613)합니다.  
  
```csharp  
public partial class Form1 : Form  
{  
  SpeechRecognitionEngine sre;  
  
  public Form1()  
  {  
  InitializeComponent();  
  
  // Create an in-process speech recognizer.  
  sre = new SpeechRecognitionEngine();  
  
  // Configure input to the speech recognizer.  
  sre.SetInputToDefaultAudioDevice();  
  
  // Create a simple grammar and load it.  
  Grammar testGrammar = new Grammar(new GrammarBuilder("testing"));  
  sre.LoadGrammarAsync(testGrammar);  
  
  // Add a handler for the grammar's speech recognized event.  
  testGrammar.SpeechRecognized += new EventHandler<SpeechRecognizedEventArgs>(testGrammar_SpeechRecognized);  
  
  // Start asynchronous speech recognition.  
  sre.RecognizeAsync();  
  }  
  
  // Handle the grammar's SpeechRecognized event, output the recognized text.  
  void testGrammar_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
  {  
    Console.WriteLine("Recognized text: " + e.Result.Text);  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
    <Member MemberName="StgInit">
      <MemberSignature Language="C#" Value="protected void StgInit (object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void StgInit(object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.StgInit(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub StgInit (parameters As Object())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void StgInit(cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.StgInit : obj[] -&gt; unit" Usage="grammar.StgInit parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="parameters">강력한 문법을 초기화에 전달할 매개 변수입니다.이 매개 변수는 null 일 수 있습니다.</param>
        <summary><see langword="StgInit" /> 메서드는 강력한 형식의 문법을 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 강력한 형식의 <xref:System.Speech.Recognition.Grammar> 개체 (`IsStg` equals `true`) 클라이언트 응용 프로그램 개체 대신 원시 텍스트 강력한 형식의 결과 반환할 수 있습니다. 예를 들어, 강력한 형식의 문법을 반환할 수 있습니다 <xref:System.DateTime> 원시 인식 된 입력 하는 대신 개체입니다.  
  
 강력한 형식의 문법을 문법의 규칙에 코드를 연결 하 여 구현할 수 있습니다. 인식 엔진을 지정 된 규칙 처리를 하는 대로 찍은 현재 부분 결과 입력, 관련된 코드를 실행 및 텍스트 정보가 다양 한 형식 개체 이 클라이언트가 더 쉽게 여러 문화권 및 내부 문법 논리에 대 한 지원, 향상 된 의미 체계 검사를 사용 하는 데 사용 합니다.  
  
 강력한 형식의 인스턴스 <xref:System.Speech.Recognition.Grammar> 개체는 어셈블리의 리소스에서 가져온 일반적으로 <xref:System.Type> 의 언어 런타임 (CLR (공용). 다른 언어를 지 원하는 데 지역화 된 형식은 이러한 예가 <xref:System.Speech.Recognition.Grammar> 개체입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>강력한 형식의 문법을 초기화에 필요한 경우 <see langword="StgInit" /> 생성자 또는 초기화 메서드를 호출 해야 합니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Weight">
      <MemberSignature Language="C#" Value="public float Weight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Weight" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.Weight" />
      <MemberSignature Language="VB.NET" Value="Public Property Weight As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Weight { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.Weight : single with get, set" Usage="System.Speech.Recognition.Grammar.Weight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Speech.Recognition.Grammar" /> 개체의 가중치 값을 가져오거나 설정합니다.</summary>
        <value><see langword="Weight" /> 속성은 음성 입력을 처리할 때 인식 엔진 인스턴스가 문법에 할당해야 하는 상대적 가중치를 나타내는 부동 소수점 값을 반환합니다. 범위는 0.0에서 1.0 사이입니다. 기본값은 1.0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인식 엔진의 사용의 복잡성 때문 **가중치**, 특정 문법의 성능에 미치는와 직접적으로 예측할 수 없기 <xref:System.Speech.Recognition.Grammar.Priority%2A>합니다.  
  
 음성 인식 가중치가 적용 된 시스템입니다. 문법의 가중치, 문법 내 대안에 대해 정의 된 가중치 및 음성 모델을 정의한 확률의 조합에 따라 모든 가능한 인식 경로 평가 합니다. 음성 인식 엔진 이러한 가중치 및 순위 잠재적인 대체 개 인식 하는 확률의 조합을 사용합니다. 더 높은 가중치를 사용 하 여 문법 가중치가 낮은 문법 보다 인식 대안의 순위를 더 제공 합니다.  
  
 효과 <xref:System.Speech.Recognition.Grammar.Weight%2A> 음성 인식기에서 속성이 인식기의 구현에 따라 달라 집니다. 하지만 <xref:System.Speech.Recognition.Grammar.Weight%2A> 응용 프로그램에 대 한 음성 인식 정확도 튜닝 하려면 속성을 사용할 수 있습니다 특정 인식 환경의 및 인식 엔진에 대 한 전체 정보를 사용 하 여 진단 조사를 제어 한 후에 사용 해야 합니다. 아래에서 사용 합니다.  
  
   
  
## Examples  
 다음 예제에서는 두 개의 <xref:System.Speech.Recognition.Grammar> 자릿수 및 소수에 대 한 개체입니다. <xref:System.Speech.Recognition.Grammar> 개체를 이름 및 상대 가중치 및 우선 순위를 할당 하 고는 in process 음성 인식기에서 로드 합니다. 합니다 `CreateDigitsGrammar`, `CreateFractionsGrammar`, 및 `recognizer_SpeechRecognized` 메서드 여기 표시 되지 않습니다.  
  
```csharp  
  
// Create a Grammar for recognizing numeric digits.  
Grammar digitsGrammar = CreateDigitsGrammar();  
digitsGrammar.Name = "Digits Grammar";  
digitsGrammar.Priority = 2;  
digitsGrammar.Weight = 0.6f;  
  
// Create a Grammar for recognizing fractions.  
Grammar fractionsGrammar = CreateFractionsGrammar();  
fractionsGrammar.Name = "Fractions Grammar";  
fractionsGrammar.Priority = 1;  
fractionsGrammar.Weight = 1f;  
  
// Create an in-process speech recognizer.  
SpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  
  
recognizer.SpeechRecognized +=  
  new EventHandler<SpeechRecognizedEventArgs>(  
    recognizer_SpeechRecognized);  
  
// Load the digits and fractions Grammar objects.  
recognizer.LoadGrammar(digitsGrammar);  
recognizer.LoadGrammar(fractionsGrammar);  
  
// Start recognition.  
recognizer.SetInputToDefaultAudioDevice();  
recognizer.RecognizeAsync(RecognizeMode.Multiple);  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Speech.Recognition.Grammar.Loaded" />
        <altmember cref="P:System.Speech.Recognition.Grammar.Enabled" />
        <altmember cref="P:System.Speech.Recognition.Grammar.Priority" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
  </Members>
</Type>