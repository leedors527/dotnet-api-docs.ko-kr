<Type Name="EncoderExceptionFallbackBuffer" FullName="System.Text.EncoderExceptionFallbackBuffer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d4865b8076e25b60fd65b7496258cdedc2538107" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58691492" /></Metadata><TypeSignature Language="C#" Value="public sealed class EncoderExceptionFallbackBuffer : System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EncoderExceptionFallbackBuffer extends System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderExceptionFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EncoderExceptionFallbackBuffer&#xA;Inherits EncoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderExceptionFallbackBuffer sealed : System::Text::EncoderFallbackBuffer" />
  <TypeSignature Language="F#" Value="type EncoderExceptionFallbackBuffer = class&#xA;    inherit EncoderFallbackBuffer" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.EncoderFallbackBuffer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>입력 문자를 인코딩된 출력 바이트 시퀀스로 변환할 수 없으면 <see cref="T:System.Text.EncoderFallbackException" />을 throw합니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 실패 하는 인코딩 또는 디코딩 작업에 대 한 일반적인 이유는 기본 인코딩 클래스는 해당 하는 바이트 시퀀스를 문자 사이 매핑을 제공 하지 않습니다. 인코딩 작업은 호출 하는 입력된 문자를 출력 바이트 시퀀스로 변환할 수 없습니다, 하는 경우는 <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> 메서드를 발생 시키는 <xref:System.Text.EncoderFallbackException>합니다.  
  
 합니다 <xref:System.Text.EncoderFallbackBuffer?displayProperty=nameWithType> 인코딩 작업에 사용 되는 데이터 버퍼를 나타내는 클래스에 대 한 기본 클래스인는 <xref:System.Text.EncoderExceptionFallbackBuffer> 클래스입니다. 그러나 데이터 버퍼를 대신 합니다 <xref:System.Text.EncoderExceptionFallbackBuffer> 클래스 인코딩 작업이 실패 하면 예외가 throw 되는 여기서 표준 동작을 나타냅니다. 실제 데이터 버퍼가 없습니다 및 이러한 버퍼를 처리 하도록 디자인 된 멤버 없음 중요 한 작업을 수행 합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderExceptionFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderExceptionFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Text.EncoderExceptionFallbackBuffer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fallback">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>입력 문자를 인코딩할 수 없으므로 예외를 throw합니다. 명목상의 반환 값은 사용되지 않습니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public override bool Fallback (char charUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Fallback(char charUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Fallback (charUnknown As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Fallback(char charUnknown, int index);" />
      <MemberSignature Language="F#" Value="override this.Fallback : char * int -&gt; bool" Usage="encoderExceptionFallbackBuffer.Fallback (charUnknown, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknown" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknown">입력 문자입니다.</param>
        <param name="index">입력 버퍼에 있는 문자의 인덱스 위치입니다.</param>
        <summary>입력 문자를 인코딩할 수 없으므로 예외를 throw합니다. 매개 변수는 변환할 수 없는 문자의 값과 인덱스 위치를 지정합니다.</summary>
        <returns>없음 <see cref="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)" /> 메서드가 항상 예외를 throw하므로 값이 반환되지 않습니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Text.Encoding.GetBytes%2A> 하 고 <xref:System.Text.Encoder.Convert%2A> 메서드를 호출 <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> 는 입력에 알 수 없는 문자가 발생 하는 경우. 에 대 한 응답 <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> throw <xref:System.Text.EncoderFallbackException>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException"><paramref name="charUnknown" />을 인코딩할 수 없는 경우. 이 메서드는 항상 <paramref name="charUnknown" /> 및 <paramref name="index" /> 매개 변수의 값을 보고하는 예외를 throw합니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public override bool Fallback (char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Fallback (charUnknownHigh As Char, charUnknownLow As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Fallback(char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="F#" Value="override this.Fallback : char * char * int -&gt; bool" Usage="encoderExceptionFallbackBuffer.Fallback (charUnknownHigh, charUnknownLow, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknownHigh" Type="System.Char" />
        <Parameter Name="charUnknownLow" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknownHigh">입력 쌍의 high surrogate입니다.</param>
        <param name="charUnknownLow">입력 쌍의 low surrogate입니다.</param>
        <param name="index">입력 버퍼에 있는 서로게이트 쌍의 인덱스 위치입니다.</param>
        <summary>입력 문자를 인코딩할 수 없으므로 예외를 throw합니다. 매개 변수는 입력에 있는 서로게이트 쌍의 값과 인덱스 위치를 지정하고, 명목상의 반환 값은 사용되지 않습니다.</summary>
        <returns>없음 <see cref="M:System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" /> 메서드가 항상 예외를 throw하므로 값이 반환되지 않습니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Text.Encoding.GetBytes%2A> 하 고 <xref:System.Text.Encoder.Convert%2A> 메서드를 호출 <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> 는 입력에 서로게이트 쌍을 발생 하는 경우. 에 대 한 응답 <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A> 항상 예외를 throw 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException"><paramref name="charUnknownHigh" /> 및 <paramref name="charUnknownLow" />로 나타내는 문자를 인코딩할 수 없는 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="charUnknownHigh" /> 또는 <paramref name="charUnknownLow" />가 잘못된 경우(즉, <paramref name="charUnknownHigh" />가 U+D800 ~ U+DBFF 범위에 있지 않거나 <paramref name="charUnknownLow" />가 U+DC00 ~ U+DFFF 범위에 있지 않은 경우)</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public override char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetNextChar();" />
      <MemberSignature Language="F#" Value="override this.GetNextChar : unit -&gt; char" Usage="encoderExceptionFallbackBuffer.GetNextChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>예외 대체(fallback) 버퍼에서 다음 문자를 검색합니다.</summary>
        <returns>반환 값은 항상 유니코드 문자 NULL(U+0000)입니다.  
  
이 메서드가 추상 메서드를 구현하므로 변경되지 않는 반환 값이 정의됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때문에 <xref:System.Text.EncoderExceptionFallbackBuffer> 없는 실제 예외 데이터 버퍼에는 <xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar%2A> 메서드는 항상 유니코드 NULL 문자를 반환 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public override bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MovePrevious();" />
      <MemberSignature Language="F#" Value="override this.MovePrevious : unit -&gt; bool" Usage="encoderExceptionFallbackBuffer.MovePrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.Text.EncoderExceptionFallbackBuffer.GetNextChar" /> 메서드에 대한 다음 호출을 발생시켜 현재 위치 앞의 예외 데이터 버퍼 문자 위치에 액세스합니다.</summary>
        <returns>반환 값은 항상 <see langword="false" />입니다.  
  
이 메서드가 추상 메서드를 구현하므로 변경되지 않는 반환 값이 정의됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때문에 <xref:System.Text.EncoderExceptionFallbackBuffer> 없는 실제 예외 데이터 버퍼에는 <xref:System.Text.EncoderExceptionFallbackBuffer.MovePrevious%2A> 메서드는 항상 반환 `false`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public override int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderExceptionFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Remaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Remaining : int" Usage="System.Text.EncoderExceptionFallbackBuffer.Remaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Text.EncoderExceptionFallbackBuffer" /> 개체에서 처리할 남은 문자 수를 가져옵니다.</summary>
        <value>반환 값은 항상 0입니다.  
  
이 메서드가 추상 메서드를 구현하므로 변경되지 않는 반환 값이 정의됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때문에 <xref:System.Text.EncoderExceptionFallbackBuffer> 없는 실제 예외 데이터 버퍼에는 <xref:System.Text.EncoderExceptionFallbackBuffer.Remaining%2A> 속성은 항상 0을 반환 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>