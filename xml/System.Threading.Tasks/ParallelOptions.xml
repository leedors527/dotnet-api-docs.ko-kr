<Type Name="ParallelOptions" FullName="System.Threading.Tasks.ParallelOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="38ff626d498db46abb7959bbe91594a078ab5a3b" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58716039" /></Metadata><TypeSignature Language="C#" Value="public class ParallelOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParallelOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.ParallelOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class ParallelOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParallelOptions" />
  <TypeSignature Language="F#" Value="type ParallelOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Threading.Tasks.Parallel" /> 클래스의 메서드 작업을 구성하는 옵션을 저장합니다.</summary>
    <remarks>To be added.</remarks>
    <threadsafe>생성자는 스레드로부터 안전 하며 사용할 수 있습니다 여러 스레드에서 동시에 여러 인스턴스를 생성 합니다. 다른 공용 멤버는 스레드로부터 안전 합니다.</threadsafe>
    <related type="Article" href="~/docs/standard/parallel-programming/data-parallelism-task-parallel-library.md">데이터 병렬 처리(작업 병렬 라이브러리)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ParallelOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParallelOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Threading.Tasks.ParallelOptions" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 기본값을 사용 하 여 인스턴스를 초기화합니다. <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> 얼마나 많은 병렬 처리를 사용 해야 합니다에 없는 상한을 설정 인지를 나타내는-1로 초기화 됩니다. <xref:System.Threading.Tasks.ParallelOptions.CancellationToken%2A> 취소할 수 없는 토큰으로 초기화 되 고 <xref:System.Threading.Tasks.ParallelOptions.TaskScheduler%2A> 기본 스케줄러 (TaskScheduler.Default)으로 초기화 됩니다.  
  
 이러한 기본값의 모든 인스턴스에서 속성 set 접근자를 사용 하 여 덮어쓸 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancellationToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken CancellationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken CancellationToken" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ParallelOptions.CancellationToken" />
      <MemberSignature Language="VB.NET" Value="Public Property CancellationToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken CancellationToken { System::Threading::CancellationToken get(); void set(System::Threading::CancellationToken value); };" />
      <MemberSignature Language="F#" Value="member this.CancellationToken : System.Threading.CancellationToken with get, set" Usage="System.Threading.Tasks.ParallelOptions.CancellationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Threading.Tasks.ParallelOptions" /> 인스턴스와 연결된 <see cref="T:System.Threading.CancellationToken" />를 가져오거나 설정합니다.</summary>
        <value>이 인스턴스에 연결된 토큰입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 제공 하는 <xref:System.Threading.CancellationToken> 에 <xref:System.Threading.Tasks.Parallel> 메서드를 사용 하면 작업을 조기에 종료할 수입니다. 외부 코드 작업에는 토큰을 취소할 수 있습니다 하 고 설정 하는 토큰을 관찰 하는 작업을 하는 경우이 일찍 종료할 수 시켜는 <xref:System.OperationCanceledException>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDegreeOfParallelism">
      <MemberSignature Language="C#" Value="public int MaxDegreeOfParallelism { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDegreeOfParallelism" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDegreeOfParallelism As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDegreeOfParallelism { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxDegreeOfParallelism : int with get, set" Usage="System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Threading.Tasks.ParallelOptions" /> 인스턴스에서 사용되는 동시 작업의 최대 수를 가져오거나 설정합니다.</summary>
        <value>병렬 처리의 최대 수준을 나타내는 정수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> 속성에서 실행 되는 동시 작업 수에 영향을 줍니다 <xref:System.Threading.Tasks.Parallel> 이 전달 되는 메서드 호출 <xref:System.Threading.Tasks.ParallelOptions> 인스턴스. 양수 속성 값 집합 값으로 동시 작업 수를 제한합니다. -1 인 경우에 다음과 같은 작업을 동시에 실행의 수에 제한이 없습니다.  
  
 하지만 기본적으로 <xref:System.Threading.Tasks.Parallel.For%2A> 하 고 <xref:System.Threading.Tasks.Parallel.ForEach%2A> 많은 스레드가 기본 스케줄러를 제공 하므로 변경 이용할 <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> 만 기본에서 사용할 동시 작업 수를 제한 합니다.  
  
 일반적으로이 설정을 수정할 필요가 없습니다. 그러나 같은 고급 사용 시나리오에서 명시적으로 설정 하려면 선택할 수도 있습니다.  
  
-   특정 알고리즘을 사용 하는 것을 알고 있는 경우 특정 코어 수가 초과 확장 되지 않습니다. 추가 코어에서 주기를 낭비 하지 않아도 속성을 설정할 수 있습니다.  
  
-   다양 한 알고리즘을 동시에 실행 하 고 수동으로 정의 하려면 얼마나 많은 시스템 각 알고리즘에서 사용할 수 있습니다. 설정할 수 있습니다는 <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> 각각에 대 한 값입니다.  
  
-   스레드 풀의 추론 오른쪽 사용할 스레드 수를 확인할 수 없는 시간과 너무 많은 스레드를 주입 될 수 있습니다. 예를 들어 장기 실행 루프 본문 반복을 스레드 풀 적절 한 진행 되 면 무한 반복 또는 교착 상태를 구분 하지 못할 수 있습니다 및 성능 향상을 위해 추가 된 스레드를 회수 하지 못할 수 있습니다. 이 경우 적절 한 수의 스레드를 보다 더 사용 하지 않는 되도록 속성을 설정할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">속성을 0 또는 -1보다 작은 값으로 설정하는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="TaskScheduler">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskScheduler TaskScheduler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.TaskScheduler TaskScheduler" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ParallelOptions.TaskScheduler" />
      <MemberSignature Language="VB.NET" Value="Public Property TaskScheduler As TaskScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskScheduler ^ TaskScheduler { System::Threading::Tasks::TaskScheduler ^ get(); void set(System::Threading::Tasks::TaskScheduler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TaskScheduler : System.Threading.Tasks.TaskScheduler with get, set" Usage="System.Threading.Tasks.ParallelOptions.TaskScheduler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Threading.Tasks.ParallelOptions" /> 인스턴스와 연결된 <see cref="T:System.Threading.Tasks.TaskScheduler" />를 가져오거나 설정합니다. 이 속성을 null로 설정하면 현재 스케줄러가 사용됨을 나타냅니다.</summary>
        <value>이 인스턴스에 연결된 작업 스케줄러입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>