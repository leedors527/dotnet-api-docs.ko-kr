<Type Name="TaskContinuationOptions" FullName="System.Threading.Tasks.TaskContinuationOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e79a5e984f648afb3d07927b4c4d78462d2e7bb8" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58691005" /></Metadata><TypeSignature Language="C#" Value="public enum TaskContinuationOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed TaskContinuationOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.TaskContinuationOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum TaskContinuationOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class TaskContinuationOptions" />
  <TypeSignature Language="F#" Value="type TaskContinuationOptions = " />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" /> 또는 <see cref="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskContinuationOptions)" /> 메서드를 사용하여 만드는 작업의 동작을 지정합니다.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AttachedToParent">
      <MemberSignature Language="C#" Value="AttachedToParent" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions AttachedToParent = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.AttachedToParent" />
      <MemberSignature Language="VB.NET" Value="AttachedToParent" />
      <MemberSignature Language="C++ CLI" Value="AttachedToParent" />
      <MemberSignature Language="F#" Value="AttachedToParent = 4" Usage="System.Threading.Tasks.TaskContinuationOptions.AttachedToParent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>연속 작업이 자식 작업인 경우 작업 계층 구조의 부모에 연결되도록 지정합니다. 연속 작업은 선행 작업도 자식 작업인 경우에만 자식 작업이 됩니다. 기본적으로 자식 작업(즉, 외부 작업이 만든 내부 작업)은 부모와 독립적으로 실행됩니다. <see cref="F:System.Threading.Tasks.TaskContinuationOptions.AttachedToParent" /> 옵션을 사용할 수 있어 부모와 자식 작업은 동기화됩니다.  
  
부모 작업이 <see cref="F:System.Threading.Tasks.TaskCreationOptions.DenyChildAttach" /> 옵션을 사용하여 구성된 경우 자식 작업의 <see cref="F:System.Threading.Tasks.TaskCreationOptions.AttachedToParent" /> 옵션은 영향을 받지 않으며, 자식 작업은 분리된 자식 작업으로 실행됩니다.  
  
자세한 내용은 [연결된 자식 작업과 분리된 자식 작업](~/docs/standard/parallel-programming/attached-and-detached-child-tasks.md)을 참조하세요.</summary>
      </Docs>
    </Member>
    <Member MemberName="DenyChildAttach">
      <MemberSignature Language="C#" Value="DenyChildAttach" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions DenyChildAttach = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.DenyChildAttach" />
      <MemberSignature Language="VB.NET" Value="DenyChildAttach" />
      <MemberSignature Language="C++ CLI" Value="DenyChildAttach" />
      <MemberSignature Language="F#" Value="DenyChildAttach = 8" Usage="System.Threading.Tasks.TaskContinuationOptions.DenyChildAttach" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><see cref="F:System.Threading.Tasks.TaskCreationOptions.AttachedToParent" /> 옵션으로 만들어지고 연결된 자식 작업으로 실행하려는 모든 자식 작업(이 연속 작업으로 만들어진 모든 중첩 내부 작업)은 부모 작업에 연결할 수 없고 대신 분리된 자식 작업으로 실행되도록 지정합니다. 자세한 내용은 [연결된 자식 작업과 분리된 자식 작업](~/docs/standard/parallel-programming/attached-and-detached-child-tasks.md)을 참조하세요.</summary>
      </Docs>
    </Member>
    <Member MemberName="ExecuteSynchronously">
      <MemberSignature Language="C#" Value="ExecuteSynchronously" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions ExecuteSynchronously = int32(524288)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />
      <MemberSignature Language="VB.NET" Value="ExecuteSynchronously" />
      <MemberSignature Language="C++ CLI" Value="ExecuteSynchronously" />
      <MemberSignature Language="F#" Value="ExecuteSynchronously = 524288" Usage="System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>524288</MemberValue>
      <Docs>
        <summary>연속 작업이 동기적으로 실행되도록 지정합니다. 이 옵션을 지정하면 연속 작업이 같은 스레드에서 실행되어 선행 작업이 최종 상태로 전환됩니다. 연속 작업이 만들어질 때 선행 작업이 이미 완료된 경우 연속 작업은 해당 작업을 만드는 스레드에서 실행됩니다. 선행 작업의 <see cref="T:System.Threading.CancellationTokenSource" />가 <see langword="finally" /> 블록 (Visual Basic의 <see langword="Finally" />)에서 삭제된 경우 이 옵션이 지정되면 연속 작업이 해당 <see langword="finally" /> 블록에서 계속 실행됩니다. 매우 단기로 실행되는 연속 작업만 동기적으로 실행됩니다.  
  
작업은 동기적으로 실행되므로, 호출 스레드가 작업이 완료되기를 기다리도록 하기 위해 <see cref="M:System.Threading.Tasks.Task.Wait" />와 같은 메서드를 호출할 필요가 없습니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="HideScheduler">
      <MemberSignature Language="C#" Value="HideScheduler" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions HideScheduler = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.HideScheduler" />
      <MemberSignature Language="VB.NET" Value="HideScheduler" />
      <MemberSignature Language="C++ CLI" Value="HideScheduler" />
      <MemberSignature Language="F#" Value="HideScheduler = 16" Usage="System.Threading.Tasks.TaskContinuationOptions.HideScheduler" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><see cref="M:System.Threading.Tasks.Task.Run(System.Action)" /> 또는 <see cref="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task})" />와 같은 메서드를 호출함으로써 연속 작업에 의해 만들어진 작업이 이 연속 작업이 실행되는 스케줄러가 아닌 기본 스케줄러(<see cref="P:System.Threading.Tasks.TaskScheduler.Default" />)를 현재 스케줄러로 인식하도록 지정합니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="LazyCancellation">
      <MemberSignature Language="C#" Value="LazyCancellation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions LazyCancellation = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.LazyCancellation" />
      <MemberSignature Language="VB.NET" Value="LazyCancellation" />
      <MemberSignature Language="C++ CLI" Value="LazyCancellation" />
      <MemberSignature Language="F#" Value="LazyCancellation = 32" Usage="System.Threading.Tasks.TaskContinuationOptions.LazyCancellation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>연속 취소의 경우 선행이 완료되기 전에 연속이 완료되는 것을 방지합니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="LongRunning">
      <MemberSignature Language="C#" Value="LongRunning" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions LongRunning = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.LongRunning" />
      <MemberSignature Language="VB.NET" Value="LongRunning" />
      <MemberSignature Language="C++ CLI" Value="LongRunning" />
      <MemberSignature Language="F#" Value="LongRunning = 2" Usage="System.Threading.Tasks.TaskContinuationOptions.LongRunning" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>연속 작업이 장기 실행되는 성긴 작업이 되도록 지정합니다. 초과 구독을 보장할 수 있는 <see cref="T:System.Threading.Tasks.TaskScheduler" />에 대한 힌트를 제공합니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Threading.Tasks.TaskContinuationOptions.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>연속 작업 옵션이 지정되지 않은 경우, 연속 작업을 실행할 때 기본 동작을 사용하도록 지정합니다. 선행 작업의 최종 <see cref="P:System.Threading.Tasks.Task.Status" /> 속성 값에 관계없이 선행 작업이 완료되면 연속 작업이 비동기적으로 실행됩니다. 연속 작업이 자식 작업인 경우 해당 작업은 분리된 상태의 중첩된 작업으로 만들어집니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="NotOnCanceled">
      <MemberSignature Language="C#" Value="NotOnCanceled" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions NotOnCanceled = int32(262144)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.NotOnCanceled" />
      <MemberSignature Language="VB.NET" Value="NotOnCanceled" />
      <MemberSignature Language="C++ CLI" Value="NotOnCanceled" />
      <MemberSignature Language="F#" Value="NotOnCanceled = 262144" Usage="System.Threading.Tasks.TaskContinuationOptions.NotOnCanceled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>262144</MemberValue>
      <Docs>
        <summary>선행 작업이 취소된 경우 연속 작업이 예약되지 않도록 지정합니다. 완료 시 선행 작업의 <see cref="P:System.Threading.Tasks.Task.Status" /> 속성이 <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />이면 작업이 취소됩니다. 이 옵션은 다중 작업 연속에 유효하지 않습니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="NotOnFaulted">
      <MemberSignature Language="C#" Value="NotOnFaulted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions NotOnFaulted = int32(131072)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.NotOnFaulted" />
      <MemberSignature Language="VB.NET" Value="NotOnFaulted" />
      <MemberSignature Language="C++ CLI" Value="NotOnFaulted" />
      <MemberSignature Language="F#" Value="NotOnFaulted = 131072" Usage="System.Threading.Tasks.TaskContinuationOptions.NotOnFaulted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>131072</MemberValue>
      <Docs>
        <summary>선행 작업이 처리되지 않은 예외를 throw한 경우 연속 작업이 예약되지 않도록 지정합니다. 완료 시 선행 작업의 <see cref="P:System.Threading.Tasks.Task.Status" /> 속성이 <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />이면 처리되지 않은 예외가 발생합니다. 이 옵션은 다중 작업 연속에 유효하지 않습니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="NotOnRanToCompletion">
      <MemberSignature Language="C#" Value="NotOnRanToCompletion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions NotOnRanToCompletion = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.NotOnRanToCompletion" />
      <MemberSignature Language="VB.NET" Value="NotOnRanToCompletion" />
      <MemberSignature Language="C++ CLI" Value="NotOnRanToCompletion" />
      <MemberSignature Language="F#" Value="NotOnRanToCompletion = 65536" Usage="System.Threading.Tasks.TaskContinuationOptions.NotOnRanToCompletion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary>선행 작업의 실행이 완료된 경우 연속 작업이 예약되지 않도록 지정합니다. 완료 시 선행 작업의 <see cref="P:System.Threading.Tasks.Task.Status" /> 속성이 <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />이면 작업이 끝까지 실행됩니다. 이 옵션은 다중 작업 연속에 유효하지 않습니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="OnlyOnCanceled">
      <MemberSignature Language="C#" Value="OnlyOnCanceled" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions OnlyOnCanceled = int32(196608)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />
      <MemberSignature Language="VB.NET" Value="OnlyOnCanceled" />
      <MemberSignature Language="C++ CLI" Value="OnlyOnCanceled" />
      <MemberSignature Language="F#" Value="OnlyOnCanceled = 196608" Usage="System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>196608</MemberValue>
      <Docs>
        <summary>선행 작업이 취소된 경우에만 연속 작업이 예약되도록 지정합니다.  완료 시 선행 작업의 <see cref="P:System.Threading.Tasks.Task.Status" /> 속성이 <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />이면 작업이 취소됩니다. 이 옵션은 다중 작업 연속에 유효하지 않습니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="OnlyOnFaulted">
      <MemberSignature Language="C#" Value="OnlyOnFaulted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions OnlyOnFaulted = int32(327680)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnFaulted" />
      <MemberSignature Language="VB.NET" Value="OnlyOnFaulted" />
      <MemberSignature Language="C++ CLI" Value="OnlyOnFaulted" />
      <MemberSignature Language="F#" Value="OnlyOnFaulted = 327680" Usage="System.Threading.Tasks.TaskContinuationOptions.OnlyOnFaulted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>327680</MemberValue>
      <Docs>
        <summary>선행 작업이 처리되지 않은 예외를 throw한 경우에만 연속 작업이 예약되도록 지정합니다. 완료 시 선행 작업의 <see cref="P:System.Threading.Tasks.Task.Status" /> 속성이 <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />이면 처리되지 않은 예외가 발생합니다.  
  
<see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnFaulted" /> 옵션은 선행 작업의 <see cref="P:System.Threading.Tasks.Task.Exception" /> 속성이 <see langword="null" />이 아니도록 보장합니다. 이 속성을 사용하여 예외를 catch하고 해당 작업에 오류를 발생시킨 예외를 확인할 수 있습니다. <see cref="P:System.Threading.Tasks.Task.Exception" /> 속성에 액세스하지 않는 경우에는 예외가 처리되지 않습니다. 또한 취소되었거나 오류가 발생한 작업의 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성에 액세스하려고 하면 새 예외가 발생합니다.  
  
이 옵션은 다중 작업 연속에 유효하지 않습니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="OnlyOnRanToCompletion">
      <MemberSignature Language="C#" Value="OnlyOnRanToCompletion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions OnlyOnRanToCompletion = int32(393216)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnRanToCompletion" />
      <MemberSignature Language="VB.NET" Value="OnlyOnRanToCompletion" />
      <MemberSignature Language="C++ CLI" Value="OnlyOnRanToCompletion" />
      <MemberSignature Language="F#" Value="OnlyOnRanToCompletion = 393216" Usage="System.Threading.Tasks.TaskContinuationOptions.OnlyOnRanToCompletion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>393216</MemberValue>
      <Docs>
        <summary>선행 작업의 실행이 완료된 경우에만 연속 작업이 예약되도록 지정합니다. 완료 시 선행 작업의 <see cref="P:System.Threading.Tasks.Task.Status" /> 속성이 <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />이면 작업이 끝까지 실행됩니다. 이 옵션은 다중 작업 연속에 유효하지 않습니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="PreferFairness">
      <MemberSignature Language="C#" Value="PreferFairness" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions PreferFairness = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.PreferFairness" />
      <MemberSignature Language="VB.NET" Value="PreferFairness" />
      <MemberSignature Language="C++ CLI" Value="PreferFairness" />
      <MemberSignature Language="F#" Value="PreferFairness = 1" Usage="System.Threading.Tasks.TaskContinuationOptions.PreferFairness" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>더 일찍 예약된 작업을 먼저 실행하고 나중에 예약된 작업을 나중에 실행할 수 있도록 예약된 순서대로 작업을 예약하도록 <see cref="T:System.Threading.Tasks.TaskScheduler" />에 알려줍니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="RunContinuationsAsynchronously">
      <MemberSignature Language="C#" Value="RunContinuationsAsynchronously" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.Tasks.TaskContinuationOptions RunContinuationsAsynchronously = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Tasks.TaskContinuationOptions.RunContinuationsAsynchronously" />
      <MemberSignature Language="VB.NET" Value="RunContinuationsAsynchronously" />
      <MemberSignature Language="C++ CLI" Value="RunContinuationsAsynchronously" />
      <MemberSignature Language="F#" Value="RunContinuationsAsynchronously = 64" Usage="System.Threading.Tasks.TaskContinuationOptions.RunContinuationsAsynchronously" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary>연속 작업이 비동기 방식으로 실행되도록 지정합니다.  이 옵션은 <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />보다 우선합니다.</summary>
      </Docs>
    </Member>
  </Members>
</Type>