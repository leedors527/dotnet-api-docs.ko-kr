<Type Name="ElapsedEventArgs" FullName="System.Timers.ElapsedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="07c21a232ef7b45a3e8b0e5eb9de653e39248260" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58721426" /></Metadata><TypeSignature Language="C#" Value="public class ElapsedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ElapsedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Timers.ElapsedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ElapsedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ElapsedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ElapsedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="E:System.Timers.Timer.Elapsed" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 <xref:System.Timers.Timer> 발생 하는 개체는 <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> 2 초 (2000 밀리초) 마다 이벤트를 이벤트에 대 한 이벤트 처리기를 설정 하 고 타이머를 시작 합니다. 값을 표시 하는 이벤트 처리기는 <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> 될 때마다 발생 하는 속성입니다.  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SignalTime">
      <MemberSignature Language="C#" Value="public DateTime SignalTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime SignalTime" />
      <MemberSignature Language="DocId" Value="P:System.Timers.ElapsedEventArgs.SignalTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignalTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime SignalTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.SignalTime : DateTime" Usage="System.Timers.ElapsedEventArgs.SignalTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="E:System.Timers.Timer.Elapsed" /> 이벤트가 발생한 날짜/시간을 가져옵니다.</summary>
        <value><see cref="E:System.Timers.Timer.Elapsed" /> 이벤트가 발생한 시간입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> 에서 이벤트가 발생을 <xref:System.Threading.ThreadPool> 스레드, 이벤트 처리 메서드 스레드와 동시에 실행할 수 있도록 하는 시간에 대 한 호출을 <xref:System.Timers.Timer.Stop%2A?displayProperty=nameWithType> 메서드를 다른 스레드에서 실행 합니다. 이 발생할 수 있습니다 합니다 <xref:System.Timers.Timer.Elapsed> 후 발생 한 이벤트를 <xref:System.Timers.Timer.Stop%2A> 메서드가 호출 됩니다. 비교 하 여이 경합 상태를 방지할 수 없습니다는 <xref:System.Timers.ElapsedEventArgs.SignalTime%2A> 시간을 사용 하 여 속성 때 합니다 <xref:System.Timers.Timer.Stop%2A> 이벤트 처리 메서드에서 이미 실행 중일 수 있습니다 시기 때문에 메서드가 호출 되는 <xref:System.Timers.Timer.Stop%2A> 메서드를 호출 하거나 시작할 수 있습니다 순간 사이 실행 하면는 <xref:System.Timers.Timer.Stop%2A> 메서드는 및 중지 시간 저장 될 때 현재 합니다. 호출 하는 스레드를 방지 하기 위해 중요 한 경우는 <xref:System.Timers.Timer.Stop%2A> 이벤트 처리 메서드에서 여전히 실행 되는 동안 진행 되 고 메서드에서 같은 보다 강력한 동기화 메커니즘을 사용 합니다 <xref:System.Threading.Monitor> 클래스 또는 <xref:System.Threading.Interlocked.CompareExchange%2A> 메서드. 사용 하는 코드를 <xref:System.Threading.Interlocked.CompareExchange%2A> 예제에서 메서드를 찾을 수는 <xref:System.Timers.Timer.Stop%2A?displayProperty=nameWithType> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Timers.Timer> 발생 하는 개체는 <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> 2 초 (2000 밀리초) 마다 이벤트를 이벤트에 대 한 이벤트 처리기를 설정 하 고 타이머를 시작 합니다. 값을 표시 하는 이벤트 처리기는 <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> 될 때마다 발생 하는 속성입니다.  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Timers.Timer.Stop" />
      </Docs>
    </Member>
  </Members>
</Type>