<Type Name="Enlistment" FullName="System.Transactions.Enlistment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="32c64ee80ba99d8fb92b039f24f0e48488d5678a" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58743856" /></Metadata><TypeSignature Language="C#" Value="public class Enlistment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Enlistment extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.Enlistment" />
  <TypeSignature Language="VB.NET" Value="Public Class Enlistment" />
  <TypeSignature Language="C++ CLI" Value="public ref class Enlistment" />
  <TypeSignature Language="F#" Value="type Enlistment = class" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>트랜잭션의 마지막 단계에서 참여한 트랜잭션 참가 요소와 트랜잭션 관리자 간의 통신을 용이하게 합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Transactions.Transaction.EnlistVolatile%2A> 및 <xref:System.Transactions.Transaction.EnlistDurable%2A> 의 메서드는 <xref:System.Transactions.Transaction> 개체 트랜잭션에서 참가자를 등록 하기 위해 호출 되는 인 리스트 먼 트를 설명 하는이 개체를 반환 합니다.  
  
 트랜잭션 커밋의 최종 단계에서 트랜잭션 관리자를 구현 하는 리소스 관리자에 게이 개체를 전달 합니다 <xref:System.Transactions.IEnlistmentNotification> 가 트랜잭션에 참여 하는 인터페이스입니다. 트랜잭션 관리자 중 하나를 호출 특히 합니다 <xref:System.Transactions.IEnlistmentNotification.Commit%2A> 또는 <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> 여부 후자 하기로 결정 했습니다 트랜잭션을 롤백 또는 커밋에 따라 참가자의 메서드. 참가자를 호출 해야 합니다 <xref:System.Transactions.Enlistment.Done%2A> 트랜잭션 관리자 작업 완료 되었음을 알 수 있도록이 개체의 메서드.  
  
 인 리스트 먼 트를 호출할 수는 <xref:System.Transactions.Enlistment.Done%2A> 전에 언제 든 지 메서드 호출한 <xref:System.Transactions.PreparingEnlistment.Prepared%2A> 준비 단계에서 합니다.  이 작업을 수행 하면 참여 캐스팅할 즉이 트랜잭션에서 커밋 응답 있지만 최종 결과 수신 하지 않아도 읽기만 투표 합니다. 이때 후는 <xref:System.Transactions.Enlistment.Done%2A> 메서드가 호출 되 면 등록 된 참가자가 트랜잭션 관리자 로부터 더 이상 알림을 수신 합니다.  
  
   
  
## Examples  
 다음 예제에서는 구현을 보여 줍니다.는 <xref:System.Transactions.IEnlistmentNotification> 인터페이스 및 시기를 <xref:System.Transactions.Enlistment.Done%2A> 메서드를 호출 해야 합니다.  
  
 [!code-csharp[Tx_Enlist#2](~/samples/snippets/csharp/VS_Snippets_CFX/tx_enlist/cs/enlist.cs#2)]
 [!code-vb[Tx_Enlist#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_enlist/vb/enlist.vb#2)]  
  
 ]]></format>
    </remarks>
    <threadsafe>이 형식은 스레드로부터 안전합니다.</threadsafe>
    <altmember cref="T:System.Transactions.PreparingEnlistment" />
    <altmember cref="T:System.Transactions.IEnlistmentNotification" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ee818750(v=vs.100)">리소스를 트랜잭션에 참가 요소로 등록</related>
  </Docs>
  <Members>
    <Member MemberName="Done">
      <MemberSignature Language="C#" Value="public void Done ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Done() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.Enlistment.Done" />
      <MemberSignature Language="VB.NET" Value="Public Sub Done ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Done();" />
      <MemberSignature Language="F#" Value="member this.Done : unit -&gt; unit" Usage="enlistment.Done " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>트랜잭션 참가 요소가 작업을 완료했음을 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 트랜잭션 커밋의 최종 단계에서 트랜잭션 관리자를 호출 합니다 <xref:System.Transactions.IEnlistmentNotification.Commit%2A>, <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> 또는 <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> 트랜잭션이 커밋 또는 롤백 인지에 따라 참가자의 메서드. 리소스 관리자 트랜잭션을 마치고 다음 트랜잭션 관리자가 호출 하 여 완료 했음을 알리는 데 필요한 작업을 수행 해야 합니다 <xref:System.Transactions.Enlistment.Done%2A> 메서드는 `enlistment` 매개 변수.  
  
 리소스 관리자가 영속적으로 참여 하지만 호출 하 여 응답 하지 않으면 경우 <xref:System.Transactions.Enlistment.Done%2A> 메서드를 트랜잭션 관리자가 리소스 관리자가 해당 알림 호출을 받았는지 해야 합니다. 이와 같이 트랜잭션 관리자는 계속 응답을 기다리고 및이 트랜잭션에 관련 된 정보를 유지 관리 합니다.  경우 <xref:System.Transactions.Enlistment.Done%2A> 가 호출 되지이 조각의 내용은 무기한 보관 됩니다 메모리 나 시스템 리소스에 포함에서 합니다. 그러면 리소스를 회수할 수 없게 됩니다. 분산 트랜잭션에서 MSDTC 프로세스를 중단 하는 MSDTC 로그를 가득 수이 있습니다. 관리 하는 트랜잭션의 경우 <xref:System.Transactions>,이 인해 점진적이 고 지속적인 리소스 관리자의 프로세스의 메모리 사용량 증가 합니다. 호출 하는 중요 한 것 이므로 <xref:System.Transactions.Enlistment.Done%2A> 메서드를 사용 하 여 리소스 관리자에 게 작업이 완료 되 면 사용자 작업을 준비 합니다.  
  
 인 리스트 먼 트를 호출할 수는 <xref:System.Transactions.Enlistment.Done%2A> 전에 언제 든 지 메서드 호출한 <xref:System.Transactions.PreparingEnlistment.Prepared%2A> 준비 단계에서 합니다. 이 작업을 수행 하면 참여 캐스팅할 즉이 트랜잭션에서 커밋 응답 있지만 최종 결과 수신 하지 않아도 읽기만 투표 합니다. 이 메서드가 호출 되 면 등록 된 참가자가 알림을 받지 않습니다 추가 트랜잭션 관리자 로부터 note 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Transactions.PreparingEnlistment" />
        <altmember cref="T:System.Transactions.IEnlistmentNotification" />
        <related type="Article" href="https://msdn.microsoft.com/en-us/library/7bf66ce7-4190-4910-89d7-df4ad43e9f31">리소스를 트랜잭션에 참가 요소로 등록</related>
      </Docs>
    </Member>
  </Members>
</Type>