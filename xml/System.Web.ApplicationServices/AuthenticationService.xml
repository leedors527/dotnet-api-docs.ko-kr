<Type Name="AuthenticationService" FullName="System.Web.ApplicationServices.AuthenticationService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5663fcd9f6905a98a12065500c384249086e68b9" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55319099" /></Metadata><TypeSignature Language="C#" Value="public class AuthenticationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthenticationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.ApplicationServices.AuthenticationService" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthenticationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthenticationService" />
  <TypeSignature Language="F#" Value="type AuthenticationService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>웹 서비스로 ASP.NET 폼 인증에 액세스할 수 있게 해 줍니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.AuthenticationService> 개체를 사용 하면 Windows Communication Foundation (WCF) 서비스를 통해 사용자를 인증할 수 있습니다. 사용자 자격 증명을 저장 하는 웹 애플리케이션 외부에 있는 애플리케이션에서 ASP.NET 멤버 자격을 통해 사용자를 인증 해야 하는 경우에 WCF 인증 서비스를 사용 합니다. 애플리케이션을 보내고 메시지를 SOAP 형식으로 사용할 수 있어야 합니다. 통해 여 <xref:System.Web.ApplicationServices.AuthenticationService> 클래스에 사용자를 기록할 수 있습니다, 사용자 로그 아웃, 자격 증명의 유효성을 검사, authentication 상태 확인, 인증, 사용자 지정 및 인증 쿠키를 설정 합니다.  
  
 합니다 <xref:System.Web.ApplicationServices.AuthenticationService> 클래스에는 WCF 서비스를 통해서만 액세스 해야 하는 네 가지 메서드가 포함 되어 있습니다.: 합니다 <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A>, 및 <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> 메서드. 이러한 메서드를 호출 하려면 웹 서버에서 인증 서비스를 사용 하도록 설정 및 다음 웹 서비스-호환 되는 WCF 클라이언트 애플리케이션에 연결 합니다. 인증 서비스를 구성 하는 방법에 대 한 정보를 참조 하세요 [방법: WCF 인증 서비스를 사용 하도록 설정](https://msdn.microsoft.com/library/f7913259-762e-4a73-a771-ac9e42903f44)합니다.  
  
 사용자에 로그온 하려면 사용자 자격 증명을 전달 합니다 <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> 메서드. 자격 증명이 잘못 된 <xref:System.Web.ApplicationServices.AuthenticationService> 클래스에는 인증 쿠키를 만듭니다. 인증 쿠키가 만료 되지 않은 경우 인증 된 사용자의 자격 증명을 자격 증명을 다시 검사할 필요가 없습니다 알 수 있습니다. (쿠키 없는 인증을 통해 제공 되지 않습니다는 <xref:System.Web.ApplicationServices.AuthenticationService> 클래스입니다.)  
  
 합니다 <xref:System.Web.ApplicationServices.AuthenticationService> 두 개의 이벤트를 발생 시킬 수 있습니다: <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> 및 <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>합니다. <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> 이벤트는 사용자 자격 증명의 유효성을 검사할 때 발생 합니다. 에 대 한 이벤트 처리기 만들기는 <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> 사용자 자격 증명의 유효성을 검사 하는 방법을 사용자 지정 하는 이벤트입니다. <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> 이벤트는 사용자 자격 증명이 확인 되 면 인증 쿠키가 설정 될 때 발생 합니다. 에 대 한 이벤트 처리기 만들기는 <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> 인증 쿠키를 사용자 지정 하는 이벤트입니다.  
  
 <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> 메서드 인증용 사용자 자격 증명을 확인 하지만 인증 티켓을 반환 하지 않습니다. 사용 하 여 <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> 경우 사용자가 이전에 로그인 하 고 새 애플리케이션 세션의 시작 부분에 자격 증명을 아직 유효한 지 확인 해야 합니다.  
  
 콘솔 애플리케이션에서 WCF 인증 서비스를 사용 하 여 예제를 보려면 [연습: ASP.NET 애플리케이션 서비스를 사용 하 여](https://msdn.microsoft.com/library/f3f394f0-20d6-4361-aa8f-4b21bf4933eb)입니다.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Windows Communication Foundation 인증 서비스 개요</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthenticationService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthenticationService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.ApplicationServices.AuthenticationService" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticating">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; Authenticating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.ApplicationServices.AuthenticatingEventArgs&gt; Authenticating" />
      <MemberSignature Language="DocId" Value="E:System.Web.ApplicationServices.AuthenticationService.Authenticating" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event Authenticating As EventHandler(Of AuthenticatingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Web::ApplicationServices::AuthenticatingEventArgs ^&gt; ^ Authenticating;" />
      <MemberSignature Language="F#" Value="member this.Authenticating : EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; " Usage="member this.Authenticating : System.EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 자격 증명의 유효성을 검사할 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> 사용자 자격 증명의 유효성을 검사할 때 이벤트가 발생 합니다. 에 대 한 이벤트 처리기 만들기는 <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> 사용자 자격 증명의 유효성을 검사 하는 방법을 사용자 지정 하는 이벤트입니다.  
  
   
  
## Examples  
 다음 예제에 대 한 이벤트 처리기를 바인딩하는 방법을 보여 줍니다 합니다 <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> 이벤트에는 `Application_Start` Global.asax 파일의 메서드.  
  
 [!code-csharp[System.Web.Security.LoginService_MultipleCredentials#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/cs/Global.asax#1)]
 [!code-vb[System.Web.Security.LoginService_MultipleCredentials#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/vb/Global.asax#1)]  
  
 다음 예제에서는 이벤트 처리기는 <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Global.asax 파일에는 이벤트입니다. 이벤트 처리기에서 두 가지 인증 값을 읽고 합니다 <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A> 속성 및 명명 된 사용자 이름 및 암호를 사용자 지정 인증 클래스와 함께 해당 전달 `StudentAuthentication`합니다.  
  
 [!code-csharp[System.Web.Security.LoginService_MultipleCredentials#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/cs/Global.asax#2)]
 [!code-vb[System.Web.Security.LoginService_MultipleCredentials#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/vb/Global.asax#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ApplicationServices.AuthenticatingEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Windows Communication Foundation 인증 서비스 개요</related>
      </Docs>
    </Member>
    <Member MemberName="CreatingCookie">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; CreatingCookie;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.ApplicationServices.CreatingCookieEventArgs&gt; CreatingCookie" />
      <MemberSignature Language="DocId" Value="E:System.Web.ApplicationServices.AuthenticationService.CreatingCookie" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event CreatingCookie As EventHandler(Of CreatingCookieEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Web::ApplicationServices::CreatingCookieEventArgs ^&gt; ^ CreatingCookie;" />
      <MemberSignature Language="F#" Value="member this.CreatingCookie : EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; " Usage="member this.CreatingCookie : System.EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>인증 쿠키가 설정될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> 사용자 자격 증명이 확인 되 면 인증 쿠키가 설정 될 때 이벤트가 발생 합니다. 에 대 한 이벤트 처리기 만들기는 <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> 인증 쿠키를 사용자 지정 하는 이벤트입니다.  
  
   
  
## Examples  
 다음 예제에서는 이벤트 처리기를 바인딩하는 방법을 보여 줍니다 합니다 <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> 이벤트에는 `Application_Start` Global.asax 파일의 메서드.  
  
 [!code-csharp[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/cs/Global.asax#1)]
 [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/vb/Global.asax#1)]  
  
 다음 예제에서는 이벤트 처리기는 <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> Global.asax 파일에는 이벤트입니다. 이벤트 처리기에서 값을 추가 하 여 인증 쿠키를 사용자 지정 된 <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> 속성을는 <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> 속성입니다. 저장소는 <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> 속성의 데이터가 중요 하지 않다는 것이 알고 있는 경우에 쿠키의 속성입니다. 악의적인 사용자는 쿠키의 값을 액세스할 수 있습니다.  
  
 [!code-csharp[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/cs/Global.asax#2)]
 [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/vb/Global.asax#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ApplicationServices.CreatingCookieEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Windows Communication Foundation 인증 서비스 개요</related>
      </Docs>
    </Member>
    <Member MemberName="IsLoggedIn">
      <MemberSignature Language="C#" Value="public bool IsLoggedIn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsLoggedIn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn" />
      <MemberSignature Language="VB.NET" Value="Public Function IsLoggedIn () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsLoggedIn();" />
      <MemberSignature Language="F#" Value="member this.IsLoggedIn : unit -&gt; bool" Usage="authenticationService.IsLoggedIn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 사용자가 인증되었는지 여부를 확인합니다.</summary>
        <returns>사용자가 인증되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> 메서드를 확인 하 여 현재 사용자가 인증 되었는지 여부를 확인 하는 <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A>.property 합니다.  
  
> [!NOTE]
>  호출 하지 마십시오는 <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> 메서드에서 웹 서버에서 실행 되는 코드입니다. 호출 된 <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> WCF 서비스의 일부로 합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Windows Communication Foundation 인증 서비스 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Login">
      <MemberSignature Language="C#" Value="public bool Login (string username, string password, string customCredential, bool isPersistent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Login(string username, string password, string customCredential, bool isPersistent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Login (username As String, password As String, customCredential As String, isPersistent As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Login(System::String ^ username, System::String ^ password, System::String ^ customCredential, bool isPersistent);" />
      <MemberSignature Language="F#" Value="member this.Login : string * string * string * bool -&gt; bool" Usage="authenticationService.Login (username, password, customCredential, isPersistent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="customCredential" Type="System.String" />
        <Parameter Name="isPersistent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">유효성을 검사할 사용자 이름입니다.</param>
        <param name="password">지정된 사용자의 암호입니다.</param>
        <param name="customCredential"><paramref name="username" /> 및 <paramref name="password" /> 외에 유효성을 검사할 값입니다(있을 경우).</param>
        <param name="isPersistent">세션 간에 인증 티켓이 유효하게 남아 있는지 여부를 나타내는 값입니다.</param>
        <summary>사용자 자격 증명을 검사하고 자격 증명이 유효한 경우 인증 티켓(쿠키)을 만듭니다.</summary>
        <returns>사용자 자격 증명이 유효하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> 메서드 멤버 자격 공급자를 통해 사용자 자격 증명의 유효성을 검사 합니다. 기본 멤버 자격 공급자를 사용 하거나 런타임에 사용자 지정 멤버 자격 공급자를 지정할 수 있습니다. 합니다 <xref:System.Web.ApplicationServices.AuthenticationService> 전달 클래스 `userName` 및 `password` 멤버 자격 공급자로 <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> 메서드를 전달 하지 않습니다 `customCredential`합니다. 하는 경우 <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> 반환 `true`, <xref:System.Web.ApplicationServices.AuthenticationService> 쿠키로 인증 티켓을 만듭니다. 설정 합니다 `isPersistent` 매개 변수를 `true` 현재 세션이 지속 되는 인증 티켓을 만들려고 합니다.  
  
> [!NOTE]
>  항상 secure sockets layer (SSL HTTPS를 사용 하 여)와 함께 인증 서비스를 사용 하 여 중요 한 데이터를 보호 합니다.  
  
 합니다 <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> 메서드를 발생 시킵니다 합니다 <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> 이벤트 및 <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> 이벤트입니다. 이벤트 처리기를 만듭니다 <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> 의 값을 검사 하는 등의 인증에 맞게 `customCredential` 또는 기본이 아닌 멤버 자격 공급자를 통해 자격 증명 유효성 검사 합니다. 값 `customCredential` 기본 멤버 자격 공급자에 의해 유효성이 검사 되지 않습니다. 인증 쿠키를 사용자 지정 하려면 이벤트 처리기를 만들 <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>합니다.  
  
> [!NOTE]
>  호출 하지 마십시오는 <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> 메서드에서 웹 서버에서 실행 되는 코드입니다. 호출 된 <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> WCF 서비스의 일부로 합니다. 자세한 내용은 [ASP.NET 인증](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100))합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="userName" /> 또는 <paramref name="password" />가 <see langword="null" />인 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Windows Communication Foundation 인증 서비스 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Logout">
      <MemberSignature Language="C#" Value="public void Logout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Logout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.Logout" />
      <MemberSignature Language="VB.NET" Value="Public Sub Logout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Logout();" />
      <MemberSignature Language="F#" Value="member this.Logout : unit -&gt; unit" Usage="authenticationService.Logout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>브라우저에서 인증 티켓(쿠키)을 지웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> 메서드 브라우저의 쿠키 컬렉션에서 인증 쿠키를 지웁니다. 사용자는 인증할 다시에 로그인 해야 합니다.  
  
 <xref:System.Web.ApplicationServices.AuthenticationService> 클래스는 인증에 대 한 티켓 지워진 서버의 정보를 저장 하지 않습니다.  
  
> [!NOTE]
>  호출 하지 마십시오는 <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> 메서드에서 웹 서버에서 실행 되는 코드입니다. 호출 된 <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> WCF 서비스의 일부로 합니다. 자세한 내용은 [ASP.NET 인증](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100))합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Security.FormsAuthentication.SignOut" />
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Windows Communication Foundation 인증 서비스 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public bool ValidateUser (string username, string password, string customCredential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateUser(string username, string password, string customCredential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateUser (username As String, password As String, customCredential As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateUser(System::String ^ username, System::String ^ password, System::String ^ customCredential);" />
      <MemberSignature Language="F#" Value="member this.ValidateUser : string * string * string -&gt; bool" Usage="authenticationService.ValidateUser (username, password, customCredential)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="customCredential" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">유효성을 검사할 사용자 이름입니다.</param>
        <param name="password">지정된 사용자의 암호입니다.</param>
        <param name="customCredential"><paramref name="username" /> 및 <paramref name="password" /> 외에 유효성을 검사할 값입니다(있을 경우).</param>
        <summary>인증 티켓을 발급하지 않고 사용자 자격 증명을 인증합니다.</summary>
        <returns>사용자 자격 증명이 유효하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> 메서드는 사용자 자격 증명을 인증 하지만 인증 쿠키를 설정 하지 않습니다. 인증 쿠키가 없는 사용자는 로깅되지 않습니다 자격 증명이 유효 하는 경우에 합니다.  
  
 사용 된 <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> 메서드는 인증 쿠키를 받지 않고 사용자의 자격 증명이 유효한 지 여부를 확인 해야 합니다. 예를 들어 인증 쿠키를 클라이언트 애플리케이션에 이미 저장 되어 있지만 새 세션을 시작 하면 사용자의 자격 증명이 여전히 유효한 지 확인 하려는 경우이 수행할 수 있습니다.  
  
 <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> 메서드를 발생 시킵니다 합니다 <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> 이벤트를 발생 하지 않습니다 하지만 <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> 이벤트입니다.  
  
> [!NOTE]
>  호출 하지 마십시오는 <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> 메서드에서 웹 서버에서 실행 되는 코드입니다. 호출 된 <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> WCF 서비스의 일부로 합니다. 자세한 내용은 [ASP.NET 인증](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100))합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="userName" /> 또는 <paramref name="password" />가 <see langword="null" />인 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Windows Communication Foundation 인증 서비스 개요</related>
      </Docs>
    </Member>
  </Members>
</Type>