<Type Name="CacheDependency" FullName="System.Web.Caching.CacheDependency">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9974303165fcb48008a7ca6cb76926c385f74985" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57911176" /></Metadata><TypeSignature Language="C#" Value="public class CacheDependency : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi CacheDependency extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.CacheDependency" />
  <TypeSignature Language="VB.NET" Value="Public Class CacheDependency&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CacheDependency : IDisposable" />
  <TypeSignature Language="F#" Value="type CacheDependency = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>ASP.NET 애플리케이션의 <see cref="T:System.Web.Caching.Cache" /> 개체 및 파일, 캐시 키, 이 개체 또는 다른 <see cref="T:System.Web.Caching.CacheDependency" /> 개체의 배열에 저장된 항목 간 종속 관계를 설정합니다. <see cref="T:System.Web.Caching.CacheDependency" /> 클래스는 종속 관계를 모니터링하며 관게가 변경되면 캐시된 항목이 자동으로 제거됩니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파일 또는 파일의 배열 같은 다른 개체에 종속 된 캐시에 항목을 추가 하는 경우 종속 항목이 개체 변경 될 때 자동으로 캐시에서 제거 됩니다. 예를 들어 만든를 <xref:System.Data.DataSet> 개체 데이터를에서 기반으로 XML 파일입니다. 추가할 수 있습니다 합니다 <xref:System.Data.DataSet> 캐시에는 <xref:System.Web.Caching.CacheDependency> 하는 개체는 <xref:System.Data.DataSet> XML 파일에 따라 달라 집니다. XML 파일이 변경 되 면는 <xref:System.Data.DataSet> 캐시에서 제거 됩니다.  
  
 사용 하 여 응용 프로그램의 캐시에 종속성이 있는 항목을 추가할 수 있습니다 합니다 <xref:System.Web.Caching.Cache.Add%2A> 고 <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> 메서드. 사용할 수 없습니다는 <xref:System.Web.Caching.Cache.Item%2A> 속성 종속성을 사용 하 여 캐시에 항목을 추가 합니다.  
  
 만든 인스턴스의 종속성을 설정 하려면 합니다 <xref:System.Web.Caching.CacheDependency> 클래스 파일, 키 또는 항목에 따라, 디렉터리를 지정 하 고 종속성을 전달 합니다 <xref:System.Web.Caching.Cache.Add%2A> 또는 <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> 메서드. 합니다 <xref:System.Web.Caching.CacheDependency> 인스턴스는 단일 파일 또는 디렉터리, 파일 또는 디렉터리의 배열 또는 파일 또는 캐시 키 배열 함께 디렉터리의 배열을 나타낼 수 있습니다 (에 저장 된 다른 항목을 나타내는 이러한는 <xref:System.Web.Caching.Cache> 개체).  
  
   
  
## Examples  
 다음 코드 예제를 사용 하 여 보여 줍니다.는 <xref:System.Web.Caching.CacheDependency.HasChanged%2A> 속성을 여부를 <xref:System.Web.Caching.CacheDependency> 항목에 대해 이전 요청 이후로 변경는 <xref:System.Web.Caching.Cache>합니다. 합니다 `dt` 에 전달 된 값을 `start` 매개 변수는 설정 <xref:System.DateTime.Now%2A?displayProperty=nameWithType>합니다.  
  
 [!code-csharp[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/CS/t.cs.aspx#1)]
 [!code-vb[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/VB/t.vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Caching.Cache" />
    <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
    <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">응용 프로그램 데이터 캐싱</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.Caching.CacheDependency" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">응용 프로그램 데이터 캐싱</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CacheDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CacheDependency();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Caching.CacheDependency" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 고유한 클래스를 파생 하려는 경우 <xref:System.Web.Caching.CacheDependency>,이 버전을 구현 합니다 <xref:System.Web.Caching.CacheDependency.%23ctor%2A> 생성자입니다.  
  
   
  
## Examples  
 다음 코드 예제는이 버전을 구현 하는 클래스를 <xref:System.Web.Caching.CacheDependency> 생성자에서 파생 된 모든 클래스로 <xref:System.Web.Caching.CacheDependency> 해야 합니다.  
  
 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">응용 프로그램 데이터 캐싱</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency filename" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">캐시된 개체가 종속된 파일 또는 디렉터리에 대한 경로입니다. 이 리소스가 변경되면 캐시된 해당 개체는 사용할 수 없게 되며 캐시에서 제거됩니다.</param>
        <summary>파일 또는 디렉터리의 변경 내용을 모니터링하는 <see cref="T:System.Web.Caching.CacheDependency" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 디렉터리 또는 파일에 지정 된 경우는 `filename` 매개 변수가 없는 파일 시스템에서 누락 된 것으로 간주 됩니다. 디렉터리 또는 파일이 없는 경우 경우 종속성을 사용 하 여 개체에 추가 됩니다는 <xref:System.Web.Caching.Cache>, 캐시 된 개체에서 제거할는 <xref:System.Web.Caching.Cache> 파일이 나 디렉터리를 만들 때.  
  
 예를 들어 개체를 추가 하는 것으로 가정 합니다 <xref:System.Web.Caching.Cache> 다음 파일 경로에 대 한 종속성: c:\stocks\xyz.dat 합니다. 해당 파일이 없는 경우 하는 경우는 <xref:System.Web.Caching.CacheDependency> xyz.dat 파일의 생성 될 때 캐시 된 개체가 제거, 개체 작성 되지만 나중에 생성 됩니다.  
  
   
  
## Examples  
 인스턴스를 만들고 다음 코드 예제는 <xref:System.Web.Caching.CacheDependency> XML 파일에 대 한 종속성을 사용 하 여 클래스입니다. 합니다 <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> 메서드는 다음 항목을 추가 합니다 <xref:System.Web.Caching.Cache> 해당 파일에 종속 되는 합니다.  
  
 [!code-csharp[Classic CacheDependency.CacheDependency Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CacheDependency.CacheDependency Example/CS/source.cs#1)]
 [!code-vb[Classic CacheDependency.CacheDependency Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CacheDependency.CacheDependency Example/VB/source.vb#1)]  
  
 항목을 추가 하려면 다음 기술을 사용할 수도 있습니다는 <xref:System.Web.Caching.Cache> 파일에 대 한 종속성입니다.  
  
 [!code-csharp[Single File Dependency Cache entry#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Single File Dependency Cache entry/CS/DependencySingleFilecs.aspx#1)]
 [!code-vb[Single File Dependency Cache entry#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Single File Dependency Cache entry/VB/DependencySingleFilevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">응용 프로그램 데이터 캐싱</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency filenames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="filenames">캐시된 개체가 종속되어 있는 파일 또는 디렉터리 경로로 이루어진 배열입니다. 이러한 리소스가 변경되면 캐시된 해당 개체는 사용할 수 없게 되며 캐시에서 제거됩니다.</param>
        <summary>파일 또는 디렉터리에 대한 경로 배열의 변경 내용을 모니터링하는 <see cref="T:System.Web.Caching.CacheDependency" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파일 또는 디렉터리 배열의 변경 되거나 제거 된 배열에서 캐시 된 항목 없게 고 응용 프로그램에서 제거 됩니다 <xref:System.Web.Caching.Cache> 개체입니다.  
  
 또한 디렉터리 또는 파일에 지정 된 경우는 `filenames` 매개 변수가 없는 파일 시스템에서 누락 된 것으로 처리 됩니다. 디렉터리나 파일이 없는 경우 종속성을 사용 하 여 개체에 추가 됩니다는 <xref:System.Web.Caching.Cache>, 캐시 된 개체에서 제거할는 <xref:System.Web.Caching.Cache> 해당 디렉터리 또는 파일 만들어질 때.  
  
 예를 들어 개체를 추가 하는 것으로 가정 합니다 <xref:System.Web.Caching.Cache> 다음 파일 경로에 대 한 종속성: c:\stocks\xyz.dat 합니다. 해당 파일이 없는 경우 하는 경우는 <xref:System.Web.Caching.CacheDependency> xyz.dat 파일의 생성 될 때 캐시 된 개체가 제거, 개체 작성 되지만 나중에 생성 됩니다.  
  
> [!NOTE]
>  파일 종속성을 포함 하는 배열을 만들 때 파일 수가 정의 해야 항목을 추가 하는 <xref:System.Web.Caching.Cache> 에 따라 달라 집니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> 항목을 추가 하는 방법의 <xref:System.Web.Caching.Cache> 파일의 배열에 대 한 종속성을 사용 하 여. 디렉터리의 배열을 종속 항목을도 만들 수 있습니다.  
  
 [!code-csharp[Multiple file based dependency#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Multiple file based dependency/CS/DependencyMultiFilecs.aspx#1)]
 [!code-vb[Multiple file based dependency#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Multiple file based dependency/VB/DependencyMultiFilevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">응용 프로그램 데이터 캐싱</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string filename, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(System::String ^ filename, DateTime start);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filename, start)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filename">캐시된 개체가 종속된 파일 또는 디렉터리에 대한 경로입니다. 이 리소스가 변경되면 캐시된 해당 개체는 사용할 수 없게 되며 캐시에서 제거됩니다.</param>
        <param name="start">디렉터리나 파일을 마지막으로 수정한 날짜를 확인할 시간입니다.</param>
        <summary>파일 또는 디렉터리의 변경 내용을 모니터링하는 <see cref="T:System.Web.Caching.CacheDependency" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 디렉터리 또는 파일에 지정 된 경우는 `filename` 매개 변수가 없는 파일 시스템에서 누락 된 것으로 간주 됩니다. 디렉터리 또는 파일이 없는 경우 경우 종속성을 사용 하 여 개체에 추가 됩니다는 <xref:System.Web.Caching.Cache>, 캐시 된 개체에서 제거할는 <xref:System.Web.Caching.Cache> 파일이 나 디렉터리를 만들 때.  
  
 예를 들어 개체를 추가 하는 것으로 가정 합니다 <xref:System.Web.Caching.Cache> 다음 파일 경로에 대 한 종속성: c:\stocks\xyz.dat 합니다. 해당 파일이 없는 경우 하는 경우는 <xref:System.Web.Caching.CacheDependency> xyz.dat 파일의 생성 될 때 캐시 된 개체가 제거, 개체 작성 되지만 나중에 생성 됩니다.  
  
> [!NOTE]
>  변경 내용 추적 즉시 시작 되 고 직접 기반으로 하지는 `start` 매개 변수입니다. 사용 합니다 `start` 날짜 및 마지막 수정 날짜 디렉터리의 또는 전달 된 파일을 검사할 때 기준이 되는 과거 시간에 전달할 매개 변수는 `filename` 매개 변수입니다. 마지막으로 수정한 날짜가 날짜 보다 이후 고 시간 설정에 전달 합니다 `start` 매개 변수, 캐시 된 항목에서 제거 됩니다는 <xref:System.Web.Caching.Cache>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 생성자를 사용 하 여 인스턴스화하는 <xref:System.Web.Caching.CacheDependency> 개체를 만든 다음에 항목을 삽입 합니다 <xref:System.Web.Caching.Cache> 해당 종속성을 사용 하 여 합니다. 합니다 `dt` 에 전달 된 값을 `start` 매개 변수는 설정 <xref:System.DateTime.Now%2A?displayProperty=nameWithType>합니다.  
  
 [!code-csharp[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/CS/t.cs.aspx#1)]
 [!code-vb[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/VB/t.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">응용 프로그램 데이터 캐싱</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, DateTime start);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, start)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filenames">캐시된 개체가 종속되어 있는 파일 또는 디렉터리 경로로 이루어진 배열입니다. 이러한 리소스가 변경되면 캐시된 해당 개체는 사용할 수 없게 되며 캐시에서 제거됩니다.</param>
        <param name="start">배열에 있는 개체를 마지막으로 수정한 날짜를 확인할 시간입니다.</param>
        <summary>파일 또는 디렉터리에 대한 경로 배열 변경을 모니터링하고 변경 모니터링이 시작되는 시간을 지정하는 <see cref="T:System.Web.Caching.CacheDependency" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 디렉터리 또는 파일에 지정 된 경우는 `filenames` 매개 변수가 없는 파일 시스템에서 누락 된 것으로 처리 됩니다. 디렉터리나 파일이 없는 경우 종속성을 사용 하 여 개체에 추가 됩니다는 <xref:System.Web.Caching.Cache>, 캐시 된 개체에서 제거할는 <xref:System.Web.Caching.Cache> 해당 디렉터리 또는 파일 만들어질 때.  
  
 예를 들어 개체를 추가 하는 것으로 가정 합니다 <xref:System.Web.Caching.Cache> 다음 파일 경로에 대 한 종속성: c:\stocks\xyz.dat 합니다. 해당 파일이 없는 경우 하는 경우는 <xref:System.Web.Caching.CacheDependency> xyz.dat 파일의 생성 될 때 캐시 된 개체가 제거, 개체 작성 되지만 나중에 생성 됩니다.  
  
> [!NOTE]
>  변경 내용 추적 즉시 시작 되 고 직접 기반으로 하지는 `start` 매개 변수입니다. 사용 하 여는 `start` 날짜 및 시간 기준이 배열의 마지막으로 수정한 날짜를 확인 하려면 이전에 전달할 매개 변수를 전달 합니다 `filenames` 매개 변수입니다. 마지막으로 수정한 경우 배열에 있는 모든 개체의 날짜의 날짜 보다 크면 및 시간 설정에 전달 합니다 `start` 매개 변수, 캐시 된 항목에서 제거 됩니다는 <xref:System.Web.Caching.Cache>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Caching.CacheDependency> 두 XML 파일을 전달 하는 개체 및 <xref:System.DateTime.Now%2A?displayProperty=nameWithType> 개체에서 매개 변수 인수로 포함 된 경우 값을 <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> 메서드를 호출 합니다.  
  
 [!code-csharp[CacheDependency Constructor4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor4/CS/depmultifilestimecs.aspx#1)]
 [!code-vb[CacheDependency Constructor4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor4/VB/depmultifilestimevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">응용 프로그램 데이터 캐싱</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * string[] -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, cachekeys)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="filenames">캐시된 개체가 종속되어 있는 파일 또는 디렉터리 경로로 이루어진 배열입니다. 이러한 리소스가 변경되면 캐시된 해당 개체는 사용할 수 없게 되며 캐시에서 제거됩니다.</param>
        <param name="cachekeys">새 개체가 변경 내용을 모니터링하는 캐시 키 배열입니다. 이러한 캐시 키가 변경되면 이 종속성 개체와 연관된 캐시된 개체는 사용할 수 없게 되어 캐시에서 제거됩니다.</param>
        <summary>파일 또는 디렉터리에 대한 경로 배열이나, 캐시 키 배열 또는 이 두 가지 배열 모두의 변경 내용을 모니터링하는 <see cref="T:System.Web.Caching.CacheDependency" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 또한 디렉터리 또는 파일에 지정 된 경우는 `filenames` 매개 변수가 없는 파일 시스템에서 누락 된 것으로 처리 됩니다. 디렉터리나 파일이 없는 경우 종속성을 사용 하 여 개체에 추가 됩니다는 <xref:System.Web.Caching.Cache>, 캐시 된 개체에서 제거할는 <xref:System.Web.Caching.Cache> 해당 디렉터리 또는 파일 만들어질 때.  
  
 예를 들어 개체를 추가 하는 것으로 가정 합니다 <xref:System.Web.Caching.Cache> 다음 파일 경로에 대 한 종속성: c:\stocks\xyz.dat 합니다. 해당 파일이 없는 경우 하는 경우는 <xref:System.Web.Caching.CacheDependency> xyz.dat 파일의 생성 될 때 캐시 된 개체가 제거, 개체 작성 되지만 나중에 생성 됩니다.  
  
 그러나는 `cachekeys` 종속성 동일한 방식으로 작동 하지 않습니다. 하나 이상의 값에 `cachekeys` 매개 변수 삽입 시 존재 하지 않습니다, 삽입이 실패 합니다. 이 시나리오에 대해 throw 된 예외가 있다는 점에 유의 합니다.  
  
## Examples  
 다음 코드 조각은 응용 프로그램의 항목을 삽입 하는 방법에 설명 <xref:System.Web.Caching.Cache> 다른 항목에 키에 대 한 종속성을 사용 하 여 캐시에 배치 합니다. 키의 수를 정의 해야 하므로이 메서드는 배열 구문에서는는 항목에 추가 하는 <xref:System.Web.Caching.Cache> 다릅니다.  
  
 [!code-csharp[Key based dependency#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Key based dependency/CS/DependencyKeycs.aspx#1)]
 [!code-vb[Key based dependency#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Key based dependency/VB/DependencyKeyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">응용 프로그램 데이터 캐싱</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String(), start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys, DateTime start);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * string[] * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, cachekeys, start)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filenames">캐시된 개체가 종속되어 있는 파일 또는 디렉터리 경로로 이루어진 배열입니다. 이러한 리소스가 변경되면 캐시된 해당 개체는 사용할 수 없게 되며 캐시에서 제거됩니다.</param>
        <param name="cachekeys">새 개체가 변경 내용을 모니터링하는 캐시 키 배열입니다. 이러한 캐시 키가 변경되면 이 종속성 개체와 연관된 캐시된 개체는 사용할 수 없게 되어 캐시에서 제거됩니다.</param>
        <param name="start"><paramref name="filenames" /> 및 <paramref name="cachekeys" /> 배열에 전달된 개체를 마지막으로 수정한 날짜를 확인할 날짜와 시간입니다.</param>
        <summary>파일 또는 디렉터리에 대한 경로 배열이나, 캐시 키 배열 또는 이 두 가지 배열 모두의 변경 내용을 모니터링하는 <see cref="T:System.Web.Caching.CacheDependency" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 또한 디렉터리 또는 파일에 지정 된 경우는 `filenames` 매개 변수가 없는 파일 시스템에서 누락 된 것으로 처리 됩니다. 디렉터리나 파일이 없는 경우 종속성을 사용 하 여 개체에 추가 됩니다는 <xref:System.Web.Caching.Cache>, 캐시 된 개체에서 제거할는 <xref:System.Web.Caching.Cache> 해당 디렉터리 또는 파일 만들어질 때.  
  
 예를 들어 개체를 추가 하는 것으로 가정 합니다 <xref:System.Web.Caching.Cache> 다음 파일 경로에 대 한 종속성: c:\stocks\xyz.dat 합니다. 해당 파일이 없는 경우 하는 경우는 <xref:System.Web.Caching.CacheDependency> xyz.dat 파일의 생성 될 때 캐시 된 개체가 제거, 개체 작성 되지만 나중에 생성 됩니다.  
  
 그러나는 `cachekeys` 종속성 동일한 방식으로 작동 하지 않습니다. 하나 이상의 값에 `cachekeys` 매개 변수 삽입 시 존재 하지 않습니다, 삽입이 실패 합니다. 이 시나리오에 대해 throw 된 예외가 있다는 점에 유의 합니다.

> [!NOTE]
>  변경 내용 추적 즉시 시작 되 고 직접 기반으로 하지는 `start` 매개 변수입니다. 사용 하 여는 `start` 날짜 및 시간 개체의 마지막으로 수정한 날짜를 확인 하려는는 과거에 전달할 매개 변수를 전달 합니다 `filenames` 또는 `cachekeys` 매개 변수입니다. 마지막으로 수정한 경우 해당 개체의 날짜가 날짜 보다 이후 및 시간 설정에 전달 합니다 `start` 매개 변수, 캐시 된 항목에서 제거 됩니다는 <xref:System.Web.Caching.Cache>합니다.  
  
   
  
## Examples  
 다음 코드 예제는 `CreateDependency` 메서드. 이 메서드를 호출 하는 경우 생성을 <xref:System.DateTime> 개체 및 <xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType> 속성은 캐시에 항목을 추가 하려면 사용을 `key` 의 매개 변수 `key1` 값 `Value 1`합니다. 문자열의 배열을 `dependencyKey`, 그런 다음 값을 사용 하 여 생성 됩니다 `key1` 도 합니다. 이 <xref:System.Web.Caching.CacheDependency> 인스턴스화하고 생성자를 <xref:System.Web.Caching.CacheDependency> 전달 하는 개체 `dependencyKey` 및 <xref:System.DateTime> 매개 변수 인수 개체입니다. <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> 메서드는 다음을 사용 하 여 <xref:System.Web.Caching.CacheDependency> 개체를 매개 변수로. 이렇게 하면 사용 하 여 캐시에 추가 된 개체를 <xref:System.Web.Caching.Cache.Insert%2A> 종속 메서드는 `key1` 키입니다.  
  
 [!code-csharp[CacheDependency Constructor6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor6/CS/depkeytimecs.aspx#1)]
 [!code-vb[CacheDependency Constructor6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor6/VB/depkeytimevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">응용 프로그램 데이터 캐싱</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys, System.Web.Caching.CacheDependency dependency);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys, class System.Web.Caching.CacheDependency dependency) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String(), dependency As CacheDependency)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys, System::Web::Caching::CacheDependency ^ dependency);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * string[] * System.Web.Caching.CacheDependency -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, cachekeys, dependency)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
        <Parameter Name="dependency" Type="System.Web.Caching.CacheDependency" />
      </Parameters>
      <Docs>
        <param name="filenames">캐시된 개체가 종속되어 있는 파일 또는 디렉터리 경로로 이루어진 배열입니다. 이러한 리소스가 변경되면 캐시된 해당 개체는 사용할 수 없게 되며 캐시에서 제거됩니다.</param>
        <param name="cachekeys">새 개체가 변경 내용을 모니터링하는 캐시 키 배열입니다. 이러한 캐시 키가 변경되면 이 종속성 개체와 연관된 캐시된 개체는 사용할 수 없게 되어 캐시에서 제거됩니다.</param>
        <param name="dependency">이 인스턴스가 종속된 <see cref="T:System.Web.Caching.CacheDependency" /> 클래스의 다른 인스턴스입니다.</param>
        <summary>파일 또는 디렉터리에 대한 경로 배열이나, 캐시 키 배열 또는 이 두 가지 배열 모두의 변경 내용을 모니터링하는 <see cref="T:System.Web.Caching.CacheDependency" /> 클래스의 새 인스턴스를 초기화합니다. 또한 <see cref="T:System.Web.Caching.CacheDependency" /> 클래스의 다른 인스턴스에 대해 종속되도록 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 또한 디렉터리 또는 파일에 지정 된 경우는 `filenames` 매개 변수가 없는 파일 시스템에서 누락 된 것으로 처리 됩니다. 디렉터리나 파일이 없는 경우 종속성을 사용 하 여 개체에 추가 됩니다는 <xref:System.Web.Caching.Cache>, 캐시 된 개체에서 제거할는 <xref:System.Web.Caching.Cache> 해당 디렉터리 또는 파일 만들어질 때.  
  
 예를 들어 개체를 추가 하는 것으로 가정 합니다 <xref:System.Web.Caching.Cache> 다음 파일 경로에 대 한 종속성: c:\stocks\xyz.dat 합니다. 해당 파일이 없는 경우 하는 경우는 <xref:System.Web.Caching.CacheDependency> xyz.dat 파일의 생성 될 때 캐시 된 개체가 제거, 개체 작성 되지만 나중에 생성 됩니다.  
  
 그러나는 `cachekeys` 종속성 동일한 방식으로 작동 하지 않습니다. 하나 이상의 값에 `cachekeys` 매개 변수 삽입 시 존재 하지 않습니다, 삽입이 실패 합니다. 이 시나리오에 대해 throw 된 예외가 있다는 점에 유의 합니다.
  
## Examples  
 다음 코드 예제는 `CreateDependency` 메서드. 사용 하 여이 메서드를 호출 하는 경우는 <xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType> 캐시에 항목을 추가 하려면 속성을 `key` 의 매개 변수 `key1` 값 `Value 1`. 문자열의 배열을 `dependencyKey`, 그런 다음 값을 사용 하 여 생성 됩니다 `key1` 도 합니다. <xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType> 생성자는 만드는 데는 <xref:System.Web.Caching.CacheDependency> 개체 `dep1`, 전달 하는 `dependencyKey` 매개 변수 인수입니다. 두 번째 <xref:System.Web.Caching.CacheDependency> 개체를 `dep2`를 사용 하 여이 생성자를 사용 하 여 만들어집니다 `dep1` 세 번째 매개 변수 인수로 전달 합니다. 이 두 번째 종속성은 첫 번째에 따라 달라 집니다. 합니다 <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> 메서드는 다음으로, 두 번째를 사용 하 여 <xref:System.Web.Caching.CacheDependency> 개체를 매개 변수로 합니다. 첫 번째 종속성 어떤 방식으로든에서 변경 되 면 캐시 된 항목이 무효화 됩니다.  
  
 [!code-csharp[CacheDependency Constructor7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor7/CS/dependencycs.aspx#1)]
 [!code-vb[CacheDependency Constructor7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor7/VB/dependencyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys, System.Web.Caching.CacheDependency dependency, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys, class System.Web.Caching.CacheDependency dependency, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String(), dependency As CacheDependency, start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys, System::Web::Caching::CacheDependency ^ dependency, DateTime start);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * string[] * System.Web.Caching.CacheDependency * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, cachekeys, dependency, start)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
        <Parameter Name="dependency" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filenames">캐시된 개체가 종속되어 있는 파일 또는 디렉터리 경로로 이루어진 배열입니다. 이러한 리소스가 변경되면 캐시된 해당 개체는 사용할 수 없게 되며 캐시에서 제거됩니다.</param>
        <param name="cachekeys">새 개체가 변경 내용을 모니터링하는 캐시 키 배열입니다. 이러한 캐시 키가 변경되면 이 종속성 개체와 연관된 캐시된 개체는 사용할 수 없게 되어 캐시에서 제거됩니다.</param>
        <param name="dependency">이 인스턴스가 종속된 <see cref="T:System.Web.Caching.CacheDependency" /> 클래스의 다른 인스턴스입니다.</param>
        <param name="start">배열에 있는 개체와 <see cref="T:System.Web.Caching.CacheDependency" /> 개체를 마지막으로 수정한 날짜를 확인할 시간입니다.</param>
        <summary>파일 또는 디렉터리에 대한 경로 배열이나, 캐시 키 배열 또는 이 두 가지 배열 모두의 변경 내용을 모니터링하는 <see cref="T:System.Web.Caching.CacheDependency" /> 클래스의 새 인스턴스를 초기화합니다. 또한 <see cref="T:System.Web.Caching.CacheDependency" /> 클래스의 인스턴스와 변경 모니터링이 시작되는 시간에 종속되도록 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 또한 디렉터리 또는 파일에 지정 된 경우는 `filenames` 매개 변수가 없는 파일 시스템에서 누락 된 것으로 처리 됩니다. 디렉터리나 파일이 없는 경우 종속성을 사용 하 여 개체에 추가 됩니다는 <xref:System.Web.Caching.Cache>, 캐시 된 개체에서 제거할는 <xref:System.Web.Caching.Cache> 해당 디렉터리 또는 파일 만들어질 때.  
  
 예를 들어 개체를 추가 하는 것으로 가정 합니다 <xref:System.Web.Caching.Cache> 다음 파일 경로에 대 한 종속성: c:\stocks\xyz.dat 합니다. 해당 파일이 없는 경우 하는 경우는 <xref:System.Web.Caching.CacheDependency> xyz.dat 파일의 생성 될 때 캐시 된 개체가 제거, 개체 작성 되지만 나중에 생성 됩니다.  
 
 그러나는 `cachekeys` 종속성 동일한 방식으로 작동 하지 않습니다. 하나 이상의 값에 `cachekeys` 매개 변수 삽입 시 존재 하지 않습니다, 삽입이 실패 합니다. 이 시나리오에 대해 throw 된 예외가 있다는 점에 유의 합니다.

> [!NOTE]
>  변경 내용 추적 즉시 시작 되 고 직접 기반으로 하지는 `start` 매개 변수입니다. 사용 하 여는 `start` 날짜 및 시간 기준이 되는 개체의 마지막으로 수정한 날짜를 확인 하려면 이전에 전달할 매개 변수를 전달 합니다 `filenames`, `cachekeys`, 또는 `dependency` 매개 변수입니다. 마지막으로 수정한 경우 이러한 개체 중 하나에 대 한 날짜와 보다 이후 날짜 전달 된 시간을 `start` 매개 변수, 캐시 된 항목에서 제거 됩니다는 <xref:System.Web.Caching.Cache>합니다.  
  
   
  
## Examples  
 다음 코드 예제는 `CreateDependency` 메서드. 이 메서드를 호출 하는 경우 생성 된 <xref:System.DateTime> 개체 및 <xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType> 속성의 키 매개 변수를 사용 하 여 캐시에 항목을 추가 하는 `key1` 값 `Value 1`합니다. 문자열의 배열을 `dependencyKey`의 값으로 설정 하는 첫 번째 (및 유일한) 인덱스에 있는 값을 사용 하 여 만들어집니다 `key1` 도 합니다. <xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType> 생성자는 만드는 데 다음을 <xref:System.Web.Caching.CacheDependency> 개체를 `dep1`, 전달 하는 `dependencyKey` 매개 변수 인수입니다. 두 번째 <xref:System.Web.Caching.CacheDependency> 개체를 `dep2`가 사용 하 여이 생성자를 사용 하 여 생성 됩니다 `dep1` 및 <xref:System.DateTime> 개체 매개 변수 인수로 전달 합니다. 이 두 번째 종속성은 첫 번째 종속 및 종속성 모니터링 시작 후 10 초를 `CreateDependency` 메서드가 호출 됩니다. 합니다 <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> 메서드는 다음으로, 두 번째를 사용 하 여 <xref:System.Web.Caching.CacheDependency> 개체를 매개 변수로 합니다. 첫 번째 종속성 어떤 방식으로든에서 변경 되 면 캐시 된 항목이 무효화 됩니다.  
  
 [!code-csharp[CacheDependency Constructor8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor8/CS/dependencytimecs.aspx#1)]
 [!code-vb[CacheDependency Constructor8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor8/VB/dependencytimevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">응용 프로그램 데이터 캐싱</related>
      </Docs>
    </Member>
    <Member MemberName="DependencyDispose">
      <MemberSignature Language="C#" Value="protected virtual void DependencyDispose ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DependencyDispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.DependencyDispose" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DependencyDispose ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DependencyDispose();" />
      <MemberSignature Language="F#" Value="abstract member DependencyDispose : unit -&gt; unit&#xA;override this.DependencyDispose : unit -&gt; unit" Usage="cacheDependency.DependencyDispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Caching.CacheDependency" /> 클래스 및 <see cref="T:System.Web.Caching.CacheDependency" />에서 파생되는 클래스에서 사용되는 리소스를 해제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생 되는 모든 클래스는 <xref:System.Web.Caching.CacheDependency> 클래스는 파생된 클래스에 사용 되는 리소스를 정리 하려면이 메서드를 구현 해야 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서 상속 되는 클래스를 보여 줍니다.는 <xref:System.Web.Caching.CacheDependency> 클래스 및 재정의 <xref:System.Web.Caching.CacheDependency.DependencyDispose%2A> 메서드. 이 메서드를 호출 하는 경우 명명 된 사용자 지정 부울 속성을 설정 `Disposed` 에 `true`입니다.  
  
 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">응용 프로그램 데이터 캐싱</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cacheDependency.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Caching.CacheDependency" /> 개체가 사용하는 리소스를 해제합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishInit">
      <MemberSignature Language="C#" Value="protected internal void FinishInit ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void FinishInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.FinishInit" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub FinishInit ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void FinishInit();" />
      <MemberSignature Language="F#" Value="member this.FinishInit : unit -&gt; unit" Usage="cacheDependency.FinishInit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Caching.CacheDependency" /> 개체의 초기화를 완료합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Caching.CacheDependency.FinishInit%2A> 의 초기화를 완료 하는 메서드는 <xref:System.Web.Caching.CacheDependency> 개체입니다. 이 메서드는 모든 <xref:System.Web.Caching.CacheDependency> 생성자입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>합니다 <see cref="M:System.Web.Caching.CacheDependency.FinishInit" /> 의 초기화를 완료 하기 위해 파생된 클래스 생성자의 끝에 메서드를 호출 해야 합니다 <see cref="T:System.Web.Caching.CacheDependency" /> 개체입니다.</para></block>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">응용 프로그램 데이터 캐싱</related>
      </Docs>
    </Member>
    <Member MemberName="GetFileDependencies">
      <MemberSignature Language="C#" Value="public virtual string[] GetFileDependencies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFileDependencies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.GetFileDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileDependencies () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetFileDependencies();" />
      <MemberSignature Language="F#" Value="abstract member GetFileDependencies : unit -&gt; string[]&#xA;override this.GetFileDependencies : unit -&gt; string[]" Usage="cacheDependency.GetFileDependencies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>파일 종속성을 가져옵니다.</summary>
        <returns>파일 종속성입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniqueID">
      <MemberSignature Language="C#" Value="public virtual string GetUniqueID ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetUniqueID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.GetUniqueID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUniqueID () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetUniqueID();" />
      <MemberSignature Language="F#" Value="abstract member GetUniqueID : unit -&gt; string&#xA;override this.GetUniqueID : unit -&gt; string" Usage="cacheDependency.GetUniqueID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Caching.CacheDependency" /> 개체에 대한 고유 식별자를 검색합니다.</summary>
        <returns><see cref="T:System.Web.Caching.CacheDependency" /> 개체에 대한 고유 식별자입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 여러 인스턴스의 추적에 대 한 특히 유용할 수 있습니다는 <xref:System.Web.Caching.CacheDependency> 항목 또는 응용 프로그램을 사용 하 여 연결 된 클래스입니다.  
  
 식별자에는 파일 이름 (파일 종속성의 경우) 또는 (종속성과 관련 된 캐시 키) 키 이름 및 종속성에이 메서드를 지정 하는 문자열의 조합입니다. 파생 된 클래스에는 <xref:System.Web.Caching.CacheDependency> 클래스의 고유 식별자를 생성 하는 방법을 사용자 지정 하려면이 메서드를 재정의할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Caching.AggregateCacheDependency> 라는 개체 `aggDep`, 두 개의 <xref:System.Web.Caching.CacheDependency> 해당 배열에 있는 개체입니다. 한 번 `aggDep` 인스턴스화되면 코드 호출을 <xref:System.Web.Caching.CacheDependency.GetUniqueID%2A> 모두 종속성에 대 한 고유 식별자를 생성 하는 메서드는 `aggDep` 포함 및 포함 하는 페이지 식별자가 표시 됩니다. 항목에 추가 됩니다는 <xref:System.Web.Caching.Cache>를 사용 하 여 합니다 <xref:System.Web.Caching.Cache.Insert%2A> 메서드를 사용 하 여 `aggDep` 종속성으로 합니다.  
  
 [!code-vb[CachingSamples_AggregateCacheDependency1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CachingSamples_AggregateCacheDependency1/VB/aggregatecachedependencysamplevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
      </Docs>
    </Member>
    <Member MemberName="HasChanged">
      <MemberSignature Language="C#" Value="public bool HasChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanged" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.CacheDependency.HasChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanged { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChanged : bool" Usage="System.Web.Caching.CacheDependency.HasChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.Caching.CacheDependency" /> 개체가 변경되었는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="T:System.Web.Caching.CacheDependency" /> 개체가 변경되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 응용 프로그램에 항목을 추가할 수 있습니다 <xref:System.Web.Caching.Cache> 사용 하 여는 <xref:System.Web.Caching.CacheDependency>합니다. 경우는 <xref:System.Web.Caching.CacheDependency> 추가할 항목을 변경할는 <xref:System.Web.Caching.Cache> 무효화 되 고 캐시에서 제거 합니다. 확인 하려면이 속성을 사용할 수 있는지 여부를 <xref:System.Web.Caching.CacheDependency> 변경 하 고 항목을 다시는 <xref:System.Web.Caching.Cache> 는 발생 한 경우.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하 여 보여 줍니다.는 <xref:System.Web.Caching.CacheDependency.HasChanged%2A> 속성을 여부를 <xref:System.Web.Caching.CacheDependency> 항목에 대해 이전 요청 이후로 변경는 <xref:System.Web.Caching.Cache>합니다. 합니다 `dt` 에 전달 된 값을 `start` 매개 변수는 설정 <xref:System.DateTime.Now%2A?displayProperty=nameWithType>합니다.  
  
 [!code-csharp[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/CS/t.cs.aspx#1)]
 [!code-vb[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/VB/t.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">응용 프로그램 데이터 캐싱</related>
      </Docs>
    </Member>
    <Member MemberName="ItemRemoved">
      <MemberSignature Language="C#" Value="public void ItemRemoved ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ItemRemoved() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.ItemRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Sub ItemRemoved ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ItemRemoved();" />
      <MemberSignature Language="F#" Value="member this.ItemRemoved : unit -&gt; unit" Usage="cacheDependency.ItemRemoved " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>모니터링되는 캐시 엔트리가 제거될 때 호출됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepDependenciesAlive">
      <MemberSignature Language="C#" Value="public void KeepDependenciesAlive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void KeepDependenciesAlive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.KeepDependenciesAlive" />
      <MemberSignature Language="VB.NET" Value="Public Sub KeepDependenciesAlive ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void KeepDependenciesAlive();" />
      <MemberSignature Language="F#" Value="member this.KeepDependenciesAlive : unit -&gt; unit" Usage="cacheDependency.KeepDependenciesAlive " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 항목에 종속되는 모든 캐시 항목의 마지막 액세스 시간을 업데이트합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyDependencyChanged">
      <MemberSignature Language="C#" Value="protected void NotifyDependencyChanged (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void NotifyDependencyChanged(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub NotifyDependencyChanged (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void NotifyDependencyChanged(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.NotifyDependencyChanged : obj * EventArgs -&gt; unit" Usage="cacheDependency.NotifyDependencyChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="e" Type="System.EventArgs" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sender">이벤트 소스입니다.</param>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" /> 개체입니다.</param>
        <summary>파생 <see cref="T:System.Web.Caching.CacheDependency" /> 클래스에 나타나는 종속성이 변경되었음을 기본 <see cref="T:System.Web.Caching.CacheDependency" /> 개체에 알립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생 되는 모든 클래스는 <xref:System.Web.Caching.CacheDependency> 클래스가이 메서드를 구현 해야 합니다.  
  
 파생 하는 경우는 <xref:System.Web.Caching.CacheDependency> 모든 메서드나 재정의 하지 않은 속성의 기본 기능을 사용 하면 클래스입니다. 파생된 클래스의 인스턴스를 만들면 파일, 캐시 키, 데이터베이스 테이블 또는 캐시 된 항목에 따라 달라 집니다 확인 하려는 다른 임의의 개체를 나타냅니다. 종속성 항목 변경 될 때이 메서드는의 기본 기능을 알립니다를 <xref:System.Web.Caching.CacheDependency> 클래스 항목을 변경 있도록 값을 <xref:System.Web.Caching.CacheDependency.HasChanged%2A> 및 <xref:System.Web.Caching.CacheDependency.UtcLastModified%2A> 속성만 업데이트할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서 상속 되는 클래스를 보여 줍니다.는 <xref:System.Web.Caching.CacheDependency> 클래스입니다. 공용 메서드를 만듭니다 `ResetDependency`를 사용 하는 <xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A> 종속성 수정 된 시간을 변경 하는 방법 및 호출을 <xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A> 메서드.  
  
 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">응용 프로그램 데이터 캐싱</related>
      </Docs>
    </Member>
    <Member MemberName="SetCacheDependencyChanged">
      <MemberSignature Language="C#" Value="public void SetCacheDependencyChanged (Action&lt;object,EventArgs&gt; dependencyChangedAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCacheDependencyChanged(class System.Action`2&lt;object, class System.EventArgs&gt; dependencyChangedAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.SetCacheDependencyChanged(System.Action{System.Object,System.EventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCacheDependencyChanged (dependencyChangedAction As Action(Of Object, EventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCacheDependencyChanged(Action&lt;System::Object ^, EventArgs ^&gt; ^ dependencyChangedAction);" />
      <MemberSignature Language="F#" Value="member this.SetCacheDependencyChanged : Action&lt;obj, EventArgs&gt; -&gt; unit" Usage="cacheDependency.SetCacheDependencyChanged dependencyChangedAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyChangedAction" Type="System.Action&lt;System.Object,System.EventArgs&gt;" Index="0" FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dependencyChangedAction">종속성이 변경된 동작입니다.</param>
        <summary>이 종속성의 변경 내용을 관련 당사자에게 알리는 작업을 처리하기 위한 동작 메서드를 추가합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUtcLastModified">
      <MemberSignature Language="C#" Value="protected void SetUtcLastModified (DateTime utcLastModified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetUtcLastModified(valuetype System.DateTime utcLastModified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetUtcLastModified (utcLastModified As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetUtcLastModified(DateTime utcLastModified);" />
      <MemberSignature Language="F#" Value="member this.SetUtcLastModified : DateTime -&gt; unit" Usage="cacheDependency.SetUtcLastModified utcLastModified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utcLastModified" Type="System.DateTime" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="utcLastModified">종속성을 마지막으로 변경한 시간입니다.</param>
        <summary>종속성을 마지막으로 변경한 시간을 표시합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서 상속 되는 클래스를 보여 줍니다.는 <xref:System.Web.Caching.CacheDependency> 클래스입니다. 공용 메서드를 만듭니다 `ResetDependency`를 사용 하는 <xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A> 종속성 수정 된 시간을 변경 하는 방법 및 호출을 <xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A> 메서드.  
  
 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">응용 프로그램 데이터 캐싱</related>
      </Docs>
    </Member>
    <Member MemberName="TakeOwnership">
      <MemberSignature Language="C#" Value="public bool TakeOwnership ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TakeOwnership() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.TakeOwnership" />
      <MemberSignature Language="VB.NET" Value="Public Function TakeOwnership () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TakeOwnership();" />
      <MemberSignature Language="F#" Value="member this.TakeOwnership : unit -&gt; bool" Usage="cacheDependency.TakeOwnership " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>첫 번째 사용자가 이 종속성의 단독 소유권을 선언하도록 허용합니다.</summary>
        <returns>소유권을 가져온 첫 번째 항목인 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 종속성을 사용 해야 함을 선언 합니다. 다른 항목에서 이전에이 메서드를 호출 하 고 소유권을 수행한 경우 `false` 반환 됩니다. <xref:System.Web.Caching.CacheDependency> 캐시가 하나 항목별 에서만 사용할 수 있습니다. 캐시에 지정 된 모든 캐시 종속성을 사용 하 여 항목이 추가 하는 경우 캐시는 이러한 다시 사용 되지 않습니다 어딘가에 다른 되도록 해당 종속성의 소유권을 가져올 해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UtcLastModified">
      <MemberSignature Language="C#" Value="public DateTime UtcLastModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime UtcLastModified" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.CacheDependency.UtcLastModified" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UtcLastModified As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime UtcLastModified { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.UtcLastModified : DateTime" Usage="System.Web.Caching.CacheDependency.UtcLastModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>종속성을 마지막으로 변경한 시간을 가져옵니다.</summary>
        <value>종속성을 마지막으로 변경한 시간입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 Utc (협정 세계시) (라고도 그리니치 표준시)를 측정 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 합니다 <xref:System.Web.Caching.AggregateCacheDependency> 두 개의 항목을 추가할 클래스 <xref:System.Web.Caching.CacheDependency> 에 종속성 개체는 <xref:System.Web.Caching.Cache>합니다. 경우에 대 한 요청을 <xref:System.Web.Caching.Cache> 항목 이루어집니다, 코드 항목 인지 여부를 확인는 <xref:System.Web.Caching.Cache>합니다. 이 경우는 <xref:System.Web.Caching.CacheDependency.UtcLastModified%2A> 속성을 문자열로 변환 되 고 페이지에 표시 합니다. 없는 경우 항목 및 두 개의 종속성 생성 되어에 추가 된 <xref:System.Web.Caching.Cache>합니다.  
  
 [!code-vb[CachingSamples_AggregateCacheDependency1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CachingSamples_AggregateCacheDependency1/VB/aggregatecachedependencysamplevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">응용 프로그램 데이터 캐싱</related>
      </Docs>
    </Member>
  </Members>
</Type>