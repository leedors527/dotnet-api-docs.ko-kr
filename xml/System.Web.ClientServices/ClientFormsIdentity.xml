<Type Name="ClientFormsIdentity" FullName="System.Web.ClientServices.ClientFormsIdentity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4ba10aea8537e9462a1568aff18b4c55f7382282" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53525997" /></Metadata><TypeSignature Language="C#" Value="public class ClientFormsIdentity : IDisposable, System.Security.Principal.IIdentity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientFormsIdentity extends System.Object implements class System.IDisposable, class System.Security.Principal.IIdentity" />
  <TypeSignature Language="DocId" Value="T:System.Web.ClientServices.ClientFormsIdentity" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientFormsIdentity&#xA;Implements IDisposable, IIdentity" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientFormsIdentity : IDisposable, System::Security::Principal::IIdentity" />
  <TypeSignature Language="F#" Value="type ClientFormsIdentity = class&#xA;    interface IIdentity&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Principal.IIdentity</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>폼 인증을 사용하여 클라이언트 애플리케이션 서비스에 대해 인증된 사용자의 ID를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 클라이언트 애플리케이션 서비스 기능은이 클래스를 사용 하 여 인증 된 사용자를 나타냅니다. 클라이언트 응용 프로그램 서비스 및 폼 인증을 사용 하도록 응용 프로그램을 구성할 때 호출 하 여 사용자를 인증할 수 있습니다 합니다 `static` <xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=nameWithType> 메서드. 인증 후 현재에 대 한 참조를 검색할 수 있습니다 <xref:System.Web.ClientServices.ClientFormsIdentity> 통해 인스턴스를 <xref:System.Security.Principal.IPrincipal.Identity%2A> 의 속성을 <xref:System.Security.Principal.IPrincipal> 검색할를 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> 속성. 자세한 내용은 [클라이언트 애플리케이션 서비스](~/docs/framework/common-client-technologies/client-application-services.md)를 참조하세요.  
  
 일반적으로 액세스 한 <xref:System.Web.ClientServices.ClientFormsIdentity> 개체는 <xref:System.Security.Principal.IIdentity> 이 클래스에 대 한 직접 종속성을 방지 하기 위해 참조 합니다. 확인 하 여 사용자가 인증 되었는지 여부를 확인할 수 있습니다는 <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> id의 속성입니다. 그러나 클라이언트 애플리케이션 서비스 아니라, Windows에 대 한 사용자를 인증할 수 있습니다. 클라이언트 애플리케이션 서비스에 대 한 사용자가 인증 되었는지 여부를 확인 하려면도 확인 해야 하는 <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> 속성 값이 "ClientForms"입니다.  
  
 명시적 사용 해야 합니다 <xref:System.Web.ClientServices.ClientFormsIdentity> 호출에 대 한 참조를 <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> 에서 정의 되지 않은 메서드는 <xref:System.Security.Principal.IIdentity> 인터페이스입니다.  
  
   
  
## Examples  
 다음 예제 코드에서는이 클래스를 사용 하 여 애플리케이션을 오프 라인 상태로 유지 하는 경우 사용자를 자동으로 유효성 검사를 하는 방법에 설명 합니다. 이 예제는 <xref:System.Windows.Forms.CheckBox.CheckedChanged> 확인란 값과 일치 하도록 오프 라인 상태를 업데이트 하는 이벤트 처리기입니다. 애플리케이션을 온라인 상태로 설정 하는 사용자, 이벤트 처리기를 호출 하 여 사용자 유효성 검사를 다시 시도 <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> 메서드. 그러나 인증 서버를 사용할 수 없는 경우 이벤트 처리기에 애플리케이션을 오프 라인 상태로 반환 합니다.  
  
> [!NOTE]
>  <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> 메서드는 편의상의 목적으로만 사용됩니다. 반환 값이 없기 때문에 유효성 재검사가 실패했는지 여부를 나타낼 수 없습니다. 예를 들어 서버에서 사용자 자격 증명이 변경된 경우 유효성 재검사가 실패할 수 있습니다. 이 경우 서비스 호출이 실패한 후 명시적으로 사용자의 유효성을 검사하는 코드를 포함하는 것이 좋습니다. 자세한 내용은 웹 설정 액세스 섹션을 참조 하세요 [연습: 클라이언트 애플리케이션 서비스를 사용 하 여](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md)입니다.  
  
 [!code-csharp[ClientApplicationServices#315](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#315)]
 [!code-vb[ClientApplicationServices#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#315)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.Security.Membership.ValidateUser(System.String,System.String)" />
    <altmember cref="M:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser" />
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="T:System.Security.Principal.IPrincipal" />
    <altmember cref="P:System.Security.Principal.IPrincipal.Identity" />
    <altmember cref="T:System.Security.Principal.IIdentity" />
    <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
    <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
    <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
    <altmember cref="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.Logout" />
    <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">클라이언트 애플리케이션 서비스</related>
    <related type="Article" href="https://msdn.microsoft.com/library/bb7c8950-4517-4dae-b705-b74a14059b26">연습: 클라이언트 애플리케이션 서비스 사용</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientFormsIdentity (string name, string password, System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, System.Net.CookieContainer authenticationCookies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string password, class System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, class System.Net.CookieContainer authenticationCookies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, password As String, provider As MembershipProvider, authenticationType As String, isAuthenticated As Boolean, authenticationCookies As CookieContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientFormsIdentity(System::String ^ name, System::String ^ password, System::Web::Security::MembershipProvider ^ provider, System::String ^ authenticationType, bool isAuthenticated, System::Net::CookieContainer ^ authenticationCookies);" />
      <MemberSignature Language="F#" Value="new System.Web.ClientServices.ClientFormsIdentity : string * string * System.Web.Security.MembershipProvider * string * bool * System.Net.CookieContainer -&gt; System.Web.ClientServices.ClientFormsIdentity" Usage="new System.Web.ClientServices.ClientFormsIdentity (name, password, provider, authenticationType, isAuthenticated, authenticationCookies)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="provider" Type="System.Web.Security.MembershipProvider" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
        <Parameter Name="authenticationCookies" Type="System.Net.CookieContainer" />
      </Parameters>
      <Docs>
        <param name="name">인증된 사용자의 이름입니다.</param>
        <param name="password">인증된 사용자의 암호입니다.</param>
        <param name="provider">사용자를 인증하는 데 사용되는 멤버 자격 공급자입니다.</param>
        <param name="authenticationType">사용되는 인증 형식입니다.</param>
        <param name="isAuthenticated">사용자가 인증되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="authenticationCookies">인증 서비스에서 검색된 쿠키입니다.</param>
        <summary><see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">클라이언트 애플리케이션 서비스</related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationCookies">
      <MemberSignature Language="C#" Value="public System.Net.CookieContainer AuthenticationCookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieContainer AuthenticationCookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationCookies As CookieContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieContainer ^ AuthenticationCookies { System::Net::CookieContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationCookies : System.Net.CookieContainer" Usage="System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.CookieContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>인증 서비스에서 검색된 쿠키의 컬렉션을 가져옵니다.</summary>
        <value>인증 서비스에서 검색된 쿠키입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 애플리케이션 코드에서 사용 하기 위해이 속성을 사용 하는 것이 아닙니다. 이 속성을 통해 검색 된 쿠키를 의미 있게 수정할 수 없습니다 하 고 유용한 정보를 포함 합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">클라이언트 애플리케이션 서비스</related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string" Usage="System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.AuthenticationType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자를 인증하는 데 사용되는 인증 형식을 가져옵니다.</summary>
        <value>사용자를 인증하는 데 사용되는 인증 형식입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 액세스 한 <xref:System.Web.ClientServices.ClientFormsIdentity> 개체는 <xref:System.Security.Principal.IIdentity> 이 클래스에 대 한 직접 종속성을 방지 하기 위해 참조 합니다. 확인 하 여 사용자가 인증 되었는지 여부를 확인할 수 있습니다는 <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> id의 속성입니다. 그러나 클라이언트 애플리케이션 서비스 아니라, Windows에 대 한 사용자를 인증할 수 있습니다. 클라이언트 애플리케이션 서비스에 대 한 사용자가 인증 되었는지 여부를 확인 하려면도 확인 해야 하는 <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> 속성 값이 "ClientForms"입니다. 자세한 내용은 참조는 <xref:System.Web.ClientServices.ClientFormsIdentity> 클래스 개요입니다.  
  
   
  
## Examples  
 다음 예제 코드를 통해이 속성을 사용 하는 방법에 설명 된 <xref:System.Security.Principal.IIdentity> 클라이언트 애플리케이션 서비스에 대 한 현재 사용자가 인증 되었는지 여부를 확인 하기 위해 참조 합니다. 이 예제에서는 애플리케이션 기본 구성 사용자는 인증 쿠키가 만료 될 때 다시 로그인 할 필요가 있다고 가정 합니다. 그렇지 않은 경우는 <xref:System.Net.WebException> 사용자 로그인이 만료 되었음을 나타낼 수 있습니다. 자세한 내용은 [방법: 클라이언트 애플리케이션 서비스 구성](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md)을 참조하세요.  
  
 [!code-csharp[ClientApplicationServices#312](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#312)]
 [!code-vb[ClientApplicationServices#312](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#312)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Principal.IIdentity" />
        <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
        <altmember cref="P:System.Security.Principal.IIdentity.AuthenticationType" />
        <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">클라이언트 애플리케이션 서비스</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34a8688a-a32c-40d3-94be-c8e610c6a4e8">방법: 클라이언트 애플리케이션 서비스 구성</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.ClientServices.ClientFormsIdentity" />에서 사용하는 리소스를 해제합니다.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">클라이언트 애플리케이션 서비스</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="clientFormsIdentity.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.ClientServices.ClientFormsIdentity" />에서 사용하는 모든 리소스를 해제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> 사용을 마치면 <xref:System.Web.ClientServices.ClientFormsIdentity>를 호출합니다. <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> 메서드를 사용하면 <xref:System.Web.ClientServices.ClientFormsIdentity>를 사용할 수 없게 됩니다. 호출한 후 <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A>에 대 한 모든 참조를 해제 해야 합니다 <xref:System.Web.ClientServices.ClientFormsIdentity> 가비지 수집기에서 메모리를 회수할 수 있도록 하는 <xref:System.Web.ClientServices.ClientFormsIdentity> 차지한 합니다. 자세한 내용은 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 하 고 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  
  
> [!NOTE]
>  <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A>에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Web.ClientServices.ClientFormsIdentity>를 호출하십시오. 이렇게 하지 않으면 가비지 수집기가 <xref:System.Web.ClientServices.ClientFormsIdentity> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">클라이언트 애플리케이션 서비스</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="clientFormsIdentity.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
        <summary><see cref="T:System.Web.ClientServices.ClientFormsIdentity" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 공용 `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A> 메서드. `Dispose()` 보호 된 호출 `Dispose(Boolean)` 메서드를 `disposing` 매개 변수 설정 `true`합니다. <xref:System.Object.Finalize%2A> 호출 `Dispose` 사용 하 여 `disposing` 로 `false`합니다.  
  
 경우는 `disposing` 매개 변수가 true 이면이 메서드는 관리 되는 개체가 보유 한 모든 리소스를 해제이 <xref:System.Web.ClientServices.ClientFormsIdentity> 참조 합니다. 이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다. 재정의 하는 경우 <see langword="Dispose(Boolean)" /> 대 한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 해야 <see langword="Dispose" />합니다. 구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />를 참조 하세요 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  
  
에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />를 참조 하십시오 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드 재정의](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))합니다.</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">클라이언트 애플리케이션 서비스</related>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.IsAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 인증되었는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>사용자가 인증되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 액세스 한 <xref:System.Web.ClientServices.ClientFormsIdentity> 개체는 <xref:System.Security.Principal.IIdentity> 이 클래스에 대 한 직접 종속성을 방지 하기 위해 참조 합니다. 확인 하 여 사용자가 인증 되었는지 여부를 확인할 수 있습니다는 <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> id의 속성입니다. 그러나 클라이언트 애플리케이션 서비스 아니라, Windows에 대 한 사용자를 인증할 수 있습니다. 클라이언트 애플리케이션 서비스에 대 한 사용자가 인증 되었는지 여부를 확인 하려면도 확인 해야 하는 <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> 속성 값이 "ClientForms"입니다. 자세한 내용은 참조는 <xref:System.Web.ClientServices.ClientFormsIdentity> 클래스 개요입니다.  
  
   
  
## Examples  
 다음 예제 코드를 통해이 속성을 사용 하는 방법에 설명 된 <xref:System.Security.Principal.IIdentity> 클라이언트 애플리케이션 서비스에 대 한 현재 사용자가 인증 되었는지 여부를 확인 하기 위해 참조 합니다. 이 예제에서는 애플리케이션 기본 구성 사용자는 인증 쿠키가 만료 될 때 다시 로그인 할 필요가 있다고 가정 합니다. 그렇지 않은 경우는 <xref:System.Net.WebException> 사용자 로그인이 만료 되었음을 나타낼 수 있습니다. 자세한 내용은 [방법: 클라이언트 애플리케이션 서비스 구성](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md)을 참조하세요.  
  
 [!code-csharp[ClientApplicationServices#312](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#312)]
 [!code-vb[ClientApplicationServices#312](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#312)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="T:System.Security.Principal.IPrincipal" />
        <altmember cref="P:System.Security.Principal.IPrincipal.Identity" />
        <altmember cref="T:System.Security.Principal.IIdentity" />
        <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
        <altmember cref="P:System.Security.Principal.IIdentity.AuthenticationType" />
        <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">클라이언트 애플리케이션 서비스</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34a8688a-a32c-40d3-94be-c8e610c6a4e8">방법: 클라이언트 애플리케이션 서비스 구성</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.ClientServices.ClientFormsIdentity.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 이름을 가져옵니다.</summary>
        <value>사용자의 이름입니다.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">클라이언트 애플리케이션 서비스</related>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.Security.MembershipProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Security.MembershipProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As MembershipProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Security::MembershipProvider ^ Provider { System::Web::Security::MembershipProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.Security.MembershipProvider" Usage="System.Web.ClientServices.ClientFormsIdentity.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자를 인증하는 데 사용되는 멤버 자격 공급자를 가져옵니다.</summary>
        <value>사용자를 인증하는 데 사용되는 멤버 자격 공급자입니다.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">클라이언트 애플리케이션 서비스</related>
      </Docs>
    </Member>
    <Member MemberName="RevalidateUser">
      <MemberSignature Language="C#" Value="public void RevalidateUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RevalidateUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevalidateUser ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RevalidateUser();" />
      <MemberSignature Language="F#" Value="member this.RevalidateUser : unit -&gt; unit" Usage="clientFormsIdentity.RevalidateUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>캐시된 자격 증명을 사용하여 자동으로 사용자를 인증합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 폼 인증을 사용 하 여 현재 사용자의 유효성을 검사 하는 경우는 <xref:System.Web.ClientServices.ClientFormsIdentity> 클래스는 애플리케이션 실행 되는 사용자 자격 증명을 저장 합니다. 그러나 사용자가 인증 쿠키가 만료 될 때까지만 인증 됩니다. 쿠키가 만료 된 후 원격 역할 또는 웹 설정 서비스에 액세스 하는 사용자 유효성을 재검사 해야 합니다. 사용할 수는 **서비스에 대 한 고급 설정** 대화 상자에 설명 된 대로 사용자를 자동으로 유효성 검사를 애플리케이션을 구성할 수 [방법: 클라이언트 애플리케이션 서비스 구성](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md)합니다. 그러나 쿠키 만료를 적용 하도록 애플리케이션을 구성 하는 경우 있습니다 수 프로그래밍 방식으로 유효성을 다시 검사를 호출 하 여는 <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> 메서드. 이 메서드는 또한 유용 오프 라인 모드에서 온라인 모드로 전환 하는 경우 애플리케이션 종료 때문에 동안 오프 라인입니다.  
  
> [!NOTE]
>  <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> 메서드는 편의상의 목적으로만 사용됩니다. 반환 값이 없기 때문에 유효성 재검사가 실패했는지 여부를 나타낼 수 없습니다. 예를 들어 서버에서 사용자 자격 증명이 변경된 경우 유효성 재검사가 실패할 수 있습니다. 이 경우 서비스 호출이 실패한 후 명시적으로 사용자의 유효성을 검사하는 코드를 포함하는 것이 좋습니다. 자세한 내용은 웹 설정 액세스 섹션을 참조 하세요 [연습: 클라이언트 애플리케이션 서비스를 사용 하 여](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md)입니다.  
  
   
  
## Examples  
 다음 예제 코드에서는이 메서드를 사용 하 여 애플리케이션을 오프 라인 상태로 유지 하는 경우 사용자를 자동으로 유효성 검사를 하는 방법에 설명 합니다. 이 예제는 <xref:System.Windows.Forms.CheckBox.CheckedChanged> 확인란 값과 일치 하도록 오프 라인 상태를 업데이트 하는 이벤트 처리기입니다. 애플리케이션을 온라인 상태로 설정 하는 사용자, 이벤트 처리기를 다시 사용자 유효성을 검사 하려고 시도 합니다. 그러나 인증 서버를 사용할 수 없는 경우 이벤트 처리기에 애플리케이션을 오프 라인 상태로 반환 합니다.  
  
 [!code-csharp[ClientApplicationServices#315](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#315)]
 [!code-vb[ClientApplicationServices#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#315)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ClientServices.ConnectivityStatus" />
        <altmember cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" />
        <related type="Article" href="https://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">클라이언트 애플리케이션 서비스</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34a8688a-a32c-40d3-94be-c8e610c6a4e8">방법: 클라이언트 애플리케이션 서비스 구성</related>
        <related type="Article" href="https://msdn.microsoft.com/library/6dde4a2d-85e1-4275-aa55-24b84111be91">서비스의 고급 설정 대화 상자</related>
        <related type="Article" href="https://msdn.microsoft.com/library/bb7c8950-4517-4dae-b705-b74a14059b26">연습: 클라이언트 애플리케이션 서비스 사용</related>
      </Docs>
    </Member>
  </Members>
</Type>