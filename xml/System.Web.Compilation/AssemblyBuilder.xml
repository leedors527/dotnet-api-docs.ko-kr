<Type Name="AssemblyBuilder" FullName="System.Web.Compilation.AssemblyBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="456ad81232191490a81d464eda1ece8e505731bf" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52235297" /></Metadata><TypeSignature Language="C#" Value="public class AssemblyBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AssemblyBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.AssemblyBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class AssemblyBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyBuilder" />
  <TypeSignature Language="F#" Value="type AssemblyBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ASP.NET 프로젝트 내에서 하나 이상의 가상 경로를 사용하여 어셈블리를 빌드하기 위한 컨테이너를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스를 <xref:System.Web.Compilation.AssemblyBuilder> 클래스와 함께 사용 됩니다 <xref:System.Web.Compilation.BuildProvider> 클래스 메서드를 컴파일된 어셈블리에 하나 이상의 파일을 빌드해야 합니다.  
  
 합니다 <xref:System.Web.Compilation.BuildProvider> 개별 파일에 대 한 빌드 기능을 정의 하는 클래스 및 <xref:System.Web.Compilation.AssemblyBuilder> 클래스는 각 소스 코드를 결합 <xref:System.Web.Compilation.BuildProvider> 인스턴스를 단일 어셈블리로 합니다. ASP.NET 빌드 환경을 <xref:System.Web.Compilation.AssemblyBuilder> 개체를 <xref:System.Web.Compilation.BuildProvider> 메서드 하나 이상의 파일에서 어셈블리를 빌드할 때 하므로 각 <xref:System.Web.Compilation.BuildProvider> 인스턴스에서 해당 파일을 전체 어셈블리에 대 한 소스 코드를 제공할 수입니다.  
  
 ASP.NET 빌드 환경의 언어 및 컴파일러에 따라 프로젝트 내의 파일에 필요한 결정을 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=nameWithType> 속성입니다. 빌드 환경 그룹 해당 컴파일러 설정에 따라 파일과 동일한 컴파일러를 필요로 하는 파일에서 어셈블리를 빌드합니다.  
  
 합니다 <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A> 속성을 나타냅니다는 <xref:System.CodeDom.Compiler.CodeDomProvider> 구현은 소스 코드에서 어셈블리를 컴파일하려면는 ASP.NET 빌드 환경의 각 제공한 <xref:System.Web.Compilation.BuildProvider> 구현 합니다.  
  
 A <xref:System.Web.Compilation.BuildProvider> 사용 하 여 CodeDOM 그래프의 형태로 소스 코드를 적용 하는 개체는 <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> 메서드. A <xref:System.Web.Compilation.BuildProvider> 사용 하는 물리적 파일에 저장 된 소스 코드를 적용 하는 개체는 <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> 메서드.  
  
 각 <xref:System.Web.Compilation.BuildProvider> 개체가 사용 하 여 적절 한 소스 코드 기여 <xref:System.Web.Compilation.AssemblyBuilder> 메서드는 ASP.NET 빌드 환경 사용의 <xref:System.Web.Compilation.AssemblyBuilder> 수집된 된 소스 코드를 어셈블리로 컴파일하는 데 클래스.  
  
   
  
## Examples  
 다음 코드 예제에서는 추상에서 상속 하는 간단한 빌드 공급자 구현 <xref:System.Web.Compilation.BuildProvider> 기본 클래스입니다. 빌드 공급자를 재정의 합니다 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, 및 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 기본 클래스의 멤버입니다.  
  
 에 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 사용 하 여 어셈블리 컴파일 생성된 된 코드를 추가 하는 메서드 구현 하는 빌드 공급자를 <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> 메서드. 예제 구현의 포함 되지 않습니다는 `SampleClassGenerator` 클래스입니다. 자세한 내용은 <xref:System.CodeDom.CodeCompileUnit>을 참조하세요.  
  
 [!code-csharp[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/CS/samplebuildprovider.cs#2)]
 [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/VB/samplebuildprovider.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.BuildProvider" />
    <altmember cref="T:System.Web.Compilation.BuildManager" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
  </Docs>
  <Members>
    <Member MemberName="AddAssemblyReference">
      <MemberSignature Language="C#" Value="public void AddAssemblyReference (System.Reflection.Assembly a);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAssemblyReference(class System.Reflection.Assembly a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAssemblyReference (a As Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAssemblyReference(System::Reflection::Assembly ^ a);" />
      <MemberSignature Language="F#" Value="member this.AddAssemblyReference : System.Reflection.Assembly -&gt; unit" Usage="assemblyBuilder.AddAssemblyReference a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="a">어셈블리 컴파일에 포함된 소스 파일이나 코드 컴파일 단위에서 참조하는 어셈블리입니다.</param>
        <summary>파일에 대해 생성된 소스 코드에서 참조하는 어셈블리를 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.Compilation.BuildProvider> 구현을 사용 하는 <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> 입력된 어셈블리 내의 형식을 참조 하는 소스 코드를 생성할 때 메서드.  
  
 ASP.NET 빌드 환경에서 빌드 공급자를 통해 참조 어셈블리의 기본 컬렉션을 <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A?displayProperty=nameWithType> 속성입니다. 빌드 공급자를 사용 하 여 추가 어셈블리를 추가 하는 빌드 공급자 추가 어셈블리를 참조 하는 소스 코드를 생성할 경우는 <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> 메서드. ASP.NET 빌드 환경의 외부 형식 참조 어셈블리를 모두에서 추가 사용 하 여 어셈블리 컴파일 중 빌드 공급자를 참조할 수 있는 어셈블리의 기본 컬렉션을 확인 합니다.  
  
 일반적으로 <xref:System.Web.Compilation.BuildProvider> 소스 코드를 추가 하는 개체를 <xref:System.Web.Compilation.AssemblyBuilder> 개체는 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 메서드. 빌드 공급자 외부 형식을 사용 하는 소스 코드를 생성 하는 경우 빌드 공급자를 사용 하 여 형식의 어셈블리를 추가 하는 <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A?displayProperty=nameWithType> 메서드.  
  
 사용 된 <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> 에서 생성 된 소스 코드에 필요한 참조 어셈블리를 추가 하는 방법을 <xref:System.Web.Compilation.BuildProvider> 특정 파일 형식에 대 한 인스턴스. 사용 된 [assemblies 요소 (ASP.NET 설정 스키마) 컴파일에](https://msdn.microsoft.com/library/3811c448-af1c-498d-be2b-6ed2634c51e9) 프로젝트에서 여러 파일 형식에서 참조 어셈블리를 구성 하는 구성 요소입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      </Docs>
    </Member>
    <Member MemberName="AddCodeCompileUnit">
      <MemberSignature Language="C#" Value="public void AddCodeCompileUnit (System.Web.Compilation.BuildProvider buildProvider, System.CodeDom.CodeCompileUnit compileUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCodeCompileUnit(class System.Web.Compilation.BuildProvider buildProvider, class System.CodeDom.CodeCompileUnit compileUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCodeCompileUnit(System::Web::Compilation::BuildProvider ^ buildProvider, System::CodeDom::CodeCompileUnit ^ compileUnit);" />
      <MemberSignature Language="F#" Value="member this.AddCodeCompileUnit : System.Web.Compilation.BuildProvider * System.CodeDom.CodeCompileUnit -&gt; unit" Usage="assemblyBuilder.AddCodeCompileUnit (buildProvider, compileUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="buildProvider"><paramref name="compileUnit" />을 생성하는 빌드 공급자입니다.</param>
        <param name="compileUnit">어셈블리 컴파일에 포함할 코드 컴파일 단위입니다.</param>
        <summary>CodeDOM 그래프 형식으로 어셈블리에 대한 소스 코드를 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.Compilation.BuildProvider> 구현 호출 합니다 <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> 메서드 CodeDOM 그래프에 대 한 가상 경로 생성할 때. 소스 코드를 사용 하 여 추가 <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> 어셈블리 컴파일에 포함 됩니다.  
  
 일반적으로 빌드 공급자의 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 메서드 구현 읽기 합니다 <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> 속성 내용을 구문 분석 및 지정 된 생성된 된 소스 코드에 추가한 <xref:System.Web.Compilation.AssemblyBuilder> 개체입니다. 빌드 공급자가 사용 하는 <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> CodeDOM 그래프와 어셈블리에 소스 코드를 추가 하는 방법. 또는 빌드 공급자를 사용할 수는 <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> 어셈블리에 물리적 파일로 소스 코드를 추가 하는 방법입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
      </Docs>
    </Member>
    <Member MemberName="CodeDomProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CodeDomProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeDomProvider CodeDomProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.AssemblyBuilder.CodeDomProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeDomProvider As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::CodeDomProvider ^ CodeDomProvider { System::CodeDom::Compiler::CodeDomProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeDomProvider : System.CodeDom.Compiler.CodeDomProvider" Usage="System.Web.Compilation.AssemblyBuilder.CodeDomProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>소스 코드를 어셈블리로 빌드하는 데 사용되는 컴파일러를 가져옵니다.</summary>
        <value>각 빌드 공급자가 적용한 소스 코드를 어셈블리로 컴파일하기 위해 사용되는 읽기 전용 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 구현입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A> 속성을 나타냅니다는 <xref:System.CodeDom.Compiler.CodeDomProvider?displayProperty=nameWithType> 구현은 소스 코드에서 어셈블리를 컴파일하려면는 ASP.NET 빌드 환경의 각 제공한 <xref:System.Web.Compilation.BuildProvider> 구현 합니다.  
  
 ASP.NET 빌드 환경의 언어 및 컴파일러에 따라 프로젝트 내의 파일에 필요한 결정을 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=nameWithType> 속성입니다. 빌드 환경 그룹 해당 컴파일러 설정에 따라 파일과 동일한 컴파일러를 필요로 하는 파일에서 어셈블리를 빌드합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="T:Microsoft.VisualBasic.VBCodeProvider" />
        <altmember cref="T:Microsoft.CSharp.CSharpCodeProvider" />
      </Docs>
    </Member>
    <Member MemberName="CreateCodeFile">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter CreateCodeFile (System.Web.Compilation.BuildProvider buildProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.TextWriter CreateCodeFile(class System.Web.Compilation.BuildProvider buildProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::TextWriter ^ CreateCodeFile(System::Web::Compilation::BuildProvider ^ buildProvider);" />
      <MemberSignature Language="F#" Value="member this.CreateCodeFile : System.Web.Compilation.BuildProvider -&gt; System.IO.TextWriter" Usage="assemblyBuilder.CreateCodeFile buildProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
      </Parameters>
      <Docs>
        <param name="buildProvider">코드 소스 파일을 생성하는 빌드 공급자입니다.</param>
        <summary>빌드 공급자에서 임시 소스 파일을 만들고 어셈블리 컴파일에 소스 파일을 포함할 수 있도록 합니다.</summary>
        <returns>임시 파일에 소스 코드를 쓰는 데 사용할 수 있는 열려 있는 <see cref="T:System.IO.TextWriter" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.Compilation.BuildProvider> 구현 호출 합니다 <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> 메서드는 가상 경로 대 한 소스 파일을 생성 하는 경우. 소스 코드를 사용 하 여 추가 <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> 어셈블리 컴파일에 포함 됩니다.  
  
 일반적으로 빌드 공급자 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 메서드 구현 읽기는 <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> 속성 내용을 구문 분석 및 지정 된 생성된 된 소스 코드에 추가한 <xref:System.Web.Compilation.AssemblyBuilder> 개체입니다. 빌드 공급자가 사용 하 여 <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> 어셈블리에 물리적 파일로 소스 코드를 추가 하는 방법입니다. 또는 빌드 공급자를 사용할 수는 <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> CodeDOM 그래프와 어셈블리에 소스 코드를 추가 하는 방법입니다.  
  
 호출한 후 <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>, 빌드 공급자 쓰기는 원본 파일 내용을 사용 하 여 반환 된 <xref:System.IO.TextWriter> 개체입니다. 소스 파일을 작성 한 후 합니다 <xref:System.Web.Compilation.BuildProvider> 개체를 사용 해야 합니다는 <xref:System.IO.TextWriter.Close%2A> 닫는 메서드를는 <xref:System.IO.TextWriter> 개체와 연결 된 시스템 리소스를 해제 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 추상에서 상속 하는 간단한 빌드 공급자 구현 <xref:System.Web.Compilation.BuildProvider> 기본 클래스입니다. 빌드 공급자를 재정의 합니다 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, 및 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 기본 클래스의 멤버입니다.  
  
 에 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> 사용 하 여 어셈블리 컴파일 생성된 된 코드를 추가 하는 메서드 구현 하는 빌드 공급자를 <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> 메서드. 예제 구현의 포함 되지 않습니다는 `SampleClassGenerator` 클래스입니다. 자세한 내용은 <xref:System.CodeDom.CodeCompileUnit>을 참조하세요.  
  
 [!code-csharp[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/CS/samplebuildprovider.cs#2)]
 [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation_SampleBuildProvider/VB/samplebuildprovider.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)" />
      </Docs>
    </Member>
    <Member MemberName="CreateEmbeddedResource">
      <MemberSignature Language="C#" Value="public System.IO.Stream CreateEmbeddedResource (System.Web.Compilation.BuildProvider buildProvider, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream CreateEmbeddedResource(class System.Web.Compilation.BuildProvider buildProvider, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ CreateEmbeddedResource(System::Web::Compilation::BuildProvider ^ buildProvider, System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.CreateEmbeddedResource : System.Web.Compilation.BuildProvider * string -&gt; System.IO.Stream" Usage="assemblyBuilder.CreateEmbeddedResource (buildProvider, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buildProvider" Type="System.Web.Compilation.BuildProvider" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buildProvider">리소스를 생성하는 빌드 공급자입니다.</param>
        <param name="name">만들 리소스 파일의 이름입니다.</param>
        <summary>빌드 공급자가 어셈블리 컴파일에 포함할 리소스 파일을 만들 수 있도록 합니다.</summary>
        <returns>어셈블리 컴파일에 포함되는 리소스를 쓰는 데 사용할 수 있는 열려 있는 <see cref="T:System.IO.Stream" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출한 후 합니다 <xref:System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource%2A> 메서드를 <xref:System.Web.Compilation.BuildProvider> 개체 리소스를 사용 하 여 반환 된의 파일 내용을 씁니다 <xref:System.IO.Stream> 개체입니다. 예를 들어 빌드 공급자를 사용 하 여 리소스를 작성할 수는 <xref:System.Resources.ResourceWriter> 개체입니다. 리소스 파일을 작성 한 후 빌드 공급자를 사용 해야 합니다 <xref:System.IO.Stream.Close%2A> 닫는 메서드를는 <xref:System.IO.Stream> 개체와 연결 된 시스템 리소스를 해제 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="name" />이 유효한 파일 이름이 아닙니다.</exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Resources.ResourceWriter" />
      </Docs>
    </Member>
    <Member MemberName="GenerateTypeFactory">
      <MemberSignature Language="C#" Value="public void GenerateTypeFactory (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GenerateTypeFactory(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GenerateTypeFactory (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GenerateTypeFactory(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.GenerateTypeFactory : string -&gt; unit" Usage="assemblyBuilder.GenerateTypeFactory typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">생성할 형식의 이름입니다.</param>
        <summary>형식에 대한 빠른 개체 팩터리 템플릿을 컴파일된 어셈블리에 삽입합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.Compilation.BuildProvider> 구현 호출 합니다 <xref:System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory%2A> 자주 만드는 형식 인스턴스에 대 한 성능을 최적화 하는 방법입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      </Docs>
    </Member>
    <Member MemberName="GetTempFilePhysicalPath">
      <MemberSignature Language="C#" Value="public string GetTempFilePhysicalPath (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTempFilePhysicalPath(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTempFilePhysicalPath (extension As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTempFilePhysicalPath(System::String ^ extension);" />
      <MemberSignature Language="F#" Value="member this.GetTempFilePhysicalPath : string -&gt; string" Usage="assemblyBuilder.GetTempFilePhysicalPath extension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">임시 파일에 사용할 파일 확장명입니다.</param>
        <summary>임시 파일 경로를 생성합니다.</summary>
        <returns>임시 파일의 경로입니다. 지정한 파일 확장명이 포함됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.Compilation.BuildProvider> 구현 호출 합니다 <xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A> 어셈블리가 컴파일된 후 자동으로 삭제 되는 임시 파일 경로 가져올 방법입니다.  
  
 <xref:System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath%2A> 메서드 고유한 임시 파일 경로 생성 하지만 파일을 만들지는 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.CodeDom.Compiler.TempFileCollection" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerParameters.TempFiles" />
        <altmember cref="P:System.Web.Compilation.CompilerType.CompilerParameters" />
      </Docs>
    </Member>
  </Members>
</Type>