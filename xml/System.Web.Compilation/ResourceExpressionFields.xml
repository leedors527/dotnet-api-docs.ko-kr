<Type Name="ResourceExpressionFields" FullName="System.Web.Compilation.ResourceExpressionFields">
  <Metadata><Meta Name="ms.openlocfilehash" Value="30c28505ca68a7f3d597a8a144b503f7ca9296af" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37547722" /></Metadata><TypeSignature Language="C#" Value="public sealed class ResourceExpressionFields" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ResourceExpressionFields extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ResourceExpressionFields" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ResourceExpressionFields" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceExpressionFields sealed" />
  <TypeSignature Language="F#" Value="type ResourceExpressionFields = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>구문 분석된 리소스 식의 필드를 포함합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 리소스 식에 포함 된 값을 구문 분석 되 고의 인스턴스에 저장 된 페이지를 구문 분석할 때의 <xref:System.Web.Compilation.ResourceExpressionFields> 클래스입니다. 이렇게 <xref:System.Web.Compilation.ResourceExpressionFields> 개체에는 두 개의 필드가 포함 되어 있습니다. <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A> 고 <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A>입니다. 이러한 필드에는 명시적 리소스 식의 값에서 그려집니다 (`<%$ Resources: ClassKey, ResourceKey %>`) 또는 암시적 (`meta:resourcekey="ResourceKey"`) 형식입니다.  
  
 <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A> 리소스 파일에 매핑되는 리소스의 클래스 이름을 식별 합니다. 예를 들어 Financial.resx, 또는 Financial.en GB.resx 같은 지역화 된 버전 라는 리소스 파일을 참조 하려면 리소스 식으로 표시 됩니다 `<%$ Resources: Financial, ResourceKey %>`합니다. 구문 분석 후는 <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A> 속성 값으로 "Financial"를 반환 합니다.  
  
 <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A> 속성 파일에서 검색할 특정 키/값 쌍을 식별 합니다. Financial.resx 파일 이라고 하는 키를 포함 하는 경우 `Currency`, 리소스 식을 사용 하 여 값을 지정할 수 있음을 `<%$ Resources: Financial, Currency %>`합니다. 구문 분석 후는 <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A> 속성 값으로 "Currency"를 반환 합니다.  
  
 리소스 식을 통해 구문 분석 되는 <xref:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression%2A> 메서드.  
  
> [!CAUTION]
>  중요 한 정보를 리소스 파일에 저장 되어야 합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
  </Docs>
  <Members>
    <Member MemberName="ClassKey">
      <MemberSignature Language="C#" Value="public string ClassKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClassKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClassKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClassKey { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClassKey : string" Usage="System.Web.Compilation.ResourceExpressionFields.ClassKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>구문 분석된 리소스 식에 대한 클래스 키를 가져옵니다.</summary>
        <value>클래스 키가 들어 있는 <see cref="T:System.String" />이고, 클래스 키가 설정되지 않은 경우 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 구문 분석 된 리소스 식에 대 한 클래스 키를 반환합니다. 클래스 키 리소스 파일의 이름을 나타내고 형식의 식에 쉼표 (,) 하기 전에 지정 된 값은 `<%$ Resources: [Namespace.]ClassKey, ResourceKey $>`합니다. 리소스 클래스에 대 한 네임 스페이스 값 선택 사항입니다. 네임 스페이스 및 클래스 키에서 반환 됩니다 네임 스페이스를 제공 하는 경우는 <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A> 속성입니다. 클래스 키에는 공백을 포함할 수 없습니다 또는 더블 바이트 문자 집합 (DBCS).  
  
 리소스 식이 Financial.resx 또는 Financial.en GB.resx 같은 지역화 된 버전 라는 리소스 파일을 참조 하려면 포함 <`%$ Resources: Financial, ResourceKey %>`합니다. 구문 분석 후는 <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A> 속성 값으로 "Financial"를 반환 합니다.  
  
> [!CAUTION]
>  중요 한 정보를 리소스 파일에 저장 되어야 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
      </Docs>
    </Member>
    <Member MemberName="ResourceKey">
      <MemberSignature Language="C#" Value="public string ResourceKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResourceKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResourceKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResourceKey { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ResourceKey : string" Usage="System.Web.Compilation.ResourceExpressionFields.ResourceKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>구문 분석된 리소스 식에 대한 리소스 키를 가져옵니다.</summary>
        <value>리소스 키가 들어 있는 <see cref="T:System.String" />이고, 리소스 키가 설정되지 않은 경우 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 구문 분석 된 리소스 식에 대 한 리소스 키를 반환합니다. 리소스 키 형식의 식에 쉼표 (,) 뒤에 지정 된 값인 `<%$ Resources: ClassKey, ResourceKey %>`합니다. <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A> 클래스 키에 매핑된 리소스 파일 내에서 특정 키/값 쌍을 식별 하는 속성입니다. 예를 들어, 라는 파일 Financial.resx 있으면 라는 키 `Currency`, 리소스 식을 사용 하 여 값을 지정할 수 있음을 `<%$ Resources: Financial, Currency %>`합니다. 구문 분석 후는 <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A> 속성 값으로 "Currency"를 반환 합니다.  
  
> [!CAUTION]
>  중요 한 정보를 리소스 파일에 저장 되어야 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
      </Docs>
    </Member>
  </Members>
</Type>