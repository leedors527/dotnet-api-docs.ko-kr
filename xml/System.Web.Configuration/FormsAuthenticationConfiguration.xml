<Type Name="FormsAuthenticationConfiguration" FullName="System.Web.Configuration.FormsAuthenticationConfiguration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="898b8b46148a7c3d617f7d16d740356cfa142178" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55306381" /></Metadata><TypeSignature Language="C#" Value="public sealed class FormsAuthenticationConfiguration : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed FormsAuthenticationConfiguration extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.FormsAuthenticationConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FormsAuthenticationConfiguration&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormsAuthenticationConfiguration sealed : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type FormsAuthenticationConfiguration = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Web.Configuration.AuthenticationMode" /> 폼 형식을 사용하도록 ASP.NET 애플리케이션을 구성합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Configuration.FormsAuthenticationConfiguration> 클래스는 프로그래밍 방식으로 액세스 하 고 수정 하는 방법을 제공 합니다 `forms` 구성 요소의 `authentication` 섹션입니다.  
  
 이 형식을 포함 하는 그룹의 일부인 합니다 <xref:System.Web.Configuration.FormsAuthenticationCredentials>는 <xref:System.Web.Configuration.FormsAuthenticationUserCollection>, 및 <xref:System.Web.Configuration.FormsAuthenticationUser> 형식입니다. 컬렉션 형식이 아닌 형식 내부 구성 태그를 직접 영향을 줍니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.Configuration.FormsAuthenticationConfiguration> section 속성으로 정의 된 제한에 따라 구성 파일의 관련된 섹션에 정보를 작성할 수 있습니다 <xref:System.Configuration.SectionInformation.AllowDefinition%2A> 값인 <xref:System.Configuration.ConfigurationAllowDefinition.MachineToApplication>합니다. 계층에서 허용 되지 않습니다 수준에서 구성 파일에 쓰려고 시도 파서에 의해 생성 된 오류 메시지가 발생 합니다. 그러나 계층의 모든 수준에서 구성 정보를 읽을이 클래스를 사용할 수 있습니다. 안정성과 확장성을 위해 사용자의 자격 증명을 유지 하려면 데이터베이스와 같은 외부 저장소를 사용 하는 것이 좋습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 가져오는 방법을 보여 줍니다는 <xref:System.Web.Configuration.FormsAuthenticationConfiguration> 기존 웹 애플리케이션의 구성 파일에서 개체입니다. 해당 멤버에 액세스 하려면이 개체를 사용할 수 있습니다. 구성 파일에는 다음과 비슷한 설정이 포함 됩니다.  
  
 **참고** 사용 하는 경우는 `credentials` 섹션에서 설명 하는 지침을 따라야 합니다 [ASP.NET 인증](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100))합니다. 확장성 및 향상 된 보안에 대 한 외부 데이터베이스를 사용 하 여 사용자의 자격 증명을 저장 하는 것이 좋습니다. 보안 된 ASP.NET을 구축 하는 방법에 대 한 자세한 내용은 애플리케이션 검색은 Microsoft MSDN 웹 사이트 (msdn.microsoft.com) "보안 ASP.NET 애플리케이션" 및 "빌드 보안 ASP.NET 애플리케이션: 인증, 권한 부여 및 보안 통신 합니다. "  
  
```  
<authentication mode="Forms">  
  <forms name="MyAppCookie" loginUrl="login.aspx"  
    defaultUrl="default.aspx"  
    protection="Encryption" timeout="5" path="aspnetTest"  
    slidingExpiration="false"  
    cookieless="UseCookies" domain="domainName">  
    <credentials passwordFormat="SHA1">  
      <user name="aspnetuser1"  
        password="5BAA61E4C9B93F3F0682250B6CF8331B7EE68FD8"/>  
       <user name="aspnetuser2"  
         password="E38AD214943DAAD1D64C102FAEC29DE4AFE9DA3D"/>  
    </credentials>            
  </forms>  
</authentication>   
```  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.cs#1)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100)">ASP.NET 인증</related>
    <related type="Article" href="https://msdn.microsoft.com/library/77e21ba2-bad1-4967-a8ec-74942dea7e47">폼 인증 공급자</related>
    <related type="Article" href="https://msdn.microsoft.com/library/99e2f9e8-5b97-4a4d-a4ed-5f93276053b7">애플리케이션에서 폼 인증</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormsAuthenticationConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.FormsAuthenticationConfiguration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormsAuthenticationConfiguration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Configuration.FormsAuthenticationConfiguration" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에는 만드는 방법을 보여 줍니다는 <xref:System.Web.Configuration.FormsAuthenticationConfiguration> 개체입니다.  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.cs#2)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cookieless">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieMode Cookieless { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.HttpCookieMode Cookieless" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.Cookieless" />
      <MemberSignature Language="VB.NET" Value="Public Property Cookieless As HttpCookieMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookieMode Cookieless { System::Web::HttpCookieMode get(); void set(System::Web::HttpCookieMode value); };" />
      <MemberSignature Language="F#" Value="member this.Cookieless : System.Web.HttpCookieMode with get, set" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.Cookieless" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("cookieless", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>폼 기반 인증에 쿠키를 사용할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.HttpCookieMode" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Web.HttpCookieMode.UseDeviceProfile" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.Cookieless%2A> 속성 폼 기반 인증 사용자 정보를 교환 하는 쿠키를 사용할지 여부를 정의 합니다.  
  
   
  
## Examples  
 다음 코드 예제에 액세스 하는 방법에 설명 합니다 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.Cookieless%2A> 속성입니다. 코드 예제에서는 참조는 <xref:System.Web.Configuration.FormsAuthenticationConfiguration> 클래스 항목의 섹션을 가져오는 방법을 알아봅니다.  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.cs#5)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.FormsAuthenticationConfiguration.Protection" />
        <related type="Article" href="https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100)">ASP.NET 인증</related>
        <related type="Article" href="https://msdn.microsoft.com/library/77e21ba2-bad1-4967-a8ec-74942dea7e47">폼 인증 공급자</related>
      </Docs>
    </Member>
    <Member MemberName="CookieSameSite">
      <MemberSignature Language="C#" Value="public System.Web.SameSiteMode CookieSameSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.SameSiteMode CookieSameSite" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.CookieSameSite" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieSameSite As SameSiteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SameSiteMode CookieSameSite { System::Web::SameSiteMode get(); void set(System::Web::SameSiteMode value); };" />
      <MemberSignature Language="F#" Value="member this.CookieSameSite : System.Web.SameSiteMode with get, set" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.CookieSameSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("cookieSameSite")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.SameSiteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>쿠키의 SameSite 특성에 대한 값을 가져오거나 설정합니다.</summary>
        <value>쿠키의 적용 모드를 나타내는 열거형 값 중 하나입니다. 애플리케이션의 대상이 .NET Framework 버전 4.7.2 이상인 경우에는 기본값이 <see cref="F:System.Web.SameSiteMode.Lax" />이고, 그렇지 않으면 기본값이 <see cref="F:System.Web.SameSiteMode.None" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.FormsAuthenticationCredentials Credentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.FormsAuthenticationCredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Credentials As FormsAuthenticationCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::FormsAuthenticationCredentials ^ Credentials { System::Web::Configuration::FormsAuthenticationCredentials ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Web.Configuration.FormsAuthenticationCredentials" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("credentials")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.FormsAuthenticationCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 이름과 암호가 포함된 <see cref="T:System.Web.Configuration.FormsAuthenticationCredentials" /> 컬렉션을 가져옵니다.</summary>
        <value>사용자 이름과 암호가 포함된 <see cref="T:System.Web.Configuration.FormsAuthenticationCredentials" /> 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.Credentials%2A> 속성의 사용자 이름 및 폼 기반 인증 중에 사용할 암호를 가져옵니다.  
  
> [!NOTE]
>  보안이 필요한 경우 사용자 이름 및 암호를 저장 하는 다른 방법을 사용 해야 예를 들어 데이터베이스에 저장 합니다. 이 컬렉션을 사용 하려는 경우 제공된 된 암호화 기능을 사용 해야 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.Credentials%2A> 속성에 액세스하는 방법을 보여 줍니다. 코드 예제에서는 참조는 <xref:System.Web.Configuration.FormsAuthenticationConfiguration> 클래스 항목의 섹션을 가져오는 방법을 알아봅니다.  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#14](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.cs#14)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultUrl">
      <MemberSignature Language="C#" Value="public string DefaultUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.DefaultUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultUrl : string with get, set" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.DefaultUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("defaultUrl", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>기본 URL을 가져오거나 설정합니다.</summary>
        <value>인증 후 요청을 리디렉션할 URL입니다. 기본값은 default.aspx입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.DefaultUrl%2A> 반환 URL 제공 되지 않은 경우 또는 사용자가 로그인 페이지에 직접 액세스 하는 경우 사용 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에 액세스 하는 방법을 보여 줍니다는 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.DefaultUrl%2A>합니다. 코드 예제에서는 참조는 <xref:System.Web.Configuration.FormsAuthenticationConfiguration> 클래스 항목의 섹션을 가져오는 방법을 알아봅니다.  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.cs#4)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string with get, set" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("domain", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>폼 인증 쿠키와 함께 보낼 도메인 이름을 가져오거나 설정합니다.</summary>
        <value>보내는 폼 인증 쿠키의 도메인 이름입니다. 기본값은 빈 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.Domain%2A> 인증 쿠키에 사용 됩니다.  
  
 이 속성의 값은 해당 <xref:System.Web.HttpCookie.Domain%2A?displayProperty=nameWithType>합니다.  
  
 이 설정 보다 우선 합니다 `domain` 폼 인증 쿠키에 대 한 섹션의 특성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.Domain%2A> 속성에 액세스하는 방법을 보여 줍니다. 코드 예제에서는 참조는 <xref:System.Web.Configuration.FormsAuthenticationConfiguration> 클래스 항목의 섹션을 가져오는 방법을 알아봅니다.  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.cs#6)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementProperty">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationElementProperty ElementProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationElementProperty ElementProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.ElementProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ElementProperty As ConfigurationElementProperty" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationElementProperty ^ ElementProperty { System::Configuration::ConfigurationElementProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementProperty : System.Configuration.ConfigurationElementProperty" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.ElementProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationElementProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCrossAppRedirects">
      <MemberSignature Language="C#" Value="public bool EnableCrossAppRedirects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCrossAppRedirects" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.EnableCrossAppRedirects" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCrossAppRedirects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableCrossAppRedirects { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCrossAppRedirects : bool with get, set" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.EnableCrossAppRedirects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enableCrossAppRedirects", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>인증된 사용자를 다른 애플리케이션의 URL로 리디렉션할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>인증된 사용자를 다른 애플리케이션의 URL로 리디렉션할 수 있으면 true이고, 그렇지 않으면 false입니다. 기본값은 false입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.EnableCrossAppRedirects%2A> enableCrossAppRedirects 특성을 설정 하는 속성 값을 `forms` 구성의 인증 섹션의 섹션입니다.  
  
 합니다 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.EnableCrossAppRedirects%2A> 속성을 확인 합니다 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.EnableCrossAppRedirects%2A> 메서드 리디렉션 url 현재 애플리케이션에 있지 않은 경우. 하는 경우 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.EnableCrossAppRedirects%2A> 가 true 이면 다음 리디렉션 이루어집니다; 그렇지 않으면 브라우저가에 정의 된 페이지로 리디렉션됩니다는 <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> 속성입니다.  
  
> [!NOTE]
>  애플리케이션에서 리디렉션을 수행, 확인 해야 다양 한 특성을 `form` 구성 섹션은 인증된 된 애플리케이션에서 중복 됩니다. 자세한 내용 및 예제를 참조 하세요 [애플리케이션 전체에서 폼 인증](https://msdn.microsoft.com/library/99e2f9e8-5b97-4a4d-a4ed-5f93276053b7)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.EnableCrossAppRedirects%2A> 속성에 액세스하는 방법을 보여 줍니다. 코드 예제에서는 참조는 <xref:System.Web.Configuration.FormsAuthenticationConfiguration> 클래스 항목의 섹션을 가져오는 방법을 알아봅니다.  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.cs#8)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/99e2f9e8-5b97-4a4d-a4ed-5f93276053b7">애플리케이션에서 폼 인증</related>
      </Docs>
    </Member>
    <Member MemberName="LoginUrl">
      <MemberSignature Language="C#" Value="public string LoginUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LoginUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.LoginUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property LoginUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LoginUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LoginUrl : string with get, set" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.LoginUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("loginUrl", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>요청 리디렉션 URL을 가져오거나 설정합니다.</summary>
        <value>사용자 인증이 실패할 경우 요청을 리디렉션할 URL입니다. 기본값은 login.aspx입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.LoginUrl%2A> 속성에 대 한 요청이 유효한 인증 쿠키가 없는 경우 또는 사용자가 인증 되지 않은 경우 리디렉션 URL을 지정 합니다.  
  
   
  
## Examples  
 다음 코드 예제에 액세스 하는 방법을 보여 줍니다는 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.LoginUrl%2A>합니다. 코드 예제에서는 참조는 <xref:System.Web.Configuration.FormsAuthenticationConfiguration> 클래스 항목의 섹션을 가져오는 방법을 알아봅니다.  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.cs#3)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100)">ASP.NET 인증</related>
        <related type="Article" href="https://msdn.microsoft.com/library/77e21ba2-bad1-4967-a8ec-74942dea7e47">폼 인증 공급자</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("name", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>쿠키 이름을 가져오거나 설정합니다.</summary>
        <value>요청 인증에 사용할 HTTP 쿠키의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에 액세스 하는 방법을 보여 줍니다 합니다 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.Name%2A> 속성의 코드 예제를 참조 합니다 <xref:System.Web.Configuration.FormsAuthenticationConfiguration> 클래스 항목의 섹션을 가져오는 방법을 알아봅니다.  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#21](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.aspx.cs#21)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#21](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.aspx.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("path", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>쿠키 경로를 가져오거나 설정합니다.</summary>
        <value>인증에 사용할 HTTP 쿠키의 경로입니다. 기본값은 웹 응용 프로그램 루트를 나타내는 슬래시(/)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.Path%2A> 인증 쿠키가 있고 인증 쿠키와 함께 전송 되는 속성을 나타냅니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.Path%2A> 속성에 액세스하는 방법을 보여 줍니다. 코드 예제에서는 참조는 <xref:System.Web.Configuration.FormsAuthenticationConfiguration> 클래스 항목의 섹션을 가져오는 방법을 알아봅니다.  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.cs#9)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.FormsAuthenticationConfiguration.Protection" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protection">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.FormsProtectionEnum Protection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.FormsProtectionEnum Protection" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.Protection" />
      <MemberSignature Language="VB.NET" Value="Public Property Protection As FormsProtectionEnum" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::FormsProtectionEnum Protection { System::Web::Configuration::FormsProtectionEnum get(); void set(System::Web::Configuration::FormsProtectionEnum value); };" />
      <MemberSignature Language="F#" Value="member this.Protection : System.Web.Configuration.FormsProtectionEnum with get, set" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.Protection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("protection", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.FormsProtectionEnum</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>쿠키 암호화에 사용되는 암호화 형식을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.Configuration.FormsProtectionEnum" /> 열거형 값 중 하나입니다. 기본값은 <see langword="All" />입니다.  
  
 **참고** 데이터 유효성 검사와 쿠키를 보호 하는 데 암호화 하려는 경우이 속성에 대 한 기본값을 사용 해야 합니다. 이 옵션은 <see langword="machineKey" />를 기반으로 구성된 데이터 유효성 검사 알고리즘을 사용합니다. 3DES(Triple-DES)를 사용할 수 있고 키가 48바이트 이상이면 3DES가 암호화에 사용됩니다.  
  
<see cref="P:System.Web.Configuration.FormsAuthenticationConfiguration.RequireSSL" />을 <see langword="true" />로 설정하여 쿠키 보안 수준을 높일 수도 있습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.Protection%2A> 속성에 액세스하는 방법을 보여 줍니다. 코드 예제에서는 참조는 <xref:System.Web.Configuration.FormsAuthenticationConfiguration> 클래스 항목의 섹션을 가져오는 방법을 알아봅니다.  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.cs#11)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.vb#11)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100)">ASP.NET 인증</related>
      </Docs>
    </Member>
    <Member MemberName="RequireSSL">
      <MemberSignature Language="C#" Value="public bool RequireSSL { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireSSL" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.RequireSSL" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireSSL As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequireSSL { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequireSSL : bool with get, set" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.RequireSSL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("requireSSL", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SSL(Secure Sockets Layer) 연결을 사용하여 인증 정보를 전송해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>SSL 연결을 사용해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.RequireSSL%2A> 는 `true`, 웹 애플리케이션 SSL 연결을 사용 하지 않는 모든 폼 인증 요청을 거부 합니다.  
  
   
  
## Examples  
 다음 코드 예제에 액세스 하는 방법을 보여 줍니다 합니다 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.RequireSSL%2A> 속성의 코드 예제를 참조 합니다 <xref:System.Web.Configuration.FormsAuthenticationConfiguration> 클래스 항목의 섹션을 가져오는 방법을 알아봅니다.  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.cs#2)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.FormsAuthenticationConfiguration.Protection" />
      </Docs>
    </Member>
    <Member MemberName="SlidingExpiration">
      <MemberSignature Language="C#" Value="public bool SlidingExpiration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SlidingExpiration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.SlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Property SlidingExpiration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SlidingExpiration { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SlidingExpiration : bool with get, set" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.SlidingExpiration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("slidingExpiration", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>인증 상대(sliding) 만료를 가져오거나 설정합니다.</summary>
        <value>상대(sliding) 만료가 설정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.SlidingExpiration%2A> 로 설정 된 `true`시간 간격 동안 인증 쿠키의 유효 만료를 다시 설정 됩니다 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.Timeout%2A> 속성 값입니다. 이 시간 제한의 절반 만료 된 후 사용자가 방문 하는 경우 발생 합니다. 예를 들어 상대 (sliding) 만료를 사용 하 여 20 분의 만료를 설정 하는 경우 사용자 수 사이트를 방문 하 오후 2 시에 오후 2 시 20 분에 만료 되도록 설정 된 쿠키를 수신 합니다. 만료는 사용자가 오후 2 시 10 분 후 사이트를 방문 하는 경우에 업데이트 됩니다. 사용자 사이트를 방문 하면 오후 2 시 09 분 쿠키 만료 시간의 절반을 지나치지 않은 때문에 업데이트 되지 않습니다. 사용자 이면 기다리고 12 분, 오후 2 21에서 사이트를 방문 하 여 쿠키 만료 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.SlidingExpiration%2A> 속성에 액세스하는 방법을 보여 줍니다. 코드 예제에서는 참조는 <xref:System.Web.Configuration.FormsAuthenticationConfiguration> 클래스 항목의 섹션을 가져오는 방법을 알아봅니다.  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.cs#7)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TicketCompatibilityMode">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.TicketCompatibilityMode" />
      <MemberSignature Language="VB.NET" Value="Public Property TicketCompatibilityMode As TicketCompatibilityMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::TicketCompatibilityMode TicketCompatibilityMode { System::Web::Configuration::TicketCompatibilityMode get(); void set(System::Web::Configuration::TicketCompatibilityMode value); };" />
      <MemberSignature Language="F#" Value="member this.TicketCompatibilityMode : System.Web.Configuration.TicketCompatibilityMode with get, set" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.TicketCompatibilityMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("ticketCompatibilityMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.TicketCompatibilityMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>티켓 만료 날짜에 UTC(협정 세계시)를 사용할지 또는 현지 시간을 사용할지 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>티켓 만료 날짜 호환 모드입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본값은 현지 시간으로 표현 되는 <xref:System.Web.Configuration.TicketCompatibilityMode.Framework20> 열거형 값입니다.  
  
   
  
## Examples  
 <xref:System.Web.Configuration.TicketCompatibilityMode>  
  
 [인증 (ASP.NET 설정 스키마)에 대 한 forms 요소](https://msdn.microsoft.com/library/8163b8b5-ea6c-46c8-b5a9-c4c3de31c0b3)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public TimeSpan Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.FormsAuthenticationConfiguration.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Timeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : TimeSpan with get, set" Usage="System.Web.Configuration.FormsAuthenticationConfiguration.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanMinutesConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("timeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.TimeSpanValidator(MaxValueString="10675199.02:48:05.4775807", MinValueString="00:01:00")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>인증 제한 시간을 가져오거나 설정합니다.</summary>
        <value>인증이 만료되기 전까지의 시간(분)입니다. 기본값은 30분입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.FormsAuthenticationConfiguration.Timeout%2A> 속성에 액세스하는 방법을 보여 줍니다. 코드 예제에서는 참조는 <xref:System.Web.Configuration.FormsAuthenticationConfiguration> 클래스 항목의 섹션을 가져오는 방법을 알아봅니다.  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.cs#10)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.FormsAuthenticationConfiguration.SlidingExpiration" />
      </Docs>
    </Member>
  </Members>
</Type>