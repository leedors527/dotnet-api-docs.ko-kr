<Type Name="FormsProtectionEnum" FullName="System.Web.Configuration.FormsProtectionEnum">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0a256dd1b3d5d31530fde71781d6e2eeb7fc128e" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51909991" /></Metadata><TypeSignature Language="C#" Value="public enum FormsProtectionEnum" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed FormsProtectionEnum extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.FormsProtectionEnum" />
  <TypeSignature Language="VB.NET" Value="Public Enum FormsProtectionEnum" />
  <TypeSignature Language="C++ CLI" Value="public enum class FormsProtectionEnum" />
  <TypeSignature Language="F#" Value="type FormsProtectionEnum = " />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>쿠키에 사용할 암호화 형식(있는 경우)을 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 시스템에 따라 구성 된 데이터 유효성 검사 알고리즘을 사용 하 여 모든 값을 선택 하면 합니다 [machineKey 요소 (ASP.NET 설정 스키마)](https://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46) 태그입니다. 기본값인 이며 권장 값 이기도 합니다.  
  
 None을 선택 하면 쿠키는 일반 텍스트 공격을 받을 수 있습니다.  
  
 유효성 검사를 선택한 경우 쿠키를 쿠키 데이터를 사용 하 여 유효성 검사 키를 연결 하 고, 메시지 인증 코드 (MAC), 컴퓨팅, 나가는 쿠키에 MAC 추가 하 여 쿠키 유효성 검사를 사용 하 여 만들어집니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.Configuration.FormsProtectionEnum.All> 열거형입니다. 코드 예제에서는 참조는 <xref:System.Web.Configuration.FormsAuthenticationConfiguration> 클래스 항목의 섹션을 가져오는 방법을 알아봅니다.  
  
 [!code-csharp[System.Web.Configuration.FormsAuthenticationConfiguration#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/CS/formsauthenticationconfiguration.cs#11)]
 [!code-vb[System.Web.Configuration.FormsAuthenticationConfiguration#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.FormsAuthenticationConfiguration/VB/formsauthenticationconfiguration.vb#11)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.FormsAuthenticationConfiguration" />
  </Docs>
  <Members>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="All" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Configuration.FormsProtectionEnum All = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Configuration.FormsProtectionEnum.All" />
      <MemberSignature Language="VB.NET" Value="All" />
      <MemberSignature Language="C++ CLI" Value="All" />
      <MemberSignature Language="F#" Value="All = 0" Usage="System.Web.Configuration.FormsProtectionEnum.All" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.FormsProtectionEnum</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>애플리케이션에서 데이터 유효성 검사 및 암호화를 모두 사용하여 쿠키를 보호하도록 지정합니다. 이 옵션은 <see langword="machineKey" /> 요소에 기반하여 구성된 데이터 유효성 검사 알고리즘을 사용합니다. 3DES(Triple-DES)를 사용할 수 있고 키가 48바이트 이상이면 이를 사용하여 암호화합니다. <see langword="All" />은 기본값이며 권장 값이기도 합니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="Encryption">
      <MemberSignature Language="C#" Value="Encryption" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Configuration.FormsProtectionEnum Encryption = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Configuration.FormsProtectionEnum.Encryption" />
      <MemberSignature Language="VB.NET" Value="Encryption" />
      <MemberSignature Language="C++ CLI" Value="Encryption" />
      <MemberSignature Language="F#" Value="Encryption = 2" Usage="System.Web.Configuration.FormsProtectionEnum.Encryption" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.FormsProtectionEnum</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Triple-DES 또는 DES를 사용하여 쿠키가 암호화되지만 쿠키에 대한 데이터 유효성 검사는 수행되지 않도록 지정합니다. 이 방법을 사용하는 쿠키는 일반 텍스트 보안 공격을 받을 수 있습니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Configuration.FormsProtectionEnum None = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Configuration.FormsProtectionEnum.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 1" Usage="System.Web.Configuration.FormsProtectionEnum.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.FormsProtectionEnum</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>맞춤 정보를 제공하기 위해서만 쿠키를 사용하고 그에 따라 보안 요구 사항이 낮은 사이트에서만 암호화 및 유효성 검사를 모두 사용하지 않도록 지정합니다. 이 방식으로 쿠키를 사용하는 것은 좋지 않지만 .NET Framework를 사용하여 최소한의 리소스로 맞춤 정보를 사용할 수 있는 방법입니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="Validation">
      <MemberSignature Language="C#" Value="Validation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Configuration.FormsProtectionEnum Validation = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Configuration.FormsProtectionEnum.Validation" />
      <MemberSignature Language="VB.NET" Value="Validation" />
      <MemberSignature Language="C++ CLI" Value="Validation" />
      <MemberSignature Language="F#" Value="Validation = 3" Usage="System.Web.Configuration.FormsProtectionEnum.Validation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.FormsProtectionEnum</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>애플리케이션에서 유효성 검사 체계를 사용하여 암호화된 쿠키의 내용이 전송 중에 변경되지 않았는지 확인하도록 지정합니다. 쿠키는 유효성 검사 키에 쿠키 데이터를 결합하고, MAC(메시지 인증 코드)을 계산하고, MAC를 나가는 쿠키에 추가하여 만들어집니다.</summary>
      </Docs>
    </Member>
  </Members>
</Type>