<Type Name="HttpRuntimeSection" FullName="System.Web.Configuration.HttpRuntimeSection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b9058fd7bf54855443a1c737e13df9c8137ffb8b" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55328262" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpRuntimeSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HttpRuntimeSection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.HttpRuntimeSection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpRuntimeSection&#xA;Inherits ConfigurationSection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRuntimeSection sealed : System::Configuration::ConfigurationSection" />
  <TypeSignature Language="F#" Value="type HttpRuntimeSection = class&#xA;    inherit ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ASP.NET HTTP 런타임을 구성합니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.HttpRuntimeSection> ASP.NET 런타임 동작에 영향을 주는 이러한 매개 변수를 처리할 수 있습니다.  
  
 구성 파일에 의해 표시 되는 노드 참조를 `<httpRuntime>` 요소 구성 계층 구조의 모든 수준에서 사용할 수 있습니다.  
  
 <xref:System.Web.Configuration.HttpRuntimeSection> 섹션에 다음을 관리 하는 지시문이 포함 되어 있습니다.  
  
-   실행 제한 시간을 요청 합니다.  
  
-   스레드 예약 애플리케이션 수준에 대 한 지시문입니다.  
  
-   애플리케이션 큐 제한을 제어 하는 지시문입니다.  
  
-   요청 길이입니다.  
  
 단일 프로세스에서 둘 이상의 애플리케이션을 실행 하는 경우 애플리케이션 간 상대적 우선 순위를 높일 수 있도록이 섹션에서는 아래로 잠가야 합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRuntimeSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpRuntimeSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRuntimeSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>기본 설정을 사용하여 <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 만드는 방법을 보여 줍니다는 <xref:System.Web.Configuration.HttpRuntimeSection> 개체입니다.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#2)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationAllowDefinition" />
      </Docs>
    </Member>
    <Member MemberName="AllowDynamicModuleRegistration">
      <MemberSignature Language="C#" Value="public bool AllowDynamicModuleRegistration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDynamicModuleRegistration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.AllowDynamicModuleRegistration" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDynamicModuleRegistration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDynamicModuleRegistration { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDynamicModuleRegistration : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.AllowDynamicModuleRegistration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("allowDynamicModuleRegistration", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.HttpApplication.RegisterModule(System.Type)" /> 메서드 호출이 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다. 기본값은 <see langword="true" />입니다.</summary>
        <value><see cref="M:System.Web.HttpApplication.RegisterModule(System.Type)" /> 메서드 호출이 허용되면 <see langword="true" />이고, 허용되지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApartmentThreading">
      <MemberSignature Language="C#" Value="public bool ApartmentThreading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApartmentThreading" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.ApartmentThreading" />
      <MemberSignature Language="VB.NET" Value="Public Property ApartmentThreading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApartmentThreading { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ApartmentThreading : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.ApartmentThreading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("apartmentThreading", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>애플리케이션 아파트 스레딩을 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>애플리케이션 아파트 스레딩을 사용할 수 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본값은 `false`입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppRequestQueueLimit">
      <MemberSignature Language="C#" Value="public int AppRequestQueueLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AppRequestQueueLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.AppRequestQueueLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property AppRequestQueueLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AppRequestQueueLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AppRequestQueueLimit : int with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.AppRequestQueueLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("appRequestQueueLimit", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET이 애플리케이션에 대해 큐에 대기시키는 최대 요청 수를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>큐에 대기할 수 있는 최대 요청 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 가능한 충분 한 스레드 처리를 하지 않을 경우 ASP.NET 요청을 큐입니다.  
  
> [!NOTE]
>  이 설정의 제한을 초과 하면, 사용 하 여 들어오는 요청은 거부 요청 수가 큐에 대기 하는 경우는 "503-서버 사용 중" 오류입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Web.Configuration.HttpRuntimeSection.AppRequestQueueLimit%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#16](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#16)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#16](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncPreloadMode">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncPreloadMode As AsyncPreloadModeFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::AsyncPreloadModeFlags AsyncPreloadMode { System::Web::Configuration::AsyncPreloadModeFlags get(); void set(System::Web::Configuration::AsyncPreloadModeFlags value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncPreloadMode : System.Web.Configuration.AsyncPreloadModeFlags with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("asyncPreloadMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.AsyncPreloadModeFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>비동기적으로 미리 로드되는 요청 엔터티 모드를 가져오거나 설정합니다.</summary>
        <value>요청 엔터티의 모드입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성 전에 설정 해야 합니다. <xref:System.Web.RequestNotification.ExecuteRequestHandler> ASP.NET 파이프라인에서 설정 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRegexMatchTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan DefaultRegexMatchTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultRegexMatchTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.DefaultRegexMatchTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultRegexMatchTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan DefaultRegexMatchTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultRegexMatchTimeout : TimeSpan with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.DefaultRegexMatchTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("defaultRegexMatchTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>정규식이 일치를 수행하기 위해 허용되는 시간을 가져오거나 설정합니다.</summary>
        <value>정규식 일치에 허용되는 시간입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DelayNotificationTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan DelayNotificationTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DelayNotificationTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.DelayNotificationTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property DelayNotificationTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan DelayNotificationTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.DelayNotificationTimeout : TimeSpan with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.DelayNotificationTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("delayNotificationTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>변경 알림 지연을 가져오거나 설정합니다.</summary>
        <value>변경 알림 지연을 지정하는 시간(초)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정 하 여 다시 스캔 한 파일에 정보를 기록 하면 일부 바이러스 백신 애플리케이션에서 발생 한 문제를 해결할 수 있습니다는 <xref:System.Web.Configuration.HttpRuntimeSection.DelayNotificationTimeout%2A> 속성입니다.  
  
> [!NOTE]
>  문제는 바이러스 백신 검사로 인 한 파일 변경 내용을 사용자가 수행한 것과 구분할 수 없으므로 발생 합니다. 최종 결과 해당 파일은 검색 되 고 애플리케이션의 다시 시작 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Web.Configuration.HttpRuntimeSection.DelayNotificationTimeout%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#11)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enable">
      <MemberSignature Language="C#" Value="public bool Enable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enable" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.Enable" />
      <MemberSignature Language="VB.NET" Value="Public Property Enable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enable : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.Enable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enable", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>애플리케이션 도메인을 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>애플리케이션 도메인을 사용할 수 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 설정은 애플리케이션 도메인 또는 현재 노드 수준에서 해당 하는 도메인에 영향을 줍니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Web.Configuration.HttpRuntimeSection.Enable%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#14](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#14)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#14)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c6d99815-e022-4d2c-9420-1d7ab5b9d504">애플리케이션 도메인 사용</related>
      </Docs>
    </Member>
    <Member MemberName="EnableHeaderChecking">
      <MemberSignature Language="C#" Value="public bool EnableHeaderChecking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableHeaderChecking" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.EnableHeaderChecking" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableHeaderChecking As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableHeaderChecking { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableHeaderChecking : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.EnableHeaderChecking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enableHeaderChecking", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>헤더 검사를 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>헤더 검사를 사용하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 캐리지 리턴 및 줄 바꿈 문자 인코딩을 사용 하려면이 속성의 목적은 `\r` 고 `\n`, 응답 헤더에서 발견 되는 합니다.  
  
 아웃 바운드 응답 헤더, 0x1F 코드로 표시 되 고 다음 인코딩 되는 문자 및 문자 0x7F (문자 삭제). 유일한 예외는 0x09 (탭 문자) 문자는 수정 합니다.  
  
 이 인코딩 헤더에 포함 된 신뢰할 수 없는 데이터를 표시 하는 애플리케이션을 악용 하는 삽입 공격을 방지 하는 데 도움이 됩니다.  
  
> [!NOTE]
>  이 속성 (상태 코드 및 상태 설명) 자체 상태 줄에 적용 되지 않습니다 하지만 다른 헤더를 적용 해야 합니다. 하지만 모든 수준에서 설정할 수 있습니다, 컴퓨터 및 애플리케이션 수준에서이 속성은 적용할 수만 있습니다.  
  
 이 속성이 `true`, 기본값, 합니다 `\r` 또는 `\n` 응답 헤더의 문자를 인코딩된 `%0d` 및 `%0a`합니다. 동일한 헤더 줄 삽입 된 material 포함 하 여 헤더 삽입 공격을 무산이 있습니다. 이 응답 하지 못할 수도 있지만 클라이언트에 대 한 공격 벡터를 열리지 않아야 합니다. 다시 화면에 출력 데이터를 모든 상황에서 좋은 생각 하지만 신뢰할 수 없는 합니다.  
  
> [!IMPORTANT]
>  HTTP 헤더 연속 여러 줄에 걸쳐 헤더에 의존 하며 새 줄에 필요 합니다. 헤더 continuation을 사용 해야 하는 경우 설정 해야 합니다 <xref:System.Web.Configuration.HttpRuntimeSection.EnableHeaderChecking%2A> 속성을 `false`입니다. 에 있기 때문에 헤더를 보면에서 성능에 영향을 이미 올바른 검사를 수행 하는 경우이 기능을 해제 하면 애플리케이션의 성능을 향상 시킬 수 있습니다. 이 기능을 해제 하기 전에 사용자는 이미 올바른 조치를이 영역에서 해야 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Web.Configuration.HttpRuntimeSection.EnableHeaderChecking%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#20)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/985fe5d8-eb71-4024-b361-41fbdc1618d8">HTTP</related>
      </Docs>
    </Member>
    <Member MemberName="EnableKernelOutputCache">
      <MemberSignature Language="C#" Value="public bool EnableKernelOutputCache { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableKernelOutputCache" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.EnableKernelOutputCache" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableKernelOutputCache As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableKernelOutputCache { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableKernelOutputCache : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.EnableKernelOutputCache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enableKernelOutputCache", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>출력 캐싱을 사용하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>출력 캐싱을 사용하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 응답을 캐시 하려면 다음 조건을 충족 해야 합니다.  
  
-   캐싱을 명시적으로 설정 해야 페이지 지시문 또는 캐싱 API.  
  
-   캐싱 커널 취소 하는 시기를 알 수 있도록 만료 정책이 있어야 합니다.  
  
-   캐시는 모든 헤더 변수 또는 매개 변수를 사용할 수 없습니다.  
  
-   요청에는 인증이 필요 하지 해야 합니다.  
  
> [!NOTE]
>  이 속성은 인터넷 정보 서비스 (IIS) 버전 6.0 이상이 설치 된 경우에 관련 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Web.Configuration.HttpRuntimeSection.EnableKernelOutputCache%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#3)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ac11c8ea-df5d-4de8-b315-9ccf1048b0ce">ASP.NET 캐싱 기능</related>
        <related type="Article" href="https://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b">성능 개요</related>
      </Docs>
    </Member>
    <Member MemberName="EnableVersionHeader">
      <MemberSignature Language="C#" Value="public bool EnableVersionHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableVersionHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.EnableVersionHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableVersionHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableVersionHeader { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableVersionHeader : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.EnableVersionHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enableVersionHeader", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET에서 버전 헤더를 출력할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>버전 헤더의 출력을 사용할 수 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 특성은 ASP.NET 버전을 사용 하 여 확인 하려면 Visual Studio에서 사용 됩니다. 프로덕션 사이트에 필요 하지 않습니다 하 고 해제할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Web.Configuration.HttpRuntimeSection.EnableVersionHeader%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#17](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#17)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#17](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#17)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/775ad4fb-914f-453c-98ef-ce1089b6f903">어셈블리 버전 관리</related>
      </Docs>
    </Member>
    <Member MemberName="EncoderType">
      <MemberSignature Language="C#" Value="public string EncoderType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncoderType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.EncoderType" />
      <MemberSignature Language="VB.NET" Value="Public Property EncoderType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EncoderType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncoderType : string with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.EncoderType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("encoderType", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>HTML 및 URL 인코딩을 처리하는 데 사용할 수 있는 사용자 지정 형식의 이름을 가져오거나 설정합니다.</summary>
        <value>HTML 및 URL 인코딩을 처리하는 데 사용할 수 있는 형식의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET을 사용 하는 <xref:System.Web.Util.HttpEncoder> HTML 및 URL 인코딩 작업에 대 한 기본 처리기로 형식입니다.  
  
 인코딩 동작을 사용자 지정 하려면에서 상속 되는 클래스를 만들 수 있습니다는 <xref:System.Web.Util.HttpEncoder> 형식입니다. 애플리케이션에 대 한 구성 파일에서 다음 설정 합니다 <xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A> 특성을 `httpRuntime` 요소 사용자 지정 형식의 정규화 된 문자열 이름입니다. 자세한 내용은 [httpRuntime 요소 (ASP.NET 설정 스키마)](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ExecutionTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ExecutionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ExecutionTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ExecutionTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ExecutionTimeout : TimeSpan with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("executionTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.TimeSpanValidator(MaxValueString="10675199.02:48:05.4775807", MinValueString="00:00:00")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>요청에 대해 허용된 실행 시간을 가져오거나 설정합니다.</summary>
        <value>요청에 대해 허용된 실행 시간을 나타내는 <see cref="T:System.TimeSpan" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> 속성 ASP.NET에 의해 자동으로 종료 되기 전에 실행할 허용 되는 요청 하는 시간 (초). 최대 수를 나타냅니다. 기본값은 110 초입니다. 이 시간 제한 특성을 디버그 하는 경우에 적용 합니다 `<compilation>` 로 설정 된 `false`합니다.  
  
 제한 시간이 만료 되 면 예외가 발생 합니다. 이벤트 로그의 애플리케이션 폴더에서 관련된 정보를 기록할 수 있습니다. 응용 프로그램 상태 모니터링을 사용 하 여이 작업을 수행 합니다 `<healthMonitoring>` 구성 요소입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#10)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">요청 실행 시간이 실행 제한 시간에 설정된 제한을 초과했습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="FcnMode">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.FcnMode FcnMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.FcnMode FcnMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.FcnMode" />
      <MemberSignature Language="VB.NET" Value="Public Property FcnMode As FcnMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::FcnMode FcnMode { System::Web::Configuration::FcnMode get(); void set(System::Web::Configuration::FcnMode value); };" />
      <MemberSignature Language="F#" Value="member this.FcnMode : System.Web.Configuration.FcnMode with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.FcnMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("fcnMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.FcnMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>파일 변경 알림 모드를 지정하는 열거형 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.Configuration.FcnMode" /> 열거형 값입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxQueryStringLength">
      <MemberSignature Language="C#" Value="public int MaxQueryStringLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxQueryStringLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.MaxQueryStringLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxQueryStringLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxQueryStringLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxQueryStringLength : int with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.MaxQueryStringLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("maxQueryStringLength", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>HTTP 요청의 쿼리 문자열에 대한 최대 허용 길이(문자 수)를 가져오거나 설정합니다.</summary>
        <value>최대 쿼리 문자열 길이(문자 수)입니다. 기본값은 2048입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값을 <xref:System.Web.Configuration.HttpRuntimeSection.MaxQueryStringLength%2A> 속성은 정수, 0 이상입니다. ASP.NET을 반환 하는 경우 쿼리 문자열의 길이가 크기 제한을 초과는 `HTTP 400` 상태 코드 (잘못 된 요청).  
  
> [!NOTE]
>  매우 작은 값이로 웹 사이트를 사용할 수 없게 됩니다.  
  
 설정 하 여 구성 파일에서이 값을 설정할 수 있습니다 합니다 `maxQueryStringLength` 특성을 `httpRuntime` 요소입니다. 자세한 내용은 [httpRuntime 요소 (ASP.NET 설정 스키마)](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)합니다.  
  
> [!NOTE]
>  쿼리 문자열 길이 제어 하는 IIS 설정 이기도 합니다. 참조 된 `maxQueryString` 특성 [요청 제한 \<requestLimits >](http://www.iis.net/ConfigReference/system.webServer/security/requestFiltering/requestLimits)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRequestLength">
      <MemberSignature Language="C#" Value="public int MaxRequestLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxRequestLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxRequestLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxRequestLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxRequestLength : int with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxRequestLength", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>최대 요청 크기를 가져오거나 설정합니다.</summary>
        <value>최대 요청 크기(KB)입니다. 기본 크기는 4096KB(4MB)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> 속성 입력 스트림 버퍼링 임계값에 대 한 제한을 지정 합니다. 예를 들어, 대용량 파일 서버에 게시 하는 사용자에 의해 발생 하는 서비스 공격 거부를 방지 하기 위해이 한도 사용할 수 있습니다.  
  
 이 속성에 할당 된 값에 할당 된 값 보다 크거나 해야는 <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 현재를 구하는 방법 <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> 속성 값입니다.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#19](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#19)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#19](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">선택한 값이 <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold" />보다 작은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxUrlLength">
      <MemberSignature Language="C#" Value="public int MaxUrlLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxUrlLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.MaxUrlLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxUrlLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxUrlLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxUrlLength : int with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.MaxUrlLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("maxUrlLength", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>HTTP 요청의 URL에 대한 최대 허용 길이(문자 수)를 가져오거나 설정합니다.</summary>
        <value>URL의 길이(문자 수)입니다. 기본값은 260입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값을 <xref:System.Web.Configuration.HttpRuntimeSection.MaxUrlLength%2A> 속성은 정수, 0 이상입니다.  
  
> [!NOTE]
>  매우 작은 값이로 웹 사이트를 사용할 수 없게 됩니다.  
  
 하는 경우 요청 URL의 길이 (의 값인는 <xref:System.Web.HttpRequest.Path%2A> 속성) 구성된 된 크기 제한 초과, ASP.NET HTTP 400 (잘못 된 요청) 상태 코드를 반환 합니다.  
  
 설정 하 여 구성 파일에서이 값을 설정할 수 있습니다 합니다 <xref:System.Web.Configuration.HttpRuntimeSection.MaxUrlLength%2A> 특성을 `httpRuntime` 요소입니다. 자세한 내용은 [httpRuntime 요소 (ASP.NET 설정 스키마)](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxWaitChangeNotification">
      <MemberSignature Language="C#" Value="public int MaxWaitChangeNotification { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxWaitChangeNotification" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.MaxWaitChangeNotification" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxWaitChangeNotification As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxWaitChangeNotification { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxWaitChangeNotification : int with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.MaxWaitChangeNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxWaitChangeNotification", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>첫 번째 변경 알림이 발생한 후 애플리케이션 도메인이 다시 시작될 때까지의 시간 간격을 가져오거나 설정합니다.</summary>
        <value>첫 번째 변경 알림이 발생한 후 애플리케이션 도메인이 다시 시작될 때까지의 최대 시간 간격(초)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 권장 되는 값을 <xref:System.Web.Configuration.HttpRuntimeSection.MaxWaitChangeNotification%2A> 속성 배포 프로세스 중 복사를 완료 하는 시간 길이 초과 합니다.  
  
> [!NOTE]
>  콘텐츠 복사 및 배포 프로세스를 바로 뒤에 보면 캐시 나타날 수 있습니다. 이 일반적인 동작입니다. 지정한 대기 시간 경과 변경 내용이 적용 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Web.Configuration.HttpRuntimeSection.MaxWaitChangeNotification%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#4)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/app-domains/application-domains.md">애플리케이션 도메인 개요</related>
      </Docs>
    </Member>
    <Member MemberName="MinFreeThreads">
      <MemberSignature Language="C#" Value="public int MinFreeThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinFreeThreads" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property MinFreeThreads As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinFreeThreads { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinFreeThreads : int with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.MinFreeThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("minFreeThreads", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 구성 범위에 있는 리소스에 대한 요청을 처리하기 전에 해제해야 하는 최소 스레드 수를 가져오거나 설정합니다.</summary>
        <value>이 구성 범위의 요청을 처리하기 전에 CLR(공용 언어 런타임) 스레드 풀에 있는 최소 자유 스레드 수입니다. 기본값은 <c>8</c>합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A> 속성 요청을 실행 하려면 사용 가능한 스레드의 최소 수를 정의 합니다. 충분 한 수의 스레드를 사용할 수 없을 경우 요청이 큐에 대기 중인 유지 됩니다 하 고 필요한 크기의 스레드 표시 될 때까지 스레드 가용성을 정기적으로 검사 계속 됩니다. 기본값은 `8`입니다.  
  
> [!NOTE]
>  ASP.NET 요청 처리를 완료 하려면 추가 스레드를 필요로 하는 무료이 많은 스레드를 유지 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#8)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/threading/threads-and-threading.md">스레드 및 스레딩</related>
        <related type="Article" href="~/docs/standard/threading/using-threads-and-threading.md">스레드 및 스레딩 사용</related>
      </Docs>
    </Member>
    <Member MemberName="MinLocalRequestFreeThreads">
      <MemberSignature Language="C#" Value="public int MinLocalRequestFreeThreads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinLocalRequestFreeThreads" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.MinLocalRequestFreeThreads" />
      <MemberSignature Language="VB.NET" Value="Public Property MinLocalRequestFreeThreads As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinLocalRequestFreeThreads { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinLocalRequestFreeThreads : int with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.MinLocalRequestFreeThreads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("minLocalRequestFreeThreads", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>로컬 요청을 처리하는 데 필요한 최소 자유 스레드 수를 가져오거나 설정합니다.</summary>
        <value>로컬 요청에 할당된 사용 가능한 스레드의 최소 수입니다. 기본값은 4입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.HttpRuntimeSection.MinLocalRequestFreeThreads%2A> 속성 ASP.NET 유지에 사용할 수 있도록 새 로컬 요청을 실행 하는 자유 스레드 수를 정의 합니다. 의도 웹 서버에 재귀 재진입으로 교착 상태가 발생 하는 방지 하기 위해서입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Web.Configuration.HttpRuntimeSection.MinLocalRequestFreeThreads%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#5)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/threading/threads-and-threading.md">스레드 및 스레딩</related>
        <related type="Article" href="~/docs/standard/threading/using-threads-and-threading.md">스레드 및 스레딩 사용</related>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.HttpRuntimeSection.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelaxedUrlToFileSystemMapping">
      <MemberSignature Language="C#" Value="public bool RelaxedUrlToFileSystemMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RelaxedUrlToFileSystemMapping" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.RelaxedUrlToFileSystemMapping" />
      <MemberSignature Language="VB.NET" Value="Public Property RelaxedUrlToFileSystemMapping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RelaxedUrlToFileSystemMapping { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RelaxedUrlToFileSystemMapping : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.RelaxedUrlToFileSystemMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("relaxedUrlToFileSystemMapping", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>HTTP 요청의 URL이 유효한 Windows 파일 경로여야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>URL이 Windows 경로 규칙을 따를 필요가 없으면 <see langword="true" />이고, 필요가 있으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.HttpRuntimeSection.RelaxedUrlToFileSystemMapping%2A> 속성은 들어오는 HTTP 요청 URL 유효성을 검사할 하는 방법을 결정 합니다. 이 속성이 `false`, URL을 Windows 파일 시스템 경로 유효한 지 여부를 결정 하는 동일한 규칙을 사용 하 여 유효성을 검사 합니다.  
  
 설정 하 여 구성 파일에서이 값을 설정할 수 있습니다 합니다 <xref:System.Web.Configuration.HttpRuntimeSection.RelaxedUrlToFileSystemMapping%2A> 특성을 `httpRuntime` 요소입니다. 자세한 내용은 [httpRuntime 요소 (ASP.NET 설정 스키마)](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestLengthDiskThreshold">
      <MemberSignature Language="C#" Value="public int RequestLengthDiskThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RequestLengthDiskThreshold" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestLengthDiskThreshold As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RequestLengthDiskThreshold { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RequestLengthDiskThreshold : int with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("requestLengthDiskThreshold", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>입력 스트림 버퍼링 임계값을 가져오거나 설정합니다.</summary>
        <value>입력 스트림 버퍼링 임계값을 나타내는 바이트 수입니다. 기본값은 80KB입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> 속성 (바이트)에서 입력 스트림 버퍼링 임계값 제한을 지정 합니다. 해당 값 초과 하지 않아야 합니다 <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> 속성 값입니다. 요청 엔터티를이 임계값을 초과 하면 후 디스크에 투명 하 게 버퍼링 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#12)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">선택한 값이 <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" />보다 큰 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestPathInvalidCharacters">
      <MemberSignature Language="C#" Value="public string RequestPathInvalidCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestPathInvalidCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.RequestPathInvalidCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestPathInvalidCharacters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestPathInvalidCharacters { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestPathInvalidCharacters : string with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.RequestPathInvalidCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("requestPathInvalidCharacters", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>HTTP 요청의 일부인 경로에서 사용할 수 없는 잘못된 문자로 지정된 문자의 목록을 가져오거나 설정합니다.</summary>
        <value>잘못된 문자에 대한 쉼표로 구분된 목록입니다. 다음 목록에는 잘못된 문자의 기본 집합이 포함되어 있습니다. 
 <c>&lt;,&gt;,*,%,&amp;,:,\\</c></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 구성 파일에서이 값을 설정 하려면 쉼표로 구분 된 문자열의 문자를 할당할 수 있습니다 합니다 `requestPathInvalidCharacters` 특성을 `httpRuntime` 요소입니다. 자세한 내용은 [httpRuntime 요소 (ASP.NET 설정 스키마)](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestValidationMode">
      <MemberSignature Language="C#" Value="public Version RequestValidationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version RequestValidationMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.RequestValidationMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestValidationMode As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ RequestValidationMode { Version ^ get(); void set(Version ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestValidationMode : Version with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.RequestValidationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.Configuration.VersionConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("requestValidationMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>어떤 ASP.NET 버전별 유효성 검사 방법이 사용되는지 나타내는 버전 번호를 가져오거나 설정합니다.</summary>
        <value>어떤 ASP.NET 버전별 유효성 검사 방법이 사용되는지 나타내는 값입니다. 기본값은 <c>4.5</c>합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.HttpRuntimeSection.RequestValidationMode%2A> 속성 지정 어떤 ASP.NET 유효성 검사 방법이 사용 됩니다. 버전 4에서 사용 되는 버전 보다 이전 버전의 ASP.NET에서 사용 되는 알고리즘 수 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]입니다. 속성은 다음 값으로 설정할 수 있습니다.  
  
-   `4.5 (the default).` 이 모드에서는 값은 지연 로드, 즉, 읽지 요청 될 때까지 합니다.  
  
-   `4.0` <xref:System.Web.HttpRequest> 개체 내부적으로 설정 하는 모든 HTTP 요청 데이터에 액세스할 때마다 유효성 검사 요청을 트리거할 수를 나타내는 플래그입니다. 이렇게 하면 요청 유효성 검사 쿠키와 같은 데이터 트리거될을 요청 중 Url에 액세스 합니다. 요청 유효성 검사 설정을 합니다 `<pages>` 요소 (있는 경우) 또는 구성 파일에는 [@ Page](https://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) 개별 페이지 지시문이 무시 됩니다.  
  
-   `2.0`. 요청 유효성 검사는 모든 HTTP 요청이 아닌 페이지에만 사용 됩니다. 또한 요청 유효성 검사 설정 합니다 `<pages>` 요소 (있는 경우) 또는 구성 파일에는 [@ Page](https://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) 개별 페이지 지시문은 페이지 요청을 유효성 검사 결정에 사용 합니다.  

-   `0.0`. 요청 유효성 검사는 애플리케이션에 대 한 비활성화 됩니다. `0.0` ASP.NET 4.6 이상 에서만 인식 됩니다.
  
 이 속성에 할당 하는 값을 특정 버전의 ASP.NET에 맞게 유효성이 검사 되지 않습니다. 

 모든 숫자 값 작은 ASP.NET 4.5에서 및 이전 버전 보다 `4.0` (예를 들어 `3.7`를 `2.9`, 또는 `2.0`)로 해석 됩니다 `2.0`합니다. 보다 큰 숫자 `4.5` 로 해석 됩니다 `4.5`합니다.  

 모든 숫자 값 보다 큰 ASP.NET 4.6에서 이상 `0.0` 및 보다 작은 `4.0` (예를 들어 `3.7`를 `2.9`, 또는 `1.0`)로 해석 됩니다 `2.0`합니다. 보다 큰 숫자 `4.5` 로 해석 됩니다 `4.5`
  
 구성 파일에서이 값을 설정 하려면 값을 할당할 수 있습니다 합니다 `requestValidationMode` 특성을 `httpRuntime` 요소입니다. 자세한 내용은 [httpRuntime 요소 (ASP.NET 설정 스키마)](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestValidationType">
      <MemberSignature Language="C#" Value="public string RequestValidationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestValidationType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.RequestValidationType" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestValidationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestValidationType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestValidationType : string with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.RequestValidationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("requestValidationType", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>HTTP 요청의 유효성을 검사하는 데 사용되는 형식의 이름을 가져오거나 설정합니다.</summary>
        <value>요청 유효성 검사 작업을 처리하는 형식의 이름입니다. 기본값은 ASP.NET이 유효성 검사에 사용하는 <see cref="T:System.Web.Util.RequestValidator" /> 형식의 정규화된 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 요청 유효성 검사 동작을 사용자 지정 하려면에서 상속 되는 클래스를 만들 수는 <xref:System.Web.Util.RequestValidator> 형식입니다. 애플리케이션에 대 한 구성 파일에서 다음 설정 합니다 `requestValidationType` 특성을 `httpRuntime` 요소 사용자 지정 형식의 정규화 된 문자열 이름입니다. 자세한 내용은 [httpRuntime 요소 (ASP.NET 설정 스키마)](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireRootedSaveAsPath">
      <MemberSignature Language="C#" Value="public bool RequireRootedSaveAsPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireRootedSaveAsPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireRootedSaveAsPath As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequireRootedSaveAsPath { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequireRootedSaveAsPath : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("requireRootedSaveAsPath", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>파일 이름이 정규화된 실제 파일 경로여야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>파일 이름이 정규화된 실제 파일 경로여야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath%2A> 속성은 파일 이름 인수를 여부를 지정 `SaveAs` 메서드는 루 팅 된 경로 여야 합니다. ASP.NET 프로세스에는 지정된 된 위치에 파일을 만들 수 있는 권한이 있어야 합니다.  
  
 자세한 내용은 참조 메서드 정의에 저장 된 <xref:System.Configuration.Configuration> 클래스입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#7)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendCacheControlHeader">
      <MemberSignature Language="C#" Value="public bool SendCacheControlHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SendCacheControlHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property SendCacheControlHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SendCacheControlHeader { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SendCacheControlHeader : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("sendCacheControlHeader", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><c>cache-control:private</c> 헤더가 HTTP 응답의 일부로 보내지는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see langword="true" /> 경우는 <c>캐시-control: private</c> 헤더를 보낸 고, 그렇지 않으면 <see langword="false" />합니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpResponse> 클래스는 둘 다 검사 하는 <xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A?displayProperty=nameWithType> 속성 및 <xref:System.Web.Configuration.OutputCacheSection.SendCacheControlHeader%2A?displayProperty=nameWithType> 보낼지 여부를 결정 하는 속성을 `cache-control:private` HTTP 응답 헤더에에서. 두 속성 중 하나 설정 된 경우 `false`, 헤더가 전송 되지 것입니다. Cache-control 헤더 설정 하면 `private`, 다음 클라이언트는 공유 캐시에서 응답을 캐시 하지 것입니다.  
  
 에 대 한 지원 합니다 <xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A> 속성에는 <xref:System.Web.Configuration.HttpRuntimeSection> 클래스는 레거시 애플리케이션 호환성을 위해 제공 됩니다;이 속성은.NET Framework 버전 2.0에서는 사용 되지 않는 합니다. 자세한 내용은 <xref:System.Web.Configuration.OutputCacheSection> 클래스를 참조하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetReadOnly">
      <MemberSignature Language="C#" Value="protected override void SetReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpRuntimeSection.SetReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetReadOnly();" />
      <MemberSignature Language="F#" Value="override this.SetReadOnly : unit -&gt; unit" Usage="httpRuntimeSection.SetReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ShutdownTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ShutdownTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.ShutdownTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ShutdownTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ShutdownTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ShutdownTimeout : TimeSpan with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.ShutdownTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("shutdownTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>애플리케이션이 종료될 때까지 허용된 유휴 시간을 가져오거나 설정합니다.</summary>
        <value>애플리케이션이 종료될 때까지 허용된 유휴 시간을 나타내는 <see cref="T:System.TimeSpan" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.HttpRuntimeSection.ShutdownTimeout%2A> 속성 애플리케이션은 정상적으로 종료 하기 전에 시간을 나타냅니다. 기본값은 90 초입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Web.Configuration.HttpRuntimeSection.ShutdownTimeout%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#6)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetFramework">
      <MemberSignature Language="C#" Value="public string TargetFramework { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetFramework" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.TargetFramework" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetFramework As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetFramework { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetFramework : string with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.TargetFramework" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("targetFramework", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>대상 .NET Framework를 가져오거나 설정합니다.</summary>
        <value>대상 .NET Framework입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseFullyQualifiedRedirectUrl">
      <MemberSignature Language="C#" Value="public bool UseFullyQualifiedRedirectUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseFullyQualifiedRedirectUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.UseFullyQualifiedRedirectUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property UseFullyQualifiedRedirectUrl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseFullyQualifiedRedirectUrl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseFullyQualifiedRedirectUrl : bool with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.UseFullyQualifiedRedirectUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("useFullyQualifiedRedirectUrl", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>클라이언트 쪽 리디렉션이 정규화되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>클라이언트 쪽 리디렉션이 정규화되면 <see langword="true" />이고, 정규화되지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Configuration.HttpRuntimeSection.UseFullyQualifiedRedirectUrl%2A> 속성은 클라이언트 쪽 리디렉션이 정규화 되는지 여부를 나타냅니다 (형태로 http://server/path) 상대 리디렉션의 클라이언트로 전송 수 대신 여부 또는 합니다.  
  
> [!NOTE]
>  일부 브라우저에서 쿠키 없는 세션이이 값이 페이지를 로드 하는 데 문제가 있을 수 `false`입니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Web.Configuration.HttpRuntimeSection.UseFullyQualifiedRedirectUrl%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#15](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#15)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#15](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitChangeNotification">
      <MemberSignature Language="C#" Value="public int WaitChangeNotification { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WaitChangeNotification" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpRuntimeSection.WaitChangeNotification" />
      <MemberSignature Language="VB.NET" Value="Public Property WaitChangeNotification As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WaitChangeNotification { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WaitChangeNotification : int with get, set" Usage="System.Web.Configuration.HttpRuntimeSection.WaitChangeNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("waitChangeNotification", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>다음 변경 알림까지의 대기 시간을 가져오거나 설정합니다.</summary>
        <value>애플리케이션 도메인이 다시 시작되도록 트리거하는 다음 변경 알림까지의 대기 시간(초)입니다. 기본값은 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 권장 되는 값에 대 한 <xref:System.Web.Configuration.HttpRuntimeSection.WaitChangeNotification%2A> 배포 프로세스 중 복사를 완료 하는 시간 길이 초과 합니다.  
  
> [!NOTE]
>  콘텐츠를 복사한 후 즉시 보기 및 프로세스를 배포 하는 경우 캐시 된 나타날 수 있습니다. 이 일반적인 동작입니다. 지정한 대기 시간 경과 변경 내용이 적용 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Web.Configuration.HttpRuntimeSection.WaitChangeNotification%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.HttpRuntimeSection#18](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/CS/httpruntimesection.cs#18)]
 [!code-vb[System.Web.Configuration.HttpRuntimeSection#18](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection/VB/httpruntimesection.vb#18)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/app-domains/application-domains.md">애플리케이션 도메인 개요</related>
      </Docs>
    </Member>
  </Members>
</Type>