<Type Name="MachineKeySection" FullName="System.Web.Configuration.MachineKeySection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="44032c3810d14a194f6ad0121cc02b093ddfa2d1" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55396417" /></Metadata><TypeSignature Language="C#" Value="public sealed class MachineKeySection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MachineKeySection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.MachineKeySection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MachineKeySection&#xA;Inherits ConfigurationSection" />
  <TypeSignature Language="C++ CLI" Value="public ref class MachineKeySection sealed : System::Configuration::ConfigurationSection" />
  <TypeSignature Language="F#" Value="type MachineKeySection = class&#xA;    inherit ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Windows Forms 인증, 뷰 상태 확인 및 애플리케이션별 세션 상태 격리를 수행할 때 암호화, 해독 및 MAC(Message Authentication Code) 작업에 사용되는 알고리즘과 키 생성을 제어하는 구성 설정을 정의합니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Configuration.MachineKeySection> 클래스는 프로그래밍 방식으로 액세스 하 고 내용을 수정 하는 방법을 제공 합니다 `MachineKey` 구성 파일의 섹션입니다. `MachineKey` 섹션 (Machine.config) 컴퓨터 또는 애플리케이션 (Web.config) 수준에서 구성할 수 있으며 키 및 Windows Forms 인증, 뷰 상태 유효성 검사 및 세션 상태 애플리케이션에 사용 되는 알고리즘을 제어 격리 합니다. 웹 서버 (웹 팜) 네트워크에서 작동 하도록 이러한 기능에 대 한 합니다 `DecryptionKey` 및 `ValidationKey` 의 특성을 `MachineKey` 섹션으로 구성 되어야 합니다 명시적으로 동일 하 게 유효한 키 값입니다. `AutoGenerate` 로컬 컴퓨터 보호를 사용 하 여 유지 되 고 됩니다 동일한 여러 컴퓨터 간에 암호화 된 임의 암호를 사용 하기 때문에 웹 팜에 대 한 값 작동 하지 않습니다.  
  
   
  
## Examples  
 이 섹션의 예제 섹션의 구성원으로도 액세스할 수 있는 몇 가지 특성에 대해 선언적으로 값을 지정 하는 방법에 설명 합니다 <xref:System.Web.Configuration.MachineKeySection> 클래스입니다.  
  
 다음 예제에서는 구성 파일에서 선언적으로 섹션에 대 한 값을 지정 하는 방법을 보여 줍니다.  
  
```  
<system.web>  
  <machineKey validationKey="AutoGenerate,IsolateApps"   
    decryptionKey="AutoGenerate,IsolateApps"   
    validation="SHA1"/>  
</system.web>  
```  
  
 다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.Configuration.MachineKeySection> 코드에서 클래스입니다.  
  
 [!code-csharp[System.Web.Configuration.MachineKeySection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/CS/machinekeysection.cs#1)]
 [!code-vb[System.Web.Configuration.MachineKeySection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/VB/machinekeysection.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>이 구성 섹션에서 키로 지정할 수는 웹 팜 시나리오에 필요한 경우 보호 된 구성을 사용 하 여이 섹션을 암호화 하는 것이 좋습니다.</para></block>
    <altmember cref="T:System.Configuration.ConfigurationSection" />
    <related type="Article" href="https://msdn.microsoft.com/library/a211c071-cdf5-4869-8b7f-c4bec398c299">양식 인증 자격 증명</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MachineKeySection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.MachineKeySection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MachineKeySection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>기본 설정을 사용하여 <see cref="T:System.Web.Configuration.MachineKeySection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 생성자 코드에서 직접 사용할 수 없습니다. ASP.NET 구성 시스템에서 호출 됩니다. 인스턴스를 가져올 수는 <xref:System.Web.Configuration.MachineKeySection> 를 사용 하 여 클래스를 <xref:System.Configuration.Configuration.GetSection%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Configuration.MachineKeySection.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("applicationName", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>애플리케이션의 이름을 가져오거나 설정합니다.</summary>
        <value>애플리케이션의 이름입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정한 경우이 속성을 설정 해야 합니다 <xref:System.Web.Configuration.MachineKeySection.DataProtectorType%2A> 속성입니다. 속성 값이 전달 된 <xref:System.Security.Cryptography.DataProtector.Create%2A?displayProperty=nameWithType> 팩터리 메서드입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompatibilityMode">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.MachineKeyCompatibilityMode CompatibilityMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.MachineKeyCompatibilityMode CompatibilityMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.CompatibilityMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CompatibilityMode As MachineKeyCompatibilityMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::MachineKeyCompatibilityMode CompatibilityMode { System::Web::Configuration::MachineKeyCompatibilityMode get(); void set(System::Web::Configuration::MachineKeyCompatibilityMode value); };" />
      <MemberSignature Language="F#" Value="member this.CompatibilityMode : System.Web.Configuration.MachineKeyCompatibilityMode with get, set" Usage="System.Web.Configuration.MachineKeySection.CompatibilityMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("compatibilityMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyCompatibilityMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>.NET Framework 버전 2.0 서비스 팩 1 릴리스 후에 도입된 뷰 상태에 대한 업그레이드된 암호화 방법을 사용할지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
        <value>.NET Framework 2.0 SP1 릴리스 후에 도입된 암호화 방법을 사용할지 여부를 나타내는 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework의 이후 버전에서 업그레이드 된 암호화 방법을 공격자는 성공적으로 수행할 수 있는 위험을 줄이기 위해 리버스 엔지니어링을 `DecryptionKey` 값입니다. 이전 암호화 방법이 이전 버전과 호환성을 유지 하기 위해 사용할 수 있습니다.  
  
 웹 팜의 모든 서버에에서 있어야 합니다 <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A> 속성이 동일한 값으로 설정 합니다. 서버에 있는 경우 폼 인증 티켓을 읽는 다른 <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A> 티켓을 생성 하는 서버 설정, 티켓 인식 되지 않습니다.  
  
 에 대해 다음 값을 지정할 수는 <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A> 속성:  
  
-   `Framework20SP1`. 이 값은 ASP.NET 2.0 SP2 보다 이전 버전의 ASP.NET에서 사용할 수 있는 암호화 메서드는 지정 합니다. 모든 서버에 버전 2.0 SP2 이전의.NET Framework의 경우 웹 팜의 모든 서버에 대 한이 값을 사용 합니다. 애플리케이션 Web.config 파일에는 기본값입니다를 `targetFramework` 특성을 `httpRuntime` 요소는 "4.5"로 설정 합니다.  
  
-   `Framework20SP2`. 이 값은 ASP.NET는.NET Framework 2.0 SP2에서 도입 된 업그레이드 된 암호화 방법을 지정 합니다. 모든 서버에.NET Framework 2.0 SP2 또는 하나 이상의 하지만 나중에 없는.NET Framework 4.5 하는 경우 웹 팜의 모든 서버에 대 한이 값을 사용 합니다.  
  
-   `Framework45`. ASP.NET 4.5에 대 한 향상 된 암호화 적용 됩니다. 애플리케이션 Web.config 파일에는 기본값입니다를 `targetFramework` 특성을 `httpRuntime` 요소는 "4.5"로 설정 합니다.  
  
 이 속성 설정 된 경우 `Framework45`, 다음과 같은 제한 사항이 적용 됩니다.  
  
-   <xref:System.Web.Configuration.MachineKeySection.DataProtectorType%2A> 속성에 값이 있으면 <xref:System.Web.Configuration.MachineKeySection.ApplicationName%2A> 속성에도 값이 있어야 합니다. <xref:System.Security.Cryptography.DataProtector> 클래스 요구 하는 경우에 비어 있지 않은 애플리케이션 이름을 제공 합니다.  
  
-   합니다 <xref:System.Web.Configuration.MachineKeySection.Validation%2A> 해야 특성 실제 유효성 검사 알고리즘 (예: MD5, SHA1, HMACSHA256, HMACSHA384, HMACSHA512) 또는 사용자 지정 알고리즘을 해당 서브 클래스 여야 합니다 <xref:System.Security.Cryptography.KeyedHashAlgorithm> 형식입니다. 값 AES 및 3DES을 사용할 수 없습니다.  
  
-   프레임 워크는 서명 전용 페이로드를 생성 하지 않습니다. 폼 인증 티켓은 항상 수 모두 암호화 및 서명이 수행 하는 방법에 관계 없이 `protection` 특성을 `forms` 요소는 Web.config 파일에서 설정 됩니다. 보기 상태는 항상 모두 암호화 및 서명을 경우 `EnableViewStateMac` 또는 `RequireViewStateEncryption` 지정된 된 페이지에 대해 설정 됩니다.  
  
 에 설명 된 보안 업데이트의 결과로 [Microsoft 보안 공지 m s 10 070](https://docs.microsoft.com/security-updates/SecurityBulletins/2010/ms10-070), 암호화 기본 동작은 동일 합니다 `Framework20SP1` 및 `Framework20SP2` 설정 합니다. 기본 동작을 변경 하는 권장 되지 않습니다 내용은 작업을 수행 하려는 경우를 제외한 [ASP.NET에서 레거시 암호화 모드를 구성 하는 방법](https://support.microsoft.com/kb/2425938)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataProtectorType">
      <MemberSignature Language="C#" Value="public string DataProtectorType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataProtectorType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.DataProtectorType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataProtectorType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataProtectorType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataProtectorType : string with get, set" Usage="System.Web.Configuration.MachineKeySection.DataProtectorType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("dataProtectorType", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 보호자 형식의 이름을 가져오거나 설정합니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</summary>
        <value>데이터 보호자 형식의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET에 대 한 사용자 지정 데이터 보호 알고리즘을 지정 하려면 설정 합니다 <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A?displayProperty=nameWithType> 속성을 <xref:System.Web.Configuration.MachineKeyCompatibilityMode.Framework45> 이 속성에서 파생 된 클래스를 나타내는 문자열을 설정 하 고는 <xref:System.Security.Cryptography.DataProtector> 클래스입니다. 이 문자열에 해당 합니다 `providerClass` 정적에 전달 되는 매개 변수 <xref:System.Security.Cryptography.DataProtector.Create%2A?displayProperty=nameWithType> 팩터리 메서드입니다. 지정 하는 클래스를 사용해 합니다 <xref:System.Web.Security.MachineKey.Protect%2A?displayProperty=nameWithType> 하 고 <xref:System.Web.Security.MachineKey.Unprotect%2A?displayProperty=nameWithType> 메서드를 지정 하지 않은 경우에는 <xref:System.Web.Configuration.MachineKeyCompatibilityMode.Framework45> 옵션.  
  
 이 속성을 설정 하는 경우 설정 해야 합니다 <xref:System.Web.Configuration.MachineKeySection.ApplicationName%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Decryption">
      <MemberSignature Language="C#" Value="public string Decryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Decryption" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.Decryption" />
      <MemberSignature Language="VB.NET" Value="Public Property Decryption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Decryption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Decryption : string with get, set" Usage="System.Web.Configuration.MachineKeySection.Decryption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("decryption", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>폼 인증 데이터 암호화 및 암호 해독에 사용되는 암호화 알고리즘을 지정합니다.</summary>
        <value>폼 인증 데이터 암호화 및 암호 해독에 사용되는 알고리즘을 나타내는 값입니다. 뷰 상태를 암호화할 때 사용되는 알고리즘을 지정하는 방법에 대한 자세한 내용은 <see cref="P:System.Web.Configuration.MachineKeySection.Validation" /> 속성을 참조하세요. <see langword="Auto" />가 기본값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.MachineKeySection.Decryption%2A> 속성 암호 해독 값을 지원 합니다.  
  
-   `Auto`에 기본값을 결정 하도록 지정 ASP.NET 암호화 알고리즘을 사용 하 여 구성 기본 설정을 기반으로 합니다.  
  
-   `AES`를 사용 하 여 ASP.NET을 지정 하는 <xref:System.Web.Configuration.MachineKeyValidation.AES> 데이터를 암호화 하는 알고리즘입니다. `AES` 데이터를 암호화 하는 기본 알고리즘입니다.  
  
-   `3DES`를 사용 하 여 ASP.NET을 지정 하는 <xref:System.Web.Configuration.MachineKeyValidation.TripleDES> 데이터를 암호화 하는 알고리즘입니다.  
  
-   사용자 지정 알고리즘입니다.  
  
 이 속성을 선언적으로 설정할 일반적으로 `decryption` Web.config 파일의 요소는 특성입니다. 자세한 내용은 요소를 참조 하세요.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">선택한 값이 해독 값 중 하나가 아닌 경우</exception>
        <altmember cref="T:System.Web.Configuration.MachineKeyValidation" />
      </Docs>
    </Member>
    <Member MemberName="DecryptionKey">
      <MemberSignature Language="C#" Value="public string DecryptionKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DecryptionKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.DecryptionKey" />
      <MemberSignature Language="VB.NET" Value="Public Property DecryptionKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DecryptionKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DecryptionKey : string with get, set" Usage="System.Web.Configuration.MachineKeySection.DecryptionKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("decryptionKey", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 암호화 및 암호 해독에 사용되는 키 또는 키가 생성되는 프로세스를 가져오거나 설정합니다.</summary>
        <value>키 값이거나 키 생성 방법을 나타내는 값입니다. 기본값은 "AutoGenerate,IsolateApps"입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Configuration.MachineKeySection.DecryptionKey%2A> 속성 보기에 대 한 암호화 및 암호 해독, Windows Forms 인증의 경우와 같이 사용 됩니다 때 상태는 <xref:System.Web.Configuration.MachineKeySection.Validation%2A> 속성을 "3DES" 또는 "AES"로 설정 합니다.  
  
 ASP.NET 임의 키를 생성 하며 로컬 보안 기관에 저장 되도록 지정 하려면 "AutoGenerate" 옵션을 사용 합니다. "AutoGenerate" 옵션에는 기본값의 일부입니다.  
  
 "자동 생성"을 "IsolateApps" 한정자를 추가 하는 경우 <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A> 값을 ASP.NET는 각 애플리케이션을 사용 하 여 각 애플리케이션에 대 한 고유한 암호화 된 키를 생성 <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>합니다. 이것이 기본 설정입니다.  
  
 "자동 생성"을 "IsolateByAppId" 한정자를 추가 하는 경우 <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A> 값을 ASP.NET는 각 애플리케이션을 사용 하 여 각 애플리케이션에 대 한 고유한 암호화 된 키를 생성 <xref:System.Web.HttpRuntime.AppDomainAppId%2A>합니다. 두 개의 고유한 애플리케이션 가상 경로 공유 하는 경우 (아마도 해당 애플리케이션이 서로 다른 포트에서 실행 되므로)를 추가로 구별 서로이 플래그를 사용할 수 있습니다. ASP.NET 4.5에서만 "IsolateByAppId" 플래그를 인식 하지만에 관계 없이 사용할 수 있는 여 <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode?displayProperty=nameWithType> 설정 합니다.  
  
 웹 서버 (웹 팜)의 네트워크 구성을 지원 해야 할 경우 설정 된 <xref:System.Web.Configuration.MachineKeySection.DecryptionKey%2A> 일관 되 게 구성 되도록 수동으로 속성입니다. 수동으로 값을 생성 하는 방법에 대 한 자세한 합니다 `DecryptionKey` 특성을 참조 하십시오 [방법: ASP.NET 2.0에서 MachineKey 구성](https://go.microsoft.com/fwlink/?linkid=155113)합니다.  
  
 이 속성을 선언적으로 설정할 일반적으로 `DecryptionKey` Web.config 파일의 요소는 특성입니다. 자세한 내용은 요소를 참조 하세요.  
  
   
  
## Examples  
 다음 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Web.Configuration.MachineKeySection.DecryptionKey%2A> 코드를 사용 하 여 속성입니다. 이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.Configuration.MachineKeySection> 클래스입니다.  
  
 [!code-csharp[System.Web.Configuration.MachineKeySection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/CS/machinekeysection.cs#3)]
 [!code-vb[System.Web.Configuration.MachineKeySection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/VB/machinekeysection.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeySection" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.MachineKeySection.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="protected override void Reset (System.Configuration.ConfigurationElement parentElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Reset(class System.Configuration.ConfigurationElement parentElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.MachineKeySection.Reset(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Reset (parentElement As ConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Reset(System::Configuration::ConfigurationElement ^ parentElement);" />
      <MemberSignature Language="F#" Value="override this.Reset : System.Configuration.ConfigurationElement -&gt; unit" Usage="machineKeySection.Reset parentElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentElement" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="parentElement">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetReadOnly">
      <MemberSignature Language="C#" Value="protected override void SetReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.MachineKeySection.SetReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetReadOnly();" />
      <MemberSignature Language="F#" Value="override this.SetReadOnly : unit -&gt; unit" Usage="machineKeySection.SetReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validation">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.MachineKeyValidation Validation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.MachineKeyValidation Validation" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.Validation" />
      <MemberSignature Language="VB.NET" Value="Public Property Validation As MachineKeyValidation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::MachineKeyValidation Validation { System::Web::Configuration::MachineKeyValidation get(); void set(System::Web::Configuration::MachineKeyValidation value); };" />
      <MemberSignature Language="F#" Value="member this.Validation : System.Web.Configuration.MachineKeyValidation with get, set" Usage="System.Web.Configuration.MachineKeySection.Validation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.Configuration.MachineKeyValidationConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.Configuration.ConfigurationProperty("validation", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyValidation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>폼 인증 및 뷰 상태 데이터의 유효성 검사에 사용되는 해시 알고리즘을 지정합니다.</summary>
        <value>폼 인증 및 뷰 상태 데이터의 유효성 검사에 사용되는 해시 알고리즘을 나타내는 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Configuration.MachineKeySection.Validation%2A> 속성에 정의 된 암호화 알고리즘을 지원 합니다 <xref:System.Web.Configuration.MachineKeyValidation> 열거형입니다. 이 속성을 선언적으로 설정할 일반적으로 `decryption` Web.config 파일의 요소는 특성입니다. 자세한 내용은 요소를 참조 하세요.  
  
   
  
## Examples  
 다음 예제에서는 설정 하는 방법에 설명 합니다 <xref:System.Web.Configuration.MachineKeySection.Validation%2A> 코드를 사용 하 여 속성입니다. 이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.Configuration.MachineKeySection> 클래스입니다.  
  
 [!code-csharp[System.Web.Configuration.MachineKeySection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/CS/machinekeysection.cs#4)]
 [!code-vb[System.Web.Configuration.MachineKeySection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/VB/machinekeysection.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeySection" />
      </Docs>
    </Member>
    <Member MemberName="ValidationAlgorithm">
      <MemberSignature Language="C#" Value="public string ValidationAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.ValidationAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValidationAlgorithm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationAlgorithm : string with get, set" Usage="System.Web.Configuration.MachineKeySection.ValidationAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("validation", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>폼 인증 및 뷰 상태 데이터의 유효성 검사에 사용되는 알고리즘의 이름을 가져오거나 설정합니다.</summary>
        <value>미리 정의된 알고리즘의 이름 또는 사용자 지정 알고리즘의 이름이 들어 있는 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수 있는 미리 정의 된 알고리즘에 의해 정의 됩니다는 <xref:System.Web.Configuration.MachineKeyValidation> 열거형입니다. 사용자 지정 알고리즘을 사용 하려는 경우이 속성을 설정할 필요가 없습니다. 설정 된 <xref:System.Web.Configuration.MachineKeySection.Validation%2A> 속성을 사용자 지정 알고리즘의 이름입니다. 이 경우이 속성은 수으로 자동 설정 <xref:System.Web.Configuration.MachineKeyValidation.Custom>합니다.  
  
 설정할 수 있습니다는 <xref:System.Web.Configuration.MachineKeySection.ValidationAlgorithm%2A> Web.config 파일에서 선언적으로 또는 코드에서 프로그래밍 방식으로 속성입니다.  
  
 이 속성을 선언적으로 설정 하려면는 `validationAlgorithm` 구성 파일에서 요소의 특성입니다. 이 특성은 미리 정의 된 알고리즘의 또는 사용자 지정 알고리즘의 이름으로 설정할 수 있습니다. 미리 정의 된 알고리즘에 의해 정의 됩니다는 <xref:System.Web.Configuration.MachineKeyValidation> 열거형입니다. 에 지정 된 사용자 지정 알고리즘을 `validationAlgorithm` 사용 하 여 특성을 "alg:" 접두사 알고리즘의 이름 뒤에. 이 형식을 사용 하 여 사용자 지정 알고리즘을 지정 하는 경우는 <xref:System.Web.Configuration.MachineKeySection.Validation%2A> 속성이 <xref:System.Web.Configuration.MachineKeyValidation.Custom> 뒤에 오는 이름으로이 속성은 설정 및는 "alg:" 접두사입니다.  
  
 이 속성을 프로그래밍 방식으로 설정 하려면 값으로 정의 된 미리 정의 된 알고리즘 중 하나를 사용 하 여는 <xref:System.Web.Configuration.MachineKeyValidation> 열거형 또는 사용자 지정 알고리즘 이름으로이 속성을 설정 합니다. 사용자 지정 알고리즘의 이름으로이 속성을 설정 하면 설정 된 <xref:System.Web.Configuration.MachineKeySection.Validation%2A> 속성을 <xref:System.Web.Configuration.MachineKeyValidation.Custom>입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationKey">
      <MemberSignature Language="C#" Value="public string ValidationKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.ValidationKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValidationKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationKey : string with get, set" Usage="System.Web.Configuration.MachineKeySection.ValidationKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("validationKey", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>폼 인증 및 뷰 상태 데이터의 유효성 검사에 사용되는 키 또는 키가 생성되는 프로세스를 가져오거나 설정합니다.</summary>
        <value>키 값이거나 키 생성 방법을 나타내는 값입니다. 기본값은 "AutoGenerate,IsolateApps"입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A> 속성을 사용 때 `enableViewStateMAC` 는 `true` 메시지 인증 코드 (MAC) ASP.NET 뷰 상태와 변조 되었는지 여부를 결정할 수 있도록 만들려고 합니다. <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A> 속성-out-of-process를 생성 하는 또한, 애플리케이션별 세션 Id는 세션 상태 변수를 확인 하려면 애플리케이션 간에 격리 됩니다.  
  
 ASP.NET 임의 키를 생성 하며 로컬 보안 기관에 저장 되도록 지정 하려면 "AutoGenerate" 옵션을 사용 합니다. "AutoGenerate" 옵션에는 기본값의 일부입니다.  
  
 "자동 생성"을 "IsolateApps" 한정자를 추가 하는 경우 <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A> 값을 ASP.NET는 각 애플리케이션을 사용 하 여 각 애플리케이션에 대 한 고유한 암호화 된 키를 생성 <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>합니다. 이것이 기본 설정입니다.  
  
 "자동 생성"을 "IsolateByAppId" 한정자를 추가 하는 경우 <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A> 값을 ASP.NET는 각 애플리케이션을 사용 하 여 각 애플리케이션에 대 한 고유한 암호화 된 키를 생성 <xref:System.Web.HttpRuntime.AppDomainAppId%2A>합니다. 두 개의 고유한 애플리케이션 가상 경로 공유 하는 경우 (아마도 해당 애플리케이션이 서로 다른 포트에서 실행 되므로)를 추가로 구별 서로이 플래그를 사용할 수 있습니다. ASP.NET 4.5에서만 "IsolateByAppId" 플래그를 인식 하지만에 관계 없이 사용할 수 있는 여 <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode?displayProperty=nameWithType> 설정 합니다.  
  
 웹 서버 (웹 팜)의 네트워크 구성을 지원 해야 할 경우 설정 된 <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A> 일관 되 게 구성 되도록 수동으로 속성입니다. 수동으로 값을 생성 하는 방법에 대 한 자세한 합니다 `DecryptionKey` 특성을 참조 하십시오 [방법: ASP.NET 2.0에서 MachineKey 구성](https://go.microsoft.com/fwlink/?linkid=155113)합니다.  
  
 이 속성을 선언적으로 설정할 일반적으로 `validationKey` Web.config 파일의 요소는 특성입니다.  
  
   
  
## Examples  
 다음 예제에서는 설정 하는 방법의 <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A> 코드를 사용 하 여 속성입니다. 이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.Configuration.MachineKeySection> 클래스입니다.  
  
 [!code-csharp[System.Web.Configuration.MachineKeySection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/CS/machinekeysection.cs#2)]
 [!code-vb[System.Web.Configuration.MachineKeySection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/VB/machinekeysection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>