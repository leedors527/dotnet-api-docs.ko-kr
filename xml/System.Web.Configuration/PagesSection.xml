<Type Name="PagesSection" FullName="System.Web.Configuration.PagesSection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a5b6aea8b5b03e41d4c55b009a51052ac18f6ea5" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55342263" /></Metadata><TypeSignature Language="C#" Value="public sealed class PagesSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PagesSection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.PagesSection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PagesSection&#xA;Inherits ConfigurationSection" />
  <TypeSignature Language="C++ CLI" Value="public ref class PagesSection sealed : System::Configuration::ConfigurationSection" />
  <TypeSignature Language="F#" Value="type PagesSection = class&#xA;    inherit ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>이 클래스를 사용하면 구성 파일의 섹션에 프로그래밍 방식으로 액세스할 수 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.PagesSection> 클래스는 프로그래밍 방식으로 액세스 하 고 구성 파일 섹션의 콘텐츠를 수정 하는 방법을 제공 합니다. 이 구성 섹션의 구성 파일 범위에서 모든 페이지 및 컨트롤에 대해 전역적으로 특정 ASP.NET 페이지 및 컨트롤 지시문 설정 지원 합니다. 여기에를 `@ Page` 지시문을를 `@ Import` 지시문을 통해를 <xref:System.Web.Configuration.PagesSection.Namespaces%2A> 컬렉션 속성을 및 `@ Register` 지시문을 통해를 <xref:System.Web.Configuration.PagesSection.Controls%2A> 컬렉션 속성입니다. 통해 런타임 시 다른 태그 형식으로 태그 형식을 매핑하기 위한 지원 기능을 제공 합니다 <xref:System.Web.Configuration.PagesSection.TagMapping%2A> 컬렉션 속성입니다.  
  
 지시문에는 ASP.NET Web Forms 페이지 (.aspx) 및 사용자 정의 컨트롤 (.ascx) 파일을 처리할 때 페이지 및 사용자 정의 컨트롤 컴파일러에서 사용 되는 설정을 지정 합니다.  
  
   
  
## Examples  
 이 예제에서는 값의 몇 가지 특성에 대해 선언적으로 지정 하는 방법에 설명 합니다 `pages` 의 구성원으로도 액세스할 수 있는 섹션은 <xref:System.Web.Configuration.PagesSection> 클래스.  
  
 다음 구성 파일 예제 섹션에 대해 선언적으로 값을 지정 하는 방법을 보여 줍니다.  
  
```  
<system.web>  
  <pages buffer="true"   
    enableSessionState="true"   
    enableViewState="true"  
    enableViewStateMac="true"   
    autoEventWireup="true"   
    validateRequest="true"  
    asyncTimeout="45"  
    maintainScrollPositionOnPostBack = "False"  
    viewStateEncryptionMode = "Auto">  
    <namespaces>  
      <add namespace="System" />  
      <add namespace="System.Collections" />  
      <add namespace="System.Collections.Specialized" />  
      <add namespace="System.ComponentModel" />  
      <add namespace="System.Configuration" />  
      <add namespace="System.Web" />  
    </namespaces>  
    <controls>  
      <clear />  
      <remove tagPrefix="MyTags" />  
      <!-- Searches all linked assemblies for the namespace -->  
      <add tagPrefix="MyTags1" namespace=" MyNameSpace "/>  
      <!-- Uses a specified assembly -->  
      <add tagPrefix="MyTags2" namespace="MyNameSpace"   
        assembly="MyAssembly"/>  
      <!-- Uses the specified source for the user control -->  
      <add tagprefix="MyTags3" tagname="MyCtrl"       
        src="MyControl.ascx"/>  
    </controls>  
    <tagMapping>  
      <clear />  
      <add  
        tagTypeName=  
          "System.Web.UI.WebControls.WebParts.WebPartManager"  
        mappedTagTypeName=  
          "Microsoft.Sharepoint.WebPartPartManager,   
          MSPS.Web.dll, Version='2.0.0.0'"   
      />  
      <remove tagTypeName="SomeOtherNS.Class, Assemblyname" />  
    </tagMapping>  
  </pages>  
</system.web>  
```  
  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.Configuration.PagesSection> 클래스입니다.  
  
 [!code-csharp[System.Web.Configuration.PagesSection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#1)]
 [!code-vb[System.Web.Configuration.PagesSection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationSection" />
    <related type="Article" href="https://msdn.microsoft.com/library/d35d5892-07d6-4b85-a7c6-4c37ac0cd430">Web Forms 페이지에 대 한 지시문</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PagesSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.PagesSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PagesSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>기본 설정을 사용하여 <see cref="T:System.Web.Configuration.PagesSection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.PagesSection.%23ctor%2A> 생성자는 코드에서 직접 사용할 수 없습니다. ASP.NET 구성 시스템에서 호출 됩니다. 인스턴스를 가져올 수는 <xref:System.Web.Configuration.PagesSection> 를 사용 하 여 클래스를 <xref:System.Configuration.Configuration.GetSection%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan AsyncTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan AsyncTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.AsyncTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan AsyncTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncTimeout : TimeSpan with get, set" Usage="System.Web.Configuration.PagesSection.AsyncTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.TimeSpanSecondsConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("asyncTimeout", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.TimeSpanValidator(MaxValueString="10675199.02:48:05.4775807", MinValueString="00:00:00")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이지를 비동기적으로 처리하는 동안 비동기 처리기가 완료될 때까지 기다릴 시간(초)을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>페이지를 비동기적으로 처리하는 동안 비동기 처리기가 완료될 때까지 기다릴 시간(초)을 나타내는 <see cref="T:System.TimeSpan" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본값은 45 초입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="AutoEventWireup">
      <MemberSignature Language="C#" Value="public bool AutoEventWireup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoEventWireup" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.AutoEventWireup" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoEventWireup As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoEventWireup { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoEventWireup : bool with get, set" Usage="System.Web.Configuration.PagesSection.AutoEventWireup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("autoEventWireup", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET 페이지의 이벤트가 이벤트 처리 함수에 자동으로 연결되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>ASP.NET 페이지의 이벤트가 이벤트 처리 함수에 자동으로 연결되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때 <xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A> 됩니다 `true`, ASP.NET 하면 명시적으로 바인딩하는 이벤트 처리기 페이지 이벤트와 같은 필요가 없는 <xref:System.Web.UI.Control.Load>.  
  
 때 <xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A> 는 `false`, 이벤트 메서드를 명시적으로 바인딩해야 합니다. 예를 들어 있는 경우를 `Page_Load` 페이지에 대 한 코드의 메서드에 대 한 응답에서 메서드 호출 됩니다 합니다 <xref:System.Web.UI.Control.Load> 다음과에서 같은 코드를 작성 하는 경우에 이벤트 (알 수 있습니다는 `Handles` Visual Basic 및 이벤트 처리기에서 문 코드에서 C#):  
  
```vb  
Partial Class AutoEventWireupExample  
    Inherits System.Web.UI.Page  
    Protected Sub Page_Load(ByVal sender As Object, _  
            ByVal e As System.EventArgs) Handles Me.Load  
        Response.Write("Executing Page_Load")  
    End Sub  
End Class  
```  
  
```csharp  
public partial class AutoEventWireupExample : System.Web.UI.Page  
{   
    protected void Page_Load(object sender, System.EventArgs e)  
    {  
        Response.Write("Executing Page_Load");  
    }  
    override protected void OnInit(EventArgs e)  
    {  
        this.Load += new System.EventHandler(this.Page_Load);  
    }  
}  
```  
  
 때 <xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A> 는 `true`, 처리기 해당 이름과 시그니처를 기반으로 런타임에 바인딩된 이벤트에 자동으로 합니다. 각 이벤트에 대 한 ASP.NET 패턴에 따라 명명 된 메서드에 대 한 검색 `Page_` *eventname*와 같은 `Page_Load` 또는 `Page_Init`합니다. ASP.NET 먼저 일반적인 이벤트 처리기 서명이 오버 로드 확인 (즉, 지정 <xref:System.Object> 고 <xref:System.EventArgs> 매개 변수). 이 서명 사용 하 여 이벤트 처리기가 없으면 ASP.NET 매개 변수가 없는 오버 로드를 확인 합니다.  
  
 때 <xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A> 는 `false`를 명시적으로 이벤트 처리기에 바인딩해야 이벤트 앞의 예제에 표시 된 대로 합니다. 이 경우 메서드 이름 패턴을 따르도록 필요가 없습니다.  
  
 기본값은 `true` 하는 경우 <xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A> 에 지정 되어 있지는 `@ Page` 지시문입니다. Visual Studio 코드 숨김 파일을 만들 때 특성을 자동으로 포함 됩니다. 값을 Visual Studio C#으로 작성 된 ASP.NET 페이지에 대 한 설정 `true`합니다. Visual Basic의 경우 Visual Studio 설정 `false` 처리기는 이벤트 처리기를 생성할 때 Visual Studio에서 자동으로 삽입 되는 키워드를 사용 하 여 이벤트에 바인딩되어 있기 때문에 있습니다. 설정 하는 경우 <xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A> 에 `true`, 생략 (또는 제거할 수 있습니다) 키워드입니다.  
  
 설정 하지 마세요 <xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A> 에 `true` 성능이 주요 고려 사항인 경우. 자동 이벤트 연결이 설정 되 면 ASP.NET은 메서드를 사용 하 여 이벤트를 일치 하도록 시도 15 자에서 30 사이의 확인 해야 합니다.  
  
 이벤트에 이벤트 처리기를 바인딩하는 방법에 대 한 다음 note:  
  
-   설정 하는 경우 <xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A> 에 `true`에 연결 하지 않는 것도 수동으로 페이지 이벤트 처리기 이벤트에 있는지 확인 합니다. 이렇게 하면 여러 번 처리기 호출 될 수 있습니다.  
  
-   자동 바인딩 페이지의 컨트롤에 대 한 이벤트가 아닌 페이지 이벤트에 대해서만 수행 됩니다.  
  
-   이벤트 처리기를 바인딩하는 대신 재정의할 수 있습니다 합니다 `On` *eventname* 메서드 또는 컨트롤의 페이지입니다.  
  
   
  
## Examples  
 다음 코드 예제를 설정 하거나 읽을 방법을 <xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A> 코드에서 속성입니다.  
  
 [!code-csharp[System.Web.Configuration.PagesSection#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#9)]
 [!code-vb[System.Web.Configuration.PagesSection#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#9)]  
  
 다음 예제에서는 두 가지 형태의 메서드 시그니처는 자동으로 페이지 이벤트에 연결 하는 경우 <xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A> 는 `true`합니다.  
  
 [!code-aspx-csharp[System.Web.Configuration.PagesSection#50](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/Default.aspx#50)]
 [!code-csharp[System.Web.Configuration.PagesSection#50](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/Default2.aspx.cs#50)]
 [!code-aspx-vb[System.Web.Configuration.PagesSection#50](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/Default.aspx#50)]
 [!code-vb[System.Web.Configuration.PagesSection#50](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/Default2.aspx.vb#50)]
  
 다음 예제에서는 이벤트에 명시적으로 연결 하는 방법을 보여 줍니다 때 <xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A> 는 `false`합니다.  
  
 [!code-csharp[System.Web.Configuration.PagesSection#51](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/Default.aspx.cs#51)]
 [!code-vb[System.Web.Configuration.PagesSection#51](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/Default.aspx.vb#51)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public bool Buffer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public Property Buffer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Buffer { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Buffer : bool with get, set" Usage="System.Web.Configuration.PagesSection.Buffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("buffer", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>.aspx 페이지 및 .ascx 컨트롤에서 응답 버퍼링을 사용하는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
        <value>.aspx 페이지 및 .ascx 컨트롤에서 응답 버퍼링을 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 응답 버퍼링 켜져 전체 페이지 까지는 페이지 또는 컨트롤 출력이 버퍼링 되 때나 제어 처리 됩니다. 설정 하지 마세요 <xref:System.Web.Configuration.PagesSection.Buffer%2A> 에 `true` 성능이 주요 고려 사항인 경우.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.PagesSection.Buffer%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.PagesSection#16](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#16)]
 [!code-vb[System.Web.Configuration.PagesSection#16](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientIDMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ClientIDMode ClientIDMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ClientIDMode ClientIDMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.ClientIDMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientIDMode As ClientIDMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ClientIDMode ClientIDMode { System::Web::UI::ClientIDMode get(); void set(System::Web::UI::ClientIDMode value); };" />
      <MemberSignature Language="F#" Value="member this.ClientIDMode : System.Web.UI.ClientIDMode with get, set" Usage="System.Web.Configuration.PagesSection.ClientIDMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("clientIDMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 식별자를 생성하는 데 사용되는 기본 알고리즘을 가져오거나 설정합니다.</summary>
        <value><see cref="P:System.Web.UI.Control.ClientID" /> 속성의 값이 생성되는 방법을 나타내는 값입니다. 기본값은 <see cref="F:System.Web.UI.ClientIDMode.Predictable" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.Configuration.PagesSection.ClientIDMode%2A> 속성을 전체 웹 사이트에 대 한 기본값을 설정 합니다. 개별 웹 페이지 또는 개별 컨트롤에 대 한이 값을 재정의할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ClientIDMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7">ASP.NET 컨트롤 식별</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fb58ed73-d8f7-401c-9560-d99dd9ca7db8">방법: 클라이언트 스크립트에서 액세스 제어</related>
      </Docs>
    </Member>
    <Member MemberName="CompilationMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.CompilationMode CompilationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.CompilationMode CompilationMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.CompilationMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CompilationMode As CompilationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::CompilationMode CompilationMode { System::Web::UI::CompilationMode get(); void set(System::Web::UI::CompilationMode value); };" />
      <MemberSignature Language="F#" Value="member this.CompilationMode : System.Web.UI.CompilationMode with get, set" Usage="System.Web.Configuration.PagesSection.CompilationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("compilationMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.CompilationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>.aspx 페이지와 .ascx 컨트롤이 컴파일되는 방식을 결정하는 값을 가져오거나 설정합니다.</summary>
        <value>.aspx 페이지와 .ascx 컨트롤이 컴파일되는 방식을 지정하는 <see cref="P:System.Web.Configuration.PagesSection.CompilationMode" /> 속성 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본값은 <xref:System.Web.UI.CompilationMode.Always>입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.PagesSection.CompilationMode%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.PagesSection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#6)]
 [!code-vb[System.Web.Configuration.PagesSection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CompilationMode" />
      </Docs>
    </Member>
    <Member MemberName="ControlRenderingCompatibilityVersion">
      <MemberSignature Language="C#" Value="public Version ControlRenderingCompatibilityVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ControlRenderingCompatibilityVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlRenderingCompatibilityVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ControlRenderingCompatibilityVersion { Version ^ get(); void set(Version ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ControlRenderingCompatibilityVersion : Version with get, set" Usage="System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.Configuration.VersionConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("controlRenderingCompatibilityVersion", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationValidator(typeof(System.Web.Configuration.VersionValidator))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>렌더링된 어떠한 HTML과도 호환되는 ASP.NET 버전을 지정하는 값을 가져오거나 설정합니다.</summary>
        <value>렌더링된 어떠한 HTML과도 호환되는 ASP.NET 버전입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 값 설정 됩니다는 `controlRenderingCompatibilityVersion` 특성을 `pages` Web.config 파일의 요소입니다. 이 속성의 값이에 대 한 기본값을 <xref:System.Web.UI.Control.RenderingCompatibility%2A?displayProperty=nameWithType> 속성입니다. 사용 방법에 대 한 내용은 참조는 <xref:System.Web.UI.Control.RenderingCompatibility%2A?displayProperty=nameWithType> 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">이 속성을 <see langword="null" />로 설정하려고 한 경우</exception>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.TagPrefixCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.TagPrefixCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.Controls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Controls As TagPrefixCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::TagPrefixCollection ^ Controls { System::Web::Configuration::TagPrefixCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.Configuration.TagPrefixCollection" Usage="System.Web.Configuration.PagesSection.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("controls")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.TagPrefixCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.Configuration.TagPrefixInfo" /> 개체의 컬렉션입니다.</summary>
        <value><see cref="T:System.Web.Configuration.TagPrefixCollection" /> 개체의 <see cref="T:System.Web.Configuration.TagPrefixInfo" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Configuration.TagPrefixInfo> 에 해당 하는 개체는 `@ Register` ASP.NET 페이지에 지시문입니다. `@ Register` 지시문을 사용 하면 사용자 정의 컨트롤에 대 한 태그 접두사를 지정할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.PagesSection.Controls%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.PagesSection#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#12)]
 [!code-vb[System.Web.Configuration.PagesSection#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.TagPrefixCollection" />
        <altmember cref="T:System.Web.Configuration.TagPrefixInfo" />
      </Docs>
    </Member>
    <Member MemberName="DeserializeSection">
      <MemberSignature Language="C#" Value="protected override void DeserializeSection (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DeserializeSection(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.PagesSection.DeserializeSection(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DeserializeSection (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DeserializeSection(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.DeserializeSection : System.Xml.XmlReader -&gt; unit" Usage="pagesSection.DeserializeSection reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEventValidation">
      <MemberSignature Language="C#" Value="public bool EnableEventValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableEventValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.EnableEventValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableEventValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableEventValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableEventValidation : bool with get, set" Usage="System.Web.Configuration.PagesSection.EnableEventValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enableEventValidation", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이벤트 유효성 검사의 활성화 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
        <value>이벤트 유효성 검사가 활성화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.PagesSection.EnableEventValidation%2A> 이벤트 유효성 검사를 수행할지 여부를 나타내는 특성입니다. 기본값은 `true`입니다. 웹 애플리케이션을.NET Framework 버전 1.0 동작으로 되돌리려면 이벤트 유효성 검사를 해제할 필요에 따라 수 있습니다.  
  
 기본 컨트롤 이벤트의 유효성을 검사 해야 하는지 여부를 확인 하려면이 특성을 확인 합니다. 파생된 된 컨트롤은이 기본 컨트롤 특성을 상속 하지 않습니다 하 고 따라서 기본적으로 이벤트 유효성 검사에서 제외 됩니다. 파생된 된 컨트롤에 추가 하 여 이벤트 유효성 검사를 수행 하는 ASP.NET를 계속 하도록 지시 합니다 <xref:System.Web.Configuration.PagesSection.EnableEventValidation%2A> 파생된 컨트롤에 특성을 설정 및 자체 `true`합니다.  
  
> [!NOTE]
>  이벤트 유효성 검사 콜백을 및 무단된 포스트백 요청의 위험을 줄입니다. 컨트롤의 포스트백 요청 또는 콜백 하는 동안 발생할 수 있는 이벤트만 유효성을 검사 하는 ASP.NET 지시 합니다. 이 모델을 사용 하 여 컨트롤을 렌더링 하는 동안 해당 이벤트를 등록 하 고 이벤트를 다시 게시 또는 콜백을 처리 하는 동안 유효성을 검사 합니다. 기본적으로이 기능을 사용 하는 ASP.NET의 모든 이벤트 구동 하는 컨트롤입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSessionState">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.PagesEnableSessionState EnableSessionState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.PagesEnableSessionState EnableSessionState" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.EnableSessionState" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSessionState As PagesEnableSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::PagesEnableSessionState EnableSessionState { System::Web::Configuration::PagesEnableSessionState get(); void set(System::Web::Configuration::PagesEnableSessionState value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSessionState : System.Web.Configuration.PagesEnableSessionState with get, set" Usage="System.Web.Configuration.PagesSection.EnableSessionState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enableSessionState", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.PagesEnableSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>세션 상태가 활성화되었는지 여부 또는 읽기 전용인지 지정하는 값을 가져오거나 설정합니다.</summary>
        <value>세션 상태가 활성화되었는지 여부 또는 읽기 전용인지를 지정하는 <see cref="P:System.Web.Configuration.PagesSection.EnableSessionState" /> 속성 값 중 하나입니다. 기본값은 <see cref="F:System.Web.Configuration.PagesEnableSessionState.True" />로, 세션 상태가 활성화되었음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.PagesSection#14](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#14)]
 [!code-vb[System.Web.Configuration.PagesSection#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">해당 값이 올바른 <see cref="T:System.Web.Configuration.PagesEnableSessionState" /> 열거형 값이 아닌 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">ASP.NET 세션 상태 개요</related>
      </Docs>
    </Member>
    <Member MemberName="EnableViewState">
      <MemberSignature Language="C#" Value="public bool EnableViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.EnableViewState" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableViewState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableViewState : bool with get, set" Usage="System.Web.Configuration.PagesSection.EnableViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enableViewState", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>뷰 상태가 활성화되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>뷰 상태가 활성화되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.PagesSection.EnableViewState%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.PagesSection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#5)]
 [!code-vb[System.Web.Configuration.PagesSection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/19d2a6ed-9a77-4c7c-a7f5-74dd4b6c3818">ASP.NET 뷰 상태 개요</related>
      </Docs>
    </Member>
    <Member MemberName="EnableViewStateMac">
      <MemberSignature Language="C#" Value="public bool EnableViewStateMac { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableViewStateMac" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.EnableViewStateMac" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableViewStateMac As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableViewStateMac { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableViewStateMac : bool with get, set" Usage="System.Web.Configuration.PagesSection.EnableViewStateMac" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enableViewStateMac", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>클라이언트에서 페이지를 다시 게시할 때 ASP.NET에서 페이지의 뷰 상태에 대해 MAC(메시지 인증 코드)를 실행해야 하는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
        <value>클라이언트에서 페이지를 다시 게시할 때 ASP.NET에서 페이지의 뷰 상태에 대해 MAC(메시지 인증 코드)를 실행해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 뷰 상태 MAC 숨겨진 변수 페이지를 브라우저에 보낼 때 페이지의 뷰 상태를 유지 되는 암호화 된 버전이 있습니다. 이 속성 설정 된 경우 `true`, 클라이언트에서 훼손 되었는지 확인 합니다. 암호화 된 뷰 상태를 확인 합니다.  
  
> [!IMPORTANT]
>  이 특성 설정 하면 안 `false` 페이지나 애플리케이션 뷰 상태를 사용 하지 않는 경우에 프로덕션 웹 사이트를 합니다. 뷰 상태 MAC 보안 뷰 상태 외에도 다른 ASP.NET 기능을 방지할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.PagesSection.EnableViewStateMac%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.PagesSection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#8)]
 [!code-vb[System.Web.Configuration.PagesSection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreDeviceFilters">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.IgnoreDeviceFilterElementCollection IgnoreDeviceFilters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.IgnoreDeviceFilterElementCollection IgnoreDeviceFilters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.IgnoreDeviceFilters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IgnoreDeviceFilters As IgnoreDeviceFilterElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::IgnoreDeviceFilterElementCollection ^ IgnoreDeviceFilters { System::Web::Configuration::IgnoreDeviceFilterElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreDeviceFilters : System.Web.Configuration.IgnoreDeviceFilterElementCollection" Usage="System.Web.Configuration.PagesSection.IgnoreDeviceFilters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("ignoreDeviceFilters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.IgnoreDeviceFilterElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이지를 렌더링할 때 ASP.NET이 무시해야 하는 디바이스 태그의 컬렉션을 가져옵니다.</summary>
        <value>ASP.NET이 무시해야 하는 디바이스 태그의 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 디바이스 태그를 무시 하려면 ASP.NET에서 처리 하지 않고 브라우저에 그대로 전달 되어야 하는 HTML 네임 스페이스 접두사로 지정 됩니다. 예로 `sys` Microsoft Ajax 요소에 사용 되는 접두사입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.IgnoreDeviceFilterElement" />
      </Docs>
    </Member>
    <Member MemberName="MaintainScrollPositionOnPostBack">
      <MemberSignature Language="C#" Value="public bool MaintainScrollPositionOnPostBack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaintainScrollPositionOnPostBack" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.MaintainScrollPositionOnPostBack" />
      <MemberSignature Language="VB.NET" Value="Public Property MaintainScrollPositionOnPostBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaintainScrollPositionOnPostBack { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MaintainScrollPositionOnPostBack : bool with get, set" Usage="System.Web.Configuration.PagesSection.MaintainScrollPositionOnPostBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maintainScrollPositionOnPostBack", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서버에서 다시 게시한 후 페이지 스크롤 위치를 유지할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>다시 게시한 후 페이지 스크롤 위치를 유지해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Page.IsPostBack" />
      </Docs>
    </Member>
    <Member MemberName="MasterPageFile">
      <MemberSignature Language="C#" Value="public string MasterPageFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MasterPageFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.MasterPageFile" />
      <MemberSignature Language="VB.NET" Value="Public Property MasterPageFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MasterPageFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MasterPageFile : string with get, set" Usage="System.Web.Configuration.PagesSection.MasterPageFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("masterPageFile", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>애플리케이션의 마스터 페이지에 대한 참조를 가져오거나 설정합니다.</summary>
        <value>애플리케이션의 마스터 페이지에 대한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 값은 상대 경로 또는 절대 경로 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.PagesSection.MasterPageFile%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.PagesSection#15](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#15)]
 [!code-vb[System.Web.Configuration.PagesSection#15](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#15)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b">ASP.NET 마스터 페이지 소개</related>
      </Docs>
    </Member>
    <Member MemberName="MaxPageStateFieldLength">
      <MemberSignature Language="C#" Value="public int MaxPageStateFieldLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPageStateFieldLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.MaxPageStateFieldLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPageStateFieldLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxPageStateFieldLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxPageStateFieldLength : int with get, set" Usage="System.Web.Configuration.PagesSection.MaxPageStateFieldLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxPageStateFieldLength", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>뷰 상태 필드 하나에 포함될 수 있는 최대 문자 수를 가져오거나 설정합니다.</summary>
        <value>뷰 상태 필드 하나에 포함될 수 있는 최대 문자 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이지 및 컨트롤 보기 상태는 페이지 또는 컨트롤을 렌더링 하는 경우 숨겨진된 뷰 상태 필드에 저장 됩니다. 저장 된 데이터의 길이 초과 하는 경우는 <xref:System.Web.Configuration.PagesSection.MaxPageStateFieldLength%2A> 여러 뷰 상태 필드 간에 데이터가 분할 될 값입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.PagesSection.MaxPageStateFieldLength%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.PagesSection#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#10)]
 [!code-vb[System.Web.Configuration.PagesSection#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/19d2a6ed-9a77-4c7c-a7f5-74dd4b6c3818">ASP.NET 뷰 상태 개요</related>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.NamespaceCollection Namespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.NamespaceCollection Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Namespaces As NamespaceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::NamespaceCollection ^ Namespaces { System::Web::Configuration::NamespaceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : System.Web.Configuration.NamespaceCollection" Usage="System.Web.Configuration.PagesSection.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("namespaces")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.NamespaceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.Configuration.NamespaceInfo" /> 개체의 컬렉션입니다.</summary>
        <value><see cref="T:System.Web.Configuration.NamespaceCollection" /> 개체의 <see cref="T:System.Web.Configuration.NamespaceInfo" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Configuration.TagPrefixInfo> 에 해당 하는 개체는 `@ Import` ASP.NET 페이지에 지시문입니다. `Import` 지시문을 사용 하면 애플리케이션의 모든 페이지에 자동으로 가져올 수 없는 네임 스페이스를 지정할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.PagesSection.Namespaces%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.PagesSection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#2)]
 [!code-vb[System.Web.Configuration.PagesSection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.NamespaceCollection" />
        <altmember cref="T:System.Web.Configuration.NamespaceInfo" />
      </Docs>
    </Member>
    <Member MemberName="PageBaseType">
      <MemberSignature Language="C#" Value="public string PageBaseType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PageBaseType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.PageBaseType" />
      <MemberSignature Language="VB.NET" Value="Public Property PageBaseType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PageBaseType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PageBaseType : string with get, set" Usage="System.Web.Configuration.PagesSection.PageBaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("pageBaseType", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>.aspx 페이지에 기본적으로 상속되는 코드 숨김 클래스를 지정하는 값을 가져오거나 설정합니다.</summary>
        <value>.aspx 페이지에 기본적으로 상속되는 코드 숨김 클래스를 지정하는 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.PagesSection.PageBaseType%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.PagesSection#18](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#18)]
 [!code-vb[System.Web.Configuration.PagesSection#18](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageParserFilterType">
      <MemberSignature Language="C#" Value="public string PageParserFilterType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PageParserFilterType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.PageParserFilterType" />
      <MemberSignature Language="VB.NET" Value="Public Property PageParserFilterType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PageParserFilterType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PageParserFilterType : string with get, set" Usage="System.Web.Configuration.PagesSection.PageParserFilterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("pageParserFilterType", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>파서 필터 형식을 지정하는 값을 가져오거나 설정합니다.</summary>
        <value>파서 필터 형식을 지정하는 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스인 파서 필터의는 <xref:System.Web.UI.PageParserFilter> 런타임 시 소스 코드에 변경 내용을 허용 하는 구문 분석 단계 전에 페이지 컴파일 프로세스에 의해 호출 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.PagesSection.PageParserFilterType%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.PagesSection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#3)]
 [!code-vb[System.Web.Configuration.PagesSection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.PageParserFilter" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.PagesSection.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderAllHiddenFieldsAtTopOfForm">
      <MemberSignature Language="C#" Value="public bool RenderAllHiddenFieldsAtTopOfForm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderAllHiddenFieldsAtTopOfForm" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.RenderAllHiddenFieldsAtTopOfForm" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderAllHiddenFieldsAtTopOfForm As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RenderAllHiddenFieldsAtTopOfForm { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RenderAllHiddenFieldsAtTopOfForm : bool with get, set" Usage="System.Web.Configuration.PagesSection.RenderAllHiddenFieldsAtTopOfForm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("renderAllHiddenFieldsAtTopOfForm", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>모든 시스템 생성 숨김 필드가 폼 시작 부분에서 렌더링되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>시스템 생성 숨김 필드가 폼 시작 부분에서 렌더링되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true." />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 <xref:System.Web.Configuration.PagesSection.RenderAllHiddenFieldsAtTopOfForm%2A> 일부 시스템 생성 숨김된 필드가 폼의 끝에서 렌더링 되는 지정 하는 속성입니다.  
  
 .NET Framework 3.5 SP1 보다 이전 버전의 ASP.NET에서는 ASP.NET 렌더링 일부 숨겨진된 필드 (예를 들어 `__VIEWSTATE`) 폼의 맨 위에 있는 합니다. 다른 숨겨진된 필드 (예를 들어 `__EVENTVALIDATION`) 닫기 전에 폼의 아래쪽에 렌더링 되는 `</div>` 태그입니다. ASP.NET 3.5 sp1에서는 기본적으로 모든 시스템에서 생성 된 숨겨진된 필드는 페이지의 맨 위에 있는 렌더링 됩니다. 이렇게 하면 페이지 로드 완료 되기 전에 포스트백을 수행 하는 경우에 이러한 필드에서 정보를 서버로 전송 됩니다. 하는 경우 <xref:System.Web.Configuration.PagesSection.RenderAllHiddenFieldsAtTopOfForm%2A> 로 설정 된 `false`, 페이지 로드 완료 되기 전에 포스트백을 수행 "잘못 된 다시 게시 또는 콜백 인수" 오류가 발생할 수 있습니다.  
  
> [!NOTE]
>  속성 이름 "모든 숨겨진된 필드"를 나타내지만 사용자가 만든 숨겨진된 필드는이 속성에 대 한 설정을 영향을 받지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetReadOnly">
      <MemberSignature Language="C#" Value="protected override void SetReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.PagesSection.SetReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetReadOnly();" />
      <MemberSignature Language="F#" Value="override this.SetReadOnly : unit -&gt; unit" Usage="pagesSection.SetReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartNavigation">
      <MemberSignature Language="C#" Value="public bool SmartNavigation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SmartNavigation" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.SmartNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Property SmartNavigation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SmartNavigation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SmartNavigation : bool with get, set" Usage="System.Web.Configuration.PagesSection.SmartNavigation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("smartNavigation", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>스마트 탐색의 사용 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>스마트 탐색을 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  스마트 탐색에는 Microsoft Internet Explorer 5.5 이상이 필요합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.PagesSection.SmartNavigation%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.PagesSection#19](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#19)]
 [!code-vb[System.Web.Configuration.PagesSection#19](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StyleSheetTheme">
      <MemberSignature Language="C#" Value="public string StyleSheetTheme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StyleSheetTheme" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.StyleSheetTheme" />
      <MemberSignature Language="VB.NET" Value="Public Property StyleSheetTheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StyleSheetTheme { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StyleSheetTheme : string with get, set" Usage="System.Web.Configuration.PagesSection.StyleSheetTheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("styleSheetTheme", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET 스타일시트 테마의 이름을 가져오거나 설정합니다.</summary>
        <value>ASP.NET 스타일시트 테마의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.PagesSection.StyleSheetTheme%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.PagesSection#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#13)]
 [!code-vb[System.Web.Configuration.PagesSection#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.StyleSheetTheme" />
        <related type="Article" href="https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3">ASP.NET 테마 소개</related>
        <related type="Article" href="https://msdn.microsoft.com/library/f9d72364-4d77-4b73-84be-7630dc63e0fe(v=vs.100)">ASP.NET 테마를 적용합니다.</related>
      </Docs>
    </Member>
    <Member MemberName="TagMapping">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.TagMapCollection TagMapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.TagMapCollection TagMapping" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.TagMapping" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TagMapping As TagMapCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::TagMapCollection ^ TagMapping { System::Web::Configuration::TagMapCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TagMapping : System.Web.Configuration.TagMapCollection" Usage="System.Web.Configuration.PagesSection.TagMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("tagMapping")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.TagMapCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.Configuration.TagMapInfo" /> 개체의 컬렉션입니다.</summary>
        <value><see cref="T:System.Web.Configuration.TagMapCollection" /> 개체의 <see cref="T:System.Web.Configuration.TagMapInfo" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.TagPrefixInfo> ASP.NET 페이지에 해당 지시문에 없습니다. <xref:System.Web.Configuration.TagPrefixInfo> 개체를 사용 하면 컴파일 타임 형식 이름은 다른 이름과 태그 형식 이름을 다시 매핑할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.PagesSection.TagMapping%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.PagesSection#17](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#17)]
 [!code-vb[System.Web.Configuration.PagesSection#17](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Theme">
      <MemberSignature Language="C#" Value="public string Theme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Theme" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.Theme" />
      <MemberSignature Language="VB.NET" Value="Public Property Theme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Theme { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Theme : string with get, set" Usage="System.Web.Configuration.PagesSection.Theme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("theme", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET 페이지 테마의 이름을 가져오거나 설정합니다.</summary>
        <value>ASP.NET 페이지 테마의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.PagesSection.Theme%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.PagesSection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#4)]
 [!code-vb[System.Web.Configuration.PagesSection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.Theme" />
        <related type="Article" href="https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3">ASP.NET 테마 소개</related>
        <related type="Article" href="https://msdn.microsoft.com/library/f9d72364-4d77-4b73-84be-7630dc63e0fe(v=vs.100)">ASP.NET 테마를 적용합니다.</related>
      </Docs>
    </Member>
    <Member MemberName="UserControlBaseType">
      <MemberSignature Language="C#" Value="public string UserControlBaseType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserControlBaseType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.UserControlBaseType" />
      <MemberSignature Language="VB.NET" Value="Public Property UserControlBaseType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserControlBaseType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserControlBaseType : string with get, set" Usage="System.Web.Configuration.PagesSection.UserControlBaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("userControlBaseType", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 정의 컨트롤에 기본적으로 상속되는 코드 숨김 클래스를 지정하는 값을 가져오거나 설정합니다.</summary>
        <value>사용자 정의 컨트롤에 기본적으로 상속되는 코드 숨김 파일을 지정하는 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.PagesSection.UserControlBaseType%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.PagesSection#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#11)]
 [!code-vb[System.Web.Configuration.PagesSection#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateRequest">
      <MemberSignature Language="C#" Value="public bool ValidateRequest { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateRequest" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.ValidateRequest" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRequest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateRequest { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRequest : bool with get, set" Usage="System.Web.Configuration.PagesSection.ValidateRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("validateRequest", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET에서 브라우저의 입력 값에 대해 위험성을 검사할지 여부를 결정하는 값을 가져오거나 설정합니다. 자세한 내용은 <see href="https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)">Script Exploits Overview</see>를 참조하세요.</summary>
        <value>ASP.NET에서 브라우저의 입력 값에 대해 위험성을 검사하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 요청 유효성 검사는 잠재적으로 위험한 값의 목록에 모든 입력된 데이터를 비교 하 여 수행 됩니다. 일치 하는 경우 asp를 <xref:System.Web.HttpRequestValidationException>입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Configuration.PagesSection.ValidateRequest%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Configuration.PagesSection#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/CS/usingpagessection.cs#7)]
 [!code-vb[System.Web.Configuration.PagesSection#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.PagesSection/VB/usingpagessection.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07">스크립트 악용 개요</related>
      </Docs>
    </Member>
    <Member MemberName="ViewStateEncryptionMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ViewStateEncryptionMode ViewStateEncryptionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ViewStateEncryptionMode ViewStateEncryptionMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.PagesSection.ViewStateEncryptionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewStateEncryptionMode As ViewStateEncryptionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ViewStateEncryptionMode ViewStateEncryptionMode { System::Web::UI::ViewStateEncryptionMode get(); void set(System::Web::UI::ViewStateEncryptionMode value); };" />
      <MemberSignature Language="F#" Value="member this.ViewStateEncryptionMode : System.Web.UI.ViewStateEncryptionMode with get, set" Usage="System.Web.Configuration.PagesSection.ViewStateEncryptionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("viewStateEncryptionMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ViewStateEncryptionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="ViewState" /> 값을 유지하는 데 사용되는 암호화 모드를 가져오거나 설정합니다.</summary>
        <value><see langword="ViewState" /> 값이 암호화되는 시점을 나타내는 <see cref="T:System.Web.UI.ViewStateEncryptionMode" /> 열거형 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 가능한 <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> 열거형 값은 `Always`를 `Auto`, 및 `Never`합니다. 기본값은 `Auto`입니다. 하는 경우 <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> 속성이 `Auto`, `ViewState` 컨트롤을 요청할 때 암호화 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ViewStateEncryptionMode" />
      </Docs>
    </Member>
  </Members>
</Type>