<Type Name="EntityTemplateFactory" FullName="System.Web.DynamicData.EntityTemplateFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1023e1c395f8dcb535fc389ce4c22926048a010f" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51867407" /></Metadata><TypeSignature Language="C#" Value="public class EntityTemplateFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntityTemplateFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.EntityTemplateFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class EntityTemplateFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityTemplateFactory" />
  <TypeSignature Language="F#" Value="type EntityTemplateFactory = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>엔터티 템플릿을 만듭니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.EntityTemplateFactory> 클래스는 동적 데이터에서 런타임 시 테이블에 대 한 엔터티 템플릿의 인스턴스를 가져오는 데 사용 됩니다. 필드 템플릿을 마찬가지로 한 사용자 정의 컨트롤을 단일 데이터 필드 대신 전체 테이블 행에 적용 되는 엔터티 템플릿은 참조 하십시오입니다. 엔터티 템플릿을 사용 하 여 페이지에 표시 되는 <xref:System.Web.DynamicData.DynamicEntity> 클래스입니다. 필드 템플릿을 사용 하 여 데이터 모델에서 값을 표시.  
  
 동적 데이터 엔터티 템플릿을 ~\DynamicData\EntityTemplates 폴더에 있는 기본을 제공 합니다. 이러한 기본 엔터티 템플릿을 수정 하거나 테이블에 대 한 동작과 모양을 변경 하려면 사용자 지정 정의 만들 수 있습니다. 표시, 편집 및 삽입 작업에 대 한 템플릿이 있습니다.  
  
   
  
## Examples  
 엔터티 템플릿을 사용 하는 방법의 예제를 참조 하세요 [연습: 테이블 레이아웃 엔터티를 사용 하 여 템플릿을 사용자 지정](https://msdn.microsoft.com/library/03d33a22-d3c0-41df-a717-82ce86329a08)합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.FilterFactory" />
    <altmember cref="T:System.Web.DynamicData.FieldTemplateFactory" />
    <related type="Article" href="https://msdn.microsoft.com/library/03d33a22-d3c0-41df-a717-82ce86329a08">연습: 엔터티 템플릿을 사용 하 여 테이블 레이아웃을 사용자 지정</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityTemplateFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.EntityTemplateFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityTemplateFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildEntityTemplateVirtualPath">
      <MemberSignature Language="C#" Value="public virtual string BuildEntityTemplateVirtualPath (string templateName, System.Web.UI.WebControls.DataBoundControlMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string BuildEntityTemplateVirtualPath(string templateName, valuetype System.Web.UI.WebControls.DataBoundControlMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.EntityTemplateFactory.BuildEntityTemplateVirtualPath(System.String,System.Web.UI.WebControls.DataBoundControlMode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildEntityTemplateVirtualPath (templateName As String, mode As DataBoundControlMode) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ BuildEntityTemplateVirtualPath(System::String ^ templateName, System::Web::UI::WebControls::DataBoundControlMode mode);" />
      <MemberSignature Language="F#" Value="abstract member BuildEntityTemplateVirtualPath : string * System.Web.UI.WebControls.DataBoundControlMode -&gt; string&#xA;override this.BuildEntityTemplateVirtualPath : string * System.Web.UI.WebControls.DataBoundControlMode -&gt; string" Usage="entityTemplateFactory.BuildEntityTemplateVirtualPath (templateName, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateName" Type="System.String" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
      </Parameters>
      <Docs>
        <param name="templateName">경로를 빌드할 엔터티 템플릿의 이름입니다.</param>
        <param name="mode">엔터티 템플릿의 디스플레이 모드입니다.</param>
        <summary>지정된 테이블에 대한 엔터티 템플릿의 경로를 빌드합니다.</summary>
        <returns>지정된 테이블에 대한 엔터티 템플릿의 경로입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="templateName" />이 **null**입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateEntityTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.EntityTemplateUserControl CreateEntityTemplate (System.Web.DynamicData.MetaTable table, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.DynamicData.EntityTemplateUserControl CreateEntityTemplate(class System.Web.DynamicData.MetaTable table, valuetype System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.EntityTemplateFactory.CreateEntityTemplate(System.Web.DynamicData.MetaTable,System.Web.UI.WebControls.DataBoundControlMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEntityTemplate (table As MetaTable, mode As DataBoundControlMode, uiHint As String) As EntityTemplateUserControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::DynamicData::EntityTemplateUserControl ^ CreateEntityTemplate(System::Web::DynamicData::MetaTable ^ table, System::Web::UI::WebControls::DataBoundControlMode mode, System::String ^ uiHint);" />
      <MemberSignature Language="F#" Value="abstract member CreateEntityTemplate : System.Web.DynamicData.MetaTable * System.Web.UI.WebControls.DataBoundControlMode * string -&gt; System.Web.DynamicData.EntityTemplateUserControl&#xA;override this.CreateEntityTemplate : System.Web.DynamicData.MetaTable * System.Web.UI.WebControls.DataBoundControlMode * string -&gt; System.Web.DynamicData.EntityTemplateUserControl" Usage="entityTemplateFactory.CreateEntityTemplate (table, mode, uiHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.EntityTemplateUserControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
        <Parameter Name="uiHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="table">엔터티 템플릿이 적용되는 테이블에 대한 메타데이터입니다.</param>
        <param name="mode">엔터티 템플릿의 디스플레이 모드입니다.</param>
        <param name="uiHint">사용할 템플릿의 이름입니다.</param>
        <summary>지정된 테이블에 대한 엔터티 템플릿의 인스턴스를 만듭니다.</summary>
        <returns><see cref="T:System.Web.DynamicData.EntityTemplateUserControl" /> 클래스의 인스턴스입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">테이블은 **null**입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntityTemplateVirtualPath">
      <MemberSignature Language="C#" Value="public virtual string GetEntityTemplateVirtualPath (System.Web.DynamicData.MetaTable table, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetEntityTemplateVirtualPath(class System.Web.DynamicData.MetaTable table, valuetype System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.EntityTemplateFactory.GetEntityTemplateVirtualPath(System.Web.DynamicData.MetaTable,System.Web.UI.WebControls.DataBoundControlMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEntityTemplateVirtualPath (table As MetaTable, mode As DataBoundControlMode, uiHint As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetEntityTemplateVirtualPath(System::Web::DynamicData::MetaTable ^ table, System::Web::UI::WebControls::DataBoundControlMode mode, System::String ^ uiHint);" />
      <MemberSignature Language="F#" Value="abstract member GetEntityTemplateVirtualPath : System.Web.DynamicData.MetaTable * System.Web.UI.WebControls.DataBoundControlMode * string -&gt; string&#xA;override this.GetEntityTemplateVirtualPath : System.Web.DynamicData.MetaTable * System.Web.UI.WebControls.DataBoundControlMode * string -&gt; string" Usage="entityTemplateFactory.GetEntityTemplateVirtualPath (table, mode, uiHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
        <Parameter Name="uiHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="table">엔터티 템플릿이 적용되는 테이블에 대한 메타데이터입니다.</param>
        <param name="mode">엔터티 템플릿의 디스플레이 모드입니다.</param>
        <param name="uiHint">사용할 템플릿의 이름입니다.</param>
        <summary>지정된 테이블에 대한 엔터티 템플릿의 가상 경로를 가져옵니다.</summary>
        <returns>지정된 테이블에 대한 엔터티 템플릿의 가상 경로입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">테이블은 **null**입니다.</exception>
      </Docs>
    </Member>
  </Members>
</Type>