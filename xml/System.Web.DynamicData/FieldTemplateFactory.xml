<Type Name="FieldTemplateFactory" FullName="System.Web.DynamicData.FieldTemplateFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dcb2c1a2a510b16314a021f5678c624c7f50eab5" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51896419" /></Metadata><TypeSignature Language="C#" Value="public class FieldTemplateFactory : System.Web.DynamicData.IFieldTemplateFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FieldTemplateFactory extends System.Object implements class System.Web.DynamicData.IFieldTemplateFactory" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.FieldTemplateFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class FieldTemplateFactory&#xA;Implements IFieldTemplateFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class FieldTemplateFactory : System::Web::DynamicData::IFieldTemplateFactory" />
  <TypeSignature Language="F#" Value="type FieldTemplateFactory = class&#xA;    interface IFieldTemplateFactory" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFieldTemplateFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>필드 템플릿을 만듭니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로이 클래스는 다음과 같이 구현 됩니다. 합니다 <xref:System.Web.DynamicData.IFieldTemplateFactory> 인터페이스를 사용 하 여는 <xref:System.Web.UI.UserControl> 필드 템플릿을 만드는 클래스입니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.FieldTemplateUserControl" />
    <related type="Article" href="https://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12">ASP.NET 동적 데이터 스 캐 폴딩</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FieldTemplateFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FieldTemplateFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> 클래스의 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildVirtualPath">
      <MemberSignature Language="C#" Value="public virtual string BuildVirtualPath (string templateName, System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string BuildVirtualPath(string templateName, class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildVirtualPath (templateName As String, column As MetaColumn, mode As DataBoundControlMode) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ BuildVirtualPath(System::String ^ templateName, System::Web::DynamicData::MetaColumn ^ column, System::Web::UI::WebControls::DataBoundControlMode mode);" />
      <MemberSignature Language="F#" Value="abstract member BuildVirtualPath : string * System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode -&gt; string&#xA;override this.BuildVirtualPath : string * System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode -&gt; string" Usage="fieldTemplateFactory.BuildVirtualPath (templateName, column, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateName" Type="System.String" />
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
      </Parameters>
      <Docs>
        <param name="templateName">사용할 템플릿의 이름입니다.</param>
        <param name="column">필드 템플릿이 적용되는 데이터 열을 지정합니다.</param>
        <param name="mode">필드 템플릿의 표시 모드를 지정합니다.</param>
        <summary>필드 템플릿 이름과 모드를 기반으로 필드 템플릿에 대한 가상 경로를 구성합니다.</summary>
        <returns>필드 템플릿의 가상 경로입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로이 메서드는 템플릿 이름을 사용 하 여, 추가 모드를 다음.ascx 확장을 추가 하 여 필드 템플릿의 가상 경로 작성 합니다. 예를 들어 경우 `templateName` MyFieldTemplate 됩니다 및 `mode` 는 편집, 가상 경로 템플릿 폴더 가상 경로로 지정 된 폴더에서 MyFieldTemplate_Edit.ascx 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="templateName" />가 null인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFieldTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.IFieldTemplate CreateFieldTemplate (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.DynamicData.IFieldTemplate CreateFieldTemplate(class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateFieldTemplate (column As MetaColumn, mode As DataBoundControlMode, uiHint As String) As IFieldTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::DynamicData::IFieldTemplate ^ CreateFieldTemplate(System::Web::DynamicData::MetaColumn ^ column, System::Web::UI::WebControls::DataBoundControlMode mode, System::String ^ uiHint);" />
      <MemberSignature Language="F#" Value="abstract member CreateFieldTemplate : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode * string -&gt; System.Web.DynamicData.IFieldTemplate&#xA;override this.CreateFieldTemplate : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode * string -&gt; System.Web.DynamicData.IFieldTemplate" Usage="fieldTemplateFactory.CreateFieldTemplate (column, mode, uiHint)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.IFieldTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
        <Parameter Name="uiHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">필드 템플릿이 적용되는 데이터 열을 지정합니다.</param>
        <param name="mode">필드 템플릿의 표시 모드를 지정합니다.</param>
        <param name="uiHint">사용할 필드 템플릿을 지정합니다.</param>
        <summary><see cref="T:System.Web.DynamicData.MetaColumn" /> 클래스, <see cref="T:System.Web.UI.WebControls.DataBoundControlMode" /> 클래스 및 <see cref="P:System.Web.DynamicData.MetaColumn.UIHint" /> 속성을 사용하여 필드 템플릿의 인스턴스를 만듭니다.</summary>
        <returns><see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> 클래스가 구현하는 인터페이스의 인스턴스입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldTemplateVirtualPath">
      <MemberSignature Language="C#" Value="public virtual string GetFieldTemplateVirtualPath (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFieldTemplateVirtualPath(class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFieldTemplateVirtualPath (column As MetaColumn, mode As DataBoundControlMode, uiHint As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFieldTemplateVirtualPath(System::Web::DynamicData::MetaColumn ^ column, System::Web::UI::WebControls::DataBoundControlMode mode, System::String ^ uiHint);" />
      <MemberSignature Language="F#" Value="abstract member GetFieldTemplateVirtualPath : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode * string -&gt; string&#xA;override this.GetFieldTemplateVirtualPath : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode * string -&gt; string" Usage="fieldTemplateFactory.GetFieldTemplateVirtualPath (column, mode, uiHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
        <Parameter Name="uiHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">필드 템플릿이 적용되는 데이터 열을 지정합니다.</param>
        <param name="mode">필드 템플릿의 디스플레이 모드(읽기 전용, 편집 또는 삽입)를 지정합니다.</param>
        <param name="uiHint">사용할 필드 템플릿을 지정합니다. 이 매개 변수는 필드 템플릿 조회에 영향을 줍니다.</param>
        <summary>필드 템플릿의 가상 경로를 결정합니다.</summary>
        <returns>필드 템플릿의 가상 경로입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 동적 데이터 필드 템플릿 DynamicData/FieldTemplates 만들어집니다/수 있지만 폴더에 대 한 필드 템플릿을 새 폴더를 만들 수 있습니다. 이 메서드는 지정된 된 매개 변수를 사용 하 여 필드 템플릿이 들어 있는 폴더에 대 한 가상 경로 결정 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (System.Web.DynamicData.MetaModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.Web.DynamicData.MetaModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Initialize (model As MetaModel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(System::Web::DynamicData::MetaModel ^ model);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : System.Web.DynamicData.MetaModel -&gt; unit&#xA;override this.Initialize : System.Web.DynamicData.MetaModel -&gt; unit" Usage="fieldTemplateFactory.Initialize model" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="System.Web.DynamicData.MetaModel" />
      </Parameters>
      <Docs>
        <param name="model"><see cref="T:System.Web.DynamicData.FieldTemplateFactory" />에 연결할 데이터 모델을 지정합니다.</param>
        <summary><see cref="T:System.Web.DynamicData.MetaModel" />을 <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />와 연결합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaModel Model" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.FieldTemplateFactory.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaModel ^ Model { System::Web::DynamicData::MetaModel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Model : System.Web.DynamicData.MetaModel" Usage="System.Web.DynamicData.FieldTemplateFactory.Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.DynamicData.MetaModel" /> 클래스와 연결된 <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.DynamicData.FieldTemplateFactory" />와 연결된 모델입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.MetaModel> 클래스는 데이터베이스와 도메인 개체 사이의 매핑을 나타내는 추상 클래스입니다. 동적 데이터 모델을 나타내는 클래스 (데이터 모델)의 집합을 제공 합니다. 클래스는 개체 관계형 디자이너 (O/R 디자이너)를 통해 생성 됩니다. 이러한 클래스를 생성 하려면 LINQ to SQL 클래스 템플릿 사용할 수 있습니다. 이 속성은 get 및 set에 연결 된 데이터 모델에 사용 된 <xref:System.Web.DynamicData.FieldTemplateFactory> 클래스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreprocessMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataBoundControlMode PreprocessMode (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Web.UI.WebControls.DataBoundControlMode PreprocessMode(class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PreprocessMode (column As MetaColumn, mode As DataBoundControlMode) As DataBoundControlMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::DataBoundControlMode PreprocessMode(System::Web::DynamicData::MetaColumn ^ column, System::Web::UI::WebControls::DataBoundControlMode mode);" />
      <MemberSignature Language="F#" Value="abstract member PreprocessMode : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode -&gt; System.Web.UI.WebControls.DataBoundControlMode&#xA;override this.PreprocessMode : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode -&gt; System.Web.UI.WebControls.DataBoundControlMode" Usage="fieldTemplateFactory.PreprocessMode (column, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataBoundControlMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
      </Parameters>
      <Docs>
        <param name="column">필드 템플릿이 필요한 열입니다.</param>
        <param name="mode">변경할 모드(읽기 전용, 편집 또는 삽입)입니다.</param>
        <summary>데이터 열의 모드를 변경합니다.</summary>
        <returns>열이 렌더링되는 모드입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 동적 데이터에서 읽기, 삽입, 데이터를 렌더링 하거나 모드를 편집 합니다. 이 메서드는 열에 렌더링 되는 모드를 제어 합니다. 예를 들어 열에 기본 키 열이 편집 모드 요청을 읽기 전용으로 변경 합니다. 기본 키의 일부인 자동으로 생성 하 고 외래 키 열을 편집할 수 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplateFolderVirtualPath">
      <MemberSignature Language="C#" Value="public string TemplateFolderVirtualPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TemplateFolderVirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public Property TemplateFolderVirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TemplateFolderVirtualPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TemplateFolderVirtualPath : string with get, set" Usage="System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>필드 템플릿을 만들 폴더를 가져오거나 설정합니다.</summary>
        <value>필드 템플릿이 들어 있는 폴더의 경로입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 필드 템플릿을 만들어지는 기본 폴더는 /DynamicData/FieldTemplates/입니다. 이 폴더에는 기본 필드 템플릿 및 사용자가 만든 사용자 지정 필드 템플릿을 포함 합니다. 만들고 필드 템플릿에 대 한 다른 폴더를 지정 하는 경우 동적 데이터에 지정한 폴더에서 필드 템플릿을 만들어집니다. 필드 템플릿에 대 한 자세한 내용은 참조 하세요. [ASP.NET 동적 데이터 스 캐 폴딩](https://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>