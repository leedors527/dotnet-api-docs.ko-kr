<Type Name="VirtualDirectory" FullName="System.Web.Hosting.VirtualDirectory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="76bcfaf39796de7053be52d547e95197e9767617" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37606087" /></Metadata><TypeSignature Language="C#" Value="public abstract class VirtualDirectory : System.Web.Hosting.VirtualFileBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VirtualDirectory extends System.Web.Hosting.VirtualFileBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.VirtualDirectory" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class VirtualDirectory&#xA;Inherits VirtualFileBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualDirectory abstract : System::Web::Hosting::VirtualFileBase" />
  <TypeSignature Language="F#" Value="type VirtualDirectory = class&#xA;    inherit VirtualFileBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Hosting.VirtualFileBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>가상 파일 또는 리소스 공간의 디렉터리 개체를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualDirectory> 클래스는 기본 클래스 가상 파일 시스템의 디렉터리를 나타내는 개체입니다. 일반적으로 하위 항목의 구현 하는 합니다 <xref:System.Web.Hosting.VirtualDirectory> 각각에 대 한 클래스 <xref:System.Web.Hosting.VirtualPathProvider> 웹 애플리케이션에서 하위 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Web.Hosting.VirtualDirectory> 에 저장 된 가상 디렉터리 정보를 반환 하는 클래스 구현을 <xref:System.Data.DataSet> 개체입니다. 이 코드에 대 한 코드 예제를 사용 하 여 작동는 <xref:System.Web.Hosting.VirtualPathProvider> 및 <xref:System.Web.Hosting.VirtualFile> 되는 데이터에서 가상 리소스 저장소를 제공 하는 클래스에 로드 되는 <xref:System.Data.DataSet> 개체. 컴파일 및 예제를 실행 하는 것에 대 한 전체 지침의 예 섹션을 참조 합니다 <xref:System.Web.Hosting.VirtualPathProvider> 클래스 개요입니다.  
  
 이 예제는 두 부분으로 구성 합니다 <xref:System.Web.Hosting.VirtualDirectory> 클래스 구현 및 XML 데이터 파일을 채우는 데는 <xref:System.Data.DataSet> 개체.  
  
 첫 번째 코드 예제는 구현의 <xref:System.Web.Hosting.VirtualDirectory> 클래스입니다. 생성자에서 사용 하 여 메서드를 사용자 지정 <xref:System.Web.Hosting.VirtualPathProvider> 반환할 개체는 <xref:System.Data.DataSet> 개체입니다. 그런 다음 검색는 <xref:System.Data.DataSet> 제공 된 가상 경로 연결 된 디렉터리 정보를 검색할 개체입니다.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#30](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualDirectory.cs#30)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#30](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualDirectory.vb#30)]  
  
 두 번째 예제는 XML 데이터 파일을 채우는 데 사용 합니다 <xref:System.Data.DataSet> 사용자 지정 하 여 반환 되는 개체 <xref:System.Web.Hosting.VirtualPathProvider> 개체입니다. 이 XML 데이터를 사용 하 여 설명 하기 위해 사용 되는 <xref:System.Web.Hosting.VirtualPathProvider>, <xref:System.Web.Hosting.VirtualFile>, 및 <xref:System.Web.Hosting.VirtualDirectory> 클래스를 외부 데이터에서 데이터를 검색 하며 프로덕션 수준의 데이터 저장소를 나타내는 데 적합 하지 않습니다.  
  
```  
<?xml version="1.0" encoding="utf-8" ?>  
  <resource type="dir"   
    path="/vrDir"   
    parentPath=""   
    content="">  
    <resource type="file"   
      path="/vrDir/Level1FileA.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileA." >  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level1FileB.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileB.">  
    </resource>  
    <resource type="dir"   
      path="/vrDir/Level2DirA"   
      parentPath="/vrDir"   
      content="">  
        <resource type="file"   
          path="/vrDir/Level2DirA/Level2FileA.vrf"   
          parentPath="/vrDir/Level2DirA"   
          content="This is the content of file Level2FileA." >  
        </resource>  
        <resource type="file"   
          path="/vrDir/Level2DirA/Level2FileB.vrf"  
          parentPath="/vrDir/Level2DirA"   
          content="This is the content of file Level2FileB.">  
        </resource>  
    </resource>  
    <resource type="dir"   
      path="/vrDir/Level2DirB"   
      parentPath="/vrDir"   
      content="">  
      <resource type="file"   
        path="/vrDir/Level2DirB/Level2FileA.vrf"   
        parentPath="/vrDir/Level2DirB"   
        content="This is the content of file Level2FileA." >  
      </resource>  
      <resource type="file"   
        path="/vrDir/Level2DirB/Level2FileB.vrf"  
        parentPath="/vrDir/Level2DirB"   
        content="This is the content of file Level2FileB.">  
       </resource>  
    </resource>  
  </resource>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>상속 하는 경우는 <see cref="T:System.Web.Hosting.VirtualDirectory" /> 재정의 해야 클래스는 <see cref="P:System.Web.Hosting.VirtualDirectory.Children" />, <see cref="P:System.Web.Hosting.VirtualDirectory.Directories" />, 및 <see cref="P:System.Web.Hosting.VirtualDirectory.Files" /> 구현 하는 개체를 반환 하는 속성을 <see cref="T:System.Collections.IEnumerable" /> 인터페이스.  호출 하 여 가상 디렉터리를 열거 하는 동안 사용 하는 시스템 리소스를 최소화 하기 위해 주의 해야 가상 디렉터리 구조에 큰 적당 한 수의 가상 리소스에는 <see cref="P:System.Web.Hosting.VirtualDirectory.Children" />, <see cref="P:System.Web.Hosting.VirtualDirectory.Directories" />, 또는 <see cref="P:System.Web.Hosting.VirtualDirectory.Files" />속성입니다.</para></block>
    <altmember cref="T:System.Web.Hosting.VirtualFile" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VirtualDirectory (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualDirectory.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; VirtualDirectory(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="new System.Web.Hosting.VirtualDirectory : string -&gt; System.Web.Hosting.VirtualDirectory" Usage="new System.Web.Hosting.VirtualDirectory virtualPath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">이 인스턴스가 나타내는 리소스의 가상 경로입니다.</param>
        <summary><see cref="T:System.Web.Hosting.VirtualDirectory" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제는의 구현 합니다 <xref:System.Web.Hosting.VirtualDirectory.%23ctor%2A> 생성자에서 가상 파일 정보를 검색 하는 <xref:System.Data.DataSet> 사용자 지정에서 제공 하는 개체 <xref:System.Web.Hosting.VirtualPathProvider> 개체입니다. 여기에 `GetData` 채우는 데 사용 되는 메서드는 <xref:System.Web.Hosting.VirtualDirectory> 인스턴스. 예제를 실행 하는 데 필요한 전체 코드의 예제 섹션을 참조 하세요.를 <xref:System.Web.Hosting.VirtualDirectory> 클래스 개요입니다.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#31](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualDirectory.cs#31)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#31](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualDirectory.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public abstract System.Collections.IEnumerable Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable Children" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.Children" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Children As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::IEnumerable ^ Children { System::Collections::IEnumerable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.Collections.IEnumerable" Usage="System.Web.Hosting.VirtualDirectory.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 가상 디렉터리에 포함된 파일과 하위 디렉터리 목록을 가져옵니다.</summary>
        <value><see cref="T:System.Collections.IEnumerable" /> 및 <see cref="T:System.Web.Hosting.VirtualFile" /> 개체가 포함된 <see cref="T:System.Web.Hosting.VirtualDirectory" /> 인터페이스를 구현하는 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Hosting.VirtualDirectory.Children%2A> 속성 둘 다 포함 <xref:System.Web.Hosting.VirtualFile> 및 <xref:System.Web.Hosting.VirtualDirectory> 이 가상 디렉터리에 포함 된 디렉터리와 파일을 나타내는 개체입니다. 만 반환 하는 <xref:System.Web.Hosting.VirtualFile> 개체를 사용 하 여는 <xref:System.Web.Hosting.VirtualDirectory.Files%2A> 속성입니다. 만 반환 하는 <xref:System.Web.Hosting.VirtualDirectory> 개체를 사용 하 여는 <xref:System.Web.Hosting.VirtualDirectory.Directories%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>가상 디렉터리 구조에 큰 적당 한 수의 가상 리소스, 가상 디렉터리를 열거 하 여 사용 하는 시스템 리소스를 최소화 하기 위해 주의 해야 합니다.</para></block>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="Directories">
      <MemberSignature Language="C#" Value="public abstract System.Collections.IEnumerable Directories { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable Directories" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.Directories" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Directories As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::IEnumerable ^ Directories { System::Collections::IEnumerable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Directories : System.Collections.IEnumerable" Usage="System.Web.Hosting.VirtualDirectory.Directories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 디렉터리에 포함된 모든 하위 디렉터리 목록을 가져옵니다.</summary>
        <value><see cref="T:System.Collections.IEnumerable" /> 개체가 포함된 <see cref="T:System.Web.Hosting.VirtualDirectory" /> 인터페이스를 구현하는 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Hosting.VirtualDirectory.Directories%2A> 속성에 들어 <xref:System.Web.Hosting.VirtualDirectory> 이 가상 디렉터리에 포함 된 디렉터리를 나타내는 개체입니다. 반환할 합니다 <xref:System.Web.Hosting.VirtualFile> 개체를 사용 하 여는 <xref:System.Web.Hosting.VirtualDirectory.Files%2A> 속성입니다. 둘 다 반환할 <xref:System.Web.Hosting.VirtualFile> 하 고 <xref:System.Web.Hosting.VirtualDirectory> 개체를 사용 하 여는 <xref:System.Web.Hosting.VirtualDirectory.Children%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>가상 디렉터리 구조에 큰 적당 한 수의 가상 리소스, 가상 디렉터리를 열거 하 여 사용 하는 시스템 리소스를 최소화 하기 위해 주의 해야 합니다.</para></block>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="Files">
      <MemberSignature Language="C#" Value="public abstract System.Collections.IEnumerable Files { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable Files" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.Files" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Files As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::IEnumerable ^ Files { System::Collections::IEnumerable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Files : System.Collections.IEnumerable" Usage="System.Web.Hosting.VirtualDirectory.Files" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 디렉터리에 포함된 모든 파일 목록을 가져옵니다.</summary>
        <value><see cref="T:System.Collections.IEnumerable" /> 개체가 포함된 <see cref="T:System.Web.Hosting.VirtualFile" /> 인터페이스를 구현하는 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Hosting.VirtualDirectory.Files%2A> 속성에 들어 <xref:System.Web.Hosting.VirtualFile> 이 가상 디렉터리에 포함 된 파일을 나타내는 개체입니다. 반환할 합니다 <xref:System.Web.Hosting.VirtualDirectory> 개체를 사용 하 여는 <xref:System.Web.Hosting.VirtualDirectory.Directories%2A> 속성입니다. 둘 다 반환할 <xref:System.Web.Hosting.VirtualFile> 하 고 <xref:System.Web.Hosting.VirtualDirectory> 개체를 사용 하 여는 <xref:System.Web.Hosting.VirtualDirectory.Children%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>가상 디렉터리 구조에 큰 적당 한 수의 가상 리소스, 가상 디렉터리를 열거 하 여 사용 하는 시스템 리소스를 최소화 하기 위해 주의 해야 합니다.</para></block>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="IsDirectory">
      <MemberSignature Language="C#" Value="public override bool IsDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.IsDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDirectory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDirectory { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirectory : bool" Usage="System.Web.Hosting.VirtualDirectory.IsDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 항목이 디렉터리로 처리할 가상 디렉터리임을 나타내는 값을 가져옵니다.</summary>
        <value>항상 <see langword="true" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
  </Members>
</Type>