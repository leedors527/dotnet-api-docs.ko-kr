<Type Name="WebAuthenticationSuccessAuditEvent" FullName="System.Web.Management.WebAuthenticationSuccessAuditEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3c4cc4fd65e779da39a88fd9ec346fdf2c8325f1" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51866064" /></Metadata><TypeSignature Language="C#" Value="public class WebAuthenticationSuccessAuditEvent : System.Web.Management.WebSuccessAuditEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebAuthenticationSuccessAuditEvent extends System.Web.Management.WebSuccessAuditEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebAuthenticationSuccessAuditEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebAuthenticationSuccessAuditEvent&#xA;Inherits WebSuccessAuditEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebAuthenticationSuccessAuditEvent : System::Web::Management::WebSuccessAuditEvent" />
  <TypeSignature Language="F#" Value="type WebAuthenticationSuccessAuditEvent = class&#xA;    inherit WebSuccessAuditEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebSuccessAuditEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>성공한 인증 이벤트에 대한 정보를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 상태 모니터링 프로덕션와 운영 스태프를 배포 된 웹 애플리케이션을 관리할 수 있습니다. <xref:System.Web.Management> 네임 스페이스 응용 프로그램 상태 데이터 및이 데이터 처리를 담당 하는 공급자 형식이 패키징 담당 상태 이벤트 형식을 포함 합니다. 또한 상태 이벤트를 관리 하는 동안 유용한 지 원하는 형식을 포함 합니다.  
  
 다음 목록에는 ASP.NET는 형식의 이벤트를 발생 시키는 기능을 설명 <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>합니다.  
  
> [!NOTE]
>  기본적으로 ASP.NET은 구성 감사 오류 로그에 기록 하면 성공 조건을 심각 하 게 부담을 주어 시스템 리소스입니다.  항상 성공 조건을 기록 하도록 시스템을 구성할 수 있습니다.  
  
-   폼 인증입니다. 성공 조건 감사 됩니다. 성공 감사에는 인증 된 사용자 이름을 포함 합니다. 대신 실패 감사에서 티켓을 암호 해독 또는 유효성 검사 실패는 일반적으로 발생 하므로 사용자 이름, 포함 되지 않습니다. 두 클라이언트 IP 주소를 포함합니다. 관련된 이벤트 감사 코드는 <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess>합니다.  
  
-   멤버 자격입니다. 성공 조건 감사 됩니다. 성공 및 실패 감사에 시도한 사용자 이름을 포함 합니다. 모두 형식의 감사 로그에 올바른 암호를 유지 하는 위험이 있으므로 시도 된 암호가 포함 됩니다. 관련된 이벤트 감사 코드는 <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess>합니다.  
  
 경우는 <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> 이 발생 하면 기본적으로 인증 Success Events Raised 성능 카운터를 업데이트 합니다. 시스템 모니터 (PerfMon)에서이 성능 카운터를 보려면 합니다 **카운터 추가** 창 선택 **ASP.NET** 에 **성능 개체** 드롭 다운 목록에서를 인증 Success Events Raised 성능 카운터를 클릭 합니다 **추가** 단추입니다. 자세한 내용은 [ASP.NET 애플리케이션을 사용 하 여 시스템 모니터 (PerfMon)를 사용 하 여](https://go.microsoft.com/fwlink/?linkid=36882&clcid=0x409) MSDN에서.  
  
> [!NOTE]
>  대부분의 경우에 구현 된 대로 ASP.NET 상태 모니터링 유형을 사용할 수 없게 됩니다 및에서 값을 지정 하 여 상태 모니터링 시스템을 제어 하는 `healthMonitoring` 구성 섹션입니다. 사용자 고유의 사용자 지정 이벤트 및 공급자 상태 모니터링 형식에서 파생할 수 있습니다. 파생의 예는 <xref:System.Web.Management.WebBaseEvent> 클래스,이 항목에 제공 된 예제를 참조 하세요.  
  
   
  
## Examples  
 이 코드 예제는 두 부분: 사용자 지정 하는 방법을 보여 주는 코드 뒤에 구성 파일 발췌 된 <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> 이벤트입니다.  
  
 이 다음은 구성 파일의 일부 `provider` 고 `eventMappings` 섹션입니다. 이미 기본적으로 설정 됩니다. 하기만 하면 설치 프로그램을 제공 하는 것은 `rules` 요소에는 `healthMonitoring` 섹션.  
  
```  
<healthMonitoring  
  enabled="true"  
  heartBeatInterval="0">  
  
    <providers>  
      // Configure the provider to process   
      // the health events.  
      <add name="EventLogProvider"  
         type="System.Web.Management.EventLogWebEventProvider,  
         System.Web,Version=2.0.3600.0,Culture=neutral,  
         PublicKeyToken=b03f5f7f11d50a3a"/>  
    </providers>  
  
    <eventMappings>  
       <clear />  
       // Configure the custom event   
       // to handle the audit events.   
        <add name="SampleWebAuthenticationSuccessAuditEvent"   
          type="SamplesAspNet.SampleWebAuthenticationSuccessAuditEvent,  
          webauthsuccessaudit, Version=1.0.1735.23144, Culture=neutral,   
          PublicKeyToken=dd969eda3f3f6ae1, processorArchitecture=MSIL" />  
  
     </eventMappings>  
     <rules>  
       <clear/>  
       // Establish the connection between custom event   
       // and the provider that must process it.  
      <add name="Log Authentication Success Audits"   
        eventName="SampleWebAuthenticationFailureAuditEvent"  
        provider="EventLogProvider"   
        profile="Custom" />\  
     </rules>  
  
</healthMonitoring>  
```  
  
 다음 코드에 사용자 지정 하는 방법을 보여 줍니다는 <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> 이벤트입니다.  
  
 [!code-csharp[System.Web.Management.WebAuthenticationSuccessAuditEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/CS/WebAuthenticationSuccessAuditEvent.cs#1)]
 [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/VB/WebAuthenticationSuccessAuditEvent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" />
    <altmember cref="T:System.Web.Management.WebEventCodes" />
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">ASP.NET 상태 모니터링 개요</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.Management.WebAuthenticationSuccessAuditEvent" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebAuthenticationSuccessAuditEvent (string message, object eventSource, int eventCode, string nameToAuthenticate);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, string nameToAuthenticate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, nameToAuthenticate As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebAuthenticationSuccessAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, System::String ^ nameToAuthenticate);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebAuthenticationSuccessAuditEvent : string * obj * int * string -&gt; System.Web.Management.WebAuthenticationSuccessAuditEvent" Usage="new System.Web.Management.WebAuthenticationSuccessAuditEvent (message, eventSource, eventCode, nameToAuthenticate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="nameToAuthenticate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">이벤트 설명입니다.</param>
        <param name="eventSource">이벤트의 소스인 개체입니다.</param>
        <param name="eventCode">이벤트와 관련된 코드입니다. 사용자 지정 이벤트를 구현할 때 이벤트 코드는 <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />보다 커야 합니다.</param>
        <param name="nameToAuthenticate">인증된 사용자의 이름입니다.</param>
        <summary>제공된 매개 변수를 사용하여 <see cref="T:System.Web.Management.WebAuthenticationSuccessAuditEvent" /> 클래스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 ASP.NET 상태 모니터링 시스템에서 내부적으로 사용 됩니다. 인스턴스화를 사용 하지 것입니다는 <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> 개체에 있지만이 클래스에서 상속 되는 이벤트 형식을 구현할 때이 생성자를 호출할 수 있습니다.  
  
> [!NOTE]
>  <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent.%23ctor%2A> 생성자는 코드에서 직접 사용할 수 없습니다. ASP.NET에서 호출 됩니다. 호출할 수 있습니다 합니다 <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent.%23ctor%2A> 에서 파생 하는 경우 생성자는 <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제에는이 생성자를 사용자 지정 하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Management.WebAuthenticationSuccessAuditEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/CS/WebAuthenticationSuccessAuditEvent.cs#2)]
 [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/VB/WebAuthenticationSuccessAuditEvent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebAuthenticationSuccessAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode, string nameToAuthenticate);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode, string nameToAuthenticate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer, nameToAuthenticate As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebAuthenticationSuccessAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode, System::String ^ nameToAuthenticate);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebAuthenticationSuccessAuditEvent : string * obj * int * int * string -&gt; System.Web.Management.WebAuthenticationSuccessAuditEvent" Usage="new System.Web.Management.WebAuthenticationSuccessAuditEvent (message, eventSource, eventCode, eventDetailCode, nameToAuthenticate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
        <Parameter Name="nameToAuthenticate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">이벤트 설명입니다.</param>
        <param name="eventSource">이벤트의 소스인 개체입니다.</param>
        <param name="eventCode">이벤트와 관련된 코드입니다. 사용자 지정 이벤트를 구현할 때 이벤트 코드는 <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />보다 커야 합니다.</param>
        <param name="eventDetailCode">이벤트의 상세 식별자를 지정하는 <see cref="T:System.Web.Management.WebEventCodes" /> 값입니다.</param>
        <param name="nameToAuthenticate">인증된 사용자의 이름입니다.</param>
        <summary>제공된 매개 변수를 사용하여 <see cref="T:System.Web.Management.WebSuccessAuditEvent" /> 클래스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 ASP.NET 상태 모니터링 시스템에서 내부적으로 사용 됩니다. 인스턴스화를 사용 하지 것입니다는 <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> 개체에 있지만이 클래스에서 상속 되는 이벤트 형식을 구현할 때이 생성자를 호출할 수 있습니다.  
  
> [!NOTE]
>  <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent.%23ctor%2A> 생성자는 코드에서 직접 사용할 수 없습니다. ASP.NET에서 호출 됩니다. 호출할 수 있습니다 합니다 <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent.%23ctor%2A> 에서 파생 하는 경우 생성자는 <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제에는이 생성자를 사용자 지정 하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/CS/WebAuthenticationSuccessAuditEvent.cs#3)]
 [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/VB/WebAuthenticationSuccessAuditEvent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameToAuthenticate">
      <MemberSignature Language="C#" Value="public string NameToAuthenticate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NameToAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameToAuthenticate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NameToAuthenticate { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameToAuthenticate : string" Usage="System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>인증된 사용자의 이름을 가져옵니다.</summary>
        <value>인증된 사용자의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 성공 감사에만 인증된 된 사용자의 이름을 포함합니다. 실패 감사는 일반적으로 실패 한 암호 해독 또는 유효성 검사에서 발생 하므로 사용자 이름을 넣지 마십시오.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate%2A> 속성을 사용하는 방법을 보여 줍니다.  
  
 [!code-csharp[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/CS/WebAuthenticationSuccessAuditEvent.cs#3)]
 [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/VB/WebAuthenticationSuccessAuditEvent.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" />
        <altmember cref="T:System.Web.Management.WebEventCodes" />
      </Docs>
    </Member>
  </Members>
</Type>