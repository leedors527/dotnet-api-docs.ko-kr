<Type Name="WebSuccessAuditEvent" FullName="System.Web.Management.WebSuccessAuditEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ba8631ac99a8425208ffd28b81693ba0500242fd" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51864822" /></Metadata><TypeSignature Language="C#" Value="public class WebSuccessAuditEvent : System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebSuccessAuditEvent extends System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebSuccessAuditEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebSuccessAuditEvent&#xA;Inherits WebAuditEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebSuccessAuditEvent : System::Web::Management::WebAuditEvent" />
  <TypeSignature Language="F#" Value="type WebSuccessAuditEvent = class&#xA;    inherit WebAuditEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebAuditEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>성공적인 보안 이벤트에 대한 정보를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 상태 모니터링 프로덕션와 운영 스태프를 배포 된 웹 애플리케이션을 관리할 수 있습니다. <xref:System.Web.Management> 네임 스페이스에는 응용 프로그램 상태 데이터 및이 데이터 처리를 담당 하는 공급자 형식이 패키징 담당 상태 이벤트 유형을 포함 합니다. 또한 상태 이벤트를 관리 하는 동안 유용한 지 원하는 형식을 포함 합니다.  
  
 <xref:System.Web.Management.WebSuccessAuditEvent> 클래스 성공한 보안 관련 작업을 수행 하는 경우 사용 됩니다. 이 예로 웹 요청에 대 한 성공적인 URL 권한 부여 합니다.  
  
 다음과 같은 형식의 이벤트에 대 한 기능을 설명 <xref:System.Web.Management.WebSuccessAuditEvent> ASP.NET에 의해 발생 합니다.  
  
-   파일 권한 부여 합니다. 성공 조건 감사 됩니다. 파일 권한 부여를 Windows Id를 요청과 연결 된 경우에 ASP.NET에서 시도 됩니다. 관련된 이벤트 감사 코드는 <xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationSuccess>합니다.  
  
-   URL 권한 부여 합니다. URL 리소스를 부여의 액세스를 나타냅니다. 성공 조건 감사 됩니다. 관련된 이벤트 감사 코드는 <xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationSuccess>합니다.  
  
-   다른 보안 조건입니다. 다음은 관련 된 이벤트 코드의 목록입니다.  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess>  
  
 경우는 <xref:System.Web.Management.WebSuccessAuditEvent> 는 확인 하 고 관련된 Audit Success Events Raised 성능 카운터를 증가 시킵니다 ASP.NET 상태 모니터링 발생는 `healthMonitoring` 모든 공급자는 이벤트를 구독할 지 여부를 결정 하는 구성 합니다. 공급자는 이벤트를 구독 하는 경우 asp 합니다.  
  
> [!NOTE]
>  시스템 모니터 (PerfMon)에서 감사 성공 이벤트 Raised 성능 카운터를 보려면 합니다 **카운터 추가** 창 선택 **ASP.NET** 에서 합니다 **성능 개체** 드롭다운 목록에서를 **감사 성공 이벤트 발생** 성능 카운터를 클릭 합니다 **추가** 단추입니다. 자세한 내용은 [ASP.NET 애플리케이션 성능 모니터링](https://msdn.microsoft.com/library/c96da1d1-6077-48d3-88e2-d9127ed91cf5)합니다.  
  
 성공 감사가 필요한 조건을 나타내므로에 구독 하지 않을 수 있습니다. 사이트에 대 한 감사 액세스를 제공 하기 위해를 구독할 수 있습니다.  
  
> [!NOTE]
>  대부분의 경우에 구현 된 대로 ASP.NET 상태 모니터링 유형을 사용할 수 없게 됩니다 및에서 값을 지정 하 여 상태 모니터링 시스템을 제어 하는 `healthMonitoring` 구성 섹션입니다. 사용자 고유의 사용자 지정 이벤트 및 공급자 상태 모니터링 형식에서 파생할 수 있습니다. 파생의 예는 <xref:System.Web.Management.WebSuccessAuditEvent> 클래스,이 항목에 제공 된 예제를 참조 하세요.  
  
   
  
## Examples  
 다음 코드 예제에서 파생 하는 방법을 보여 줍니다는 <xref:System.Web.Management.WebSuccessAuditEvent> 클래스 사용자 지정 감사 이벤트를 만듭니다.  
  
 [!code-csharp[System.Web.Management.WebSuccessAuditEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/CS/websuccessauditevent.cs#1)]
 [!code-vb[System.Web.Management.WebSuccessAuditEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/VB/websuccessauditevent.vb#1)]  
  
 다음 예제에는 ASP.NET 상태 모니터링 이벤트를 사용할 수 있도록 하는 구성 파일의 일부입니다.  
  
```  
<healthMonitoring   
..enabled="true"  
..heartBeatInterval="0">   
  <providers>  
    <add name="EventLogProvider"   
    type="System.Web.Management.EventLogWebEventProvider,  
    System.Web,Version=2.0.3600.0,Culture=neutral,  
    PublicKeyToken=b03f5f7f11d50a3a"/>  
  </providers>  
  <eventMappings>  
    <add  name="SampleWebSuccessAuditEvent"   
      type="SamplesAspNet.SampleWebSuccessAuditEvent,  
      websuccessauditevent,Version=1.0.1663.31140,   
      Culture=neutral,   
      PublicKeyToken=0d1fa0f69d94de96,   
      processorArchitecture=MSIL"/>  
  </eventMappings>  
  <rules>  
    <add name="Custom Failure Audit Default"  
      eventName=" SampleWebFailureAuditEvent "  
      provider="EventLogProvider"  
      profile="Default"/>    
  </rules>  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebAuditEvent" />
    <altmember cref="T:System.Web.Management.WebFailureAuditEvent" />
    <altmember cref="T:System.Web.Management.WebEventCodes" />
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">ASP.NET 상태 모니터링 개요</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.Management.WebSuccessAuditEvent" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebSuccessAuditEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebSuccessAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebSuccessAuditEvent : string * obj * int -&gt; System.Web.Management.WebSuccessAuditEvent" Usage="new System.Web.Management.WebSuccessAuditEvent (message, eventSource, eventCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">이벤트 설명입니다.</param>
        <param name="eventSource">이벤트의 소스인 개체입니다.</param>
        <param name="eventCode">이벤트와 관련된 코드입니다. 사용자 지정 이벤트를 구현할 때 이벤트 코드는 <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />보다 커야 합니다.</param>
        <summary>제공된 매개 변수를 사용하여 <see cref="T:System.Web.Management.WebSuccessAuditEvent" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 ASP.NET 상태 모니터링 시스템에서 내부적으로 사용 됩니다. 인스턴스화를 사용 하지 것입니다는 <xref:System.Web.Management.WebSuccessAuditEvent> 개체에 있지만이 클래스에서 상속 되는 이벤트 형식을 구현할 때이 생성자를 호출할 수 있습니다.  
  
> [!NOTE]
>  <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> 생성자는 코드에서 직접 사용할 수 없습니다. ASP.NET에서 호출 됩니다. 호출할 수 있습니다 합니다 <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> 에서 파생 하는 경우 생성자는 <xref:System.Web.Management.WebSuccessAuditEvent> 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제이 생성자를 호출 하는 방법을 보여 줍니다는 `SampleWebSuccessAuditEvent` 클래스입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.Management.WebSuccessAuditEvent> 클래스입니다.  
  
 [!code-csharp[System.Web.Management.WebSuccessAuditEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/CS/websuccessauditevent.cs#2)]
 [!code-vb[System.Web.Management.WebSuccessAuditEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/VB/websuccessauditevent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebSuccessAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebSuccessAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebSuccessAuditEvent : string * obj * int * int -&gt; System.Web.Management.WebSuccessAuditEvent" Usage="new System.Web.Management.WebSuccessAuditEvent (message, eventSource, eventCode, eventDetailCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">이벤트 설명입니다.</param>
        <param name="eventSource">이벤트의 소스인 개체입니다.</param>
        <param name="eventCode">이벤트와 관련된 코드입니다. 사용자 지정 이벤트를 구현할 때 이벤트 코드는 <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />보다 커야 합니다.</param>
        <param name="eventDetailCode">이벤트의 상세 식별자를 지정하는 <see cref="T:System.Web.Management.WebEventCodes" /> 값입니다.</param>
        <summary>제공된 매개 변수를 사용하여 <see cref="T:System.Web.Management.WebSuccessAuditEvent" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자는 ASP.NET 상태 모니터링 시스템에서 내부적으로 사용 됩니다. 인스턴스화를 사용 하지 것입니다는 <xref:System.Web.Management.WebSuccessAuditEvent> 개체에 있지만이 클래스에서 상속 되는 이벤트 형식을 구현할 때이 생성자를 호출할 수 있습니다.  
  
> [!NOTE]
>  <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> 생성자는 코드에서 직접 사용할 수 없습니다. ASP.NET에서 호출 됩니다. 호출할 수 있습니다 합니다 <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> 에서 파생 하는 경우 생성자는 <xref:System.Web.Management.WebSuccessAuditEvent> 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제이 생성자를 호출 하는 방법을 보여 줍니다는 `SampleWebSuccessAuditEvent` 클래스입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.Management.WebSuccessAuditEvent> 클래스입니다.  
  
 [!code-csharp[System.Web.Management.WebSuccessAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/CS/websuccessauditevent.cs#3)]
 [!code-vb[System.Web.Management.WebSuccessAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/VB/websuccessauditevent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberSignature Language="F#" Value="override this.IncrementPerfCounters : unit -&gt; unit" Usage="webSuccessAuditEvent.IncrementPerfCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Audit Success Events Raised 성능 카운터를 증가시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Audit Success Events Raised 성능 카운터는 애플리케이션이 시작 된 이후에 발생 한 성공 감사 이벤트의 수를 추적 합니다. 또한이 메서드는 부모 호출 <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A> 메서드 이벤트가 카운터를 증가 시킵니다. 이 카운터는 발생 한 이벤트의 총 수를 추적 합니다.  
  
 시스템 모니터 (PerfMon)에서 이러한 성능 카운터를 보려면 합니다 **카운터 추가** 창 선택 **ASP.NET** 에서 합니다 **성능 개체** 드롭 다운 목록에서를 클릭 하려는 성능 카운터는 **추가** 단추입니다. 자세한 내용은 [ASP.NET 애플리케이션 성능 모니터링](https://msdn.microsoft.com/library/c96da1d1-6077-48d3-88e2-d9127ed91cf5)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>