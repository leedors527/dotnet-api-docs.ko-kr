<Type Name="PageRouteHandler" FullName="System.Web.Routing.PageRouteHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="02b77523e989609d168d7078124ce031549531a3" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51914359" /></Metadata><TypeSignature Language="C#" Value="public class PageRouteHandler : System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PageRouteHandler extends System.Object implements class System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.PageRouteHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class PageRouteHandler&#xA;Implements IRouteHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageRouteHandler : System::Web::Routing::IRouteHandler" />
  <TypeSignature Language="F#" Value="type PageRouteHandler = class&#xA;    interface IRouteHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Routing.IRouteHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>URL이 실제 파일에 매핑되는 방법을 정의하기 위한 속성 및 메서드를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스를 전달 <xref:System.Web.Routing.PageRouteHandler> 에 <xref:System.Web.Routing.Route> 물리적 파일의 URL에 매핑하기 위해 생성자입니다. <xref:System.Web.Routing.PageRouteHandler> 개체는 물리적 파일의 가상 경로 지정 하 고 실제 URL에 대 한 권한 부여 규칙 선택 되었는지 여부를 결정 합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Routing.Route" />
    <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET 라우팅</related>
    <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">방법: Web Forms 애플리케이션에 대 한 경로 정의 합니다.</related>
    <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">연습: ASP.NET Web Forms 애플리케이션에서 라우팅 사용</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.Routing.PageRouteHandler" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET 라우팅</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">방법: Web Forms 애플리케이션에 대 한 경로 정의 합니다.</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">연습: ASP.NET Web Forms 애플리케이션에서 라우팅 사용</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRouteHandler (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRouteHandler(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.PageRouteHandler : string -&gt; System.Web.Routing.PageRouteHandler" Usage="new System.Web.Routing.PageRouteHandler virtualPath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">이 <see cref="P:System.Web.Routing.RouteData.Route" /> 개체에 대한 실제 파일의 가상 경로입니다. 해당 파일이 현재 애플리케이션에 있어야 합니다. 따라서 경로는 물결표(~)로 시작해야 합니다.</param>
        <summary><see cref="T:System.Web.Routing.PageRouteHandler" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하는 경우는 <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> 속성이 `true`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="virtualPath" /> 매개 변수가 <see langword="null" />이거나 빈 문자열이거나 "~/"로 시작하지 않습니다.</exception>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET 라우팅</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">방법: Web Forms 애플리케이션에 대 한 경로 정의 합니다.</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">연습: ASP.NET Web Forms 애플리케이션에서 라우팅 사용</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRouteHandler (string virtualPath, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string virtualPath, bool checkPhysicalUrlAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPath As String, checkPhysicalUrlAccess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRouteHandler(System::String ^ virtualPath, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.PageRouteHandler : string * bool -&gt; System.Web.Routing.PageRouteHandler" Usage="new System.Web.Routing.PageRouteHandler (virtualPath, checkPhysicalUrlAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualPath">이 <see cref="P:System.Web.Routing.RouteData.Route" /> 개체에 대한 실제 파일의 가상 경로입니다. 해당 파일이 현재 애플리케이션에 있어야 합니다. 따라서 경로는 물결표(~)로 시작해야 합니다.</param>
        <param name="checkPhysicalUrlAccess">이 속성이 <see langword="false" />로 설정되면 실제 페이지의 URL이 아닌 요청 URL에 권한 부여 규칙이 적용됩니다. 이 속성이 <see langword="true" />로 설정되면 실제 페이지의 URL과 요청 URL에 모두 권한 부여 규칙이 적용됩니다.</param>
        <summary><see cref="T:System.Web.Routing.PageRouteHandler" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로 <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> 속성은 `true`합니다. 따라서 경로 URL을 하는 물리적 페이지의 url에 모두 적용할 권한 부여 규칙을 사용 하도록 하려는 경우 사용할 수는 <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%29> 대신이 생성자는 생성자입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="virtualPath" /> 매개 변수가 <see langword="null" />이거나 빈 문자열이거나 "~/"로 시작하지 않습니다.</exception>
        <altmember cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET 라우팅</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">방법: Web Forms 애플리케이션에 대 한 경로 정의 합니다.</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">연습: ASP.NET Web Forms 애플리케이션에서 라우팅 사용</related>
      </Docs>
    </Member>
    <Member MemberName="CheckPhysicalUrlAccess">
      <MemberSignature Language="C#" Value="public bool CheckPhysicalUrlAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckPhysicalUrlAccess" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckPhysicalUrlAccess As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckPhysicalUrlAccess { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckPhysicalUrlAccess : bool" Usage="System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>권한 부여 규칙이 실제 파일의 URL에 적용되는지 여부를 결정하는 값을 가져옵니다.</summary>
        <value>권한 부여에 대해 경로와 연결된 실제 파일의 URL을 확인하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정할 수 있습니다는 <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> 사용 하는 경우 속성은 <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%2CSystem.Boolean%29> 생성자입니다.  
  
 값을 <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> 속성에 따라 결정 여부를 <xref:System.Web.Routing.PageRouteHandler> 개체 경로 URL에 대해서만 또는 물리적 페이지 및 경로 URL을 모두에 대 한 보안 권한을 확인 합니다.  
  
 경우는 <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> 속성이 `true` (기본값) 인 사용자 경로 URL 및 실제 URL에 액세스할 권한이 있어야 합니다. 경우는 <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> 속성이 `false`사용자에 게 필요한 사용 권한 경로 URL에 액세스 하 고 실제 URL에 대 한 권한을 확인 하지 않습니다.  
  
 다음 예제에서와 같이 권한 Web.config 파일에서 정의 됩니다.  
  
```  
<configuration>  
  <location path="categoriespage.aspx">  
    <system.web>  
      <authorization>  
        <allow roles="admin"/>  
        <deny users="*"/>  
      </authorization>  
    </system.web>  
  </location>  
  <location path="category">  
    <system.web>  
      <authorization>  
        <allow users="*"/>  
      </authorization>  
    </system.web>  
  </location>  
</configuration>  
```  
  
 포함 된 요청 URL에 대 한 `Category/food/show` 경로 URL 패턴을 도메인 이름 뒤 `Category/{action}/{categoryName}` 물리적 페이지 Categoriespage.aspx, 이며 [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] 다음 방법 중 하나에서 이전 예제에 정의 된 사용 권한을 적용 합니다.  
  
-   경우는 <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> 속성은 `false`모든 사용자에 게 액세스 권한이 부여 된, 모든 사용자가 액세스 권한을 부여한로 시작 하는 URL 패턴 `category`합니다.  
  
-   경우는 <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> 속성은 `true`만 `admin` 사용자에 대 한 액세스 권한이 부여 됩니다. 모든 사용자가 시작 하는 URL 패턴에는 액세스할 `category`만 `admin` 사용자 Categoriespage.aspx 물리적 페이지에 액세스할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET 라우팅</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">방법: Web Forms 애플리케이션에 대 한 경로 정의 합니다.</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">연습: ASP.NET Web Forms 애플리케이션에서 라우팅 사용</related>
      </Docs>
    </Member>
    <Member MemberName="GetHttpHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler GetHttpHandler (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.IHttpHandler GetHttpHandler(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::IHttpHandler ^ GetHttpHandler(System::Web::Routing::RequestContext ^ requestContext);" />
      <MemberSignature Language="F#" Value="abstract member GetHttpHandler : System.Web.Routing.RequestContext -&gt; System.Web.IHttpHandler&#xA;override this.GetHttpHandler : System.Web.Routing.RequestContext -&gt; System.Web.IHttpHandler" Usage="pageRouteHandler.GetHttpHandler requestContext" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Routing.IRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext">요청에 대한 정보를 캡슐화하는 개체입니다.</param>
        <summary>요청을 처리하는 개체를 반환합니다.</summary>
        <returns>요청을 처리하는 개체입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="requestContext" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET 라우팅</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">방법: Web Forms 애플리케이션에 대 한 경로 정의 합니다.</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">연습: ASP.NET Web Forms 애플리케이션에서 라우팅 사용</related>
      </Docs>
    </Member>
    <Member MemberName="GetSubstitutedVirtualPath">
      <MemberSignature Language="C#" Value="public string GetSubstitutedVirtualPath (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetSubstitutedVirtualPath(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath(System.Web.Routing.RequestContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetSubstitutedVirtualPath(System::Web::Routing::RequestContext ^ requestContext);" />
      <MemberSignature Language="F#" Value="member this.GetSubstitutedVirtualPath : System.Web.Routing.RequestContext -&gt; string" Usage="pageRouteHandler.GetSubstitutedVirtualPath requestContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext">요청에 대한 정보를 캡슐화하는 개체입니다.</param>
        <summary>대체 매개 변수에 대체가 적용된 후 경로에 대한 실제 파일의 가상 경로를 반환합니다.</summary>
        <returns>경로에서 생성된 실제 파일의 URL입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> 값 대체 매개 변수를 포함 하지 않는 <xref:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath%2A> 동일한 값을 반환 하는 메서드를 <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="requestContext" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET 라우팅</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">방법: Web Forms 애플리케이션에 대 한 경로 정의 합니다.</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">연습: ASP.NET Web Forms 애플리케이션에서 라우팅 사용</related>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="public string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.PageRouteHandler.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Routing.PageRouteHandler.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 경로와 연결된 웹 페이지의 가상 경로를 가져옵니다.</summary>
        <value>대체 매개 변수에 대한 대체가 적용되기 전의 웹 페이지 URL입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정한 합니다 <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> 속성에는 <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> 생성자 또는 <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> 생성자입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET 라우팅</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">방법: Web Forms 애플리케이션에 대 한 경로 정의 합니다.</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">연습: ASP.NET Web Forms 애플리케이션에서 라우팅 사용</related>
      </Docs>
    </Member>
  </Members>
</Type>