<Type Name="JavaScriptSerializer" FullName="System.Web.Script.Serialization.JavaScriptSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9c600895e998de3cd0606108f6b2c1c3b3b6beb3" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57927361" /></Metadata><TypeSignature Language="C#" Value="public class JavaScriptSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JavaScriptSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class JavaScriptSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptSerializer" />
  <TypeSignature Language="F#" Value="type JavaScriptSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>serialization 및 deserialization에는 <see href="https://www.newtonsoft.com/json">Json.NET</see>이 사용되어야 합니다. AJAX 사용 애플리케이션을 위한 serialization 및 deserialization 기능을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 클래스는 데 내부적으로 비동기 통신 계층에서 브라우저와 웹 서버 간에 전달 되는 데이터 직렬화 및 역직렬화 합니다. Serializer의 해당 인스턴스에 액세스할 수 없습니다. 그러나이 클래스는 공용 API를 노출합니다. 따라서 관리 코드에서 사용 하 여 JavaScript 개체 표기법 (JSON)을 사용 하려는 경우 클래스를 사용할 수 있습니다.  
  
 개체를 serialize 하려면 사용 된 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> 메서드. JSON 문자열을 deserialize 하는 데 사용 합니다 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> 또는 <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> 메서드. 기본적으로 지원 되지 않는 형식을 serialize 및 deserialize 하 <xref:System.Web.Script.Serialization.JavaScriptSerializer>를 사용 하 여 사용자 지정 변환기를 구현 합니다 <xref:System.Web.Script.Serialization.JavaScriptConverter> 클래스입니다. 다음 변환기를 사용 하 여 등록 된 <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> 메서드.  
  
## <a name="mapping-between-managed-types-and-json"></a>관리 되는 형식 및 JSON 간 매핑  
 다음 표에서 serialization 프로세스에 대 한 관리 되는 형식 및 JSON 간의 매핑을 보여 줍니다. 이러한 관리 되는 형식에서 기본적으로 지 <xref:System.Web.Script.Serialization.JavaScriptSerializer>합니다. 관리 되는 형식에 JSON 문자열에서 역직렬화 하 고는 동일한 매핑을 적용 합니다. 그러나 deserialization 비대칭; 수 있습니다. 직렬화 가능한 모든 관리 되는 형식 JSON에서 deserialize 할 수 있습니다.  
  
> [!NOTE]
>  다차원 배열을 1 차원 배열로 serialize 되 고 플랫 배열로 사용 해야 합니다.  
  
|관리 되는 형식|해당 하는 JSON|  
|------------------|---------------------|  
|<xref:System.String> (Utf-8 인코딩만)입니다.|문자열|  
|<xref:System.Char>|문자열|  
|단일 null 문자 (예: \0)|Null|  
|<xref:System.Boolean>|부울. Json `true` 또는 `false`|  
|`null` (`null` 개체가 참조 하 고 <xref:System.Nullable> 값 형식).|Null 문자열 값|  
|<xref:System.DBNull>|Null 문자열 값|  
|숫자 (또는 숫자와 호환)에 대 한 기본 형식: <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>를 <xref:System.UInt16>, <xref:System.UInt32>를 <xref:System.UInt64>, <xref:System.Double>, 및 <xref:System.Single>합니다. 고정 문화권의 문자열 표현이 사용 됩니다.|수|  
|<xref:System.DateTime>|Date 개체를 json "\\/ (틱 수가) 날짜\\/"입니다. 틱 수입니다 (밀리초) 01 1970 년 1 월 UTC 자정 이후 경과 된 틱 수를 나타내는 long 한 값 양수 또는 음수입니다.<br /><br /> 지원 되는 최대 날짜 값이 <xref:System.DateTime.MaxValue> (12/31/9999 오후 11시 59분: 59)의 최소 지원 되는 날짜 값 이며 <xref:System.DateTime.MinValue> (1/1/0001 오전 12시: 00).|  
|정수 형식의 열거형|열거형 값의 정수로|  
|구현 하는 형식을 <xref:System.Collections.IEnumerable> 또는 <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> 에 없고 구현의 <xref:System.Collections.IDictionary> 또는 <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>합니다. 와 같은 형식이 포함 됩니다 <xref:System.Array>하십시오 <xref:System.Collections.ArrayList>, 및 <xref:System.Collections.Generic.List%601>합니다.|JSON 배열 구문을 사용 하는 배열|  
|구현 하는 형식을 <xref:System.Collections.IDictionary> 또는 <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>합니다. 와 같은 형식이 포함 됩니다 <xref:System.Collections.Generic.Dictionary%602> 고 <xref:System.Collections.Hashtable>입니다.|JSON 사전 구문을 사용 하 여 JavaScript 개체|  
|공용 인스턴스 속성을 갖는 사용자 지정 구체적인 (비추상) 형식을 접근자 또는 공용 인스턴스 필드를 가져옵니다.<br /><br /> 쓰기 전용 속성을 공용, 공용 속성 또는 공용 필드 특성으로 표시 <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>, 및 이러한 형식에서 공용 인덱싱된 속성은 무시 됩니다.|JSON 사전 구문을 사용 하 여 JavaScript 개체입니다. "__Type" 라는 특수 메타 데이터 속성이 올바른 deserialization을 위해 포함 됩니다. 공용 인스턴스 속성 get 접근자 올바른 deserialization 되도록 설정 되었는지 확인 합니다.|  
|<xref:System.Guid>|GUID의 문자열 표현|  
|<xref:System.Uri>|반환 값의 문자열 표현 <xref:System.Uri.GetComponents%2A>|  
  
   
  
## Examples  
 첫 번째 예제에는 데이터 개체 serialize 및 deserialize 하는 방법에 대 한 간단한 설명을 제공 합니다. 아래 표시 된 사용자 라는 클래스가 필요 합니다.  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 다음 예제에서는 사용 하는 더 복잡 하 고 전체 프로젝트는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 클래스를 저장 하 고 JSON serialization을 사용 하 여 개체의 상태를 복원 합니다. 이 코드에 대 한 제공 되는 사용자 지정 변환기를 사용 하 여 <xref:System.Web.Script.Serialization.JavaScriptConverter> 클래스입니다.  
  
 [!code-aspx-csharp[System.Web.Script.Serialization#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#4)]
 [!code-aspx-vb[System.Web.Script.Serialization#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#4)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/4e876911-6276-4de8-b22a-d326a2033582">ASP.NET AJAX의 웹 서비스를 사용 하 여</related>
    <related type="Article" href="https://msdn.microsoft.com/library/fc06c224-f01a-45be-94af-bd71afbc07b0">ASP.NET AJAX의 클라이언트 스크립트에서 웹 서비스 호출</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>형식 확인자가 없는 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 클래스 없이 형식 확인자를 serialize 된 JSON 문자열에서 형식 메타 데이터 속성 ("__type" 라는)를 포함 되지 않습니다. 형식 메타 데이터 속성을 사용 합니다 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> 및 <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> JSON 문자열로 변환 될 적절 한 관리를 확인 하는 메서드를 입력 합니다. 유형 해결 프로그램에 대 한 내용은 참조는 <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> 클래스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer (System.Web.Script.Serialization.JavaScriptTypeResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Script.Serialization.JavaScriptTypeResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As JavaScriptTypeResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer(System::Web::Script::Serialization::JavaScriptTypeResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="new System.Web.Script.Serialization.JavaScriptSerializer : System.Web.Script.Serialization.JavaScriptTypeResolver -&gt; System.Web.Script.Serialization.JavaScriptSerializer" Usage="new System.Web.Script.Serialization.JavaScriptSerializer resolver" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Web.Script.Serialization.JavaScriptTypeResolver" />
      </Parameters>
      <Docs>
        <param name="resolver">사용자 지정 형식 확인자 개체입니다.</param>
        <summary>사용자 지정 형식 확인자가 있는 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 개체를 직렬화 되는 경우는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 클래스가 사용 하는 `resolver` 매개 변수를 형식 메타 데이터 속성 ("__type")에 대 한 serialize 된 JSON 문자열에 포함할 적절 한 값을 확인 합니다. 마찬가지로,는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 클래스는 JSON 문자열을 역직렬화, 확인자 인스턴스를 사용 하 여 적절 한 관리 되는 형식으로 형식 메타 데이터 속성 값을 확인 합니다.  
  
 설정할 수 있습니다 합니다 `resolver` 매개 변수를 `null`, 호출에 해당 하는 <xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A> 생성자입니다.  
  
 인스턴스의 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 특별 한 형식 확인자를 사용 하 여 클라이언트 스크립트에서 웹 서비스 호출에 대 한 비동기 통신 계층에서 사용 되는 합니다. 이 형식 확인자 웹 서비스의 메서드 시그니처가 있는 것에 정의 된 형식을 역직렬화 할 수 있는 제한 된 <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> 적용 합니다. 이 기본 제공 형식 확인자를 프로그래밍 방식으로 수정할 수 없습니다.  
  
> [!IMPORTANT]
>  사용자 지정 형식 확인자를 사용 하 여 초기화 하는이 개체의 인스턴스를 사용 하 여 보안 위험을 표시할 수 있습니다. 신뢰할 수 있는 데이터로만 이 개체를 사용하세요. 자세한 내용은 [데이터 유효성](https://www.owasp.org/index.php/Data_Validation)을 참조하세요.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
        <altmember cref="T:System.Web.Script.Serialization.SimpleTypeResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/4e876911-6276-4de8-b22a-d326a2033582">ASP.NET AJAX의 웹 서비스를 사용 하 여</related>
      </Docs>
    </Member>
    <Member MemberName="ConvertToType">
      <MemberSignature Language="C#" Value="public object ConvertToType (object obj, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertToType(object obj, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType (obj As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertToType(System::Object ^ obj, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj * Type -&gt; obj" Usage="javaScriptSerializer.ConvertToType (obj, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="obj">변환할 개체입니다.</param>
        <param name="targetType">개체를 변환할 대상 유형입니다.</param>
        <summary>지정된 개체를 지정된 형식으로 변환합니다.</summary>
        <returns>serialize된 JSON 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 인스턴스 형식, 사용자 지정 변환기를 등록 되는 serializer 호출 하 여 직렬화 되는 <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> 메서드를 JSON 형식 문자열로 변환할 수는 이름/값 쌍의 사전을 가져옵니다.  
  
 합니다 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> 메서드 또는 인스턴스를 등록 하는 경우 개체 그래프가 너무 복잡 한 경우 예외를 throw 할 수 있습니다 <xref:System.Web.Script.Serialization.JavaScriptConverter> 변환기 재귀 했을 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">결과 JSON 형식의 문자열이 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />의 값을 초과합니다.  
  
또는 
 <paramref name="obj" />에 순환 참조가 있습니다. 순환 참조는 자식 개체와 부모 개체에서 서로를 참조하는 경우에 발생하며,</exception>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />로 정의된 재귀 한계를 초과했습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToType&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T ConvertToType&lt;T&gt; (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T ConvertToType&lt;T&gt;(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType(Of T) (obj As Object) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T ConvertToType(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj -&gt; 'T" Usage="javaScriptSerializer.ConvertToType obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T"><paramref name="obj" />가 변환될 형식입니다.</typeparam>
        <param name="obj">변환할 개체입니다.</param>
        <summary>지정된 개체를 지정된 형식으로 변환합니다.</summary>
        <returns>대상 형식으로 변환된 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> 메서드를 나타내는 개체 인스턴스를 변환 하려고 `obj` 형식의 인스턴스로 `T`합니다. 이 변환 중 개체 참조 같음은 유지 관리 하지 않을 수도가 있습니다. 따라서 있습니다 한다고 가정할 수 없습니다 `obj` 고 `T` 동일한 개체를 참조 합니다.  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> 파생 된 클래스를 구현 하는 경우 사용할 것 <xref:System.Web.Script.Serialization.JavaScriptConverter>입니다. 변환기 코드 serializer에 전달 하는 사전에 있는 값을 사용할 수 있으려면 하며 그런 다음 해당 값 형식의 인스턴스로 변환할 `T`합니다. 이 작업을 수행 하는 사용자 지정 변환 코드를 다시 구현 하는 대신 호출 수를 <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> 변환기 코드에서 메서드.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 보여 줍니다는 <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> 메서드는 <xref:System.Web.UI.WebControls.ListItem> 변환기에 전달 되는 사전에서 값 개체입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 클래스입니다.  
  
 [!code-csharp[System.Web.Script.Serialization#5](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#5)]
 [!code-vb[System.Web.Script.Serialization#5](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="obj" />(또는 <paramref name="obj" />의 중첩된 멤버)에는 사용자 형식을 나타내는 "__type" 속성이 포함되지만 serializer와 연결된 형식 확인자는 해당 관리되는 형식을 찾을 수 없습니다.  
  
또는 
 <paramref name="obj" />(또는 <paramref name="obj" />의 중첩된 멤버)에 사용자 지정 형식을 나타내는 “__type” 속성이 포함되어 있지만 해당 JSON 문자열의 deserialize 결과를 원하는 대상 형식에 할당할 수 없습니다.  
  
또는 
 <paramref name="obj" /> 또는 <paramref name="obj" />의 중첩된 멤버에 <see cref="T:System.Object" /> 또는 인스턴스화할 수 없는 형식(추상 형식 또는 인터페이스 등)을 나타내는 “__type” 속성이 포함되어 있습니다.  
  
또는 
<paramref name="obj" />를 deserialization 대상으로 사용할 수 없는 배열 형태의 관리되는 형식으로 변환하려고 했습니다.  
  
또는 
<paramref name="obj" />를 <paramref name="T" />로 변환할 수 없습니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="obj" />는 사전 형식이며 문자열이 아닌 키 값이 발견되었습니다.  
  
또는 
 <paramref name="obj" />에 형식 <paramref name="T" />에 사용할 수 없는 멤버 정의가 있습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (string input, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(string input, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (input As String, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::String ^ input, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string * Type -&gt; obj" Usage="javaScriptSerializer.Deserialize (input, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input">deserialize할 JSON 문자열입니다.</param>
        <param name="targetType">결과 개체의 형식입니다.</param>
        <summary>JSON 형식 문자열을 지정된 형식의 개체로 변환합니다.</summary>
        <returns>deserialize된 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 deserialization 메서드를 특정 형식으로 개체 그래프의 루트를 캐스팅을 시도 하지 않습니다는 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> 메서드는 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="input" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="input" /> 길이가 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />의 값을 초과합니다.  
  
또는 
<see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />로 정의된 재귀 한계를 초과했습니다.  
  
또는 
 <paramref name="input" />에 예기치 않은 문자 시퀀스가 있습니다.  
  
또는 
 <paramref name="input" />는 사전 형식이며 문자열이 아닌 키 값이 발견되었습니다.  
  
또는 
 <paramref name="input" />에 대상 형식에 사용할 수 없는 멤버 정의가 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="input" />에 사용자 지정 형식을 나타내는 “__type” 속성이 있지만 현재 serializer와 연결된 형식 확인자가 해당 관리되는 형식을 찾을 수 없습니다.  
  
또는 
 <paramref name="input" />에 사용자 지정 형식을 나타내는 “__type” 속성이 포함되어 있지만 해당 JSON 문자열의 deserialize 결과를 원하는 대상 형식에 할당할 수 없습니다.  
  
또는 
 <paramref name="input" />에 <see cref="T:System.Object" /> 또는 인스턴스화할 수 없는 형식(추상 형식 또는 인터페이스 등)을 나타내는 “__type” 속성이 포함되어 있습니다.  
  
또는 
JSON 배열을 JSON deserialization 대상으로 사용할 수 없는 배열 형태의 관리되는 형식으로 변환하려고 했습니다.  
  
또는 
<paramref name="input" />을 대상 형식으로 변환할 수 없습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Deserialize&lt;T&gt; (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Deserialize&lt;T&gt;(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize(Of T) (input As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Deserialize(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string -&gt; 'T" Usage="javaScriptSerializer.Deserialize input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">결과 개체의 형식입니다.</typeparam>
        <param name="input">deserialize할 JSON 문자열입니다.</param>
        <summary>지정한 JSON 문자열을 <paramref name="T" /> 형식의 개체로 변환합니다.</summary>
        <returns>deserialize된 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> 첫 번째 사용 하는 것과 같습니다 합니다 <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> 개체 그래프를 형식으로 결과를 캐스팅한 다음 시도 얻는 메서드를 `T`입니다.  
  
 Deserialization 도중 배열 및 사전 형식 안에 중첩 된 요소를 변환할 때 사용할 관리 되는 형식을 결정 하는 serializer의 현재 형식 확인자 참조 됩니다. Deserialization 프로세스의 모든 중첩 된 요소를 통해 반복 하는 결과적으로, `input`합니다. 유형 해결 프로그램에 대 한 자세한 내용은 참조는 <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> 클래스입니다.  
  
   
  
## Examples  
다음 예제에서는 데이터 개체 serialize 및 deserialize 하는 방법에 대 한 간단한 설명을 제공 합니다.  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

클래스가 필요 `Person`, 다음 예제에 나와 있는 합니다. 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="input" /> 길이가 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />의 값을 초과합니다.  
  
또는 
<see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />로 정의된 재귀 한계를 초과했습니다.  
  
또는 
 <paramref name="input" />에 예기치 않은 문자 시퀀스가 있습니다.  
  
또는 
 <paramref name="input" />는 사전 형식이며 문자열이 아닌 키 값이 발견되었습니다.  
  
또는 
 <paramref name="input" />에 형식 <paramref name="T" />에 사용할 수 없는 멤버 정의가 있습니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="input" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="input" />에 사용자 지정 형식을 나타내는 “__type” 속성이 있지만 serializer와 연결된 형식 확인자에서 해당 관리되는 형식을 찾을 수 없습니다.  
  
또는 
 <paramref name="input" />에 사용자 지정 형식을 나타내는 “__type” 속성이 포함되어 있지만 해당 JSON 문자열의 deserialize 결과를 원하는 대상 형식에 할당할 수 없습니다.  
  
또는 
 <paramref name="input" />에 <see cref="T:System.Object" /> 또는 인스턴스화할 수 없는 형식(추상 형식 또는 인터페이스 등)을 나타내는 “__type” 속성이 포함되어 있습니다.  
  
또는 
JSON 배열을 JSON deserialization 대상으로 사용할 수 없는 배열 형태의 관리되는 형식으로 변환하려고 했습니다.  
  
또는 
<paramref name="input" />를 <paramref name="T" />로 변환할 수 없습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeObject">
      <MemberSignature Language="C#" Value="public object DeserializeObject (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DeserializeObject(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeserializeObject (input As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DeserializeObject(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.DeserializeObject : string -&gt; obj" Usage="javaScriptSerializer.DeserializeObject input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">deserialize할 JSON 문자열입니다.</param>
        <summary>지정한 JSON 문자열을 개체 그래프로 변환합니다.</summary>
        <returns>deserialize된 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 deserialization 메서드를 특정 형식으로 개체 그래프의 루트를 캐스팅을 시도 하지 않습니다와 마찬가지로 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="input" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="input" /> 길이가 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />의 값을 초과합니다.  
  
또는 
<see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />로 정의된 재귀 한계를 초과했습니다.  
  
또는 
 <paramref name="input" />에 예기치 않은 문자 시퀀스가 있습니다.  
  
또는 
 <paramref name="input" />는 사전 형식이며 문자열이 아닌 키 값이 발견되었습니다.  
  
또는 
 <paramref name="input" />에 대상 형식에 사용할 수 없는 멤버 정의가 있습니다.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="input" />에 사용자 지정 형식을 나타내는 “__type” 속성이 있지만 현재 serializer와 연결된 형식 확인자가 해당 관리되는 형식을 찾을 수 없습니다.  
  
또는 
 <paramref name="input" />에 사용자 지정 형식을 나타내는 “__type” 속성이 포함되어 있지만 해당 JSON 문자열의 deserialize 결과를 원하는 대상 형식에 할당할 수 없습니다.  
  
또는 
 <paramref name="input" />에 <see cref="T:System.Object" /> 또는 인스턴스화할 수 없는 형식(추상 형식 또는 인터페이스 등)을 나타내는 “__type” 속성이 포함되어 있습니다.  
  
또는 
JSON 배열을 JSON deserialization 대상으로 사용할 수 없는 배열 형태의 관리되는 형식으로 변환하려고 했습니다.  
  
또는 
<paramref name="input" />을 대상 형식으로 변환할 수 없습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxJsonLength">
      <MemberSignature Language="C#" Value="public int MaxJsonLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxJsonLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxJsonLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxJsonLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxJsonLength : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 클래스에서 허용되는 JSON 문자열의 최대 길이를 가져오거나 설정합니다.</summary>
        <value>JSON 문자열의 최대 길이입니다. 기본값은은 2097152 자로, 4MB의 유니코드 문자열 데이터와 같습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값을 <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength%2A> 속성의 인스턴스를 명시적으로 만드는 경우에 적용 됩니다는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 클래스입니다. 사용 된 `jsonSerialization` 비동기 통신 계층에서 사용 되는 내부 serializer 인스턴스에 대 한 최대 길이 설정 하려면 구성 파일의 요소입니다. Serialization에 대 한 구성 요소에 대 한 자세한 내용은 참조 하세요. [방법: Microsoft Ajax에서 ASP.NET 서비스를 구성](https://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">속성이 1보다 작은 값으로 설정됩니다.</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.MaxJsonLength" />
      </Docs>
    </Member>
    <Member MemberName="RecursionLimit">
      <MemberSignature Language="C#" Value="public int RecursionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecursionLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property RecursionLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RecursionLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RecursionLimit : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>처리할 개체 수준 수에 대한 제한을 가져오거나 설정합니다.</summary>
        <value>개체 수준 수입니다. 기본값은 100입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A> 속성은 개체 계층의 수준 수를 참조 하는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 다음과 같은 경우 처리할:  
  
-   경우는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 클래스는 JSON 문자열을 역직렬화 합니다.  
  
-   경우는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 클래스는 serialization 중 개체 그래프를 탐색 합니다.  
  
 변수의 <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A> 의 인스턴스를 명시적으로 만드는 경우에 적용 됩니다는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 클래스입니다. 사용 된 `jsonSerialization` 비동기 통신 계층에서 사용 되는 내부 serializer 인스턴스에 대해 처리할 개체 수준 수를 설정 하려면 구성 파일의 요소입니다. Serialization에 대 한 구성 요소에 대 한 자세한 내용은 참조 하세요. [방법: Microsoft Ajax에서 ASP.NET 서비스를 구성](https://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">속성이 1보다 작은 값으로 설정됩니다.</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.RecursionLimit" />
      </Docs>
    </Member>
    <Member MemberName="RegisterConverters">
      <MemberSignature Language="C#" Value="public void RegisterConverters (System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; converters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterConverters(class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Script.Serialization.JavaScriptConverter&gt; converters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterConverters (converters As IEnumerable(Of JavaScriptConverter))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterConverters(System::Collections::Generic::IEnumerable&lt;System::Web::Script::Serialization::JavaScriptConverter ^&gt; ^ converters);" />
      <MemberSignature Language="F#" Value="member this.RegisterConverters : seq&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; -&gt; unit" Usage="javaScriptSerializer.RegisterConverters converters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converters" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt;" />
      </Parameters>
      <Docs>
        <param name="converters">등록될 사용자 지정 변환기가 포함된 배열입니다.</param>
        <summary>사용자 지정 변환기를 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 인스턴스에 등록합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하나 이상의 사용자 지정 변환기를 등록할 수 있습니다는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 를 사용 하 여 인스턴스를 <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> 메서드. 사용자 지정 변환기를 등록 하는 경우 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 변환기를 사용 하 여 관리 되는 형식을 serialize 하 고 관리 되는 형식에 JSON 문자열을 deserialize 합니다.  
  
 동일한 여러 변환기를 등록할 수 있습니다 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 인스턴스 및 이러한 변환기는 동일한 형식에 대 한 지원을 나타낼 수 있습니다. 결과적으로, 특정 형식에 등록 된 마지막 변환기는에서 사용할 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 여 형식을 serialize 합니다.  
  
 사용자 지정 변환기에 대 한 자세한 내용은 참조는 <xref:System.Web.Script.Serialization.JavaScriptConverter> 클래스입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용자 지정 변환기를 등록 하는 방법을 보여 줍니다는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 인스턴스. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 클래스입니다.  
  
 [!code-csharp[System.Web.Script.Serialization#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#1)]
 [!code-vb[System.Web.Script.Serialization#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="converters" />가 <see langword="null" />입니다.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>개체를 JSON 문자열로 변환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public string Serialize (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Serialize(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Serialize (obj As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Serialize(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj -&gt; string" Usage="javaScriptSerializer.Serialize obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">serialize할 개체입니다.</param>
        <summary>개체를 JSON 문자열로 변환합니다.</summary>
        <returns>serialize된 JSON 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 인스턴스 형식, 사용자 지정 변환기를 등록 되는 serializer 호출 하 여 직렬화 되는 <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> 메서드를 JSON 문자열로 변환할 수는 이름/값 쌍의 사전을 가져옵니다.  
  
 합니다 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> 메서드 또는 인스턴스를 등록 하는 경우 개체 그래프가 너무 복잡 한 경우 예외를 throw 할 수 있습니다 <xref:System.Web.Script.Serialization.JavaScriptConverter> 변환기 재귀 했을 합니다.  
  
   
  
## Examples  
다음 예제에서는 데이터 개체 serialize 및 deserialize 하는 방법에 대 한 간단한 설명을 제공 합니다.  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

클래스가 필요 `Person`, 다음 예제에 나와 있는 합니다. 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">결과 JSON 문자열이 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />의 값을 초과합니다.  
  
또는 
 <paramref name="obj" />에 순환 참조가 있습니다. 순환 참조는 자식 개체와 부모 개체에서 서로를 참조하는 경우에 발생하며,</exception>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />로 정의된 재귀 한계를 초과했습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (object obj, System.Text.StringBuilder output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(object obj, class System.Text.StringBuilder output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (obj As Object, output As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Object ^ obj, System::Text::StringBuilder ^ output);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj * System.Text.StringBuilder -&gt; unit" Usage="javaScriptSerializer.Serialize (obj, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="output" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="obj">serialize할 개체입니다.</param>
        <param name="output">JSON 문자열을 기록하는 데 사용되는 <see cref="T:System.Text.StringBuilder" /> 개체입니다.</param>
        <summary>개체를 serialize하고 결과 JSON 문자열을 지정한 <see cref="T:System.Text.StringBuilder" /> 개체에 기록합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.Script.Serialization.JavaScriptSerializer> 인스턴스 형식, 사용자 지정 변환기를 등록 되는 serializer 호출 하 여 직렬화 되는 <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> 메서드를 JSON 문자열로 변환할 수는 이름/값 쌍의 사전을 가져옵니다.  
  
 합니다 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A> 메서드 또는 인스턴스를 등록 하는 경우 개체 그래프가 너무 복잡 한 경우 예외를 throw 할 수 있습니다 <xref:System.Web.Script.Serialization.JavaScriptConverter> 변환기 재귀 했을 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">결과 JSON 문자열이 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />의 값을 초과합니다.  
  
또는 
 <paramref name="obj" />에 순환 참조가 있습니다. 순환 참조는 자식 개체와 부모 개체에서 서로를 참조하는 경우에 발생하며,</exception>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />로 정의된 재귀 한계를 초과했습니다.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="output" />가 <see langword="null" />입니다.</exception>
      </Docs>
    </Member>
  </Members>
</Type>