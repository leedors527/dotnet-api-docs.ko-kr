<Type Name="AntiXssEncoder" FullName="System.Web.Security.AntiXss.AntiXssEncoder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b91ddd2c5b3a0e85bd53329c243386ca09aa7389" /><Meta Name="ms.sourcegitcommit" Value="303c57f737f11b89445bb845737721fee7ab8051" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="02/26/2019" /><Meta Name="ms.locfileid" Value="56834044" /></Metadata><TypeSignature Language="C#" Value="public class AntiXssEncoder : System.Web.Util.HttpEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AntiXssEncoder extends System.Web.Util.HttpEncoder" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.AntiXss.AntiXssEncoder" />
  <TypeSignature Language="VB.NET" Value="Public Class AntiXssEncoder&#xA;Inherits HttpEncoder" />
  <TypeSignature Language="C++ CLI" Value="public ref class AntiXssEncoder : System::Web::Util::HttpEncoder" />
  <TypeSignature Language="F#" Value="type AntiXssEncoder = class&#xA;    inherit HttpEncoder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Util.HttpEncoder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>HTML, XML, CSS, URL 문자열에서 사용할 문자열을 인코딩합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수는 <xref:System.Web.Security.AntiXss.AntiXssEncoder> 재정의에 클래스를 <xref:System.Web.Util.HttpEncoder> 인코드 및와 같은 클래스의 메서드에서 문자열을 디코드 하 기본적으로 사용 되는 클래스 <xref:System.Web.HttpUtility>, <xref:System.Web.HttpServerUtility>, 및 <xref:System.Net.HttpResponseHeader>합니다.  
  
 에 <xref:System.Web.Security.AntiXss.AntiXssEncoder> 하 여 수신 목록에 없는 모든 문자는 인코딩됩니다 클래스는 <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode%2A> 및 <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode%2A> 메서드.  
  
 바꾸려면 합니다 <xref:System.Web.Util.HttpEncoder> 클래스를 <xref:System.Web.Security.AntiXss.AntiXssEncoder> 클래스를 사용 하 여 등록을 `encoderType` 다음 예와에서 같이 Web.config 파일에 httpRuntime 요소의 특성:  
  
```  
<httpRuntime encoderType="System.Web.Security.AntiXss.AntiXssEncoder" />  
```  
  
 서로 다른 인코딩 방법에 대 한 기본 문자 목록을 대 한 설명에 있을 수는 <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode%2A>, <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode%2A>를 <xref:System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode%2A>, 및 <xref:System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode%2A> 메서드. 기본 수신 허용 목록 사용 하 여 수정할 수는 <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> 메서드.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AntiXssEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AntiXssEncoder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Security.AntiXss.AntiXssEncoder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CssEncode">
      <MemberSignature Language="C#" Value="public static string CssEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CssEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.CssEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CssEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CssEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member CssEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.CssEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">인코딩할 문자열입니다.</param>
        <summary>CCS 스타일시트에서 사용하기 위해 지정된 문자열을 인코딩합니다.</summary>
        <returns>인코딩된 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 안전 목록에 있는 작업을 제외한 모든 문자를 인코딩합니다.  
  
> [!NOTE]
>  인용 부호 넣기 ("") 연계 스타일 시트에 추가 하기 전에 결과 문자열 해결 합니다.  
  
 다음 표에서 기본 문자를 나열합니다. 모두를 [유니코드 C0 컨트롤 및 기본 라틴어](https://www.unicode.org/charts/PDF/U0000.pdf) 문자 범위입니다.
  
|문자|설명|  
|--------------------|-----------------|  
|A-Z|대문자 영문자|  
|a-z|소문자 영문자|  
|0-9|번호|  
  
 다음 표에서 입력 및 해당 인코딩된 출력의 예제를 나열합니다.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert\000028\000027XSS\000020Attack\000021\000027\000029\00003B`|  
|`user@contoso.com`|`user\000040contoso\00002Ecom`|  
|`Anti-Cross Site Scripting Namespace`|`Anti\00002DCross\000020Site\000020Scripting\000020Namespace`|  
  
 CSS 문자 이스케이프 시퀀스는 백슬래시 이루어져 있습니다 (\\) 뒤에 최대 6 자리 16 진수가 ISO 10646 표준에서 문자 코드를 나타냅니다. (표준 ISO 10646은 유니코드와 사실상 동일 합니다.) 16 진수 이외의 모든 문자는 이스케이프 시퀀스를 종료합니다. 이스케이프 시퀀스 뒤에 오는 문자가 유효한 16 진수도 이면이 이스케이프 시퀀스에 6 자리 숫자를 포함 하거나 공백 문자를 이스케이프 시퀀스를 종료 하는 데 합니다. 예를 들어 `\000020` 공간을 나타냅니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlAttributeEncode">
      <MemberSignature Language="C#" Value="protected internal override void HtmlAttributeEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void HtmlAttributeEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub HtmlAttributeEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void HtmlAttributeEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.HtmlAttributeEncode : string * System.IO.TextWriter -&gt; unit" Usage="antiXssEncoder.HtmlAttributeEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">인코딩할 문자열입니다.</param>
        <param name="output">문자열을 출력하는 데 사용할 텍스트 작성기입니다.</param>
        <summary>HTML 특성에서 사용하기 위해 지정된 문자열을 인코딩하고 출력합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 안전 목록에 있는 작업을 제외한 모든 문자를 인코딩합니다. 사용 하 여 문자는 인코딩됩니다 `&#DECIMAL;` 표기법입니다.  
  
> [!NOTE]
>  이중 인용 부호 넣기 ("") 또는 작은따옴표 (' ') 페이지에 추가 하기 전에 결과 문자열 주위 합니다.  
  
 다음 표에서 기본 문자를 나열합니다. 유니코드에서 모두 [C0 컨트롤 및 기본 라틴어](https://www.unicode.org/charts/PDF/U0000.pdf) 설명 열에 언급 하지 않는 한 문자 범위입니다.  
  
|문자|설명|  
|--------------------|-----------------|  
|A-Z|라틴어 대문자 영문자|  
||a-z|라틴어 소문자 영문자|  
|0-9|번호|  
|!|느낌표|  
|#|숫자 기호 해시|  
|$|달러 기호|  
|%|퍼센트 기호|  
|( )|괄호|  
|*|별표|  
|+|더하기 기호|  
|,|쉼표|  
|-|하이픈, 빼기|  
|.|기간, 점, 전체 중지|  
|/|슬래시|  
|:|콜론|  
|;|세미콜론으로|  
|=|등호 기호|  
|?|물음표|  
|@|상용 at 기호|  
|[ ]|대괄호|  
|&#92;|백슬래시|  
|^|캐럿|  
|_|밑줄|  
|\`| 억음 악센트 기호|  
|{ }|중괄호를 중괄호|  
|&#124;|수직선|  
|~|물결표|  
|0x00A1-0x00AC|특수 문자 0x00A1 (161 10 진수) 사이 유니코드 (10 진수 172) 0x00AC [C1 제어 및 라틴어-1 보충](https://www.unicode.org/charts/PDF/U0080.pdf) 문자 범위입니다.|  
|0x00AE-0x00FF|특수 문자 0x00AE (10 진수 174) 사이 유니코드 (10 진수 255) 0x00FF [C1 제어 및 라틴어-1 보충](https://www.unicode.org/charts/PDF/U0080.pdf) 문자 범위입니다.|  
|0x0100 - 0x017F|(10 진수 256) 0x0100 0x017F (10 진수 383) 사이의 문자입니다. (유니코드 [라틴 문자 확장 A](https://www.unicode.org/charts/PDF/U0100.pdf) 문자 범위입니다.)|
|0x0180 - 0x024F|(10 진수 384) 0x0180 0x024F (10 진수 591) 사이의 문자입니다. (유니코드 [라틴 문자-확장-B](https://www.unicode.org/charts/PDF/U0180.pdf) 문자 범위입니다.)|  
|0x0250-0x02AF|(10 진수 592) 0x0250 0x02AF (10 진수 687) 사이의 문자입니다. (유니코드 [IPA 확장](https://www.unicode.org/charts/PDF/U0250.pdf) 문자 범위입니다.)| 
|0x02B0-0x02FF|0x02B0 (10 진수 688) 사이의 0x02FF (10 진수 767) 자입니다. (유니코드 [조정 문자](https://www.unicode.org/charts/PDF/U02B0.pdf) 문자 범위입니다.)|
|0x0300-0x036F|(10 진수 768) 0x0300 0x036F (10 진수 879) 사이의 문자입니다. (유니코드 [분음 부호 결합](https://www.unicode.org/charts/PDF/U0300.pdf) 문자 범위입니다.)|  
  
 다음 표에서 입력 및 해당 인코딩된 출력의 예제를 나열합니다.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&#39;XSS Attack!&#39;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&#39;XSS&#12354;Attack!&#39;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 수신 허용 목록 사용자 지정 호출을 <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>HTML 태그에서 텍스트로 사용할 지정된 문자열을 인코딩합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string input, bool useNamedEntities);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string input, bool useNamedEntities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (input As String, useNamedEntities As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ input, bool useNamedEntities);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string * bool -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode (input, useNamedEntities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="useNamedEntities" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="input">인코딩할 문자열입니다.</param>
        <param name="useNamedEntities">특정 문자 인코딩에 HTML 4.0 명명된 엔터티를 사용하려면 <see langword="true" />이고, <c>&amp;#DECIMAL;</c> 표기법만 인코딩하려면 <see langword="false" />입니다.</param>
        <summary>HTML 태그에서 텍스트로 사용할 지정된 문자열을 인코딩하고 HTML 4.0 명명된 엔터티를 사용할지 여부를 선택적으로 지정합니다.</summary>
        <returns>인코딩된 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 안전 목록에 있는 작업을 제외한 모든 문자를 인코딩합니다. 사용 하 여 문자는 인코딩됩니다 `&#DECIMAL;` 표기법입니다.  
  
> [!NOTE]
>  이중 인용 부호 넣기 ("") 또는 작은따옴표 (' ') 페이지에 추가 하기 전에 결과 문자열 주위 합니다.  
  
 다음 표에서 기본 문자를 나열합니다. 모든 문자는 유니코드에서 [C0 컨트롤 및 기본 라틴어](https://www.unicode.org/charts/PDF/U0000.pdf) 설명 열에 언급 하지 않는 한 문자 범위입니다.
  
|문자|설명|  
|--------------------|-----------------|  
|A-Z|라틴어 대문자 영문자|  
|a-z|라틴어 소문자 영문자|  
|0-9|번호|  
|(공간)|공백|  
|!|느낌표|  
|#|숫자 기호 해시|  
|$|달러 기호|  
|%|퍼센트 기호|  
|( )|괄호|  
|*|별표|  
|+|더하기 기호|  
|,|쉼표|  
|-|하이픈, 빼기|  
|.|기간, 점, 전체 중지|  
|/|슬래시|  
|:|콜론|  
|;|세미콜론으로|  
|=|등호 기호|  
|?|물음표|  
|@|상용|  
|[ ]|대괄호|  
|&#92;|백슬래시|  
|^|캐럿|  
|_|밑줄|  
|\`| 억음 악센트 기호|  
|{ }|중괄호를 중괄호|  
|&#124;|수직선|  
|~|물결표|  
|0x00A1-0x00AC|특수 문자 0x00A1 (161 10 진수) 사이 유니코드 (10 진수 172) 0x00AC [C1 제어 및 라틴어-1 보충](https://www.unicode.org/charts/PDF/U0080.pdf) 문자 범위입니다. 이 범위에는 문자 인코딩 되 면 `useNamedEntities` 는 `true`.|  
|0x00AE-0x00FF|특수 문자 0x00AE (10 진수 174) 사이 유니코드 (10 진수 255) 0x00FF [C1 제어 및 라틴어-1 보충](https://www.unicode.org/charts/PDF/U0080.pdf) 문자 범위입니다. 이 범위에는 문자 인코딩 되 면 `useNamedEntities` 는 `true`.|  
|0x0100 - 0x017F|(10 진수 256) 0x0100 0x017F (10 진수 383) 사이의 문자입니다. (유니코드 [라틴 문자 확장 A](https://www.unicode.org/charts/PDF/U0100.pdf) 문자 범위입니다.)|
|0x0180 - 0x024F|(10 진수 384) 0x0180 0x024F (10 진수 591) 사이의 문자입니다. (유니코드 [라틴 문자-확장-B](https://www.unicode.org/charts/PDF/U0180.pdf) 문자 범위입니다.)|  
|0x0250-0x02AF|(10 진수 592) 0x0250 0x02AF (10 진수 687) 사이의 문자입니다. (유니코드 [IPA 확장](https://www.unicode.org/charts/PDF/U0250.pdf) 문자 범위입니다.)|  
|0x02B0-0x02FF|0x02B0 (10 진수 688) 사이의 0x02FF (10 진수 767) 자입니다. (유니코드 [조정 문자](https://www.unicode.org/charts/PDF/U02B0.pdf) 문자 범위입니다.)|
|0x0300-0x036F|(10 진수 768) 0x0300 0x036F (10 진수 879) 사이의 문자입니다. (유니코드 [분음 부호 결합](https://www.unicode.org/charts/PDF/U0300.pdf) 문자 범위입니다.)| 
  
 다음 표에서 입력 및 해당 인코딩된 출력의 예제를 나열합니다.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&#39;XSS Attack!&#39;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&#39;XSS&#12354;Attack!&#39;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 수신 허용 목록 사용자 지정 호출을 <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="protected internal override void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="antiXssEncoder.HtmlEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">인코딩할 문자열입니다.</param>
        <param name="output">문자열을 출력하는 데 사용할 텍스트 작성기입니다.</param>
        <summary>HTML 태그에서 텍스트로 사용할 지정된 문자열을 인코딩하고 지정된 텍스트 기록기를 사용하여 문자열을 출력합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 안전 목록에 있는 작업을 제외한 모든 문자를 인코딩합니다. 사용 하 여 문자는 인코딩됩니다 `&#DECIMAL;` 표기법입니다.  
  
> [!NOTE]
>  이중 인용 부호 넣기 ("") 또는 작은따옴표 (' ') 페이지에 추가 하기 전에 결과 문자열 주위 합니다.  
  
 다음 표에서 기본 문자를 나열합니다. 모든 문자는 유니코드에서 [C0 컨트롤 및 기본 라틴어](https://www.unicode.org/charts/PDF/U0000.pdf) 설명 열에 언급 하지 않는 한 문자 범위입니다.
  
|문자|설명|  
|--------------------|-----------------|  
|A-Z|라틴어 대문자 영문자|  
|a-z|라틴어 소문자 영문자|  
|0-9|번호|  
|(공간)|공백|  
|!|느낌표|  
|#|숫자 기호 해시|  
|$|달러 기호|  
|%|퍼센트 기호|  
|( )|괄호|  
|*|별표|  
|+|더하기 기호|  
|,|쉼표|  
|-|하이픈, 빼기|  
|.|기간, 점, 전체 중지|  
|/|슬래시|  
|:|콜론|  
|;|세미콜론으로|  
|=|등호 기호|  
|?|물음표|  
|@|상용|  
|[ ]|대괄호|  
|&#92;|백슬래시|  
|^|캐럿|  
|_|밑줄|  
|\`| 억음 악센트 기호|  
|{ }|중괄호를 중괄호|  
|&#124;|수직선|  
|~|물결표|  
|0x00A1-0x00AC|특수 문자 0x00A1 (161 10 진수) 사이 유니코드 (10 진수 172) 0x00AC [C1 제어 및 라틴어-1 보충](https://www.unicode.org/charts/PDF/U0080.pdf) 문자 범위입니다. 이 범위에는 문자 인코딩 되 면 `useNamedEntities` 는 `true`.|  
|0x00AE-0x00FF|특수 문자 0x00AE (10 진수 174) 사이 유니코드 (10 진수 255) 0x00FF [C1 제어 및 라틴어-1 보충](https://www.unicode.org/charts/PDF/U0080.pdf) 문자 범위입니다. 이 범위에는 문자 인코딩 되 면 `useNamedEntities` 는 `true`.|  
|0x0100 - 0x017F|(10 진수 256) 0x0100 0x017F (10 진수 383) 사이의 문자입니다. (유니코드 [라틴 문자 확장 A](https://www.unicode.org/charts/PDF/U0100.pdf) 문자 범위입니다.)|
|0x0180 - 0x024F|(10 진수 384) 0x0180 0x024F (10 진수 591) 사이의 문자입니다. (유니코드 [라틴 문자-확장-B](https://www.unicode.org/charts/PDF/U0180.pdf) 문자 범위입니다.)| 
|0x0250-0x02AF|(10 진수 592) 0x0250 0x02AF (10 진수 687) 사이의 문자입니다. (유니코드 [IPA 확장](https://www.unicode.org/charts/PDF/U0250.pdf) 문자 범위입니다.)| 
|0x02B0-0x02FF|0x02B0 (10 진수 688) 사이의 0x02FF (10 진수 767) 자입니다. (유니코드 [조정 문자](https://www.unicode.org/charts/PDF/U02B0.pdf) 문자 범위입니다.)|
|0x0300-0x036F|(10 진수 768) 0x0300 0x036F (10 진수 879) 사이의 문자입니다. (유니코드 [분음 부호 결합](https://www.unicode.org/charts/PDF/U0300.pdf) 문자 범위입니다.)| 
  
 다음 표에서 입력 및 해당 인코딩된 출력의 예제를 나열합니다.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&#39;XSS Attack!&#39;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&#39;XSS&#12354;Attack!&#39;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 수신 허용 목록 사용자 지정 호출을 <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlFormUrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>MIME 형식이 "application/x-www-form-urlencoded"인 폼 전송에 사용할 지정된 문자열을 인코딩합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlFormUrlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlFormUrlEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlFormUrlEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlFormUrlEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlFormUrlEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member HtmlFormUrlEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">인코딩할 문자열입니다.</param>
        <summary>MIME 형식이 "application/x-www-form-urlencoded"인 폼 전송에 사용할 지정된 문자열을 인코딩합니다.</summary>
        <returns>인코딩된 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 안전 목록에 있는 작업을 제외한 모든 문자를 인코딩합니다. 사용 하 여 문자는 인코딩됩니다 `%SINGLE_BYTE_HEX` 표기법입니다. 
  
> [!NOTE]
>  이중 인용 부호 넣기 ("") 또는 작은따옴표 (' ') 페이지에 추가 하기 전에 결과 문자열 주위 합니다.   

다음 표에서 기본 문자를 나열합니다. 모든 문자는 유니코드에서 [C0 컨트롤 및 기본 라틴어](https://www.unicode.org/charts/PDF/U0000.pdf) 문자 범위입니다. 
    
|유니코드 코드 차트입니다.|문자|설명|  
|------------------------|--------------------|-----------------|  
|A-Z|대문자 영문자|  
|a-z|소문자 영문자|  
|0-9|번호|  
|-|하이픈, 빼기|  
|.|기간, 점, 전체 중지|  
|_|밑줄|  
|~|물결표|  
  
 다음 표에서 입력 및 해당 인코딩된 출력의 예제를 나열합니다.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS+Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS+Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user@contoso.com`|  
|`Anti-Cross Site Scripting Namespace`|`Anti-Cross+Site+Scripting+Namespace`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlFormUrlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlFormUrlEncode (string input, int codePage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlFormUrlEncode(string input, int32 codePage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlFormUrlEncode (input As String, codePage As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlFormUrlEncode(System::String ^ input, int codePage);" />
      <MemberSignature Language="F#" Value="static member HtmlFormUrlEncode : string * int -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode (input, codePage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="codePage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">인코딩할 문자열입니다.</param>
        <param name="codePage"><paramref name="input" /> 문자열을 인코딩하기 위해 사용하는 코드 페이지입니다.</param>
        <summary>지정된 코드 페이지를 사용하여 MIME 형식이 "application/x-www-form-urlencoded"인 폼 전송에 사용할 지정된 문자열을 인코딩합니다.</summary>
        <returns>인코딩된 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 안전 목록에 있는 작업을 제외한 모든 문자를 인코딩합니다. 사용 하 여 문자는 인코딩됩니다 `%SINGLE_BYTE_HEX` 표기법입니다.  
  
> [!NOTE]
>  이중 인용 부호 넣기 ("") 또는 작은따옴표 (' ') 페이지에 추가 하기 전에 결과 문자열 주위 합니다.  
  
 다음 표에서 기본 문자를 나열합니다. 모든 문자는 유니코드에서 [C0 컨트롤 및 기본 라틴어](https://www.unicode.org/charts/PDF/U0000.pdf) 문자 범위입니다. 
  
|문자|설명|  
|--------------------|-----------------|  
|A-Z|대문자 영문자|  
|a-z|소문자 영문자|  
|0-9|번호|  
|-|하이픈, 빼기|  
|.|기간, 점, 전체 중지|  
|_|밑줄|  
|~|물결표|  
  
 다음 표에서 입력 및 해당 인코딩된 출력의 예제를 나열합니다.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS+Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS+Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`Anti-Cross Site Scripting Namespace`|`Anti-Cross+Site+Scripting+Namespace`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlFormUrlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlFormUrlEncode (string input, System.Text.Encoding inputEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlFormUrlEncode(string input, class System.Text.Encoding inputEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlFormUrlEncode (input As String, inputEncoding As Encoding) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlFormUrlEncode(System::String ^ input, System::Text::Encoding ^ inputEncoding);" />
      <MemberSignature Language="F#" Value="static member HtmlFormUrlEncode : string * System.Text.Encoding -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode (input, inputEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="inputEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="input">인코딩할 문자열입니다.</param>
        <param name="inputEncoding">입력 인코딩 형식입니다.</param>
        <summary>지정된 문자 인코딩 형식을 사용하여 MIME 형식이 "application/x-www-form-urlencoded"인 폼 전송에 대해 지정된 문자열을 인코딩합니다.</summary>
        <returns>인코딩된 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 안전 목록에 있는 작업을 제외한 모든 문자를 인코딩합니다. 사용 하 여 문자는 인코딩됩니다 `%SINGLE_BYTE_HEX` 표기법입니다.  
  
> [!NOTE]
>  이중 인용 부호 넣기 ("") 또는 작은따옴표 (' ') 페이지에 추가 하기 전에 결과 문자열 주위 합니다.  
  
 다음 표에서 기본 문자를 나열합니다. 모든 문자는 유니코드에서 [C0 컨트롤 및 기본 라틴어](https://www.unicode.org/charts/PDF/U0000.pdf) 문자 범위입니다. 
  
|문자|설명|  
|--------------------|-----------------|  
|A-Z|대문자 영문자|  
|a-z|소문자 영문자|  
|0-9|번호|  
|-|하이픈, 빼기|  
|.|기간, 점, 전체 중지|  
|_|밑줄|  
|~|물결표|  
  
 다음 표에서 입력 및 해당 인코딩된 출력의 예제를 나열합니다.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS+Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS+Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`Anti-Cross Site Scripting Namespace`|`Anti-Cross+Site+Scripting+Namespace`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkAsSafe">
      <MemberSignature Language="C#" Value="public static void MarkAsSafe (System.Web.Security.AntiXss.LowerCodeCharts lowerCodeCharts, System.Web.Security.AntiXss.LowerMidCodeCharts lowerMidCodeCharts, System.Web.Security.AntiXss.MidCodeCharts midCodeCharts, System.Web.Security.AntiXss.UpperMidCodeCharts upperMidCodeCharts, System.Web.Security.AntiXss.UpperCodeCharts upperCodeCharts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MarkAsSafe(valuetype System.Web.Security.AntiXss.LowerCodeCharts lowerCodeCharts, valuetype System.Web.Security.AntiXss.LowerMidCodeCharts lowerMidCodeCharts, valuetype System.Web.Security.AntiXss.MidCodeCharts midCodeCharts, valuetype System.Web.Security.AntiXss.UpperMidCodeCharts upperMidCodeCharts, valuetype System.Web.Security.AntiXss.UpperCodeCharts upperCodeCharts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe(System.Web.Security.AntiXss.LowerCodeCharts,System.Web.Security.AntiXss.LowerMidCodeCharts,System.Web.Security.AntiXss.MidCodeCharts,System.Web.Security.AntiXss.UpperMidCodeCharts,System.Web.Security.AntiXss.UpperCodeCharts)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MarkAsSafe(System::Web::Security::AntiXss::LowerCodeCharts lowerCodeCharts, System::Web::Security::AntiXss::LowerMidCodeCharts lowerMidCodeCharts, System::Web::Security::AntiXss::MidCodeCharts midCodeCharts, System::Web::Security::AntiXss::UpperMidCodeCharts upperMidCodeCharts, System::Web::Security::AntiXss::UpperCodeCharts upperCodeCharts);" />
      <MemberSignature Language="F#" Value="static member MarkAsSafe : System.Web.Security.AntiXss.LowerCodeCharts * System.Web.Security.AntiXss.LowerMidCodeCharts * System.Web.Security.AntiXss.MidCodeCharts * System.Web.Security.AntiXss.UpperMidCodeCharts * System.Web.Security.AntiXss.UpperCodeCharts -&gt; unit" Usage="System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe (lowerCodeCharts, lowerMidCodeCharts, midCodeCharts, upperMidCodeCharts, upperCodeCharts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowerCodeCharts" Type="System.Web.Security.AntiXss.LowerCodeCharts" />
        <Parameter Name="lowerMidCodeCharts" Type="System.Web.Security.AntiXss.LowerMidCodeCharts" />
        <Parameter Name="midCodeCharts" Type="System.Web.Security.AntiXss.MidCodeCharts" />
        <Parameter Name="upperMidCodeCharts" Type="System.Web.Security.AntiXss.UpperMidCodeCharts" />
        <Parameter Name="upperCodeCharts" Type="System.Web.Security.AntiXss.UpperCodeCharts" />
      </Parameters>
      <Docs>
        <param name="lowerCodeCharts">안전한 것으로 표시할 아래쪽 코드 차트의 조합입니다.</param>
        <param name="lowerMidCodeCharts">안전한 것으로 표시할 아래쪽 가운데 코드 차트의 조합입니다.</param>
        <param name="midCodeCharts">안전한 것으로 표시할 가운데 코드 차트의 조합입니다.</param>
        <param name="upperMidCodeCharts">안전한 것으로 표시할 위쪽 가운데 코드 차트의 조합입니다.</param>
        <param name="upperCodeCharts">안전한 것으로 표시할 위쪽 코드 차트의 조합입니다.</param>
        <summary>지정한 유니코드 코드 차트의 문자를 안전한 것으로 표시합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 수신 허용 목록에 모든 HTML XML, CSS 및 URL 인코딩 메서드에 영향을 줍니다.  
  
 몇 가지 예외를 사용 하 여 유니코드 코드 차트 직접에 맞지 않는 필기 언어입니다. 종종 특정 언어 또는 언어 집합에 대 한 지원을 추가 하려면 안전으로 여러 코드 차트를 표시 합니다.  
  
 영어를 허용 하면서 일본어 언어에 대 한 지원을 추가 하려면 다음 구문을 사용 합니다.  
  
```  
  
MarkAsSafe(  
            LowerCodeCharts.Default,  
            LowerMidCodeCharts.HangulJamo,  
            MidCodeCharts.None,  
            UpperMidCodeCharts.CjkRadicalsSupplement |   
            UpperMidCodeCharts.CjkSymbolsAndPunctuation |   
            UpperMidCodeCharts.Hiragana |   
            UpperMidCodeCharts.Katakana |   
            UpperMidCodeCharts.KatakanaPhoneticExtensions |   
            UpperMidCodeCharts.LatinExtendedD |  
            UpperMidCodeCharts.CjkUnifiedIdeographs,  
            UpperCodeCharts.None);  
```  
  
> [!NOTE]
>  <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> 메서드를 호출 해야 합니다 `Application_Start` Global.asax 파일에는 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe(System.Web.Security.AntiXss.LowerCodeCharts,System.Web.Security.AntiXss.LowerMidCodeCharts,System.Web.Security.AntiXss.MidCodeCharts,System.Web.Security.AntiXss.UpperMidCodeCharts,System.Web.Security.AntiXss.UpperCodeCharts)" /> 메서드가 Global.asax 파일의 <see langword="Application_Start" /> 메서드 외부에서 호출되었습니다.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>URL에서 사용하기 위해 문자열 및 바이트 배열을 인코딩합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">인코딩할 문자열입니다.</param>
        <summary>URL에서 사용하기 위해 지정된 문자열을 인코딩합니다.</summary>
        <returns>인코딩된 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 안전 목록에 있는 작업을 제외한 모든 문자를 인코딩합니다. 사용 하 여 문자는 인코딩됩니다 `%SINGLE_BYTE_HEX` 표기법입니다.  
  
 다음 표에서 기본 문자를 나열합니다. 모든 문자는 유니코드에서 [C0 컨트롤 및 기본 라틴어](https://www.unicode.org/charts/PDF/U0000.pdf) 문자 범위입니다. 
    
  
|문자|설명|  
|--------------------|-----------------|  
|A-Z|대문자 영문자|  
|a-z|소문자 영문자|  
|0-9|번호|  
|-|하이픈, 빼기|  
|.|기간, 점, 전체 중지|  
|_|밑줄|  
|~|물결표|  
  
 다음 표에서 입력 및 해당 인코딩된 출력의 예제를 나열합니다.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string input, int codePage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string input, int32 codePage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (input As String, codePage As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ input, int codePage);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string * int -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode (input, codePage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="codePage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">인코딩할 문자열입니다.</param>
        <param name="codePage"><paramref name="input" /> 문자열을 인코딩하기 위해 사용하는 코드 페이지입니다.</param>
        <summary>지정된 코드 페이지를 사용하여 URL에서 사용하기 위해 지정된 문자열을 인코딩합니다.</summary>
        <returns>인코딩된 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 안전 목록에 있는 작업을 제외한 모든 문자를 인코딩합니다. 사용 하 여 문자는 인코딩됩니다 `%SINGLE_BYTE_HEX` 표기법입니다.  
  
 다음 표에서 기본 문자를 나열합니다. 모든 문자는 유니코드에서 [C0 컨트롤 및 기본 라틴어](https://www.unicode.org/charts/PDF/U0000.pdf) 문자 범위입니다. 
    
  
|유니코드 코드 차트입니다.|문자|설명|  
|------------------------|--------------------|-----------------|  
|A-Z|대문자 영문자|  
|a-z|소문자 영문자|  
|0-9|번호|  
|-|하이픈, 빼기|  
|.|기간, 점, 전체 중지|  
|_|밑줄|  
|~|물결표|  
  
 다음 표에서 입력 및 해당 인코딩된 출력의 예제를 나열합니다.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string input, System.Text.Encoding inputEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string input, class System.Text.Encoding inputEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (input As String, inputEncoding As Encoding) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ input, System::Text::Encoding ^ inputEncoding);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string * System.Text.Encoding -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode (input, inputEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="inputEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="input">인코딩할 문자열입니다.</param>
        <param name="inputEncoding">입력 인코딩 형식입니다.</param>
        <summary>지정된 문자 인코딩 형식을 사용하여 URL에서 사용하기 위해 지정된 문자열을 인코딩합니다.</summary>
        <returns>인코딩된 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 안전 목록에 있는 작업을 제외한 모든 문자를 인코딩합니다. 사용 하 여 문자는 인코딩됩니다 `%SINGLE_BYTE_HEX` 표기법입니다.  
  
 다음 표에서 기본 문자를 나열합니다. 모든 문자는 유니코드에서 [C0 컨트롤 및 기본 라틴어](https://www.unicode.org/charts/PDF/U0000.pdf) 문자 범위입니다. 
    
  
|문자|설명|  
|--------------------|-----------------|  
|A-Z|대문자 영문자|  
|a-z|소문자 영문자|  
|0-9|번호|  
|-|하이픈, 빼기|  
|.|기간, 점, 전체 중지|  
|_|밑줄|  
|~|물결표|  
  
 다음 표에서 입력 및 해당 인코딩된 출력의 예제를 나열합니다.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="protected internal override byte[] UrlEncode (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance unsigned int8[] UrlEncode(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function UrlEncode (bytes As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override cli::array &lt;System::Byte&gt; ^ UrlEncode(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.UrlEncode : byte[] * int * int -&gt; byte[]" Usage="antiXssEncoder.UrlEncode (bytes, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">인코딩할 바이트 배열입니다.</param>
        <param name="offset">인코딩할 첫 번째 바이트의 인덱스입니다.</param>
        <param name="count">인코딩할 바이트 수입니다.</param>
        <summary>바이트 배열의 지정된 오프셋에서 시작하여 지정된 바이트 수를 인코딩하는 방법으로 URL에서 사용할 지정된 바이트 배열을 인코딩합니다.</summary>
        <returns>인코딩된 바이트 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 안전 목록에 있는 작업을 제외한 모든 문자를 인코딩합니다. 사용 하 여 문자는 인코딩됩니다 `%SINGLE_BYTE_HEX` 표기법입니다.  
  
 다음 표에서 기본 문자를 나열합니다. 모든 문자는 유니코드에서 [C0 컨트롤 및 기본 라틴어](https://www.unicode.org/charts/PDF/U0000.pdf) 문자 범위입니다. 
   
  
|문자|설명|  
|--------------------|-----------------|  
|A-Z|대문자 영문자|  
|a-z|소문자 영문자|  
|0-9|번호|  
|-|하이픈, 빼기|  
|.|기간, 점, 전체 중지|  
|_|밑줄|  
|~|물결표|  
  
 다음 표에서 입력 및 해당 인코딩된 출력의 예제를 나열합니다.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert%28%27XSS%20Attack%21%27%29%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|  
|`alert('XSSあAttack!');`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="protected internal override string UrlPathEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string UrlPathEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.UrlPathEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function UrlPathEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::String ^ UrlPathEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.UrlPathEncode : string -&gt; string" Usage="antiXssEncoder.UrlPathEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">인코딩할 문자열입니다.</param>
        <summary>URL에서 사용하기 위해 경로 문자열을 인코딩합니다.</summary>
        <returns>인코딩된 경로가 들어 있는 URL입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
이 메서드는 안전 목록에 있는 작업을 제외한 모든 문자를 인코딩합니다. 사용 하 여 문자는 인코딩됩니다 `%SINGLE_BYTE_HEX` 표기법입니다.  

다음 표에서 기본 문자를 나열합니다. 모든 문자는 유니코드에서 [C0 컨트롤 및 기본 라틴어](https://www.unicode.org/charts/PDF/U0000.pdf) 문자 범위입니다. 
    
|문자|설명|  
|--------------------|-----------------|  
|A-Z|대문자 영문자|  
|a-z|소문자 영문자|  
|0-9|번호|  
|#|숫자 기호 해시|  
|%|퍼센트 기호|  
|( )|괄호|  
|-|하이픈, 빼기|  
|.|기간, 점, 전체 중지|  
|/|슬래시|  
|&#92;|백슬래시|  
|_|밑줄|  
|{ }|중괄호를 중괄호|  
|&#124;|수직선|  
|~|물결표|  
  
 다음 표에서 입력 및 해당 인코딩된 출력의 예제를 나열합니다.  
  
|||  
|-|-|  
|`http://www.contoso.com:8080/<en-us>/[page].htm?v={value1}#x=[amount]`|`http://www.contoso.com:8080/%3cen-us%3e/%5bpage%5d.htm?v={value1}#x=[amount]`|  
|`alert('XSS Attack!');`|`alert(%27XSS%20Attack%21%27)%3b`|  
|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert(%27XSS%20Attack%21%27)%3b%3c/script%3e`|  
|`alert('XSSあAttack!');`|`alert(%27XSS%e3%81%82Attack%21%27)%3b`|  
|`user@contoso.com`|`user%40contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  
  
 이 메서드는 URL의 경로만을 인코딩합니다. 이 메서드는 스키마를 인코딩하지 않습니다 (예를 들어 `http:`, `ftp:`, 또는 `file:`), 인증 기관 (예를 들어 `www.northwind.com` 또는 `www.contoso.com:8080`), 쿼리 또는 조각 (예를 들어 `?v=s978dfs9#x=103`). 문자열의 기관 없거나 구성표 있으면 상대 경로를 문자열 간주 되며 경로 인코딩됩니다. 다음 url, 하위 문자열만 `/default.htm` 인코딩됩니다.  
  
 `http://www.contoso.com:8080/default.htm?v=s978dfs9#x=103`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAttributeEncode">
      <MemberSignature Language="C#" Value="public static string XmlAttributeEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string XmlAttributeEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XmlAttributeEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ XmlAttributeEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member XmlAttributeEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">인코딩할 문자열입니다.</param>
        <summary>XML 특성에서 사용하기 위해 지정된 문자열을 인코딩합니다.</summary>
        <returns>인코딩된 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 안전 목록에 있는 작업을 제외한 모든 문자를 인코딩합니다. 사용 하 여 문자는 인코딩됩니다 `&#DECIMAL;` 표기법입니다.  
  
> [!NOTE]
>  이중 인용 부호 넣기 ("") 또는 작은따옴표 (' ') 페이지에 추가 하기 전에 결과 문자열 주위 합니다.  
  
 다음 표에서 기본 문자를 나열합니다. 모든 문자는 유니코드에서 [C0 컨트롤 및 기본 라틴어](https://www.unicode.org/charts/PDF/U0000.pdf) 설명 열에 언급 하지 않는 한 문자 범위입니다.  
   
  
|유니코드 코드 차트입니다.|문자|설명|  
|------------------------|--------------------|-----------------|  
|A-Z|라틴어 대문자 영문자|  
|a-z|라틴어 소문자 영문자|  
|0-9|번호|  
|!|느낌표|  
|#|숫자 기호 해시|  
|$|달러 기호|  
|%|퍼센트 기호|  
|( )|괄호|  
|*|별표|  
|+|더하기 기호|  
|,|쉼표|  
|-|하이픈, 빼기|  
|.|기간, 점, 전체 중지|  
|/|슬래시|  
|:|콜론|  
|;|세미콜론으로|  
|=|등호 기호|  
|?|물음표|  
|@|상용 at 기호|  
|[ ]|대괄호|  
|&#92;|백슬래시|  
|^|캐럿|  
|_|밑줄|  
|\`| 억음 악센트 기호|  
|{ }|중괄호를 중괄호|  
|&#124;|수직선|  
|~|물결표|  
|0x00A1-0x00AC|특수 문자 0x00A1 (161 10 진수) 사이 유니코드 (10 진수 172) 0x00AC [C1 제어 및 라틴어-1 보충](https://www.unicode.org/charts/PDF/U0080.pdf) 문자 범위입니다.|  
|특수 문자 0x00AE (10 진수 174) 사이 유니코드 (10 진수 255) 0x00FF [C1 제어 및 라틴어-1 보충](https://www.unicode.org/charts/PDF/U0080.pdf) 문자 범위입니다.|  
|0x0100 - 0x017F|(10 진수 256) 0x0100 0x017F (10 진수 383) 사이의 문자입니다. (유니코드 [라틴 문자 확장 A](https://www.unicode.org/charts/PDF/U0100.pdf) 문자 범위입니다.)| 
|0x0180 - 0x024F|(10 진수 384) 0x0180 0x024F (10 진수 591) 사이의 문자입니다. (유니코드 [라틴 문자-확장-B](https://www.unicode.org/charts/PDF/U0180.pdf) 문자 범위입니다.)| 
|0x0250-0x02AF|(10 진수 592) 0x0250 0x02AF (10 진수 687) 사이의 문자입니다. (유니코드 [IPA 확장](https://www.unicode.org/charts/PDF/U0250.pdf) 문자 범위입니다.)| 
|0x02B0-0x02FF|0x02B0 (10 진수 688) 사이의 0x02FF (10 진수 767) 자입니다. (유니코드 [조정 문자](https://www.unicode.org/charts/PDF/U02B0.pdf) 문자 범위입니다.)|
|0x0300-0x036F|(10 진수 768) 0x0300 0x036F (10 진수 879) 사이의 문자입니다. (유니코드 [분음 부호 결합](https://www.unicode.org/charts/PDF/U0300.pdf) 문자 범위입니다.)|  
  
 다음 표에서 입력 및 해당 인코딩된 출력의 예제를 나열합니다.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&apos;XSS&#32;Attack!&apos;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&apos;XSS&#32;Attack!&apos;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&apos;XSS&#12354;Attack!&apos;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 수신 허용 목록 사용자 지정 호출을 <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncode">
      <MemberSignature Language="C#" Value="public static string XmlEncode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string XmlEncode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XmlEncode (input As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ XmlEncode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member XmlEncode : string -&gt; string" Usage="System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">인코딩할 문자열입니다.</param>
        <summary>XML 특성에서 사용하기 위해 지정된 문자열을 인코딩합니다.</summary>
        <returns>인코딩된 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 안전 목록에 있는 작업을 제외한 모든 문자를 인코딩합니다. 사용 하 여 문자는 인코딩됩니다 `&#DECIMAL;` 표기법입니다.  
  
> [!NOTE]
>  이중 인용 부호 넣기 ("") 또는 작은따옴표 (' ') 페이지에 추가 하기 전에 결과 문자열 주위 합니다.  
  
 다음 표에서 기본 문자를 나열합니다. 모든 문자는 유니코드에서 [C0 컨트롤 및 기본 라틴어](https://www.unicode.org/charts/PDF/U0000.pdf) 문자 설명 열에 언급 한 경우 제외 범위입니다.   
  
|문자|설명|  
|--------------------|-----------------|  
|A-Z|라틴어 대문자 영문자|  
|a-z|라틴어 소문자 영문자|  
|0-9|번호|  
|(공간)|공백|  
|!|느낌표|  
|#|숫자 기호 해시|  
|$|달러 기호|  
|%|퍼센트 기호|  
|( )|괄호|  
|*|별표|  
|+|더하기 기호|  
|,|쉼표|  
|-|하이픈, 빼기|  
|.|기간|  
|/|슬래시|  
|:|콜론|  
|;|세미콜론으로|  
|=|등호 기호|  
|?|물음표|  
|@|상용|  
|[ ]|대괄호|  
|&#92;|백슬래시|  
|^|캐럿|  
|_|밑줄|  
|\`| 억음 악센트 기호|  
|{ }|중괄호를 중괄호|  
|&#124;|수직선|  
|~|물결표|  
|0x00A1-0x00AC|특수 문자 0x00A1 (161 10 진수) 사이 유니코드 (10 진수 172) 0x00AC [C1 제어 및 라틴어-1 보충](https://www.unicode.org/charts/PDF/U0080.pdf) 문자 범위입니다. 이 범위에는 문자 인코딩 되 면 `useNamedEntities` 는 `true`.|  
|0x00AE-0x00FF|특수 문자 0x00AE (10 진수 174) 사이 유니코드 (10 진수 255) 0x00FF [C1 제어 및 라틴어-1 보충](https://www.unicode.org/charts/PDF/U0080.pdf) 문자 범위입니다. 이 범위에는 문자 인코딩 되 면 `useNamedEntities` 는 `true`.|  
|0x0100 - 0x017F|(10 진수 256) 0x0100 0x017F (10 진수 383) 사이의 문자입니다. (유니코드 [라틴 문자 확장 A](https://www.unicode.org/charts/PDF/U0100.pdf) 문자 범위입니다.)| 
|0x0180 - 0x024F|(10 진수 384) 0x0180 0x024F (10 진수 591) 사이의 문자입니다. (유니코드 [라틴 문자-확장-B](https://www.unicode.org/charts/PDF/U0180.pdf) 문자 범위입니다.)|
|0x0250-0x02AF|(10 진수 592) 0x0250 0x02AF (10 진수 687) 사이의 문자입니다. (유니코드 [IPA 확장](https://www.unicode.org/charts/PDF/U0250.pdf) 문자 범위입니다.)| 
|0x02B0-0x02FF|0x02B0 (10 진수 688) 사이의 0x02FF (10 진수 767) 자입니다. (유니코드 [조정 문자](https://www.unicode.org/charts/PDF/U02B0.pdf) 문자 범위입니다.)|
|0x0300-0x036F|(10 진수 768) 0x0300 0x036F (10 진수 879) 사이의 문자입니다. (유니코드 [분음 부호 결합](https://www.unicode.org/charts/PDF/U0300.pdf) 문자 범위입니다.)| 
  
 다음 표에서 입력 및 해당 인코딩된 출력의 예제를 나열합니다.  
  
|||  
|-|-|  
|`alert('XSS Attack!');`|`alert(&#39;XSS&#32;Attack!&#39;);`|  
|`<script>alert('XSS Attack!');</script>`|`&lt;script&gt;alert(&apos;XSS Attack!&apos;);&lt;/script&gt;`|  
|`alert('XSSあAttack!');`|`alert(&apos;XSS&#12354;Attack!&apos;);`|  
|`user@contoso.com`|`user@contoso.com`|  
|`"Anti-Cross Site Scripting Namespace"`|`&quot;Anti-Cross&#32;Site&#32;Scripting&#32;Namespace&quot;`|  
  
 수신 허용 목록 사용자 지정 호출을 <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>