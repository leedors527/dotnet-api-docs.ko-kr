<Type Name="RolePrincipal" FullName="System.Web.Security.RolePrincipal">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5919fe3aa113d23f8e78db13b0f0bed7fb261896" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57927231" /></Metadata><TypeSignature Language="C#" Value="public class RolePrincipal : System.Security.Claims.ClaimsPrincipal, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RolePrincipal extends System.Security.Claims.ClaimsPrincipal implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.RolePrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class RolePrincipal&#xA;Inherits ClaimsPrincipal&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class RolePrincipal : System::Security::Claims::ClaimsPrincipal, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type RolePrincipal = class&#xA;    inherit ClaimsPrincipal&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Claims.ClaimsPrincipal</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-2.0">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>역할 멤버 자격을 비롯하여 현재 HTTP 요청에 대한 보안 정보를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Security.RolePrincipal> 구현 개체를 <xref:System.Security.Principal.IPrincipal> 인터페이스 및 HTTP 요청에 대 한 현재 보안 컨텍스트를 나타냅니다.  
  
 역할 관리를 사용 하는 경우 (참조 <xref:System.Web.Security.Roles>), <xref:System.Web.Security.RoleManagerModule> 할당을 <xref:System.Web.Security.RolePrincipal> 개체를 <xref:System.Web.HttpContext.User%2A> 속성을 <xref:System.Web.HttpContext.Current%2A> <xref:System.Web.HttpContext>.  
  
 <xref:System.Web.Security.RolePrincipal> 클래스는 현재 HTTP 요청에 대 한 보안 id를 노출 하 고 또한 역할 멤버 자격에 대 한 검사를 수행 합니다. 경우 <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> 됩니다 `true`, 해당 <xref:System.Web.Security.RolePrincipal> 개체는 캐시 된 역할 목록 관리 및 역할 멤버 자격에서 캐시 된 현재 사용자에 대 한 조회 한 후 역할 목록 먼저 <xref:System.Web.Security.Roles.Provider%2A>합니다. 하는 경우 <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> 됩니다 `false`는 <xref:System.Web.Security.RolePrincipal> 항상 역할 공급자를 사용 하 여 역할 멤버 자격 개체를 조회 합니다.  
  
 <xref:System.Web.Security.RolePrincipal> 암호화 하 고으로 식별 된 쿠키에 캐시 된 역할 정보를 해독 하는 개체를 <xref:System.Web.Security.Roles.CookieName%2A> 기반을 <xref:System.Web.Security.Roles.CookieProtectionValue%2A>입니다.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET 역할을 사용 하 여 권한 부여 관리</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.Security.RolePrincipal" /> 클래스의 새 인스턴스를 만듭니다.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET 역할을 사용 하 여 권한 부여 관리</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::Security::Principal::IIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : System.Security.Principal.IIdentity -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal identity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="identity"><see cref="T:System.Web.Security.RolePrincipal" />을 만들 사용자 ID입니다.</param>
        <summary>지정된 <paramref name="identity" />에 대한 <see cref="T:System.Web.Security.RolePrincipal" /> 개체를 인스턴스화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 오버 로드 된 <xref:System.Web.Security.RolePrincipal.%23ctor%2A> 생성자를 만듭니다 <xref:System.Web.Security.RolePrincipal> 개체 및 해당 속성 값을 초기화 합니다. 로 식별 된 쿠키의 캐시 된 역할 정보를 읽지는 <xref:System.Web.Security.Roles.CookieName%2A> 속성입니다. 합니다 <xref:System.Web.Security.RolePrincipal.ProviderName%2A> 속성을 <xref:System.Configuration.Provider.ProviderBase.Name%2A> 기본 역할 공급자의입니다.  
  
 역할 관리 사용에 대 한 내용은 참조는 <xref:System.Web.Security.Roles> 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 새 <xref:System.Web.Security.RolePrincipal> 개체입니다. 경우 <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> 은 `true`를 만듭니다를 <xref:System.Web.Security.RolePrincipal> 으로 식별 된 쿠키의 쿠키 정보로는 <xref:System.Web.Security.Roles.CookieName%2A> 속성.  
  
 [!code-csharp[System.Web.Security.RolePrincipal#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/snippetscs.aspx#2)]
 [!code-vb[System.Web.Security.RolePrincipal#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/snippetsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" />가 <see langword="null" />입니다.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET 역할을 사용 하 여 권한 부여 관리</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RolePrincipal (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RolePrincipal(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="info">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
        <param name="context">이 serialization의 대상입니다.</param>
        <summary>지정된 <see cref="T:System.Web.Security.RolePrincipal" /> 개체에 포함된 정보 및 지정된 스트리밍 컨텍스트를 사용하여 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (System.Security.Principal.IIdentity identity, string encryptedTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity, string encryptedTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity, encryptedTicket As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::Security::Principal::IIdentity ^ identity, System::String ^ encryptedTicket);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : System.Security.Principal.IIdentity * string -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal (identity, encryptedTicket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="encryptedTicket" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identity"><see cref="T:System.Web.Security.RolePrincipal" />을 만들 사용자 ID입니다.</param>
        <param name="encryptedTicket">암호화된 역할 정보가 포함된 문자열입니다.</param>
        <summary>지정된 <paramref name="identity" />의 역할 정보를 사용하여 지정된 <paramref name="encryptedTicket" />에 대한 <see cref="T:System.Web.Security.RolePrincipal" /> 개체를 인스턴스화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)]

 이 오버 로드 된 <xref:System.Web.Security.RolePrincipal.%23ctor%2A> 생성자를 만듭니다 <xref:System.Web.Security.RolePrincipal> 개체 및 해당 속성 값을 초기화 합니다. 현재 사용자에 대 한 역할 정보를 읽고 제공 된 `encryptedTicket` 사용 하 여 캐시를 <xref:System.Web.Security.RolePrincipal> 개체입니다. 합니다 <xref:System.Web.Security.RolePrincipal.ProviderName%2A> 속성을 <xref:System.Configuration.Provider.ProviderBase.Name%2A> 기본 역할 공급자의입니다.  
  
 역할 관리 사용에 대 한 내용은 참조는 <xref:System.Web.Security.Roles> 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 새 <xref:System.Web.Security.RolePrincipal> 개체입니다. 경우 <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> 은 `true`를 만듭니다를 <xref:System.Web.Security.RolePrincipal> 으로 식별 된 쿠키의 쿠키 정보로는 <xref:System.Web.Security.Roles.CookieName%2A> 속성.  
  
 [!code-csharp[System.Web.Security.RolePrincipal#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/snippetscs.aspx#2)]
 [!code-vb[System.Web.Security.RolePrincipal#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/snippetsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="encryptedTicket" />가 <see langword="null" />입니다.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET 역할을 사용 하 여 권한 부여 관리</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (string providerName, System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::String ^ providerName, System::Security::Principal::IIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : string * System.Security.Principal.IIdentity -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal (providerName, identity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="providerName">사용자에 대한 역할 공급자의 이름입니다.</param>
        <param name="identity"><see cref="T:System.Web.Security.RolePrincipal" />을 만들 사용자 ID입니다.</param>
        <summary>지정된 <paramref name="identity" />을 사용하여 지정된 <paramref name="providerName" />에 대한 <see cref="T:System.Web.Security.RolePrincipal" /> 개체를 인스턴스화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 오버 로드 된 <xref:System.Web.Security.RolePrincipal.%23ctor%2A> 생성자를 만듭니다 <xref:System.Web.Security.RolePrincipal> 개체 및 해당 속성 값을 초기화 합니다. 합니다 <xref:System.Web.Security.RolePrincipal.ProviderName%2A> 속성에 지정 된 값으로 설정 되는 `providerName` 매개 변수입니다.  
  
 역할 관리 사용에 대 한 내용은 참조는 <xref:System.Web.Security.Roles> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="providerName" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="providerName" />이 응용 프로그램의 구성에 없는 역할 공급자를 참조하는 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET 역할을 사용 하 여 권한 부여 관리</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (string providerName, System.Security.Principal.IIdentity identity, string encryptedTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, class System.Security.Principal.IIdentity identity, string encryptedTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, identity As IIdentity, encryptedTicket As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::String ^ providerName, System::Security::Principal::IIdentity ^ identity, System::String ^ encryptedTicket);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : string * System.Security.Principal.IIdentity * string -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal (providerName, identity, encryptedTicket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="encryptedTicket" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerName">사용자에 대한 역할 공급자의 이름입니다.</param>
        <param name="identity"><see cref="T:System.Web.Security.RolePrincipal" />을 만들 사용자 ID입니다.</param>
        <param name="encryptedTicket">암호화된 역할 정보가 포함된 문자열입니다.</param>
        <summary>지정된 <paramref name="identity" />과 지정된 <paramref name="providerName" />의 역할 정보를 사용하여 지정된 <paramref name="encryptedTicket" />에 대한 <see cref="T:System.Web.Security.RolePrincipal" /> 개체를 인스턴스화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)]

 이 오버 로드 된 <xref:System.Web.Security.RolePrincipal.%23ctor%2A> 생성자를 만듭니다 <xref:System.Web.Security.RolePrincipal> 개체 및 해당 속성 값을 초기화 합니다. 현재 사용자에 대 한 역할 정보를 읽고 제공 된 `encryptedTicket` 사용 하 여 캐시를 <xref:System.Web.Security.RolePrincipal> 개체입니다. 합니다 <xref:System.Web.Security.RolePrincipal.ProviderName%2A> 속성에 지정 된 값으로 설정 되는 `providerName` 매개 변수입니다.  
  
 역할 관리 사용에 대 한 내용은 참조는 <xref:System.Web.Security.Roles> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="encryptedTicket" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="providerName" />가 <see langword="null" />입니다.  
  
또는 
 <paramref name="providerName" />이 응용 프로그램의 구성에 없는 역할 공급자를 참조하는 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET 역할을 사용 하 여 권한 부여 관리</related>
      </Docs>
    </Member>
    <Member MemberName="CachedListChanged">
      <MemberSignature Language="C#" Value="public bool CachedListChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CachedListChanged" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.CachedListChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CachedListChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CachedListChanged { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CachedListChanged : bool" Usage="System.Web.Security.RolePrincipal.CachedListChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.Security.RolePrincipal" /> 개체를 사용하여 캐시된 역할 이름의 목록이 수정되었는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="T:System.Web.Security.RolePrincipal" /> 개체를 사용하여 캐시된 역할 이름의 목록이 수정되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> 반환 됩니다 `true` 기본 역할에서 역할 이름을 검색 된 후 <xref:System.Web.Security.Roles.Provider%2A> 하 여 캐시에 추가 합니다 <xref:System.Web.Security.RolePrincipal.GetRoles%2A> 메서드를 때나를 <xref:System.Web.Security.RolePrincipal.IsInRole%2A> 메서드 호출을 <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> 메서드의 기본 역할 공급자 및 다음 응답을 받아 `true`로 전달 된 역할 이름이 <xref:System.Web.Security.RolePrincipal.IsInRole%2A> 캐시에 추가 되는 메서드.  
  
 <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> 속성은 또한 경우 true를 반환 <xref:System.Web.Security.Roles.CookieSlidingExpiration%2A> 로 설정 된 `true` 및 <xref:System.Web.Security.RolePrincipal.ExpireDate%2A> 경과한 새 결과 <xref:System.Web.Security.RolePrincipal.ExpireDate%2A> 설정 합니다.  
  
   
  
## Examples  
 다음 예제에서는 역할 관리를 사용 하는 경우 현재 사용자에 대 한 역할 캐싱 정보를 표시 합니다. 역할 관리 사용에 대 한 내용은 참조는 <xref:System.Web.Security.Roles> 클래스입니다.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET 역할을 사용 하 여 권한 부여 관리</related>
      </Docs>
    </Member>
    <Member MemberName="CookiePath">
      <MemberSignature Language="C#" Value="public string CookiePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookiePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.CookiePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CookiePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CookiePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CookiePath : string" Usage="System.Web.Security.RolePrincipal.CookiePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>캐시된 역할 이름 쿠키에 대한 경로를 가져옵니다.</summary>
        <value>역할 이름이 캐시되는 쿠키의 경로입니다. 기본값은 /입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Security.RolePrincipal.CookiePath%2A> 속성의 값을 반환 합니다 `cookiePath` ASP.NET 응용 프로그램에 대 한 Web.config 파일에서 특성입니다. 쿠키 경로에 대 한 자세한 내용은 참조 하세요. <xref:System.Web.HttpCookie.Path%2A>합니다.  
  
   
  
## Examples  
 다음 예제에서는 역할 관리를 사용 하는 경우 현재 사용자에 대 한 역할 캐싱 정보를 표시 합니다. 역할 관리 사용에 대 한 내용은 참조는 <xref:System.Web.Security.Roles> 클래스입니다.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET 역할을 사용 하 여 권한 부여 관리</related>
      </Docs>
    </Member>
    <Member MemberName="Expired">
      <MemberSignature Language="C#" Value="public bool Expired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Expired" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.Expired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Expired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Expired : bool" Usage="System.Web.Security.RolePrincipal.Expired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>역할 쿠키가 만료되었는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>역할 쿠키가 만료되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RolePrincipal.Expired%2A> 속성이 반환을 `Boolean` 역할 쿠키가 만료 되었는지 여부를 나타내는 값을 기반으로 <xref:System.Web.Security.RolePrincipal.ExpireDate%2A> 현재 날짜 및 시간입니다.  
  
   
  
## Examples  
 다음 예제에서는 역할 관리를 사용 하는 경우 현재 사용자에 대 한 역할 캐싱 정보를 표시 합니다. 역할 관리 사용에 대 한 내용은 참조는 <xref:System.Web.Security.Roles> 클래스입니다.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET 역할을 사용 하 여 권한 부여 관리</related>
      </Docs>
    </Member>
    <Member MemberName="ExpireDate">
      <MemberSignature Language="C#" Value="public DateTime ExpireDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ExpireDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.ExpireDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpireDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime ExpireDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpireDate : DateTime" Usage="System.Web.Security.RolePrincipal.ExpireDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>역할 쿠키가 만료되는 날짜와 시간을 가져옵니다.</summary>
        <value>역할 쿠키가 만료되는 <see cref="T:System.DateTime" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 역할 관리를 사용 하는 경우 현재 사용자에 대 한 역할 캐싱 정보를 표시 합니다. 역할 관리 사용에 대 한 내용은 참조는 <xref:System.Web.Security.Roles> 클래스입니다.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET 역할을 사용 하 여 권한 부여 관리</related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="rolePrincipal.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="info">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
        <param name="context">이 serialization의 대상입니다.</param>
        <summary>지정된 스트리밍 컨텍스트를 사용하여 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체를 대상 개체를 serialize하는 데 필요한 데이터로 채웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 자세한 내용은 <xref:System.Runtime.Serialization.ISerializable.GetObjectData%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29> 메서드를 참조하세요.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoles">
      <MemberSignature Language="C#" Value="public string[] GetRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.GetRoles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetRoles();" />
      <MemberSignature Language="F#" Value="member this.GetRoles : unit -&gt; string[]" Usage="rolePrincipal.GetRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Security.RolePrincipal" />이 멤버로 속해 있는 역할 목록을 가져옵니다.</summary>
        <returns><see cref="T:System.Web.Security.RolePrincipal" />이 멤버로 속해 있는 역할 목록입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> 은 `true` 나타내는 사용자에 대 한 캐시 된 역할 이름 및 합니다 <xref:System.Web.Security.RolePrincipal>, 해당 <xref:System.Web.Security.RolePrincipal.GetRoles%2A> 메서드는 캐시에는 사용자가 멤버인 역할 이름 목록을 반환 합니다. 역할 이름을 캐시 되지 않은 경우 해당 <xref:System.Web.Security.RolePrincipal.GetRoles%2A> 메서드는 기본 역할의 멤버인 사용자는 역할 이름의 목록을 반환 <xref:System.Web.Security.Roles.Provider%2A>합니다. 현재 역할 이름만 <xref:System.Web.Security.Roles.ApplicationName%2A> 반환 됩니다. 역할 이름에 캐시 되었는지 여부를 결정 하는 <xref:System.Web.Security.RolePrincipal> 개체를 확인 합니다 <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제는 로그온 한 사용자가 멤버인 역할을 표시 합니다.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/GetRolescs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/GetRolesvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException"><see cref="P:System.Web.Security.RolePrincipal.Identity" /> 속성이 <see langword="null" />일 경우(이 속성은</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET 역할을 사용 하 여 권한 부여 관리</related>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public override System.Security.Principal.IIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Identity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ Identity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : System.Security.Principal.IIdentity" Usage="System.Web.Security.RolePrincipal.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 HTTP 요청에 대한 보안 ID를 가져옵니다.</summary>
        <value>현재 HTTP 요청에 대한 보안 ID입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Security.RolePrincipal.Identity%2A> 의 <xref:System.Web.Security.RolePrincipal> 개체를 설정 하는 경우는 <xref:System.Web.Security.RolePrincipal> 생성자가 호출 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 역할 관리를 사용 하는 경우 현재 사용자에 대 한 역할 캐싱 정보를 표시 합니다. 역할 관리 사용에 대 한 내용은 참조는 <xref:System.Web.Security.Roles> 클래스입니다.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET 역할을 사용 하 여 권한 부여 관리</related>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public override bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsInRole(System::String ^ role);" />
      <MemberSignature Language="F#" Value="override this.IsInRole : string -&gt; bool" Usage="rolePrincipal.IsInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">검색할 역할입니다.</param>
        <summary><see cref="T:System.Web.Security.RolePrincipal" />로 나타낸 사용자가 지정된 역할에 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <returns><see cref="T:System.Web.Security.RolePrincipal" />로 나타낸 사용자가 지정된 역할에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RolePrincipal.IsInRole%2A> 먼저 확인을 <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> 속성을 현재 사용자의 역할 이름 목록을 캐시를 사용할 수 있는지 확인 합니다. 경우는 <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> 속성은 `true`, 하는 지정된 된 역할에 대 한 캐시 된 목록을 확인 합니다. 경우는 <xref:System.Web.Security.RolePrincipal.IsInRole%2A> 반환 메서드는 캐시 된 목록의 지정된 된 역할을 찾습니다, `true`합니다.  
  
 경우 <xref:System.Web.Security.RolePrincipal.IsInRole%2A> 지정된 된 역할을 찾지 못한 호출 합니다 <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> 기본 메서드의 <xref:System.Web.Security.Roles.Provider%2A> 구성 된 데이터 원본에서 역할에 연결 된 사용자 이름 인지 확인 하는 인스턴스 <xref:System.Web.Security.Roles.ApplicationName%2A> 값.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용자 역할을 볼 수 있도록 허용 하기 전에 로그온 한 사용자를 관리자 역할에 있는지 여부를 확인 합니다.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/ViewRolescs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/ViewRolesvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException"><see cref="P:System.Web.Security.RolePrincipal.Identity" /> 속성이 <see langword="null" />일 경우(이 속성은</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET 역할을 사용 하 여 권한 부여 관리</related>
      </Docs>
    </Member>
    <Member MemberName="IsRoleListCached">
      <MemberSignature Language="C#" Value="public bool IsRoleListCached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRoleListCached" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.IsRoleListCached" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRoleListCached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRoleListCached { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRoleListCached : bool" Usage="System.Web.Security.RolePrincipal.IsRoleListCached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자에 대한 역할 목록이 쿠키에 캐시되었는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>역할 이름이 쿠키에 캐시되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 `cacheRolesInCookie` 로 설정 되어 응용 프로그램 Web.config 파일에서 특성 `true`, 특정 역할에 사용자 멤버 자격을 선택 하면 현재 사용자에 대 한 역할 이름의 목록이 쿠키에 기록 됨. <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> 속성 역할 이름 쿠키를 썼는지 여부를 나타냅니다. 도 있는지 확인 합니다 `cacheRolesInCookie` 구성 특성이 될 수 있습니다 `true`의 <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> 속성을 반환 하지 않는 `true` 될 때까지 역할 정보를 쿠키에 기록 된 후. 역할이 검사가 사용자에 대해 수행 하는 경우 <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> 돌아갑니다 `false`합니다.  
  
   
  
## Examples  
 다음 예제에서는 역할 관리를 사용 하는 경우 현재 사용자에 대 한 역할 캐싱 정보를 표시 합니다. 역할 관리 사용에 대 한 내용은 참조는 <xref:System.Web.Security.Roles> 클래스입니다.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET 역할을 사용 하 여 권한 부여 관리</related>
      </Docs>
    </Member>
    <Member MemberName="IssueDate">
      <MemberSignature Language="C#" Value="public DateTime IssueDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime IssueDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.IssueDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IssueDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime IssueDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.IssueDate : DateTime" Usage="System.Web.Security.RolePrincipal.IssueDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>역할 쿠키가 발행된 날짜와 시간을 가져옵니다.</summary>
        <value>역할 쿠키가 발행된 <see cref="T:System.DateTime" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 역할 관리를 사용 하는 경우 현재 사용자에 대 한 역할 캐싱 정보를 표시 합니다. 역할 관리 사용에 대 한 내용은 참조는 <xref:System.Web.Security.Roles> 클래스입니다.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET 역할을 사용 하 여 권한 부여 관리</related>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderName : string" Usage="System.Web.Security.RolePrincipal.ProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자에 대한 역할 정보를 저장하고 검색하는 역할 공급자의 이름을 가져옵니다.</summary>
        <value>사용자에 대한 역할 정보를 저장하고 검색하는 역할 공급자의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Security.RolePrincipal.ProviderName%2A> 속성을 나타내는 사용자에 대 한 역할 정보를 관리 하는 역할 공급자의 이름을 표시 합니다 <xref:System.Web.Security.RolePrincipal> 개체입니다. 사용 하 여 사용자에 대 한 특정 역할 공급자 인스턴스를 액세스할 수 있습니다는 <xref:System.Web.Security.Roles.Providers%2A> 의 속성을 <xref:System.Web.Security.Roles> 공급자 응용 프로그램에 대 한 기본 공급자 인지에 관계 없이 클래스입니다. 예를 들어, 사용 하는 메서드를 만들 수 있습니다는 <xref:System.Web.Security.RolePrincipal> 으로 입력 및 표시 사용자에 대 한 역할의 목록을 반환 합니다. 적절 한 역할 공급자를 사용 하에 대 한 역할 목록을 반환 하는 것을 확인할 수 있습니다는 <xref:System.Web.Security.RolePrincipal> 호출 하 여는 <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> 에서 역할 공급자의 메서드에 <xref:System.Web.Security.Roles.Providers%2A> 의해 인덱싱된 컬렉션은 <xref:System.Web.Security.RolePrincipal.ProviderName%2A> 속성 값입니다.  
  
 채우는 합니다 <xref:System.Web.Security.RolePrincipal> 개체 각 요청에 대해 사용 해야 합니다는 <xref:System.Web.Security.RoleManagerModule.GetRoles> 응용 프로그램의 Global.asax 파일에 정의 된 이벤트 처리기입니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET 역할을 사용 하 여 권한 부여 관리</related>
      </Docs>
    </Member>
    <Member MemberName="SetDirty">
      <MemberSignature Language="C#" Value="public void SetDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.SetDirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDirty();" />
      <MemberSignature Language="F#" Value="member this.SetDirty : unit -&gt; unit" Usage="rolePrincipal.SetDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>캐시된 역할 목록을 변경된 것으로 표시합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RolePrincipal.SetDirty%2A> 메서드는 캐시 된 역할 목록을 설정 하 여 변경 된 것으로 표시 <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> 를 `true` 하 고 <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> 에 `false`합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET 역할을 사용 하 여 권한 부여 관리</related>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
        <param name="context">이 serialization의 대상입니다.</param>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Runtime.Serialization.ISerializationSurrogate.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />를 참조하십시오.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현 합니다. <xref:System.Web.Security.RolePrincipal> 인스턴스가 <xref:System.Runtime.Serialization.ISerializable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToEncryptedTicket">
      <MemberSignature Language="C#" Value="public string ToEncryptedTicket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToEncryptedTicket() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.ToEncryptedTicket" />
      <MemberSignature Language="VB.NET" Value="Public Function ToEncryptedTicket () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToEncryptedTicket();" />
      <MemberSignature Language="F#" Value="member this.ToEncryptedTicket : unit -&gt; string" Usage="rolePrincipal.ToEncryptedTicket " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Security.RolePrincipal" />에 따라 암호화되고 <see cref="P:System.Web.Security.Roles.CookieProtectionValue" /> 개체를 사용하여 캐시된 역할 정보를 반환합니다.</summary>
        <returns><see cref="T:System.Web.Security.RolePrincipal" />에 따라 암호화되고 <see cref="P:System.Web.Security.Roles.CookieProtectionValue" /> 개체를 사용하여 캐시된 역할 정보입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값을 반환 합니다 <xref:System.Web.Security.RolePrincipal.ToEncryptedTicket%2A> 메서드는 역할 쿠키에 저장 됩니다 때 <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> 는 `true`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 결과 기록 합니다 <xref:System.Web.Security.RolePrincipal.ToEncryptedTicket%2A> 역할 쿠키가 방법.  
  
 [!code-csharp[System.Web.Security.RolePrincipal#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/snippetscs.aspx#6)]
 [!code-vb[System.Web.Security.RolePrincipal#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/snippetsvb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET 역할을 사용 하 여 권한 부여 관리</related>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Version { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : int" Usage="System.Web.Security.RolePrincipal.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>역할 쿠키의 버전 번호를 가져옵니다.</summary>
        <value>역할 쿠키의 버전 번호입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 역할 쿠키에 버전 번호를 포함 하 여 이후 릴리스의 ASP.NET 역할 쿠키의 형식을 수정 하 고 사용할 수는 <xref:System.Web.Security.RolePrincipal.Version%2A> 속성을 다른 형식 간에 구분 합니다.  
  
   
  
## Examples  
 다음 예제에서는 역할 관리를 사용 하는 경우 현재 사용자에 대 한 역할 캐싱 정보를 표시 합니다. 역할 관리 사용에 대 한 내용은 참조는 <xref:System.Web.Security.Roles> 클래스입니다.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">ASP.NET 역할을 사용 하 여 권한 부여 관리</related>
      </Docs>
    </Member>
  </Members>
</Type>