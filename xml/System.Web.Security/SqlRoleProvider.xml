<Type Name="SqlRoleProvider" FullName="System.Web.Security.SqlRoleProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ce9491ab9d65f35960b0c21f3b06af305bf5600b" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52252886" /></Metadata><TypeSignature Language="C#" Value="public class SqlRoleProvider : System.Web.Security.RoleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlRoleProvider extends System.Web.Security.RoleProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.SqlRoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlRoleProvider&#xA;Inherits RoleProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlRoleProvider : System::Web::Security::RoleProvider" />
  <TypeSignature Language="F#" Value="type SqlRoleProvider = class&#xA;    inherit RoleProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.RoleProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>SQL Server 데이터베이스에 ASP.NET 애플리케이션에 대한 역할 멤버 자격 정보를 저장하는 작업을 관리합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 클래스에서 사용 되는 <xref:System.Web.Security.Roles> 및 <xref:System.Web.Security.RolePrincipal> SQL Server 데이터베이스를 사용 하 여 ASP.NET 애플리케이션 역할-관리 서비스를 제공 하는 클래스입니다. 애플리케이션에 대 한 다양 한 수준의 권한 부여를 지정 하려면 역할 관리를 사용할 수 있습니다.  
  
 사용 하는 <xref:System.Web.Security.SqlRoleProvider> 클래스를 먼저 만들어야 사용 하는 SQL Server 데이터베이스를 <xref:System.Web.Security.SqlRoleProvider>입니다. 사용 하는 데이터베이스를 만드는 <xref:System.Web.Security.SqlRoleProvider> 클래스를 실행 합니다 `aspnet_regsql.exe` 는 C:\WINDOWS\Microsoft.NET\Framework\에서 실행 파일을 찾을 `versionNumber` 폴더 지정를 `-Ar` 옵션 (예를 들어 `aspnet_regsql.exe -Ar`). 생성 된 데이터베이스는 Aspnetdb 라고 합니다. 또는 GUI 구성 모드를 가져오려고 aspnet_regsql.exe를 실행 하 고 모든 ASP.NET 기능을 구성 하려면 선택 합니다.  
  
 역할 공급자를 통합된 보안을 사용 하는 연결 문자열을 사용 하 여 구성 된 경우 ASP.NET 애플리케이션의 프로세스 계정에 SQL Server 데이터베이스에 연결할 수 있는 권한이 있어야 합니다.  
  
 Machine.config 파일을 사용 하 여 구성 된를 <xref:System.Web.Security.SqlRoleProvider> AspNetSqlProvider 로컬 컴퓨터의 SQL Server에 연결 하는 명명 된 인스턴스. 공급자의이 인스턴스를 사용 하거나 지정할 수 있습니다 고유한 Web.config 파일에서 ASP.NET 애플리케이션에 대 한 합니다. AspNetSqlProvider 인스턴스를 사용 하려면 AspNetSqlProvider로 지정 된 `defaultProvider` 구성에서 합니다.  
  
 구성할 수 있습니다 합니다 <xref:System.Web.Security.SqlRoleProvider> 와 동일한 데이터베이스 및 사용자 정보를 사용 하는 <xref:System.Web.Security.SqlMembershipProvider> 인증 및 권한 부여 정보에 대 한 단일 데이터베이스를 사용 하려면. 동일한 데이터베이스에 멤버 자격 및 역할 정보를 사용 하려면 실행 aspnet_regsql.exe를 실행 하 고 멤버 자격 기능을 설치 합니다. 그런 다음 둘 다에 대 한 구성에서 동일한 연결 문자열을 지정 하면 <xref:System.Web.Security.SqlRoleProvider> 및 <xref:System.Web.Security.SqlMembershipProvider> 인스턴스. 또한 공급자 인스턴스가 모두 동일한 구성 되어 있는지를 확인 <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A>합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하도록 구성 된 ASP.NET 애플리케이션에 대 한 Web.config 파일을 <xref:System.Web.Security.SqlRoleProvider> 개체 및 <xref:System.Web.Security.SqlMembershipProvider>합니다. 요소는 관리자 역할에 인증 된 사용자에 대 한 액세스만 허용 하도록 구성 됩니다.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="logincs.aspx"  
      name=".ASPXFORMSAUTH" />  
    </authentication>  
    <authorization>  
      <deny users="?" />  
         <allow roles="Administrators" />  
         <deny users="*" />  
    </authorization>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="15">  
      <providers>  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="false"  
          requiresQuestionAndAnswer="false"   
          passwordFormat="Hashed"   
          applicationName="SampleApplication" />  
      </providers>  
    </membership>  
    <roleManager defaultProvider="SqlProvider"   
      enabled="true"  
      cacheRolesInCookie="true"  
      cookieName=".ASPROLES"  
      cookieTimeout="30"  
      cookiePath="/"  
      cookieRequireSSL="true"  
      cookieSlidingExpiration="true"  
      cookieProtection="All" >  
      <providers>  
        <add  
          name="SqlProvider"  
          type="System.Web.Security.SqlRoleProvider"  
          connectionStringName="SqlServices"   
          applicationName="SampleApplication" />  
      </providers>  
    </roleManager>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">ASP.NET 역할 관리 이해</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlRoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlRoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Security.SqlRoleProvider" /> 클래스의 인스턴스를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.%23ctor%2A> 의 인스턴스를 만드는 ASP.NET에서 생성자를 호출 합니다 <xref:System.Web.Security.SqlRoleProvider> 응용 프로그램에 대 한 구성에 지정 된 클래스입니다. 코드에서 사용할이 생성자를 사용 하는 것이 없습니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">ASP.NET 역할 관리 이해</related>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public override void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.AddUsersToRoles : string[] * string[] -&gt; unit" Usage="sqlRoleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">지정된 역할에 추가할 사용자 이름으로 이루어진 문자열 배열입니다.</param>
        <param name="roleNames">지정된 사용자 이름을 추가할 역할 이름으로 이루어진 문자열 배열입니다.</param>
        <summary>지정된 각 역할에 지정된 사용자를 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.AddUsersToRoles%2A> 메서드를 호출 합니다 <xref:System.Web.Security.Roles> ASP.NET 응용 프로그램의 구성 파일 (Web.config)에 지정 된 SQL Server 데이터베이스에 하나 이상의 역할을 사용 하 여 하나 이상의 사용자를 연결 하는 클래스입니다. 이 메서드는 합니다 <xref:System.Web.Security.Roles.AddUserToRole%2A>, <xref:System.Web.Security.Roles.AddUserToRoles%2A>, <xref:System.Web.Security.Roles.AddUsersToRole%2A>, 및 <xref:System.Web.Security.Roles.AddUsersToRoles%2A> 메서드를 <xref:System.Web.Security.Roles> 클래스입니다.  
  
 호출 하는 동안 수행 되는 데이터베이스 업데이트는 <xref:System.Web.Security.SqlRoleProvider.AddUsersToRoles%2A> 메서드는 트랜잭션 내에서 이루어집니다. 오류가 발생 하는 경우 지정된 된 역할에 이미 있는 사용자 이름을 같은 트랜잭션이 롤백되고 업데이트가 수행 되지 않습니다.  
  
 경우는 <xref:System.Web.Security.SqlRoleProvider> 함께 사용 되는 <xref:System.Web.Security.SqlMembershipProvider>, 지정된 된 사용자 이름 중 하나에 없는 경우 데이터베이스를 데이터베이스에 사용자 이름 자동 추가 됩니다.  
  
 사용자 이름과 역할 이름에 쉼표를 포함할 수 없습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 하나 이상의 사용자 역할에 추가 하거나 역할에서 사용자를 제거 합니다. 역할 관리를 사용 하도록 설정 하는 Web.config 파일의 예제를 참조 하세요. <xref:System.Web.Security.SqlRoleProvider>합니다.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleNames" />의 역할 중 하나가 <see langword="null" />인 경우  
  
또는 
<paramref name="usernames" />의 사용자 중 하나가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleNames" />의 역할 중 하나가 빈 문자열이거나 쉼표를 포함하는 경우  
  
또는 
<paramref name="usernames" />의 사용자 중 하나가 빈 문자열이거나 쉼표를 포함하는 경우  
  
또는 
<paramref name="roleNames" />의 역할 중 하나가 256자보다 긴 경우  
  
또는 
<paramref name="usernames" />의 사용자 중 하나가 256자보다 긴 경우  
  
또는 
 <paramref name="roleNames" />에 중복 요소가 포함된 경우  
  
또는 
 <paramref name="usernames" />에 중복 요소가 포함된 경우</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">하나 이상의 지정된 역할 이름을 찾을 수 없는 경우  
  
또는 
하나 이상의 지정된 사용자 이름을 찾을 수 없는 경우  
  
또는 
하나 이상의 지정된 사용자 이름이 하나 이상의 지정된 역할 이름과 이미 연결되어 있는 경우  
  
또는 
데이터베이스와 통신하는 동안 알 수 없는 오류가 발생한 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">ASP.NET 역할 관리 이해</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlRoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.SqlRoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>역할 정보를 저장하고 검색할 애플리케이션의 이름을 가져오거나 설정합니다.</summary>
        <value>역할 정보를 저장하고 검색할 애플리케이션의 이름입니다. 현재 <see cref="P:System.Web.HttpRequest.ApplicationPath" />의 기본값은 <see cref="P:System.Web.HttpContext.Request" /> 속성 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> 에서 사용 되는 <xref:System.Web.Security.SqlRoleProvider> 서로 다른 애플리케이션을 사용 하 여 사용자 및 역할을 연결할 합니다. 이 통해 여러 애플리케이션이 같은 데이터베이스를 사용 하 여 중복 된 사용자 이름이 나 역할 이름 간의 충돌을 일으키지 않고 사용자 및 역할 정보를 저장 합니다. 여러 ASP.NET 애플리케이션에서 동일한 값을 지정 하면 동일한 데이터베이스를 사용할 수는 <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> 속성입니다. 합니다 <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> 속성을 프로그래밍 방식으로 설정할 수 있습니다. 또는 사용 하 여 웹 애플리케이션에 대 한 구성 파일에서 선언적으로 설정할 수는 `applicationName` 특성입니다.  
  
 에 대 한 값을 지정 하지 않으면 합니다 `applicationName` 웹 애플리케이션 구성 파일의 특성에에서는 <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=nameWithType> 현재 속성 값 <xref:System.Web.HttpContext.Request%2A?displayProperty=nameWithType> 개체를 사용 합니다.  
  
> [!CAUTION]
>  단일 기본 역할 공급자 인스턴스를 모든 제공한 요청에 대 한 사용 되기 때문에 <xref:System.Web.HttpApplication> 개체를 여러 요청이 동시에 실행을 설정 하려고 할 수 있습니다는 <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> 속성 값입니다. 합니다 <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> 속성은 여러 쓰기 작업에 대해 안전 하 고 변경 하는 스레드는 <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> 속성 값은 애플리케이션의 여러 사용자에 대 한 예기치 않은 동작이 발생할 수 있습니다. 사용자가 설정할 수 있는 코드를 작성 하지 않는 것이 좋습니다는 <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> 속성 필요한 경우가 아니면 합니다. 애플리케이션의 예로 설정 하는 경우는 <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> 속성 해야 할 수 있습니다 여러 애플리케이션에 대 한 역할 데이터를 관리 하는 관리 애플리케이션입니다. 단일 사용자 애플리케이션 및 웹 애플리케이션이 아닙니다. 이러한 애플리케이션 이어야 합니다.  
  
   
  
## Examples  
 다음 예제에서는 요소를 `system.web` ASP.NET 애플리케이션에 대 한 Web.config 파일의 섹션입니다. 애플리케이션의 지정 <xref:System.Web.Security.SqlRoleProvider> 집합과 인스턴스를 <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> 속성을 `MyApplication`입니다.  
  
```  
<roleManager defaultProvider="SqlProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlRoleProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.Security.SqlRoleProvider.ApplicationName" /> ASP.NET 호스팅 권한이 없는 호출자가 <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /> 속성을 설정하려고 한 경우</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">256자보다 긴 문자열로 <see cref="P:System.Web.Security.SqlRoleProvider.ApplicationName" />을 설정하려고 한 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">ASP.NET 역할 관리 이해</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public override void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.CreateRole : string -&gt; unit" Usage="sqlRoleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">만들 역할의 이름입니다.</param>
        <summary>역할 데이터베이스에 새 역할을 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Security.SqlRoleProvider.CreateRole%2A> 메서드를 호출 합니다 <xref:System.Web.Security.Roles> ASP.NET 애플리케이션의 구성 파일 (Web.config)에 지정 된 SQL Server 데이터베이스의 역할을 만드는 클래스입니다.  
  
 역할 이름의 최대 길이 256 자입니다. 역할 이름은 대/소문자 구분 하지 않습니다. 쉼표 역할 이름에 허용 되지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 데이터베이스에 새 역할을 만듭니다. 역할 관리를 사용 하도록 설정 하는 Web.config 파일의 예제를 참조 하세요. <xref:System.Web.Security.SqlRoleProvider>합니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적 보안 위협을 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" />이 빈 문자열이거나 쉼표를 포함하는 경우  
  
또는 
 <paramref name="roleName" />이 256자보다 긴 경우</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException"><paramref name="roleName" />이 데이터베이스에 이미 있는 경우  
  
또는 
데이터베이스와 통신하는 동안 알 수 없는 오류가 발생한 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">ASP.NET 역할 관리 이해</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="override this.DeleteRole : string * bool -&gt; bool" Usage="sqlRoleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">삭제할 역할의 이름입니다.</param>
        <param name="throwOnPopulatedRole"><see langword="true" />이면 <paramref name="roleName" />에 하나 이상의 멤버가 있을 때 예외를 throw합니다.</param>
        <summary>역할 데이터베이스에서 역할을 제거합니다.</summary>
        <returns>역할을 삭제했으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.DeleteRole%2A> 메서드를 호출 합니다 <xref:System.Web.Security.Roles> ASP.NET 응용 프로그램의 구성 파일 (Web.config)에 지정 된 SQL Server 데이터베이스에서 역할을 삭제 하는 클래스입니다. 역할을 삭제 하면 해당 역할에 연결 된 사용자 목록은 데이터베이스에서도 삭제 됩니다. 데이터베이스에서 사용자 정보를 받지 않습니다.  
  
 하는 경우 `throwOnPopulatedRole` 됩니다 `true`, 예외가 throw 됩니다 및 역할을 구분 하는 경우 역할 삭제 되지 것입니다는 `roleName` 매개 변수는 하나 이상의 멤버입니다. 하는 경우 `throwOnPopulatedRole` 는 `false`, 여부 비어 있는지 여부를 역할 삭제 됩니다.  
  
   
  
## Examples  
 다음 예에서는 데이터베이스에서 역할을 삭제 합니다. 역할 관리를 사용 하도록 설정 하는 Web.config 파일의 예제를 참조 하세요. <xref:System.Web.Security.SqlRoleProvider>합니다.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/deleterolecs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/deleterolevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" />이 <see langword="null" />(Visual Basic의 경우 <see langword="Nothing" />)인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" />이 빈 문자열이거나 쉼표를 포함하는 경우  
  
또는 
 <paramref name="roleName" />이 256자보다 긴 경우</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException"><paramref name="roleName" />에 하나 이상의 멤버가 있고 <paramref name="throwOnPopulatedRole" />이 <see langword="true" />인 경우  
  
또는 
데이터베이스와 통신하는 동안 알 수 없는 오류가 발생한 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">ASP.NET 역할 관리 이해</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="override this.FindUsersInRole : string * string -&gt; string[]" Usage="sqlRoleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">검색할 역할입니다.</param>
        <param name="usernameToMatch">검색할 사용자 이름입니다.</param>
        <summary>지정된 사용자 이름과 일치하는 부분이 사용자 이름에 포함되어 있는 사용자 이름의 배열을 역할에서 가져옵니다.</summary>
        <returns>사용자 이름이 <paramref name="usernameToMatch" />와 일치하고 사용자가 지정된 역할의 멤버인 모든 사용자의 이름을 포함하는 문자열 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Security.SqlRoleProvider.FindUsersInRole%2A> 메서드를 호출 합니다 <xref:System.Web.Security.Roles> 클래스 및 사용자 이름을 제공 된 일치 하는 항목에 포함 된 역할에 사용자의 목록을 반환 합니다 `usernameToMatch` 구성 된 `applicationName`합니다. 합니다 <xref:System.Web.Security.SqlRoleProvider> 일치 하는 사용자 이름 검색 합니다 `usernameToMatch` LIKE 키워드와 지원 SQL Server 와일드 카드 문자를 사용 하 여 매개 변수 값입니다. 예를 들어 경우는 `usernameToMatch` "user1"로 설정 된 후 존재 하는 경우 "user1"의 사용자 이름 사용 하 여 사용자에 대 한 멤버 자격 정보 반환 됩니다. 경우는 `usernameToMatch` "user %"로 설정 된 후 "user1", "user2", "user_admin" 및 등의 사용자 이름으로 사용자에 게 멤버 자격 정보 반환 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Security.Roles.FindUsersInRole%2A> 사용자 입력을 기반으로 하는 역할 멤버 자격을 표시 하는 방법입니다. 역할 관리를 사용 하도록 설정 하는 Web.config 파일의 예제를 참조 하세요. <xref:System.Web.Security.Roles>합니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적 보안 위협을 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.Security.Roles#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/FindUsersInRolecs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.Roles#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/FindUsersInRolevb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" />이 <see langword="null" />(Visual Basic의 경우 <see langword="Nothing" />)인 경우  
  
또는 
 <paramref name="usernameToMatch" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" />이 빈 문자열이거나 쉼표를 포함하는 경우  
  
또는 
 <paramref name="usernameToMatch" />이 빈 문자열인 경우  
  
또는 
 <paramref name="roleName" />이 256자보다 긴 경우  
  
또는 
 <paramref name="usernameToMatch" />이 256자보다 긴 경우</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">데이터베이스에서 <paramref name="roleName" />을 찾을 수 없는 경우  
  
또는 
데이터베이스와 통신하는 동안 알 수 없는 오류가 발생한 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">ASP.NET 역할 관리 이해</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public override string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="override this.GetAllRoles : unit -&gt; string[]" Usage="sqlRoleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>애플리케이션의 모든 역할 목록을 가져옵니다.</summary>
        <returns>데이터베이스에 저장된 특정 애플리케이션의 모든 역할 이름이 포함된 문자열 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Security.SqlRoleProvider.GetAllRoles%2A> 메서드를 호출 합니다 <xref:System.Web.Security.Roles> ASP.NET 애플리케이션의 구성 파일 (Web.config)에 지정 된 SQL Server 데이터베이스의 모든 역할 목록을 검색 하는 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 합니다 <xref:System.Web.Security.Roles.GetAllRoles%2A> 애플리케이션에 대 한 역할 목록을 가져오고 결과를 바인딩하는 메서드를 <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> 제어 합니다. 역할 관리를 사용 하도록 설정 하는 Web.config 파일의 예제를 참조 하세요. <xref:System.Web.Security.SqlRoleProvider>합니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적 보안 위협을 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">데이터베이스와 통신하는 동안 알 수 없는 오류가 발생한 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">ASP.NET 역할 관리 이해</related>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public override string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.GetRolesForUser : string -&gt; string[]" Usage="sqlRoleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">역할 목록을 반환할 사용자입니다.</param>
        <summary>사용자가 속한 역할 목록을 가져옵니다.</summary>
        <returns>지정된 사용자가 속한 모든 역할의 이름이 포함된 문자열 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Security.SqlRoleProvider.GetRolesForUser%2A> 메서드를 호출 합니다 <xref:System.Web.Security.Roles> ASP.NET 애플리케이션의 구성 파일 (Web.config)에 지정 된 SQL Server 데이터베이스에서 지정된 된 사용자 역할의 목록을 검색 하는 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 합니다 <xref:System.Web.Security.Roles.GetRolesForUser%2A> 지정 된 사용자 역할의 목록을 검색 하는 방법에 바인딩합니다를 <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> 컨트롤입니다. 역할 관리를 사용 하도록 설정 하는 Web.config 파일의 예제를 참조 하세요. <xref:System.Web.Security.SqlRoleProvider>합니다.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="username" />에 쉼표가 포함된 경우  
  
또는 
 <paramref name="username" />이 256자보다 긴 경우</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">데이터베이스와 통신하는 동안 알 수 없는 오류가 발생한 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">ASP.NET 역할 관리 이해</related>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.GetUsersInRole : string -&gt; string[]" Usage="sqlRoleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">사용자 목록을 가져올 역할의 이름입니다.</param>
        <summary>지정된 역할에 있는 사용자 목록을 가져옵니다.</summary>
        <returns>지정된 역할의 멤버에 해당하는 모든 사용자의 이름이 포함된 문자열 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Security.SqlRoleProvider.GetUsersInRole%2A> 메서드를 호출 합니다 <xref:System.Web.Security.Roles> ASP.NET 애플리케이션의 구성 파일 (Web.config)에 지정 된 SQL Server 데이터베이스에 지정 된 역할에 연결 된 사용자 목록을 검색 하는 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 합니다 <xref:System.Web.Security.Roles.GetUsersInRole%2A> 메서드를 특정 역할에 사용자의 목록을 가져오고 결과를 바인딩하는 <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> 제어 합니다. 역할 관리를 사용 하도록 설정 하는 Web.config 파일의 예제를 참조 하세요. <xref:System.Web.Security.SqlRoleProvider>합니다.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" />이 빈 문자열이거나 쉼표를 포함하는 경우  
  
또는 
 <paramref name="roleName" />이 256자보다 긴 경우</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">데이터베이스에서 <paramref name="rolename" />을 찾을 수 없는 경우  
  
또는 
데이터베이스와 통신하는 동안 알 수 없는 오류가 발생한 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">ASP.NET 역할 관리 이해</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="sqlRoleProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">초기화할 <see cref="T:System.Web.Security.SqlRoleProvider" /> 인스턴스의 이름입니다.</param>
        <param name="config">역할 공급자에 대한 구성 옵션의 이름과 값이 포함된 <see cref="T:System.Collections.Specialized.NameValueCollection" />입니다.</param>
        <summary>ASP.NET 애플리케이션의 구성 파일에 지정된 속성 값을 사용하여 SQL Server 역할 공급자를 초기화합니다. 이 메서드는 코드에서 직접 사용할 수 없습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 <xref:System.Web.Security.SqlRoleProvider> 속성을 사용 하 여 값 ASP.NET 애플리케이션 구성 파일 (Web.config)에 지정 하며 코드에서 직접 사용할 수 없습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">ASP.NET 애플리케이션이 <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> 이상의 신뢰 수준에서 실행되지 않는 경우</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="config" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException"><see langword="connectionStringName" /> 특성이 이 <see cref="T:System.Web.Security.SqlRoleProvider" /> 인스턴스에 대한 응용 프로그램 구성 파일에 없거나 비어 있는 경우  
  
또는 
<see langword="applicationName" /> 특성이 256자를 넘는 경우  
  
또는 
이 <see cref="T:System.Web.Security.SqlRoleProvider" /> 인스턴스에 대한 애플리케이션 구성 파일에 인식할 수 없는 특성이 포함된 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">ASP.NET 역할 관리 이해</related>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public override bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.IsUserInRole : string * string -&gt; bool" Usage="sqlRoleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">검색할 사용자 이름입니다.</param>
        <param name="roleName">검색할 역할입니다.</param>
        <summary>지정된 사용자가 지정된 역할에 속하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <returns>지정된 사용자가 지정된 역할에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.IsUserInRole%2A> 메서드를 호출 합니다 <xref:System.Web.Security.Roles> 클래스 및 <xref:System.Security.Principal.IPrincipal.IsInRole%2A> 메서드를 <xref:System.Web.UI.Page.User%2A?displayProperty=nameWithType> 사용자 역할에 ASP.NET 응용 프로그램의 구성 파일에 지정 된 SQL Server 데이터베이스를 사용 하 여 연결 되는지 여부를 결정 하는 속성 (Web.config)입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 프로그래밍 방식으로 사용자 역할을 볼 수 있도록 허용 하기 전에 로그온 한 사용자를 관리자 역할에 있는지 여부를 확인 합니다. 역할 관리를 사용 하도록 설정 하는 Web.config 파일의 예제를 참조 하세요. <xref:System.Web.Security.SqlRoleProvider>합니다.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" />가 <see langword="null" />인 경우  
  
또는 
 <paramref name="username" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" />이 빈 문자열이거나 쉼표를 포함하는 경우  
  
또는 
 <paramref name="username" />에 쉼표가 포함된 경우  
  
또는 
 <paramref name="roleName" />이 256자보다 긴 경우  
  
또는 
 <paramref name="username" />이 256자보다 긴 경우</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">데이터베이스와 통신하는 동안 알 수 없는 오류가 발생한 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">ASP.NET 역할 관리 이해</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="sqlRoleProvider.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">지정된 역할에서 제거할 사용자 이름으로 이루어진 문자열 배열입니다.</param>
        <param name="roleNames">지정된 사용자 이름을 제거할 역할 이름으로 이루어진 문자열 배열입니다.</param>
        <summary>지정된 역할에서 지정된 사용자 이름을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles%2A> 메서드를 호출 합니다 <xref:System.Web.Security.Roles> 클래스는 ASP.NET 응용 프로그램의 구성 파일 (Web.config)에 지정 된 SQL Server 데이터베이스에 하나 이상의 역할에서 하나 이상의 사용자를 제거 합니다. 이 메서드는 합니다 <xref:System.Web.Security.Roles.RemoveUserFromRole%2A>, <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A>, <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A>, 및 <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> 메서드를 <xref:System.Web.Security.Roles> 클래스입니다.  
  
 호출 하는 동안 수행 되는 데이터베이스 업데이트가 <xref:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles%2A> 트랜잭션 내에서 이루어집니다. 오류가 발생 하는 경우 존재 하지 않는 사용자 이름 또는 지정된 된 역할에 이미 있는 사용자 이름을 같은 트랜잭션이 롤백되고 업데이트가 수행 되지 않습니다.  
  
 사용자 이름과 역할 이름에 쉼표를 포함할 수 없습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 하나 이상의 사용자 역할에 추가 하거나 역할에서 사용자를 제거 합니다. 역할 관리를 사용 하도록 설정 하는 Web.config 파일의 예제를 참조 하세요. <xref:System.Web.Security.SqlRoleProvider>합니다.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleNames" />의 역할 중 하나가 <see langword="null" />인 경우  
  
또는 
<paramref name="usernames" />의 사용자 중 하나가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleNames" />의 역할 중 하나가 빈 문자열이거나 쉼표를 포함하는 경우  
  
또는 
<paramref name="usernames" />의 사용자 중 하나가 빈 문자열이거나 쉼표를 포함하는 경우  
  
또는 
<paramref name="roleNames" />의 역할 중 하나가 256자보다 긴 경우  
  
또는 
<paramref name="usernames" />의 사용자 중 하나가 256자보다 긴 경우  
  
또는 
 <paramref name="roleNames" />에 중복 요소가 포함된 경우  
  
또는 
 <paramref name="usernames" />에 중복 요소가 포함된 경우</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">하나 이상의 지정된 사용자 이름을 찾을 수 없는 경우  
  
또는 
하나 이상의 지정된 역할 이름을 찾을 수 없는 경우  
  
또는 
하나 이상의 지정된 사용자 이름이 하나 이상의 지정된 역할 이름과 연결되지 않은 경우  
  
또는 
데이터베이스와 통신하는 동안 알 수 없는 오류가 발생한 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">ASP.NET 역할 관리 이해</related>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public override bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.RoleExists : string -&gt; bool" Usage="sqlRoleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">데이터베이스에서 검색할 역할 이름입니다.</param>
        <summary>지정된 역할 이름이 역할 데이터베이스에 이미 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <returns>역할 이름이 데이터베이스에 이미 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Security.SqlRoleProvider.RoleExists%2A> 메서드를 호출 합니다 <xref:System.Web.Security.Roles> 역할 이름을 ASP.NET 애플리케이션의 구성 파일 (Web.config)에 지정 된 SQL Server 데이터베이스에 있는지 여부를 결정 하는 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.Security.Roles.RoleExists%2A> 역할 이름이 역할을 만들기 전에 이미 있는지 여부를 결정 하는 방법입니다. 역할 관리를 사용 하도록 설정 하는 Web.config 파일의 예제를 참조 하세요. <xref:System.Web.Security.SqlRoleProvider>합니다.  
  
> [!IMPORTANT]
>  이 예제에서는 잠재적 보안 위협을 사용자 입력을 허용 하는 텍스트 상자가 포함 되어 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" />이 빈 문자열이거나 쉼표를 포함하는 경우  
  
또는 
 <paramref name="roleName" />이 256자보다 긴 경우</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">데이터베이스와 통신하는 동안 알 수 없는 오류가 발생한 경우</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">ASP.NET 역할 관리 이해</related>
      </Docs>
    </Member>
  </Members>
</Type>