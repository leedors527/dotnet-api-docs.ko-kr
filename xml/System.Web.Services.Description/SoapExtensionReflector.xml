<Type Name="SoapExtensionReflector" FullName="System.Web.Services.Description.SoapExtensionReflector">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a307816d5500ac205f94291d4ce2585cde322bc2" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51874488" /></Metadata><TypeSignature Language="C#" Value="public abstract class SoapExtensionReflector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapExtensionReflector extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Description.SoapExtensionReflector" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapExtensionReflector" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapExtensionReflector abstract" />
  <TypeSignature Language="F#" Value="type SoapExtensionReflector = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>클래스에서 메서드별로 <see cref="T:System.Web.Services.Description.ServiceDescription" /> 개체에 SOAP 확장 정보를 추가할 수 있는 공통 인터페이스와 기능을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 추상 <xref:System.Web.Services.Description.SoapExtensionReflector> 클래스는 추상 메서드를 공개 <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A>합니다. 에 배치 되는 개체로 웹 메서드를 반영 하는 경우 SOAP 확장의 설명을 추가 하려면 파생된 클래스를 사용 하는이 추상 메서드는 <xref:System.Web.Services.Description.ServiceDescription> 개체입니다. 메서드 자체는 입력 아닙니다. 설명을 생성 하는 지정 된 바인딩에 속하는 모든 웹 메서드에 대 한 추가 <xref:System.Web.Services.Description.ServiceDescription>합니다.  
  
 사용할 수는 <xref:System.Web.Services.Description.ServiceDescription> 를 통해 웹 서비스 설명 언어 (WSDL) 문서를 생성 하는 <xref:System.Web.Services.Description.ServiceDescription.Write%2A> 메서드. <xref:System.Web.Services.Description.ServiceDescriptionImporter> 클래스 및 관련된 클래스를 사용할 수도 있습니다는 <xref:System.Web.Services.Description.ServiceDescription> 클라이언트 프록시 생성 코드 또는 추상 서버 코드.  
  
 파생 된 클래스를 사용 합니다 <xref:System.Web.Services.Description.SoapExtensionReflector> 추상에서 파생 된 클래스와 함께에서 클래스 <xref:System.Web.Services.Protocols.SoapExtension> 클라이언트나 서비스에서 메시지를 SOAP의 런타임 처리를 확장 하는 클래스입니다.  
  
 지정할 수 있습니다 <xref:System.Web.Services.Description.SoapExtensionReflector> 를 통해 구성 파일에는 [ \<soapExtensionReflectorTypes > 요소](https://msdn.microsoft.com/library/6950609a-c9a3-4f6f-a5fc-a05d6d204d5c) 요소와 해당 자식의 **추가** 요소입니다. 또한 웹 서비스를 게시 하는 ASP.NET 웹 애플리케이션 구성을 적용할 수 있습니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapExtension" />
    <altmember cref="M:System.Web.Services.Description.ProtocolReflector.ReflectMethod" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoapExtensionReflector ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionReflector.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoapExtensionReflector();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Services.Description.SoapExtensionReflector" /> 클래스의 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectDescription">
      <MemberSignature Language="C#" Value="public virtual void ReflectDescription ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReflectDescription() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionReflector.ReflectDescription" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReflectDescription ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReflectDescription();" />
      <MemberSignature Language="F#" Value="abstract member ReflectDescription : unit -&gt; unit&#xA;override this.ReflectDescription : unit -&gt; unit" Usage="soapExtensionReflector.ReflectDescription " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>바인딩에 해당하는 <see cref="T:System.Web.Services.Description.ServiceDescription" /> 개체에 배치되는 서비스 관련 설명 정보를 생성합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectionContext">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.ProtocolReflector ReflectionContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Description.ProtocolReflector ReflectionContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapExtensionReflector.ReflectionContext" />
      <MemberSignature Language="VB.NET" Value="Public Property ReflectionContext As ProtocolReflector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::ProtocolReflector ^ ReflectionContext { System::Web::Services::Description::ProtocolReflector ^ get(); void set(System::Web::Services::Description::ProtocolReflector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReflectionContext : System.Web.Services.Description.ProtocolReflector with get, set" Usage="System.Web.Services.Description.SoapExtensionReflector.ReflectionContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.ProtocolReflector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.Services.Description.ProtocolReflector" /> 메서드를 호출하는 추상 <see cref="M:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod" /> 클래스에서 파생된 클래스의 인스턴스를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.Services.Description.ProtocolReflector" /> 메서드를 호출하는 추상 <see cref="M:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod" /> 클래스에서 파생된 클래스의 인스턴스를 가져오거나 설정합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생 된 클래스를 구현 하는 경우는 <xref:System.Web.Services.Description.SoapExtensionReflector> `abstract` 클래스 필요가 없습니다에서 파생 된 클래스를 구현 하 <xref:System.Web.Services.Description.ProtocolReflector> 를 호출 하는 <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A> 메서드 또는 설정 하는 <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectionContext%2A> 속성.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectMethod">
      <MemberSignature Language="C#" Value="public abstract void ReflectMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReflectMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ReflectMethod ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReflectMethod();" />
      <MemberSignature Language="F#" Value="abstract member ReflectMethod : unit -&gt; unit" Usage="soapExtensionReflector.ReflectMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>파생 클래스에서 메서드별로 <see cref="T:System.Web.Services.Description.ServiceDescription" /> 개체에 SOAP 확장 정보를 추가하기 위해 구현해야 하는 <see langword="Abstract" /> 메서드입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A> 바인딩에 속한 각 웹 메서드에 대해 메서드가 호출 되는 <xref:System.Web.Services.Description.ServiceDescription> 나타냅니다. <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A> 메서드 웹 메서드를 직접 사용 하지 않습니다. 웹 서비스 클래스에서 반영 되는 바인딩의 모든 웹 메서드에 대 한 SOAP 확장 정보를 추가 합니다.  
  
 구현의 합니다 <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A> 작업 바인딩 등의 정보를 생성할 수 있습니다 `abstract` 작업 및 메시지입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>