<Type Name="HttpPostClientProtocol" FullName="System.Web.Services.Protocols.HttpPostClientProtocol">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8422e1989cd826124e66c2248612198961ffe428" /><Meta Name="ms.sourcegitcommit" Value="800d45fb80a298c4bde743e8a40af69755fc850f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/24/2019" /><Meta Name="ms.locfileid" Value="54895998" /></Metadata><TypeSignature Language="C#" Value="public class HttpPostClientProtocol : System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpPostClientProtocol extends System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.HttpPostClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpPostClientProtocol&#xA;Inherits HttpSimpleClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpPostClientProtocol : System::Web::Services::Protocols::HttpSimpleClientProtocol" />
  <TypeSignature Language="F#" Value="type HttpPostClientProtocol = class&#xA;    inherit HttpSimpleClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpSimpleClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>HTTP-POST 프로토콜을 사용하는 XML Web services 클라이언트 프록시의 기본 클래스입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XML 웹 서비스 클라이언트를 사용 하는 경우 기본 매개 변수에서 HTTP POST 프로토콜을 URL 인코딩 규칙을 사용 하 여 HTTP 본문 내에서 인코딩 되 및 일반 XML을 사용 하 여 응답 합니다. 이 프로토콜에서 파생 된 클래스를 사용 하 여 <xref:System.Web.Services.Protocols.MimeFormatter> 매개 변수를 인코딩하고 값에 표준 MIME 형식을 반환 합니다. 사용할 인코더는 서비스 설명에 지정 됩니다.  
  
 작성 하는 경우 다음 ASP.NET을 사용 하 여 XML 웹 서비스 클라이언트를 직접 파생 되는 프록시 클래스에서 직접 또는 <xref:System.Web.Services.Protocols.WebClientProtocol> 호출 하려는 XML 웹 서비스에 만들어야 합니다. XML 웹 서비스 클라이언트는 HTTP를 사용 하 여를 호출 하는 경우 프록시 클래스를 파생 <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>에서 파생 됩니다는 <xref:System.Web.Services.Protocols.WebClientProtocol>합니다.  
  
 <xref:System.Web.Services.Protocols.HttpGetClientProtocol> 및 <xref:System.Web.Services.Protocols.HttpPostClientProtocol> 에서 파생 <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, HTTP-GET 및 HTTP-POST를 각각 사용 하 여 XML 웹 서비스 메서드를 호출 하는 것에 대 한 지원을 제공 합니다. SOAP를 사용 하 여 XML 웹 서비스를 호출 하는 클라이언트에서 파생 되어야 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>합니다.  
  
 프록시 클래스를 작성에 대 한 세부 정보를 참조 하세요 [XML 웹 서비스 프록시 만들기](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/d2s8y7bs(v=vs.100))합니다.  
  
   
  
## Examples  
 다음 예제는 Wsdl.exe 유틸리티에서 생성 된 프록시 클래스는 `Math` 아래 XML 웹 서비스입니다. 프록시 클래스에서 파생 되며 <xref:System.Web.Services.Protocols.HttpPostClientProtocol>, 추상에서 파생 되는 <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> 클래스입니다.  
  
 [!code-cpp[Classic HttpPostClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpPostClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpPostClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpPostClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpPostClientProtocol Example/VB/source.vb#1)]  
  
 다음 예제는 `Math` 이전 프록시 클래스 생성 된 XML 웹 서비스입니다.  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpGetClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpPostClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpPostClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpPostClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Services.Protocols.HttpPostClientProtocol" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[HttpPostClientProtocol_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpPostClientProtocol_Constructor/CPP/httppostclientprotocol_constructor.cpp#1)]
 [!code-csharp[HttpPostClientProtocol_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpPostClientProtocol_Constructor/CS/httppostclientprotocol_constructor.cs#1)]
 [!code-vb[HttpPostClientProtocol_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpPostClientProtocol_Constructor/VB/httppostclientprotocol_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected override System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpPostClientProtocol.GetWebRequest(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Net::WebRequest ^ GetWebRequest(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="httpPostClientProtocol.GetWebRequest uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><see cref="T:System.Uri" />를 만들 때 사용할 <see cref="T:System.Net.WebRequest" />입니다.</param>
        <summary>지정된 URL에 대해 <see cref="T:System.Net.WebRequest" /> 인스턴스를 만듭니다.</summary>
        <returns><see cref="T:System.Net.WebRequest" /> 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 기본 버전의 재정의 <xref:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest%2A> XML 웹 서비스에 HTTP 요청이 HTTP POST를 사용 하 여 수행 됩니다 있는지를 지정 합니다. 이 메서드를 재정의 하 여 사용자 지정할 수 있습니다는 <xref:System.Net.WebRequest> XML 웹 서비스 요청을 시작 하기 전에 개체입니다. 예를 들어 요청에 사용자 지정 헤더를 추가할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="uri" /> 매개 변수가 null이거나 길이가 0인 경우</exception>
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
  </Members>
</Type>