<Type Name="HttpSimpleClientProtocol" FullName="System.Web.Services.Protocols.HttpSimpleClientProtocol">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2284f9f2a2d34780b4ccbee1eab231558f4ab6f0" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57937969" /></Metadata><TypeSignature Language="C#" Value="public abstract class HttpSimpleClientProtocol : System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpSimpleClientProtocol extends System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpSimpleClientProtocol&#xA;Inherits HttpWebClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpSimpleClientProtocol abstract : System::Web::Services::Protocols::HttpWebClientProtocol" />
  <TypeSignature Language="F#" Value="type HttpSimpleClientProtocol = class&#xA;    inherit HttpWebClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpWebClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>간단한 HTTP-GET 및 HTTP-POST 프로토콜 바인딩을 사용하여 XML Web services와 통신하기 위한 기본 클래스를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 클래스는 대부분의 인코더를 사용 하 여 매개 변수를 인코딩하고 일반적인 MIME 형식으로 값을 반환 하는 HTTP를 통해 XML 웹 서비스와 통신 하는 것에 대 한 구현 지정 합니다. 이러한 인코더에서 파생 된 <xref:System.Web.Services.Protocols.MimeFormatter> 클래스입니다. 기본적으로에서 파생 된 프록시 클래스 <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> 응용 프로그램/x-www-형식-urlencoded MIME 형식 및 응답을 사용 하 여 일반 xml에서 매개 변수를 인코딩합니다. 그러나 사용 하 여 사용자 지정 mime 포맷터를 지정할 수 있습니다는 <xref:System.Web.Services.Protocols.HttpMethodAttribute> 특성, 서비스 설명 및 프록시 생성에 통합이 지원 되지 않습니다.  
  
 `Notes to Inheritors:` 이 클래스를 재정의 하면 파생된 클래스에서 XML 웹 서비스의 특정 형식에 관련 된 메서드를 도입할 수 있습니다. 메서드 매개 변수를 간단히 캡처하고 사이트와 통신 작업을 위해 기본 클래스를 호출 합니다. 도입 된 메서드는 비동기 호출을 <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> 고 <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> 메서드. 도입 된 메서드는 동기 호출을 <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> 메서드. 재정의 된 생성자는 일반적으로 설정 하는 <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> XML 웹 서비스 메서드의 uri 속성입니다.  
  
 파생된 클래스를 생성 하는 웹 서비스 기술 언어 도구 (Wsdl.exe) <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> 지정 된 서비스 설명에 대 한 합니다.  
  
   
  
## Examples  
 다음 코드 예제는 Wsdl.exe에 의해 생성 된 프록시 클래스는 `Math` 아래 XML 웹 서비스입니다. 프록시 클래스에서 파생 되며 <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, 추상에서 파생 되는 <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> 클래스입니다.  
  
 [!code-cpp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpGetClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/VB/source.vb#1)]  
  
 다음 코드 예제는 `Math` 위의 프록시 클래스 생성 된 XML 웹 서비스입니다.  
  
 [!code-cpp[Classic HttpSimpleClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpSimpleClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpSimpleClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>이 형식은 스레드로부터 안전합니다.</threadsafe>
    <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpSimpleClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpSimpleClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="protected IAsyncResult BeginInvoke (string methodName, string requestUrl, object[] parameters, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult BeginInvoke(string methodName, string requestUrl, object[] parameters, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BeginInvoke (methodName As String, requestUrl As String, parameters As Object(), callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ BeginInvoke(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : string * string * obj[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="httpSimpleClientProtocol.BeginInvoke (methodName, requestUrl, parameters, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="requestUrl" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="methodName">XML Web services 메서드의 이름입니다.</param>
        <param name="requestUrl"><see cref="T:System.Net.WebRequest" />를 만들 때 사용할 URL입니다.</param>
        <param name="parameters">XML Web services 메서드에 전달할 매개 변수가 들어 있는 개체의 배열입니다. 배열 내의 값 순서는 파생 클래스의 호출 메서드에 있는 매개 변수의 순서와 일치합니다.</param>
        <param name="callback">비동기 메서드 호출이 완료될 때 호출할 대리자입니다. <paramref name="callback" />이 <see langword="null" />이면 대리자가 호출되지 않습니다.</param>
        <param name="asyncState">클라이언트에서 제공한 추가 정보입니다.</param>
        <summary>XML Web services 메서드의 비동기 호출을 시작합니다.</summary>
        <returns>XML Web services 메서드에서 반환 값을 가져오기 위해 <see cref="T:System.IAsyncResult" /> 메서드에 전달할 수 있는 <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `methodName` 매개 변수의 형식을 찾고 반환 메서드를 호출 하는 값 매개 변수를 사용 합니다 <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> 메서드. 메서드에 추가 된 사용자 지정 특성을 찾으려면도 사용 됩니다. <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>를 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>, 및 <xref:System.Xml.Serialization.XmlElementAttribute> HTTP 프로토콜에 필요한 파생된 메서드에 대 한 추가 정보를 제공 합니다.  
  
 `asyncState` 에 전달 됩니다 `callback` 에 포함 되어 합니다 <xref:System.IAsyncResult> 에서 반환 되는 <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> 메서드. 비동기 결과 처리에 대 한 비동기 호출의 컨텍스트 정보를 전달 하는 데 유용 `callback`합니다.  
  
   
  
## Examples  
 다음 코드 예제는 라고 하는 XML 웹 서비스를 호출 하는 ASP.NET 웹 폼을 `Math`입니다. 내 합니다 `EnterBtn_Click` 함수를 Web Form 시작한의 비동기 호출을 완료를 `Add` XML 웹 서비스 메서드.  
  
 [!code-aspx-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/sourcevb.aspx#1)]  
  
 다음 코드 예제는 웹 서비스 기술 언어 도구 (Wsdl.exe)에서 생성 한 프록시 클래스는 `Math` 아래 XML 웹 서비스입니다. 내 합니다 `BeginAdd` 프록시 클래스의 메서드는 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> 의 비동기 호출을 시작 하는 메서드는 `Add` XML 웹 서비스 메서드.  
  
 [!code-cpp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CPP/source.cpp#2)]
 [!code-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/source.cs#2)]
 [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/source.vb#2)]  
  
 다음 코드 예제는 `Math` 위의 프록시 클래스 생성 된 XML 웹 서비스입니다.  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">서버 컴퓨터에 요청이 도달했지만 성공적으로 처리되지 않은 경우</exception>
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="protected object EndInvoke (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object EndInvoke(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EndInvoke (asyncResult As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ EndInvoke(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndInvoke : IAsyncResult -&gt; obj" Usage="httpSimpleClientProtocol.EndInvoke asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /> 메서드에서 반환된 <see cref="T:System.IAsyncResult" />입니다.</param>
        <summary>HTTP를 사용하여 XML Web services 메서드의 비동기 호출을 완료합니다.</summary>
        <returns>XML Web services 메서드의 반환 값과 By Reference 매개 변수 또는 <paramref name="out" /> 매개 변수가 들어 있는 개체의 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제는 라고 하는 XML 웹 서비스를 호출 하는 ASP.NET 웹 폼을 `Math`입니다. 내 합니다 `EnterBtn_Click` 함수를 Web Form 시작한의 비동기 호출을 완료를 `Add` XML 웹 서비스 메서드.  
  
 [!code-aspx-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/sourcevb.aspx#1)]  
  
 다음 코드 예제는 웹 서비스 기술 언어 도구 (Wsdl.exe)에서 생성 한 프록시 클래스는 `Math` 아래 XML 웹 서비스입니다. 내 합니다 `EndAdd` 프록시 클래스의 메서드는 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> 의 비동기 호출을 시작 하는 메서드는 `Add` XML 웹 서비스 메서드.  
  
 [!code-cpp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CPP/source.cpp#2)]
 [!code-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/source.cs#2)]
 [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/source.vb#2)]  
  
 다음 코드 예제는 `Math` 위의 프록시 클래스 생성 된 XML 웹 서비스입니다.  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" />가 <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /> 메서드의 반환 값이 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="protected object Invoke (string methodName, string requestUrl, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object Invoke(string methodName, string requestUrl, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function Invoke (methodName As String, requestUrl As String, parameters As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ Invoke(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Invoke : string * string * obj[] -&gt; obj" Usage="httpSimpleClientProtocol.Invoke (methodName, requestUrl, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="requestUrl" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="methodName"><see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" /> 메서드를 호출하고 있는 파생 클래스의 XML Web services 메서드 이름입니다.</param>
        <param name="requestUrl">클라이언트에서 요청하고 있는 XML Web services 메서드의 URL입니다.</param>
        <param name="parameters">원격 XML Web services에 전달할 매개 변수가 들어 있는 개체의 배열입니다. 배열 내의 값 순서는 파생 클래스의 호출 메서드에 있는 매개 변수의 순서와 일치합니다.</param>
        <summary>HTTP를 사용하여 XML Web services 메서드를 호출합니다.</summary>
        <returns>파생 클래스 메서드의 반환 값과 By Reference 매개 변수 또는 <paramref name="out" /> 매개 변수가 들어 있는 개체의 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 `methodName` 매개 변수의 형식을 찾고 반환 메서드를 호출 하는 값 매개 변수를 사용 합니다 <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> 메서드. 또한 사용자 지정 특성을 메서드에 추가 된을 찾는 데 사용 됩니다. <xref:System.Web.Services.Protocols.HttpMethodAttribute> 및 <xref:System.Xml.Serialization.XmlElementAttribute> SOAP 프로토콜에 필요한 파생된 메서드에 대 한 추가 정보를 제공 합니다.  
  
   
  
## Examples  
 다음 코드 예제는 라고 하는 XML 웹 서비스를 호출 하는 ASP.NET 웹 폼을 `Math`입니다. 내 합니다 `EnterBtn_Click` 함수를 Web Form 동기적으로 호출는 `Add` XML 웹 서비스 메서드.  
  
 [!code-csharp[HttpSimpleClientProtocol.Invoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/CS/sourcecs.aspx#2)]
 [!code-vb[HttpSimpleClientProtocol.Invoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/VB/sourcevb.aspx#2)]  
  
 다음 코드 예제는 웹 서비스 기술 언어 도구 (Wsdl.exe)에서 생성 한 프록시 클래스는 `Math` 아래 XML 웹 서비스입니다. 내는 `Add` 프록시 클래스의 메서드는 <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> 메서드를 동기적으로 호출 하는 `Add` 웹 서비스 메서드.  
  
 [!code-cpp[HttpSimpleClientProtocol.Invoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/CPP/source.cpp#1)]
 [!code-csharp[HttpSimpleClientProtocol.Invoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/CS/source.cs#1)]
 [!code-vb[HttpSimpleClientProtocol.Invoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/VB/source.vb#1)]  
  
 다음 코드 예제는 `Math` 위의 프록시 클래스 생성 된 XML 웹 서비스입니다.  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">서버 컴퓨터에 요청이 도달했지만 성공적으로 처리되지 않은 경우</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정한 메서드를 비동기적으로 호출합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, string requestUrl, object[] parameters, System.Threading.SendOrPostCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, string requestUrl, object[] parameters, class System.Threading.SendOrPostCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, requestUrl As String, parameters As Object(), callback As SendOrPostCallback)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * string * obj[] * System.Threading.SendOrPostCallback -&gt; unit" Usage="httpSimpleClientProtocol.InvokeAsync (methodName, requestUrl, parameters, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="requestUrl" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parameters" Type="System.Object[]" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="methodName">호출할 메서드의 이름입니다.</param>
        <param name="requestUrl">호출한 웹 서비스의 요청 URL입니다.</param>
        <param name="parameters">메서드에 전달할 매개 변수입니다.</param>
        <param name="callback">메서드 호출이 완료될 때 호출되는 대리자입니다.</param>
        <summary>지정한 메서드를 비동기적으로 호출합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, string requestUrl, object[] parameters, System.Threading.SendOrPostCallback callback, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, string requestUrl, object[] parameters, class System.Threading.SendOrPostCallback callback, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, requestUrl As String, parameters As Object(), callback As SendOrPostCallback, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * string * obj[] * System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="httpSimpleClientProtocol.InvokeAsync (methodName, requestUrl, parameters, callback, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="requestUrl" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parameters" Type="System.Object[]" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userState" Type="System.Object" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="methodName">호출할 메서드의 이름입니다.</param>
        <param name="requestUrl">호출한 웹 서비스의 요청 URL입니다.</param>
        <param name="parameters">메서드에 전달할 매개 변수입니다.</param>
        <param name="callback">메서드 호출이 완료될 때 호출되는 대리자입니다.</param>
        <param name="userState">메서드가 완료될 때 <paramref name="callback" /> 대리자에 전달되는 연결 상태 정보가 들어 있는 개체입니다.</param>
        <summary>연결 상태를 유지하면서 지정한 메서드를 비동기적으로 호출합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>