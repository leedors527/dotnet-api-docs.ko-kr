<Type Name="SoapExtension" FullName="System.Web.Services.Protocols.SoapExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a0d9266b3dc5962906f3245b68c5dd22026399dd" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="58874374" /></Metadata><TypeSignature Language="C#" Value="public abstract class SoapExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapExtension abstract" />
  <TypeSignature Language="F#" Value="type SoapExtension = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ASP.NET을 사용하여 만든 XML Web services에 대한 SOAP 확장의 기본 클래스입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET에는 SOAP 관련 인프라를를 확장성 메커니즘을 사용 하 여 빌드할 수 있습니다. 검사 또는 클라이언트 또는 서버에서 처리 중인 메시지의 특정 단계에서 메시지를 수정할 수 있는 확장을 중심으로 ASP.NET SOAP 확장 아키텍처입니다.  
  
 ASP.NET SOAP 확장에서 파생 된 <xref:System.Web.Services.Protocols.SoapExtension> 클래스입니다. 합니다 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> 및 <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> 메서드 성능 향상을 위해 SOAP 확장을 초기화 하기 위한 대체 메커니즘을 제공 합니다. <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> 대부분의 SOAP 확장의 핵심에 정의 된 각 단계에서 메서드를 호출할 때 <xref:System.Web.Services.Protocols.SoapMessageStage>, 특정 SOAP 확장의 원하는 동작을 수행 하도록 SOAP 확장을 허용 합니다. SOAP 요청이 나 SOAP 응답의 경우 SOAP 확장 해야 하는 수정에 대 한 <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> 네트워크를 통해 보낼 제안 된 데이터를 받을 수 있는 기회를 제공 합니다.  
  
   
  
## Examples  
 다음 `TraceExtension` SOAP 확장이 SOAP 요청과 SOAP 응답은 XML 웹 서비스 메서드에 적용할 때 지정된 된 파일에 출력 합니다. XML 웹 서비스를 사용 하 여 실행 하려면 다음 SOAP 확장이 설치 된 경우 ASPNET 사용자 계정은 로그 파일이 작성 되는 디렉터리에 쓸 수 있는 권한이 있어야 합니다.  
  
 [!code-cpp[Classic SoapExtension Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapMessageStage" />
    <altmember cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoapExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoapExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Services.Protocols.SoapExtension" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChainStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream ChainStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream ChainStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.ChainStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ ChainStream(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member ChainStream : System.IO.Stream -&gt; System.IO.Stream&#xA;override this.ChainStream : System.IO.Stream -&gt; System.IO.Stream" Usage="soapExtension.ChainStream stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">SOAP 요청 또는 응답을 포함하는 메모리 버퍼입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 SOAP 확장에서 SOAP 요청 또는 응답을 포함하는 메모리 버퍼에 액세스할 수 있도록 합니다.</summary>
        <returns>이 SOAP 확장이 수정할 수 있는 새 메모리 버퍼를 나타내는 <see cref="T:System.IO.Stream" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> 우선 순위가 가장 높은 SOAP 확장 전송 또는 연결을 통해 반환 된 SOAP 메시지에 가장 가까운 실제 데이터를 수정할 수 있는지 확인 합니다.  
  
 SOAP 확장에 대 한 참조를 저장 해야 합니다 <xref:System.IO.Stream> 에 전달 <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> 하며 <xref:System.IO.Stream> 에서 반환 된 <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>합니다. SOAP 확장 XML 웹 서비스 메서드를 사용 하 여 실행 하도록 구성 된 경우는 <xref:System.IO.Stream> 전달할 <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> 에서 serialize 된 SOAP 요청을 포함 합니다 <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize> <xref:System.Web.Services.Protocols.SoapMessageStage>. 마찬가지로, 합니다 <xref:System.IO.Stream> 에서 반환 된 참조 <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> serialization 발생 하 고 serialize 된 SOAP 응답을 포함 하는 경우에 기록 됩니다 합니다 <xref:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize> <xref:System.Web.Services.Protocols.SoapMessageStage>합니다.  
  
   
  
## Examples  
 둘 다을 저장 하는 다음 예제는 <xref:System.IO.Stream> 전달할 <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> 및 <xref:System.IO.Stream> 에서 반환 된 <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> 멤버 변수에 `oldStream` 및 `newStream`각각.  
  
 [!code-cpp[Classic SoapExtension.ChainStream Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.ChainStream Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.ChainStream Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.ChainStream Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.ChainStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.ChainStream Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializer">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>파생 클래스에서 재정의된 경우 SOAP 확장에서 단일 성능 비용으로 XML Web services 메서드와 관련된 데이터를 초기화할 수 있습니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : Type -&gt; obj" Usage="soapExtension.GetInitializer serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">SOAP 확장이 적용되는 XML Web services를 구현하는 클래스의 형식입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 SOAP 확장에서 단일 성능 비용으로 XML Web services를 구현하는 클래스와 관련된 데이터를 초기화할 수 있습니다.</summary>
        <returns>캐시하기 위해 SOAP 확장이 초기화하는 <see cref="T:System.Object" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 오버 로드 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> 에서 호출 하는 ASP.NET SOAP 확장이 지정 하는 방법에 따라 달라 집니다. SOAP 확장을 지정 하는 방법은 두 가지가 있습니다.  
  
-   파생 되는 사용자 지정 특성을 적용 <xref:System.Web.Services.Protocols.SoapExtensionAttribute>을 개별 XML 웹 서비스 메서드에 있습니다.  
  
-   Web.config 또는 app.config 구성 파일에 대 한 참조를 추가 합니다.  
  
 구성 파일 중 하나에 대 한 참조를 추가 하는 경우 해당 구성 파일 범위 내의 모든 XML Web services에 대 한 SOAP 확장이 실행 됩니다. ASP.NET를 호출 하는 구성 파일을 참조 하 여 SOAP 확장을 지정할 때 합니다 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> 에 전달 하는 오버 로드는 <xref:System.Type>합니다. ASP.NET를 호출 하는 사용자 지정 특성을 적용 하 여 확장을 지정할 때 합니다 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> 통과 하는 <xref:System.Web.Services.Protocols.LogicalMethodInfo> 및 <xref:System.Web.Services.Protocols.SoapExtensionAttribute>합니다.  
  
 SOAP 확장 구성 파일에 추가 하는 방법에 대 한 세부 정보를 참조 하세요 [XML Web Services Created Using ASP.NET에 대 한 구성 옵션](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/b2c0ew36(v=vs.100))합니다.  
  
   
  
## Examples  
 다음 코드에서는 SOAP 확장 고유의 데이터에 저장 하는 하나의 방법는 XML 웹 서비스에 대 한 기준입니다. 특성 대신 구성 파일을 사용 하 여 SOAP 확장이 구성 된 경우 SOAP 확장이 SOAP 확장이 적용 되는 각 클래스에 대 한 데이터를 저장할 수 있습니다. 이 예제에서는 캐시에 XML 웹 서비스를 구현 하는 클래스의 이름을 기반으로 XML 웹 서비스 메서드에서 보내거나 받은 SOAP 메시지를 기록 하는 파일의 이름을 저장 합니다. 이 코드 예제는 부분에 있는 TraceExtension SOAP 확장에 대 한 전체 코드 예제는 <xref:System.Web.Services.Protocols.SoapExtension> 클래스 개요입니다.  
  
 [!code-cpp[SoapExtension.GetInitializer-Type#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapExtension.GetInitializer-Type/CPP/traceextension.cpp#1)]
 [!code-csharp[SoapExtension.GetInitializer-Type#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapExtension.GetInitializer-Type/CS/traceextension.cs#1)]
 [!code-vb[SoapExtension.GetInitializer-Type#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapExtension.GetInitializer-Type/VB/traceextension.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo, System.Web.Services.Protocols.SoapExtensionAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo, class System.Web.Services.Protocols.SoapExtensionAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (methodInfo As LogicalMethodInfo, attribute As SoapExtensionAttribute) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo, System::Web::Services::Protocols::SoapExtensionAttribute ^ attribute);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : System.Web.Services.Protocols.LogicalMethodInfo * System.Web.Services.Protocols.SoapExtensionAttribute -&gt; obj" Usage="soapExtension.GetInitializer (methodInfo, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
        <Parameter Name="attribute" Type="System.Web.Services.Protocols.SoapExtensionAttribute" />
      </Parameters>
      <Docs>
        <param name="methodInfo">SOAP 확장이 적용되는 XML Web services 메서드에 대한 특정 함수 프로토타입을 나타내는 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />입니다.</param>
        <param name="attribute">XMl Web services 메서드에 적용되는 <see cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" />입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 SOAP 확장에서 단일 성능 비용으로 XML Web services 메서드에 적용된 특성을 사용하여 XML Web services 메서드와 관련된 데이터를 초기화할 수 있습니다.</summary>
        <returns>캐시하기 위해 SOAP 확장이 초기화하는 <see cref="T:System.Object" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 구성 파일 참조를 사용 하 여 SOAP 확장을 구성 하는 경우는 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> 받아들이는 오버 로드는 <xref:System.Type>합니다.  
  
 SOAP 확장은 세 가지 기회 데이터를 초기화 하 고 모두 서로 다른 용도로:  
  
-   클래스 생성자-클래스 생성자는 SOAP 확장 인스턴스화되고 멤버 변수를 초기화 하는 일반적으로 때마다 호출 됩니다.  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> - <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>그러나 처음은 SOAP 요청 하는 XML Web services 메서드가 한 번만 호출 됩니다. 사용자 지정 특성을 XML 웹 서비스 메서드에 적용 된 경우는 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> 메서드가 실행 됩니다. 따라서 조사 하도록 SOAP 확장을 <xref:System.Web.Services.Protocols.LogicalMethodInfo> 프로토타입 내용은 또는에서 파생 된 클래스에서 전달 된 확장 프로그램별 데이터에 액세스 하도록 XML 웹 서비스 메서드의 <xref:System.Web.Services.Protocols.SoapExtensionAttribute>합니다. 반환 값은 ASP.NET에 의해 캐시 되 고 후속 전달할 <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> 메서드. 따라서에서 초기화를 수행 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> 일회성 성능 저하에 기본적으로 캡슐화 됩니다.  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> - <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> SOAP 요청 XML 웹 서비스 메서드를 하려고 하지만 수 있는 이점이 클래스 생성자는 때마다 호출 되는 <xref:System.Object> 초기화 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> 전달.  
  
   
  
## Examples  
 다음 코드에서 파생 된 클래스를 사용 하 여 전달 된 SOAP 확장 고유의 데이터를 가져오는 방법을 보여 줍니다 <xref:System.Web.Services.Protocols.SoapExtensionAttribute>, 다음에 해당 데이터를 캐시 및 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>합니다. 이 코드 예제는 일부에 대 한 전체 코드 예제는 `TraceExtension` 에서 찾을 수 있는 SOAP 확장을 <xref:System.Web.Services.Protocols.SoapExtension> 클래스 개요. 이 코드 예제에서는 의존을 `TraceExtensionAttribute` 에 전달 되는 `attribute` 매개 변수입니다. 전체 코드 예제에서 `TraceExtensionAttribute` 에서 파생 되 <xref:System.Web.Services.Protocols.SoapExtensionAttribute> 추가 `Filename` 속성에는 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> 캐시에 저장 합니다.  
  
 [!code-cpp[Classic SoapExtension.GetInitializer Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.GetInitializer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.GetInitializer Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.GetInitializer Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.GetInitializer Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.GetInitializer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)" />
        <altmember cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />
        <altmember cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : obj -&gt; unit" Usage="soapExtension.Initialize initializer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer">ASP.NET에 의해 캐시된 <see cref="T:System.Object" />에서 반환되는 <see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" />입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 SOAP 확장에서 <see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" /> 메서드에 캐시된 데이터를 사용하여 자신을 초기화할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SOAP 확장은 세 가지 기회 데이터를 초기화 하 고 모두 서로 다른 용도로:  
  
-   클래스 생성자-클래스 생성자는 SOAP 확장 인스턴스화되고 멤버 변수를 초기화 하는 일반적으로 때마다 호출 됩니다.  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> - <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>그러나 처음은 SOAP 요청 하는 XML Web services 메서드가 한 번만 호출 됩니다. 사용자 지정 특성을 XML 웹 서비스 메서드에 적용 된 경우는 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> 메서드가 실행 됩니다. 따라서 조사 하도록 SOAP 확장을 <xref:System.Web.Services.Protocols.LogicalMethodInfo> 프로토타입 내용은 또는에서 파생 된 클래스에서 전달 된 확장 프로그램별 데이터에 액세스 하도록 XML 웹 서비스 메서드의 <xref:System.Web.Services.Protocols.SoapExtensionAttribute>합니다. 반환 값은 ASP.NET에 의해 캐시 되 고 후속 전달할 <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> 메서드. 따라서에서 초기화를 수행 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> 일회성 성능 저하에 기본적으로 캡슐화 됩니다.  
  
-   <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> - <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A> SOAP 요청 XML 웹 서비스 메서드를 하려고 하지만 수 있는 이점이 클래스 생성자는 때마다 호출 되는 <xref:System.Object> 초기화 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> 전달.  
  
-  
  
> [!NOTE]
>  파생 하지 않고 SOAP 확장을 추가할 수도 있습니다 <xref:System.Web.Services.Protocols.SoapExtensionAttribute> 를 사용 하 여 합니다 [ \<soapExtensionTypes > 요소](https://msdn.microsoft.com/library/7a373a98-6d82-4f8d-a6fc-2996da3fd54c) 구성 파일에 있습니다. 세부 정보를 참조 하세요 [ \<soapExtensionTypes > 요소의](https://msdn.microsoft.com/library/7a373a98-6d82-4f8d-a6fc-2996da3fd54c) 하 고 [SOAP 메시지를 사용 하 여 SOAP 확장을 수정](https://msdn.microsoft.com/library/97d81ace-95e7-4acc-ae39-9692a0021e95)합니다.  
  
-  
  
   
  
## Examples  
 다음 예제에서는 데이터를 캐시 하는 동안 사용 하는 방법을 보여 줍니다는 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> 메서드.  
  
 [!code-cpp[Classic SoapExtension.Initialize Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.Initialize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.Initialize Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.Initialize Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.Initialize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.Initialize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessMessage">
      <MemberSignature Language="C#" Value="public abstract void ProcessMessage (System.Web.Services.Protocols.SoapMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessMessage(class System.Web.Services.Protocols.SoapMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ProcessMessage (message As SoapMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ProcessMessage(System::Web::Services::Protocols::SoapMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member ProcessMessage : System.Web.Services.Protocols.SoapMessage -&gt; unit" Usage="soapExtension.ProcessMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Services.Protocols.SoapMessage" />
      </Parameters>
      <Docs>
        <param name="message">처리할 <see cref="T:System.Web.Services.Protocols.SoapMessage" />입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 SOAP 확장이 각 <see cref="T:System.Web.Services.Protocols.SoapMessage" />에서 처리할 <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />를 받을 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> 전혀 라고 <xref:System.Web.Services.Protocols.SoapMessageStage> ASP.NET과 해당 클라이언트를 사용 하 여 만든 XML 웹 서비스 모두에 적용 된 SOAP 확장에 대 한 단계입니다. 각 <xref:System.Web.Services.Protocols.SoapMessageStage>에서 파생 된 클래스의 인스턴스이고 <xref:System.Web.Services.Protocols.SoapMessage> 에 전달 됩니다 <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>합니다. XML 웹 서비스 클라이언트에서 SOAP 확장을 실행 하는 경우는 <xref:System.Web.Services.Protocols.SoapClientMessage> 개체에 전달 <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>이 고 그렇지 않으면를 <xref:System.Web.Services.Protocols.SoapServerMessage> 개체가 전달 됩니다.  
  
   
  
## Examples  
 다음 예제는 <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> SOAP 요청과 SOAP 응답을 기록 하는 SOAP 확장의 부분입니다. 로그인 하 여 합니다 <xref:System.Web.Services.Protocols.SoapMessage> 에 <xref:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize> <xref:System.Web.Services.Protocols.SoapMessageStage>, SOAP 확장에 액세스를 <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> 네트워크를 통해 보낼 합니다. SOAP 확장은 ASP.NET을 사용 하 여 만든 XML 웹 서비스 메서드를 적용할 경우 해당 <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> XML 웹 서비스 메서드에서 SOAP 응답을 포함 합니다. SOAP 확장을 XML 웹 서비스 클라이언트에 적용 된 경우는 <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> XML 웹 서비스 메서드에 SOAP 요청을 포함 합니다.  
  
 클래식 SoapExtension.ProcessMessage 예제 #1  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>