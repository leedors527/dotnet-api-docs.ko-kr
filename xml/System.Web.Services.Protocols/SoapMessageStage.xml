<Type Name="SoapMessageStage" FullName="System.Web.Services.Protocols.SoapMessageStage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6277613adadad04f77521ad114abdf9b05bc5283" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37603091" /></Metadata><TypeSignature Language="C#" Value="public enum SoapMessageStage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SoapMessageStage extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapMessageStage" />
  <TypeSignature Language="VB.NET" Value="Public Enum SoapMessageStage" />
  <TypeSignature Language="C++ CLI" Value="public enum class SoapMessageStage" />
  <TypeSignature Language="F#" Value="type SoapMessageStage = " />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>SOAP 메시지의 처리 단계를 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET에서 SOAP를 사용 하 여 웹 서비스 호출에 대 한 확장성 메커니즘을 제공 합니다. 확장성 메커니즘을 중심으로 한 <xref:System.Web.Services.Protocols.SoapExtension> 검사 하거나 특정 클라이언트 또는 서버에서 메시지 처리 단계에서 메시지를 수정할 수 있습니다. 이 열거형의 처리 단계를 지정 된 <xref:System.Web.Services.Protocols.SoapMessage>합니다.  
  
   
  
## Examples  
 다음 코드 예제는를 구현 하는 SOAP 확장의 일부를 <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> 메서드. 내에서 <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> 메서드를 처리 하는 <xref:System.Web.Services.Protocols.SoapMessage> 관련 처리는 <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
 [!code-cpp[SoapMessageState#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessageState/CPP/SoapMessageState.cpp#1)]
 [!code-csharp[SoapMessageState#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessageState/CS/soapmessagestate.cs#1)]
 [!code-vb[SoapMessageState#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessageState/VB/soapmessagestate.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapMessage" />
    <altmember cref="T:System.Web.Services.Protocols.SoapExtension" />
  </Docs>
  <Members>
    <Member MemberName="AfterDeserialize">
      <MemberSignature Language="C#" Value="AfterDeserialize" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Services.Protocols.SoapMessageStage AfterDeserialize = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize" />
      <MemberSignature Language="VB.NET" Value="AfterDeserialize" />
      <MemberSignature Language="C++ CLI" Value="AfterDeserialize" />
      <MemberSignature Language="F#" Value="AfterDeserialize = 8" Usage="System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapMessageStage</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><see cref="T:System.Web.Services.Protocols.SoapMessage" />가 SOAP 메시지에서 개체로 deserialize된 직후의 단계입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 중 <xref:System.Web.Services.Protocols.SoapClientMessage> 개체로 되기 전에 역직렬화 된 결과 받는 클라이언트에 XML 웹 서비스 메서드 호출의 응답을 포함 하는 SOAP 메시지 deserialize 된 후 AfterDeserialize 스테이지 발생 처리 합니다.  
  
 중 <xref:System.Web.Services.Protocols.SoapServerMessage> 처리 AfterDeserialize 단계 후에 발생 개체로 하지만 XML Web을 나타내는 개체에서 메서드 전에 deserialize 되는 XML 웹 서비스 메서드 호출을 나타내는 SOAP 메시지를 포함 하는 네트워크 요청 서비스 메서드를 호출 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AfterSerialize">
      <MemberSignature Language="C#" Value="AfterSerialize" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Services.Protocols.SoapMessageStage AfterSerialize = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize" />
      <MemberSignature Language="VB.NET" Value="AfterSerialize" />
      <MemberSignature Language="C++ CLI" Value="AfterSerialize" />
      <MemberSignature Language="F#" Value="AfterSerialize = 2" Usage="System.Web.Services.Protocols.SoapMessageStage.AfterSerialize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapMessageStage</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><see cref="T:System.Web.Services.Protocols.SoapMessage" />가 serialize된 직후 그러나 SOAP 메시지가 네트워크를 통해 보내지기 전의 단계입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 중 <xref:System.Web.Services.Protocols.SoapClientMessage> 후 XML 웹 서비스 메서드를 호출 하는 클라이언트 및 매개 변수는 XML로 serialize 되기 전에 SOAP 메시지를 해당 XML이 포함 된 네트워크를 통해 보내집니다 AfterSerialize 스테이지 발생 처리 합니다.  
  
 중 <xref:System.Web.Services.Protocols.SoapServerMessage> 처리 AfterSerialize 단계 후에 발생 XML 웹 서비스 메서드를 반환 하 고 반환 값은 XML로 serialize 하지만 SOAP 하기 전에 해당 XML이 포함 된 메시지가 네트워크를 통해 보내집니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeDeserialize">
      <MemberSignature Language="C#" Value="BeforeDeserialize" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Services.Protocols.SoapMessageStage BeforeDeserialize = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize" />
      <MemberSignature Language="VB.NET" Value="BeforeDeserialize" />
      <MemberSignature Language="C++ CLI" Value="BeforeDeserialize" />
      <MemberSignature Language="F#" Value="BeforeDeserialize = 4" Usage="System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapMessageStage</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><see cref="T:System.Web.Services.Protocols.SoapMessage" />가 네트워크를 통해 보내진 SOAP 메시지에서 개체로 deserialize된 직전의 단계입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 중 <xref:System.Web.Services.Protocols.SoapClientMessage> XML 웹 서비스 메서드 호출에서 네트워크 응답을 받은 후 개체로 deserialize 하는 메시지 SOAP 포함 된 응답 직전 BeforeDeserialize 스테이지 발생 처리 합니다.  
  
 중 <xref:System.Web.Services.Protocols.SoapServerMessage> 웹 서버에 의해 되기 전에 개체로 deserialize 되 고 SOAP 메시지에 XML 웹 서비스 메서드 호출에 대 한 SOAP 메시지를 포함 하는 네트워크 요청을 받은 후 BeforeDeserialize 스테이지 발생 처리 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeSerialize">
      <MemberSignature Language="C#" Value="BeforeSerialize" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Services.Protocols.SoapMessageStage BeforeSerialize = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize" />
      <MemberSignature Language="VB.NET" Value="BeforeSerialize" />
      <MemberSignature Language="C++ CLI" Value="BeforeSerialize" />
      <MemberSignature Language="F#" Value="BeforeSerialize = 1" Usage="System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapMessageStage</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><see cref="T:System.Web.Services.Protocols.SoapMessage" />가 serialize되기 직전의 단계입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 중 <xref:System.Web.Services.Protocols.SoapClientMessage> 처리 BeforeSerialize 단계 후 발생 XML 웹 서비스 메서드를 호출 하는 클라이언트 serialize 되 고 호출 하기 전에 합니다.  
  
 중 <xref:System.Web.Services.Protocols.SoapServerMessage> 서비스에서 메서드 반환 하지만 반환 값을 직렬화 되어 네트워크를 통해 전송 하기 전에 클라이언트에 다시 처리 BeforeSerialize 스테이지 XML web 호출 후에 발생 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>