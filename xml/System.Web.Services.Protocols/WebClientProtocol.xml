<Type Name="WebClientProtocol" FullName="System.Web.Services.Protocols.WebClientProtocol">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6902b53eea592e69397001e772df30206abd84fb" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53296867" /></Metadata><TypeSignature Language="C#" Value="public abstract class WebClientProtocol : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract WebClientProtocol extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.WebClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebClientProtocol&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebClientProtocol abstract : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type WebClientProtocol = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ASP.NET을 사용하여 만든 모든 XML Web services 클라이언트 프록시의 기본 클래스를 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 속성을 <xref:System.Web.Services.Protocols.WebClientProtocol> 클래스는 XML 웹 서비스 요청 및 응답을 전송 하는 데 사용 되는 전송의 동작을 제어 하는 데 사용 됩니다. 이 클래스의 속성을 속성에 매핑할 <xref:System.Net.WebRequest>합니다. 파생 된 클래스의 인스턴스 <xref:System.Net.WebRequest>와 같은 <xref:System.Net.HttpWebRequest>, ASP.NET을 사용 하 여 만든 XML Web services의 전송 메커니즘으로 사용 됩니다.  
  
 직접 또는 간접적으로 파생 된 프록시 클래스는 XML 웹 서비스와 통신 하려면 만들어야 <xref:System.Web.Services.Protocols.WebClientProtocol> 호출 하려는 XML 웹 서비스에 대 한 합니다. 프록시 클래스를 수동으로 만드는 대신 지정된 된 XML 웹 서비스의 서비스 설명에 대 한 프록시 클래스를 만들려면 Wsdl.exe 도구를 사용할 수 있습니다. 이후 <xref:System.Web.Services.Protocols.WebClientProtocol> 기본 클래스인 클라이언트 프록시에 대 한 프록시 클래스의 해당 속성을 찾을 수 있습니다. 이러한 속성은 기본 전송의 요청 동작을 제어 하는 데 유용 합니다. 예를 들어 사용을 <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> 호출에 대 한 속성 XML 웹 서비스를 인증 합니다. 많은 합니다 <xref:System.Web.Services.Protocols.WebClientProtocol> 속성 초기화에 사용 되는 <xref:System.Net.WebRequest> 웹 요청을 수행 하는 데 사용 되는 개체입니다.  
  
   
  
## Examples  
 다음 예제는 라고 하는 XML 웹 서비스를 호출 하는 ASP.NET 웹 폼을 `Math`입니다. 내는 `EnterBtn_Click` 함수 Web Form 프록시 정보 및 클라이언트 자격 증명을 설정 원격 XML 웹 서비스 메서드를 호출 하기 전에 프록시 클래스에 있습니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[Classic WebClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>이 클래스의 속성의 새 인스턴스를에 복사 됩니다는 <see cref="T:System.Net.WebRequest" /> 각 XML 웹 서비스 메서드 호출에 대 한 개체입니다. 동일한 XML 웹 서비스 메서드를 호출 하는 동안 <see cref="T:System.Web.Services.Protocols.WebClientProtocol" /> 인스턴스에 서로 다른 여러 스레드에서 동시에 동기화가 없는지는 일관 된 스냅숏을 속성은 가져오기 전송 하기 위한 조치를 <see cref="T:System.Net.WebRequest" /> 개체입니다. 따라서 속성을 수정 하 고 서로 다른 동시 메서드 호출을 수행 하는 경우 XML Web의 다른 인스턴스를 사용 해야 하는 스레드 서비스 프록시 또는 고유한 동기화를 제공 합니다.</threadsafe>
    <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
    <altmember cref="T:System.Net.HttpWebRequest" />
    <related type="Article" href="https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07">스크립트 악용 개요</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Services.Protocols.WebClientProtocol" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Web.Services.Protocols.WebClientProtocol constructor/CPP/class1.cpp#1)]
 [!code-csharp[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Web.Services.Protocols.WebClientProtocol constructor/CS/class1.cs#1)]
 [!code-vb[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Web.Services.Protocols.WebClientProtocol constructor/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
        <altmember cref="T:System.Net.HttpWebRequest" />
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public virtual void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit&#xA;override this.Abort : unit -&gt; unit" Usage="webClientProtocol.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>XML Web services 메서드에 대한 요청을 취소합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="M:System.Net.WebRequest.Abort" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="AddToCache">
      <MemberSignature Language="C#" Value="protected static void AddToCache (Type type, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void AddToCache(class System.Type type, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void AddToCache(Type ^ type, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member AddToCache : Type * obj -&gt; unit" Usage="System.Web.Services.Protocols.WebClientProtocol.AddToCache (type, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">클라이언트 프로토콜 처리기의 <see cref="T:System.Type" />입니다.</param>
        <param name="value">캐시에 추가되는 클라이언트 프로토콜 처리기입니다.</param>
        <summary>클라이언트 프로토콜 처리기의 인스턴스를 캐시에 추가합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupName">
      <MemberSignature Language="C#" Value="public string ConnectionGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectionGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionGroupName : string with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>요청에 대한 연결 그룹의 이름을 가져오거나 설정합니다.</summary>
        <value>연결 그룹의 이름입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName%2A> 속성을 사용 하면 연결 그룹에 요청을 연결할 수 있습니다. 자세한 내용은 <xref:System.Net.HttpWebRequest.ConnectionGroupName%2A>을 참조하십시오.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.WebRequest.ConnectionGroupName" />
        <altmember cref="P:System.Net.HttpWebRequest.ConnectionGroupName" />
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML Web services 클라이언트 인증의 보안 자격 증명을 가져오거나 설정합니다.</summary>
        <value>XML Web services 클라이언트에 대한 <see cref="T:System.Net.ICredentials" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하는 경우는 `Credentials` 속성을 XML Web service 클라이언트를 구현 하는 클래스를 인스턴스화해야 <xref:System.Net.ICredentials>와 같은 <xref:System.Net.NetworkCredential>를 설정한 후 클라이언트 자격 증명 특정 인증 메커니즘에. <xref:System.Net.NetworkCredential> basic을 사용 하는 인증 자격 증명을 설정 하는 클래스를 사용할 수 있습니다 다이제스트, NTLM 및 Kerberos 인증 메커니즘입니다.  
  
 <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> 속성이 <xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=nameWithType>로 설정되면 클라이언트는 서버의 구성 방식에 따라 Kerberos 및 NTLM 인증을 수행하기 위해 서버와 협상합니다.  
  
   
  
## Examples  
 다음 예제는 라고 하는 XML 웹 서비스를 호출 하는 ASP.NET 웹 폼을 `Math`입니다. 내 합니다 `EnterBtn_Click` 함수 Web Form 인증 자격 증명을 사용 하 여 명시적으로 설정 합니다 `Credentials` 속성입니다. 사용자 이름, 암호 및 도메인에 대 한 생성자에 전달 되는 <xref:System.Net.NetworkCredential> 클래스입니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은  
  
 [!code-aspx-csharp[Classic WebClientProtocol.Credentials Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol.Credentials Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebClientProtocol.Credentials Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol.Credentials Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <related type="Article" href="https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07">스크립트 악용 개요</related>
      </Docs>
    </Member>
    <Member MemberName="GetFromCache">
      <MemberSignature Language="C#" Value="protected static object GetFromCache (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig object GetFromCache(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Object ^ GetFromCache(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetFromCache : Type -&gt; obj" Usage="System.Web.Services.Protocols.WebClientProtocol.GetFromCache type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">캐시에서 반환할 클라이언트 프로토콜 처리기의 <see cref="T:System.Type" />입니다.</param>
        <summary>캐시에서 클라이언트 프로토콜 처리기의 인스턴스를 가져옵니다.</summary>
        <returns>캐시에서 클라이언트 프로토콜 처리기의 인스턴스입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebRequest ^ GetWebRequest(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="abstract member GetWebRequest : Uri -&gt; System.Net.WebRequest&#xA;override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="webClientProtocol.GetWebRequest uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><see cref="T:System.Uri" />를 만들 때 사용할 <see cref="T:System.Net.WebRequest" />입니다.</param>
        <summary>지정된 <paramref name="uri" />의 <see cref="T:System.Net.WebRequest" /> 인스턴스를 만듭니다. XML Web services 클라이언트 인프라에서는 XML Web services 요청을 전송하는 데 사용되는 새 <see cref="T:System.Net.WebRequest" /> 전송 개체를 가져오기 위해 이 보호된 메서드를 호출합니다.</summary>
        <returns><see cref="T:System.Net.WebRequest" /> 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자 지정 하려면이 메서드를 재정의할 수 있습니다는 <xref:System.Net.WebRequest> XML 웹 서비스 요청을 시작 하기 전에 개체입니다. 예를 들어 요청에 사용자 지정 헤더를 추가할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="uri" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />
        <altmember cref="T:System.Net.HttpWebRequest" />
        <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetWebResponse">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>XML Web services 메서드에 대한 요청에서 응답을 반환합니다. XML Web services 클라이언트 인프라에서는 동기 XML Web services 요청에서 응답을 가져오기 위해 이 보호된 메서드를 호출합니다.</summary>
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebResponse (request As WebRequest) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebResponse ^ GetWebResponse(System::Net::WebRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetWebResponse : System.Net.WebRequest -&gt; System.Net.WebResponse&#xA;override this.GetWebResponse : System.Net.WebRequest -&gt; System.Net.WebResponse" Usage="webClientProtocol.GetWebResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
      </Parameters>
      <Docs>
        <param name="request">응답을 가져올 <see cref="T:System.Net.WebRequest" />입니다.</param>
        <summary>XML Web services 메서드에 대한 동기 요청에서 응답을 반환합니다.</summary>
        <returns>XML Web services 메서드에 대한 동기 요청의 응답입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.WebException"><see cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />를 호출하기 전에 <see cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />를 호출한 경우</exception>
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />
      </Docs>
    </Member>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request, class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebResponse (request As WebRequest, result As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebResponse ^ GetWebResponse(System::Net::WebRequest ^ request, IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member GetWebResponse : System.Net.WebRequest * IAsyncResult -&gt; System.Net.WebResponse&#xA;override this.GetWebResponse : System.Net.WebRequest * IAsyncResult -&gt; System.Net.WebResponse" Usage="webClientProtocol.GetWebResponse (request, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="request">응답을 가져올 <see cref="T:System.Net.WebRequest" />입니다.</param>
        <param name="result">응답이 완료될 때 <see cref="T:System.IAsyncResult" />에 전달할 <see cref="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)" />입니다.</param>
        <summary>XML Web services 메서드에 대한 비동기 요청에서 응답을 반환합니다. XML Web services 클라이언트 인프라에서는 비동기 XML Web services 요청에서 응답을 가져오기 위해 이 보호된 메서드를 호출합니다.</summary>
        <returns>XML Web services 메서드에 대한 비동기 요청의 응답입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.WebException"><see cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />를 호출하기 전에 <see cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />를 호출한 경우</exception>
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사전 인증을 활성화할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>요청을 사전 인증하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 클라이언트 자격 증명을 사용 하지 않고 리소스를 요청 하면 서버 요청을 문제 및 지 원하는 어떤 인증 체계를 나타냅니다. 클라이언트는 인증 체계를 선택 하 고 적절 한 보냅니다 `WWW-authenticate` 헤더를 서버. 때 <xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A> 됩니다 `true`, `WWW-authenticate` 헤더는 모든 후속 요청과 함께 전송 됩니다.  
  
 때 <xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A> 는 `false`, 처음에 사용자를 인증 하 고 시도 하지 않고 XML 웹 서비스 메서드에 대 한 요청이 만들어질 합니다. XML 웹 서비스에서 익명 액세스를 허용 하는 경우 XML 웹 서비스 메서드 실행 됩니다. 익명 액세스 허용 되지 않는 경우 401 HTTP 반환 코드를 클라이언트로 다시 보내집니다. 에 대 한 응답을 <xref:System.Web.Services.Protocols.WebClientProtocol> 클래스 웹 서버에 인증 자격 증명을 반환 합니다. 인증 클라이언트는 이후에 XML 웹 서비스 액세스 권한이 있는 경우에 XML 웹 서비스 메서드 실행; 그렇지 않은 경우 클라이언트는 액세스가 거부 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpWebRequest.PreAuthenticate" />
      </Docs>
    </Member>
    <Member MemberName="RequestEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding RequestEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding RequestEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ RequestEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestEncoding : System.Text.Encoding with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.RequestEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML Web services에 클라이언트 요청을 하는 데 사용되는 <see cref="T:System.Text.Encoding" />입니다.</summary>
        <value>클라이언트 요청의 문자 인코딩입니다. 기본값은 기본 전송 수단 및 프로토콜에 대해 기본 인코딩을 사용하는 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding%2A> 요청 메시지에 대 한 인코딩을 결정 합니다. <xref:System.Net.WebRequest.ContentType%2A> 요청 인코딩 값을 사용 하 여 주석을 추가할 됩니다.  
  
 파생 된 클래스 <xref:System.Web.Services.Protocols.WebClientProtocol> 와 같은 특정 프로토콜을 지원 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> 않습니다 soap의 경우 특정 프로토콜에 대 한 인코딩 요구 사항에 맞게이 속성을 설정 합니다. 예를 들어를 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> 기본 인코딩을 u t F-8로 설정 합니다.  
  
   
  
## Examples  
 다음 예제는 라고 하는 XML 웹 서비스를 호출 하는 ASP.NET 웹 폼을 `Math`입니다. 내는 `EnterBtn_Click` 함수 Web Form을 명시적으로 설정 RequestEncoding u t F-8로 합니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[Classic WebClientProtocol.RequestEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol.RequestEncoding Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebClientProtocol.RequestEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol.RequestEncoding Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="P:System.Net.WebRequest.ContentType" />
        <altmember cref="T:System.Net.WebRequest" />
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(100000)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>동기 XML Web services 요청에 대한 응답이 도착하기까지 대기하는 시간(밀리초)을 나타냅니다.</summary>
        <value>XML Web services에 대한 동기 호출의 제한 시간(밀리초)입니다. 기본값은 100000 밀리초입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정 된 <xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A> 속성을 <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> 요청 시간 제한이 실행 되지 않은 것을 나타냅니다. XML 웹 서비스 클라이언트를 설정할 수 있지만 <xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A> 속성을 무기한으로 서버 쪽에서 웹 서버 요청 시간이 초과 발생할 여전히 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 `Timeout` 15000 (15 초)에 대 한 동기 호출에 대 한 값을 `Add` 내에서 XML 웹 서비스 메서드는 `Math` XML 웹 서비스.  
  
 [!code-cpp[Classic WebClientProtocol.Timeout Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic WebClientProtocol.Timeout Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebClientProtocol.Timeout Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol.Timeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebClientProtocol.Timeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol.Timeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="P:System.Net.WebRequest.ContentType" />
        <altmember cref="T:System.Net.WebRequest" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public string Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.Url" />
      <MemberSignature Language="VB.NET" Value="Public Property Url As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Url { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Url : string with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>클라이언트에서 요청 중인 XML Web services의 기본 URL을 가져오거나 설정합니다.</summary>
        <value>클라이언트에서 요청 중인 XML Web services의 기본 URL입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wsdl.exe를 사용 하 여 생성 된 프록시 클래스는 기본 설정이 <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> 속성을 사용 하도록 클라이언트에 대 한 합니다. 기본 <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> 생성 한 프록시 클래스는 서비스 설명에 있는 location 특성에 의해 결정 됩니다.  
  
 파생 클래스와 같은 특정 프로토콜을 지 원하는 <xref:System.Web.Services.Protocols.HttpGetClientProtocol> 하 고 <xref:System.Web.Services.Protocols.HttpPostClientProtocol> 추가 정보를 추가할 수 <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> XML 웹 서비스 요청을 합니다.  
  
 <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> 속성에서 프록시 클래스 생성 된 동일한 서비스 설명을 구현 하는 XML 웹 서비스를 가리키도록 변경할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 변경 내용을 합니다 <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> 속성에 대 한는 `math` 라는 웹 서버에 XML 웹 서비스 `http:// www.contoso.com`합니다.  
  
 [!code-cpp[Classic WebClientProtocol.Url Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic WebClientProtocol.Url Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebClientProtocol.Url Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol.Url Example/CS/source.cs#1)]
 [!code-vb[Classic WebClientProtocol.Url Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol.Url Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="P:System.Net.WebRequest.ContentType" />
        <altmember cref="T:System.Net.WebRequest" />
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.Services.Protocols.WebClientProtocol.Credentials" /> 속성을 <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> 속성 값으로 설정할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>자격 증명 속성이 <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> 속성 값으로 설정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="P:System.Net.WebRequest.ContentType" />
        <altmember cref="T:System.Net.WebRequest" />
      </Docs>
    </Member>
  </Members>
</Type>