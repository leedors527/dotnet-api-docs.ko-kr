<Type Name="ControlAdapter" FullName="System.Web.UI.Adapters.ControlAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0f6fed664b044da1885a7b85efbbbf8911c7ce56" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="58875569" /></Metadata><TypeSignature Language="C#" Value="public abstract class ControlAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ControlAdapter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ControlAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlAdapter abstract" />
  <TypeSignature Language="F#" Value="type ControlAdapter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>어댑터가 연결될 파생 컨트롤의 렌더링을 사용자 지정하여 특정 브라우저의 기본 태그나 동작을 수정합니다. 모든 컨트롤 어댑터가 상속하는 기본 클래스입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컨트롤 어댑터 특정 재정의 하는 구성 요소는 <xref:System.Web.UI.Control> 브라우저 또는 태그 관련 처리를 허용 하도록 실행 주기에서 메서드 및 이벤트 클래스. 단일 파생된 컨트롤 어댑터를.NET Framework에서 매핑되는 <xref:System.Web.UI.Control> 각 클라이언트 요청에 대 한 개체입니다.  
  
 어댑터는 특정 브라우저 또는 브라우저의 클래스에 대 한 컨트롤을 수정 하거나 특정 기능에는 임의의 필터 역할을 합니다. 일반적으로 어댑터는 브라우저 (예: XHTML 또는 HTML 3.2)를 사용 하는 태그 언어에서 정의 됩니다. 파생 되는 특수 클래스에 캡슐화 할 수 있습니다의 렌더링 동작에서을 <xref:System.Web.UI.HtmlTextWriter> 클래스입니다. 따라서 것 브라우저 클래스 동작 또는에 어댑터 기능이 포함 되는 수에 대 한 단일 어댑터를 사용할 수 있도록 합니다 <xref:System.Web.UI.HtmlTextWriter> 클래스 불필요 한 컨트롤 어댑터 사용을 만들 수 있습니다.  
  
 컨트롤 클래스에 대 한 어댑터 보다 특수 한 어댑터가 존재 하지 않는 클래스에서 상속 되는 모든 컨트롤에 적용 됩니다. 예를 들어 어댑터가 합니다 <xref:System.Web.UI.WebControls.BaseValidator> 모든 클래스를 사용할 수 있습니다 `Validator` 개체입니다.  
  
 어댑터 일반적으로에서 직접 상속 하지 않습니다는 <xref:System.Web.UI.Adapters.ControlAdapter> 클래스 대상별 어댑터 중 하나에서 하지만 기본 컨트롤 형식 및 대상 브라우저에 관련 된 추가 기능을 제공 하는 클래스 또는 필요한 특정 렌더링 합니다.  
  
 컨트롤 자체는 어댑터를 반드시 필요 하지 않습니다. 컨트롤은 컴퍼지션을 확장 하는 경우 일반적으로 자식 컨트롤 어댑터는 충분 합니다.  
  
 각 컨트롤에.browser 정의 파일을 통해 어댑터에 대 한 명시적인 매핑이 있습니다. 따라서 액세스 하는 모든 합니다 <xref:System.Web.UI.Control.Adapter%2A?displayProperty=nameWithType> 속성에서 사용 하는 <xref:System.Web.HttpBrowserCapabilities> 컨트롤 어댑터의 매핑에 대 한 조회를 수행 하는 브라우저 정의 파일에서 추출 된 개체입니다.  
  
 처리 하는 동안.NET Framework 대상에 관련 될 수 있는 컨트롤의 재정의 가능한 메서드를 호출을 차단 합니다. 컨트롤 어댑터가 연결 되 면.NET Framework는 연결 된 어댑터 메서드를 호출 합니다.  
  
 어댑터를 통해 해당 컨트롤에 대 한 렌더링을 수행 합니다 <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> 메서드. 재정의 된 경우 <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> 있으므로 다시 호출을 수행 하는 기본 클래스 구현을 호출 하지 않아야 잠재적으로 <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> 메서드. 어댑터가 한 번 및 컨트롤에서 한 번을 두 번 발생 하도록 렌더링을 발생할 수 있습니다.  
  
 합니다 <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> 메서드 호출을 다시 기준의 <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> 컨트롤의 메서드. 따라서 재정의 하는 경우 <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>를 구현 하는 렌더링에서 제공 하는 그 외에 하지 않는 한 기본 클래스 구현을 호출 하지 않아야 <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> 컨트롤입니다.  
  
 .NET Framework 자식 컨트롤의 어댑터에 대 한 인터 셉 션을 수행 해야 합니다. 호출 하 여이 수행할 수 있습니다는 <xref:System.Web.UI.Adapters.ControlAdapter.RenderChildren%2A> 기본 메서드를 호출 하는 합니다 <xref:System.Web.UI.Control.RenderChildren%2A?displayProperty=nameWithType> 컨트롤의 메서드에서 프로그램 <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> 재정의 합니다.  
  
 <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A> 하 고 <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> 직전과 직후 컨트롤 호출 (각각) 컨트롤에서 메서드 호출 됩니다는 <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> 메서드. 사전 및 사후 렌더링 하는 경우만 브라우저 전용 처리 하는 작업을 사용 하 여 필요한 <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A> 하 고 <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> 를 재정의 하지 않아도 쓰이지 않을 수 있습니다 <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>합니다. 기본 동작을 <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A> 및 <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> 의 해당 메서드를 호출 하는 메서드는 <xref:System.Web.UI.HtmlTextWriter>합니다.  
  
 상태 정보를 유지 하려면 컨트롤 어댑터를 재정의할 수는 <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A>, 및 <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A> 메서드. <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>를 <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A>, 및 <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A> 개인 컨트롤과 뷰 상태가 저장 되 고 로드를 각각 때 호출 됩니다.  
  
 합니다 <xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A>를 <xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A>, 및 <xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A> 기준 메서드를 호출 다시 해당 <xref:System.Web.UI.Control> 클래스 메서드. 따라서 이러한 항목 중 하나 <xref:System.Web.UI.Adapters.ControlAdapter> 연결 된 이벤트가 고, 그렇지 않으면 재정의 된 메서드는 기본 메서드를 호출 합니다 <xref:System.Web.UI.Control> 클래스 메서드를 발생 하지 것입니다.  
  
 컨트롤 및 어댑터는 필요에 따라 구현 된 <xref:System.Web.UI.IPostBackDataHandler> 및 <xref:System.Web.UI.IPostBackEventHandler> 인터페이스입니다. .NET Framework는 어댑터의 존재 여부 및 어댑터에서 이러한 인터페이스를 구현 하는 여부를 결정 합니다. 이 경우 어댑터를 재정의 해야 합니다 <xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A>, <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A>, 및 <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> 필요에 따라 메서드. 어댑터에서 다시 게시 데이터가 인식 되지 않으면,이 처리 하는 컨트롤에 다시 호출 해야 합니다. 후속 이벤트 처리기도 호출 해야 다시 컨트롤에 합니다.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>상속 하는 경우는 <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> 클래스를 일반 어댑터 기능을 필요로 하는 컨트롤을 해당 어댑터 클래스가 패턴에서 기본 있어야 <paramref name="ControlType" /> <see langword="Adapter" /> (예를 들어 <see langword="TextBoxAdapter" />). 어댑터에는 최소한 반환할지를 통해 해당 컨트롤의 강력한 형식의 인스턴스를 해당 <see cref="P:System.Web.UI.Adapters.ControlAdapter.Control" /> 속성입니다.  
  
1.  컨트롤 패턴에 지정 된 컨트롤 형식 및 태그 언어 이름을 지정 해야에 대 한 어댑터 <paramref name="MarkupControlType" /> <see langword="Adapter" /> (예를 들어 <see langword="XhtmlTextBoxAdapter" />). 컨트롤 어댑터에서 구현 하는 <see langword="Adapters" /> 하위 네임 스페이스입니다.  
  
컨트롤 어댑터 적절 한 기본 클래스에서 상속 하며 컨트롤로 동일한 상속 모델을 따릅니다. 상속 하는 컨트롤의 예를 들어, 어댑터는 <see cref="T:System.Web.UI.Control" /> 기본 클래스에서 상속 해야 합니다 <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> 클래스나 관련 <paramref name="ControlType" /> <see langword="Adapter" /> 클래스.  
  
특수화 된 어댑터는 모든 장치 노드의 구성.browser 파일에 있는 특수 한 컨트롤에 대해 정의 되어야 합니다.  
  
어댑터가 연결 되어 있는지 또는 연결 된 어댑터 특정 인터페이스를 구현 하는 제대로 구현 된 컨트롤을 가정 하지 않아야 합니다. 대신 호출 하기 전에 이러한 항목에 대해 확인 해야 합니다.  
  
시뮬레이션 같은 컨트롤에서 protected 이벤트 메서드를 재정의 하는 것이 가능 합니다 <see cref="M:System.Web.UI.WebControls.LinkButton.OnClick(System.EventArgs)" /> 메서드의 <see cref="T:System.Web.UI.WebControls.LinkButton" />합니다. 어댑터 클래스를 먼저 만듭니다는 <c>OnClick</c> 메서드. 다음에서 파생 된 새 컨트롤을 만듭니다 <see cref="T:System.Web.UI.WebControls.LinkButton" /> 재정의 <see cref="M:System.Web.UI.WebControls.LinkButton.OnClick(System.EventArgs)" /> 메서드. 재정의 된 <see cref="M:System.Web.UI.WebControls.LinkButton.OnClick(System.EventArgs)" /> 메서드 호출을 <c>OnClick</c> 어댑터의 메서드. 어댑터 개체는 보호를 통해 사용할 수 있습니다 <see cref="P:System.Web.UI.Control.Adapter" /> 의 속성을 <see cref="T:System.Web.UI.Control" /> 클래스입니다. 합니다 <see cref="P:System.Web.UI.Control.Adapter" /> 컨트롤의 속성이 <see langword="null" /> 연결 된 어댑터가 있으면 되므로 코드 확인 해야 해당 조건에 대 한 어댑터의 메서드를 호출 하기 전에 합니다.</para></block>
    <altmember cref="T:System.Web.UI.Control" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ControlAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ControlAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.Adapters.ControlAdapter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework는 내부적으로이 어댑터를 생성 해당를 만들 때 <xref:System.Web.UI.Control> 개체입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="BeginRender">
      <MemberSignature Language="C#" Value="protected internal virtual void BeginRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void BeginRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub BeginRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void BeginRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member BeginRender : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.BeginRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="controlAdapter.BeginRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">대상별 출력을 렌더링하는 메서드가 포함된 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>컨트롤의 렌더링 전에 호출됩니다. 파생 어댑터 클래스에서 특정 대상에는 필요하지만 HTML 브라우저에는 필요하지 않은 여는 태그를 생성합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A> 메서드 직전에 호출 되는 <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> 메서드를 대상 특정 컨트롤의 렌더링 하기 전에 전처리 하는 데 사용 됩니다.  
  
 사용 된 <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A> 함께에서 메서드는 <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> 열기 및 닫기 태그 일관성을 확인 하는 방법.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>상속 하는 경우는 <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> 클래스를 <see cref="M:System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)" /> 메서드 호출을 기본는 <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /> 메서드. 따라서의 재정의 <see cref="M:System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)" /> 메서드를 호출 해야 합니다 <see cref="M:System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)" /> 외에, 대신 대신 해당 처리 하는 경우에 기본 메서드를 <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /> 메서드.</para></block>
        <altmember cref="M:System.Web.UI.HtmlTextWriter.BeginRender" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="Browser">
      <MemberSignature Language="C#" Value="protected System.Web.HttpBrowserCapabilities Browser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpBrowserCapabilities Browser" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.ControlAdapter.Browser" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Browser As HttpBrowserCapabilities" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::HttpBrowserCapabilities ^ Browser { System::Web::HttpBrowserCapabilities ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Browser : System.Web.HttpBrowserCapabilities" Usage="System.Web.UI.Adapters.ControlAdapter.Browser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpBrowserCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 HTTP 요청을 하는 클라이언트의 브라우저 기능에 대한 참조를 가져옵니다.</summary>
        <value>클라이언트 브라우저와 태그 기능을 지정하는 <see cref="T:System.Web.HttpBrowserCapabilities" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.UI.Adapters.ControlAdapter> 에서 클라이언트 브라우저 기능을 확인 하는 개체를 <xref:System.Web.HttpBrowserCapabilities> 에서 반환 되는 개체는 <xref:System.Web.UI.Adapters.ControlAdapter.Browser%2A> 속성입니다. 그러면 합니다 <xref:System.Web.UI.Adapters.ControlAdapter> 브라우저 전용 태그를 렌더링 하거나 그렇지 않은 경우의 동작을 수정 하는 개체는 <xref:System.Web.UI.Control>합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Web.UI.Adapters.ControlAdapter.Browser%2A> 속성을 요청 하는 브라우저의 세부 정보에 액세스 합니다. 이 예제에서는 확인 코드 브라우저 JavaScript를 사용 하 여 호환 되는 경우에 사용자 지정 된 출력을 렌더링 하는 개발자를 허용 합니다 있는지 여부를 확인 합니다.  
  
 [!code-cpp[ControlAdapter_Browser#1](~/samples/snippets/cpp/VS_Snippets_WebNet/ControlAdapter_Browser/CPP/controladapter_browser.cpp#1)]
 [!code-csharp[ControlAdapter_Browser#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlAdapter_Browser/CS/controladapter_browser.cs#1)]
 [!code-vb[ControlAdapter_Browser#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlAdapter_Browser/VB/controladapter_browser.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="T:System.Web.Configuration.HttpCapabilitiesBase" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Control Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control Control" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.ControlAdapter.Control" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Control As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Control ^ Control { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Control : System.Web.UI.Control" Usage="System.Web.UI.Adapters.ControlAdapter.Control" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 컨트롤 어댑터가 결합된 컨트롤에 대한 참조를 가져옵니다.</summary>
        <value>이 <see cref="T:System.Web.UI.Control" />가 연결된 <see cref="T:System.Web.UI.Adapters.ControlAdapter" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생된 컨트롤 어댑터를 컨트롤에 연결 되 면.NET Framework 컨트롤 멤버 대신 특정 어댑터 멤버를 호출 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서 사용자 지정 컨트롤을 파생 하는 방법을 보여 줍니다 합니다 <xref:System.Web.UI.Control> 클래스를 만든 다음에서 상속 되는 해당 어댑터는 <xref:System.Web.UI.Adapters.ControlAdapter> 클래스입니다. 어댑터 재정의 <xref:System.Web.UI.Adapters.ControlAdapter.Control%2A> 속성 및 컨트롤에 대 한 강력한 참조를 반환 합니다.  
  
 [!code-cpp[ControlAdapter.Control#1](~/samples/snippets/cpp/VS_Snippets_WebNet/ControlAdapter.Control/CPP/controladapter.control.cpp#1)]
 [!code-csharp[ControlAdapter.Control#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlAdapter.Control/CS/controladapter.control.cs#1)]
 [!code-vb[ControlAdapter.Control#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlAdapter.Control/VB/controladapter.control.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>상속 하는 경우는 <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> 클래스를 구현 해야 최소한를 <see langword="Control" /> 예제 단원에 나와 있는 것 처럼 컨트롤의 강력한 형식의 인스턴스를 반환 하는 속성입니다.</para></block>
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal virtual void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void CreateChildControls();" />
      <MemberSignature Language="F#" Value="abstract member CreateChildControls : unit -&gt; unit&#xA;override this.CreateChildControls : unit -&gt; unit" Usage="controlAdapter.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>합성 컨트롤의 대상별 자식 컨트롤을 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생된 컨트롤 어댑터를 연결할 경우는 <xref:System.Web.UI.Control> 개체 및 <xref:System.Web.UI.Adapters.ControlAdapter.CreateChildControls%2A> 메서드가 재정의 되는 재정의 대신 호출 되는 <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> 메서드. 따라서 <xref:System.Web.UI.Adapters.ControlAdapter.CreateChildControls%2A> 대상별 자식 컨트롤 집합을 만드는 데 사용할 수 있습니다.  
  
 새 컨트롤을 만드는 컨트롤을 결합 하는 방법에 대 한 자세한 내용은 참조 하세요. [복합 컨트롤](https://msdn.microsoft.com/library/fb174677-d845-467c-8bf3-cc096b2490b0)합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>상속 클래스를 만들고 재정의 <see cref="M:System.Web.UI.Adapters.ControlAdapter.CreateChildControls" /> 메서드인 기본 메서드에 의해 생성 된 컨트롤을 추가 하려는 경우가 아니면 기본 메서드를 호출 하지 않아야 합니다. 그렇지 않으면 두 자식 컨트롤 만들 수 있습니다.</para></block>
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="EndRender">
      <MemberSignature Language="C#" Value="protected internal virtual void EndRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void EndRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub EndRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void EndRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member EndRender : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.EndRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="controlAdapter.EndRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">대상별 출력을 렌더링하는 메서드가 포함된 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>컨트롤의 렌더링 후에 호출됩니다. 파생 어댑터 클래스에서 특정 대상에는 필요하지만 HTML 브라우저에는 필요하지 않은 닫는 태그를 생성합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> 직후 호출 됩니다는 <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> 메서드는 컨트롤의 렌더링 후 대상별 후 처리를 수행 하는 데 사용 됩니다.  
  
 사용 된 <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> 함께에서 메서드는 <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A> 열기 및 닫기 태그 일관성을 확인 하는 방법.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>상속 하는 경우는 <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> 클래스를 <see cref="M:System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)" /> 메서드 호출을 기본는 <see cref="M:System.Web.UI.HtmlTextWriter.EndRender" /> 메서드. 따라서의 재정의 <see cref="M:System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)" /> 메서드를 호출 해야 합니다 <see cref="M:System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)" /> 외에, 대신 대신 해당 처리 하는 경우에 기본 메서드를 <see cref="M:System.Web.UI.HtmlTextWriter.EndRender" /> 메서드.</para></block>
        <altmember cref="M:System.Web.UI.HtmlTextWriter.EndRender" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="LoadAdapterControlState">
      <MemberSignature Language="C#" Value="protected internal virtual void LoadAdapterControlState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void LoadAdapterControlState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub LoadAdapterControlState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void LoadAdapterControlState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member LoadAdapterControlState : obj -&gt; unit&#xA;override this.LoadAdapterControlState : obj -&gt; unit" Usage="controlAdapter.LoadAdapterControlState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">어댑터의 컨트롤 상태 정보를 <see cref="T:System.Object" />으로 포함하는 <see cref="T:System.Web.UI.StateBag" />입니다.</param>
        <summary>이 컨트롤 어댑터와 연결된 컨트롤이 있는 페이지에 대한 이전의 요청 중 <see cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState" />에서 저장한 어댑터 컨트롤 상태 정보를 로드합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컨트롤 상태가 필요한 뷰 상태를 사용 하지 않도록 설정 하는 경우에 필수 상태 정보입니다. 어댑터를 자체 컨트롤 상태 정보를 유지 해야 하는 경우 재정의할 수는 <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A> 고 <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A> 메서드.  
  
 어댑터는 상태와 연결된 된 컨트롤의 상태에서에 관계 없이 요청 간에 유지 해야 하는 기능이 있을 때 컨트롤 상태 정보를 유지 해야 합니다. 큰 텍스트 표시 및의 그룹으로 구성 된 복합 컨트롤 예를 들어 <xref:System.Web.UI.WebControls.RadioButton> 컨트롤 데스크톱 컴퓨터 브라우저의 단일 뷰를 렌더링 될 수 있습니다. 다른 브라우저 렌더링-텍스트 표시 및 다른 라디오 단추 그룹에 대해 하나의 뷰에서 분할 될 수 있습니다 것입니다. 어댑터는 현재 활성 보기에 대 한 고유한 대상 관련 정보를 유지 관리 해야 합니다.  
  
 <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A> 직후 호출 됩니다 합니다 <xref:System.Web.UI.Control.LoadControlState%2A?displayProperty=nameWithType> 메서드는 `LoadState` 수명 주기 단계. 어댑터 컨트롤 상태는 별도 되며 컨트롤의 컨트롤 상태입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadAdapterViewState">
      <MemberSignature Language="C#" Value="protected internal virtual void LoadAdapterViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void LoadAdapterViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub LoadAdapterViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void LoadAdapterViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member LoadAdapterViewState : obj -&gt; unit&#xA;override this.LoadAdapterViewState : obj -&gt; unit" Usage="controlAdapter.LoadAdapterViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">어댑터 뷰 상태 정보를 <see cref="T:System.Object" />으로 포함하는 <see cref="T:System.Web.UI.StateBag" />입니다.</param>
        <summary>이 컨트롤 어댑터와 연결된 컨트롤이 있는 페이지에 대한 이전 요청 중 <see cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState" />에서 저장한 어댑터 뷰 상태 정보를 로드합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 어댑터를 자신의 뷰 상태 정보를 유지 해야 하는 경우 재정의할 수는 <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A> 고 <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A> 메서드.  
  
 어댑터는 데이터와 연결된 된 컨트롤의 뷰 상태 관계 없이 요청 간에 유지 해야 하는 경우 뷰 상태 정보를 유지 해야 합니다. 예를 들어, 데스크톱 컴퓨터 브라우저에서 표 형태 컨트롤 값의 열 및 행의 단일 뷰를 렌더링 될 수 있습니다. 다른 브라우저에서는 행 및 단일 행의 세부 정보 목록 같은 별도 여러 뷰를 렌더링을 분할 될 수 있습니다 것입니다. 어댑터 뷰 상태에서 현재 활성화 되지 않은 보기에 대 한 데이터를 유지 해야 합니다.  
  
 <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A> 바로 전에 메서드가 호출 되는 <xref:System.Web.UI.Control.LoadViewState%2A?displayProperty=nameWithType> 에서 메서드를 `LoadState` 수명 주기 단계. 어댑터 뷰 상태는 별도 되며 컨트롤의 뷰 상태입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal virtual void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInit : EventArgs -&gt; unit&#xA;override this.OnInit : EventArgs -&gt; unit" Usage="controlAdapter.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>연결된 컨트롤의 <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /> 메서드를 재정의합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 어댑터에 연결 된 경우는 <xref:System.Web.UI.Control> 개체 및 <xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A> 메서드를 재정의 대신 재정의 메서드를 호출 합니다 <xref:System.Web.UI.Control.OnInit%2A?displayProperty=nameWithType> 메서드.  
  
 재정의 <xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A> 대상별 처리를 수행 하는 `Initialize` 컨트롤 수명 주기의 단계입니다. 일반적으로이 컨트롤을 만들 때 수행 되는 함수입니다.  
  
   
  
## Examples  
 다음 코드 샘플을 사용자 지정 컨트롤 어댑터에서 파생 되는 <xref:System.Web.UI.Adapters.ControlAdapter> 클래스입니다. 다음 재정의 <xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A> 메서드를 연결된 된 컨트롤의 속성을 설정 하 고 컨트롤 초기화를 완료 하려면 기본 메서드를 호출 합니다.  
  
 [!code-cpp[ControlAdapter_OnInit#1](~/samples/snippets/cpp/VS_Snippets_WebNet/ControlAdapter_OnInit/CPP/controladapter_oninit.cpp#1)]
 [!code-csharp[ControlAdapter_OnInit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlAdapter_OnInit/CS/controladapter_oninit.cs#1)]
 [!code-vb[ControlAdapter_OnInit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlAdapter_OnInit/VB/controladapter_oninit.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>상속 하는 경우는 <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> 클래스 및 어댑터 재정의 합니다 <see cref="M:System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)" /> 메서드를 어댑터를 호출 하는 해당 기본 클래스 메서드를 호출 해야 합니다는 <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /> 메서드. 경우는 <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /> 메서드를 호출 하지 않으면는 <see cref="E:System.Web.UI.Control.Init" /> 이벤트 발생 하지 것입니다.</para></block>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoad : EventArgs -&gt; unit&#xA;override this.OnLoad : EventArgs -&gt; unit" Usage="controlAdapter.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>연결된 컨트롤의 <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> 메서드를 재정의합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 어댑터에 연결 된 경우는 <xref:System.Web.UI.Control> 개체 및 <xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A> 메서드를 재정의 대신 재정의 메서드를 호출 합니다 <xref:System.Web.UI.Control.OnLoad%2A?displayProperty=nameWithType> 메서드.  
  
 재정의 <xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A> 대상별 처리를 수행 하는 방법의 `Load` 컨트롤 수명 주기의 단계입니다. 일반적으로이 각 클라이언트 요청에 대해 수행 해야 하는 함수입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>상속 하는 경우는 <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> 클래스 및 어댑터 재정의 합니다 <see cref="M:System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)" /> 메서드를 어댑터를 호출 하는 해당 기본 클래스 메서드를 호출 해야 합니다는 <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> 메서드. 하는 경우 <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> 가 호출 되지 않습니다는 <see cref="E:System.Web.UI.Control.Load" /> 이벤트 발생 하지 것입니다.</para></block>
        <altmember cref="E:System.Web.UI.Control.Load" />
        <altmember cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreRender : EventArgs -&gt; unit&#xA;override this.OnPreRender : EventArgs -&gt; unit" Usage="controlAdapter.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>연결된 컨트롤의 <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> 메서드를 재정의합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 어댑터에 연결 된 경우는 <xref:System.Web.UI.Control> 개체 및 <xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A> 메서드를 재정의 대신 재정의 메서드를 호출 합니다 <xref:System.Web.UI.Control.OnPreRender%2A?displayProperty=nameWithType> 메서드.  
  
 재정의 <xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A> 대상별 처리를 수행 하는 방법의 `PreRender` 컨트롤 수명 주기의 단계입니다. 일반적으로이 바로 앞에 컨트롤 출력을 렌더링 하는 함수입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>상속 하는 경우는 <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> 클래스 및 어댑터 재정의 합니다 <see cref="M:System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)" /> 메서드를 어댑터를 호출 하는 해당 기본 클래스 메서드를 호출 해야 합니다는 <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> 메서드. 경우는 <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> 메서드를 호출 하지 않으면는 <see cref="E:System.Web.UI.Control.PreRender" /> 이벤트 발생 하지 것입니다.</para></block>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
        <altmember cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal virtual void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnUnload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUnload : EventArgs -&gt; unit&#xA;override this.OnUnload : EventArgs -&gt; unit" Usage="controlAdapter.OnUnload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>연결된 컨트롤의 <see cref="M:System.Web.UI.Control.OnUnload(System.EventArgs)" /> 메서드를 재정의합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 어댑터에 연결 된 경우는 <xref:System.Web.UI.Control> 개체 및 <xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A> 메서드를 재정의 대신 재정의 메서드를 호출 합니다 <xref:System.Web.UI.Control.OnUnload%2A?displayProperty=nameWithType> 메서드.  
  
 재정의 <xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A> 대상별 처리를 위해 메서드를 `Unload` 컨트롤 수명 주기의 단계입니다. 일반적으로 이것은 정리 함수 앞에 컨트롤의 처리입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>상속 하는 경우는 <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> 클래스 및 어댑터 재정의 합니다 <see cref="M:System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)" /> 메서드를 어댑터를 호출 하는 해당 기본 클래스 메서드를 호출 해야 합니다는 <see cref="M:System.Web.UI.Control.OnUnload(System.EventArgs)" /> 메서드. 하는 경우 <see cref="M:System.Web.UI.Control.OnUnload(System.EventArgs)" /> 가 호출 되지 않습니다는 <see cref="E:System.Web.UI.Control.Unload" /> 이벤트 발생 하지 것입니다.</para></block>
        <altmember cref="E:System.Web.UI.Control.Unload" />
        <altmember cref="M:System.Web.UI.Control.OnUnload(System.EventArgs)" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="Page">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Page Page { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Page Page" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.ControlAdapter.Page" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Page As Page" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Page ^ Page { System::Web::UI::Page ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Page : System.Web.UI.Page" Usage="System.Web.UI.Adapters.ControlAdapter.Page" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Page</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 어댑터와 연결된 컨트롤이 있는 페이지에 대한 참조를 가져옵니다.</summary>
        <value>연결된 컨트롤이 있는 페이지 인스턴스에 대한 액세스를 제공하는 <see cref="T:System.Web.UI.Page" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.Adapters.ControlAdapter.Page%2A> 속성에 대 한 액세스를 제공 합니다 <xref:System.Web.UI.Page?displayProperty=nameWithType> 여기서은 컨트롤이 개체입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="PageAdapter">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Adapters.PageAdapter PageAdapter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Adapters.PageAdapter PageAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.ControlAdapter.PageAdapter" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property PageAdapter As PageAdapter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Adapters::PageAdapter ^ PageAdapter { System::Web::UI::Adapters::PageAdapter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PageAdapter : System.Web.UI.Adapters.PageAdapter" Usage="System.Web.UI.Adapters.ControlAdapter.PageAdapter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Adapters.PageAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>연결된 컨트롤이 있는 페이지의 페이지 어댑터에 대한 참조를 가져옵니다.</summary>
        <value>현재 <see cref="T:System.Web.UI.Adapters.PageAdapter" />와 연결된 컨트롤이 있는 페이지의 <see cref="T:System.Web.UI.Adapters.ControlAdapter" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.ControlAdapter.PageAdapter%2A> 속성에 대 한 액세스를 제공 합니다 <xref:System.Web.UI.Adapters.PageAdapter?displayProperty=nameWithType> 개체에 대 한는 <xref:System.Web.UI.Page> 개체 위치를 <xref:System.Web.UI.Control> 현재 연관 된 개체 <xref:System.Web.UI.Adapters.ControlAdapter> 개체는에.  
  
 <xref:System.Web.UI.Adapters.ControlAdapter.PageAdapter%2A> 속성 페이지에서 여러 컨트롤 형식에 적용할 수 있는 일반적인 대상별 함수와 같은 페이지 어댑터 수준에서 다른 항목에 액세스를 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Adapters.PageAdapter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal virtual void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member Render : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="controlAdapter.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">대상별 출력을 렌더링하는 데 사용하는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>컨트롤 어댑터가 연결된 컨트롤에 대한 대상별 태그를 생성합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 재정의 <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> 클라이언트 브라우저로 보낼 대상별 태그를 생성 하는 방법입니다. <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> 메서드는 대신를 <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> 메서드 경우를 <xref:System.Web.UI.Adapters.ControlAdapter> 개체에 연결 되어를 <xref:System.Web.UI.Control> 개체.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>상속 하는 경우는 <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> 클래스를 <see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /> 메서드 호출을 기본는 <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> 메서드. 따라서의 재정의 <see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /> 메서드를 호출 해야 합니다 <see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /> 외에, 대신 대신 해당 처리 하는 경우에 기본 메서드를 <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> 메서드.  
  
복합 컨트롤의 경우 어댑터 개발자는 자식 컨트롤이 렌더링 되는 확인 해야 합니다. 경우는 <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> 메서드를 사용 하면 자식 컨트롤을 렌더링할 수 있지만 태그를 생성 하지 않습니다는 것이 적합 합니다 <see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /> 기본 메서드를 호출 하는 방법입니다. 자식 컨트롤의 대상별 렌더링 필요한 경우, 어댑터가 구현 해야 합니다 <see cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" /> 메서드를 호출 합니다 <see cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" /> 메서드에서 <see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /> 메서드.</para></block>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected virtual void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="controlAdapter.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">대상별 출력을 렌더링하는 데 사용하는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>컨트롤 어댑터가 결합되는 합성 컨트롤의 자식 컨트롤에 대한 대상별 태그를 생성합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 재정의 <xref:System.Web.UI.Adapters.ControlAdapter.RenderChildren%2A> 메서드 또한 개별 자식 컨트롤의 태그에 복합 컨트롤의 자식 컨트롤 집합에 대 한 대상별 태그를 생성 하는 데 필요한 경우.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>상속 하는 경우는 <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> 어댑터 개발자는 복합 컨트롤에 대 한 클래스는 자식 컨트롤 렌더링 되도록 해야 합니다. 어댑터를 재정의 하는 경우는 <see cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" /> 호출 메서드를 합니다 <see cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" /> 재정의 메서드에서 <see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /> 메서드.  
  
경우는 <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> 메서드를 사용 하면 자식 컨트롤을 렌더링할 수 있지만 자체 태그를 생성 하지 않습니다는 것이 적합 합니다 <see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /> 메서드를 호출 하는 기본 메서드를 호출는 <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> 대 한 재정의 구현 하는 대신 메서드를 <see cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" /> 메서드.</para></block>
        <altmember cref="M:System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="SaveAdapterControlState">
      <MemberSignature Language="C#" Value="protected internal virtual object SaveAdapterControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object SaveAdapterControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function SaveAdapterControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ SaveAdapterControlState();" />
      <MemberSignature Language="F#" Value="abstract member SaveAdapterControlState : unit -&gt; obj&#xA;override this.SaveAdapterControlState : unit -&gt; obj" Usage="controlAdapter.SaveAdapterControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컨트롤 어댑터의 컨트롤 상태 정보를 저장합니다.</summary>
        <returns>어댑터의 컨트롤 상태 정보를 <see cref="T:System.Object" />으로 포함하는 <see cref="T:System.Web.UI.StateBag" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컨트롤 상태가 필요한 뷰 상태를 사용 하지 않도록 설정 하는 경우에 필수 상태 정보입니다. 어댑터를 자체 컨트롤 상태 정보를 유지 해야 하는 경우 재정의할 수는 <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A> 고 <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A> 메서드.  
  
 어댑터는 상태와 연결된 된 컨트롤의 상태에서에 관계 없이 요청 간에 유지 해야 하는 기능이 있을 때 컨트롤 상태 정보를 유지 해야 합니다. 큰 텍스트 표시 및의 그룹으로 구성 된 복합 컨트롤 예를 들어 <xref:System.Web.UI.WebControls.RadioButton> 컨트롤 데스크톱 컴퓨터 브라우저의 단일 뷰를 렌더링 될 수 있습니다. 다른 브라우저 렌더링-텍스트 표시 및 다른 라디오 단추 그룹에 대해 하나의 뷰에서 분할 될 수 있습니다 것입니다. 어댑터는 현재 활성 보기에 대 한 고유한 대상 관련 정보를 유지 관리 해야 합니다.  
  
 합니다 <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A> 직후 호출 됩니다 합니다 <xref:System.Web.UI.Control.SaveControlState%2A?displayProperty=nameWithType> 에서 메서드는 `SaveState` 수명 주기 단계. 어댑터 컨트롤 상태는 별도 되며 컨트롤의 컨트롤 상태입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.SaveControlState" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState" />
      </Docs>
    </Member>
    <Member MemberName="SaveAdapterViewState">
      <MemberSignature Language="C#" Value="protected internal virtual object SaveAdapterViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object SaveAdapterViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function SaveAdapterViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ SaveAdapterViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveAdapterViewState : unit -&gt; obj&#xA;override this.SaveAdapterViewState : unit -&gt; obj" Usage="controlAdapter.SaveAdapterViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컨트롤 어댑터의 뷰 상태 정보를 저장합니다.</summary>
        <returns>어댑터 뷰 상태 정보를 <see cref="T:System.Object" />으로 포함하는 <see cref="T:System.Web.UI.StateBag" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 어댑터를 자신의 뷰 상태 정보를 유지 해야 하는 경우 재정의할 수는 <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A> 고 <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A> 메서드.  
  
 어댑터는 데이터 컨트롤의 연결 된 뷰 상태 관계 없이 요청 간에 유지 해야 하는 경우 뷰 상태 정보를 유지 해야 합니다. 예를 들어, 데스크톱 컴퓨터 브라우저에서 표 형태 컨트롤 값의 열 및 행의 단일 뷰를 렌더링 될 수 있습니다. 다른 브라우저에서는 행 및 단일 행의 세부 정보 목록 같은 별도 여러 뷰를 렌더링을 분할 될 수 있습니다 것입니다. 어댑터 뷰 상태에서 현재 활성화 되지 않은 보기에 대 한 데이터를 유지 해야 합니다.  
  
 <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A> 바로 전에 메서드가 호출 되는 <xref:System.Web.UI.Control.SaveViewState%2A?displayProperty=nameWithType> 에서 메서드를 `SaveState` 수명 주기 단계. 어댑터 뷰 상태는 별도 되며 컨트롤의 뷰 상태입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
  </Members>
</Type>