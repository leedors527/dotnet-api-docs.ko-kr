<Type Name="ChartSerializer" FullName="System.Web.UI.DataVisualization.Charting.ChartSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="101806115aa76173b1fc865871813f7607398cb6" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="58875192" /></Metadata><TypeSignature Language="C#" Value="public class ChartSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChartSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.ChartSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class ChartSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChartSerializer" />
  <TypeSignature Language="F#" Value="type ChartSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Format")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="15be8-101"><see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 컨트롤의 serialization을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-101">Enables serialization of the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15be8-102">이 클래스는으로 노출 되는 <xref:System.Web.UI.DataVisualization.Charting.Chart.Serializer%2A> 루트 속성 <xref:System.Web.UI.DataVisualization.Charting.Chart> 클래스.</span><span class="sxs-lookup"><span data-stu-id="15be8-102">This class is exposed as the <xref:System.Web.UI.DataVisualization.Charting.Chart.Serializer%2A> property of the root <xref:System.Web.UI.DataVisualization.Charting.Chart> class.</span></span>  
  
 <span data-ttu-id="15be8-103">Serialization 차트의 상태를 저장 하 고 또한 차트를 serialize 된 데이터를 로드 하는 옵션을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-103">Serialization saves the state of the chart and also provides the option to load the serialized data into the chart.</span></span> <span data-ttu-id="15be8-104">차트의 데이터를 포함 하 여 모든 차트 속성 유지할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-104">All chart properties can be persisted, including the chart's data.</span></span> <span data-ttu-id="15be8-105">또한 직렬화로 표시 된 모든 차트 속성을 재설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-105">In addition, all chart properties marked for serialization can be reset.</span></span>  
  
 <span data-ttu-id="15be8-106">사용자 정의 뷰 상태를 관리 하는 경우이 클래스를 사용할 필요에 따라 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-106">This class can optionally be used when managing user-defined view state.</span></span> <span data-ttu-id="15be8-107">중 해당 `Load` 메서드는 보기 상태를 지정 하 고 중 하나를 로드할 수는 `Save` 보기 상태를 설정할 때에 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-107">One of its `Load` methods can be used to load the view state, and one of the `Save` methods can be used when setting the view state.</span></span>  
  
 <span data-ttu-id="15be8-108">XML 또는 이진 형식 데이터를 저장할 직렬화 수입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-108">The XML or binary formats can be used to store serialized data.</span></span> <span data-ttu-id="15be8-109">XML이 기본적으로 사용 하지만 사용 하 여 형식을 변경할 수 있습니다는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-109">XML is used by default, but you can change the format with the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> property.</span></span>  
  
 <span data-ttu-id="15be8-110">차트 속성 저장 되 고 사용 하 여 로드 된 `Save` 및 `Load` 메서드를 각각.</span><span class="sxs-lookup"><span data-stu-id="15be8-110">Chart properties are saved and loaded using the `Save` and `Load` methods, respectively.</span></span> <span data-ttu-id="15be8-111">기본이 아닌 값이 있는 속성에만 저장 됨을 note 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-111">Note that only properties with non-default values will be saved.</span></span> <span data-ttu-id="15be8-112">데이터를 저장할 수 있습니다 및/또는 스트림 파일을 사용 하 여 로드 <xref:System.IO.TextWriter>, <xref:System.IO.TextReader>를 <xref:System.Xml.XmlWriter> 고 <xref:System.Xml.XmlReader> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-112">Data can be saved and/or loaded using a file, stream, <xref:System.IO.TextWriter>, <xref:System.IO.TextReader>, <xref:System.Xml.XmlWriter> and <xref:System.Xml.XmlReader> objects.</span></span> <span data-ttu-id="15be8-113">저장 및/또는 개체를 사용 하 여 데이터 로드에서 파생 하는 경우는 <xref:System.IO.TextReader>, <xref:System.IO.TextWriter>를 <xref:System.Xml.XmlReader> 또는 <xref:System.Xml.XmlWriter> 클래스, 데이터 형식의 XML 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-113">When saving and/or loading data using an object derived from the <xref:System.IO.TextReader>, <xref:System.IO.TextWriter>, <xref:System.Xml.XmlReader> or <xref:System.Xml.XmlWriter> classes, the format of the data must be XML.</span></span>  
  
 <span data-ttu-id="15be8-114">다음은 직렬화 가능한 데이터를 정의 하는 데 기본 고급에서 세 가지 기술을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-114">The following list describes three techniques, from basic to advanced, used to define serializable data.</span></span> <span data-ttu-id="15be8-115">수 있다는 것도 불가능 데이터를 정의 하는 참고 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-115">Note that it is also possible to define non-serializable data.</span></span> <span data-ttu-id="15be8-116">이 기술은 다음 단락에 설명 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-116">This technique is described in the next paragraph.</span></span>  
  
-   <span data-ttu-id="15be8-117">Serialize 된 <xref:System.Web.UI.DataVisualization.Charting.Chart> 를 사용 하 여를 `Save` 및 `Load` 메서드, 속성을 지정 하지 않고.</span><span class="sxs-lookup"><span data-stu-id="15be8-117">Serialize the <xref:System.Web.UI.DataVisualization.Charting.Chart> using the `Save` and `Load` methods, without specifying any serializable properties.</span></span> <span data-ttu-id="15be8-118">차트 데이터를 포함 하는 기본이 아닌 값을 사용 하 여 모든 차트 속성을 직렬화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-118">All chart properties with non-default values, which includes chart data, will be serialized.</span></span>  
  
-   <span data-ttu-id="15be8-119">지정 된 차트 속성을 serialize 된 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-119">Serialize the chart properties specified by the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property.</span></span> <span data-ttu-id="15be8-120"><xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 속성 범주 데이터, 모양 등으로 serialize 될 차트 속성을 그룹화 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-120">The <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property groups the chart properties to be serialized into categories such as Data, Appearance, and so forth.</span></span> <span data-ttu-id="15be8-121">형태의 <xref:System.Web.UI.DataVisualization.Charting.ChartArea> 고 <xref:System.Web.UI.DataVisualization.Charting.Series> 개체는 자동으로 serialize; serialize 된 데이터를 기존 차트 영역 및 로드 하는 경우 계열에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-121">Note that the names of <xref:System.Web.UI.DataVisualization.Charting.ChartArea> and <xref:System.Web.UI.DataVisualization.Charting.Series> objects are automatically serialized; the serialized data is then applied to existing chart areas and series when loaded.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="15be8-122">합니다 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 속성은 내부적으로 구현 합니다 <xref:System.Web.UI.DataVisualization.Charting.Chart> 컨트롤을 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 속성</span><span class="sxs-lookup"><span data-stu-id="15be8-122">The <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property is implemented internally by the <xref:System.Web.UI.DataVisualization.Charting.Chart> control as the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property</span></span>  
  
-   <span data-ttu-id="15be8-123">지정 된 차트 속성의 serialization을 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-123">Serialization of chart properties specified by the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property.</span></span> <span data-ttu-id="15be8-124">직렬화 할 수 있는 모든 차트 속성의 쉼표로 구분 된 목록입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-124">This is a comma-separated listing of all chart properties that are serializable.</span></span> <span data-ttu-id="15be8-125">이 속성을 명시적 값을 설정한 후 것은 저장할 모든 속성을 지정 하는 개발자의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-125">After this property is set to an explicit value, it is the responsibility of the developer to specify all properties to be saved.</span></span> <span data-ttu-id="15be8-126">달리 말해서는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 속성, 차트 영역과 일련의 이름을 유지 되지 것입니다 자동으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-126">In other words, unlike the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property, the names of chart areas and series will not be automatically persisted.</span></span> <span data-ttu-id="15be8-127">합니다 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 고 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 속성 함께에서 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-127">The <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> and <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> properties can also be used in conjunction.</span></span> <span data-ttu-id="15be8-128">그러나 했는지 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 그렇지 않은 경우 지정 된 차트 속성 설정 되 면 연결 된 자체는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 속성을 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-128">However, make sure that <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> is concatenated with itself when being set, otherwise the chart properties specified by the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property will be overridden.</span></span>  
  
 <span data-ttu-id="15be8-129">특정 속성을 serialize 하지 못하게 하려면 사용 된 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-129">To prohibit certain properties from being serialized, use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> property.</span></span> <span data-ttu-id="15be8-130">하나의 속성이 설정 된 경우 직렬화 및 비 직렬화 하는 일반적인 경우 와일드 카드를 사용 하는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 속성이 우선 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-130">When one property is set as serializable and non-serializable, which is common when wildcards are used, the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property has precedence.</span></span> <span data-ttu-id="15be8-131">그러나 우선 순위에 얼마나 많은 와일드 카드 속성을 지정 했을 때 사용한 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-131">However, precedence also depends on how many wildcards were used when a property was specified.</span></span>  
  
 <span data-ttu-id="15be8-132">기본적으로 직렬화 속성 로드 되기 전에 기본값으로 재설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-132">By default, serializable properties are reset to their defaults before they are loaded.</span></span> <span data-ttu-id="15be8-133">사용 하 여이 동작을 변경할 수는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-133">This behavior can be changed using the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> property.</span></span> <span data-ttu-id="15be8-134"><xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset%2A> 메서드를 명시적으로 기본값으로 차트 속성을 다시 설정 사용할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-134">The <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset%2A> method can also be used to explicitly reset chart properties to their default values.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SerializationContents Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.SerializationContents Content" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As SerializationContents" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SerializationContents Content { System::Web::UI::DataVisualization::Charting::SerializationContents get(); void set(System::Web::UI::DataVisualization::Charting::SerializationContents value); };" />
      <MemberSignature Language="F#" Value="member this.Content : System.Web.UI.DataVisualization.Charting.SerializationContents with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.SerializationContents), "Default")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SerializationContents</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15be8-135">serialize될 차트 콘텐츠의 형식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-135">Gets or sets the type of chart content to be serialized.</span></span></summary>
        <value><span data-ttu-id="15be8-136">로드, 저장 또는 다시 설정 작업 중에 serialize될 차트 콘텐츠를 나타내는 <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationContents" /> 열거형 값입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-136">A <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationContents" /> enumeration value that represents the chart content that will be serialized during a load, save or reset operation.</span></span> <span data-ttu-id="15be8-137">기본적으로 데이터를 비롯하여 기본값이 아닌 차트 속성이 모두 유지됩니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-137">By default, all non-default chart properties, including data, are persisted.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15be8-138">기본적으로 모든 차트 속성을 직렬화할지 같은 경우에 `Save` 및 `Load` 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-138">By default, all chart properties will be serialized when any of the `Save` and `Load` methods are called.</span></span> <span data-ttu-id="15be8-139">사용 하 여 serialize 된 항목을 통해 효과적, 제공 된 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-139">To provide more control over what is serialized, use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property.</span></span> <span data-ttu-id="15be8-140"><xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 하 고 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 속성와 함께 사용할 수도 있습니다는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-140">Note that the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> and <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> properties can also be used along with the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property.</span></span>  
  
 > [!IMPORTANT]
 > <span data-ttu-id="15be8-141"><xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 속성에는 "모양"으로 직렬화 해야 하는 등의 차트 특성의 형식을 확인으로 내부적으로 구현 실제로 됩니다는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-141">The <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property determines types of chart characteristics, such as "appearance", to be serialized, and is actually implemented internally as the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property.</span></span> <span data-ttu-id="15be8-142">즉, 해당 설정을 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 속성과 설정한를 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 속성 하면를 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 속성 값은 무시 하지 않는 한 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-142">This means that setting the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property and then setting the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property will result in the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property value being overridden, unless <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> is concatenated.</span></span> <span data-ttu-id="15be8-143">아래 샘플 코드에이 절차의 예제를 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="15be8-143">See the sample code below for an example of this procedure.</span></span>  
  
 <span data-ttu-id="15be8-144">설정한 경우에 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 속성을 모든 <xref:System.Web.UI.DataVisualization.Charting.ChartArea> 및 <xref:System.Web.UI.DataVisualization.Charting.Series> 개체 이름을 자동으로 serialize 될;이 차트 영역 및 계열에 관련 된 serialize 된 데이터를 로드할 때 기존 개체에 적용 됨을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-144">If you set the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property, all <xref:System.Web.UI.DataVisualization.Charting.ChartArea> and <xref:System.Web.UI.DataVisualization.Charting.Series> objects names will automatically be serialized; this means that serialized data that pertains to chart areas and series will be applied to existing objects when loaded.</span></span>  
  
 <span data-ttu-id="15be8-145">모든 부하이 속성에 영향을 줍니다 설정을 저장 하 고 작업을 다시 설정.</span><span class="sxs-lookup"><span data-stu-id="15be8-145">Setting this property affects all load, save and reset operations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SerializationFormat Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.SerializationFormat Format" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format" />
      <MemberSignature Language="VB.NET" Value="Public Property Format As SerializationFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SerializationFormat Format { System::Web::UI::DataVisualization::Charting::SerializationFormat get(); void set(System::Web::UI::DataVisualization::Charting::SerializationFormat value); };" />
      <MemberSignature Language="F#" Value="member this.Format : System.Web.UI.DataVisualization.Charting.SerializationFormat with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.SerializationFormat), "Xml")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SerializationFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15be8-146">차트가 serialize될 때 사용되는 서식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-146">Gets or sets the format used when the chart is serialized.</span></span></summary>
        <value><span data-ttu-id="15be8-147">serialize된 데이터의 서식을 나타내는 <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationFormat" /> 열거형 값입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-147">A <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationFormat" /> enumeration value that represents the format of the serialized data.</span></span> <span data-ttu-id="15be8-148">기본값은 XML입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-148">The default value is XML.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15be8-149">데이터를 XML 또는 이진 형식으로 serialize 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-149">Data can be serialized in either an XML or binary format.</span></span> <span data-ttu-id="15be8-150">이진 형식으로 압축 되며 XML 보다 적은 저장소를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-150">Binary format is compact, and takes less storage than XML.</span></span> <span data-ttu-id="15be8-151">그러나 XML은 사람이 읽을 수 있는 텍스트 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-151">XML, however, is a text format that is human-readable.</span></span>  
  
 <span data-ttu-id="15be8-152">Serialize 된 데이터를 로드 하거나 저장 하는 형식은 XML 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-152">When you save or load serialized data, the format must be XML.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContentString">
      <MemberSignature Language="C#" Value="protected string GetContentString (System.Web.UI.DataVisualization.Charting.SerializationContents content, bool serializable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetContentString(valuetype System.Web.UI.DataVisualization.Charting.SerializationContents content, bool serializable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.GetContentString(System.Web.UI.DataVisualization.Charting.SerializationContents,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetContentString (content As SerializationContents, serializable As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetContentString(System::Web::UI::DataVisualization::Charting::SerializationContents content, bool serializable);" />
      <MemberSignature Language="F#" Value="member this.GetContentString : System.Web.UI.DataVisualization.Charting.SerializationContents * bool -&gt; string" Usage="chartSerializer.GetContentString (content, serializable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Web.UI.DataVisualization.Charting.SerializationContents" />
        <Parameter Name="serializable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="content"><span data-ttu-id="15be8-153">serialize 가능한 콘텐츠입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-153">The serializable content.</span></span></param>
        <param name="serializable"><span data-ttu-id="15be8-154">serialize 가능한 문자열을 가져오려면 <see langword="true" />이고, serialize 불가능한 문자열을 가져오려면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-154"><see langword="true" /> to get a serializable string; <see langword="false" /> to get a non serializable string.</span></span></param>
        <summary><span data-ttu-id="15be8-155">특정 플래그 값에 따라 serialize 가능하거나 불가능한 클래스 및/또는 속성 이름을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-155">Returns a serializable or non serializable class and/or property names, depending on the specific flag value.</span></span></summary>
        <returns><span data-ttu-id="15be8-156">serialize 가능하거나 불가능한 클래스 및/또는 속성 이름을 나타내는 <see langword="string" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-156">A <see langword="string" /> value that represents the serializable or non serializable class and/or property names.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsResetWhenLoading">
      <MemberSignature Language="C#" Value="public bool IsResetWhenLoading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsResetWhenLoading" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading" />
      <MemberSignature Language="VB.NET" Value="Public Property IsResetWhenLoading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsResetWhenLoading { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsResetWhenLoading : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15be8-157">로드하기 전에 개체 속성을 기본값으로 다시 설정할지 여부를 나타내는 플래그를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-157">Gets or sets a flag that indicates whether object properties are reset to default values before loading.</span></span></summary>
        <value><span data-ttu-id="15be8-158">로드하기 전에 개체 속성을 기본값으로 다시 설정하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-158"><see langword="true" /> if object properties are reset to default values before loading; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTemplateMode">
      <MemberSignature Language="C#" Value="public bool IsTemplateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTemplateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTemplateMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTemplateMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTemplateMode : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15be8-159">차트 직렬 변환기가 템플릿 생성 모드에서 작동 중인지 여부를 나타내는 플래그를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-159">Gets or sets a flag that indicates whether the chart serializer is working in template-creation mode.</span></span></summary>
        <value><span data-ttu-id="15be8-160">차트 직렬 변환기가 템플릿 생성 모드에서 작동 중이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-160"><see langword="true" /> if the chart serializer is working in template-creation mode; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknownAttributeIgnored">
      <MemberSignature Language="C#" Value="public bool IsUnknownAttributeIgnored { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknownAttributeIgnored" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUnknownAttributeIgnored As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknownAttributeIgnored { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknownAttributeIgnored : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15be8-161">예외를 throw하지 않고 알 수 없는 XML 속성과 요소를 무시할지 여부를 나타내는 플래그를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-161">Gets or sets a flag that indicates whether unknown XML properties and elements will be ignored without throwing an exception.</span></span></summary>
        <value><span data-ttu-id="15be8-162">예외를 throw하지 않고 알 수 없는 XML 속성과 요소를 무시하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-162"><see langword="true" /> if unknown XML properties and elements are ignored without throwing an exception; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15be8-163"><see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 컨트롤에 serialize된 데이터를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-163">Loads serialized data into the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Load : System.IO.Stream -&gt; unit" Usage="chartSerializer.Load stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="15be8-164"><see cref="T:System.IO.Stream" /> 클래스에서 파생된 개체(예: <see cref="T:System.IO.MemoryStream" /> 개체)입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-164">An object derived from the <see cref="T:System.IO.Stream" /> class, for example, a <see cref="T:System.IO.MemoryStream" /> object.</span></span></param>
        <summary><span data-ttu-id="15be8-165"><see cref="T:System.IO.Stream" /> 클래스에서 파생된 개체의 컨트롤에 serialize된 데이터를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-165">Loads serialized data into the control from an object derived from the <see cref="T:System.IO.Stream" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15be8-166">Serialize 된 데이터를 로드 하려면이 메서드는 <xref:System.Web.UI.DataVisualization.Charting.Chart> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-166">Call this method to load serialized data into the <xref:System.Web.UI.DataVisualization.Charting.Chart> control.</span></span>  
  
 <span data-ttu-id="15be8-167">로드 작업이 발생 하는 경우 직렬화 가능 속성을 기본적으로 먼저 다시 설정 됩니다 기본값으로 지속형된 값으로 설정 하기 전에 저장 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="15be8-167">When a load operation occurs, serializable properties are, by default, first reset to their default values before they are set to the persisted values, if saved.</span></span> <span data-ttu-id="15be8-168">이 동작을 변경 하려면 사용 된 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-168">To change this behavior, use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> property.</span></span>  
  
 <span data-ttu-id="15be8-169">기본적으로 모든 직렬화 된 차트 속성 로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-169">By default, all serialized chart properties will be loaded.</span></span> <span data-ttu-id="15be8-170">Serialize 된 특정 속성을 로드 하려면 설정 합니다 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> , <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 또는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 속성 데이터를 로드 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-170">To load specific serialized properties, set the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> , <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> or <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> properties before loading the data.</span></span>  
  
 <span data-ttu-id="15be8-171">사용 하 여 데이터를 저장할 때 유의 한 `Save` 실제로 메서드를 기본이 아닌 값이 있는 속성만 직렬화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-171">Note that when data is saved using a `Save` method, only those properties that have non-default values are actually serialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Load : System.IO.TextReader -&gt; unit" Usage="chartSerializer.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="15be8-172">추상 <see cref="T:System.IO.StringReader" /> 클래스에서 파생된 <see cref="T:System.IO.TextReader" /> 등의 판독기입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-172">A reader, such as <see cref="T:System.IO.StringReader" />, that is derived from the abstract <see cref="T:System.IO.TextReader" /> class.</span></span></param>
        <summary><span data-ttu-id="15be8-173"><see cref="T:System.IO.TextReader" /> 클래스에서 파생된 판독기 개체의 컨트롤에 serialize된 데이터를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-173">Loads serialized data into the control from a reader object that derives from the <see cref="T:System.IO.TextReader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15be8-174">Serialize 된 데이터를 로드 하려면이 메서드는 <xref:System.Web.UI.DataVisualization.Charting.Chart> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-174">Call this method to load serialized data into the <xref:System.Web.UI.DataVisualization.Charting.Chart> control.</span></span>  
  
 <span data-ttu-id="15be8-175">로드 작업이 발생 하는 경우 기본적으로 직렬화 가능 속성은 먼저 다시 설정 기본값으로 지속형된 값으로 설정 하기 전에 저장 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="15be8-175">When a load operation occurs, by default the serializable properties are first reset to their default values before they are set to the persisted values, if saved.</span></span> <span data-ttu-id="15be8-176">이 동작을 변경 하려면 사용 된 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-176">To change this behavior, use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> property.</span></span>  
  
 <span data-ttu-id="15be8-177">기본적으로 모든 직렬화 된 차트 속성 로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-177">By default, all serialized chart properties will be loaded.</span></span> <span data-ttu-id="15be8-178">설정 하 여 합니다 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 또는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 속성을 속성의 특정 집합을 로드할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-178">By setting the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> or <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> properties, a specific set of properties can be loaded.</span></span>  
  
 <span data-ttu-id="15be8-179">이 정의 사용 하는 경우로 설정 된 형식으로는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> 속성인 XML 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-179">If you use this definition, note that the format, which is set by the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> property, must be XML.</span></span>  
  
 <span data-ttu-id="15be8-180">경우는 <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> 의 속성을 <xref:System.Web.UI.DataVisualization.Charting.Chart> 컨트롤 상태를 유지 하 되,이 메서드는 serialize 된 로드를 사용할 수 있습니다 클라이언트에서 게시 되는 데이터를 다시는 <xref:System.Web.UI.DataVisualization.Charting.Chart> 컨트롤.</span><span class="sxs-lookup"><span data-stu-id="15be8-180">If the <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> property of the <xref:System.Web.UI.DataVisualization.Charting.Chart> control is used to persist state, this method can be used to load the serialized data that is posted by the client back to the <xref:System.Web.UI.DataVisualization.Charting.Chart> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="chartSerializer.Load fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="15be8-181">serialize된 데이터를 저장하는 데 사용되는 파일의 상대 또는 절대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-181">The relative or absolute path of the file used to store the serialized data.</span></span> <span data-ttu-id="15be8-182">상대 경로가 지정된 경우 경로는 현재 디렉터리를 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-182">If a relative path is specified, the path will be relative to the current directory.</span></span></param>
        <summary><span data-ttu-id="15be8-183">디스크에 저장된 serialize된 데이터를 <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 컨트롤에 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-183">Loads serialized data saved to disk into the <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15be8-184">Serialize 된 데이터를 로드 하려면이 메서드는 <xref:System.Web.UI.DataVisualization.Charting.Chart> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-184">Call this method to load serialized data into the <xref:System.Web.UI.DataVisualization.Charting.Chart> control.</span></span>  
  
 <span data-ttu-id="15be8-185">로드 작업이 발생 하는 경우 직렬화 가능 속성을 기본적으로 먼저 다시 설정 됩니다 기본값으로 지속형된 값으로 설정 하기 전에 저장 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="15be8-185">When a load operation occurs, serializable properties are, by default, first reset to their default values before they are set to the persisted values, if saved.</span></span> <span data-ttu-id="15be8-186">이 동작을 변경 하려면 사용 된 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-186">To change this behavior, use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> property.</span></span>  
  
 <span data-ttu-id="15be8-187">기본적으로 모든 직렬화 된 차트 속성 로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-187">By default, all serialized chart properties will be loaded.</span></span> <span data-ttu-id="15be8-188">Serialize 된 특정 속성을 로드 하려면 설정 합니다 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> , <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 또는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 속성 데이터를 로드 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-188">To load specific serialized properties, set the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> , <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> or <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> properties before loading the data.</span></span>  
  
 <span data-ttu-id="15be8-189">사용 하 여 데이터를 저장할 때 유의 한 `Save` 실제로 메서드를 기본이 아닌 값이 있는 속성만 직렬화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-189">Note that when data is saved using a `Save` method, only those properties that have non-default values are actually serialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="chartSerializer.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="15be8-190">지속된 데이터를 읽어올 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-190">An object from which to read the persisted data.</span></span> <span data-ttu-id="15be8-191">개체가 <see cref="T:System.Xml.XmlReader" /> 클래스에서 파생되며, .NET 개체 또는 사용자 정의 개체일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-191">The object is derived from the <see cref="T:System.Xml.XmlReader" /> class, and can be a .NET Framework object or a user-defined object.</span></span></param>
        <summary><span data-ttu-id="15be8-192"><see cref="T:System.Xml.XmlReader" /> 클래스에서 파생된 개체의 컨트롤에 serialize된 데이터를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-192">Loads serialized data into the control from an object derived from the <see cref="T:System.Xml.XmlReader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15be8-193">Serialize 된 데이터를 로드 하려면이 메서드는 <xref:System.Web.UI.DataVisualization.Charting.Chart> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-193">Call this method to load serialized data into the <xref:System.Web.UI.DataVisualization.Charting.Chart> control.</span></span>  
  
 <span data-ttu-id="15be8-194">로드 작업이 발생 하는 경우 기본적으로 직렬화 가능 속성은 먼저 다시 설정 기본값으로 지속형된 값으로 설정 하기 전에 저장 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="15be8-194">When a load operation occurs, by default serializable properties are first reset to their default values before they are set to the persisted values, if saved.</span></span> <span data-ttu-id="15be8-195">이 동작을 변경 하려면 사용 된 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-195">To change this behavior, use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> property.</span></span>  
  
 <span data-ttu-id="15be8-196">기본적으로 모든 직렬화 된 차트 속성 로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-196">By default, all serialized chart properties will be loaded.</span></span> <span data-ttu-id="15be8-197">설정한 경우에 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 또는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 속성을 속성의 특정 집합을 로드할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-197">If you set the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> or <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> properties, a specific set of properties can be loaded.</span></span>  
  
 <span data-ttu-id="15be8-198">이 정의 사용 하면 형식의 XML 이어야 합니다. 사용 하 여 변경할 수 있습니다는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-198">When you use this definition, the format must be XML; it can be changed with the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> property.</span></span>  
  
 <span data-ttu-id="15be8-199">단순성 사용에 대 한 XML 형식으로 텍스트 파일을 사용 하 여 작업할 때의 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load%2A> 메서드 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-199">When you work with XML format text files, for simplicity use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load%2A> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NonSerializableContent">
      <MemberSignature Language="C#" Value="public string NonSerializableContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NonSerializableContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent" />
      <MemberSignature Language="VB.NET" Value="Public Property NonSerializableContent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NonSerializableContent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NonSerializableContent : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15be8-200">serialize되지 않을 차트 콘텐츠를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-200">Gets or sets the chart properties that will not be serialized.</span></span></summary>
        <value><span data-ttu-id="15be8-201">serialize되지 않을 차트 속성을 나타내는 쉼표로 구분된 <see langword="string" /> 식입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-201">A comma-separated <see langword="string" /> expression that represents the chart properties that will not be serialized.</span></span> <span data-ttu-id="15be8-202">구문은 "Class.Property[,Class.Property]"입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-202">The syntax is "Class.Property[,Class.Property]".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15be8-203">기본적으로 모든 차트 속성 수는 경우 직렬화를 `Save` 및 `Load` 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-203">By default all chart properties will be serialized when the `Save` and `Load` methods are called.</span></span> <span data-ttu-id="15be8-204">사용할 수는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 속성을 serialize 할 함께 사용 하 여 차트 특성을 제한 합니다 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 및 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="15be8-204">You can use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> property to limit chart characteristics to be serialized, along with the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> and <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> properties.</span></span>  
  
 <span data-ttu-id="15be8-205">이 속성 결정 차트 특성을 serialize 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-205">This property determines which chart characteristics will not be serialized.</span></span> <span data-ttu-id="15be8-206">동일한 방식으로 문자열 식에서 와일드 카드를 사용할 수는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-206">Wildcards can be used in the string expression, in the same manner as the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property.</span></span> <span data-ttu-id="15be8-207">예를 들어 제외할 모든 차트 `BackColor` 이 속성을 설정 하는 직렬화에서 속성 "\*. BackColor "입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-207">For example, to exclude all chart `BackColor` properties from serialization, set this property to "\*.BackColor".</span></span>  
  
 <span data-ttu-id="15be8-208">경우에 따라 속성 와일드 카드를 사용할 때 일반적인 되를 serialize 및 직렬화 되지 않은 모두 수 나 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-208">Sometimes, a property can be set to be both serialized and not serialized, which is common when wildcards are used.</span></span> <span data-ttu-id="15be8-209">합니다 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 식에 비해 낮은 우선 순위에는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 식입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-209">The <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> expression has a lower priority when compared to the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> expression.</span></span> <span data-ttu-id="15be8-210">그러나 와일드 카드를 사용 하는 문자열 식에 작은 가중치 지정는 note 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-210">However, note that less weight is given to string expressions that use wildcards.</span></span> <span data-ttu-id="15be8-211">예를 들어 경우는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 속성이 "\*. BackColor"및 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 속성이 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A>, 모든 B`ackColor` 속성을 제외 하 고 <xref:System.Web.UI.DataVisualization.Charting.ChartArea> serialize 될 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-211">For example, if the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property is set to "\*.BackColor" and the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> property is set to <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A>, all B`ackColor` properties except for <xref:System.Web.UI.DataVisualization.Charting.ChartArea> objects will be serialized.</span></span>  
  
 <span data-ttu-id="15be8-212">경우는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 속성이 설정 되어, 우선 순위에 얼마나 많은 와일드 카드를 사용 하는 종속 된 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 식입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-212">If the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property has been set, the priority depends on how many wild cards are used in the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> expression.</span></span> <span data-ttu-id="15be8-213">예를 들어 설정를 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 속성을 <xref:System.Web.UI.DataVisualization.Charting.SerializationContents.Appearance> 하면를 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 속성을 포함 하는 "\*. 다시\*"식입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-213">For example, setting the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property to <xref:System.Web.UI.DataVisualization.Charting.SerializationContents.Appearance> will result in the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property containing a "\*.Back\*" expression.</span></span> <span data-ttu-id="15be8-214">경우는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 속성이 "\*합니다. 다시\*"모든 `Back*` 속성을 같은 차트 `BackColor`, `BackGradient`등, 직렬화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-214">If the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> property is set to "\*.Back\*", all `Back*` chart properties such as `BackColor`, `BackGradient`, and so forth, will still be serialized.</span></span> <span data-ttu-id="15be8-215">왜냐하면 합니다 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 속성 값에 비해 더 높은 우선 순위에는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="15be8-215">This is because the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property value has higher priority when compared to the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> property.</span></span>  
  
 <span data-ttu-id="15be8-216">로드 하 고 작업을 다시 설정 하는 모든 저장,이 속성에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-216">This property affects all save, load and reset operations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="chartSerializer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15be8-217">serialize되도록 표시된 모든 차트 속성을 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-217">Resets all chart properties marked for serialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15be8-218">기본적으로이 메서드가 모든 차트 속성을 기본값으로 다시 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-218">By default, this method resets all chart properties to their default values.</span></span>  
  
 <span data-ttu-id="15be8-219">차트 속성을 기본값으로 다시 설정 됩니다을 제한 하려면 사용 합니다 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 고 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-219">To limit the chart properties that are reset to their defaults, use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> and <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> properties.</span></span>  
  
 <span data-ttu-id="15be8-220">이 메서드는 라고도 자동으로 때를 `Load` 메서드를 사용 하며 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> 속성이 `true`.</span><span class="sxs-lookup"><span data-stu-id="15be8-220">Note that this method is also called automatically when a `Load` method is used and the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> property is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15be8-221">기본값이 아닌 값을 가진 차트 속성을 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-221">Saves chart properties that have non-default values.</span></span> <span data-ttu-id="15be8-222">데이터를 비롯한 모든 차트 속성을 serialize할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-222">All chart properties can be serialized; this includes data.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.Stream -&gt; unit" Usage="chartSerializer.Save stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="15be8-223"><see cref="T:System.IO.Stream" />과 같이 <see cref="T:System.IO.MemoryStream" /> 클래스에서 파생된 개체이며 차트 속성을 저장하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-223">An object derived from the <see cref="T:System.IO.Stream" /> class, such as <see cref="T:System.IO.MemoryStream" />, that is used to save chart properties.</span></span></param>
        <summary><span data-ttu-id="15be8-224">기본값이 아닌 값을 가진 차트 데이터 및 속성을 <see cref="T:System.IO.Stream" /> 클래스에서 파생되는 개체에 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-224">Saves chart data and properties with non-default values to an object that derives from the <see cref="T:System.IO.Stream" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15be8-225">기본적으로이 메서드가 호출 될 때 데이터 요소를 포함 하는 기본이 아닌 값을 사용 하 여 모든 차트 속성 직렬화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-225">By default, all chart properties with non-default values, which includes data points, will be serialized when this method is called.</span></span> <span data-ttu-id="15be8-226">Serialize 될 차트 특성을 제어 합니다 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 및 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-226">To control chart characteristics to be serialized, use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> and <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> properties.</span></span>  
  
 <span data-ttu-id="15be8-227">이 메서드를 모양 속성을 템플릿으로 저장에 사용 된 경우는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> 의 속성을 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer> 개체 먼저 설정 됩니다 `true` 이 메서드를 호출 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-227">If this method is used to save appearance properties as a template, make sure that the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> property of the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer> object is first set to `true` before calling this method.</span></span>  
  
 <span data-ttu-id="15be8-228">차트의 템플릿으로 serialization 템플릿이 아닌 serialization;에서 다르게 발생 모양 속성을 중점적으로 직렬화 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-228">Serialization of a chart as a template occurs differently from non-template serialization; template serialization concentrates on Appearance properties.</span></span>  
  
 <span data-ttu-id="15be8-229">템플릿으로으로 serialize 될 때를 <xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A> 메서드를 사용 하 여를 차트에 대 한 모양 속성을 제공 하기 위해 템플릿을 로드할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-229">When a template is serialized, the <xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A> method can be used to load the template, to provide the Appearance properties for a chart.</span></span>  
  
 <span data-ttu-id="15be8-230">템플릿은 사용자 지정 색상표를 시뮬레이션 하기 위해 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-230">Templates can be used to simulate custom palettes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.TextWriter -&gt; unit" Usage="chartSerializer.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="15be8-231"><see cref="T:System.IO.TextWriter" />와 같이 <see cref="T:System.IO.StringWriter" /> 클래스에서 파생된 개체이며 차트 속성을 저장하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-231">An object derived from <see cref="T:System.IO.TextWriter" /> class, for example, <see cref="T:System.IO.StringWriter" />, that is used to save chart properties.</span></span></param>
        <summary><span data-ttu-id="15be8-232">기본값이 아닌 값을 가진 차트 데이터 및 속성을 <see cref="T:System.IO.TextWriter" /> 클래스에서 파생되는 지정된 개체에 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-232">Saves chart data and properties with non-default values to the given object that is derived from the <see cref="T:System.IO.TextWriter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15be8-233">기본적으로이 메서드가 호출 될 때 데이터 요소를 포함 하는 기본이 아닌 값을 사용 하 여 모든 차트 속성 직렬화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-233">By default, all chart properties with non-default values, which includes data points, will be serialized when this method is called.</span></span> <span data-ttu-id="15be8-234">컨트롤 차트 특성으로 serialize 하는 사용 하는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 및 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-234">To control which chart characteristics are serialized, use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> and <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> properties.</span></span>  
  
 <span data-ttu-id="15be8-235">이 정의 사용 하면 형식의 XML 이어야 합니다. 형식을 사용 하 여 설정할 수는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-235">When you use this definition, the format must be XML; the format can be set with the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> property.</span></span>  
  
 <span data-ttu-id="15be8-236">경우는 <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> 의 속성을 <xref:System.Web.UI.DataVisualization.Charting.Chart> 컨트롤 상태를 유지 하 되, serialize 된 데이터에서 파생 된 개체를 저장 하려면이 메서드를 사용할 수 있습니다 <xref:System.IO.TextWriter>에 데이터를 쓰는 데 사용 되는 <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="15be8-236">If the <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> property of the <xref:System.Web.UI.DataVisualization.Charting.Chart> control is used to persist state, this method can be used to save the serialized data to an object derived from <xref:System.IO.TextWriter>, which is then used to write the data to the <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="chartSerializer.Save fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="15be8-237">serialize된 데이터를 저장하는 데 사용되는 파일의 상대 또는 절대 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-237">The relative or absolute path of the file used to store the serialized data.</span></span> <span data-ttu-id="15be8-238">상대 경로가 지정된 경우 경로는 현재 디렉터리를 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-238">Note that if a relative path is specified, the path will be relative to the current directory.</span></span></param>
        <summary><span data-ttu-id="15be8-239">기본값이 아닌 값을 가진 차트 데이터 및 속성을 지정된 파일에 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-239">Saves chart data and properties with non-default values to the given file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15be8-240">기본적으로이 메서드가 호출 될 때 데이터 요소를 포함 하는 기본이 아닌 값을 사용 하 여 모든 차트 속성 직렬화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-240">By default all chart properties with non-default values, which includes data points, will be serialized when this method is called.</span></span> <span data-ttu-id="15be8-241">사용 하 여 직렬화 되도록 차트 특성을 제어 하는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 및 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-241">To control chart characteristics to be serialized use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> and <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> properties.</span></span>  
  
 <span data-ttu-id="15be8-242">기본적으로 데이터를 XML 형식으로 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-242">By default data is saved in an XML format.</span></span> <span data-ttu-id="15be8-243">이진 형식으로 데이터를 저장 하려면 사용 된 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-243">To save the data in a binary format, use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> property.</span></span>  
  
 <span data-ttu-id="15be8-244">파일이 저장 된 디렉터리에 대 한 쓰기 권한을 설정 해야 하는 참고 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-244">Note that Write permissions must be enabled for the directory in which the file is stored.</span></span> <span data-ttu-id="15be8-245">기본적으로 응용 프로그램의 Bin 폴더입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-245">By default, this is the Bin folder of the application.</span></span>  
  
 <span data-ttu-id="15be8-246">모양 속성을 템플릿으로 저장 하려면이 메서드는 사용 중인 경우 확인 합니다 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> 먼저 속성이 `true` 이 메서드를 호출 하기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-246">If this method is being used to save Appearance properties as a template, make sure that the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> property is first set to `true` before calling this method.</span></span>  
  
 <span data-ttu-id="15be8-247">차트의 템플릿으로 serialization 템플릿 serialization 모양 속성에 중점을 두기 때문에 주로 템플릿이 아닌 serialization에서 다르게 진행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-247">Serialization of a chart as a template proceeds differently from non-template serialization, primarily because template serialization concentrates on Appearance properties.</span></span>  
  
 <span data-ttu-id="15be8-248">템플릿으로으로 serialize 될 때를 <xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A> 메서드를 사용 하 여를 차트에 대 한 모양 속성을 제공 하기 위해 템플릿을 로드할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-248">When a template is serialized, the <xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A> method can be used to load the template, to provide the Appearance properties for a chart.</span></span>  
  
 <span data-ttu-id="15be8-249">템플릿은 사용자 지정 색상표를 시뮬레이션 하기 위해 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-249">Templates can be used to simulate custom palettes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.Xml.XmlWriter -&gt; unit" Usage="chartSerializer.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="15be8-250"><see cref="T:System.Xml.XmlWriter" /> 속성을 저장하는 데 사용되는 <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />에서 파생된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-250">An object derived from <see cref="T:System.Xml.XmlWriter" /> used to save <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> properties.</span></span></param>
        <summary><span data-ttu-id="15be8-251">기본값이 아닌 값을 가진 차트 데이터 및 속성을 <see cref="T:System.Xml.XmlWriter" /> 클래스에서 파생되는 지정된 개체에 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-251">Saves chart data and properties with non-default values to the given object that is derived from the <see cref="T:System.Xml.XmlWriter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15be8-252">기본적으로이 메서드가 호출 될 때 데이터 요소를 포함 하는 기본이 아닌 값을 사용 하 여 모든 차트 속성 직렬화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-252">By default, all chart properties with non-default values, which includes data points, will be serialized when this method is called.</span></span> <span data-ttu-id="15be8-253">컨트롤 차트 특성으로 serialize 하는 사용 하는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 및 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-253">To control which chart characteristics are serialized, use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> and <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> properties.</span></span>  
  
 <span data-ttu-id="15be8-254">이 정의 사용 하면 형식의 XML 이어야 합니다. 형식으로 변경할 수 있습니다는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-254">When you use this definition, the format must be XML; the format can be changed with the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> property.</span></span>  
  
 <span data-ttu-id="15be8-255">단순성 사용에 대 한 XML 형식으로 텍스트 파일을 사용 하 여 작업할 때의 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save%2A> 메서드 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-255">When you work with XML format text files, for simplicity use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save%2A> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializableContent">
      <MemberSignature Language="C#" Value="public string SerializableContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerializableContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SerializableContent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerializableContent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SerializableContent : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15be8-256">serialize할 수 있는 차트 속성을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-256">Gets or sets the chart properties that can be serialized.</span></span></summary>
        <value><span data-ttu-id="15be8-257">serialize될 차트 속성을 나타내는 쉼표로 구분된 <see langword="string" /> 식입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-257">A comma-separated <see langword="string" /> expression that represents the chart properties to be serialized.</span></span> <span data-ttu-id="15be8-258">구문은 "Class.Property[,Class.Property]"입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-258">The syntax is "Class.Property[,Class.Property]".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15be8-259">기본적으로 모든 차트 속성 수는 경우 직렬화를 `Save` 및 `Load` 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-259">By default all chart properties will be serialized when the `Save` and `Load` methods are called.</span></span> <span data-ttu-id="15be8-260">사용할 수는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 속성을 serialize 할 함께 사용 하 여 차트 특성을 제한 합니다 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 및 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="15be8-260">You can use the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> property to limit chart characteristics to be serialized, along with the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> and <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> properties.</span></span>  
  
 <span data-ttu-id="15be8-261"><xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 속성 serialize 될 차트 특성을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-261">The <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property determines which chart characteristics will be serialized.</span></span> <span data-ttu-id="15be8-262">동일한 방식으로 문자열 식에서 와일드 카드를 사용할 수는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-262">Wildcards can be used in the string expression, in the same manner as the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> property.</span></span> <span data-ttu-id="15be8-263">예를 들어, serialize 할 모든 차트 `BackColor` 이 속성을 설정 하는 속성을 "\*. BackColor "입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-263">For example, to serialize all chart `BackColor` properties, set this property to "\*.BackColor".</span></span>  
  
 <span data-ttu-id="15be8-264">경우 <xref:System.Web.UI.DataVisualization.Charting.ChartArea> 및/또는 <xref:System.Web.UI.DataVisualization.Charting.Series> 자식 속성을 지정 하면 다음 모든 이름이 <xref:System.Web.UI.DataVisualization.Charting.ChartArea> 하 고 <xref:System.Web.UI.DataVisualization.Charting.Series> 지속된 된 데이터를 기존에 적용할 수 있도록 개체도 지정 해야 합니다 <xref:System.Web.UI.DataVisualization.Charting.ChartArea> 및 <xref:System.Web.UI.DataVisualization.Charting.Series> 개체 즉, "Series.Name" 및 "ChartArea.Name" 식을 지정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-264">If <xref:System.Web.UI.DataVisualization.Charting.ChartArea> and/or <xref:System.Web.UI.DataVisualization.Charting.Series> child properties are specified, then the names of all <xref:System.Web.UI.DataVisualization.Charting.ChartArea> and <xref:System.Web.UI.DataVisualization.Charting.Series> objects must be also specified to enable the persisted data to be applied to existing <xref:System.Web.UI.DataVisualization.Charting.ChartArea> and <xref:System.Web.UI.DataVisualization.Charting.Series> objects; that is, you must specify "Series.Name" and "ChartArea.Name" expressions.</span></span> <span data-ttu-id="15be8-265">아래 샘플 코드에이 절차의 예제를 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="15be8-265">See the sample code below for an example of this procedure.</span></span> <span data-ttu-id="15be8-266">마찬가지로, 여러 차트 영역을 사용 하는 경우는 <xref:System.Web.UI.DataVisualization.Charting.Series.ChartArea%2A> 속성을 표시 하는 모든 <xref:System.Web.UI.DataVisualization.Charting.Series> 도 저장 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-266">Similarly, if multiple chart areas are being used, the <xref:System.Web.UI.DataVisualization.Charting.Series.ChartArea%2A> property of all plotted <xref:System.Web.UI.DataVisualization.Charting.Series> must also be saved.</span></span>  
  
 <span data-ttu-id="15be8-267">경우에 따라 속성 와일드 카드를 사용할 때 일반적인 되를 serialize 및 직렬화 되지 않은 모두 수 나 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-267">Sometimes, a property can be set to be both serialized and not serialized, which is common when wildcards are used.</span></span> <span data-ttu-id="15be8-268">합니다 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 식에 비해 낮은 우선 순위에는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 식입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-268">The <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> expression has a lower priority when compared to the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> expression.</span></span> <span data-ttu-id="15be8-269">그러나 와일드 카드를 사용 하는 문자열 식에 작은 가중치 지정는 note 합니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-269">However, note that less weight is given to string expressions that use wildcards.</span></span> <span data-ttu-id="15be8-270">예를 들어 경우는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 속성이 "\*. BackColor"및 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 속성이 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A>, 모든 B`ackColor` 속성을 제외 하 고 <xref:System.Web.UI.DataVisualization.Charting.ChartArea> serialize 될 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-270">For example, if the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property is set to "\*.BackColor" and the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> property is set to <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A>, all B`ackColor` properties except for <xref:System.Web.UI.DataVisualization.Charting.ChartArea> objects will be serialized.</span></span>  
  
 <span data-ttu-id="15be8-271">설정 하는 경우는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 속성을 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 속성은 내부적으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-271">If you set the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property, the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property will be set internally.</span></span> <span data-ttu-id="15be8-272">경우는 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> 속성이 이미 설정 되어 있지만 다른 속성 serialize 될, 연결할 있는지 확인 해야 합니다 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 속성 추가 속성을 지정 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="15be8-272">If the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> property is already set but another property needs to be serialized, make sure to concatenate the <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> property when specifying that extra property.</span></span> <span data-ttu-id="15be8-273">아래 샘플 코드에이 절차의 예제를 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="15be8-273">See the sample code below for an example of this procedure.</span></span>  
  
 <span data-ttu-id="15be8-274">로드 하 고 작업을 다시 설정 하는 모든 저장,이 속성에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="15be8-274">This property affects all save, load and reset operations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>