<Type Name="LoginViewDesigner" FullName="System.Web.UI.Design.WebControls.LoginViewDesigner">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d20b6694136a8fafdbfb55a0a31999c08135c8c" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53221644" /></Metadata><TypeSignature Language="C#" Value="public class LoginViewDesigner : System.Web.UI.Design.ControlDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LoginViewDesigner extends System.Web.UI.Design.ControlDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.WebControls.LoginViewDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class LoginViewDesigner&#xA;Inherits ControlDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class LoginViewDesigner : System::Web::UI::Design::ControlDesigner" />
  <TypeSignature Language="F#" Value="type LoginViewDesigner = class&#xA;    inherit ControlDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ControlDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>비주얼 디자이너에서 디자인 타임에 <see cref="T:System.Web.UI.WebControls.LoginView" /> 웹 서버 컨트롤을 지원합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LoginView> 컨트롤은 호스트 웹 사이트 및 로그온 한 사용자 계정을 포함 하는 역할에 사용자 로그온 여부에 따라 결정 하는 템플릿 중 하나를 렌더링 합니다.  
  
 비주얼 디자이너에서 소스 뷰에서 디자인 뷰로 전환 하면 태그 소스 코드를 설명 하는 <xref:System.Web.UI.WebControls.LoginView> 컨트롤을 구문 분석 되 고 디자인 화면에서 컨트롤의 디자인 타임 버전을 만들어집니다. 소스 뷰로 다시 전환 하면 디자인 타임 컨트롤 태그 소스 코드에 유지 되 고 웹 페이지에 대 한 태그를 편집 합니다. 합니다 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> 클래스에 대 한 디자인 타임 지원을 제공 합니다 <xref:System.Web.UI.WebControls.LoginView> 제어 합니다.  
  
 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.ActionLists%2A> 속성에서 반환을 <xref:System.ComponentModel.Design.DesignerActionListCollection> 일반적으로에서 파생 된 개체를 포함 하는 개체는 <xref:System.ComponentModel.Design.DesignerActionList> 디자이너의 상속 트리의 각 수준에 대 한 클래스입니다. 합니다 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.TemplateGroups%2A> 연결 된 템플릿에 대 한 템플릿 그룹의 컬렉션을 반환 하는 속성 <xref:System.Web.UI.WebControls.LoginView> 제어 합니다. 합니다 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.UsePreviewControl%2A> 속성은 항상 반환 `true`, 디자이너에 연결 된 임시 복사본을 만들어는 <xref:System.Web.UI.WebControls.LoginView> 컨트롤 디자인 타임 태그를 생성 합니다.  
  
 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> 클래스 메서드는 다음 기능을 제공 합니다.  
  
-   합니다 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml%2A> 메서드는 연결 된 렌더링 하는 데 사용 되는 태그를 반환 <xref:System.Web.UI.WebControls.LoginView> 디자인 타임에 컨트롤입니다. <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEmptyDesignTimeHtml%2A> 메서드는 현재 템플릿에 정의 되지 않은 경우 디자인 타임에 연결된 된 컨트롤에 대 한 자리 표시자를 렌더링 하는 태그를 가져옵니다. <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetErrorDesignTimeHtml%2A> 메서드는 오류가 발생 했을 때 디자인 타임에 연결된 된 컨트롤을 렌더링 하는 태그를 제공 합니다.  
  
-   합니다 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEditableDesignerRegionContent%2A> 현재 템플릿에 연결 된 serialize 된 복사본을 반환 하는 메서드 <xref:System.Web.UI.WebControls.LoginView> 제어 합니다. <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.SetEditableDesignerRegionContent%2A> 메서드 컨트롤 템플릿의 serialize 된 복사본에서 연결된 된 컨트롤의 영역을 설정 합니다.  
  
-   <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.Initialize%2A> 메서드를 보고 편집 하 고 연결 된 디자인 디자이너 준비 <xref:System.Web.UI.WebControls.LoginView> 제어 합니다. <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.OnComponentChanged%2A> 메서드 연결된 된 컨트롤에 변경 될 때 호출 됩니다. <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.PreFilterProperties%2A> 메서드는 속성을 제거, 추가 속성을 추가 또는 연결된 된 컨트롤의 속성을 숨기 하는 데 사용 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 확장 하는 방법을 보여 줍니다 합니다 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> 클래스에서 파생 되는 컨트롤의 동작과 모양을 변경 하는 <xref:System.Web.UI.WebControls.LoginView> 디자인 타임에 컨트롤입니다.  
  
 이 예제에서는 파생 되는 `MyLoginView` 에서 제어를 <xref:System.Web.UI.WebControls.LoginView>입니다. 합니다 `MyLoginView` 복사본이 <xref:System.Web.UI.WebControls.LoginView> 제어 합니다. 예제 에서도 파생 됩니다는 `MyLoginViewDesigner` 에서 클래스를 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> 적용 하는 클래스를 <xref:System.ComponentModel.DesignerAttribute> 특성에 대 한를 `MyLoginViewDesigner` 에 `MyLoginView` 컨트롤입니다.  
  
 합니다 `MyLoginViewDesigner` 컨트롤에는 다음 재정의 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> 멤버:  
  
-   <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.PreFilterProperties%2A> 메서드를 합니다 <xref:System.Web.UI.Control.NamingContainer%2A> 속성에 표시 합니다 **속성** 디자인 타임에 눈금.  
  
-   <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml%2A> 해당 범위 보다 편리 하 게 컨트롤 주위에 주황색 테두리를 그리는 방법입니다.  
  
-   <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetErrorDesignTimeHtml%2A> 빨간색으로 렌더링 되는 오류 메시지를 포함 하는 자리 표시자에 대 한 태그를 생성 하는 메서드 굵은 텍스트입니다.  
  
-   <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEmptyDesignTimeHtml%2A> 컨트롤에 대해 정의 된 역할 그룹의 이름을 포함 하는 자리 표시자에 대 한 태그를 생성 하는 방법입니다.  
  
-   합니다 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.Initialize%2A> throw 하는 방법을 <xref:System.ArgumentException> 연결된 된 컨트롤이 없는 경우 예외를 `MyLoginView` 개체입니다.  
  
 [!code-csharp[System.Web.UI.Design.WebControls.LoginViewDesigner#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/CS/LoginViewDesigner.cs#1)]
 [!code-vb[System.Web.UI.Design.WebControls.LoginViewDesigner#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/VB/LoginViewDesigner.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.LoginView" />
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
    <altmember cref="T:System.Web.UI.Design.HtmlControlDesigner" />
    <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/wxh45wzs(v=vs.100)">ASP.NET 컨트롤 디자이너 소개</related>
    <related type="Article" href="https://msdn.microsoft.com/library/27e44af0-6e12-4b7d-b17f-db35f1b6a052">연습: 웹 서버 컨트롤에 대 한 기본 컨트롤 디자이너 만들기</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LoginViewDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LoginViewDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.Design.WebControls.LoginViewDesigner" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework의 새 인스턴스를 내부적으로 생성 합니다 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> 클래스에서는 연결 된 <xref:System.Web.UI.WebControls.LoginView> 컨트롤 또는 디자인 화면에서 해당 컨트롤의 복사본입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
        <altmember cref="T:System.Web.UI.Design.HtmlControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
      </Docs>
    </Member>
    <Member MemberName="ActionLists">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.Design.DesignerActionListCollection ActionLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerActionListCollection ActionLists" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.LoginViewDesigner.ActionLists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ActionLists As DesignerActionListCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerActionListCollection ^ ActionLists { System::ComponentModel::Design::DesignerActionListCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActionLists : System.ComponentModel.Design.DesignerActionListCollection" Usage="System.Web.UI.Design.WebControls.LoginViewDesigner.ActionLists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 디자이너의 디자이너 작업 목록 컬렉션을 가져옵니다.</summary>
        <value>이 디자이너와 연결된 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.ActionLists%2A> 속성을 만듭니다를 <xref:System.ComponentModel.Design.DesignerActionList> 개체에 대 한를 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> 클래스를 추가 합니다 <xref:System.ComponentModel.Design.DesignerActionListCollection> 에서 가져온를 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.ActionLists%2A> 기본 속성을 차례로 반환을 <xref:System.ComponentModel.Design.DesignerActionListCollection>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionListCollection" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.ActionLists" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.ActionLists" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDesignTimeHtml">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>연결된 <see cref="T:System.Web.UI.WebControls.LoginView" /> 컨트롤을 디자인 타임에 렌더링하는 데 사용되는 태그를 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public override string GetDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDesignTimeHtml();" />
      <MemberSignature Language="F#" Value="override this.GetDesignTimeHtml : unit -&gt; string" Usage="loginViewDesigner.GetDesignTimeHtml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>디자인 타임에, 연결된 컨트롤을 렌더링하는 데 사용되는 태그를 가져옵니다.</summary>
        <returns>디자인 타임에 <see cref="T:System.Web.UI.WebControls.LoginView" />를 렌더링하는 데 사용되는 태그를 포함한 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml%2A> 연결 된 템플릿 인덱스를 설정 하는 메서드 <xref:System.Web.UI.WebControls.LoginView> 컨트롤을 다시 현재 디자인 타임에 인덱스 및 다음 연결 된 컨트롤 및 필요한 경우 해당 자식 컨트롤을 바인딩할 데이터입니다. 다음으로 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml%2A> 호출을 <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> 기본 태그를 생성 하는 메서드.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml%2A> 에서 상속 된 클래스에서 메서드를 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> 클래스에서 파생 된 컨트롤의 모양을 변경 하는 <xref:System.Web.UI.WebControls.LoginView> 디자인 타임에는 클래스입니다. 이 예제에서는 해당 범위 보다 편리 하 게 컨트롤 주위에 주황색 테두리를 그립니다.  
  
 [!code-csharp[System.Web.UI.Design.WebControls.LoginViewDesigner#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/CS/LoginViewDesigner.cs#4)]
 [!code-vb[System.Web.UI.Design.WebControls.LoginViewDesigner#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/VB/LoginViewDesigner.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우는 <see cref="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml" /> 메서드를 호출 해야 합니다 <see cref="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> 기본 결국은 여러 재정의 않으므로 수준에서 메서드 호출을 <see cref="T:System.Web.UI.WebControls.LoginView" /> 컨트롤이 나 태그를 생성 하는 컨트롤의 복사본을.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="M:System.Web.UI.WebControls.LoginView.SetDesignModeState(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public override string GetDesignTimeHtml (System.Web.UI.Design.DesignerRegionCollection regions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDesignTimeHtml(class System.Web.UI.Design.DesignerRegionCollection regions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDesignTimeHtml (regions As DesignerRegionCollection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDesignTimeHtml(System::Web::UI::Design::DesignerRegionCollection ^ regions);" />
      <MemberSignature Language="F#" Value="override this.GetDesignTimeHtml : System.Web.UI.Design.DesignerRegionCollection -&gt; string" Usage="loginViewDesigner.GetDesignTimeHtml regions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regions" Type="System.Web.UI.Design.DesignerRegionCollection" />
      </Parameters>
      <Docs>
        <param name="regions"><see cref="T:System.Web.UI.Design.DesignerRegionCollection" />의 디자인 타임 보기에서 선택 및 클릭할 수 있는 영역의 정의가 추가될 <see cref="T:System.Web.UI.WebControls.LoginView" />입니다.</param>
        <summary>디자인 타임에, 연결된 컨트롤을 렌더링하는 데 사용되는 태그를 가져와서 디자이너 영역의 컬렉션을 채웁니다.</summary>
        <returns>디자인 타임에 <see cref="T:System.Web.UI.WebControls.LoginView" />를 렌더링하는 데 사용되는 태그를 포함한 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml%2A> 메서드를 만듭니다는 <xref:System.Web.UI.Design.EditableDesignerRegion> 개체 템플릿 편집 비주얼 디자이너 화면에 초기화 한 다음 영역에 대 한 템플릿으로 합니다. 템플릿이 정의 된 경우 편집을 시작 하려면 클릭 하는 문자열로 표시 됩니다. 미리 정의 된 상수는 반환 된 태그 생성에 사용 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml%2A> 에서 상속 된 클래스에서 메서드를 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> 클래스에서 파생 된 컨트롤의 모양을 변경 하는 <xref:System.Web.UI.WebControls.LoginView> 디자인 타임에는 클래스입니다. 이 예제에서는 해당 범위 보다 편리 하 게 컨트롤 주위에 주황색 테두리를 그립니다.  
  
 [!code-csharp[System.Web.UI.Design.WebControls.LoginViewDesigner#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/CS/LoginViewDesigner.cs#4)]
 [!code-vb[System.Web.UI.Design.WebControls.LoginViewDesigner#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/VB/LoginViewDesigner.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>이 <see cref="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> 오버 로드는 기본 메서드를 호출 하지 않습니다 또는 <see cref="T:System.Web.UI.WebControls.LoginView" /> 컨트롤 태그를 생성 합니다.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="T:System.Web.UI.Design.EditableDesignerRegion" />
        <altmember cref="T:System.Web.UI.Design.DesignerRegionCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetEditableDesignerRegionContent">
      <MemberSignature Language="C#" Value="public override string GetEditableDesignerRegionContent (System.Web.UI.Design.EditableDesignerRegion region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetEditableDesignerRegionContent(class System.Web.UI.Design.EditableDesignerRegion region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEditableDesignerRegionContent (region As EditableDesignerRegion) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetEditableDesignerRegionContent(System::Web::UI::Design::EditableDesignerRegion ^ region);" />
      <MemberSignature Language="F#" Value="override this.GetEditableDesignerRegionContent : System.Web.UI.Design.EditableDesignerRegion -&gt; string" Usage="loginViewDesigner.GetEditableDesignerRegionContent region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
      </Parameters>
      <Docs>
        <param name="region">내용을 가져올 대상 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />입니다.</param>
        <summary>디자인 타임에 연결된 컨트롤을 렌더링하는 데 사용되는 serialize된 현재 템플릿의 복사본을 반환합니다.</summary>
        <returns>디자인 타임에 연결된 <see cref="T:System.Web.UI.WebControls.LoginView" />를 렌더링하는 데 사용되는 serialize된 템플릿의 복사본을 포함한 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 서식 파일을 구현 하는 경우는 <xref:System.Web.UI.ITemplate> 에서 인터페이스를 가져올 수 있습니다를 `region` 매개 변수를 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEditableDesignerRegionContent%2A> 메서드 지속형된 템플릿을 반환 합니다. 를 호출 합니다 <xref:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent%2A> 기본 콘텐츠를 생성 하는 메서드.  
  
 Serialize 된 서식 파일을 복원할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.LoginView> 사용 하 여 컨트롤을 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.SetEditableDesignerRegionContent%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="M:System.Web.UI.Design.ControlPersister.PersistTemplate(System.Web.UI.ITemplate,System.ComponentModel.Design.IDesignerHost)" />
        <altmember cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.Design.WebControls.LoginViewDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" />
      </Docs>
    </Member>
    <Member MemberName="GetEmptyDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected override string GetEmptyDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetEmptyDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEmptyDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetEmptyDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetEmptyDesignTimeHtml();" />
      <MemberSignature Language="F#" Value="override this.GetEmptyDesignTimeHtml : unit -&gt; string" Usage="loginViewDesigner.GetEmptyDesignTimeHtml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 템플릿이 정의되지 않았을 때 디자인 타임에 연결 컨트롤의 자리 표시자를 렌더링하는 태그를 가져옵니다.</summary>
        <returns>디자인 화면에서 자리 표시자에 렌더링하는 태그 텍스트를 포함한 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEmptyDesignTimeHtml%2A> 메서드는 먼저 연결 된 현재 템플릿의 이름을 지정 하는 문자열 메시지 서식을 <xref:System.Web.UI.WebControls.LoginView> 제어 하 고 또한 템플릿을 비어 있는지를 지정 합니다. 그런 다음 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEmptyDesignTimeHtml%2A> 해당 메시지를 포함 하는 자리 표시자에 대 한 태그를 생성 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEmptyDesignTimeHtml%2A> 에서 상속 된 클래스에서 메서드를 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> 클래스에서 파생 된 컨트롤의 모양을 변경 하는 <xref:System.Web.UI.WebControls.LoginView> 디자인 타임에는 클래스입니다. 모든 이름을 포함 하는 자리 표시자에 대 한 태그를 생성 하는 예제는 <xref:System.Web.UI.WebControls.RoleGroup> 연결된 된 컨트롤에 대해 정의 된 개체입니다.  
  
 [!code-csharp[System.Web.UI.Design.WebControls.LoginViewDesigner#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/CS/LoginViewDesigner.cs#5)]
 [!code-vb[System.Web.UI.Design.WebControls.LoginViewDesigner#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/VB/LoginViewDesigner.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml(System.String)" />
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected override string GetErrorDesignTimeHtml (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetErrorDesignTimeHtml(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetErrorDesignTimeHtml(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetErrorDesignTimeHtml (e As Exception) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetErrorDesignTimeHtml(Exception ^ e);" />
      <MemberSignature Language="F#" Value="override this.GetErrorDesignTimeHtml : Exception -&gt; string" Usage="loginViewDesigner.GetErrorDesignTimeHtml e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">throw된 <see cref="T:System.Exception" />입니다.</param>
        <summary>오류가 발생했을 때 디자인 타임에 연결된 컨트롤을 렌더링하는 태그를 제공합니다.</summary>
        <returns>오류가 발생한 후 디자인 타임에 연결된 <see cref="T:System.Web.UI.WebControls.LoginView" />를 렌더링하는 데 사용되는 태그를 포함한 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 디자인 타임 오류 <xref:System.Web.UI.WebControls.LoginView> 형식 이름, 컨트롤 이름 및 발표 하 고 오류를 설명 하는 메시지를 포함 하는 창으로 컨트롤을 렌더링 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetErrorDesignTimeHtml%2A> 에서 상속 된 클래스에서 메서드를 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> 클래스에서 파생 된 컨트롤의 모양을 변경 하는 <xref:System.Web.UI.WebControls.LoginView> 디자인 타임에는 클래스입니다. 이 예제에서는 굵은 빨간색 텍스트로 렌더링 되는 오류 메시지를 포함 하는 자리 표시자에 대 한 태그를 생성 합니다.  
  
 [!code-csharp[System.Web.UI.Design.WebControls.LoginViewDesigner#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/CS/LoginViewDesigner.cs#2)]
 [!code-vb[System.Web.UI.Design.WebControls.LoginViewDesigner#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/VB/LoginViewDesigner.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml(System.String)" />
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.Initialize : System.ComponentModel.IComponent -&gt; unit" Usage="loginViewDesigner.Initialize component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><see cref="T:System.ComponentModel.IComponent" />를 구현하는 <see cref="T:System.Web.UI.WebControls.LoginView" />입니다.</param>
        <summary>연결된 컨트롤을 표시, 편집 및 디자인할 디자이너를 준비합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 비주얼 디자이너 호출을 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.Initialize%2A> 메서드를 렌더링 하는 디자이너를 사용할 준비가 되었을 때를 <xref:System.Web.UI.WebControls.LoginView> 컨트롤입니다. <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.Initialize%2A> 기본 메서드는 속성을 구성 하 고 디자이너의 작업에 필요한 이벤트를 설정 합니다.  
  
 `component` 매개 변수는 합니다 <xref:System.Web.UI.WebControls.LoginView> 의 복사본을이 디자이너와 연결 된 컨트롤에는 <xref:System.Web.UI.WebControls.LoginView> 컨트롤입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.Initialize%2A> 에서 상속 된 클래스에서 메서드를 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> 클래스에서 파생 된 컨트롤의 동작을 변경 하는 <xref:System.Web.UI.WebControls.LoginView> 디자인 타임에 클래스입니다. 이 예제에서는 throw를 <xref:System.ArgumentException>, 연결된 된 컨트롤이 없으면를 `MyLoginView` 개체입니다.  
  
 [!code-csharp[System.Web.UI.Design.WebControls.LoginViewDesigner#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/CS/LoginViewDesigner.cs#6)]
 [!code-vb[System.Web.UI.Design.WebControls.LoginViewDesigner#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/VB/LoginViewDesigner.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="component" />가 <see cref="T:System.Web.UI.WebControls.LoginView" />가 아니거나 <see cref="T:System.Web.UI.WebControls.LoginView" />에서 파생된 클래스가 아닙니다.</exception>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanged">
      <MemberSignature Language="C#" Value="public override void OnComponentChanged (object sender, System.ComponentModel.Design.ComponentChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnComponentChanged(object sender, class System.ComponentModel.Design.ComponentChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnComponentChanged (sender As Object, e As ComponentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnComponentChanged(System::Object ^ sender, System::ComponentModel::Design::ComponentChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnComponentChanged : obj * System.ComponentModel.Design.ComponentChangedEventArgs -&gt; unit" Usage="loginViewDesigner.OnComponentChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">이벤트 소스입니다.</param>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />입니다.</param>
        <summary>이 디자이너와 연결된 컨트롤에 변경 사항이 있을 때 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.OnComponentChanged%2A> 메서드를 호출한 경우 합니다 <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> 관련 된 이벤트 <xref:System.Web.UI.WebControls.LoginView> 컨트롤이 실행 합니다. 이 컨트롤의 속성 변경에 대 한 응답에는 일반적으로 (예를 들어, 한 **속성** 표 변경). 경우는 <xref:System.Web.UI.WebControls.LoginView> 컨트롤 템플릿이 변경 되는 **속성** 표가 새로 고쳐집니다.  
  
 합니다 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.OnComponentChanged%2A> 는 현재 템플릿 인덱스가 유효 하 고이 호출 하는 확인 된 <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> 기본 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
        <altmember cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected override void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="override this.PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="loginViewDesigner.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">추가되거나 숨겨진 속성의 <see cref="T:System.Collections.IDictionary" />를 구현하는 컬렉션입니다.</param>
        <summary>디자이너에서 **속성** 표의 디스플레이에서 속성을 제거 또는 추가하거나 연결된 컨트롤의 속성을 숨기는 데 사용됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컨트롤 디자이너에서 파생 되는 메서드를 사용 합니다 <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties%2A?displayProperty=nameWithType> 디자이너를 구현 하는 해당 디자인 타임 속성을 사용 하 여 다양 한 컨트롤 속성을 숨기 및 속성을 추가 하거나 속성을 제거 하는 메서드는  **속성** 표입니다.  
  
 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.PreFilterProperties%2A> 메서드가 적용 되는 <xref:System.ComponentModel.BrowsableAttribute> 특성을 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 속성에는 나타나지 않습니다를 **속성** 표입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.PreFilterProperties%2A> 에서 상속 된 클래스에서 메서드를 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> 변경 하는 클래스는 **속성** 에서 파생 된 컨트롤의 표를 <xref:System.Web.UI.WebControls.LoginView> 클래스 디자인 시간입니다. 예제에서는 합니다 <xref:System.Web.UI.Control.NamingContainer%2A> 속성에 표시 합니다 **속성** 표입니다.  
  
 [!code-csharp[System.Web.UI.Design.WebControls.LoginViewDesigner#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/CS/LoginViewDesigner.cs#3)]
 [!code-vb[System.Web.UI.Design.WebControls.LoginViewDesigner#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/VB/LoginViewDesigner.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 <see cref="M:System.Web.UI.Design.WebControls.LoginViewDesigner.PreFilterProperties(System.Collections.IDictionary)" /> 속성을 제거 하거나 디자인 타임 속성 컬렉션에서 속성의 특성을 변경 하는 속성을 추가 하는 방법입니다. 호출 해야 합니다 <see cref="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)" /> 다른 처리를 수행 하기 전에 기본 메서드.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="T:System.ComponentModel.BrowsableAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.LoginView.RoleGroups" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.Design.HtmlControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="SetEditableDesignerRegionContent">
      <MemberSignature Language="C#" Value="public override void SetEditableDesignerRegionContent (System.Web.UI.Design.EditableDesignerRegion region, string content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetEditableDesignerRegionContent(class System.Web.UI.Design.EditableDesignerRegion region, string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetEditableDesignerRegionContent (region As EditableDesignerRegion, content As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetEditableDesignerRegionContent(System::Web::UI::Design::EditableDesignerRegion ^ region, System::String ^ content);" />
      <MemberSignature Language="F#" Value="override this.SetEditableDesignerRegionContent : System.Web.UI.Design.EditableDesignerRegion * string -&gt; unit" Usage="loginViewDesigner.SetEditableDesignerRegionContent (region, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="region">업데이트할 영역의 이름을 제공하는 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />입니다.</param>
        <param name="content">연결된 컨트롤의 serialize된 템플릿을 포함한 문자열입니다.</param>
        <summary>serialize된 컨트롤 템플릿 복사본의 연결된 컨트롤의 영역을 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.SetEditableDesignerRegionContent%2A> serialize 된 연결된 된 템플릿을 구문 분석 하는 메서드 <xref:System.Web.UI.WebControls.LoginView> 하 여 지정 된 컨트롤에는 `content` 매개 변수를 다음 템플릿을 사용 하 여 지정 된 컨트롤의 영역을 업데이트 합니다 <xref:System.Web.UI.Design.DesignerObject.Name%2A> 속성 `region` 매개 변수입니다.  
  
 현재 템플릿에 합니다 <xref:System.Web.UI.WebControls.LoginView> 제어를 사용 하 여 serialize 할 수는 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEditableDesignerRegionContent%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="M:System.Web.UI.Design.ControlParser.ParseTemplate(System.ComponentModel.Design.IDesignerHost,System.String,System.String)" />
        <altmember cref="T:System.Web.UI.Design.EditableDesignerRegion" />
        <altmember cref="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TemplateGroups">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Design.TemplateGroupCollection TemplateGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.TemplateGroupCollection TemplateGroups" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.LoginViewDesigner.TemplateGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TemplateGroups As TemplateGroupCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Design::TemplateGroupCollection ^ TemplateGroups { System::Web::UI::Design::TemplateGroupCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TemplateGroups : System.Web.UI.Design.TemplateGroupCollection" Usage="System.Web.UI.Design.WebControls.LoginViewDesigner.TemplateGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.TemplateGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>연결된 컨트롤의 필드에 대한 템플릿 그룹의 컬렉션을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> 컨트롤의 각 템플릿에 대한 요소를 포함한 <see cref="T:System.Web.UI.WebControls.LoginView" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.TemplateGroups%2A> 속성을 <xref:System.Web.UI.Design.TemplateGroupCollection> 에서 개체를 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.TemplateGroups%2A> 기본 속성을 추가한 다음 추가 <xref:System.Web.UI.Design.TemplateGroup> 단일을 포함 하는 개체 <xref:System.Web.UI.Design.TemplateDefinition> 익명 템플릿 (로그온 사용자에 해당)에 대 한 개체에 대 한는 로그온 템플릿 및 각 <xref:System.Web.UI.WebControls.RoleGroup> 요소에는 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> 연결 된 컬렉션 <xref:System.Web.UI.WebControls.LoginView> 컨트롤을 <xref:System.Web.UI.Design.TemplateGroupCollection>합니다. 합니다 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.TemplateGroups%2A> 반환 <xref:System.Web.UI.Design.TemplateGroupCollection> 호출자에 게 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="T:System.Web.UI.Design.TemplateGroupCollection" />
        <altmember cref="T:System.Web.UI.Design.TemplateGroup" />
        <altmember cref="T:System.Web.UI.Design.TemplateDefinition" />
        <altmember cref="T:System.Web.UI.WebControls.RoleGroup" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" />
      </Docs>
    </Member>
    <Member MemberName="UsePreviewControl">
      <MemberSignature Language="C#" Value="protected override bool UsePreviewControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePreviewControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.LoginViewDesigner.UsePreviewControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property UsePreviewControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool UsePreviewControl { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UsePreviewControl : bool" Usage="System.Web.UI.Design.WebControls.LoginViewDesigner.UsePreviewControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>디자이너에서 디자이너와 연결된 실제 컨트롤이 아닌 임시 복사본을 사용하여 디자인 타임 태그를 생성할지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>항상 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때문에 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.UsePreviewControl%2A> 속성은 항상 `true`, 디자이너 <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> 속성이 연결 된 복사본을 반환 합니다. <xref:System.Web.UI.WebControls.LoginView> 컨트롤 디자인 타임 태그를 생성 합니다. 합니다 <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> 속성은 실제 여 복사본을 만듭니다 <xref:System.Web.UI.WebControls.LoginView> 컨트롤을 선택한 다음 지속형된 제어 문자열을 구문 분석 합니다. 복사 된 컨트롤의 유지 하는 데 실제 영향을 주지 않습니다 <xref:System.Web.UI.WebControls.LoginView>합니다.  
  
 경우는 <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.UsePreviewControl%2A> 속성을 반환 하도록 재정의 되었습니다 `false`에 디자이너에서 연결 된 사용 <xref:System.Web.UI.WebControls.LoginView> 디자인 타임 태그를 생성 하 고 페이지 태그 소스에 컨트롤의 디자인 타임 변경 내용이 지속 됩니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의할 수 있습니다는 <see cref="P:System.Web.UI.Design.WebControls.LoginViewDesigner.UsePreviewControl" /> 반환할 속성 <see langword="false" /> 컨트롤 클래스 수준으로 표시 되었는지 여부에 따라 값을 결정 하거나 <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> 특성입니다. 경우는 <see cref="P:System.Web.UI.Design.WebControls.LoginViewDesigner.UsePreviewControl" /> 을 재정의 하지 않으면 합니다 <see cref="T:System.Web.UI.WebControls.LoginView" /> 무시는 <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />합니다.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="M:System.Web.UI.Design.ControlPersister.PersistControl(System.IO.TextWriter,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.Design.ControlParser.ParseControl(System.ComponentModel.Design.IDesignerHost,System.String)" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" />
        <altmember cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" />
      </Docs>
    </Member>
  </Members>
</Type>