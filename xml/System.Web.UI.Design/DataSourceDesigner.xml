<Type Name="DataSourceDesigner" FullName="System.Web.UI.Design.DataSourceDesigner">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3ed3d74f23fd7ab95af87705872d86df71f2e312" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59351369" /></Metadata><TypeSignature Language="C#" Value="public class DataSourceDesigner : System.Web.UI.Design.ControlDesigner, System.Web.UI.Design.IDataSourceDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataSourceDesigner extends System.Web.UI.Design.ControlDesigner implements class System.Web.UI.Design.IDataSourceDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.DataSourceDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class DataSourceDesigner&#xA;Inherits ControlDesigner&#xA;Implements IDataSourceDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceDesigner : System::Web::UI::Design::ControlDesigner, System::Web::UI::Design::IDataSourceDesigner" />
  <TypeSignature Language="F#" Value="type DataSourceDesigner = class&#xA;    inherit ControlDesigner&#xA;    interface IDataSourceDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ControlDesigner</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.Design.IDataSourceDesigner</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>디자인 호스트에서 디자인 타임에 <see cref="T:System.Web.UI.DataSourceControl" /> 클래스를 지원합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.DataSourceDesigner> 와 같은 클래스는 데이터 원본 디자이너에 대 한 기본 클래스를 <xref:System.Web.UI.Design.WebControls.SqlDataSourceDesigner>, <xref:System.Web.UI.Design.WebControls.AccessDataSourceDesigner>, 및 <xref:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner> 클래스입니다. 새 데이터 소스 컨트롤을 만드는 경우 컨트롤에 대 한 사용자 지정 컨트롤 디자이너를 만들고에서 파생 수도 있습니다는 <xref:System.Web.UI.Design.DataSourceDesigner> 클래스입니다.  
  
 합니다 <xref:System.Web.UI.Design.DataSourceDesigner> 클래스에는 두 가지 이벤트 메서드가: 합니다 <xref:System.Web.UI.Design.DataSourceDesigner.OnDataSourceChanged%2A> 및 <xref:System.Web.UI.Design.DataSourceDesigner.OnSchemaRefreshed%2A> 메서드. 사용 하 여 일시적으로 사용할 수 이러한 이벤트를 <xref:System.Web.UI.Design.DataSourceDesigner.SuppressDataSourceEvents%2A> 로 설정 하는 메서드를 <xref:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents%2A> 속성. 사용 하 여 이벤트 메서드를 다시 사용할 수 있습니다는 <xref:System.Web.UI.Design.DataSourceDesigner.ResumeDataSourceEvents%2A> 메서드.  
  
 클래스의 인스턴스를 만들지 않고 뷰 스키마의 일치 여부를 확인 하는 데 사용할 수 있는 정적 메서드를 두 가지  
  
-   <xref:System.Web.UI.Design.DataSourceDesigner.SchemasEquivalent%2A> 메서드 두 스키마를 비교 합니다.  
  
-   <xref:System.Web.UI.Design.DataSourceDesigner.ViewSchemasEquivalent%2A> 메서드 두 뷰의 스키마를 비교 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 다음 표에 나열 된 몇 가지 다른 작은 사용자 지정 클래스를 사용 하 여 사용자 지정 데이터 소스 컨트롤을 사용 방법을 보여 줍니다.  
  
|사용자 지정 클래스|파생|  
|------------------|------------------|  
|`CustomDataSource`|<xref:System.Web.UI.WebControls.ObjectDataSource>|  
|`CustomDataSourceDesigner`|<xref:System.Web.UI.Design.DataSourceDesigner>|  
|`CustomDataSourceView`|<xref:System.Web.UI.WebControls.ObjectDataSourceView>|  
|`CustomDesignDataSourceView`|<xref:System.Web.UI.Design.DesignerDataSourceView>|  
|`BookListViewSchema`|<xref:System.Web.UI.Design.IDataSourceViewSchema>|  
|`CustomIDFieldSchema`|<xref:System.Web.UI.Design.IDataSourceFieldSchema>|  
|`CustomTitleFieldSchema`|<xref:System.Web.UI.Design.IDataSourceFieldSchema>|  
|`BookItem` (2-필드 데이터 구조입니다.)||  
  
 코드 예제를 컴파일한 후 디자인 보기에서.aspx 페이지를 열고 설정한는 `DataSourceID` 속성을 사용자 지정 데이터 소스 컨트롤의 ID입니다.  
  
 [!code-csharp[DataSourceDesignerSample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataSourceDesignerSample/CS/DataSourceDesignerSample.cs#1)]
 [!code-vb[DataSourceDesignerSample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataSourceDesignerSample/VB/DataSourceDesignerSample.vb#1)]  
[!code-aspx-csharp[DataSourceDesignerSample#6](~/samples/snippets/csharp/VS_Snippets_WebNet/DataSourceDesignerSample/CS/DataSourceDesignerSample.aspx#6)]
[!code-aspx-vb[DataSourceDesignerSample#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataSourceDesignerSample/VB/DataSourceDesignerSample.aspx#6)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>파생된 클래스에서 디자인 타임 작업 목록 메뉴의 명령을 제공, 하려면 재정의 해야 합니다 <see cref="P:System.Web.UI.Design.DataSourceDesigner.ActionLists" /> 반환할 사용자 지정 속성을 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 에서 파생 되는 사용자 지정 항목을 사용 하 여 개체를 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 개체.</para></block>
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">디자인 타임 지원 확장</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataSourceDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataSourceDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.Design.DataSourceDesigner" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.DataSourceDesigner.%23ctor%2A> 디자인 타임에 디자인 호스트에서 생성자를 호출 합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">디자인 타임 지원 확장</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</related>
      </Docs>
    </Member>
    <Member MemberName="ActionLists">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.Design.DesignerActionListCollection ActionLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerActionListCollection ActionLists" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.DataSourceDesigner.ActionLists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ActionLists As DesignerActionListCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerActionListCollection ^ ActionLists { System::ComponentModel::Design::DesignerActionListCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActionLists : System.ComponentModel.Design.DesignerActionListCollection" Usage="System.Web.UI.Design.DataSourceDesigner.ActionLists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>디자인 타임에 작업 목록 메뉴를 만드는 데 사용되는 항목 목록을 가져옵니다.</summary>
        <value>컨트롤 디자이너의 작업 목록 항목이 포함된 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제를 사용 하 여 간단한 복합 컨트롤을 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.Label> 컨트롤 및 <xref:System.Web.UI.WebControls.TextBox> 컨트롤을 설정 하는 속성과 함께 합니다 `Text` 모두 내부 컨트롤의 속성 뿐 <xref:System.Web.UI.WebControls.WebControl.Width%2A> 및 <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> 의 속성을 <xref:System.Web.UI.WebControls.TextBox> 제어 합니다. 연결 된 컨트롤 디자이너 클래스는 세 개를 만든 <xref:System.ComponentModel.Design.DesignerActionMethodItem> 컨트롤에 두 가지 속성을 설정 하는 설정을 가진 롤백할 수 있습니다 실행 취소 기능을 사용 하 여 디자인 호스트에서 각 명령입니다. 코드 예제에서는 사용자 지정을 사용 하지 않지만 <xref:System.Web.UI.DataSourceControl> 개체를 재정의 하는 방법을 보여 줍니다는 <xref:System.Web.UI.Design.DataSourceDesigner.ActionLists%2A> 속성입니다.  
  
 [!code-csharp[DesignerInvokeTransactedChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerInvokeTransactedChange/CS/InvokeTransactedChangeSample.cs#1)]
 [!code-vb[DesignerInvokeTransactedChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerInvokeTransactedChange/VB/InvokeTransactedChangeSample.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 되는 사용자 지정 클래스를 만들 때 합니다 <see cref="T:System.Web.UI.Design.DataSourceDesigner" /> 재정의 해야 클래스는 <see cref="P:System.Web.UI.Design.DataSourceDesigner.ActionLists" /> 속성입니다. 재정의 메서드에서 기본 클래스 기본 만들기를 먼저 호출 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 개체를 추가한 다음 사용자 지정 작업 클래스에 관련 된 목록입니다.</para></block>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.ActionLists" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionListCollection" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">디자인 타임 지원 확장</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</related>
      </Docs>
    </Member>
    <Member MemberName="CanConfigure">
      <MemberSignature Language="C#" Value="public virtual bool CanConfigure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanConfigure" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.DataSourceDesigner.CanConfigure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanConfigure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanConfigure { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanConfigure : bool" Usage="System.Web.UI.Design.DataSourceDesigner.CanConfigure" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.Design.IDataSourceDesigner.CanConfigure</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.Design.DataSourceDesigner.Configure" /> 메서드를 호출할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="M:System.Web.UI.Design.DataSourceDesigner.Configure" />를 호출할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.Design.DataSourceDesigner.CanConfigure%2A> 특정 데이터 원본에 대 한 디자인 타임 구성을 사용할지 여부를 사용자 지정 클래스에서 속성입니다.  
  
 와 같은 디자인 호스트 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] 사용 하는 <xref:System.Web.UI.Design.DataSourceDesigner.CanConfigure%2A> 디자인 타임에 데이터 원본을 구성 하 여 명령을 작업 목록 메뉴에 표시할지 여부를 결정 하는 속성입니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">디자인 타임 지원 확장</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</related>
      </Docs>
    </Member>
    <Member MemberName="CanRefreshSchema">
      <MemberSignature Language="C#" Value="public virtual bool CanRefreshSchema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRefreshSchema" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.DataSourceDesigner.CanRefreshSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRefreshSchema As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRefreshSchema { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRefreshSchema : bool" Usage="System.Web.UI.Design.DataSourceDesigner.CanRefreshSchema" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.Design.IDataSourceDesigner.CanRefreshSchema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" /> 메서드를 호출할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" />를 호출할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.Design.DataSourceDesigner.CanRefreshSchema%2A> 특정 데이터 원본에 대 한 디자인 타임에 스키마를 새로 고침 하는 기능을 사용할지 여부 파생된 클래스에서 속성입니다. 원하는 응용 프로그램에 필요한 고정 데이터 구조를 스키마가 변경 되지 않는 경우는 <xref:System.Web.UI.Design.DataSourceDesigner.CanRefreshSchema%2A> 반환할 속성 `false`합니다.  
  
 와 같은 디자인 호스트 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] 사용 하는 <xref:System.Web.UI.Design.DataSourceDesigner.CanRefreshSchema%2A> 디자인 타임에 스키마를 새로 고치는 명령을 작업 목록 메뉴에 표시할지 여부를 결정 하는 속성입니다.  
  
 와 같은 디자인 호스트 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]를 볼 수는 <xref:System.Web.UI.Design.DataSourceDesigner.CanRefreshSchema%2A> 다음 프로세스를 완료 하 여 작업의 속성:  
  
1.  페이지에서 배치를 <xref:System.Web.UI.WebControls.SqlDataSource> 요소나 <xref:System.Web.UI.WebControls.AccessDataSource> 제어 합니다.  
  
2.  디자인 뷰에서 작업 목록에서 클릭 **구성**합니다.  
  
3.  데이터 원본의 몇 가지 필드를 제거 합니다.  
  
4.  작업 목록에서 클릭 **스키마 새로 고침**합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">디자인 타임 지원 확장</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</related>
      </Docs>
    </Member>
    <Member MemberName="Configure">
      <MemberSignature Language="C#" Value="public virtual void Configure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Configure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.Configure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Configure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Configure();" />
      <MemberSignature Language="F#" Value="abstract member Configure : unit -&gt; unit&#xA;override this.Configure : unit -&gt; unit" Usage="dataSourceDesigner.Configure " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.Design.IDataSourceDesigner.Configure</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>디자인 호스트에서 데이터 원본 구성 유틸리티를 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.Design.DataSourceDesigner.Configure%2A> 메서드를 지원 하지 않습니다 합니다 <xref:System.Web.UI.Design.DataSourceDesigner> 클래스; 그러나 사용자 지정 데이터 원본 디자이너에서 상속 하 여 재정의할 수 있습니다는 <xref:System.Web.UI.Design.DataSourceDesigner> 클래스입니다.  
  
 와 같은 디자인 호스트 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]를 볼 수는 <xref:System.Web.UI.Design.DataSourceDesigner.Configure%2A> 다음 프로세스를 완료 하 여 실행 중인 메서드:  
  
1.  배치는 <xref:System.Web.UI.WebControls.SqlDataSource> 또는 <xref:System.Web.UI.WebControls.AccessDataSource> 페이지에서 제어 합니다.  
  
2.  작업 목록에서 클릭 하면 디자인 뷰에서 **구성**합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">기본 클래스에서 이 메서드를 호출하려고 한 경우</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">디자인 타임 지원 확장</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</related>
      </Docs>
    </Member>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ DataSourceChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceChanged : EventHandler " Usage="member this.DataSourceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.Design.IDataSourceDesigner.DataSourceChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>add: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>remove: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>연결된 데이터 소스 속성이 변경되면 발생합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Design.DataSourceDesigner.OnDataSourceChanged(System.EventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">디자인 타임 지원 확장</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</related>
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public override string GetDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.GetDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDesignTimeHtml();" />
      <MemberSignature Language="F#" Value="override this.GetDesignTimeHtml : unit -&gt; string" Usage="dataSourceDesigner.GetDesignTimeHtml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>연결된 데이터 소스 컨트롤을 디자인 타임에 표시하기 위한 HTML 태그를 검색합니다.</summary>
        <returns>디자인 타임에 표시하기 위한 태그입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 구현 합니다 <xref:System.Web.UI.Design.DataSourceDesigner.GetDesignTimeHtml%2A> 자료에서 결과 반환 하는 메서드 <xref:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml%2A?displayProperty=nameWithType> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">디자인 타임 지원 확장</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</related>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.DesignerDataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.Design.DesignerDataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetView (viewName As String) As DesignerDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::Design::DesignerDataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="abstract member GetView : string -&gt; System.Web.UI.Design.DesignerDataSourceView&#xA;override this.GetView : string -&gt; System.Web.UI.Design.DesignerDataSourceView" Usage="dataSourceDesigner.GetView viewName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.Design.IDataSourceDesigner.GetView(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.DesignerDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">뷰의 이름입니다.</param>
        <summary>뷰 이름으로 식별되는 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> 개체를 검색합니다.</summary>
        <returns>이 구현은 항상 <see langword="null" />을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 파생 클래스에서 `viewName` 존재 하지 않는 합니다 <xref:System.Web.UI.Design.DataSourceDesigner.GetView%2A> 메서드를 반환할지 `null`합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.DesignerDataSourceView" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">디자인 타임 지원 확장</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</related>
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="public virtual string[] GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetViewNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="abstract member GetViewNames : unit -&gt; string[]&#xA;override this.GetViewNames : unit -&gt; string[]" Usage="dataSourceDesigner.GetViewNames " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.Design.IDataSourceDesigner.GetViewNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 데이터 소스에서 사용할 수 있는 뷰 이름의 배열을 반환합니다.</summary>
        <returns>뷰 이름으로 이루어진 배열입니다.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">디자인 타임 지원 확장</related>
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.OnDataSourceChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceChanged : EventArgs -&gt; unit&#xA;override this.OnDataSourceChanged : EventArgs -&gt; unit" Usage="dataSourceDesigner.OnDataSourceChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">개체를 호출하면 제공되는 <see cref="T:System.EventArgs" /> 개체입니다.</param>
        <summary>데이터 소스 속성이 변경되고 <see cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" /> 값이 <see langword="false" />이면 <see cref="P:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents" /> 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.DataSourceDesigner.OnDataSourceChanged%2A> 메서드는 디자인 호스트에서 컨트롤을 새로 고치도록 연결된 된 데이터 소스에 바인딩된 각 컨트롤의 컨트롤 디자이너에 알립니다. <xref:System.Web.UI.Design.DataSourceDesigner.OnDataSourceChanged%2A> 메서드를 사용 하 여 표시 하지는 <xref:System.Web.UI.Design.DataSourceDesigner.SuppressDataSourceEvents%2A> 메서드 또는 호출 하 여를 <xref:System.Web.UI.Design.DataSourceDesigner.RefreshSchema%2A> 인수를 사용 하 여 메서드 `false`합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" />
        <altmember cref="M:System.Web.UI.Design.DataSourceDesigner.SuppressDataSourceEvents" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">디자인 타임 지원 확장</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</related>
      </Docs>
    </Member>
    <Member MemberName="OnSchemaRefreshed">
      <MemberSignature Language="C#" Value="protected virtual void OnSchemaRefreshed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSchemaRefreshed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.OnSchemaRefreshed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSchemaRefreshed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSchemaRefreshed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSchemaRefreshed : EventArgs -&gt; unit&#xA;override this.OnSchemaRefreshed : EventArgs -&gt; unit" Usage="dataSourceDesigner.OnSchemaRefreshed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> 개체</param>
        <summary>데이터 소스의 스키마가 변경되고 <see cref="E:System.Web.UI.Design.DataSourceDesigner.SchemaRefreshed" /> 값이 <see langword="false" />이면 <see cref="P:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents" /> 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.DataSourceDesigner.OnSchemaRefreshed%2A> 메서드는 스키마의 필드를 변경 하는 연결 된 데이터 원본에 바인딩되는 각 컨트롤의 컨트롤 디자이너에 알립니다. <xref:System.Web.UI.Design.DataSourceDesigner.OnSchemaRefreshed%2A> 메서드를 사용 하 여 표시 하지는 <xref:System.Web.UI.Design.DataSourceDesigner.SuppressDataSourceEvents%2A> 메서드 또는 호출 하 여는 <xref:System.Web.UI.Design.DataSourceDesigner.RefreshSchema%2A> 속성의 인수를 사용 하 여 `false`입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.DataSourceDesigner.SuppressDataSourceEvents" />
        <altmember cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">디자인 타임 지원 확장</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</related>
      </Docs>
    </Member>
    <Member MemberName="RefreshSchema">
      <MemberSignature Language="C#" Value="public virtual void RefreshSchema (bool preferSilent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshSchema(bool preferSilent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RefreshSchema (preferSilent As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RefreshSchema(bool preferSilent);" />
      <MemberSignature Language="F#" Value="abstract member RefreshSchema : bool -&gt; unit&#xA;override this.RefreshSchema : bool -&gt; unit" Usage="dataSourceDesigner.RefreshSchema preferSilent" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.Design.IDataSourceDesigner.RefreshSchema(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preferSilent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="preferSilent">스키마를 새로 고칠 때 이벤트를 허용하려면 <see langword="true" />이고, 스키마를 새로 고칠 때 <see cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" /> 및 <see cref="E:System.Web.UI.Design.DataSourceDesigner.SchemaRefreshed" /> 이벤트를 허용하지 않으려면 <see langword="false" />입니다.</param>
        <summary>선택적으로 이벤트를 억제하는 동안 데이터 소스에서 스키마를 새로 고칩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.DataSourceDesigner> 클래스는 <xref:System.Web.UI.Design.DataSourceDesigner.RefreshSchema%2A> 메서드를 지원하지 않습니다. 그러나는 파생된 클래스의 예는 <xref:System.Web.UI.Design.WebControls.XmlDataSourceDesigner> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">기본 클래스에서 이 메서드를 호출하려고 한 경우</exception>
        <altmember cref="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.RefreshSchema(System.Boolean)" />
        <altmember cref="M:System.Web.UI.Design.DataSourceDesigner.OnSchemaRefreshed(System.EventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">디자인 타임 지원 확장</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</related>
      </Docs>
    </Member>
    <Member MemberName="ResumeDataSourceEvents">
      <MemberSignature Language="C#" Value="public virtual void ResumeDataSourceEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResumeDataSourceEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.ResumeDataSourceEvents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResumeDataSourceEvents ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResumeDataSourceEvents();" />
      <MemberSignature Language="F#" Value="abstract member ResumeDataSourceEvents : unit -&gt; unit&#xA;override this.ResumeDataSourceEvents : unit -&gt; unit" Usage="dataSourceDesigner.ResumeDataSourceEvents " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.Design.IDataSourceDesigner.ResumeDataSourceEvents</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>데이터 소스 이벤트를 억제한 후 데이터 소스 이벤트를 복원합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 소스 이벤트를 설정 하 여 표시 하지는 <xref:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents%2A> 속성을 `false` 호출 하 여는 <xref:System.Web.UI.Design.DataSourceDesigner.RefreshSchema%2A> 의 인수를 사용 하 여 메서드 `true`합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">기본 클래스에서 이 메서드를 호출하려고 한 경우</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">디자인 타임 지원 확장</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</related>
      </Docs>
    </Member>
    <Member MemberName="SchemaRefreshed">
      <MemberSignature Language="C#" Value="public event EventHandler SchemaRefreshed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SchemaRefreshed" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Design.DataSourceDesigner.SchemaRefreshed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SchemaRefreshed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ SchemaRefreshed;" />
      <MemberSignature Language="F#" Value="member this.SchemaRefreshed : EventHandler " Usage="member this.SchemaRefreshed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.Design.IDataSourceDesigner.SchemaRefreshed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>add: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>remove: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>스키마를 새로 고친 후에 발생합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Design.DataSourceDesigner.OnSchemaRefreshed(System.EventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">디자인 타임 지원 확장</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</related>
      </Docs>
    </Member>
    <Member MemberName="SchemasEquivalent">
      <MemberSignature Language="C#" Value="public static bool SchemasEquivalent (System.Web.UI.Design.IDataSourceSchema schema1, System.Web.UI.Design.IDataSourceSchema schema2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SchemasEquivalent(class System.Web.UI.Design.IDataSourceSchema schema1, class System.Web.UI.Design.IDataSourceSchema schema2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.SchemasEquivalent(System.Web.UI.Design.IDataSourceSchema,System.Web.UI.Design.IDataSourceSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SchemasEquivalent (schema1 As IDataSourceSchema, schema2 As IDataSourceSchema) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SchemasEquivalent(System::Web::UI::Design::IDataSourceSchema ^ schema1, System::Web::UI::Design::IDataSourceSchema ^ schema2);" />
      <MemberSignature Language="F#" Value="static member SchemasEquivalent : System.Web.UI.Design.IDataSourceSchema * System.Web.UI.Design.IDataSourceSchema -&gt; bool" Usage="System.Web.UI.Design.DataSourceDesigner.SchemasEquivalent (schema1, schema2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema1" Type="System.Web.UI.Design.IDataSourceSchema" />
        <Parameter Name="schema2" Type="System.Web.UI.Design.IDataSourceSchema" />
      </Parameters>
      <Docs>
        <param name="schema1"><see cref="T:System.Web.UI.Design.IDataSourceSchema" />에서 파생되는 비교할 첫 번째 스키마입니다.</param>
        <param name="schema2">비교할 두 번째 스키마입니다.</param>
        <summary>두 스키마가 같은지 여부를 나타내는 값을 제공합니다.</summary>
        <returns>두 스키마가 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 두 스키마의 비교를 보기에 뿐만 아니라 이름과 유형의 보기에 포함 된 필드를 기반으로 합니다. <xref:System.Web.UI.Design.DataSourceDesigner.SchemasEquivalent%2A> 의 인스턴스가 없는 메서드를 사용할 수는 <xref:System.Web.UI.Design.DataSourceDesigner> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.IDataSourceSchema" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">디자인 타임 지원 확장</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</related>
      </Docs>
    </Member>
    <Member MemberName="SuppressDataSourceEvents">
      <MemberSignature Language="C#" Value="public virtual void SuppressDataSourceEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SuppressDataSourceEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.SuppressDataSourceEvents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SuppressDataSourceEvents ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SuppressDataSourceEvents();" />
      <MemberSignature Language="F#" Value="abstract member SuppressDataSourceEvents : unit -&gt; unit&#xA;override this.SuppressDataSourceEvents : unit -&gt; unit" Usage="dataSourceDesigner.SuppressDataSourceEvents " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.Design.IDataSourceDesigner.SuppressDataSourceEvents</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.Web.UI.Design.DataSourceDesigner.ResumeDataSourceEvents" /> 메서드를 호출할 때까지 모든 데이터 소스 이벤트를 연기합니다.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">디자인 타임 지원 확장</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</related>
      </Docs>
    </Member>
    <Member MemberName="SuppressingDataSourceEvents">
      <MemberSignature Language="C#" Value="protected bool SuppressingDataSourceEvents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressingDataSourceEvents" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property SuppressingDataSourceEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool SuppressingDataSourceEvents { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SuppressingDataSourceEvents : bool" Usage="System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" /> 이벤트 또는 <see cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" /> 메서드가 발생하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>이벤트가 억제되고 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents%2A> 를 호출 하 여 속성을 설정할 수 있습니다 합니다 <xref:System.Web.UI.Design.DataSourceDesigner.SuppressDataSourceEvents%2A> 또는 <xref:System.Web.UI.Design.DataSourceDesigner.RefreshSchema%2A> 인수를 사용 하 여 메서드 `true`합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">디자인 타임 지원 확장</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</related>
      </Docs>
    </Member>
    <Member MemberName="ViewSchemasEquivalent">
      <MemberSignature Language="C#" Value="public static bool ViewSchemasEquivalent (System.Web.UI.Design.IDataSourceViewSchema viewSchema1, System.Web.UI.Design.IDataSourceViewSchema viewSchema2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ViewSchemasEquivalent(class System.Web.UI.Design.IDataSourceViewSchema viewSchema1, class System.Web.UI.Design.IDataSourceViewSchema viewSchema2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceDesigner.ViewSchemasEquivalent(System.Web.UI.Design.IDataSourceViewSchema,System.Web.UI.Design.IDataSourceViewSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ViewSchemasEquivalent (viewSchema1 As IDataSourceViewSchema, viewSchema2 As IDataSourceViewSchema) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ViewSchemasEquivalent(System::Web::UI::Design::IDataSourceViewSchema ^ viewSchema1, System::Web::UI::Design::IDataSourceViewSchema ^ viewSchema2);" />
      <MemberSignature Language="F#" Value="static member ViewSchemasEquivalent : System.Web.UI.Design.IDataSourceViewSchema * System.Web.UI.Design.IDataSourceViewSchema -&gt; bool" Usage="System.Web.UI.Design.DataSourceDesigner.ViewSchemasEquivalent (viewSchema1, viewSchema2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewSchema1" Type="System.Web.UI.Design.IDataSourceViewSchema" />
        <Parameter Name="viewSchema2" Type="System.Web.UI.Design.IDataSourceViewSchema" />
      </Parameters>
      <Docs>
        <param name="viewSchema1"><see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />에서 파생되는 비교할 첫 번째 뷰입니다.</param>
        <param name="viewSchema2">비교할 두 번째 뷰입니다.</param>
        <summary>두 스키마 뷰가 같은지 여부를 나타내는 값을 제공합니다.</summary>
        <returns>두 개의 뷰가 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.DataSourceDesigner.ViewSchemasEquivalent%2A> 의 인스턴스가 없는 메서드를 사용할 수는 <xref:System.Web.UI.Design.DataSourceDesigner> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.IDataSourceViewSchema" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">디자인 타임 지원 확장</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ms171820(v=vs.120)">방법: 디자인 모드에서 컨트롤의 동작과 모양을 확장합니다</related>
      </Docs>
    </Member>
  </Members>
</Type>