<Type Name="DataSourceViewSchemaConverter" FullName="System.Web.UI.Design.DataSourceViewSchemaConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d87fd17b67ca75c69b600f9ebae227a0debf2065" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53512126" /></Metadata><TypeSignature Language="C#" Value="public class DataSourceViewSchemaConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataSourceViewSchemaConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.DataSourceViewSchemaConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class DataSourceViewSchemaConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceViewSchemaConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type DataSourceViewSchemaConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>데이터 소스 스키마의 필드를 나타내는 속성을 변환하기 위한 형식 변환기를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> 컨트롤 속성에 할당 하기 전에 개체 형식을 변환 하는 클래스입니다. 일반적으로 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> 문자열 개체 형식으로 변환 지원 하 고 연결된 된 컨트롤 속성에 할당 하기 위해 사용할 수 있는 표준 값의 목록을 제공 합니다. 표준 값 컬렉션에 현재 컨트롤에 대 한 데이터 소스 스키마의 필드 목록입니다.  
  
 를 지원 하기 위해 추가 개체 형식 변환에서 클래스를 파생 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> 시키고 합니다 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A> 및 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A> 추가 개체 형식에 대 한 메서드. 표준 할당 가능한 값 목록을 사용자 지정을 지원 하려면 재정의 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> 메서드.  
  
 적용은 <xref:System.ComponentModel.TypeConverterAttribute> 지정 하는 특성을 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> 컨트롤 속성에 대 한 형식 변환기 클래스입니다. 예를 들어,를 <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> 의 속성을 <xref:System.Web.UI.WebControls.DataControlField> 클래스 및 <xref:System.Web.UI.WebControls.BoundField.DataField%2A> 의 속성을 <xref:System.Web.UI.WebControls.BoundField> 사용 하 여 클래스를 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> 속성 형식 변환기로.  
  
> [!NOTE]
>  하지는 형식 변환기를 직접 액세스 해야 합니다. 대신 적절 한 변환기를 사용 하 여 호출을 <xref:System.ComponentModel.TypeDescriptor> 개체입니다. 자세한 내용은 예제를 참조 <xref:System.ComponentModel.TypeConverter>합니다.  
  
 합니다 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A> 메서드를 통해 사용 가능한 값 목록을 반환 변환기 지원함을 나타냅니다는 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> 메서드. <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive%2A> 메서드 목록 가능한 값에는 단독 목록이 아님을 나타냅니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
    <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
    <related type="Article" href="https://msdn.microsoft.com/library/4881917b-628f-4689-b872-472e4f8a4e3a">디자인 타임 아키텍처</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataSourceViewSchemaConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceViewSchemaConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataSourceViewSchemaConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.Design.DataSourceViewSchemaConverter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  하지는 형식 변환기를 직접 액세스 해야 합니다. 대신 적절 한 변환기를 사용 하 여 호출을 <xref:System.ComponentModel.TypeDescriptor> 개체입니다. 자세한 내용은 예제를 참조 <xref:System.ComponentModel.TypeConverter>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <related type="Article" href="https://msdn.microsoft.com/library/4881917b-628f-4689-b872-472e4f8a4e3a">디자인 타임 아키텍처</related>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="dataSourceViewSchemaConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 구현입니다.</param>
        <param name="sourceType">변환할 원본 형식입니다.</param>
        <summary>지정한 소스 형식이 연결된 컨트롤 속성의 형식으로 변환될 수 있는지 여부를 나타냅니다.</summary>
        <returns>변환기가 변환을 수행할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출을 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A> 결정 하는 방법 여부를 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A> 메서드는 소스 형식 변환을 지원 합니다.  
  
 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A> 메서드는 문자열에서 변환할 수 있으므로 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A> 메서드가 반환 되는 `true` 때 `sourceType` 문자열인입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <related type="Article" href="https://msdn.microsoft.com/library/4881917b-628f-4689-b872-472e4f8a4e3a">디자인 타임 아키텍처</related>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="dataSourceViewSchemaConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 구현입니다.</param>
        <param name="culture">지역화 기능을 지원하는 데 사용할 수 있는 <see cref="T:System.Globalization.CultureInfo" /> 개체입니다.</param>
        <param name="value">변환할 개체입니다.</param>
        <summary>지정한 개체를 연결된 컨트롤 속성의 형식으로 변환합니다.</summary>
        <returns>변환된 개체를 나타내는 <see cref="T:System.Object" /> 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우 `value` 가 문자열의 문자열 표현을 `value` 반환 됩니다. 하는 경우 `value` 는 `null`, 빈 문자열 ("")이 반환 됩니다. 지정 된 다른 모든 값에 대 한는 <xref:System.NotSupportedException> 예외가 throw 됩니다.  
  
 호출을 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A> 결정 하는 방법 여부를 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A> 메서드는 소스 형식 변환을 지원 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">변환을 수행할 수 없는 경우</exception>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <related type="Article" href="https://msdn.microsoft.com/library/4881917b-628f-4689-b872-472e4f8a4e3a">디자인 타임 아키텍처</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValues">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>컨트롤 속성에 할당할 수 있는 사용 가능한 값의 목록을 반환합니다.</summary>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <related type="Article" href="https://msdn.microsoft.com/library/4881917b-628f-4689-b872-472e4f8a4e3a">디자인 타임 아키텍처</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="dataSourceViewSchemaConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 구현입니다.</param>
        <summary>연결된 컨트롤 속성에 할당할 수 있는 사용 가능한 값의 목록을 반환합니다.</summary>
        <returns>연결된 컨트롤 속성에 할당할 사용 가능한 값을 포함한 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> 메서드를 <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> 지정 된 속성 `context` 개체를 가져옵니다는 <xref:System.Web.UI.IDataSourceViewSchemaAccessor> 구현 합니다. 경우는 <xref:System.Web.UI.IDataSourceViewSchemaAccessor> 구현을 사용할 수 있는 디자인 타임에 연결된 된 컨트롤에 대 한 데이터 원본 스키마에 액세스 하 고 연결 된 데이터 소스 스키마 보기에서 사용 가능한 필드 목록을 검색에 사용 됩니다.  
  
 사용 가능한 값의 컬렉션은 연결된 된 컨트롤에 대 한 데이터 소스 스키마의 필드에서 작성 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.DataSetViewSchema.GetFields" />
        <altmember cref="T:System.Web.UI.IDataSourceViewSchemaAccessor" />
        <altmember cref="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        <altmember cref="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <related type="Article" href="https://msdn.microsoft.com/library/4881917b-628f-4689-b872-472e4f8a4e3a">디자인 타임 아키텍처</related>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context, Type typeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context, class System.Type typeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValues (context As ITypeDescriptorContext, typeFilter As Type) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ typeFilter);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext * Type -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="dataSourceViewSchemaConverter.GetStandardValues (context, typeFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="typeFilter" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 구현입니다.</param>
        <param name="typeFilter">표준 값 목록에 포함할 필드를 필터링하는 데 사용되는 형식입니다.</param>
        <summary>연결된 컨트롤 속성에 할당할 수 있는 사용 가능한 값의 목록을 반환합니다.</summary>
        <returns>연결된 컨트롤 속성에 할당할 사용 가능한 값을 포함한 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <related type="Article" href="https://msdn.microsoft.com/library/4881917b-628f-4689-b872-472e4f8a4e3a">디자인 타임 아키텍처</related>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="dataSourceViewSchemaConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 구현입니다.</param>
        <summary>이 변환기에서 연결된 컨트롤 속성에 할당할 수 있는 가능한 모든 값이 포함된 목록을 반환할지 여부를 나타냅니다.</summary>
        <returns>이 변환기에서 연결된 컨트롤 속성에 할당할 수 있는 가능한 모든 값이 포함된 목록을 반환하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive%2A> 에 대 한 메서드를 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> 반환 `false`에서 반환 된 목록을 나타내는 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> 메서드 할당할 수 있는 가능한 모든 값의 단독 목록 인지 하지.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <related type="Article" href="https://msdn.microsoft.com/library/4881917b-628f-4689-b872-472e4f8a4e3a">디자인 타임 아키텍처</related>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="dataSourceViewSchemaConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">추가 컨텍스트 정보를 얻는 데 사용할 수 있는 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 구현입니다.</param>
        <summary>이 변환기에서 지정된 컨텍스트 내에서 컨트롤 속성에 할당할 수 있는 값 집합을 반환할지 여부를 나타냅니다.</summary>
        <returns>이 변환기에서 연결된 컨트롤 속성에 할당할 사용 가능한 값의 표준 집합을 반환하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A> 메서드는 변환기를 통해 사용 가능한 값 목록을 반환을 지원 하는지 여부를 나타냅니다는 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> 메서드.  
  
 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A> 에 대 한 메서드를 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> 개체를 반환 합니다 `true` 하는 경우 지정 된 `context` 제공 개체를 <xref:System.Web.UI.IDataSourceViewSchemaAccessor> 구현에서 해당 <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> 속성. <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> 메서드는 <xref:System.Web.UI.IDataSourceViewSchemaAccessor> 연결 된 데이터 소스 스키마의 사용 가능한 필드 목록을 검색 하려면 구현 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        <related type="Article" href="https://msdn.microsoft.com/library/4881917b-628f-4689-b872-472e4f8a4e3a">디자인 타임 아키텍처</related>
      </Docs>
    </Member>
  </Members>
</Type>