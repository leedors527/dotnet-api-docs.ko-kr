<Type Name="ExpressionEditor" FullName="System.Web.UI.Design.ExpressionEditor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eb01c3d6cf6e42b1709ab5acc0cf88f7b14094c3" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53389951" /></Metadata><TypeSignature Language="C#" Value="public abstract class ExpressionEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionEditor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionEditor abstract" />
  <TypeSignature Language="F#" Value="type ExpressionEditor = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>디자인 타임에 컨트롤 속성과 연결된 식을 계산하고 식 편집기 대화 상자에서 사용할 식 편집기 시트를 비주얼 디자인 호스트에 제공하는 데 사용할 속성과 메서드의 집합을 정의합니다. 이 클래스는 추상 클래스입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 와 같은 비주얼 디자이너 호스트 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]를 사용 하 여는 <xref:System.Web.UI.Design.ExpressionEditor> 클래스 사용자 지정 식 편집기 시트를 사용자에 게 제공 하 고 다음 디자인 타임 렌더링을 위해 선택한 식을 계산 합니다.  
  
 탐색할 때는 <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> 비주얼 디자이너 컨트롤 디자인 타임 속성 표에서 속성을 컨트롤 속성에 대 한 식 설정 대화 상자를 표시 합니다. 식 접두사 목록을 기반으로 식 형식을 선택할 수 있습니다. 목록에서 식 접두사를 선택 하는 경우 비주얼 디자이너를 사용 하 여 연결 된 <xref:System.Web.UI.Design.ExpressionEditor> 고 <xref:System.Web.UI.Design.ExpressionEditorSheet> 개체를 설정 하려면 평가 하 고 해당 형식의 식에 대 한 구문을 기반으로 하는 식 문자열을 변환 합니다. 연결 된 컨트롤 속성에 대 한 식을 설정 하 고 계산된 된 식 결과 사용 하 여 컨트롤 디자인 화면에 렌더링 되는 속성 값을 할당 하는 비주얼 디자이너.  
  
 정적 <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> 메서드는 특정 식 접두사 또는 식 작성기 연관 된 식 편집기를 가져옵니다. 합니다 <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> 속성에 대 한는 <xref:System.Web.UI.Design.ExpressionEditor> 개체 구성 된 식 접두사를 반환 합니다. <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> 메서드는 입력된 식 문자열을 계산 합니다. <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> 메서드가 반환 되는 <xref:System.Web.UI.Design.ExpressionEditorSheet> 식 대화 상자에서 사용자 지정 식 속성에 대 한 메시지를 표시 하는 구현 합니다.  
  
 일반적으로 새로운 식 형식을 디자인 타임 지원, 있습니다 고유한 식 접두사를 정의 하 고 제공 사용자 지정 <xref:System.Web.Compilation.ExpressionBuilder> 고 <xref:System.Web.UI.Design.ExpressionEditor> 구현 합니다. 필요에 따라 사용자 지정을 제공할 수 있습니다 <xref:System.Web.UI.Design.ExpressionEditorSheet> 식 대화 상자에서 식을 구성 하는 데 사용 되는 속성을 정의 하는 구현 합니다.  
  
 사용자 지정 식 유형을 확인 하 고 식을 식 작성기와 식 편집기를 사용 하 여 연결 하는 식 접두사입니다. 식 접두사는 연결 된 인스턴스를 만드는 데 페이지에서 사용자 지정 식을 구문 분석 되 면 <xref:System.Web.Compilation.ExpressionBuilder> 고 <xref:System.Web.UI.Design.ExpressionEditor> 클래스입니다. 식 접두사 식 작성기와 식 편집기에 연결 하려면 적용 된 <xref:System.Web.Compilation.ExpressionEditorAttribute> 및 <xref:System.Web.Compilation.ExpressionPrefixAttribute> 사용자 지정 특성 <xref:System.Web.Compilation.ExpressionBuilder> 클래스 및에서 식 작성기에 대 한 식 접두사를 구성 합니다 `expressionBuilders` 웹 구성 파일의 요소입니다. 접두사는 필수 이지만 좋습니다.  
  
   
  
## Examples  
 다음 코드 예제에서 파생 하는 방법에 설명 합니다 <xref:System.Web.UI.Design.ExpressionEditor> 클래스 사용자 지정 식 편집기를 정의 합니다.  
  
 [!code-csharp[CustomExpressionEditor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/customexpressioneditor/cs/CustomAppSettingsExpression.cs#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>다음 단계는 사용자 지정을 파생 시키는 데 필요한 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 클래스: 
-재정의 된 <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> 디자인 타임에 사용자 지정 식 유형을 평가 하는 방법입니다.  
  
-선택적으로 재정의 된 <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> 결합 되어 사용자 지정 식을 구성 하는 속성을 정의 하는 사용자 지정 클래스를 반환 하는 방법입니다.  
  
적용 합니다 <see cref="T:System.Web.Compilation.ExpressionEditorAttribute" /> 특성을 <see cref="T:System.Web.Compilation.ExpressionBuilder" /> 클래스 파생 된 식 편집기 클래스를 사용 하 여 사용자 지정 식 작성기를 연결 하는 선언 합니다.  
  
예를 들어 합니다 <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> 클래스에서 파생 되는 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 클래스 및 평가 하 고 디자인 타임에 리소스 문자열 참조 컨트롤 속성을 사용 하 여 연결에 대 한 구현을 제공 합니다. 합니다 <see cref="T:System.Web.Compilation.ResourceExpressionBuilder" /> 클래스는 식 접두사를 사용 하 여 연결 됩니다 <see langword="Resources" /> 하며 <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> 구현 합니다. 합니다 <see cref="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> 메서드가 반환 되는 <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />, 리소스 참조 식을 구성 하는 개별 속성을 정의 하는 합니다.</para></block>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
    <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
    <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
    <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
    <altmember cref="T:System.Web.Configuration.ExpressionBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.Design.ExpressionEditor" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때문에 <xref:System.Web.UI.Design.ExpressionEditor> 클래스는 추상 클래스, 인스턴스를 만들 수 없습니다는 <xref:System.Web.UI.Design.ExpressionEditor> 사용 하 여 직접 클래스를 <xref:System.Web.UI.Design.ExpressionEditor.%23ctor%2A> 생성자.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 하는 경우는 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 클래스에서 재정의 <see cref="M:System.Web.UI.Design.ExpressionEditor.#ctor" /> 생성자에 식 편집기 구현에 대 한 사용자 지정 초기화 작업을 구현 합니다.</para></block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public abstract object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EvaluateExpression(string expression, object parseTimeData, class System.Type propertyType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EvaluateExpression (expression As String, parseTimeData As Object, propertyType As Type, serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EvaluateExpression(System::String ^ expression, System::Object ^ parseTimeData, Type ^ propertyType, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member EvaluateExpression : string * obj * Type * IServiceProvider -&gt; obj" Usage="expressionEditor.EvaluateExpression (expression, parseTimeData, propertyType, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="parseTimeData" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">계산할 식 문자열입니다. 식에 식 접두사가 없습니다.</param>
        <param name="parseTimeData"><paramref name="expression" /> 계산을 위한 추가적인 구문 분석 정보를 포함하는 개체입니다. 이 개체는 대개 식 작성기에서 제공합니다.</param>
        <param name="propertyType"><paramref name="expression" />이 바인딩되는 컨트롤 속성의 형식입니다.</param>
        <param name="serviceProvider">디자이너 호스트에서 제공하는 서비스 공급자 구현으로, 추가 디자인 타임 서비스를 가져오는 데 사용됩니다.</param>
        <summary>식 문자열을 계산하고 컨트롤 속성에 디자인 타임 값을 제공합니다.</summary>
        <returns>식 계산에 성공하면 계산된 식 문자열이 참조하는 개체이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 비주얼 디자이너 호스트를 사용 하는 <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> 메서드 식을 계산 하 고 연결된 된 컨트롤 속성에 대 한 디자인 타임 값을 제공 합니다.  
  
 비주얼 디자이너를 사용 하는 <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression%2A?displayProperty=nameWithType> 디자인 타임에, 다음 호출 식 문자열을 구문 분석 하는 방법의 <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> 구문 분석 된 식 데이터를 사용 하 여 메서드. 비주얼 디자이너 컨트롤 디자인 화면에 렌더링 되는 속성 값을 할당할 계산된 된 식 결과 사용 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 된 클래스는 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 클래스를 재정의 해야 합니다 <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> 디자인 타임에 사용자 지정 식 유형을 평가 하는 방법.  
  
최소한는 <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> 구현에는 다음 단계를 사용 해야 합니다. 
1.  식 문자열을 계산 하 고 식에서 참조 되는 개체를 결정 합니다.  
  
2.  반환 <see langword="null" />이면 식 문자열을 평가할 수 없습니다.  
  
3.  사용 된 <see cref="M:System.Type.IsAssignableFrom(System.Type)" /> 메서드를 <paramref name="propertyType" /> 확인 하려면 참조 된 개체 수 할당할 수 있는지 여부 제어 속성 형식에 직접 후 다음 작업 중 하나를 수행 하 고 결과 따라: 
-참조 된 개체는 컨트롤 속성에 직접 할당할 수 있는 경우 식에 대 한 참조 된 개체를 반환 합니다.  
  
-참조 되는 개체는 단순 형식의 경우 문자열과 같은 참조 된 개체를 반환 합니다.  
  
-그렇지 않으면 참조 된 개체를 할당 하거나 속성 형식으로 변환할 수 있는지 여부를 결정 합니다.  
  
4.  사용 된 <see cref="Overload:System.ComponentModel.TypeConverter.CanConvertFrom" /> 메서드를 <see cref="T:System.ComponentModel.TypeConverter" /> 개체에 대 한 <paramref name="propertyType" /> 확인 여부 참조 된 개체 수 변환할 컨트롤 속성 형식으로 선택한 후 다음 작업 중 하나를 수행 하 고 결과 따라: 
-개체는 컨트롤 속성 형식으로 변환할 수 있는 경우 변환 된 개체를 통해 반환 된 <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> 메서드.  
  
-참조 되는 개체를 할당 하거나 변환할 수 없는 경우 <paramref name="propertyType" />, 참조 된 개체를 반환 합니다.  
  
필요에 따라 합니다 <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> 구현을 사용할 수는 <paramref name="parseTimeData" /> 에서 제공 하는 개체는 <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> 최적화 또는 입력된 식 문자열의 평가에 도움이 되는 구현 합니다.</para></block>
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
      </Docs>
    </Member>
    <Member MemberName="ExpressionPrefix">
      <MemberSignature Language="C#" Value="public string ExpressionPrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpressionPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpressionPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpressionPrefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpressionPrefix : string" Usage="System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>식 편집기 구현에서 지원되는 식 문자열을 식별하는 식 접두사를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.Design.ExpressionEditor" />에서 파생되는 클래스에서 지원하는 식의 접두사를 나타내는 문자열이거나, 식 편집기에 연결된 식 접두사가 없으면 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자 지정 식 유형을 확인 하 고 식을 식 작성기와 식 편집기를 사용 하 여 연결 하는 식 접두사입니다. 식 접두사는 연결 된 인스턴스를 만드는 데 페이지에서 사용자 지정 식을 구문 분석 되 면 <xref:System.Web.Compilation.ExpressionBuilder> 고 <xref:System.Web.UI.Design.ExpressionEditor> 클래스입니다. 식 접두사 식 작성기와 식 편집기에 연결 하려면 적용 된 <xref:System.Web.Compilation.ExpressionEditorAttribute> 및 <xref:System.Web.Compilation.ExpressionPrefixAttribute> 사용자 지정 특성 <xref:System.Web.Compilation.ExpressionBuilder> 클래스 및에서 식 작성기에 대 한 식 접두사를 구성 합니다 `expressionBuilders` 웹 구성 파일의 요소입니다.  
  
 파생된 클래스가 재정의 하지 않으면 일반적으로 <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> 속성입니다. 기본 <xref:System.Web.UI.Design.ExpressionEditor> 집합 클래스를 <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> 값에 기반 합니다 <xref:System.Web.Compilation.ExpressionPrefixAttribute> 연결 된 특성 <xref:System.Web.Compilation.ExpressionBuilder> 개체.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExpressionEditor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>식 접두사 또는 식 작성기와 연결된 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 구현을 반환합니다.</summary>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExpressionEditor">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ExpressionEditor GetExpressionEditor (string expressionPrefix, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ExpressionEditor GetExpressionEditor(string expressionPrefix, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExpressionEditor (expressionPrefix As String, serviceProvider As IServiceProvider) As ExpressionEditor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ExpressionEditor ^ GetExpressionEditor(System::String ^ expressionPrefix, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="static member GetExpressionEditor : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditor" Usage="System.Web.UI.Design.ExpressionEditor.GetExpressionEditor (expressionPrefix, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionPrefix" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expressionPrefix">연결된 식 편집기를 찾는 데 사용되는 식 접두사입니다.</param>
        <param name="serviceProvider">디자이너 호스트에서 제공하는 서비스 공급자 구현으로, 추가 디자인 타임 서비스를 가져오는 데 사용됩니다.</param>
        <summary>지정된 식 접두사와 연결된 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 구현을 반환합니다.</summary>
        <returns><paramref name="expressionPrefix" />와 연결된 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 구현이거나, <paramref name="expressionPrefix" />가 정의되어 있지 않거나 <see cref="T:System.Web.UI.Design.ExpressionEditor" />와 연결되어 있지 않으면 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 정적을 사용 하 여 <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> 찾으려고 메서드 오버 로드는 <xref:System.Web.UI.Design.ExpressionEditor> 특정 식 접두사 또는 식 작성기 형식과 연결 된 개체입니다.  
  
 식 접두사에는 각 사용자 지정 식 형식에 대해 연결 된 식 작성기 및 식 편집기를 식별합니다. 식 접두사는 연결 된 인스턴스를 만드는 데 페이지에서 사용자 지정 식을 구문 분석 되 면 <xref:System.Web.Compilation.ExpressionBuilder> 고 <xref:System.Web.UI.Design.ExpressionEditor> 클래스입니다.  
  
 식 접두사 식 작성기와 식 편집기에 연결 하려면 적용 된 <xref:System.Web.Compilation.ExpressionEditorAttribute> 및 <xref:System.Web.Compilation.ExpressionPrefixAttribute> 사용자 지정 특성 <xref:System.Web.Compilation.ExpressionBuilder> 클래스 및에서 식 작성기에 대 한 식 접두사를 구성 합니다 `expressionBuilders` 웹 구성 파일의 요소입니다.  
  
 식 접두사에 대 한 연결된 된 식 편집기를 찾는 합니다 <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> 메서드를 사용할 수 있는 열거 <xref:System.Web.Compilation.ExpressionBuilder> 일치 하는 접두사에 대 한 구현을 합니다. 합니다 <xref:System.Web.Compilation.ExpressionBuilder> 구현에서 구성할 수 있습니다는 `expressionBuilders` 웹 구성 파일의 섹션입니다. 사용할 수 있는 경우 <xref:System.Web.Compilation.ExpressionBuilder> 구현 하는 식 접두사를 정의 <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> 메서드에 지정 된 형식을 반환 합니다 <xref:System.Web.Compilation.ExpressionEditorAttribute> 특성을 <xref:System.Web.Compilation.ExpressionBuilder> 메타 데이터입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serviceProvider" />가 <see langword="null" />인 경우</exception>
        <altmember cref="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditor">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ExpressionEditor GetExpressionEditor (Type expressionBuilderType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ExpressionEditor GetExpressionEditor(class System.Type expressionBuilderType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExpressionEditor (expressionBuilderType As Type, serviceProvider As IServiceProvider) As ExpressionEditor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ExpressionEditor ^ GetExpressionEditor(Type ^ expressionBuilderType, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="static member GetExpressionEditor : Type * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditor" Usage="System.Web.UI.Design.ExpressionEditor.GetExpressionEditor (expressionBuilderType, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionBuilderType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expressionBuilderType">파생된 식 작성기 클래스의 형식으로, 연결된 식 편집기를 찾는 데 사용됩니다.</param>
        <param name="serviceProvider">디자이너 호스트에서 제공하는 서비스 공급자 구현으로, 추가 디자인 타임 서비스를 가져오는 데 사용됩니다.</param>
        <summary>지정된 식 작성기 형식과 연결된 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 구현을 반환합니다.</summary>
        <returns><paramref name="expressionBuilderType" />과 연결된 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 구현이거나, <paramref name="expressionBuilderType" />이 없거나 <see cref="T:System.Web.UI.Design.ExpressionEditor" />와 연결되어 있지 않으면 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 정적을 사용 하 여 <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> 찾으려고 오버 로드는 <xref:System.Web.UI.Design.ExpressionEditor> 특정 식 접두사 또는 식 작성기 형식과 연결 된 개체입니다.  
  
 식 접두사에는 각 사용자 지정 식 형식에 대해 연결 된 식 작성기 및 식 편집기를 식별합니다. 식 접두사는 연결 된 인스턴스를 만드는 데 페이지에서 사용자 지정 식을 구문 분석 되 면 <xref:System.Web.Compilation.ExpressionBuilder> 고 <xref:System.Web.UI.Design.ExpressionEditor> 클래스입니다.  
  
 식 접두사 식 작성기와 식 편집기에 연결 하려면 적용 된 <xref:System.Web.Compilation.ExpressionEditorAttribute> 및 <xref:System.Web.Compilation.ExpressionPrefixAttribute> 사용자 지정 특성 <xref:System.Web.Compilation.ExpressionBuilder> 클래스 및에서 식 작성기에 대 한 식 접두사를 구성 합니다 `expressionBuilders` 웹 구성 파일의 요소입니다.  
  
 합니다 <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> 메서드를 사용할 수 있는 열거 <xref:System.Web.Compilation.ExpressionBuilder> 찾으려고 구현 `expressionBuilderType`합니다. 합니다 <xref:System.Web.Compilation.ExpressionBuilder> 구현에서 구성할 수 있습니다는 `expressionBuilders` 웹 구성 파일의 섹션입니다. 경우 `expressionBuilderType` 집합을 사용할 수 있는 <xref:System.Web.Compilation.ExpressionBuilder> 구현을 <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> 메서드에 지정 된 형식을 반환 합니다 <xref:System.Web.Compilation.ExpressionEditorAttribute> 특성은 <xref:System.Web.Compilation.ExpressionBuilder> 메타 데이터입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="expressionBuilderType" />가 <see langword="null" />인 경우  
  
또는 
 <paramref name="serviceProvider" />가 <see langword="null" />인 경우</exception>
        <altmember cref="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditorSheet">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressionEditorSheet (expression As String, serviceProvider As IServiceProvider) As ExpressionEditorSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::Design::ExpressionEditorSheet ^ GetExpressionEditorSheet(System::String ^ expression, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member GetExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet&#xA;override this.GetExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="expressionEditor.GetExpressionEditorSheet (expression, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditorSheet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">컨트롤 속성에 대해 설정된 식 문자열로, 식 편집기 시트를 초기화하는 데 사용됩니다.</param>
        <param name="serviceProvider">디자이너 호스트에서 제공하는 서비스 공급자 구현으로, 추가 디자인 타임 서비스를 가져오는 데 사용됩니다.</param>
        <summary>현재 식 편집기와 연결된 식 편집기 시트를 반환합니다.</summary>
        <returns>사용자 지정 식 속성을 정의하는 <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> 메서드가 반환 되는 <xref:System.Web.UI.Design.ExpressionEditorSheet> 결합 되어 사용자 지정 식을 구성 하는 문자열을 정의 하는 구현 합니다. 비주얼 디자이너 식 편집기 시트를 사용 하 여 사용자 지정 식을 결합 하는 하나 이상의 문자열에 대 한 프롬프트. 기본 클래스 메서드는 단일 입력된 문자열을 사용 하 여 식을 구성 하는 기본 식 편집기 시트를 반환 합니다. 식 편집기 시트를 식에 대 한 속성 표를 정의합니다. 따라서 식 편집기를 노출 하는 속성 대화 상자에서 식에 대해 정의 될 수 있는 속성을 됩니다.  
  
 파생 된 클래스는 <xref:System.Web.UI.Design.ExpressionEditor> 필요에 따라 클래스 재정의할 수는 <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> 사용자 지정 식 편집기 시트를 제공 하는 방법. 사용자 지정 식 편집기 시트를 식 문자열을 폼에 함께 결합 되는 여러 속성에 대 한 디자인 타임에 입력을 허용할 수 있습니다.  
  
 예를 들어 합니다 <xref:System.Web.UI.Design.ResourceExpressionEditor> 클래스에서 파생 되는 <xref:System.Web.UI.Design.ExpressionEditor> 클래스 및 평가 하 고 디자인 타임에 리소스 문자열 참조 컨트롤 속성을 사용 하 여 연결에 대 한 구현을 제공 합니다. 합니다 <xref:System.Web.Compilation.ResourceExpressionBuilder> 클래스는 식 접두사를 사용 하 여 연결 됩니다 `Resources` 하며 <xref:System.Web.UI.Design.ResourceExpressionEditor> 구현 합니다. 합니다 <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A?displayProperty=nameWithType> 메서드가 반환 되는 <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, 리소스 참조 식을 구성 하는 개별 속성을 정의 하는 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>일반적으로 새로운 식 형식을 디자인 타임에 제공 하려면 있습니다 고유한 식 접두사를 정의 하 고 사용자 지정을 제공 <see cref="T:System.Web.Compilation.ExpressionBuilder" /> 고 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 구현 합니다. 필요에 따라 사용자 지정을 제공할 수 있습니다 <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> 식을 구성 하는 데 사용 되는 속성을 정의 하는 구현 합니다. 구성 파일의 접두사를 정의 하는 경우에 적용할 수도 있습니다는 <see cref="T:System.Web.Compilation.ExpressionPrefixAttribute" /> 개체 및 <see cref="T:System.Web.Compilation.ExpressionEditorAttribute" /> 개체입니다.  
  
재정의 <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> 메서드를 사용자 지정 식에 여러 속성에 대 한 디자인 타임에 입력을 정의 하는 식 편집기 시트를 반환 합니다. 비주얼 디자이너를 호출 하는 식 편집기 형식과 컨트롤 속성을 선택 하면는 <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> 컨트롤 속성에 설정 하는 메서드를 제공 현재 식 문자열입니다. 사용 하 여 <paramref name="expression" /> 식 속성에 대 한 초기 값을 설정 합니다. 사용 하 여 <paramref name="serviceProvider" /> 사용자 지정 식을 시트 생성자를 초기화 하 고 디자이너 호스트에서 제공 하는 서비스에 액세스할 수 있습니다. 예를 들어 호출를 <see cref="M:System.IServiceProvider.GetService(System.Type)" /> 메서드는 <see cref="T:System.Web.UI.Design.IWebApplication" /> 형식 액세스 프로젝트 항목, 문서 또는 비주얼 디자이너를 통해 제공 되는 구성 파일 세부 정보입니다.</para></block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>