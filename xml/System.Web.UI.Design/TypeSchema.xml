<Type Name="TypeSchema" FullName="System.Web.UI.Design.TypeSchema">
  <Metadata><Meta Name="ms.openlocfilehash" Value="10b70a9973c25862f1bf46e47d3e73d73cd97a23" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59348156" /></Metadata><TypeSignature Language="C#" Value="public sealed class TypeSchema : System.Web.UI.Design.IDataSourceSchema" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeSchema extends System.Object implements class System.Web.UI.Design.IDataSourceSchema" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.TypeSchema" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeSchema&#xA;Implements IDataSourceSchema" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeSchema sealed : System::Web::UI::Design::IDataSourceSchema" />
  <TypeSignature Language="F#" Value="type TypeSchema = class&#xA;    interface IDataSourceSchema" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.Design.IDataSourceSchema</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>개체 형식의 구조 또는 스키마를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.TypeSchema> 클래스는 해당 클래스의 인스턴스가 지정 된 특정 클래스에 대 한 정보를 제공 합니다. 예를 들어 한 <xref:System.Data.DataSet> 개체를 <xref:System.Web.UI.WebControls.GridView> 개체 또는 사용자가 만든 사용자 지정 클래스, 메서드 및 속성의 인스턴스 개체가 파생 되는 클래스에 대 한 정보를 제공 합니다. 클래스에 대 한 특정 인스턴스에 대 한 정보를 제공 하지 않습니다.  
  
 <xref:System.Web.UI.Design.TypeSchema> 클래스 사용자 지정 컨트롤을 미리 보기에 대 한 샘플 데이터 준비에서 지원 하기 위해 사용자 지정 컨트롤 디자이너에서 사용 됩니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.IDataSourceSchema" />
    <altmember cref="T:System.Type" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/37899azc(v=vs.100)">디자인 타임 지원 확장</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeSchema (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TypeSchema.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeSchema(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Design.TypeSchema : Type -&gt; System.Web.UI.Design.TypeSchema" Usage="new System.Web.UI.Design.TypeSchema type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">개체를 설명하는 <see cref="T:System.Type" />입니다.</param>
        <summary>제공된 <see cref="T:System.Web.UI.Design.TypeSchema" /> 개체를 사용하여 <see cref="T:System.Type" /> 클래스의 새 인스턴스를 만듭니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="type" />가 <see langword="null" />입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetViews">
      <MemberSignature Language="C#" Value="public System.Web.UI.Design.IDataSourceViewSchema[] GetViews ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.Design.IDataSourceViewSchema[] GetViews() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.TypeSchema.GetViews" />
      <MemberSignature Language="VB.NET" Value="Public Function GetViews () As IDataSourceViewSchema()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Web::UI::Design::IDataSourceViewSchema ^&gt; ^ GetViews();" />
      <MemberSignature Language="F#" Value="abstract member GetViews : unit -&gt; System.Web.UI.Design.IDataSourceViewSchema[]&#xA;override this.GetViews : unit -&gt; System.Web.UI.Design.IDataSourceViewSchema[]" Usage="typeSchema.GetViews " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.Design.IDataSourceSchema.GetViews</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.IDataSourceViewSchema[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>뷰의 스키마 설명자 배열을 데이터 소스로 가져옵니다.</summary>
        <returns><see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 인스턴스의 배열이거나, <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 인터페이스를 구현하는 클래스 인스턴스의 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하지만 합니다 <xref:System.Web.UI.Design.TypeSchema.GetViews%2A> 메서드는 항상 배열을 반환 <xref:System.Web.UI.Design.IDataSourceViewSchema> 구현 하는 개체를 <xref:System.Web.UI.Design.IDataSourceViewSchema> 인터페이스를 정확 하 게 반환 값의 인스턴스를 만들 때 제공 되는 개체에 종속 됩니다.는 <xref:System.Web.UI.Design.TypeSchema> 클래스.  
  
 다음 표에서 반환 값의 예제를 제공합니다.  
  
|내부 형식|반환 값|  
|---------------------|------------------|  
|<xref:System.Data.DataSet>입니다.|형식 배열의 <xref:System.Web.UI.Design.DataSetViewSchema>, 마다 하나씩 <xref:System.Data.DataTable>합니다.|  
|<xref:System.Data.DataTable>입니다.|포함 하는 단일 항목 배열은 <xref:System.Web.UI.Design.DataSetViewSchema>합니다.|  
|<xref:System.Collections.IEnumerable> 형식|포함 하는 단일 항목 배열은 <xref:System.Web.UI.Design.IDataSourceViewSchema>합니다.|  
|다른 형식|포함 하는 단일 항목 배열은 <xref:System.Web.UI.Design.IDataSourceViewSchema>합니다.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.IDataSourceViewSchema" />
        <altmember cref="T:System.Web.UI.Design.DataSetViewSchema" />
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
  </Members>
</Type>