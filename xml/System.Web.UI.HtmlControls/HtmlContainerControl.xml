<Type Name="HtmlContainerControl" FullName="System.Web.UI.HtmlControls.HtmlContainerControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2f70c71d0a93068d55a4a8d4dff1813de89f522e" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55350830" /></Metadata><TypeSignature Language="C#" Value="public abstract class HtmlContainerControl : System.Web.UI.HtmlControls.HtmlControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HtmlContainerControl extends System.Web.UI.HtmlControls.HtmlControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HtmlContainerControl&#xA;Inherits HtmlControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlContainerControl abstract : System::Web::UI::HtmlControls::HtmlControl" />
  <TypeSignature Language="F#" Value="type HtmlContainerControl = class&#xA;    inherit HtmlControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>여는 태그와 닫는 태그를 포함하는 데 필요한 HTML 요소에 매핑되는 HTML 서버 컨트롤의 추상 기본 클래스로 사용됩니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 닫는 태그를 사용 하 여 가장 일반적인 컨트롤은는 `<form>`, `<table>`를 `<tr>`, `<td>`를 `<a>`, 및 `<span>` 요소입니다.  
  
 합니다 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A> 하 고 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A> 속성을 열고 닫는 태그 사이 있는 내용을 조작할 수 <xref:System.Web.UI.HtmlControls.HtmlContainerControl>-컨트롤을 파생 합니다.  
  
 인스턴스의 초기 속성 값의 목록을 <xref:System.Web.UI.HtmlControls.HtmlContainerControl>, 참조는 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.%23ctor%2A> 생성자입니다.  
  
 이 클래스의 새 인스턴스를 직접 만들지 는지 않습니다.  
  
> [!CAUTION]
>  사용 하는 경우는 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A> HTML로 인코딩되지 않은 태그와 HTML 서버 컨트롤, 텍스트의 닫는 태그 사이의 텍스트를 지정 하는 속성입니다. 이 텍스트에 HTML 태그 내에서 스크립트를 포함할 수 있습니다. 사용 하는 경우는 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A> 속성인 보안 취약점을 줄이는 값의 유효성을 검사 해야 합니다. 그렇지 않은 경우 사용 하는 것이 좋습니다는 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A> 속성 대신 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A> 동적으로 웹 페이지에서 메시지를 생성 하려면이 클래스의 속성입니다.  
  
 [!code-aspx-csharp[Classic HtmlContainerControl Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlContainerControl Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlContainerControl Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlContainerControl Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlControl" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HtmlContainerControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HtmlContainerControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>기본값을 사용하여 <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하 여 만들고의 새 인스턴스를 초기화 하는 <xref:System.Web.UI.HtmlControls.HtmlContainerControl> 기본값을 사용 하 여 클래스입니다.  
  
> [!NOTE]
>  이 클래스의 인스턴스를 직접 생성 되지 않습니다. 이 생성자는이 클래스에 정의 된 속성을 초기화 하기 위해 다른 HTML 컨트롤 클래스의 생성자에서 호출 됩니다.  
  
 다음 표에서 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Web.UI.HtmlControls.HtmlContainerControl>합니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|리터럴 문자열 "확장"입니다.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlContainerControl (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlContainerControl(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlControls.HtmlContainerControl : string -&gt; System.Web.UI.HtmlControls.HtmlContainerControl" Usage="new System.Web.UI.HtmlControls.HtmlContainerControl tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">컨트롤의 태그 이름을 지정하는 문자열입니다.</param>
        <summary>지정된 태그 이름을 사용하여 <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하 여 만들고의 새 인스턴스를 초기화 하는 <xref:System.Web.UI.HtmlControls.HtmlContainerControl> 클래스 지정된 된 태그를 사용 합니다.  
  
> [!NOTE]
>  이 클래스의 인스턴스를 직접 생성 되지 않습니다. 이 생성자는이 클래스에 정의 된 속성을 초기화 하기 위해 다른 HTML 컨트롤 클래스의 생성자에서 호출 됩니다.  
  
 다음 표에서 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Web.UI.HtmlControls.HtmlContainerControl>합니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|지정 된 값을 `tag` 매개 변수입니다.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="htmlContainerControl.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>서버 컨트롤의 자식 컨트롤(리터럴 및 서버)을 보유할 새 <see cref="T:System.Web.UI.ControlCollection" /> 개체를 만듭니다.</summary>
        <returns><see cref="T:System.Web.UI.HtmlControls.HtmlControl" /> 자식 서버 컨트롤이 들어 있는 <see cref="T:System.Web.UI.ControlCollection" />입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlControl.CreateControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="InnerHtml">
      <MemberSignature Language="C#" Value="public virtual string InnerHtml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerHtml" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InnerHtml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerHtml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerHtml : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>지정된 HTML 서버 컨트롤의 여는 태그 및 닫는 태그 사이에 있는 내용을 가져오거나 설정합니다.</summary>
        <value>HTML 서버 컨트롤의 여는 태그 및 닫는 태그 사이에 있는 HTML 콘텐츠입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A> 속성을 프로그래밍 방식으로 열고 HTML 서버 컨트롤의 닫는 태그 사이의 콘텐츠를 수정 합니다.  
  
 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A> 속성 HTML 엔터티 간의 같은 특수 문자를 자동으로 암호화 하지 않습니다. HTML 엔터티를 사용 하면 같은 특수 문자를 표시 하는 `<` 문자는 브라우저는 일반적으로 특별 한 의미를 갖는 것으로 해석 됩니다. `<` 문자 태그의 시작으로 해석 되 고 페이지에 표시 되지 않습니다. 표시할 합니다 `<` 문자를 엔터티를 사용 해야 `&lt;`합니다.  
  
 예를 들어 경우는 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A> 속성이로 설정 되어 `"<b> Hello </b>"`의 `<` 및 `>` 문자 변환 되지 않습니다 `&lt;` 및 `&gt;`, 각각. 렌더링된 된 출력은 계속: \<b > Hello  \< /b >. 브라우저에서 탐지는 `<b>` 태그 및 텍스트를 안녕하세요, 굵은 글꼴로 표시를 합니다.  
  
> [!CAUTION]
>  텍스트를 HTML로 인코딩되지 않은, 때문에 텍스트에 태그 HTML 내에서 스크립트를 포함할 수 있습니다. 이 속성을 동적으로 사용자 입력을 사용 하 여 설정, 보안 취약점을 줄이는 값의 유효성을 검사 해야 합니다. 자세한 내용은 [보안 및 사용자 입력](~/docs/standard/security/security-and-user-input.md)합니다.  
  
 자동 HTML 인코딩 및 디코딩를 제공 하려면 사용 된 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A> 속성입니다.  
  
> [!NOTE]
>  자식 컨트롤이 없는 경우는 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A> 속성 값이 들어 <xref:System.String.Empty?displayProperty=nameWithType>합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A> 속성을 동적으로 문자 메시지를 설정 합니다.  
  
 [!code-aspx-csharp[Classic HtmlContainerControl Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlContainerControl Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlContainerControl Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlContainerControl Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">HTML 서버 컨트롤이 두 개 이상 있는 경우  
  
또는 
HTML 서버 컨트롤이 <see cref="T:System.Web.UI.LiteralControl" /> 또는 <see cref="T:System.Web.UI.DataBoundLiteralControl" />이 아닌 경우</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText" />
        <altmember cref="M:System.Web.UI.Control.IsLiteralContent" />
        <altmember cref="M:System.Web.UI.Control.HasControls" />
        <altmember cref="T:System.Web.UI.DataBoundLiteralControl" />
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public virtual string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerText : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlContainerControl.InnerText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>지정된 HTML 서버 컨트롤의 여는 태그 및 닫는 태그 사이에 있는 텍스트를 가져오거나 설정합니다.</summary>
        <value>HTML 서버 컨트롤의 여는 태그 및 닫는 태그 사이에 있는 텍스트입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A> 속성을 프로그래밍 방식으로 열고 HTML 서버 컨트롤의 닫는 태그 사이의 텍스트를 수정 합니다.  
  
 달리 합니다 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A> 속성을 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A> 속성은 자동으로 HTML 엔터티 사이에 특수 문자를 인코딩합니다. HTML 엔터티를 사용 하면 같은 특수 문자를 표시 하는 `<` 문자는 브라우저는 일반적으로 특별 한 의미를 갖는 것으로 해석 됩니다. `<` 문자 태그의 시작으로 해석 되 고 페이지에 표시 되지 않습니다. 표시할 합니다 `<` 문자를 엔터티를 사용 해야 `&lt;`합니다.  
  
 예를 들어 경우는 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A> 속성이 `"<b> Hello </b>"`의 `<` 및 `>` 기호 변환할 `&lt;` 및 `&gt;`각각. 렌더링 된 출력 됩니다. &lt; b &gt; Hello &lt; /b &gt;. 합니다 `&lt;` 및 `&gt;` 엔터티 477860 이러한 문자는 페이지에 표시 되는 브라우저입니다. 브라우저 감지 하지는 `<b>` 태그 및 텍스트를 굵은 글꼴로 표시 합니다. 페이지에 표시 되는 텍스트가: \<b > Hello  \< /b >.  
  
 자동 HTML 인코딩 및 디코딩를 방지 하려면 사용 된 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A> 속성입니다.  
  
> [!NOTE]
>  자식 컨트롤이 없는 경우는 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A> 속성 값이 들어 <xref:System.String.Empty?displayProperty=nameWithType>합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 HTML 인코딩 서비스를 통해 사용할 수는 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A> 속성입니다.  
  
 [!code-aspx-csharp[Classic HtmlContainerControl.InnerText Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlContainerControl.InnerText Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlContainerControl.InnerText Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlContainerControl.InnerText Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">HTML 서버 컨트롤이 두 개 이상 있는 경우  
  
또는 
HTML 서버 컨트롤이 <see cref="T:System.Web.UI.LiteralControl" /> 또는 <see cref="T:System.Web.UI.DataBoundLiteralControl" />이 아닌 경우</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="htmlContainerControl.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">복원할 컨트롤 상태를 나타내는 <see cref="T:System.Object" />입니다.</param>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> 메서드에서 저장한 이전 페이지 요청에서 <see cref="M:System.Web.UI.Control.SaveViewState" /> 컨트롤의 뷰 상태를 복원합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는.NET Framework 인프라에서 기본적으로 사용 하며 사용자 코드에서 직접 사용할 수 없습니다. 그러나 컨트롤 개발자가 사용자 지정 서버 컨트롤에서 해당 뷰 상태를 복원 하는 방법을 지정 하려면이 메서드를 재정의할 수 있습니다. 자세한 내용은 [ASP.NET 상태 관리 개요](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))합니다.  
  
 합니다 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.LoadViewState%2A> 메서드 호출 기본 클래스의 <xref:System.Web.UI.Control.LoadViewState%2A> 메서드. 또한 합니다 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.LoadViewState%2A> 메서드 집합을 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlContainerControl.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlContainerControl.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> 내용을 받는 <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" />입니다.</param>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> 컨트롤을 지정된 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체에 렌더링합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.Render%2A> 메서드 재정의 <xref:System.Web.UI.HtmlControls.HtmlControl.Render%2A?displayProperty=nameWithType> 고 여는 태그, 자식 컨트롤의 닫는 태그를 렌더링 하는 메서드는 <xref:System.Web.UI.HtmlControls.HtmlContainerControl> 컨트롤입니다.  
  
 합니다 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.Render%2A> 메서드는 주로 컨트롤 개발자가 기능을 확장 합니다 <xref:System.Web.UI.HtmlControls.HtmlContainerControl> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우는 <see cref="M:System.Web.UI.HtmlControls.HtmlContainerControl.Render(System.Web.UI.HtmlTextWriter)" /> 파생된 클래스에서 메서드를 기본 클래스를 호출 해야 <see cref="M:System.Web.UI.HtmlControls.HtmlControl.Render(System.Web.UI.HtmlTextWriter)" /> 메서드 있도록는 <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> 컨트롤이 올바르게 렌더링 됩니다.</para></block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlContainerControl.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">렌더링된 콘텐츠를 받는 <see cref="T:System.Web.UI.HtmlTextWriter" /> 인스턴스입니다.</param>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> 컨트롤의 특성을 지정된 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체에 렌더링합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="protected virtual void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlContainerControl.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">렌더링된 콘텐츠를 받는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> 컨트롤의 닫는 태그를 지정된 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체에 렌더링합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag%2A> 메서드를 호출 합니다 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.Render%2A> 닫는 태그를 렌더링 하는 방법은 <xref:System.Web.UI.HtmlControls.HtmlContainerControl> 컨트롤입니다.  
  
 합니다 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag%2A> 메서드는 주로 컨트롤 개발자가 기능을 확장 합니다 <xref:System.Web.UI.HtmlControls.HtmlContainerControl> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>