<Type Name="HtmlSelect" FullName="System.Web.UI.HtmlControls.HtmlSelect">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fbf256c381732061057bb90c084cb57ef3c5c66e" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57930715" /></Metadata><TypeSignature Language="C#" Value="public class HtmlSelect : System.Web.UI.HtmlControls.HtmlContainerControl, System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlSelect extends System.Web.UI.HtmlControls.HtmlContainerControl implements class System.Web.UI.IParserAccessor, class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlSelect" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlSelect&#xA;Inherits HtmlContainerControl&#xA;Implements IPostBackDataHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlSelect : System::Web::UI::HtmlControls::HtmlContainerControl, System::Web::UI::IPostBackDataHandler" />
  <TypeSignature Language="F#" Value="type HtmlSelect = class&#xA;    inherit HtmlContainerControl&#xA;    interface IPostBackDataHandler&#xA;    interface IParserAccessor" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IParserAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerChange")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.HtmlControls.HtmlSelectBuilder))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("Value")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>서버의 HTML <see langword="&lt;select&gt;" /> 요소에 프로그래밍 방식으로 액세스할 수 있도록 합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤 선택 상자를 만듭니다. HTML을 배치 하 여 컨트롤의 항목 목록을 지정할 `<option>` 요소는 태그와 닫는 사이 `<select>` 태그입니다. 각 항목은 표현 된 <xref:System.Web.UI.WebControls.ListItem?displayProperty=nameWithType> 개체입니다. 컨트롤의 각 항목에 대해 표시 되는 텍스트를 지정 하려면 설정할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=nameWithType> 항목 또는 간단히 열기 및 닫기 사이의 텍스트를 배치할 속성 `<option>` 태그입니다. 설정 하 여는 <xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType> 항목의 속성을 텍스트에서 다른 항목을 사용 하 여 값을 연결할 수 있습니다. 기본적으로 목록에서 항목을 선택할을 설정 합니다 <xref:System.Web.UI.WebControls.ListItem.Selected%2A?displayProperty=nameWithType> 항목의 속성 `true`합니다.  
  
 모양 및 동작을 제어할 수 있습니다 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect> 설정 하 여 컨트롤을 <xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A> 및 <xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A> 속성입니다. <xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A> 컨트롤의 높이 (행)의 속성을 지정 합니다. 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A> 속성에서 둘 이상의 항목을 동시에 선택할 수 있는지 여부를 지정 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect> 제어 합니다.  
  
 기본적으로 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤 드롭 다운 목록 상자로 표시 됩니다. 다중 선택을 허용 하는 경우 (설정 하 여 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A> 속성을 `true`) 행 이상의 높이 지정 하거나 (설정 하 여 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A> 속성 보다 큰 값을 `1`), 컨트롤 목록 상자로 표시 됩니다.  
  
 단일 선택에서 선택한 항목을 결정할 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤을 사용 하 여는 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A> 선택한 항목의 인덱스를 가져올 속성입니다. 항목을 검색 하려면이 값을 사용할 수 있습니다는 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> 컬렉션입니다.  
  
 선택한 항목을 확인 하는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 다중 선택을 허용 하는 컨트롤을 반복 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> 컬렉션 및 테스트를 <xref:System.Web.UI.WebControls.ListItem.Selected%2A?displayProperty=nameWithType> 각 항목의 속성입니다.  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect> 클래스에는 데이터 바인딩을 지원 하기 위해 두 개 속성도 제공 합니다. 구현 하는 개체에 데이터를 바인딩할를 <xref:System.Collections.IEnumerable?displayProperty=nameWithType> 인터페이스 (같은 <xref:System.Data.DataView?displayProperty=nameWithType>, <xref:System.Collections.ArrayList?displayProperty=nameWithType>, 및 <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>), 또는 <xref:System.ComponentModel.IListSource> 인터페이스를 사용 하 여는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> 속성에 바인딩할 데이터 소스를 지정 합니다. 설정한 경우는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> 속성인 하면 데이터 바인딩을 수행 하려면 코드를 직접 작성 해야 합니다. 자동으로 바인딩할는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤을 나타내는 데이터 소스 컨트롤을 사용 하 여 데이터 소스를 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> 속성 해당 값을 설정 하 고는 <xref:System.Web.UI.Control.ID%2A> 사용 하 여 데이터 소스 컨트롤의 속성입니다. 설정 하는 경우는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> 속성인을 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤에 자동으로 지정 된 데이터 소스 컨트롤에 바인딩합니다. 따라서 명시적으로 호출할 필요가 없습니다를 <xref:System.Web.UI.Control.DataBind%2A> 메서드.  
  
 에 바인딩할 데이터 소스의 필드를에서 지정할 수도 있습니다는 <xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=nameWithType> 및 <xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType> 설정 하 여 컨트롤에 있는 항목의 속성을 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A> 및 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A> 속성을 각각. 사용 하 여 데이터 원본에 여러 데이터 원본의 경우는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A> 컨트롤에 바인딩할 특정 소스를 지정 하는 속성입니다. 예를 들어 있는 경우는 <xref:System.Data.DataSet?displayProperty=nameWithType> 컨트롤을 바인딩할 테이블을 지정 해야 여러 테이블을 사용 하 여 개체를 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A> 속성입니다.  
  
 인스턴스의 초기 속성 값의 목록을 <xref:System.Web.UI.HtmlControls.HtmlSelect>, 참조는 <xref:System.Web.UI.HtmlControls.HtmlSelect.%23ctor%2A> 생성자입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤에 표시 되는 항목을 명시적으로 선언 하 여 제어 합니다.  
  
 [!code-aspx-csharp[htmlselect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/htmlselect/CS/htmlselectcs.aspx#1)]
 [!code-aspx-vb[htmlselect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/htmlselect/VB/htmlselectvb.aspx#1)]  
  
 다음 코드 예제에는 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 데이터 소스에 컨트롤을 바인딩하여 컨트롤입니다.  
  
 [!code-aspx-csharp[HtmlSelectDataSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectDataSource/CS/htmlselectdatasourcecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectDataSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectDataSource/VB/htmlselectdatasourcevb.aspx#1)]  
  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> 속성에 대 한 데이터 원본을 지정할 수는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤입니다. <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> 속성을 <xref:System.Web.UI.Control.ID%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSource> 데이터를 검색 하는 데 사용 되는 컨트롤. 페이지가 로드 될 때를 <xref:System.Web.UI.HtmlControls.HtmlSelect> 자동으로 지정 된 데이터 소스 컨트롤에 바인딩되는 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 및 데이터를 사용자에 게 표시 됩니다.  
  
 [!code-aspx-csharp[HtmlSelect.DataSourceID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelect.DataSourceID/CS/htmlselect.datasourceidcs.aspx#1)]
 [!code-aspx-vb[HtmlSelect.DataSourceID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelect.DataSourceID/VB/htmlselect.datasourceidvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Size" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Multiple" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
    <altmember cref="T:System.Web.UI.WebControls.ListItem" />
    <altmember cref="T:System.Web.UI.WebControls.ListItemCollection" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />
    <altmember cref="T:System.Data.DataSet" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataTextField" />
    <altmember cref="P:System.Web.UI.WebControls.ListItem.Text" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataValueField" />
    <altmember cref="P:System.Web.UI.WebControls.ListItem.Value" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.InnerHtml" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.InnerText" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlSelect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlSelect();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하 여 만들고의 새 인스턴스를 초기화 하는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 클래스입니다.  
  
 다음 표에서 인스턴스에 대 한 초기 속성 값을 <xref:System.Web.UI.HtmlControls.HtmlSelect>입니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|"선택" 리터럴 문자열입니다.|  
  
   
  
## Examples  
 다음 코드 예제에는 동적으로의 인스턴스를 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 제어 하 고 웹 페이지에 배치 합니다.  
  
 [!code-aspx-csharp[HtmlSelectCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectCtor/CS/htmlselectctorcs.aspx#1)]
 [!code-aspx-vb[HtmlSelectCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectCtor/VB/htmlselectctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddParsedSubObject(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.AddParsedSubObject : obj -&gt; unit" Usage="htmlSelect.AddParsedSubObject obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IParserAccessor.AddParsedSubObject(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">추가할 구문 분석된 자식 컨트롤입니다.</param>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤에 구문 분석된 자식 컨트롤을 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.AddParsedSubObject%2A> 메서드는 구문 분석 된 자식 컨트롤을 추가 하려면 ASP.NET에서 사용 됩니다는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 제어 합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlControls.HtmlSelect.AddParsedSubObject%2A> 메서드에 사용자 지정 서버에서 컨트롤을 항상 검사 하는 인스턴스의 합니다 <xref:System.Web.UI.WebControls.ListItem> 클래스에 추가 됩니다는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 항목 컬렉션을 선택 합니다.  
  
 [!code-aspx-csharp[CustomHtmlSelectAddParsedSubObject#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectAddParsedSubObject/CS/custom_htmlselect_addparsedsubobjectcs.aspx#1)]
 [!code-aspx-vb[CustomHtmlSelectAddParsedSubObject#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectAddParsedSubObject/VB/custom_htmlselect_addparsedsubobjectvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlSelectAddParsedSubObject#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectAddParsedSubObject/CS/custom_htmlselect_addparsedsubobject.cs#2)]
 [!code-vb[CustomHtmlSelectAddParsedSubObject#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectAddParsedSubObject/VB/custom_htmlselect_addparsedsubobject.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><paramref name="obj" /> 매개 변수에 의해 지정된 자식 컨트롤이 <see cref="T:System.Web.UI.WebControls.ListItem" /> 형식이어야 하는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearSelection">
      <MemberSignature Language="C#" Value="protected virtual void ClearSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.ClearSelection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearSelection ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearSelection();" />
      <MemberSignature Language="F#" Value="abstract member ClearSelection : unit -&gt; unit&#xA;override this.ClearSelection : unit -&gt; unit" Usage="htmlSelect.ClearSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤의 목록 선택 항목을 취소하고 모든 항목의 <see cref="P:System.Web.UI.WebControls.ListItem.Selected" /> 속성을 <see langword="false" />로 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.ClearSelection%2A> 메서드 반복를 <xref:System.Web.UI.WebControls.ListItemCollection> 컬렉션을 나타내는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤의 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> 속성을 설정 합니다 <xref:System.Web.UI.WebControls.ListItem.Selected%2A> 각 속성 <xref:System.Web.UI.WebControls.ListItem> 개체를 `false`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.ClearSelection%2A> 메서드에 사용자 지정 서버에서 컨트롤을 항상 모든 선택한 항목을 지웁니다는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컬렉션입니다.  
  
 [!code-aspx-csharp[CustomHtmlSelectClearSelection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectClearSelection/CS/custom_htmlselect_clearselectioncs.aspx#1)]
 [!code-aspx-vb[CustomHtmlSelectClearSelection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectClearSelection/VB/custom_htmlselect_clearselectionvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlSelectClearSelection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectClearSelection/CS/custom_htmlselect_clearselection.cs#2)]
 [!code-vb[CustomHtmlSelectClearSelection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectClearSelection/VB/custom_htmlselect_clearselection.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListItemCollection" />
        <altmember cref="T:System.Web.UI.WebControls.ListItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Selected" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="htmlSelect.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.EmptyControlCollection" /> 컨트롤에 대한 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 개체를 만듭니다.</summary>
        <returns>현재 서버 컨트롤의 자식 서버 컨트롤을 포함할 <see cref="T:System.Web.UI.ControlCollection" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤은 자식 컨트롤을 허용 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.EmptyControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public virtual string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataMember : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlSelect.DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>여러 데이터 집합이 있는 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 속성에서 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> 컨트롤에 바인딩할 데이터 집합을 가져오거나 설정합니다.</summary>
        <value>여러 데이터 집합이 있는 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" />에서 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> 컨트롤에 바인딩할 데이터 집합입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되지 않았음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> 여러 데이터 집합을 포함 하는 속성을 사용 하 여는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A> 속성을 컨트롤에 바인딩하는 데이터 집합을 지정 합니다. 예를 들어 있는 경우는 <xref:System.Data.DataSet?displayProperty=nameWithType> 여러 테이블을 사용 하 여 개체를 컨트롤에 바인딩할 테이블을 나타내려면이 속성을 사용 합니다.  
  
 컨트롤에 바인딩할 데이터 소스를 지정한 후 지정할 수 있습니다에 바인딩할 데이터 소스의 필드를 <xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=nameWithType> 하 고 <xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType> 설정 하 여 컨트롤의 각 항목의 속성을 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A> 및 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A> 속성 각각.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A> 속성에 바인딩할 데이터 집합을 지정 하는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 에서 제어를 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> 여러 데이터 집합을 사용 하 여 속성.  
  
 [!code-aspx-csharp[HtmlSelectDataMember#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectDataMember/CS/htmlselectdatamemberdscs.aspx#1)]
 [!code-aspx-vb[HtmlSelectDataMember#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectDataMember/VB/htmlselectdatamemberdsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" /> 컨트롤을 데이터 바인딩하는 동안 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 속성이 설정된 경우</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataTextField" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataValueField" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Text" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Value" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public virtual object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj with get, set" Usage="System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤에 바인딩할 정보의 소스를 가져오거나 설정합니다.</summary>
        <value>이 컨트롤에 데이터를 제공하는 데 사용된 값 컬렉션을 포함하는 <see cref="T:System.Collections.IEnumerable" /> 또는 <see cref="T:System.ComponentModel.IListSource" />입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> 속성에 바인딩할 데이터 소스를 지정 하는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 제어 합니다. 데이터 원본 중 하나를 구현 하는 컬렉션 이어야 합니다는 <xref:System.Collections.IEnumerable?displayProperty=nameWithType> 인터페이스 (같은 <xref:System.Data.DataView?displayProperty=nameWithType>를 <xref:System.Collections.ArrayList?displayProperty=nameWithType>, 또는 <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>) 또는 <xref:System.ComponentModel.IListSource> 인터페이스입니다. 설정 하는 경우는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> 속성인 하면 데이터 바인딩을 수행 하려면 코드를 직접 작성 해야 합니다.  
  
 데이터 소스와 같은 여러 데이터 집합에 포함 하는 경우는 <xref:System.Data.DataSet?displayProperty=nameWithType> 여러 테이블을 사용 하 여 개체를 사용 하 여는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A> 속성을 컨트롤에 바인딩할 데이터 집합을 지정 합니다.  
  
 바인딩할 데이터 소스의 필드를 지정할 수는 <xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=nameWithType> 및 <xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType> 설정 하 여 컨트롤의 각 항목의 속성을 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A> 및 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A> 속성을 각각.  
  
 또는 사용할 수는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> 속성을 데이터 소스 컨트롤에서 표시 하는 데이터 원본에 자동으로 바인딩됩니다. 설정 하는 경우는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> 속성인 데이터 목록 컨트롤을 자동으로 지정 된 데이터 소스 컨트롤에 바인딩합니다. 호출 코드를 명시적으로 작성할 필요가 없습니다를 <xref:System.Web.UI.Control.DataBind%2A> 메서드.  
  
 둘 다에 대 한 값을 지정 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> 속성 및 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> 속성인 ASP.NET 데이터 원본을 확인할 수 없는 및 <xref:System.Web.HttpException?displayProperty=nameWithType> 예외가 throw 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> 속성에 바인딩할 정보의 소스를 지정 하는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤입니다.  
  
 [!code-aspx-csharp[HtmlSelectDataSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectDataSource/CS/htmlselectdatasourcecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectDataSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectDataSource/VB/htmlselectdatasourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">지정된 데이터 소스가 <see cref="T:System.Collections.IEnumerable" /> 또는 <see cref="T:System.ComponentModel.IListSource" /> 중 하나와 호환되지 않고, <see langword="null" />이 아닌 경우</exception>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> 속성과 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 속성 모두에 대해 값이 지정되었기 때문에 데이터 소스를 확인할 수 없는 경우</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataTextField" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Text" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataValueField" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Value" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceID">
      <MemberSignature Language="C#" Value="public virtual string DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataSourceID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceID : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.Control.ID" /> 컨트롤이 해당 데이터 소스를 검색하기 위해 사용해야 하는 데이터 소스 컨트롤의 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 속성을 가져오거나 설정합니다.</summary>
        <value>데이터 소스 컨트롤에 할당된 프로그래밍 ID입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되지 않았음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> 속성을 설정 하거나 액세스를 <xref:System.Web.UI.Control.ID%2A> 데이터 원본의 속성을 제어 하는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤이 사용 하 여 해당 데이터 소스를 검색 합니다. 데이터 소스 컨트롤에서 참조 하는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> 속성을 구현 하는 모든 컨트롤 수를 <xref:System.Web.UI.IDataSource> 인터페이스입니다. 데이터 소스 제어와 같은 명명 컨테이너에 있어야 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect> 참조 하는 컨트롤 또는 부모 컨트롤에는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤입니다. 이 속성에 대 한 값을 지정 하는 경우는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤에 자동으로 지정 된 데이터 소스 컨트롤에 바인딩합니다. 호출 코드를 명시적으로 작성할 필요가 없습니다를 <xref:System.Web.UI.Control.DataBind%2A> 메서드.  
  
 또는 사용할 수는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> 속성에 바인딩할 값의 원본을 지정 하는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤입니다. 데이터 소스를 구현 하는 컬렉션 이어야 합니다는 <xref:System.Collections.IEnumerable?displayProperty=nameWithType> 인터페이스 (같은 <xref:System.Data.DataView?displayProperty=nameWithType>를 <xref:System.Collections.ArrayList?displayProperty=nameWithType>, 또는 <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>) 또는 <xref:System.ComponentModel.IListSource> 인터페이스입니다. 설정 하는 경우는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> 속성인 하면 데이터 바인딩을 수행 하려면 코드를 직접 작성 해야 합니다.  
  
 둘 다에 대 한 값을 지정 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> 속성 및 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> 속성인 ASP.NET 데이터 원본을 확인할 수 없는 및 <xref:System.Web.HttpException?displayProperty=nameWithType> 예외가 throw 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> 속성에 대 한 데이터 원본을 지정할 수는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤입니다. <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> 속성을 <xref:System.Web.UI.Control.ID%2A> 의 속성을 <xref:System.Web.UI.WebControls.SqlDataSource> 데이터를 검색 하는 데 사용 되는 컨트롤. 페이지가 로드 될 때를 <xref:System.Web.UI.HtmlControls.HtmlSelect> 자동으로 지정 된 데이터 소스 컨트롤에 바인딩되는 <xref:System.Web.UI.WebControls.SqlDataSource> 제어 및 데이터를 사용자에 게 표시 됩니다.  
  
 [!code-aspx-csharp[HtmlSelect.DataSourceID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelect.DataSourceID/CS/htmlselect.datasourceidcs.aspx#1)]
 [!code-aspx-vb[HtmlSelect.DataSourceID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelect.DataSourceID/VB/htmlselect.datasourceidvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> 속성과 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 속성 모두에 대해 값이 지정되었기 때문에 데이터 소스를 확인할 수 없는 경우</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataTextField">
      <MemberSignature Language="C#" Value="public virtual string DataTextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.DataTextField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextField : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlSelect.DataTextField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ListItem.Text" /> 컨트롤에 있는 각 항목의 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 속성에 바인딩할 데이터 소스의 필드를 가져오거나 설정합니다.</summary>
        <value><see cref="P:System.Web.UI.WebControls.ListItem.Text" /> 컨트롤에 있는 각 항목의 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 속성에 바인딩할 데이터 소스의 필드입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되지 않았음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A> 속성에 바인딩할 데이터 소스의 필드를 지정 합니다 <xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=nameWithType> 컨트롤의 각 항목의 속성입니다. 이 속성은 일반적으로 값을 제공 하는 데 사용 됩니다 합니다 <xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=nameWithType> 속성의 값과 다른는 <xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType> 속성입니다.  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect> 클래스에 바인딩할 데이터 소스를 지정 하는 것에 대 한 두 개 속성도 제공 합니다. <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> 속성에 바인드할 수 있도록는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤을 구현 하는 컬렉션을 <xref:System.Collections.IEnumerable?displayProperty=nameWithType> 또는 <xref:System.ComponentModel.IListSource?displayProperty=nameWithType> 인터페이스 (같은 <xref:System.Data.DataView?displayProperty=nameWithType>, <xref:System.Collections.ArrayList?displayProperty=nameWithType>, 또는 <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>). 사용 하는 경우는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> 데이터 원본을 지정 하려면 속성 명시적으로 호출 해야 합니다 <xref:System.Web.UI.Control.DataBind%2A> 컨트롤을 바인딩하는 메서드 및 해당 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A> 속성을 데이터 소스.  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> 속성에 바인드할 수 있도록는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 데이터 원본을 나타내는 데이터 소스 컨트롤에 컨트롤입니다. 사용 하는 경우는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> 데이터 원본을 지정 하려면 속성을 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤 및 해당 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A> 자동으로 지정 된 데이터 소스 컨트롤 속성에 바인딩할 합니다. 따라서 명시적으로 호출할 필요가 없습니다를 <xref:System.Web.UI.Control.DataBind%2A> 메서드.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> 및 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A> 속성에 바인딩할 데이터 소스의 필드를 지정 하는 <xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=nameWithType> 의 각 항목의 속성은 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤.  
  
 [!code-aspx-csharp[HtmlSelectDataSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectDataSource/CS/htmlselectdatasourcecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectDataSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectDataSource/VB/htmlselectdatasourcevb.aspx#1)]  
  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> 및 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A> 속성에 바인딩할 데이터 소스의 필드를 지정 하는 <xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType> 의 각 항목의 속성은 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤.  
  
 [!code-aspx-csharp[HtmlSelect.DataValueField2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelect.DataValueField2/CS/htmlselect.datavaluefield2cs.aspx#1)]
 [!code-aspx-vb[HtmlSelect.DataValueField2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelect.DataValueField2/VB/htmlselect.datavaluefield2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Text" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataValueField" />
      </Docs>
    </Member>
    <Member MemberName="DataValueField">
      <MemberSignature Language="C#" Value="public virtual string DataValueField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataValueField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.DataValueField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataValueField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataValueField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataValueField : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlSelect.DataValueField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ListItem.Value" /> 컨트롤에 있는 각 항목의 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 속성에 바인딩할 데이터 소스의 필드를 가져오거나 설정합니다.</summary>
        <value><see cref="P:System.Web.UI.WebControls.ListItem.Value" /> 컨트롤에 있는 각 항목의 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 속성에 바인딩할 데이터 소스의 필드입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되지 않았음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A> 속성에 바인딩할 데이터 소스의 필드를 지정 합니다 <xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType> 컨트롤의 각 항목의 속성입니다. 이 속성은 일반적으로 값을 제공 하는 데 사용 됩니다 합니다 <xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType> 속성의 값과 다른는 <xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=nameWithType> 속성입니다.  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect> 클래스에 바인딩할 데이터 소스를 지정 하는 것에 대 한 두 개 속성도 제공 합니다. <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> 속성에 바인드할 수 있도록는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤을 구현 하는 컬렉션을 <xref:System.Collections.IEnumerable> 또는 <xref:System.ComponentModel.IListSource> 인터페이스 (같은 <xref:System.Data.DataView?displayProperty=nameWithType>, <xref:System.Collections.ArrayList?displayProperty=nameWithType>, 또는 <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>). 사용 하는 경우는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> 데이터 원본을 지정 하려면 속성 명시적으로 호출 해야 합니다 <xref:System.Web.UI.Control.DataBind%2A> 컨트롤을 바인딩하는 메서드 및 해당 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A> 속성을 데이터 소스.  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> 속성에 바인드할 수 있도록는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 데이터 원본을 나타내는 데이터 소스 컨트롤에 컨트롤입니다. 사용 하는 경우는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> 데이터 원본을 지정 하려면 속성을 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤 및 해당 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A> 자동으로 데이터 소스 컨트롤 속성에 바인딩할 합니다. 따라서 명시적으로 호출할 필요가 없습니다를 <xref:System.Web.UI.Control.DataBind%2A> 메서드.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> 및 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A> 속성에 바인딩할 데이터 소스의 필드를 지정 하는 <xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType> 의 각 항목의 속성은 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤.  
  
 [!code-aspx-csharp[HtmlSelectDataSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectDataSource/CS/htmlselectdatasourcecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectDataSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectDataSource/VB/htmlselectdatasourcevb.aspx#1)]  
  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> 및 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A> 속성에 바인딩할 데이터 소스의 필드를 지정 하는 <xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType> 의 각 항목의 속성은 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤.  
  
 [!code-aspx-csharp[HtmlSelect.DataValueField2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelect.DataValueField2/CS/htmlselect.datavaluefield2cs.aspx#1)]
 [!code-aspx-vb[HtmlSelect.DataValueField2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelect.DataValueField2/VB/htmlselect.datavaluefield2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Value" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataTextField" />
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnsureDataBound();" />
      <MemberSignature Language="F#" Value="member this.EnsureDataBound : unit -&gt; unit" Usage="htmlSelect.EnsureDataBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 메서드를 호출하기 전에 <see cref="M:System.Web.UI.Control.DataBind" /> 컨트롤에 데이터 바인딩이 필요한지와 올바른 데이터 소스 컨트롤이 지정되었는지를 확인합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 값을 지정 하는 경우는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> 속성인 ASP.NET 데이터 목록 컨트롤 지정 된 데이터 소스 컨트롤에 자동으로 바인딩합니다. 컨트롤에 대 한 데이터 바인딩을 수행 하는 ASP.NET에서 호출 된 <xref:System.Web.UI.HtmlControls.HtmlSelect.EnsureDataBound%2A> 컨트롤이 아직 데이터 바인딩된을 구현 하는 올바른 데이터 소스 컨트롤을 확인 하려면 먼저 메서드를 <xref:System.Web.UI.IDataSource> 해당 에대한지정된인터페이스가<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>속성입니다. 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.EnsureDataBound%2A> 메서드를 호출 합니다 <xref:System.Web.UI.Control.DataBind%2A> 는 컨트롤은 데이터 바인딩된이이 메서드를 호출한 후 즉시 확인 하는 방법입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding" />
        <altmember cref="M:System.Web.UI.Control.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.IEnumerable GetData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.IEnumerable GetData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.GetData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetData () As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::IEnumerable ^ GetData();" />
      <MemberSignature Language="F#" Value="abstract member GetData : unit -&gt; System.Collections.IEnumerable&#xA;override this.GetData : unit -&gt; System.Collections.IEnumerable" Usage="htmlSelect.GetData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Collections.IEnumerable" /> 컨트롤에 바인딩되어 있는 데이터 소스를 나타내는 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 개체를 가져옵니다.</summary>
        <returns><see cref="T:System.Collections.IEnumerable" /> 개체 지정된 데이터 소스가 없으면 기본값인 <see langword="null" />이 반환됩니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.GetData%2A> 메서드가 반환 되는 <xref:System.Collections.IEnumerable> 개체에서 데이터 원본 지정 여부와 무관 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> 속성 또는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> 속성.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 속성이 <see cref="T:System.Web.UI.IDataSource" /> 형식이 아닌 경우  
  
또는 
<see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 속성이 <see cref="T:System.Web.UI.IHierarchicalDataSource" /> 형식이 아닌 경우</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> 컨트롤에 대해 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 속성과 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 속성이 모두 정의된 경우  
  
또는 
요청한 데이터 뷰를 찾을 수 없는 경우</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="InnerHtml">
      <MemberSignature Language="C#" Value="public override string InnerHtml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerHtml" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.InnerHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerHtml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerHtml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerHtml : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlSelect.InnerHtml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>특수 문자를 동등한 HTML 엔터티로 자동 변환하지 않고 컨트롤의 여는 태그와 닫는 태그 사이에 있는 내용을 가져오거나 설정합니다. 이 컨트롤에 대해서는 이 속성을 사용할 수 없습니다.</summary>
        <value>컨트롤의 여는 태그와 닫는 태그 사이에 있는 내용입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  읽기 또는이 속성에 값을 할당 하지 않습니다. <xref:System.NotSupportedException?displayProperty=nameWithType> 예외가 throw됩니다. 이 속성은 상속 된 <xref:System.Web.UI.HtmlControls.HtmlContainerControl> 클래스 및에 적용 되지 않습니다는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">이 속성에서 값을 읽어 오거나 이 속성에 값을 할당하려고 한 경우</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.InnerText" />
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public override string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerText : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlSelect.InnerText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>특수 문자를 동등한 HTML 엔터티로 자동 변환하여 컨트롤의 여느 태그와 닫는 태그 사이에 있는 내용을 가져오거나 설정합니다. 이 컨트롤에 대해서는 이 속성을 사용할 수 없습니다.</summary>
        <value>컨트롤의 여는 태그와 닫는 태그 사이에 있는 내용입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  읽기 또는이 속성에 값을 할당 하지 않습니다. <xref:System.NotSupportedException?displayProperty=nameWithType> 예외가 throw됩니다. 이 속성은 상속 된 <xref:System.Web.UI.HtmlControls.HtmlContainerControl> 클래스 및에 적용 되지 않습니다는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">이 속성에서 값을 읽어 오거나 이 속성에 값을 할당하려고 한 경우</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.InnerHtml" />
      </Docs>
    </Member>
    <Member MemberName="IsBoundUsingDataSourceID">
      <MemberSignature Language="C#" Value="protected bool IsBoundUsingDataSourceID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBoundUsingDataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.IsBoundUsingDataSourceID" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsBoundUsingDataSourceID As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsBoundUsingDataSourceID { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBoundUsingDataSourceID : bool" Usage="System.Web.UI.HtmlControls.HtmlSelect.IsBoundUsingDataSourceID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 속성이 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤에 대해 정의되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>데이터 소스 컨트롤이 정의되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 나타내는 문자열의 길이 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> 속성 문자열은 다음 0 보다 큰 <xref:System.Web.UI.HtmlControls.HtmlSelect.IsBoundUsingDataSourceID%2A> 반환 `true`합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ListItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ListItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ListItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ListItemCollection ^ Items { System::Web::UI::WebControls::ListItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Web.UI.WebControls.ListItemCollection" Usage="System.Web.UI.HtmlControls.HtmlSelect.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤에 나열된 항목을 포함하는 컬렉션을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ListItemCollection" /> 컨트롤에 나열된 항목을 포함하는 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> 컬렉션에 나열 된 항목을 관리 하는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤입니다. 항목을 제거 하 고 컬렉션에 항목을 삽입 하는 항목을 프로그래밍 방식으로 추가할 수 있습니다.  
  
 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> 컬렉션에 있는 항목을 반복 하는 데 일반적으로는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 제어 합니다. 예를 들어, 여러 항목을 선택 하면 반복할 수 있습니다는 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> 어떤 항목이 선택 되었는지 확인 하기 위해 수집 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> 컬렉션의 항목을 반복 하는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 제어 하 고 어떤 항목이 선택 되었는지 확인 합니다.  
  
 [!code-aspx-csharp[htmlselect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/htmlselect/CS/htmlselectcs.aspx#1)]
 [!code-aspx-vb[htmlselect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/htmlselect/VB/htmlselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberSignature Language="F#" Value="abstract member LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool&#xA;override this.LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool" Usage="htmlSelect.LoadPostData (postDataKey, postCollection)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="postDataKey">컨트롤의 키 식별자입니다.</param>
        <param name="postCollection">들어오는 모든 이름 값의 컬렉션입니다.</param>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤의 포스트백 데이터를 처리합니다.</summary>
        <returns><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤의 상태가 포스트백의 결과로 변경되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.LoadPostData%2A> 메서드 검사 여부를의 포스트백 데이터를 <xref:System.Web.UI.HtmlControls.HtmlSelect> 이전 값과에서 다른 컨트롤과 그렇다면 반환 `true`합니다. 경우는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤의 <xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A> 속성은 `false`를 나타내는 단일 선택 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤을 해당 <xref:System.Web.UI.HtmlControls.HtmlSelect.LoadPostData%2A> 메서드 검사를 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A> 속성. 경우는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤의 <xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A> 속성은 `true`를 나타내는 다중 선택 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤을 해당 <xref:System.Web.UI.HtmlControls.HtmlSelect.LoadPostData%2A> 메서드 검사를 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices%2A> 속성.  
  
 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.LoadPostData%2A> 메서드는 주로 컨트롤 개발자가 기능을 확장 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" /> 속성이 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤에 있는 항목 수보다 큰 값이나 <see langword="-1" />보다 작은 값으로 설정된 경우</exception>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="htmlSelect.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">복원할 컨트롤 상태를 나타내는 <see cref="T:System.Object" />입니다.</param>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 메서드에서 저장한 이전 페이지 요청에서 <see cref="M:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState" /> 컨트롤의 뷰 상태 정보를 복원합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는.NET Framework 인프라에서 기본적으로 사용 하며 사용자 코드에서 직접 사용할 수 없습니다. 그러나 컨트롤 개발자가 사용자 지정 서버 컨트롤에서 해당 뷰 상태를 복원 하는 방법을 지정 하려면이 메서드를 재정의할 수 있습니다. 자세한 내용은 [ASP.NET 상태 관리 개요](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))합니다.  
  
 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤의 뷰 상태로 저장 됩니다는 <xref:System.Web.UI.Triplet> 개체입니다. <xref:System.Web.UI.Triplet.First> 필드를 <xref:System.Web.UI.Triplet> 개체에 포함 된 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤의 기본 뷰 상태. <xref:System.Web.UI.Triplet.Second> 필드를 <xref:System.Web.UI.Triplet> 개체에 포함 합니다 <xref:System.Web.UI.WebControls.ListItemCollection> 컬렉션을 나타내는 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> 속성입니다. 합니다 <xref:System.Web.UI.Triplet.Third> 필드를 <xref:System.Web.UI.Triplet> 나타내는 선택한 인덱스를 보유 하는 개체는 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices%2A> 속성입니다. 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.LoadViewState%2A> 메서드 호출 기본 클래스의 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.LoadViewState%2A?displayProperty=nameWithType> 컨트롤의 기본 뷰 상태를 복원 하는 방법입니다.  
  
 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.LoadViewState%2A> 메서드는 주로 컨트롤 개발자가 기능을 확장 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Web.UI.HtmlControls.HtmlSelect.LoadViewState(System.Object)" /> 파생된 클래스에서 사용할 기본 클래스를 호출 해야 <see cref="M:System.Web.UI.HtmlControls.HtmlSelect.LoadViewState(System.Object)" /> 메서드 있도록는 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤의 뷰 상태 제대로 관리 됩니다.</para></block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState" />
        <altmember cref="T:System.Web.UI.Triplet" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlContainerControl.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Multiple">
      <MemberSignature Language="C#" Value="public bool Multiple { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiple" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.Multiple" />
      <MemberSignature Language="VB.NET" Value="Public Property Multiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Multiple { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Multiple : bool with get, set" Usage="System.Web.UI.HtmlControls.HtmlSelect.Multiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤에서 여러 항목을 동시에 선택할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤에서 여러 항목을 동시에 선택할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A> 속성에서 여러 항목을 동시에 선택할 수 있는지 여부를 지정 하는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤입니다.  
  
 기본적으로 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤 드롭 다운 목록 상자로 표시 됩니다. 다중 선택을 허용 하는 경우 (설정 하 여 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A> 속성을 `true`) 행 이상의 높이 지정 하거나 (설정 하 여 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A> 속성 보다 큰 값을 `1`), 컨트롤 목록 상자로 표시 됩니다.  
  
 선택한 항목을 확인 하는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 여러 항목을 선택할 수 있는 컨트롤을 반복 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> 컬렉션 및 테스트를 <xref:System.Web.UI.WebControls.ListItem.Selected%2A?displayProperty=nameWithType> 각 항목의 속성입니다.  
  
> [!NOTE]
>  합니다 `multiple` 특성에서 렌더링 되는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤이 속성을 설정 하는 경우에 `true`합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A> 속성에서 여러 항목을 선택할 수 있는지 여부를 지정 하는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤입니다.  
  
 [!code-aspx-csharp[HtmlSelectMultiple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectMultiple/CS/htmlselectmultiplecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectMultiple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectMultiple/VB/htmlselectmultiplevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Size" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlSelect.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤에 연결된 고유 식별자 이름을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤에 연결된 고유 식별자 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.Name%2A> 속성에 대 한 고유 식별자 이름을 확인 하는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 제어 합니다. 이 구현에서는 합니다 `get` 의 값을 반환 하는 접근자를 <xref:System.Web.UI.Control.UniqueID%2A?displayProperty=nameWithType> 속성. 그러나는 `set` 접근자가이 속성에 값을 할당 하지 않습니다.  
  
> [!NOTE]
>  합니다 `set` 접근자를 할당 하지 않습니다 값이이 속성 때문에 <xref:System.Web.UI.HtmlControls.HtmlSelect.Name%2A> 속성으로 동일한 값이 있어야 합니다.는 <xref:System.Web.UI.Control.UniqueID%2A?displayProperty=nameWithType> 속성에 대 한는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤이 제대로 작동 하려면.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlControls.HtmlSelect.Name%2A> 의 속성을 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤에서 특정 항목을 선택 하는 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> 목록.  
  
 [!code-aspx-csharp[HtmlSelectName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectName/CS/htmlselectnamecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectName/VB/htmlselectnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected override void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnDataBinding(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataBinding (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataBinding(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDataBinding : EventArgs -&gt; unit" Usage="htmlSelect.OnDataBinding e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.Control.DataBinding" /> 컨트롤의 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.Control.DataBinding> 데이터에 바인딩될 때 이벤트가 발생 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤입니다. 이 메서드는 연관 된 모든 데이터 바인딩 논리를 수행 하는 컨트롤을 알립니다. 특히 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnDataBinding%2A> 메서드를 만듭니다 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> 컬렉션에서 지정한 데이터 원본에서는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> 속성 또는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> 속성.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnDataBinding%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 속성이 <see cref="T:System.Web.UI.IDataSource" /> 형식이 아닌 경우  
  
또는 
<see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 속성이 <see cref="T:System.Web.UI.IHierarchicalDataSource" /> 형식이 아닌 경우</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> 컨트롤에 대해 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 속성과 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 속성이 모두 정의된 경우  
  
또는 
요청한 데이터 뷰를 찾을 수 없는 경우</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" /> 속성이 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤에 있는 항목 수보다 큰 값이나 <see langword="-1" />보다 작은 값으로 설정된 경우</exception>
        <block subset="none" type="overrides"><para>재정의 하는 경우는 <see cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnDataBinding(System.EventArgs)" /> 파생된 클래스에서 메서드를 기본 클래스를 호출 해야 <see cref="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.GetData" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
      </Docs>
    </Member>
    <Member MemberName="OnDataPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataPropertyChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataPropertyChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnDataPropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataPropertyChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataPropertyChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnDataPropertyChanged : unit -&gt; unit&#xA;override this.OnDataPropertyChanged : unit -&gt; unit" Usage="htmlSelect.OnDataPropertyChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />, <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" /> 또는 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 속성이 변경될 때 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnDataPropertyChanged%2A> 메서드 집합을 <xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A> 속성을 `true` 경우를 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>, <xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A>, 또는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> 속성이 변경 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">컨트롤의 데이터 바인딩 단계에서 속성을 변경하려고 한 경우</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceViewChanged (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceViewChanged(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnDataSourceViewChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceViewChanged (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceViewChanged(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceViewChanged : obj * EventArgs -&gt; unit&#xA;override this.OnDataSourceViewChanged : obj * EventArgs -&gt; unit" Usage="htmlSelect.OnDataSourceViewChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="e" Type="System.EventArgs" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sender">이벤트 소스입니다.</param>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />, <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" /> 또는 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 속성이 변경될 때 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnDataSourceViewChanged%2A> 메서드 집합을 <xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A> 속성을 `true`입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="htmlSelect.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.Control.Init" /> 컨트롤에 대해 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnInit%2A> 메서드를 알립니다는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 만들고 인스턴스를 설정 하는 데 필요한 초기화 단계를 수행 하는 컨트롤입니다. 경우는 <xref:System.Web.UI.Control.IsViewStateEnabled%2A> 속성은 `false` 및 <xref:System.Web.UI.Page.IsPostBack%2A> 속성이 `true`, 해당 <xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A> 속성이 `true`합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우는 <see cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnInit(System.EventArgs)" /> 파생된 클래스에서 메서드를 기본 클래스를 호출 해야 <see cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnInit(System.EventArgs)" /> 메서드는 등록 된 대리자는 이벤트를 수신 합니다.</para></block>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding" />
        <altmember cref="P:System.Web.UI.Control.IsViewStateEnabled" />
        <altmember cref="P:System.Web.UI.Page.IsPostBack" />
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLoad : EventArgs -&gt; unit" Usage="htmlSelect.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.Control.Load" /> 컨트롤에 대해 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnLoad%2A> 메서드를 알립니다는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 제어와 연결 된 페이지에 대 한 각 HTTP 요청에 공통적인 작업을 수행할 것입니다. <xref:System.Web.UI.HtmlControls.HtmlSelect.OnLoad%2A> 메서드는 연결을 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤 중 하나에 지정 된 적절 한 데이터 소스를 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> 속성 또는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> 속성입니다. 경우는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> 속성 데이터 소스 컨트롤을 지정 하는 것를 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤이 사용 하 여 해당 데이터 소스를 검색 하면 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnDataSourceViewChanged%2A> 메서드는 이벤트 처리기로 설정 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 속성에 지정된 ID를 찾을 수 없는 경우  
  
또는 
<see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 속성에 지정된 컨트롤이 <see cref="T:System.Web.UI.IDataSource" /> 형식이 아닌 경우</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> 속성과 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 속성 모두에 대해 값이 지정되었기 때문에 데이터 소스를 확인할 수 없는 경우  
  
또는 
요청한 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" /> 속성을 찾을 수 없는 경우</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnDataSourceViewChanged(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="htmlSelect.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.Control.PreRender" /> 컨트롤에 대해 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A> 속성이 1 보다 큰 경우 해당 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnPreRender%2A> 메서드 레지스터를 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤을 <xref:System.Web.UI.Page> 컨트롤을 포스트백 해야 하는 것으로.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnPreRender%2A> 메서드는 사용자 지정에서 여러 항목을 선택할 수 있도록 <xref:System.Web.UI.HtmlControls.HtmlSelect> 서버 컨트롤입니다.  
  
 [!code-aspx-csharp[CustomHtmlSelectOnPreRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectOnPreRender/CS/custom_htmlselect_onprerendercs.aspx#1)]
 [!code-aspx-vb[CustomHtmlSelectOnPreRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectOnPreRender/VB/custom_htmlselect_onprerendervb.aspx#1)]  
  
 [!code-csharp[CustomHtmlSelectOnPreRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectOnPreRender/CS/custom_htmlselect_onprerender.cs#2)]
 [!code-vb[CustomHtmlSelectOnPreRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectOnPreRender/VB/custom_htmlselect_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Size" />
        <altmember cref="M:System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="OnServerChange">
      <MemberSignature Language="C#" Value="protected virtual void OnServerChange (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnServerChange(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnServerChange (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnServerChange(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnServerChange : EventArgs -&gt; unit&#xA;override this.OnServerChange : EventArgs -&gt; unit" Usage="htmlSelect.OnServerChange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.HtmlControls.HtmlSelect.ServerChange" /> 컨트롤의 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 이벤트를 발생시킵니다. 이를 통해 이벤트에 대한 사용자 지정 처리기를 제공할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange> 이벤트가 발생 경우에서 선택한 항목을 <xref:System.Web.UI.HtmlControls.HtmlSelect> 서버 게시물 간에 컨트롤을 변경 합니다.  
  
> [!NOTE]
>  이 이벤트는 사용자가 제출 단추를 클릭 하 여 같은 서버에 게시를 시작 하는 경우에 발생 합니다. 이 이벤트는 서버에 게시물을 발생 하지 않습니다.  
  
> [!NOTE]
>  컨트롤의 뷰 상태에 사용할 수 있어야 합니다.는 <xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange> 이벤트가 올바르게 작동 하도록 합니다.  
  
 이 이벤트를 사용 하 여 데이터 유효성 검사를 수행할 수는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 사용자 컨트롤에서 선택 항목을 변경 하는 경우를 제어 합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고 이벤트 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange> 의 이벤트는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 제어 합니다. 이벤트 처리기는 선택한 항목을 서로 호환 되는지 여부를 결정 합니다.  
  
 [!code-aspx-csharp[HtmlSelectOnServerChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectOnServerChange/CS/htmlselectonserverchangecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectOnServerChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectOnServerChange/VB/htmlselectonserverchangevb.aspx#1)]  
  
 [!code-aspx-csharp[HtmlSelectServerChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectServerChange/CS/htmlselectserverchangecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectServerChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectServerChange/VB/htmlselectserverchangevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우는 <see cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange(System.EventArgs)" /> 파생된 클래스에서 메서드를 기본 클래스를 호출 해야 <see cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlSelect.ServerChange" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberSignature Language="F#" Value="abstract member RaisePostDataChangedEvent : unit -&gt; unit&#xA;override this.RaisePostDataChangedEvent : unit -&gt; unit" Usage="htmlSelect.RaisePostDataChangedEvent " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange(System.EventArgs)" /> 메서드를 호출하여 컨트롤의 상태가 변경되었음을 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤에 알립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.RaisePostDataChangedEvent%2A> 메서드는 주로 컨트롤 개발자가 기능을 확장 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange(System.EventArgs)" />
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlSelect.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">렌더링된 콘텐츠를 받는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤의 특성을 지정된 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체에 렌더링합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.RenderAttributes%2A> 메서드 렌더링을 `name` 특성을 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤을 같은 값을 갖도록에 직접는 <xref:System.Web.UI.Control.UniqueID%2A?displayProperty=nameWithType> 속성. 특성을 렌더링 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.RenderAttributes%2A> 메서드 호출 기본 클래스의 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.RenderAttributes%2A> 메서드.  
  
 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.RenderAttributes%2A> 메서드는 주로 컨트롤 개발자가 기능을 확장 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect> 제어 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.RenderAttributes%2A> 특정 제목 텍스트에 대 한 항상 표시 되도록 컨트롤을 사용자 지정 서버에서 메서드를 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤입니다.  
  
 [!code-aspx-csharp[CustomHtmlSelectRenderAttributes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectRenderAttributes/CS/custom_htmlselect_renderattributescs.aspx#1)]
 [!code-aspx-vb[CustomHtmlSelectRenderAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectRenderAttributes/VB/custom_htmlselect_renderattributesvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlSelectRenderAttributes#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectRenderAttributes/CS/custom_htmlselect_renderattributes.cs#2)]
 [!code-vb[CustomHtmlSelectRenderAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectRenderAttributes/VB/custom_htmlselect_renderattributes.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Name" />
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
        <altmember cref="T:System.Web.UI.AttributeCollection" />
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlSelect.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">렌더링된 콘텐츠를 받는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤의 자식 컨트롤을 지정된 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체에 렌더링합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.RenderChildren%2A> 메서드 재정의 기본 클래스의 <xref:System.Web.UI.Control.RenderChildren%2A> 기본 메서드를 호출 하지 않고 메서드. 각를 `<option>` 사이의 열기 및 닫기 요소 `<select>` 태그와 함께 렌더링 된를 `value` 특성을 `selected` 항목을 선택 하면 특성 및 관련된 텍스트입니다.  
  
 여러 항목이 선택 된 경우 하지만 <xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A> 속성이 `false`에 <xref:System.Web.HttpException> 예외가 throw 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.RenderChildren%2A> 메서드는 사용자 지정에서 기본 옵션 텍스트 항상 표시 되도록 <xref:System.Web.UI.HtmlControls.HtmlSelect> 서버 컨트롤입니다.  
  
 [!code-aspx-csharp[CustomHtmlSelectRenderChildren#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectRenderChildren/CS/custom_htmlselect_renderchildrencs.aspx#1)]
 [!code-aspx-vb[CustomHtmlSelectRenderChildren#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectRenderChildren/VB/custom_htmlselect_renderchildrenvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlSelectRenderChildren#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectRenderChildren/CS/custom_htmlselect_renderchildren.cs#2)]
 [!code-vb[CustomHtmlSelectRenderChildren#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectRenderChildren/VB/custom_htmlselect_renderchildren.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">여러 항목이 선택되었으나 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.Multiple" /> 속성이 <see langword="false" />로 설정된 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.ListItem" />
      </Docs>
    </Member>
    <Member MemberName="RequiresDataBinding">
      <MemberSignature Language="C#" Value="protected bool RequiresDataBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresDataBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Property RequiresDataBinding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool RequiresDataBinding { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequiresDataBinding : bool with get, set" Usage="System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤을 지정된 데이터 소스에 바인딩해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>컨트롤을 데이터 소스에 바인딩해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤이 사용 하는 <xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A> 컨트롤을 호출 해야 하는지 여부를 결정 하는 속성을 <xref:System.Web.UI.Control.DataBind%2A> 된 지정 된 데이터 소스에 바인딩해야 하는 방법.  
  
 때마다를 `set` 접근자 중 하나에서 호출 되는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>, <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>, 또는 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A> 후 데이터 원본을 변경 하려면 속성은 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnInit%2A> 메서드가 이미 호출 된, ASP.NET은 의값을자동으로설정<xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A>속성을 `true`입니다. 값을 <xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A> 속성도 설정 됩니다 `true` 때는 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnDataPropertyChanged%2A> 메서드가 실행 됩니다.  
  
 ASP.NET의 값을 자동으로 설정 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A> 속성을 `false` 직후는 <xref:System.Web.UI.Control.DataBind%2A> 메서드가 호출 되었습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="htmlSelect.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>서버에 페이지를 포스트백한 이후에 발생한 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤 뷰 상태의 변경 내용을 저장합니다.</summary>
        <returns><see cref="T:System.Object" /> 뷰 상태의 변경 내용이 들어 있는 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" />입니다. 개체와 관련된 뷰 상태가 없으면 이 메서드는 null 참조(Visual Basic의 경우 <see langword="Nothing" />)를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤의 뷰 상태로 저장 됩니다는 <xref:System.Web.UI.Triplet> 개체입니다. <xref:System.Web.UI.Triplet.First> 필드를 <xref:System.Web.UI.Triplet> 개체에 포함 된 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤의 기본 뷰 상태. <xref:System.Web.UI.Triplet.Second> 필드를 <xref:System.Web.UI.Triplet> 개체에 포함 합니다 <xref:System.Web.UI.WebControls.ListItemCollection> 컬렉션을 나타내는 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> 속성입니다. 합니다 <xref:System.Web.UI.Triplet.Third> 필드를 <xref:System.Web.UI.Triplet> 나타내는 선택한 인덱스를 보유 하는 개체는 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices%2A> 속성입니다. 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState%2A> 메서드 호출 기본 클래스의 <xref:System.Web.UI.Control.SaveViewState%2A?displayProperty=nameWithType> 컨트롤의 기본 뷰 상태를 저장 하는 방법입니다.  
  
 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState%2A> 메서드는 주로 컨트롤 개발자가 기능을 확장 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState" /> 파생된 클래스에서 사용할 기본 클래스를 호출 해야 <see cref="M:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState" /> 메서드 있도록는 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤의 뷰 상태 제대로 관리 됩니다.</para></block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.LoadViewState(System.Object)" />
        <altmember cref="T:System.Web.UI.Triplet" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="protected virtual void Select (int[] selectedIndices);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Select(int32[] selectedIndices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.Select(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Select (selectedIndices As Integer())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Select(cli::array &lt;int&gt; ^ selectedIndices);" />
      <MemberSignature Language="F#" Value="abstract member Select : int[] -&gt; unit&#xA;override this.Select : int[] -&gt; unit" Usage="htmlSelect.Select selectedIndices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedIndices" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="selectedIndices">선택할 항목이 들어 있는 <see cref="T:System.Array" /> 형식의 <see cref="T:System.Int32" />입니다.</param>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤의 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" /> 컬렉션에 있는 여러 항목을 선택합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.Select%2A> 여러 항목을 선택 하는 메서드는 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> 컬렉션입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
        <altmember cref="T:System.Web.UI.WebControls.ListItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Selected" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectedIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedIndex : int with get, set" Usage="System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤에서 선택된 항목의 서수 인덱스를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤에서 선택된 항목의 서수 인덱스입니다. <see langword="-1" /> 값은 선택된 항목이 없음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A> 속성은 일반적으로 단일 선택에서 선택한 항목의 인덱스를 확인 하는 데 사용 됩니다 <xref:System.Web.UI.HtmlControls.HtmlSelect> 제어 합니다. 항목을 검색 하려면 다음이 인덱스를 사용할 수는 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> 컬렉션입니다.  
  
 경우는 <xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A> 속성이로 설정 되어 `true`에 여러 항목을 동시에 선택할 수를 나타내는 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A> 처음 선택된 된 항목의 인덱스를 포함 하는 속성. 선택한 항목을 확인 하는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 여러 항목을 선택할 수 있는 컨트롤을 반복 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> 컬렉션 및 테스트를 <xref:System.Web.UI.WebControls.ListItem.Selected%2A?displayProperty=nameWithType> 각 항목의 속성입니다.  
  
> [!CAUTION]
>  선택한 항목 없음 할 가능성이 있습니다. 선택 된 항목이 있는 경우는 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A> 속성의 값이 포함 `-1`합니다. 이 페이지가 처음 로드 있고 항목은 기본적으로 선택 되지 않은 경우에 흔히 발생 합니다. 항목을 참조 하기 전에이 값을 테스트 하는 코드를 제공 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> 컬렉션입니다. 그렇지 않으면 인덱스 컬렉션의 범위를 벗어나는 경우 예외가 throw 됩니다.  
  
 기본적으로 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤 드롭 다운 목록 상자로 표시 됩니다. 다중 선택을 허용 하는 경우 (설정 하 여 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A> 속성을 `true`) 행 이상의 높이 지정 하거나 (설정 하 여 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A> 속성 보다 큰 값을 `1`), 컨트롤 목록 상자로 표시 됩니다. 드롭다운 목록 상자가 표시 됩니다 항목이 항상 선택 됩니다. 모든 항목 선택 항목을 설정 하 여 프로그래밍 방식으로 지울 수 경우 목록 상자가 표시 됩니다는 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A> 속성을 `-1`입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A> 속성에서 선택한 항목의 인덱스를 확인 하는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 제어 합니다. 인덱스에서 선택한 항목을 검색 한 다음 되는 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> 컬렉션입니다.  
  
 [!code-aspx-csharp[HtmlSelectSingleSelect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectSingleSelect/CS/htmlselectsingleselectcs.aspx#1)]
 [!code-aspx-vb[HtmlSelectSingleSelect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectSingleSelect/VB/htmlselectsingleselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">속성이 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤에 있는 항목 수보다 큰 값이나 <see langword="-1" />보다 작은 값으로 설정된 경우</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Selected" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Multiple" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Size" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndices">
      <MemberSignature Language="C#" Value="protected virtual int[] SelectedIndices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] SelectedIndices" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SelectedIndices As Integer()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property cli::array &lt;int&gt; ^ SelectedIndices { cli::array &lt;int&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedIndices : int[]" Usage="System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤에 현재 선택되어 있는 모든 항목의 인덱스(0부터 시작)가 들어 있는 컬렉션을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤에 현재 선택되어 있는 모든 항목의 인덱스(0부터 시작)가 들어 있는 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices%2A> 속성을 사용 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect> 현재 모든의 0부터 시작 인덱스를 포함 하는 컬렉션을 반환 하는 클래스에서 항목을 선택는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤.  
  
 컨트롤의 기능을 확장 하는 개발자는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 클래스에서 재정의할 수는 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices%2A> 속성을 현재 반환 선택한 항목에 대 한 사용자 지정 알고리즘을 제공 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerChange">
      <MemberSignature Language="C#" Value="public event EventHandler ServerChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ServerChange" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.HtmlControls.HtmlSelect.ServerChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ServerChange As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ServerChange;" />
      <MemberSignature Language="F#" Value="member this.ServerChange : EventHandler " Usage="member this.ServerChange : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서버에 게시되는 사이 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤에서 선택된 항목이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange> 이벤트가 발생 경우에서 선택한 항목을 <xref:System.Web.UI.HtmlControls.HtmlSelect> 서버 게시물 간에 컨트롤을 변경 합니다.  
  
> [!NOTE]
>  컨트롤의 뷰 상태에 사용할 수 있어야 합니다.는 <xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange> 이벤트가 올바르게 작동 하도록 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고 이벤트 처리기를 선언적으로 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange> 의 이벤트는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 제어 합니다. 이벤트 처리기는 선택한 항목을 서로 호환 되는지 여부를 결정 합니다.  
  
 [!code-aspx-csharp[HtmlSelectOnServerChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectOnServerChange/CS/htmlselectonserverchangecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectOnServerChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectOnServerChange/VB/htmlselectonserverchangevb.aspx#1)]  
  
 다음 코드 예제에는 지정 하 고 이벤트 처리기를 프로그래밍 방식으로 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange> 의 이벤트는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 제어 합니다. 이벤트 처리기는 선택한 항목을 서로 호환 되는지 여부를 결정 합니다.  
  
 [!code-aspx-csharp[HtmlSelectServerChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectServerChange/CS/htmlselectserverchangecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectServerChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectServerChange/VB/htmlselectserverchangevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange(System.EventArgs)" />
        <altmember cref="T:System.EventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Size { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Size : int with get, set" Usage="System.Web.UI.HtmlControls.HtmlSelect.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤의 높이(행 단위)를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤의 높이(행 단위)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A> (행)의 높이 지정 하는 속성을 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤입니다. 컨트롤의 항목 개수 보다 작은 크기를 지정 하는 경우를 목록에서 위아래로 이동할 수 있도록 스크롤 막대가 표시 됩니다.  
  
 기본적으로 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤 드롭 다운 목록 상자로 표시 됩니다. 다중 선택을 허용 하는 경우 (설정 하 여 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A> 속성을 `true`) 행 이상의 높이 지정 하거나 (설정 하 여 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A> 속성 보다 큰 값을 `1`), 컨트롤 목록 상자로 표시 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A> (행)의 높이 지정 하는 속성을 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤입니다.  
  
 [!code-aspx-csharp[HtmlSelectMultiple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectMultiple/CS/htmlselectmultiplecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectMultiple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectMultiple/VB/htmlselectmultiplevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Multiple" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">컨트롤의 키 식별자입니다.</param>
        <param name="postCollection">들어오는 모든 이름 값의 컬렉션입니다.</param>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />를 참조하십시오.</summary>
        <returns><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤의 상태가 포스트백의 결과로 변경되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.HtmlControls.HtmlSelect> 인스턴스가 <xref:System.Web.UI.IPostBackDataHandler> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" /> 속성이 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤에 있는 항목 수보다 큰 값이나 <see langword="-1" />보다 작은 값으로 설정된 경우</exception>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />를 참조하십시오.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.HtmlControls.HtmlSelect> 인스턴스가 <xref:System.Web.UI.IPostBackDataHandler> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.RaisePostDataChangedEvent" />
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="htmlSelect.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤의 뷰 상태 변경 내용을 컨트롤의 <see cref="T:System.Web.UI.StateBag" /> 개체에 저장할 수 있도록 추적합니다. 이 개체는 <see cref="P:System.Web.UI.Control.ViewState" /> 속성을 통해 액세스할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.TrackViewState%2A> 메서드 항목에 지속 되 면를 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> 의 컬렉션을 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤 상태를 보려면.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlSelect.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤에서 선택된 항목의 값을 가져오거나 해당 컨트롤의 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" /> 속성을 목록에서 지정된 값을 가진 첫째 항목의 인덱스로 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤에서 선택된 항목의 값입니다. 해당 컨트롤에서 선택된 항목이 없으면 <see cref="F:System.String.Empty" />가 반환됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.Value%2A> 속성에서 참조 하는 항목의 값을 가져오는 데 일반적으로 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A> 속성입니다.  
  
> [!NOTE]
>  해당 컨트롤에서 선택된 항목이 없으면 <xref:System.String.Empty?displayProperty=nameWithType>가 반환됩니다.  
  
 이 속성 값으로 설정 하는 경우는 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A> 속성이 해당 값을 포함 하는 목록의 첫 번째 항목의 인덱스를 사용 하 여 업데이트 됩니다. 일치 하는 값이 없는 경우는 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A> 속성 그대로 변경 되지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.HtmlControls.HtmlSelect.Value%2A> 속성에서 선택한 항목의 값을 검색할는 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤입니다.  
  
 [!code-aspx-csharp[HtmlSelectSingleSelect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectSingleSelect/CS/htmlselectsingleselectcs.aspx#1)]
 [!code-aspx-vb[HtmlSelectSingleSelect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectSingleSelect/VB/htmlselectsingleselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.HtmlControls.HtmlSelect.Value" /> 속성이 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 컨트롤에 있는 항목 수보다 큰 값이나 <see langword="-1" />보다 작은 값으로 설정된 경우</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
  </Members>
</Type>