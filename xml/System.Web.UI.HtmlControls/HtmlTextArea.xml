<Type Name="HtmlTextArea" FullName="System.Web.UI.HtmlControls.HtmlTextArea">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fc95abf2dc35cdfb3e1bdf6c22406c0734438aec" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57920405" /></Metadata><TypeSignature Language="C#" Value="public class HtmlTextArea : System.Web.UI.HtmlControls.HtmlContainerControl, System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlTextArea extends System.Web.UI.HtmlControls.HtmlContainerControl implements class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlTextArea" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlTextArea&#xA;Inherits HtmlContainerControl&#xA;Implements IPostBackDataHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlTextArea : System::Web::UI::HtmlControls::HtmlContainerControl, System::Web::UI::IPostBackDataHandler" />
  <TypeSignature Language="F#" Value="type HtmlTextArea = class&#xA;    inherit HtmlContainerControl&#xA;    interface IPostBackDataHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerChange")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("Value")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>서버의 HTML <see langword="&lt;textarea&gt;" /> 요소에 프로그래밍 방식으로 액세스할 수 있도록 합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 컨트롤에 해당 하는 `<textarea>` HTML 요소를 웹 페이지에 여러 줄 텍스트 상자를 만들 수 있습니다. 이 컨트롤을 사용 하 여 프로그래밍 방식으로 조작 하는 `<textarea>` HTML 요소입니다.  
  
 이 클래스를 사용 하면 여러 줄 텍스트 상자의 너비와 높이 설정 하 여 제어 하는 <xref:System.Web.UI.HtmlControls.HtmlTextArea.Rows%2A> 고 <xref:System.Web.UI.HtmlControls.HtmlTextArea.Cols%2A> 속성을 각각. 또한 이름을 할당할 수 있습니다를 컨트롤에 설정 하 여는 <xref:System.Web.UI.HtmlControls.HtmlTextArea.Name%2A> 속성입니다. 를 확인 하거나 텍스트 상자에 텍스트를 지정 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea.Value%2A> 속성입니다.  
  
 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 클래스를 제공는 <xref:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange> 입력란의 값이 서버 게시물 간에 변경 될 때마다 지침 집합이 사용자 지정을 수행할 수 있도록 하는 이벤트입니다. 이 이벤트는 일반적으로 데이터 유효성 검사에 사용 됩니다.  
  
> [!NOTE]
>  한 줄 텍스트 상자를 만들려는 경우 사용 된 <xref:System.Web.UI.HtmlControls.HtmlInputText> 컨트롤입니다.  
  
 인스턴스의 초기 속성 값의 목록을 <xref:System.Web.UI.HtmlControls.HtmlTextArea>, 참조는 <xref:System.Web.UI.HtmlControls.HtmlTextArea.%23ctor%2A> 생성자입니다.  
  
> [!CAUTION]
>  악성 클라이언트 스크립트 포함 될 수 있는 사용자 입력을 표시 하려면이 제어를 사용할 수 있습니다. 응용 프로그램에서 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 전송 되는 모든 정보를 확인 합니다. ASP.NET에서는 사용자 입력에서 차단 스크립트를 HTML 입력된 요청 유효성 검사 기능을 제공 합니다. 유효성 검사 서버 컨트롤이 사용자 입력을 평가 하기 위해 제공 됩니다. 자세한 내용은 [유효성 검사 서버 컨트롤 구문](https://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 컨트롤이 여러 줄 텍스트 상자를 만듭니다.  
  
 [!code-aspx-csharp[HtmlTextArea2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextArea2/CS/htmltextareacs.aspx#1)]
 [!code-aspx-vb[HtmlTextArea2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextArea2/VB/htmltextareavb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTextArea.Rows" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTextArea.Cols" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTextArea.Value" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTextArea.Name" />
    <altmember cref="E:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputText" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextArea ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTextArea.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextArea();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하 여 만들고의 새 인스턴스를 초기화 하는 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 클래스입니다.  
  
 다음 표에서 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Web.UI.HtmlControls.HtmlTextArea>합니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|"Textarea" 리터럴 문자열입니다.|  
  
   
  
## Examples  
 다음 코드 예제에는 인스턴스를 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 컨트롤과 웹 페이지의 위치입니다.  
  
 [!code-aspx-csharp[HtmlTextAreaCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextAreaCtor/CS/htmltextareactorcs.aspx#1)]
 [!code-aspx-vb[HtmlTextAreaCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextAreaCtor/VB/htmltextareactorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTextArea.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddParsedSubObject(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.AddParsedSubObject : obj -&gt; unit" Usage="htmlTextArea.AddParsedSubObject obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">구문 분석한 요소를 나타내는 <see cref="T:System.Object" />입니다.</param>
        <summary>개체가 구문 분석되었음을 <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> 컨트롤에 알리고 이 개체를 <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> 컨트롤의 <see cref="T:System.Web.UI.ControlCollection" /> 개체에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlTextArea.AddParsedSubObject%2A> 메서드는 개체를 추가 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 컨트롤의 <xref:System.Web.UI.ControlCollection> 형식의 개체가 있으면 <xref:System.Web.UI.LiteralControl> 또는 <xref:System.Web.UI.DataBoundLiteralControl>고, 그렇지 않으면는 <xref:System.Web.HttpException> throw 됩니다.  
  
 <xref:System.Web.UI.HtmlControls.HtmlTextArea.AddParsedSubObject%2A> 메서드는 주로 컨트롤 개발자가 기능을 확장 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 제어 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea.AddParsedSubObject%2A> 사용자 지정의 메서드 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 서버 컨트롤을 항상 구문 분석 된 개체 형식 인지 여부를 결정 <xref:System.Web.UI.LiteralControl> 또는 <xref:System.Web.UI.DataBoundLiteralControl>합니다.  
  
 [!code-aspx-csharp[CustomHtmlTextAreaAddParsedSubObject#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlTextAreaAddParsedSubObject/CS/custom_htmltextarea_addparsedsubobjectcs.aspx#1)]
 [!code-aspx-vb[CustomHtmlTextAreaAddParsedSubObject#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlTextAreaAddParsedSubObject/VB/custom_htmltextarea_addparsedsubobjectvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlTextAreaAddParsedSubObject#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlTextAreaAddParsedSubObject/CS/custom_htmltextarea_addparsedsubobject.cs#2)]
 [!code-vb[CustomHtmlTextAreaAddParsedSubObject#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlTextAreaAddParsedSubObject/VB/custom_htmltextarea_addparsedsubobject.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><paramref name="obj" /> 매개 변수에서 <see cref="T:System.Web.UI.LiteralControl" /> 또는 <see cref="T:System.Web.UI.DataBoundLiteralControl" /> 형식의 개체만 지정할 수 있는 경우</exception>
        <altmember cref="M:System.Web.UI.Control.AddParsedSubObject(System.Object)" />
        <altmember cref="T:System.Web.UI.LiteralControl" />
        <altmember cref="T:System.Web.UI.DataBoundLiteralControl" />
      </Docs>
    </Member>
    <Member MemberName="Cols">
      <MemberSignature Language="C#" Value="public int Cols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Cols" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTextArea.Cols" />
      <MemberSignature Language="VB.NET" Value="Public Property Cols As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Cols { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Cols : int with get, set" Usage="System.Web.UI.HtmlControls.HtmlTextArea.Cols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> 컨트롤의 너비(문자 단위)를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> 컨트롤의 너비(문자 단위)입니다. 기본값은 <see langword="-1" />로, 이 속성이 설정되지 않았음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.HtmlControls.HtmlTextArea.Cols%2A> 속성을 지정 하거나의 문자에서 너비를 결정 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 컨트롤입니다. 텍스트 상자의 너비 보다 긴 텍스트를 입력 하면 텍스트가 자동으로 컨트롤의 다음 줄에서 계속 됩니다.  
  
 컨트롤의 높이 제어 하려면 설정의 <xref:System.Web.UI.HtmlControls.HtmlTextArea.Rows%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea.Cols%2A> 속성을 컨트롤의 너비는 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 컨트롤.  
  
 [!code-aspx-csharp[HtmlTextAreaCols#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextAreaCols/CS/htmltextareacolscs.aspx#1)]
 [!code-aspx-vb[HtmlTextAreaCols#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextAreaCols/VB/htmltextareacolsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTextArea.Rows" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTextArea.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberSignature Language="F#" Value="abstract member LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool&#xA;override this.LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool" Usage="htmlTextArea.LoadPostData (postDataKey, postCollection)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="postDataKey">컨트롤의 키 식별자입니다.</param>
        <param name="postCollection">들어오는 모든 이름 값의 컬렉션입니다.</param>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> 컨트롤의 포스트백 데이터를 처리합니다.</summary>
        <returns>포스트백을 실행한 후에 <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> 컨트롤의 상태가 변경되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlTextArea.LoadPostData%2A> 메서드 검사 여부를의 포스트백 값을 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 이전 값과에서 다른 컨트롤과 그렇다면 반환 `true`.  
  
 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea.LoadPostData%2A> 메서드는 주로 컨트롤 개발자가 기능을 확장 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlTextArea.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTextArea.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTextArea.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" />의 고유한 식별자 이름을 가져오거나 설정합니다.</summary>
        <value><see cref="P:System.Web.UI.Control.UniqueID" />의 값을 나타내는 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea.Name%2A> 속성에 대 한 고유 식별자 이름을 확인 하는 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 컨트롤입니다. 속성의이 구현에서의 `get` 의 값을 반환 하는 접근자를 <xref:System.Web.UI.Control.UniqueID%2A?displayProperty=nameWithType> 속성. 그러나는 `set` 접근자가이 속성에 값을 할당 하지 않습니다.  
  
> [!NOTE]
>  합니다 `set` 접근자를 할당 하지 않습니다 값이이 속성 때문에 <xref:System.Web.UI.HtmlControls.HtmlInputControl.Name%2A> 속성으로 동일한 값이 있어야 합니다.는 <xref:System.Web.UI.Control.UniqueID%2A?displayProperty=nameWithType> 속성에 대 한는 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 컨트롤이 제대로 작동 하려면.  
  
 클래스에서 상속 되는 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 클래스 필요한 경우이 구현을 재정의할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea.Name%2A> 속성을 선택는 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 페이지에서 제어 하 고 설정 해당 <xref:System.Web.UI.HtmlControls.HtmlTextArea.Value%2A> 속성.  
  
 [!code-aspx-csharp[HtmlTextAreaName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextAreaName/CS/htmltextareanamecs.aspx#1)]
 [!code-aspx-vb[HtmlTextAreaName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextAreaName/VB/htmltextareanamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTextArea.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="htmlTextArea.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" /> 개체입니다.</param>
        <summary><see cref="E:System.Web.UI.Control.PreRender" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea.OnPreRender%2A> 메서드를 알립니다는 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 컨트롤의 뷰 상태를 저장 하 고 콘텐츠를 렌더링 하기 전에 필요한 모든 단계를 수행 합니다.  
  
 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea.OnPreRender%2A> 메서드는 주로 컨트롤 개발자가 기능을 확장 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 제어 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea.OnPreRender%2A> 항상 사용자 지정에 5 개의 행과 75 개의 열을 표시 하는 방법 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 서버 컨트롤입니다.  
  
 [!code-aspx-csharp[CustomHtmlTextAreaOnPreRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlTextAreaOnPreRender/CS/custom_htmltextarea_onprerendercs.aspx#1)]
 [!code-aspx-vb[CustomHtmlTextAreaOnPreRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlTextAreaOnPreRender/VB/custom_htmltextarea_onprerendervb.aspx#1)]  
  
 [!code-csharp[CustomHtmlTextAreaOnPreRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlTextAreaOnPreRender/CS/custom_htmltextarea_onprerender.cs#2)]
 [!code-vb[CustomHtmlTextAreaOnPreRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlTextAreaOnPreRender/VB/custom_htmltextarea_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우는 <see cref="M:System.Web.UI.HtmlControls.HtmlTextArea.OnPreRender(System.EventArgs)" /> 파생된 클래스에서 메서드를 기본 클래스를 호출 해야 <see cref="M:System.Web.UI.HtmlControls.HtmlTextArea.OnPreRender(System.EventArgs)" /> 메서드를는 <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> 컨트롤이 페이지를 사용 하 여 제대로 등록 되었는지 합니다.</para></block>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnServerChange">
      <MemberSignature Language="C#" Value="protected virtual void OnServerChange (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnServerChange(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTextArea.OnServerChange(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnServerChange (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnServerChange(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnServerChange : EventArgs -&gt; unit&#xA;override this.OnServerChange : EventArgs -&gt; unit" Usage="htmlTextArea.OnServerChange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange" /> 컨트롤의 <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> 이벤트를 발생시킵니다. 이를 통해 이벤트에 대한 사용자 지정 처리기를 제공할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange> 이벤트는 때의 콘텐츠는 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 서버 게시물 간에 변경 제어 합니다.  
  
> [!NOTE]
>  이 이벤트는 사용자가 클릭 하 여 같은 서버에 게시를 시작 하는 경우에 발생을 `submit` 단추입니다. 이 이벤트는 서버에 게시물을 발생 하지 않습니다.  
  
> [!NOTE]
>  컨트롤의 viewstate를 사용할 수 있어야 합니다.는 <xref:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange> 이벤트가 올바르게 작동 하도록 합니다.  
  
 이 이벤트는 일반적으로 데이터 유효성 검사를 수행 하는 데 사용 됩니다는 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 사용자 컨트롤의 텍스트를 업데이트 하는 시점을 제어 합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.HtmlControls.HtmlTextArea.OnServerChange%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에 대 한 사용자 지정 이벤트 처리기를 만들어 지정 하는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange> 이벤트입니다. 값을 입력 하는 경우 메시지가 표시 됩니다는 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 컨트롤 20 자를 초과 합니다.  
  
 [!code-aspx-csharp[HtmlTextAreaServerChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextAreaServerChanged/CS/htmltextareaserverchangecs.aspx#1)]
 [!code-aspx-vb[HtmlTextAreaServerChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextAreaServerChanged/VB/htmltextareaserverchangevb.aspx#1)]  
  
 [!code-aspx-csharp[HtmlTextAreaServerChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextAreaServerChange/CS/htmltextareaserverchangecs.aspx#1)]
 [!code-aspx-vb[HtmlTextAreaServerChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextAreaServerChange/VB/htmltextareaserverchangevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.HtmlControls.HtmlTextArea.OnServerChange(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.HtmlControls.HtmlTextArea.OnServerChange(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTextArea.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberSignature Language="F#" Value="abstract member RaisePostDataChangedEvent : unit -&gt; unit&#xA;override this.RaisePostDataChangedEvent : unit -&gt; unit" Usage="htmlTextArea.RaisePostDataChangedEvent " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.Web.UI.HtmlControls.HtmlTextArea.OnServerChange(System.EventArgs)" /> 메서드를 호출하여 컨트롤의 상태가 변경되었음을 <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> 컨트롤에 알립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea.RaisePostDataChangedEvent%2A> 메서드는 주로 컨트롤 개발자가 기능을 확장 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlTextArea.OnServerChange(System.EventArgs)" />
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTextArea.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlTextArea.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">렌더링된 콘텐츠를 받는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> 컨트롤의 특성을 지정된 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체에 렌더링합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlTextArea.RenderAttributes%2A> 메서드 렌더링을 `name` 특성을 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 컨트롤을 같은 값을 갖도록에 직접는 <xref:System.Web.UI.Control.UniqueID%2A?displayProperty=nameWithType> 속성. 특성을 렌더링 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea.RenderAttributes%2A> 메서드 호출 기본 클래스의 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.RenderAttributes%2A> 메서드.  
  
 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea.RenderAttributes%2A> 메서드는 주로 컨트롤 개발자가 기능을 확장 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 제어 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea.RenderAttributes%2A> 특정 제목 텍스트에 대 한 항상 표시 되도록 컨트롤을 사용자 지정 서버에서 메서드를 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 컨트롤입니다.  
  
 [!code-aspx-csharp[CustomHtmlTextAreaRenderAttributes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlTextAreaRenderAttributes/cs/custom_htmltextarea_renderattributescs.aspx#1)]
 [!code-aspx-vb[CustomHtmlTextAreaRenderAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlTextAreaRenderAttributes/vb/custom_htmltextarea_renderattributesvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlTextAreaRenderAttributes#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlTextAreaRenderAttributes/cs/custom_htmltextarea_renderattributes.cs#2)]
 [!code-vb[CustomHtmlTextAreaRenderAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlTextAreaRenderAttributes/vb/custom_htmltextarea_renderattributes.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTextArea.Name" />
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
        <altmember cref="T:System.Web.UI.AttributeCollection" />
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public int Rows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTextArea.Rows" />
      <MemberSignature Language="VB.NET" Value="Public Property Rows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rows { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Rows : int with get, set" Usage="System.Web.UI.HtmlControls.HtmlTextArea.Rows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> 컨트롤의 높이(문자 단위)를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> 컨트롤의 높이(문자 단위)입니다. 기본값은 <see langword="-1" />로, 이 속성이 설정되지 않았음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.HtmlControls.HtmlTextArea.Rows%2A> 속성을 지정 하거나의 문자에서 높이 결정 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 제어 합니다. 지정 된 높이 보다 많은 줄 수를 사용 하는 텍스트를 입력 하면 스크롤 막대가 사용 됩니다.  
  
 컨트롤의 너비를 제어 하려면 설정의 <xref:System.Web.UI.HtmlControls.HtmlTextArea.Cols%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea.Rows%2A> 속성의 높이 제어 하는 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 컨트롤입니다.  
  
 [!code-aspx-csharp[HtmlTextAreaRows#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextAreaRows/CS/htmltextarearowscs.aspx#1)]
 [!code-aspx-vb[HtmlTextAreaRows#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextAreaRows/VB/htmltextarearowsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTextArea.Rows" />
      </Docs>
    </Member>
    <Member MemberName="ServerChange">
      <MemberSignature Language="C#" Value="public event EventHandler ServerChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ServerChange" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ServerChange As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ServerChange;" />
      <MemberSignature Language="F#" Value="member this.ServerChange : EventHandler " Usage="member this.ServerChange : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서버에 게시되는 사이 <see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> 컨트롤의 내용이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange> 이벤트는 때의 콘텐츠는 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 서버 게시물 간에 변경 제어 합니다. 이 이벤트는 텍스트 상자 데이터 유효성 검사를 수행 하려면 일반적으로 사용 됩니다.  
  
> [!NOTE]
>  이 이벤트는 사용자가 클릭과 같은 서버에 게시를 시작 하는 경우에 발생을 `submit` 단추입니다. 이 이벤트는 서버에 게시물을 발생 하지 않습니다.  
  
> [!NOTE]
>  컨트롤의 viewstate를 사용할 수 있어야 합니다.는 <xref:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange> 이벤트가 올바르게 작동 하도록 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에 대 한 사용자 지정 이벤트 처리기를 만들어 지정 하는 방법을 보여 줍니다는 <xref:System.Web.UI.HtmlControls.HtmlTextArea.ServerChange> 이벤트입니다. 값을 입력 하는 경우 메시지가 표시 됩니다는 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 컨트롤 10 자를 초과 합니다.  
  
 [!code-aspx-csharp[HtmlTextAreaServerChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextAreaServerChanged/CS/htmltextareaserverchangecs.aspx#1)]
 [!code-aspx-vb[HtmlTextAreaServerChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextAreaServerChanged/VB/htmltextareaserverchangevb.aspx#1)]  
  
 [!code-aspx-csharp[HtmlTextAreaServerChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextAreaServerChange/CS/htmltextareaserverchangecs.aspx#1)]
 [!code-aspx-vb[HtmlTextAreaServerChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextAreaServerChange/VB/htmltextareaserverchangevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlTextArea.OnServerChange(System.EventArgs)" />
        <altmember cref="T:System.EventHandler" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTextArea.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">컨트롤의 키 식별자입니다.</param>
        <param name="postCollection">들어오는 모든 이름 값의 컬렉션입니다.</param>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />를 참조하십시오.</summary>
        <returns><see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> 컨트롤의 상태가 포스트백의 결과로 변경되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.HtmlControls.HtmlTextArea> 인스턴스가 <xref:System.Web.UI.IPostBackDataHandler> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTextArea.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />를 참조하십시오.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.HtmlControls.HtmlTextArea> 인스턴스가 <xref:System.Web.UI.IPostBackDataHandler> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTextArea.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTextArea.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> 컨트롤에 입력된 텍스트를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlTextArea" /> 컨트롤에 입력된 텍스트입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea.Value%2A> 속성에 입력 된 텍스트를 프로그래밍 방식으로 제어 하는 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 컨트롤입니다. 이 속성은 텍스트 상자에 입력 한 텍스트를 검색 하려면 일반적으로 사용 되지만 컨트롤에 표시할 텍스트를 지정 하려면도 사용할 수 있습니다. 기본값을 제공 하거나 메시지를 표시 하려는 경우에 유용 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 제어 합니다.  
  
> [!CAUTION]
>  악성 클라이언트 스크립트 포함 될 수 있는 사용자 입력을 표시 하려면이 제어를 사용할 수 있습니다. 응용 프로그램에서 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 전송 되는 모든 정보를 확인 합니다. ASP.NET에서는 사용자 입력에서 차단 스크립트를 HTML 입력된 요청 유효성 검사 기능을 제공 합니다. 유효성 검사 서버 컨트롤이 사용자 입력을 평가 하기 위해 제공 됩니다. 자세한 내용은 [유효성 검사 서버 컨트롤 구문](https://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.HtmlControls.HtmlTextArea.Value%2A> 속성의 내용을 확인 하는 <xref:System.Web.UI.HtmlControls.HtmlTextArea> 제어 합니다. 그러면 내용은 웹 페이지에 표시 됩니다.  
  
 [!code-aspx-csharp[HtmlTextArea2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextArea2/CS/htmltextareacs.aspx#1)]
 [!code-aspx-vb[HtmlTextArea2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextArea2/VB/htmltextareavb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTextArea.Value" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
  </Members>
</Type>