<Type Name="WebControlAdapter" FullName="System.Web.UI.WebControls.Adapters.WebControlAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a044c383eb421adb0a51ae72d446af92ed47fa34" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39999322" /></Metadata><TypeSignature Language="C#" Value="public class WebControlAdapter : System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebControlAdapter extends System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Class WebControlAdapter&#xA;Inherits ControlAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebControlAdapter : System::Web::UI::Adapters::ControlAdapter" />
  <TypeSignature Language="F#" Value="type WebControlAdapter = class&#xA;    inherit ControlAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Adapters.ControlAdapter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>컨트롤 어댑터가 연결된 웹 컨트롤의 렌더링을 사용자 지정하여 특정 브라우저에 대한 기본 태그나 동작을 수정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebControl> 클래스는 웹 컨트롤 상속할 기본 클래스입니다. 모든 웹 컨트롤에 공통 된 많은 속성을 정의합니다. 자세한 내용은 <xref:System.Web.UI.WebControls.WebControl>을 참조하세요.  
  
 A <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter> 개체는 특정를 대체 하는 구성 요소 <xref:System.Web.UI.WebControls.WebControl> 클래스 또는 상속 된 메서드 및 브라우저 또는 태그 관련 처리를 허용 하도록 실행 수명 주기에서 이벤트입니다. .NET Framework 매핑되는 단일 컨트롤 어댑터 파생 <xref:System.Web.UI.WebControls.WebControl> 각 클라이언트 요청에 대 한 개체입니다.  
  
 어댑터는 특정 브라우저 또는 브라우저의 클래스에 대 한 제어 동작을 수정 하거나 특정 기능에는 임의의 필터 역할을 합니다. 파생 되는 특수 클래스에 캡슐화 할 수 있습니다의 렌더링 동작에서을 <xref:System.Web.UI.HtmlTextWriter> 클래스입니다. 따라서 것 브라우저 클래스 동작 또는에 어댑터 기능이 포함 되는 수에 대 한 단일 어댑터를 사용할 수 있도록 합니다 <xref:System.Web.UI.HtmlTextWriter> 클래스 불필요 한 컨트롤 어댑터 사용을 수행할 수 있습니다.  
  
 컨트롤 자체는 어댑터를 반드시 필요 하지 않습니다. 컨트롤은 컴퍼지션을 확장 하는 경우 일반적으로 자식 컨트롤에 대 한 어댑터는 충분 합니다.  
  
 각 컨트롤에.browser 정의 파일을 통해 어댑터에 대 한 명시적인 매핑이 있습니다. 따라서 액세스 하는 모든는 <xref:System.Web.UI.Control.Adapter%2A> 속성을 <xref:System.Web.UI.WebControls.WebControl> 사용 하 여는 <xref:System.Web.HttpBrowserCapabilities> 컨트롤 어댑터의 매핑에 대 한 조회를 수행 하는.browser 정의 파일에서 추출 된 개체입니다.  
  
 처리 하는 동안.NET Framework 대상에 관련 될 수 있는 컨트롤의 재정의 가능한 메서드를 호출을 차단 합니다. 컨트롤 어댑터가 연결 되 면.NET Framework는 연결 된 어댑터 메서드를 호출 합니다. 자세한 내용은 <xref:System.Web.UI.Adapters.ControlAdapter>을 참조하세요.  
  
 에 대 한 렌더링을 <xref:System.Web.UI.WebControls.WebControl> 시작 및 끝 태그 및 시작 및 끝 태그 사이 몇 가지 내부 태그의 일반적으로 구성 됩니다. 태그 정의 된 경우는 <xref:System.Web.UI.WebControls.WebControl> 만들어집니다. 자세한 내용은 <xref:System.Web.UI.WebControls.WebControl.%23ctor%2A>을 참조하세요.  
  
 태그에서 생성 되는 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderBeginTag%2A> 및 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderEndTag%2A> 메서드를 각각. 내부 태그에서 생성 되는 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderContents%2A> 메서드.  
  
 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A> 메서드는 다음과 같은 순서로 메서드를 호출 하 여 모든 태그를 생성 합니다.  
  
1.  <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderBeginTag%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderContents%2A>.  
  
3.  <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderEndTag%2A>.  
  
 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.IsEnabled%2A> 속성이 반환 `true` 경우에만 <xref:System.Web.UI.WebControls.WebControl> 및 모든 부모 컨트롤을 사용할 수 있습니다. 합니다 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Control%2A> 속성에 대 한 강력한 형식의 참조를 반환 합니다 <xref:System.Web.UI.WebControls.WebControl>합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
    <altmember cref="T:System.Web.UI.WebControls.WebControl" />
    <altmember cref="T:System.Web.UI.Control" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebControlAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebControlAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework의 새 인스턴스를 내부적으로 생성 된 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter> 해당를 만들 때 클래스 <xref:System.Web.UI.WebControls.WebControl> 개체입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="T:System.Web.UI.WebControls.WebControl" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebControl Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebControl Control" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Adapters.WebControlAdapter.Control" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Control As WebControl" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebControl ^ Control { System::Web::UI::WebControls::WebControl ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Control : System.Web.UI.WebControls.WebControl" Usage="System.Web.UI.WebControls.Adapters.WebControlAdapter.Control" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 컨트롤 어댑터가 연결된 웹 컨트롤에 대한 참조를 가져옵니다.</summary>
        <value>이 <see cref="T:System.Web.UI.WebControls.WebControl" />가 연결된 <see cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter> 개체에 연결 되어를 <xref:System.Web.UI.WebControls.WebControl> 개체를.NET Framework 컨트롤 메서드 대신 어댑터 수명 주기 메서드를 호출 합니다. 자세한 내용은 <xref:System.Web.UI.Adapters.ControlAdapter>을 참조하세요.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>상속 하는 경우는 <see cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" /> 클래스를 구현 해야 최소한를 <see langword="Control" /> 컨트롤의 강력한 형식의 인스턴스를 반환 하는 속성입니다.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.WebControl" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
        <altmember cref="P:System.Web.UI.Adapters.ControlAdapter.Control" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="protected bool IsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Adapters.WebControlAdapter.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool" Usage="System.Web.UI.WebControls.Adapters.WebControlAdapter.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>웹 컨트롤 및 모든 부모 컨트롤을 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>연결된 <see cref="T:System.Web.UI.WebControls.WebControl" /> 및 모든 부모 컨트롤을 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.IsEnabled%2A> 속성은 어댑터와 해당 파생된 클래스 중 하나에 대 한 액세스를 제공 합니다 <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A?displayProperty=nameWithType> 속성입니다. <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A?displayProperty=nameWithType> 부모 컨트롤의 계층 구조를 검색 하 고 반환 `true` 웹 컨트롤 및 모든 부모에서 사용 하는 경우에 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebControl" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControlAdapter.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">대상별 출력을 렌더링하는 메서드가 포함된 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>컨트롤 어댑터가 연결된 컨트롤에 대한 대상별 태그를 생성합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A> 메서드 클라이언트 브라우저로 보낼 대상별 태그를 생성 합니다. <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A> 대신 라고 합니다 <xref:System.Web.UI.WebControls.WebControl.Render%2A?displayProperty=nameWithType> 메서드 경우는 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter> 개체에 연결 된를 <xref:System.Web.UI.WebControls.WebControl> 개체.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /> 메서드 호출을 기본 <see cref="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />, 한 다음 <see cref="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderContents(System.Web.UI.HtmlTextWriter)" />를 차례로 <see cref="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderEndTag(System.Web.UI.HtmlTextWriter)" />합니다. 재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /> 기본 메서드를 호출 하지 마십시오,이 기능을 제공 해야 합니다.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.WebControl" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="protected virtual void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControlAdapter.RenderBeginTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">대상별 출력을 렌더링하는 메서드가 포함된 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>대상 브라우저로 전송되는 태그 안에 웹 컨트롤의 시작 태그를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 재정의 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderBeginTag%2A> 메서드를 추가 태그를 작성 하거나의 시작 태그에 특성을 추가 합니다 <xref:System.Web.UI.WebControls.WebControl> 개체입니다. 사용 하 여 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderBeginTag%2A> 와 함께에서 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderEndTag%2A> 시작 및 끝 태그 일관성을 보장 하는 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>합니다 <see cref="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderBeginTag(System.Web.UI.HtmlTextWriter)" /> 메서드 호출을 기본는 <see cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" /> 메서드. 차례로 합니다 <see cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" /> 적절 한 기본 메서드를 호출 <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" /> 오버 로드 된 태그의 형식에 의해 결정 됩니다는 <see cref="T:System.Web.UI.WebControls.WebControl" /> 개체가 만들어진 합니다. 재정의 방지할 수 있습니다 <see cref="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderBeginTag(System.Web.UI.HtmlTextWriter)" /> 에서 파생 하 여 합니다 <see cref="T:System.Web.UI.HtmlTextWriter" /> 클래스 및 재정의 <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />, 및도 <see cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />합니다.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.WebControl" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected virtual void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControlAdapter.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">대상별 출력을 렌더링하는 메서드가 포함된 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>컨트롤 어댑터가 연결된 웹 컨트롤에 대한 대상별 내부 태그를 생성합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderContents%2A> 메서드 시작 부분 및 끝 태그 컨트롤 사이 내부 태그를 생성 합니다. 태그에서 생성 되는 일반적으로 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A>, 다음과 같은 순서로 메서드를 호출 하는:  
  
1.  <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderBeginTag%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderContents%2A>.  
  
3.  <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderEndTag%2A>.  
  
 재정의 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderContents%2A> 클라이언트 브라우저로 보낼 대상별 내부 태그를 생성 합니다.  
  
 합니다 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderContents%2A> 메서드 호출을 기본 <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A?displayProperty=nameWithType>입니다. 합니다 <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A?displayProperty=nameWithType> 메서드 호출을 기본 <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType>를 호출 하 <xref:System.Web.UI.Control.RenderChildren%2A?displayProperty=nameWithType>합니다. 따라서의 재정의 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderContents%2A> 를 호출 해야 합니다 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderContents%2A> 기본 메서드 대신 대신에 해당 처리 하는 경우에 <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType>합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>복합 컨트롤에 대 한 자식 컨트롤은 렌더링 됨을 확인 해야 합니다. 재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderContents(System.Web.UI.HtmlTextWriter)" /> 메서드 및 해당 기본 메서드를 호출 하지 마십시오, 자식 컨트롤을 호출 하 여 렌더링할 발생할 수 있습니다 <see cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" /> 재정의 되지 않으면 호출을 <see cref="M:System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)" /> 에서 <see cref="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderContents(System.Web.UI.HtmlTextWriter)" /> 재정의 합니다.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="protected virtual void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControlAdapter.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">대상별 출력을 렌더링하는 메서드가 포함된 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>대상 브라우저로 전송되는 태그 안에 웹 컨트롤의 끝 태그를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 재정의 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderEndTag%2A> 메서드를 추가 태그를 작성 하거나의 끝 태그에 특성을 추가 합니다 <xref:System.Web.UI.WebControls.WebControl> 개체입니다. 사용 하 여 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderEndTag%2A> 와 함께에서 <xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderBeginTag%2A> 시작 및 끝 태그 일관성을 보장 하는 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>합니다 <see cref="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderEndTag(System.Web.UI.HtmlTextWriter)" /> 메서드 호출을 기본는 <see cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" /> 메서드. 차례로 합니다 <see cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" /> 메서드 호출을 기본는 <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" /> 메서드. 재정의 방지할 수 있습니다 <see cref="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderBeginTag(System.Web.UI.HtmlTextWriter)" /> 에서 파생 하 여 합니다 <see cref="T:System.Web.UI.HtmlTextWriter" /> 클래스 및 재정의 <see cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />, 및도 <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />합니다.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.WebControl" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
  </Members>
</Type>