<Type Name="MethodExpression" FullName="System.Web.UI.WebControls.Expressions.MethodExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5c4300c2e088b63f02a5aa251e86f417fea30bdb" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="58874648" /></Metadata><TypeSignature Language="C#" Value="public class MethodExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MethodExpression extends System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.MethodExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class MethodExpression&#xA;Inherits ParameterDataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class MethodExpression : System::Web::UI::WebControls::Expressions::ParameterDataSourceExpression" />
  <TypeSignature Language="F#" Value="type MethodExpression = class&#xA;    inherit ParameterDataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>메서드에 정의된 사용자 지정 LINQ 쿼리를 지정하는 방법을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.QueryExtender> 컨트롤 사용자 지정 LINQ 쿼리를 지원 합니다. 메서드를 사용 하 여 사용자 지정 LINQ 쿼리를 정의할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.Expressions.MethodExpression> 필터에 쿼리를 호출 하는 옵션을 <xref:System.Web.UI.WebControls.QueryExtender> 컨트롤입니다.  
  
 사용자 지정 LINQ 쿼리를 포함 하는 메서드는 다음 조건을 충족 해야 합니다.  
  
-   메서드는 정적 이어야 합니다 (`Shared` Visual basic에서). 첫 번째 매개 변수 이어야 합니다는 <xref:System.Linq.IQueryable%601> 또는 <xref:System.Collections.Generic.IEnumerable%601> 개체입니다. 메서드는 둘 이상의 매개 변수를 가질 수 있습니다.  
  
-   반환 값을 변경할 수 없습니다는 <xref:System.Linq.IQueryable%601> 또는 <xref:System.Collections.Generic.IEnumerable%601> 쿼리 형식입니다.  
  
 <xref:System.Web.UI.WebControls.Expressions.MethodExpression> 다음 순서 대로 쿼리를 포함 하는 메서드를 검색 합니다.  
  
1.  경우는 <xref:System.Web.UI.WebControls.Expressions.MethodExpression.TypeName%2A> 속성에 지정 된를 <xref:System.Web.UI.WebControls.QueryExtender> 컨트롤을 <xref:System.Web.UI.WebControls.Expressions.MethodExpression> 개체가 지정 된 형식의 메서드를 찾습니다.  
  
2.  데이터 원본 구현 <xref:System.Web.DynamicData.IDynamicDataSource>, 메서드 컨텍스트 형식에 메서드를 찾습니다 (<xref:System.Data.Linq.DataContext> 또는 <xref:System.Data.Objects.ObjectContext> 개체입니다.)  
  
3.  메서드를 페이지에 대 한 기본 클래스 또는 사용자 정의 컨트롤, 템플릿 컨트롤 메서드를 찾습니다.  
  
 합니다 <xref:System.Web.UI.WebControls.Expressions.MethodExpression> 와 같은 클래스는를 <xref:System.Web.UI.WebControls.Expressions.CustomExpression> 메서드 식을 메서드 호출에 대 한 응답에서 실행 되 고 사용자 지정 식 이벤트에 대 한 응답으로 실행 되는 점을 제외 하 고 클래스입니다.  
  
   
  
## Examples  
 다음 예제에서는 가격이 400 개 이상의 제품에 대 한 AdventureWorks 데이터베이스의 Products 테이블의 ListPrice 필드를 검색 하는 방법을 보여 줍니다. 페이지 코드에서 메서드에서를 사용자 지정 LINQ 쿼리를 만드는 방법 및 메서드를 호출 하는 방법을 보여 주는이 예제는 <xref:System.Web.UI.WebControls.QueryExtender> 제어 합니다.  
  
```vb  
Public Shared Function FilterStandardPrice(ByVal query As _  
        IQueryable(Of Product)) As IQueryable(Of Product)  
        Return From p In query _  
            Where p.ListPrice >= 400 _  
            Select p  
    End Function  
```  
  
```csharp  
public static IQueryable<Product>   
        FilterStandardPrice(IQueryable<Product> query)  
{  
        return from p in query  
                  where p.ListPrice >= 400  
                  select p;  
  
    }  
```  
  
 다음 예제에서는 페이지에서 메서드를 호출 하는 방법을 보여 줍니다.  
  
```  
<html>  
<head runat="server">  
  <title>Custom Filter</title>  
</head>  
<body>  
  <form id="form1" runat="server">  
    <asp:LinqDataSource ID="LinqDataSource1" runat="server"   
        ContextTypeName="AdventureworksDataContext" EntityTypeName=""   
        TableName="Products">  
    </asp:LinqDataSource>  
  
    <asp:QueryExtender ID="QueryExtender1" runat="server"   
        TargetControlID="LinqDataSource1">  
      <asp:MethodExpression MethodName="FilterStandardPrice" >  
      </asp:MethodExpression>  
    </asp:QueryExtender>  
  
    <asp:GridView ID="GridView1" runat="server"   
        DataSourceID="LinqDataSource1"   
        DataKeyNames="ProductID"   
    </asp:GridView>  
  </form>  
</body>  
</html>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MethodExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.MethodExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MethodExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Expressions.MethodExpression" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.MethodExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="methodExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">사용할 데이터 소스 컨트롤입니다.</param>
        <summary>지정된 <see cref="T:System.Linq.IQueryable" /> 개체를 사용하여 식을 확인합니다.</summary>
        <returns>식을 확인하는 데 사용된 <see cref="T:System.Linq.IQueryable" /> 개체입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">데이터 소스 컨트롤은 <see langword="null" />입니다.</exception>
        <exception cref="T:System.InvalidOperationException">메서드를 찾을 수 없습니다.  
  
또는 
메서드가 정적이 아닙니다.  
  
또는 
전달된 <see langword="IQueryable&lt;T&gt;" /> 개체의 형식이 변경되었습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="IgnoreIfNotFound">
      <MemberSignature Language="C#" Value="public bool IgnoreIfNotFound { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreIfNotFound" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.MethodExpression.IgnoreIfNotFound" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreIfNotFound As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreIfNotFound { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreIfNotFound : bool with get, set" Usage="System.Web.UI.WebControls.Expressions.MethodExpression.IgnoreIfNotFound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>식을 무시해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>식이 무시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Expressions.MethodExpression> 개체 특정 위치에서 특정 순서로 검색 하 여 쿼리를 포함 하는 메서드를 검색 합니다. 이 속성을 설정할 수 있습니다 `false` 경우 예외를 throw 하는 <xref:System.Web.UI.WebControls.Expressions.CustomExpression> 개체는 LINQ를 포함 하는 메서드를 찾지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public string MethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.MethodExpression.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MethodName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MethodName : string with get, set" Usage="System.Web.UI.WebControls.Expressions.MethodExpression.MethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 지정 LINQ 쿼리를 포함하는 메서드의 이름을 가져오거나 설정합니다.</summary>
        <value>사용자 지정 LINQ 쿼리를 포함하는 메서드의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Expressions.MethodExpression> 개체를 사용 하면 메서드에 정의 된 사용자 지정 LINQ 쿼리를 호출할 수 있습니다. 메서드를 지정 합니다 <xref:System.Web.UI.WebControls.QueryExtender> 페이지에서 제어 합니다.  
  
   
  
## Examples  
 다음 예제에서는 지정 하는 방법을 보여 줍니다 합니다 `FilterStandardPrice` 의 메서드는 <xref:System.Web.UI.WebControls.QueryExtender> 컨트롤입니다. 에 정의 된 사용자 지정 LINQ 쿼리는 `FilterStandardPrice` 메서드.  
  
```  
<asp:QueryExtender ID="QueryExtender1" runat="server"   
    TargetControlID="LinqDataSource1">  
  <asp:MethodExpression MethodName="FilterStandardPrice">  
  </asp:MethodExpression>  
  </asp:QueryExtender>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.MethodExpression.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Web.UI.WebControls.Expressions.MethodExpression.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>메서드에 사용자 지정 쿼리가 포함된 클래스를 가져오거나 설정합니다.</summary>
        <value>해당 메서드를 멤버로 가지는 클래스입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Expressions.MethodExpression> 클래스를 사용 하면 데이터 원본에 대 한 사용자 지정 식을 지정 하는 <xref:System.Web.UI.WebControls.QueryExtender> 제어 합니다. 사용할 수는 <xref:System.Web.UI.WebControls.Expressions.MethodExpression.TypeName%2A> 속성 메서드가 속한 클래스를 지정 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>