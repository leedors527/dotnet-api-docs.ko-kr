<Type Name="OrderByExpression" FullName="System.Web.UI.WebControls.Expressions.OrderByExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1724706a6b8b092accb33969f755b40bb9fa7ffc" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55308945" /></Metadata><TypeSignature Language="C#" Value="public class OrderByExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OrderByExpression extends System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.OrderByExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class OrderByExpression&#xA;Inherits DataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class OrderByExpression : System::Web::UI::WebControls::Expressions::DataSourceExpression" />
  <TypeSignature Language="F#" Value="type OrderByExpression = class&#xA;    inherit DataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.DataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "ThenByExpressions")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Linq.IQueryable" /> 개체에 정렬 식을 적용하는 방법을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 클래스는를 <xref:System.Web.UI.WebControls.QueryExtender> 컨트롤 데이터를 오름차순 또는 내림차순 정렬입니다. 정렬은 요소 형식에 대한 기본 비교자에 의해 수행됩니다.  
  
 <xref:System.Web.UI.WebControls.QueryExtender> 컨트롤은 다양 한 데이터를 필터링 하는 데 사용할 수 있는 옵션을 지원 합니다. 필터 옵션을 사용 하 여 사용할 수는 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 데이터를 정렬 하는 개체입니다.  
  
 사용 하 여 정렬 하려면 데이터 필드를 지정 합니다 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField%2A> 속성입니다. 사용 하 여 정렬 방향을 지정 합니다 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A> 속성입니다. 후 합니다 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 데이터 원본에 적용 된 개체를 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.Expressions.ThenBy> 다른 데이터 필드에서 후속 정렬을 수행 하는 식입니다.  
  
   
  
## Examples  
 다음 예제에서는 이름이 지정 된 문자열로 시작 하는 제품에 대 한 AdventureWorks 데이터베이스의 Products 테이블을 검색 하는 방법을 보여 줍니다는 `SearchTextBox` 입력란입니다. <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 개체 데이터를 내림차순 ListPrice 데이터 필드와 제품 ID 필드를 오름차순으로 정렬 합니다. 반환 되는 쿼리의 결과 <xref:System.Web.UI.WebControls.LinqDataSource> 컨트롤에 표시 되는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 이 코드 예제는에서 제공 하는 보다 큰 예제의 일부 [연습: 웹 페이지를 사용 하 여 선언적 구문으로 데이터 필터링](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)합니다.  
  
  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" /> 속성은 <see langword="null" />입니다.</exception>
    <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
    <related type="Article" href="https://msdn.microsoft.com/library/b93e32b9-af41-4539-a009-6cbbe809c702">QueryExtender 웹 서버 컨트롤 개요</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OrderByExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OrderByExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>정렬 기준이 되는 <see cref="T:System.Linq.IQueryable" /> 개체의 속성을 가져오거나 설정합니다.</summary>
        <value>정렬 기준이 되는 <see cref="T:System.Linq.IQueryable" /> 데이터 소스 개체의 속성입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 개체 데이터 필드의 데이터를 정렬 합니다. 사용 하 여 다른 데이터 필드에서 후속 정렬 작업을 수행할 수 있습니다는 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 데이터를 내림차순 ListPrice 필드로 하 고 오름차순에서 제품 ID 필드로 정렬 하는 방법을 보여 줍니다. 이 코드 예제는에서 제공 하는 보다 큰 예제의 일부 [연습: 웹 페이지를 사용 하 여 선언적 구문으로 데이터 필터링](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)합니다.  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SortDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SortDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As SortDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SortDirection Direction { System::Web::UI::WebControls::SortDirection get(); void set(System::Web::UI::WebControls::SortDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Web.UI.WebControls.SortDirection with get, set" Usage="System.Web.UI.WebControls.Expressions.OrderByExpression.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Linq.IQueryable" /> 데이터 소스 개체의 정렬 방향을 가져오거나 설정합니다.</summary>
        <value>데이터 소스 개체의 정렬 방향입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 클래스는를 <xref:System.Web.UI.WebControls.QueryExtender> 컨트롤 데이터를 오름차순 또는 내림차순 정렬입니다. 정렬 작업의 방향을 사용 하 여 지정 된 된 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 내림차순에서 ListPrice 필드와 오름차순에서 ProductID 필드에서 데이터를 정렬 하는 방법을 보여 줍니다. 이 코드 예제는에서 제공 하는 더 큰 예제의 일부입니다 [연습: 웹 페이지를 사용 하 여 선언적 구문으로 데이터 필터링](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)합니다.  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="orderByExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">정렬을 적용할 데이터 소스를 지정합니다.</param>
        <summary><see cref="T:System.Linq.IQueryable" /> 값 및 <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" /> 값을 기반으로 <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction" /> 개체에 정렬 식을 적용합니다.</summary>
        <returns>식이 적용된 데이터 소스의 인스턴스입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenByExpressions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Web.UI.WebControls.Expressions.ThenBy&gt; ThenByExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Web.UI.WebControls.Expressions.ThenBy&gt; ThenByExpressions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThenByExpressions As Collection(Of ThenBy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Web::UI::WebControls::Expressions::ThenBy ^&gt; ^ ThenByExpressions { System::Collections::ObjectModel::Collection&lt;System::Web::UI::WebControls::Expressions::ThenBy ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThenByExpressions : System.Collections.ObjectModel.Collection&lt;System.Web.UI.WebControls.Expressions.ThenBy&gt;" Usage="System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Web.UI.WebControls.Expressions.ThenBy&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스에 <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> 값을 적용한 후에 적용할 <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" /> 식의 컬렉션을 가져오거나 설정합니다.</summary>
        <value>데이터 소스에 <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> 값을 적용한 후에 적용할 <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" /> 식의 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 정렬 한 후 작업을 사용 하 여 수행 됩니다 합니다 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 에 <xref:System.Web.UI.WebControls.QueryExtender> 컨트롤을 사용 하 여 작업을 수행할 수는 후속 정렬은 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 내림차순 ListPrice 필드와 순서를 사용 하 여 오름차순 제품 ID 필드로 데이터를 정렬 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A>합니다. 이 코드 예제는에서 제공 하는 보다 큰 예제의 일부 [연습: 웹 페이지를 사용 하 여 선언적 구문으로 데이터 필터링](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)합니다.  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>