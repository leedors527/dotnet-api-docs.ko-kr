<Type Name="RangeExpression" FullName="System.Web.UI.WebControls.Expressions.RangeExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="48f90c0a0c789d50b9df3f9cf17d55258bd68166" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51900502" /></Metadata><TypeSignature Language="C#" Value="public class RangeExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RangeExpression extends System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.RangeExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class RangeExpression&#xA;Inherits ParameterDataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class RangeExpression : System::Web::UI::WebControls::Expressions::ParameterDataSourceExpression" />
  <TypeSignature Language="F#" Value="type RangeExpression = class&#xA;    inherit ParameterDataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>값이 지정된 값보다 크거나 작은지 또는 지정된 두 값 사이에 있는지 여부를 결정하는 방법을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.QueryExtender> 컨트롤의 클래스를 사용 하 여 웹 페이지에서 데이터를 필터링 하는 기능을 제공 합니다 <xref:System.Web.UI.WebControls.Expressions> 네임 스페이스입니다. 이러한 클래스는 <xref:System.Web.UI.WebControls.Expressions.RangeExpression> 클래스입니다.  
  
 <xref:System.Web.UI.WebControls.Expressions.RangeExpression> 클래스 범위를 정의 하는 값의 쌍을 사용 하 여 데이터 열을 검색 합니다. 사용 된 <xref:System.Web.UI.WebControls.Expressions.RangeExpression.DataField%2A> 속성을 검색할 열을 지정 합니다. 사용할 합니다 <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A> 검색에 최소값을 포함할지 여부를 지정 하는 속성 결과 사용 하는 <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> 최 댓 값을 포함할지 여부를 지정 하는 속성입니다. 최대값과 최소값을 지정할 수 있습니다 [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] 컨트롤과 값 다음에 전달할 수는 <xref:System.Web.UI.WebControls.QueryExtender> 컨트롤의 매개 변수로 <xref:System.Web.UI.WebControls.ControlParameter> 컨트롤입니다. 결과 일반적으로 데이터 바인딩된 컨트롤에 표시 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 가격이 지정 된 범위에 있는 제품에 대 한 AdventureWorks 데이터베이스의 Products 테이블에서 ListPrice 열을 검색 하는 방법을 보여 줍니다 합니다 `FromTextBox` 고 `ToTextBox` 입력란입니다. 필터 최 솟 값을 포함 하지만 결과의 최 댓 값을 제외 합니다. 결과에 표시 되는 <xref:System.Web.UI.WebControls.Label> 제어 합니다.  
  
 이 코드 예제는에서 제공 하는 더 큰 예제의 일부입니다 [연습: 웹 페이지를 사용 하 여 선언적 구문으로 데이터 필터링](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)합니다.  
  
  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" /> 속성은 <see langword="null" />입니다.</exception>
    <related type="Article" href="https://msdn.microsoft.com/library/b93e32b9-af41-4539-a009-6cbbe809c702">QueryExtender 웹 서버 컨트롤 개요</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RangeExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.RangeExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RangeExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Expressions.RangeExpression" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.Expressions.RangeExpression.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>비교에 사용할 필드를 가져오거나 설정합니다.</summary>
        <value>비교에 사용할 필드입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 범위 식 지정된 된 범위에 대 한 데이터 필드를 검색 합니다.  
  
   
  
## Examples  
 다음 예제에서는 가격이 지정 된 범위에 있는 제품에 대 한 AdventureWorks 데이터베이스의 Products 테이블에서 가격 열을 검색 하는 방법을 보여 줍니다 합니다 `FromTextBox` 고 `ToTextBox` 입력란입니다.  
  
 이 코드 예제는에서 제공 하는 더 큰 예제의 일부입니다 [연습: 웹 페이지를 사용 하 여 선언적 구문으로 데이터 필터링](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)합니다.  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="rangeExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">비교에 사용할 개체입니다.</param>
        <summary>범위 비교가 수행된 <see cref="T:System.Linq.IQueryable" /> 개체를 가져옵니다.</summary>
        <returns>식이 적용된 <see cref="T:System.Linq.IQueryable" /> 개체의 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하 여 지정 된 <xref:System.Linq.IQueryable> 식을 확인 하는 개체입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" /> 속성은 <see langword="null" />입니다.  
  
또는 
<see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" /> 및 <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" /> 속성은 <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />로 설정됩니다.  
  
또는 
<see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" /> 또는 <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" /> 속성이 <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />으로 설정되지 않고 매개 변수 컬렉션이 비어 있는 경우.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.RangeType MaxType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Expressions.RangeType MaxType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxType As RangeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::RangeType MaxType { System::Web::UI::WebControls::Expressions::RangeType get(); void set(System::Web::UI::WebControls::Expressions::RangeType value); };" />
      <MemberSignature Language="F#" Value="member this.MaxType : System.Web.UI.WebControls.Expressions.RangeType with get, set" Usage="System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.RangeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범위의 최대값을 가져오거나 설정합니다.</summary>
        <value>최대값에 사용할 비교의 형식입니다. 기본값은 최대 비교가 수행되지 않음을 나타내는 <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에 대 한 가능한 값은 <xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>하십시오 <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>, 및 <xref:System.Web.UI.WebControls.Expressions.RangeType.None>합니다.  
  
 경우는 <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> 로 설정 된 <xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>, 범위의 최대값은 검색 결과에 포함 됩니다. 수행 같습니다는 > = 작업이 있습니다. 속성을 설정 하는 경우 <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive> 지정에 해당 하는 것이 필드는 > 또는 < 작업 합니다. 속성을 설정 하는 경우 <xref:System.Web.UI.WebControls.Expressions.RangeType.None>를 범위에 제한이 없습니다.  
  
   
  
## Examples  
 다음 예제에서는 범위에 지정 된 최소 값을 포함 하는 방법 및 최 댓 값을 제외 하는 방법을 보여 줍니다. 최대 및 최소 값을 텍스트 상자에 입력 됩니다. 이 코드 예제는에서 제공 하는 더 큰 예제의 일부입니다 [연습: 웹 페이지를 사용 하 여 선언적 구문으로 데이터 필터링](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)합니다.  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.RangeType MinType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Expressions.RangeType MinType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" />
      <MemberSignature Language="VB.NET" Value="Public Property MinType As RangeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::RangeType MinType { System::Web::UI::WebControls::Expressions::RangeType get(); void set(System::Web::UI::WebControls::Expressions::RangeType value); };" />
      <MemberSignature Language="F#" Value="member this.MinType : System.Web.UI.WebControls.Expressions.RangeType with get, set" Usage="System.Web.UI.WebControls.Expressions.RangeExpression.MinType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.RangeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>범위의 최소값을 가져오거나 설정합니다.</summary>
        <value>최소값에 사용할 비교의 형식입니다. 기본값은 최소 비교가 수행되지 않음을 나타내는 <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에 대 한 가능한 값은 <xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>하십시오 <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>, 및 <xref:System.Web.UI.WebControls.Expressions.RangeType.None>합니다.  
  
 경우는 <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A> 또는 <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> 속성이 <xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>, 범위의 최소 및 최대 값 검색 결과에 포함 됩니다. 수행 같습니다는 > = 또는 \<= 작업 합니다. 합니다 <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive> 필드는 해당을 > 또는 < 작업 및 <xref:System.Web.UI.WebControls.Expressions.RangeType.None> 에서는 범위를 제한 하지 않습니다.  
  
   
  
## Examples  
 다음 예제에서는 범위에 지정 된 최소 값을 포함 하는 방법 및 최 댓 값을 제외 하는 방법을 보여 줍니다. 최대 및 최소 값을 텍스트 상자에 입력 됩니다. 이 코드 예제는에서 제공 하는 더 큰 예제의 일부입니다 [연습: 웹 페이지를 사용 하 여 선언적 구문으로 데이터 필터링](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)합니다.  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>