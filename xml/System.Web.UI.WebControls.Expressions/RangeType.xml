<Type Name="RangeType" FullName="System.Web.UI.WebControls.Expressions.RangeType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a2a0f39f5bf160330c9394c3c6e31fd732e81373" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51913150" /></Metadata><TypeSignature Language="C#" Value="public enum RangeType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RangeType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.RangeType" />
  <TypeSignature Language="VB.NET" Value="Public Enum RangeType" />
  <TypeSignature Language="C++ CLI" Value="public enum class RangeType" />
  <TypeSignature Language="F#" Value="type RangeType = " />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><see cref="T:System.Web.UI.WebControls.Expressions.RangeExpression" /> 클래스의 인스턴스에서 사용할 숫자 비교 형식을 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Expressions.RangeExpression> 열거형 값이 지정 된 두 값 사이 있는지 여부를 나타내는 데 사용 됩니다. 열거형에는 합니다 <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A> 또는 <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> 의 속성을 <xref:System.Web.UI.WebControls.Expressions.RangeExpression> 클래스.  
  
 최소 및 최대 값을 지정 합니다. 포함 하거나 사용 하 여 지정 된 값을 제외할 수는 <xref:System.Web.UI.WebControls.Expressions.RangeType> 클래스입니다.  
  
 다음 표에 열거형 값을 보여 줍니다.  
  
|열거형|설명|  
|-----------------|-----------------|  
|없음|검색의 경계가 없음을 지정합니다.|  
|포괄 시간|큰지 또는 작은지 비교를 수행 합니다. 에 해당 하는 > = 또는 \<= 작업 합니다.|  
|전용|큰지 또는 작은지 비교를 수행 합니다. 에 해당 하는 > 또는 < 작업 합니다.|  
  
   
  
## Examples  
 다음 예제에서는 가격이에 지정 된 범위에 있는 제품에 대 한 AdventureWorks 데이터베이스의 Products 테이블에서 ListPrice 열을 검색 하는 방법을 보여 줍니다 합니다 `FromTextBox` 및 `ToTextBox` 입력란입니다. 필터 포함 속성을 사용 하 여 검색 결과에서 지정된 된 최소 값을 포함 하지만 지정 된 최대 값은 제외 합니다. 이 코드 예제는에서 제공 하는 더 큰 예제의 일부입니다 [연습: 웹 페이지를 사용 하 여 선언적 구문으로 데이터 필터링](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)합니다.  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Exclusive">
      <MemberSignature Language="C#" Value="Exclusive" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.WebControls.Expressions.RangeType Exclusive = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Expressions.RangeType.Exclusive" />
      <MemberSignature Language="VB.NET" Value="Exclusive" />
      <MemberSignature Language="C++ CLI" Value="Exclusive" />
      <MemberSignature Language="F#" Value="Exclusive = 1" Usage="System.Web.UI.WebControls.Expressions.RangeType.Exclusive" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.RangeType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>큰지 또는 작은지를 비교하도록 지정합니다. <see langword="&gt;" /> 또는 <see langword="&lt;" /> 연산자에 해당합니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="Inclusive">
      <MemberSignature Language="C#" Value="Inclusive" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.WebControls.Expressions.RangeType Inclusive = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Expressions.RangeType.Inclusive" />
      <MemberSignature Language="VB.NET" Value="Inclusive" />
      <MemberSignature Language="C++ CLI" Value="Inclusive" />
      <MemberSignature Language="F#" Value="Inclusive = 2" Usage="System.Web.UI.WebControls.Expressions.RangeType.Inclusive" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.RangeType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>크거나 같은지 또는 작거나 같은지를 비교하도록 지정합니다. <see langword="&gt;=" /> 또는 <see langword="&lt;=" /> 연산자에 해당합니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.WebControls.Expressions.RangeType None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Expressions.RangeType.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Web.UI.WebControls.Expressions.RangeType.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.RangeType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>검색의 경계가 없음을 지정합니다.</summary>
      </Docs>
    </Member>
  </Members>
</Type>