<Type Name="ThenBy" FullName="System.Web.UI.WebControls.Expressions.ThenBy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d6fb5f93ec8ea5410e9f2f3949bd633caae03125" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51913267" /></Metadata><TypeSignature Language="C#" Value="public class ThenBy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ThenBy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.ThenBy" />
  <TypeSignature Language="VB.NET" Value="Public Class ThenBy" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThenBy" />
  <TypeSignature Language="F#" Value="type ThenBy = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Linq.IQueryable" /> 식을 적용한 후에 <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" /> 데이터 소스 개체에 정렬 식을 적용하는 방법을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 정렬 한 후 작업을 사용 하 여 수행 됩니다는 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 식에는 <xref:System.Web.UI.WebControls.QueryExtender> 컨트롤을 사용 하 여 작업을 수행할 수는 후속 정렬은 <xref:System.Web.UI.WebControls.Expressions.ThenBy> 다른 데이터 필드에는 클래스입니다.  
  
   
  
## Examples  
 내림차순 ListPrice 필드로 데이터를 정렬 한 다음 ProductID 순서를 사용 하 여 오름차순을 필드는 방법을 보여 주는 다음 예제는 <xref:System.Web.UI.WebControls.Expressions.ThenBy> 형식입니다. 이 코드 예제는에서 제공 하는 더 큰 예제의 일부입니다 [연습: 웹 페이지를 사용 하 여 선언적 구문으로 데이터 필터링](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)합니다.  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/b93e32b9-af41-4539-a009-6cbbe809c702">QueryExtender 웹 서버 컨트롤 개요</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThenBy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.ThenBy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThenBy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.ThenBy.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.Expressions.ThenBy.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Linq.IQueryable" /> 식을 적용할 <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> 개체의 속성을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Linq.IQueryable" /> 식을 적용할 <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> 개체의 속성입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 지정 된 데이터 필드의 데이터를 정렬 합니다. 사용 하 여 다른 데이터 필드에서 후속 정렬 작업을 수행할 수는 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 는 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> 컬렉션입니다. 적용할 데이터 필드를 지정 하는이 속성은 `ThenBy` 정렬 작업을 합니다.  
  
   
  
## Examples  
 다음 예제에서는 내림차순으로 정렬 및 오름차순의 제품 ID 필드 ListPrice 필드로 데이터를 정렬 하는 방법을 보여 줍니다. 이 코드 예제는에서 제공 하는 더 큰 예제의 일부입니다 [연습: 웹 페이지를 사용 하 여 선언적 구문으로 데이터 필터링](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)합니다.  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SortDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SortDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.ThenBy.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As SortDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SortDirection Direction { System::Web::UI::WebControls::SortDirection get(); void set(System::Web::UI::WebControls::SortDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Web.UI.WebControls.SortDirection with get, set" Usage="System.Web.UI.WebControls.Expressions.ThenBy.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Linq.IQueryable" /> 데이터 소스 개체의 정렬 방향을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Linq.IQueryable" /> 데이터 소스 개체의 정렬 방향입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> 에 사용 되는 <xref:System.Web.UI.WebControls.QueryExtender> 컨트롤 데이터를 오름차순 또는 내림차순 정렬입니다. 정렬 작업의 방향을 사용 하 여 지정 된 된 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A> 속성입니다.  
  
   
  
## Examples  
 다음 예제에서는 ProductID 필드를 사용 하 여 오름차순 및 내림차순 ListPrice 필드로 데이터를 정렬 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.Expressions.ThenBy.Direction%2A> 속성입니다. 이 코드 예제는에서 제공 하는 더 큰 예제의 일부입니다 [연습: 웹 페이지를 사용 하 여 선언적 구문으로 데이터 필터링](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)합니다.  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>