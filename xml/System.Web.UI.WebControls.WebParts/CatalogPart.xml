<Type Name="CatalogPart" FullName="System.Web.UI.WebControls.WebParts.CatalogPart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9e7f52f5ba139891edbec368d4569ea90f3b399f" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59744573" /></Metadata><TypeSignature Language="C#" Value="public abstract class CatalogPart : System.Web.UI.WebControls.WebParts.Part" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CatalogPart extends System.Web.UI.WebControls.WebParts.Part" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CatalogPart&#xA;Inherits Part" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogPart abstract : System::Web::UI::WebControls::WebParts::Part" />
  <TypeSignature Language="F#" Value="type CatalogPart = class&#xA;    inherit Part" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.Part</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 영역에 있으면서 사용자가 웹 페이지에 추가할 수 있는 사용 가능한 웹 서버 컨트롤(특히 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤)의 카탈로그를 제공하는 컨트롤의 기본 클래스로 사용됩니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 클래스는 기본 클래스에 상주 하는 특수 한 컨트롤에 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 영역입니다. 이러한 파생 된 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤에 최종 사용자가 웹 페이지에 추가할 수 있는 웹 서버 컨트롤의 카탈로그를 제공 합니다. 사용 하 여 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 웹 응용 프로그램을 추가 하거나 서버 컨트롤을 제거 하 여 웹 페이지의 기능을 변경할 수 있는 유연성을 사용 하 여 최종 사용자에 게 제공 하려는 경우에 컨트롤입니다.  
  
 카탈로그 목록 일 뿐 이므로 하나 이상의 사용 가능한 웹 서버 컨트롤 (포함 하 여 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤, ASP.NET 서버 컨트롤 및 사용자 지정 또는 사용자 컨트롤) 사용자가 웹 페이지에 추가할 수 있습니다. 카탈로그에는 공통적인 특성은 명령 텍스트를 포함 하 여 최종 사용자에 대 한 여러 각 서버 컨트롤을 설명 하는 텍스트 도우미 서버 컨트롤을 선택 하 고 페이지에 추가할 컨트롤 일반적인 머리글, 바닥글 및 테두리입니다. 및 다양 한 스타일 특성을 추가 합니다.  
  
 세 가지 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 다음 표에 설명 된 대로 웹 파트 컨트롤 집합을 사용 하 여 제공 되는 제어 합니다. 각 유형의 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤 다른 소스에서 페이지에 추가 되는 서버 컨트롤을 포함 합니다.  
  
> [!IMPORTANT]
>  컨트롤에서 상속 되는 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 클래스에서 파생 된 영역에만 있을 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 클래스입니다.  
  
|컨트롤|설명|  
|-------------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>|컨트롤이 페이지에 닫혀 있는 있으며는 다시 열 수 있습니다 (페이지에 다시 추가)가 포함 됩니다. 이 형식의 카탈로그에는 컨트롤은 사용자가 다른 원본에서 페이지에 이미 추가 된 다음 닫은 컨트롤입니다.|  
|<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>|내에서 선언 된 서버 컨트롤이 들어를 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 컨트롤 자체에 포함 되어 있는 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 웹 페이지의 태그에는 영역입니다.|  
|<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>|컨트롤의 정의 파일 (상태 정보를 포함 하는 스키마에 의해 정의 된 XML 파일)을 카탈로그에 업로드 하는 사용자에 대 한 사용자 인터페이스 (UI)를 제공 합니다. 웹 페이지에 컨트롤을 추가할 수 있습니다. 컨트롤 자체의 카탈로그를이 형식에 표시 되지 않습니다. 카탈로그에는 방금 페이지에 추가할 수 있도록 외부 컨트롤에 대 한 정의 파일에 액세스 하기 위한 메커니즘입니다.|  
  
 합니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 클래스는 기본에서 상속 <xref:System.Web.UI.WebControls.WebParts.Part> 클래스, 웹 파트 컨트롤 집합의 다른 파트 컨트롤의 일반적인 동작을 갖도록 합니다. 또한 카탈로그 기능에 대 한 유용한 일부 멤버를 추가 합니다. <xref:System.Web.UI.WebControls.WebParts.CatalogPart.DisplayTitle%2A> 속성 컨트롤의 제목으로 표시 되 고 있는 실제 문자열을 가져옵니다. 이 속성의 값의 값과 같을 수는 <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> 속성 또는.NET Framework에서 제공 되는 기본 값을 해당 속성에 할당 된 값이 없으면입니다. <xref:System.Web.UI.WebControls.WebParts.CatalogPart.WebPartManager%2A> 및 <xref:System.Web.UI.WebControls.WebParts.CatalogPart.Zone%2A> 속성이 둘 다의 수명 주기를 제어 하는 두 개의 필수 개체에 대 한 편리한 액세스를 제공는 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤: 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤 및 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 포함 된 영역은 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 를 각각 제어 합니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 클래스도 여러 메서드를 포함 합니다. <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> 메서드는 상속 자가 구현 해야 하는 추상 메서드로 선언 됩니다. 의도 한 용도 카탈로그에서 컨트롤의 설명의 컬렉션을 반환 하는 경우 관련된 메서드 <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetWebPart%2A>, abstract로 선언 된 및 상속 자가 구현 해야 합니다. 인스턴스를 반환 하도록이 메서드는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 메서드에 매개 변수로 전달 되는 설명에 따라 제어 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 클래스입니다. 추상 클래스 이기 때문에 코드에서 직접 사용 되지 않습니다. 그러나 예제는 세 가지 파생을 사용 하는 방법을 표시 하는 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 일반적인 사용 시나리오를 보여 주기 위해 설정 하는 웹 파트 컨트롤을 사용 하 여 제공 되는 제어 합니다.  
  
 코드 예제에서는 네 가지 부분이 있습니다.  
  
-   웹 페이지의 디스플레이 모드를 변경할 수 있게 해 주는 사용자 정의 컨트롤입니다.  
  
-   세 가지를 포함 하는 웹 페이지 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 내에서 선언 된 모든 웹 파트 컨트롤 집합을 사용 하 여 제공 되는 제어를 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> 웹 페이지에 있습니다. 페이지도 포함 되어 있습니다를 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 컨트롤을 사용 하 여는 <xref:System.Web.UI.WebControls.AdRotator> 영역에 컨트롤이 선언 합니다.  
  
-   에 표시 되는 따옴표를 포함 하는 XML 파일을 <xref:System.Web.UI.WebControls.AdRotator> 웹 페이지의 컨트롤입니다.  
  
-   예제를 실행 하는 방법 설명 합니다.  
  
 이 코드 예제에 첫 번째 부분은 사용자가 웹 페이지의 디스플레이 모드를 변경할 수 있는 사용자 정의 컨트롤입니다. 이 코드 DisplayModeMenuCS.ascx 또는 DisplayModeMenuVB.ascx (언어에 따라 사용 하는) 라는 파일에 저장 해야 합니다. 이 컨트롤의 모드 및 소스 코드에 대 한 설명을 표시 하는 대 한 정보를 참조 [연습: 페이지 파트는 웹에서 디스플레이 모드 변경](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)합니다.  
  
 [!code-aspx-csharp[WebParts_CatalogPart_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPart_Overview/CS/displaymodemenucs.ascx#5)]
 [!code-aspx-vb[WebParts_CatalogPart_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPart_Overview/VB/displaymodemenuvb.ascx#5)]  
  
 코드 예제의 두 번째 부분은 웹 페이지입니다. 페이지에 포함 되어는 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> 컨트롤 및 자식 `<zonetemplate>` 세 개의 각 요소 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 웹 파트 컨트롤 집합은 선언 된 제공을 제어 합니다. 일부 특성에 설정 됩니다는 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 컨트롤 및는 \<스크립트 > 해당 컨트롤의 속성 페이지의 섹션에서는 프로그래밍 방식으로 액세스 하는 합니다. 사용자 페이지에 추가할 수 있는 하나의 자식 컨트롤을 포함 하는 컨트롤: 표준 <xref:System.Web.UI.WebControls.Calendar> 제어 합니다. 합니다 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> 및 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 사용자는 페이지를 카탈로그 디스플레이 모드를 전환할 때 제어는만 볼 수 있습니다.  
  
 페이지도 포함 되어 있습니다를 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 컨트롤 및 해당 자식 내 `<zonetemplate>` 요소는는 <xref:System.Web.UI.WebControls.AdRotator> XML 파일에서 교대로 반복 되는 메시지를 표시 하는 컨트롤입니다. 페이지가 표시 됩니다, 컨트롤 페이지 카탈로그에 추가 되 고 사용자 페이지를 카탈로그 디스플레이 모드로 전환 하 여 컨트롤을 다시 열 수 있습니다 하는 경우 해당 닫기 동사를 클릭 하 여 컨트롤을 닫으면에 액세스 하는 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 컨트롤을 다시 추가 합니다 닫힌된 컨트롤입니다.  
  
 [!code-aspx-csharp[WebParts_CatalogPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPart_Overview/CS/catalogpartcs.aspx#1)]
 [!code-aspx-vb[WebParts_CatalogPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPart_Overview/VB/catalogpartvb.aspx#1)]  
  
 코드 예제의 세 번째 부분은 XML 파일을 사용 하는 것입니다. 이 파일은 소스 파일을는 <xref:System.Web.UI.WebControls.AdRotator> 페이지의 선언 된 컨트롤입니다. 컨트롤에서 정기적으로 회전 하 고 표시 하는 즐겨 찾는 인용 부호를 포함 하는 파일입니다. 텍스트 편집기에 다음 콘텐츠를 복사 하 고 파일 Quotes.xml로 저장 합니다.  
  
```  
<?xml version="1.0" encoding="utf-8" ?>  
<Advertisements>  
  <Ad>  
    <AlternateText>  
      A stitch in time saves nine.  
    </AlternateText>      
  </Ad>  
  <Ad>  
    <AlternateText>  
      A penny saved is a penny earned.  
    </AlternateText>      
  </Ad>  
</Advertisements>  
```  
  
 코드 예제를 실행 하려면 브라우저에서 웹 페이지를 로드 합니다. 사용 하 여는 **디스플레이 모드** 선택 하려면 드롭다운 목록 컨트롤 **카탈로그** 카탈로그 디스플레이 모드를 전환 합니다. 에 설정 된 다양 한 속성 값의 효과 확인할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 포함 된 컨트롤을 <xref:System.Web.UI.WebControls.Calendar> 제어 합니다. 옆에 확인란을 선택할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.Calendar> 컨트롤을 클릭 **추가** 페이지에 추가 합니다. 클릭 하면 합니다 **표시 DeclarativeCatalogPart 속성** 단추 속성의 값을 제어 하는 표시 됩니다. 클릭할 수 **닫기** 를 표준 찾아보기 모드로 페이지를 반환 하는 페이지에 추가 된 컨트롤을 참조 하세요. 동사 메뉴 이제로 합니다 <xref:System.Web.UI.WebControls.AdRotator> 컨트롤 (제목 표시줄의 아래쪽 화살표로 표시 됨)을 클릭 **닫기**합니다. 컨트롤을 페이지 카탈로그에 추가 합니다. 마찬가지로 페이지 카탈로그 디스플레이 모드를 전환 하 고 표시할 페이지 카탈로그 하이퍼링크를 클릭 합니다 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 제어 합니다. 합니다 <xref:System.Web.UI.WebControls.AdRotator> 컨트롤은 제목, 있습니다 참조 **즐겨 찾는 따옴표**합니다. 선택 합니다 **즐겨 찾는 따옴표** 컨트롤을 클릭 합니다 **추가** 페이지로 컨트롤을 추가 하려면 단추입니다. 클릭 합니다 **닫기** 찾아보기 모드로 페이지를 반환 하는 단추입니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 제어도이 페이지에서는 선언 되었지만 컨트롤을 가져오는 방법을 보여 주는 샘플 이므로 좀 더 컨트롤의 전체 사용 하 여가 코드 예제에서 다루지 않습니다. 전체를 보려면 예제에서는 작업 클래스 개요 문서를 참조 하세요. 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 클래스 또는 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> 클래스입니다.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>때문에 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 클래스는 추상 클래스, 웹 페이지에서 직접 사용할 수 없습니다. 세 가지 웹 파트 컨트롤 집합 제공 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 기본 클래스에서 파생 된 컨트롤 (이 항목의 설명 섹션의 표에 나열 된) 및 웹 파트 페이지에서 사용할 수 있습니다. 이러한 제어는 대부분의 웹 서버 컨트롤의 카탈로그를 만드는 데 필요한 기능을 제공 해야 합니다. 그러나 있습니다 특별 한 경우도 사용자 지정을 개발 해야 할 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 제어 합니다. 예를 들어, 특수 한 유형의 만들면 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 서버 컨트롤을 웹 서비스를 통해 또는 데이터베이스에서 직접 사용할 수 있도록 제어 합니다. 상속 해야이 작업을 수행 하는 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 클래스입니다. 추상 재정의 해야 <see cref="M:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions" /> 하 고 <see cref="M:System.Web.UI.WebControls.WebParts.CatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" /> 반환 하는 구현을 제공 하는 방법의 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 또는 다른 서버 컨트롤 및 해당 설명을 보려면. 데이터베이스 또는 웹 서비스에서 다양 한 서버 컨트롤을 로드 하는 메서드를 해야 합니다.</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
    <related type="Article" href="https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08">연습: 사용자 지정 서버 컨트롤 개발 및 사용</related>
    <related type="Article" href="https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0">연습: 웹 파트 페이지에서 디스플레이 모드를 변경합니다.</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CatalogPart ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CatalogPart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>상속된 클래스 인스턴스에 사용할 수 있도록 클래스를 초기화합니다. 이 생성자는 상속된 클래스에서만 호출될 수 있습니다.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayTitle">
      <MemberSignature Language="C#" Value="public string DisplayTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogPart.DisplayTitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayTitle { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayTitle : string" Usage="System.Web.UI.WebControls.WebParts.CatalogPart.DisplayTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 컨트롤의 실제 현재 제목이 들어 있는 문자열을 가져옵니다.</summary>
        <value>실제로 표시되는 컨트롤의 전체 제목을 나타내는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPart.DisplayTitle%2A> 속성 값을 반환 하거나 현재 기본 <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> 속성 또는 컨트롤에 계산 된 값을 제목이 없는 경우.  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPart.DisplayTitle%2A> 속성은 런타임에 표시 타이틀의 실제 현재 값을 가져오는 읽기 전용, 계산 된 속성을 하도록 설계 되었습니다. 따라서 하지 않아야에 대 한 제목을 설정 하려면이 속성을 사용 하는 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 제어 합니다. 제목을 설정 하려면 기본 사용 <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 프로그래밍 방식으로 사용 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebParts.CatalogPart.DisplayTitle%2A> 속성입니다. 에 `<script>` 코드 액세스 페이지의 섹션을 <xref:System.Web.UI.WebControls.WebParts.CatalogPart.DisplayTitle%2A> 의 속성 `DeclarativeCatalogPart1` 페이지의 선언 된. 이 코드에서는 웹 페이지만 보여 줍니다. 전체 코드 예제를 실행 하는 데 필요한 참조를 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 클래스 개요입니다.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.EditorPart.DisplayTitle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableWebPartDescriptions">
      <MemberSignature Language="C#" Value="public abstract System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAvailableWebPartDescriptions () As WebPartDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::UI::WebControls::WebParts::WebPartDescriptionCollection ^ GetAvailableWebPartDescriptions();" />
      <MemberSignature Language="F#" Value="abstract member GetAvailableWebPartDescriptions : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" Usage="catalogPart.GetAvailableWebPartDescriptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>카탈로그에서 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤에 대한 설명의 컬렉션을 반환합니다.</summary>
        <returns>카탈로그의 각 컨트롤에 대한 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" />이 들어 있는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> 카탈로그에 각 컨트롤에 대 한 설명 정보를 반환 합니다. A <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 개체에 대 한 중요 한 정보를 포함 하는 경량 개체 인지를 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤과 기본에서상속되는몇가지중요한속성의값에대한개체참조를해당ID를포함하여컨트롤<xref:System.Web.UI.WebControls.WebParts.Part>클래스와 같이 <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> 고 <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>입니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> 메서드는 성능을 향상 합니다. 에 포함 된 제목, 설명, 아이콘 (있는 경우) 및 ID를 포함 하 여 각 컨트롤에 대 한 일부 정보는 카탈로그를 만든 경우 필요한 이 정보를 얻으려면 각 컨트롤의 인스턴스를 만드는 대신 호출자가 사용할 수는 <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> 만 각 컨트롤에 대 한 설명 정보를 반환 하는 메서드.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>합니다 <see cref="M:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions" /> 메서드는 추상 클래스에서 구현 해야 하므로 파생 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 컨트롤입니다. 이 메서드는 포함 된 영역을 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 컨트롤 및 연결 된 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" /> 개체 때 내용의 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 영역 렌더링 됩니다.</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected override System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPart.GetDesignModeState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetDesignModeState () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::IDictionary ^ GetDesignModeState();" />
      <MemberSignature Language="F#" Value="override this.GetDesignModeState : unit -&gt; System.Collections.IDictionary" Usage="catalogPart.GetDesignModeState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 컨트롤의 부모 영역에 대한 현재 상태를 검색합니다.</summary>
        <returns><see cref="T:System.Collections.IDictionary" /> 컨트롤을 포함하는 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 영역의 현재 상태가 있는 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetDesignModeState%2A> 포함 된 영역의 상태에 대 한 정보를 반환 하는 메서드를 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤입니다. 상태 정보 사전의 형태로 반환 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebPart">
      <MemberSignature Language="C#" Value="public abstract System.Web.UI.WebControls.WebParts.WebPart GetWebPart (System.Web.UI.WebControls.WebParts.WebPartDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPart GetWebPart(class System.Web.UI.WebControls.WebParts.WebPartDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetWebPart (description As WebPartDescription) As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::UI::WebControls::WebParts::WebPart ^ GetWebPart(System::Web::UI::WebControls::WebParts::WebPartDescription ^ description);" />
      <MemberSignature Language="F#" Value="abstract member GetWebPart : System.Web.UI.WebControls.WebParts.WebPartDescription -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="catalogPart.GetWebPart description" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.Web.UI.WebControls.WebParts.WebPartDescription" />
      </Parameters>
      <Docs>
        <param name="description">특정 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />에 대한 참조가 포함된 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />입니다.</param>
        <summary>메서드에 전달되는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 개체에서 참조하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> 컨트롤을 카탈로그에서 검색합니다.</summary>
        <returns><paramref name="description" /> 매개 변수에서 개체가 참조하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetWebPart%2A> 메서드가 반환 되는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 카탈로그에서 제어 합니다. 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 메서드에 전달 되는 개체에 특정 일치 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 및 컨트롤을 메서드에서 반환 하는 데 사용 합니다.  
  
 카탈로그에서 파생 되지 않은 서버 컨트롤을 포함 하는 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart> ASP.NET 서버 컨트롤, 사용자 지정 서버 컨트롤 또는 사용자 지정 컨트롤와 같은 클래스를 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤을 사용 하 여 서버 컨트롤 래핑해야를 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 컨트롤을 반환 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 이 메서드에서 컨트롤입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>합니다 <see cref="M:System.Web.UI.WebControls.WebParts.CatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" /> 메서드는 추상 클래스에서 구현 해야 하므로 파생 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 컨트롤입니다. 이 메서드는 포함 된 영역을 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 연결 된 컨트롤 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" /> 개체 및는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 웹 페이지에는 개체입니다.</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPart.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="catalogPart.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.Control.PreRender" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPart.OnPreRender%2A> 메서드 호출 기본 <xref:System.Web.UI.Control.OnPreRender%2A?displayProperty=nameWithType> 메서드를 인스턴스에 있는지 확인 하 고는 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 클래스를 만들었습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 컨트롤이 들어 있는 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />가 <see langword="null" />인 경우</exception>
        <block subset="none" type="overrides"><para>이 메서드는 필요에 따라 파생된 클래스에서 재정의할 수 있습니다.</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPart.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDesignModeState (data As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDesignModeState(System::Collections::IDictionary ^ data);" />
      <MemberSignature Language="F#" Value="override this.SetDesignModeState : System.Collections.IDictionary -&gt; unit" Usage="catalogPart.SetDesignModeState data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">컨트롤의 디자인 타임 데이터가 들어 있는 <see cref="T:System.Collections.IDictionary" />입니다.</param>
        <summary>컨트롤에 대한 디자인 타임 데이터를 설정합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="WebPartManager">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogPart.WebPartManager" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property WebPartManager As WebPartManager" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::WebPartManager ^ WebPartManager { System::Web::UI::WebControls::WebParts::WebPartManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebPartManager : System.Web.UI.WebControls.WebParts.WebPartManager" Usage="System.Web.UI.WebControls.WebParts.CatalogPart.WebPartManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 클래스의 현재 인스턴스에 대한 참조를 가져옵니다.</summary>
        <value>현재 웹 페이지에 대한 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPart.WebPartManager%2A> 속성에 대 한 방법을 제공을 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 현재 액세스 하기 위해 컨트롤 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 페이지의 개체입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="Zone">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.CatalogZoneBase Zone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogZoneBase Zone" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogPart.Zone" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Zone As CatalogZoneBase" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::CatalogZoneBase ^ Zone { System::Web::UI::WebControls::WebParts::CatalogZoneBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Zone : System.Web.UI.WebControls.WebParts.CatalogZoneBase" Usage="System.Web.UI.WebControls.WebParts.CatalogPart.Zone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogZoneBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 컨트롤이 들어 있는 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 영역에 대한 참조를 가져옵니다.</summary>
        <value>컨트롤이 들어 있는 영역에 해당하는 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPart.Zone%2A> 속성을 사용 하면 한 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 해당 영역에 대 한 참조를 가져올 컨트롤입니다. 속성은 읽기 전용 이지만 영역 자체의 기본 속성을 프로그래밍 방식으로 변경할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebZone" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
  </Members>
</Type>