<Type Name="CatalogPartCollection" FullName="System.Web.UI.WebControls.WebParts.CatalogPartCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a36c87d360cc961a376d309f8608a03d6ab1dadc" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59743286" /></Metadata><TypeSignature Language="C#" Value="public sealed class CatalogPartCollection : System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CatalogPartCollection extends System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CatalogPartCollection&#xA;Inherits ReadOnlyCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogPartCollection sealed : System::Collections::ReadOnlyCollectionBase" />
  <TypeSignature Language="F#" Value="type CatalogPartCollection = class&#xA;    inherit ReadOnlyCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ReadOnlyCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>최종 사용자가 웹 페이지에 추가할 수 있는 웹 서버 컨트롤의 카탈로그를 제공하는 데 사용되는 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 컬렉션을 포함합니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 클래스는 읽기 전용 컬렉션입니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 일반적으로 사용 되는 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 집합을 추적 하는 영역 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 영역에 포함 된 컨트롤입니다.  
  
 영역에서는 새 웹 파트 페이지 카탈로그 모드로 들어가면 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 으로 구성 된 개체는 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤입니다. 각 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤 컬렉션에 있는 0 개 이상의 웹 서버 컨트롤에 사용 가능한 서버 컨트롤의 카탈로그의 형태로 표시 되는 참조를 포함할 수 있습니다.  
  
 만들 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 집합에서 대규모 작업을 수행 해야 하는 예를 들어 경우 프로그래밍 방식으로 자신의 용도 맞게 컨트롤의 컬렉션 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤입니다. 경우에는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체는 읽기 전용, 컬렉션에서 참조 하는 내부 컨트롤에 프로그래밍 방식으로 같이 변경할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 몇 가지 사용 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 클래스입니다. 이 코드 예제에서는 네 가지 부분이 있습니다.  
  
-   웹 파트 페이지의 디스플레이 모드를 변경할 수 있게 해 주는 사용자 정의 컨트롤입니다.  
  
-   사용자 지정에 대 한 클래스 <xref:System.Web.UI.WebControls.WebParts.WebPart> 라는 컨트롤 `TextDisplayWebPart`, 웹 페이지에서 참조 되는 및 중 하나에 포함 되는 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤입니다.  
  
-   참조 하는 웹 페이지는 `TextDisplayWebPart` 컨트롤을 포함를 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> 의 두 개를 사용 하 여 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 설정 영역에서 선언 된 웹 파트 컨트롤에서 제어 하 고 만들고 조작 하는 이벤트 구동 코드를 포함를 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체.  
  
-   코드 예제에서는 브라우저에서 로드할 때의 작동 원리에 대해 설명 합니다.  
  
 코드 예제의 첫 번째 부분은 사용자 정의 컨트롤입니다. 사용자 정의 컨트롤에 대 한 소스 코드는 다른 항목에서 제공 됩니다. 작동 하려면이 코드 예제에서는 사용자 컨트롤은.ascx 파일을 가져올 필요가 [연습: 웹 파트 페이지에서 디스플레이 모드를 변경](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0) 항목 및이 코드 예제에서.aspx 페이지와 동일한 폴더에 있습니다.  
  
 코드 예제의 두 번째 부분은 `TextDisplayWebPart` 제어 합니다. 코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다. 명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다. 또는 컴파일 수 있는 수 동적으로 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다. 컴파일하는 두 가지 메서드를 보여 주는 연습을 참조 하세요. [연습: 개발 및 사용자 지정을 사용 하 여 웹 서버 컨트롤](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)합니다. 컨트롤에 라는 속성이 `ContentText`;이 속성에는 사용자가 텍스트 상자에 입력 값을 보유 합니다.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/textdisplaywebpart.vb#3)]  
  
 코드 예제에서는 세 번째 부분에는 웹 페이지입니다. 다음에 유의 합니다 `<asp:catalogzone>` 페이지에 대 한 요소에는 두 가지에 대 한 선언이 포함 되어 있습니다. <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤. 이러한 컨트롤을 사용자 지정의 일부가 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 때 생성 되는 개체는 `Button1_Click` 메서드를 실행 합니다. <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 컨트롤 런타임 시 사용자가 이전에 닫혀 있는 웹 서버 컨트롤을 포함 합니다. 컨트롤의 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 컨트롤을 페이지에 다시 추가할 수 있습니다. 합니다 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 컨트롤을 사용 하면 사용자 지정의 선언이 `TextDisplayWebPart` 제어 합니다. 페이지 카탈로그 모드일 때 사용자를 추가할 수는 `TextDisplayWebPart` 표준 찾아보기 모드로 사용할 수 있도록 컨트롤 페이지입니다.  
  
 [!code-aspx-csharp[WebParts_CatalogPartCollection_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#1)]
 [!code-aspx-vb[WebParts_CatalogPartCollection_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#1)]  
  
 브라우저에서 페이지를 로드할 때 전환할 수 있습니다 페이지 카탈로그 모드로 선택 하 여 **카탈로그** 에 **디스플레이 모드** 드롭다운 목록 컨트롤입니다. 사용자 지정을 추가할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 옆에 있는 확인란을 선택 하 고 클릭 하 여 페이지를 **추가**합니다. 클릭 **닫기** 페이지 찾아보기 모드를 반환 합니다. 컨트롤에 방금 추가한 동사 메뉴 (제목 표시줄에 나타나는 아래쪽 화살표)를 클릭 하 고 클릭 **닫기**, 컨트롤에 추가한 페이지에서 제거 합니다 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 제어 합니다. 페이지 카탈로그 모드로 돌아가서를 **페이지 카탈로그** 의 내용을 보려면 링크를 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 컨트롤입니다. 이제 닫은 컨트롤 있습니다 나타나는지 확인 합니다. 클릭 하는 **표시 CatalogPart 속성** 액세스 단추를 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체 및 포함된 된 특정 속성을 표시 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤입니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 포함 된 영역 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤은 일반적으로 만드는 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체를 통해를 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> 메서드. 그러나 만들 수도 있습니다 고유한 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 프로그래밍 방식으로 다른 용도로 개체입니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogPartCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogPartCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> 클래스의 비어 있는 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> 생성자의 빈 인스턴스를 초기화 합니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 클래스입니다. 이 생성자의 오버이 로드에서 내부적으로 사용 되는 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> 클래스의 해당 <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> 빈 컬렉션 개체를 만드는 방법. 영역 다음의 모든 인스턴스를 만듭니다는 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤에서 자식 영역 템플릿 선언 및 추가할 컬렉션의 내부 메서드를 사용 합니다.  
  
 이 오버 로드를 사용할 수 없습니다는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> 의 새 인스턴스를 만드는 생성자입니다를 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 추가한 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 에 컨트롤을 합니다. 에 대 한 다른 오버 로드 중 하나를 사용 해야는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> 생성자 대신 합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogPartCollection (System.Collections.ICollection catalogParts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection catalogParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (catalogParts As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogPartCollection(System::Collections::ICollection ^ catalogParts);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.CatalogPartCollection : System.Collections.ICollection -&gt; System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="new System.Web.UI.WebControls.WebParts.CatalogPartCollection catalogParts" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="catalogParts" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="catalogParts"><see cref="T:System.Collections.ICollection" /> 컨트롤의 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> 컨트롤의 <see cref="T:System.Collections.ICollection" /> 컬렉션을 전달하여 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> 생성자의 인스턴스를 초기화 합니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 클래스 및 컬렉션의 전달 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤입니다. 이 하나의 오버 로드는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> 새 하는 데 사용할 수 있는 생성자 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체를 추가 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 에 컨트롤을 합니다.  
  
 하지만 합니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 생성자가 만든 인스턴스는 읽기 전용, 개별에 액세스할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컬렉션에서 프로그래밍 방식으로 제어 하 고 해당 속성 및 메서드를 호출 합니다.  
  
 이 생성자를 사용 하는 한 가지 일반적인 시나리오의 전체 집합에 대해 일괄 작업을 수행 하려는 경우 것 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 콘텐츠, 모양 또는 항목의 관련된 그룹의 위치를 변경 하는 등의 컨트롤입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용자 지정을 만드는 방법을 보여 줍니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>, 개별 변경 하려면 일괄 처리 작업을 수행 하 고 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 읽기 전용 이지만 컬렉션의 제어 합니다. 예제를 실행 하는 데 필요한 전체 코드의 예제 섹션을 참조 하세요.를 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 클래스 개요 항목입니다.  
  
 코드를 `Button1_Click` 메서드를 만듭니다를 <xref:System.Collections.ArrayList> 개체를 추가 하는 두 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 개체에 대 한 페이지에서 제어 하 고 다음을 만듭니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 사용 하 여 개체를 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> 생성자입니다. 어떻게 변경할 수 있습니다 일괄 처리를 내부는 방법도 보여 줍니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컬렉션 자체는 읽기 전용으로 제어 합니다. 컬렉션을 반복 하는 코드 업데이트를 <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> 각 컨트롤의 속성입니다.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 브라우저에서 페이지를 로드할 때 전환할 수 있습니다 페이지 카탈로그 모드로 선택 하 여 **카탈로그** 에 **디스플레이 모드** 드롭다운 목록 컨트롤입니다. 클릭 하는 **표시 CatalogPart 속성** 액세스 단추를 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체 및 포함된 된 특정 속성을 표시 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤입니다. 또한의 테두리 내 제목 텍스트 위에 마우스 포인터를 놓을 경우는 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 컨트롤 (설명을 도구 설명에 표시) 단추를 클릭할 때 컨트롤에 추가 된 새 설명 텍스트를 볼 수 있습니다. 클릭할 경우 합니다 **페이지 카탈로그** 표시할 링크는 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 컨트롤에 대 한 업데이트 된 설명을 수도 있음을 찾을 수 있습니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogPartCollection (System.Web.UI.WebControls.WebParts.CatalogPartCollection existingCatalogParts, System.Collections.ICollection catalogParts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.WebParts.CatalogPartCollection existingCatalogParts, class System.Collections.ICollection catalogParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (existingCatalogParts As CatalogPartCollection, catalogParts As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogPartCollection(System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ existingCatalogParts, System::Collections::ICollection ^ catalogParts);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.CatalogPartCollection : System.Web.UI.WebControls.WebParts.CatalogPartCollection * System.Collections.ICollection -&gt; System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="new System.Web.UI.WebControls.WebParts.CatalogPartCollection (existingCatalogParts, catalogParts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="existingCatalogParts" Type="System.Web.UI.WebControls.WebParts.CatalogPartCollection" />
        <Parameter Name="catalogParts" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="existingCatalogParts">영역에 있는 기존 <see cref="T:System.Collections.ICollection" /> 컨트롤의 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />입니다.</param>
        <param name="catalogParts">추가 <see cref="T:System.Collections.ICollection" /> 컨트롤의 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />입니다.</param>
        <summary>영역의 기존 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> 컨트롤에 대한 <see cref="T:System.Collections.ICollection" /> 컬렉션과 컨트롤의 추가 컬렉션을 전달하여 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.WebParts.CatalogPart catalogPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.WebParts.CatalogPart catalogPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(System.Web.UI.WebControls.WebParts.CatalogPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::WebParts::CatalogPart ^ catalogPart);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.WebParts.CatalogPart -&gt; bool" Usage="catalogPartCollection.Contains catalogPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalogPart" Type="System.Web.UI.WebControls.WebParts.CatalogPart" />
      </Parameters>
      <Docs>
        <param name="catalogPart">컬렉션에 있는지 여부를 확인하기 위해 검사할 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />입니다.</param>
        <summary>특정 컨트롤이 컬렉션에 있는지 여부를 나타내는 값을 반환합니다.</summary>
        <returns>특정 컨트롤이 컬렉션에 있는지 여부를 나타내는 부울 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains%2A> 메서드를 사용 하면 특정 지 여부를 결정 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 개체의 일부인를 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 확인 하는 방법을 보여 줍니다. 있는지 여부를 특정 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤이의 멤버 인지를 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체입니다. 예제를 실행 하는 데 필요한 전체 코드의 예제 섹션을 참조 하세요.를 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 클래스 개요 항목입니다.  
  
 코드를 `Button1_Click` 메서드를 만듭니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 라는 개체 `myParts`합니다. 메서드를 사용 하 여는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains%2A> 결정 하는 방법 여부를 `PageCatalogPart1` 컨트롤 있고, 그렇다면 컨트롤을 검색 하 고 속성 값을 변경 합니다.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 브라우저에서 페이지를 로드할 때 전환할 수 있습니다 페이지 카탈로그 모드로 선택 하 여 **카탈로그** 에 **디스플레이 모드** 드롭다운 목록 컨트롤입니다. 사용자 지정을 추가 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 옆에 있는 확인란을 선택 하 고 클릭 하 여 페이지를 **추가**합니다. 클릭 **닫기** 페이지 찾아보기 모드를 반환 합니다. 컨트롤에 방금 추가한 동사 메뉴 (제목 표시줄에 나타나는 아래쪽 화살표)를 클릭 하 고 클릭 **닫기**, 컨트롤에 추가한 페이지에서 제거 합니다 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 제어 합니다. 페이지 카탈로그 모드로 돌아가서를 **페이지 카탈로그** 의 내용을 보려면 링크를 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 컨트롤입니다. 닫은 컨트롤에 추가 된 것을 알 수 있습니다. 클릭 하는 **표시 CatalogPart 속성** 액세스 단추를 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체 및 포함된 된 특정 속성을 표시 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤입니다. 에 포함 된 서버 컨트롤 옆의 확인란을 선택 합니다 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 컨트롤을 클릭 **추가** 페이지에 다시 추가를 클릭 **닫기** 찾아보기 모드로 페이지를 반환 하 합니다. 컨트롤에 다시 동사 메뉴를 클릭 하 고 닫기 동사는 사라지고 이제 유의 합니다. 코드에 의해 제거 되었습니다 합니다 `Button1_Click` 메서드를 사용 합니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains%2A> 확인 하는 방법 `PageCatalogPart1`, 설정한 후 해당 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> 속성을 `false`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.Contains(System.Object)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.WebParts.CatalogPart[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.WebParts.CatalogPart[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As CatalogPart(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::WebParts::CatalogPart ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.UI.WebControls.WebParts.CatalogPart[] * int -&gt; unit" Usage="catalogPartCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.UI.WebControls.WebParts.CatalogPart[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">복사한 컬렉션이 포함될 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 개체의 배열입니다.</param>
        <param name="index">배열에서 컬렉션 내용이 배치될 시작 지점입니다.</param>
        <summary>컬렉션을 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 개체의 배열에 복사합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo%2A> 메서드는 사용자 지정 배열을 포함할 수 있는 조합 하려는 경우에 유용 합니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체 또는 해당 컨트롤의 하위 집합.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.CatalogPartCollection Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.CatalogPartCollection Empty" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As CatalogPartCollection " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ Empty;" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컬렉션의 읽기 전용인 빈 정적 인스턴스를 참조합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 읽기 전용으로 빈 정적 인스턴스를 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 메서드에서 반환 되는 적절 한 개체 형식 또는 다른 개체를 사용 하 여 인스턴스를 비교 하는 빈 컬렉션 인스턴스를 원하는 하지만 멤버를 추가할 필요가 없습니다 경우에서 메모리 사용량이 줄어듭니다 합니다 인스턴스입니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.WebParts.CatalogPart catalogPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.WebParts.CatalogPart catalogPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::WebParts::CatalogPart ^ catalogPart);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.WebParts.CatalogPart -&gt; int" Usage="catalogPartCollection.IndexOf catalogPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalogPart" Type="System.Web.UI.WebControls.WebParts.CatalogPart" />
      </Parameters>
      <Docs>
        <param name="catalogPart">컬렉션의 멤버인 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />입니다.</param>
        <summary>컬렉션의 특정 멤버 위치를 반환합니다.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />의 멤버인 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> 메서드는 여러 개인 경우에 유용 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 웹 파트 페이지에 컨트롤을 컬렉션에서 특정 컨트롤을 찾을 해야 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 멤버의 위치를 확인 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 사용 하 여 컬렉션의 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> 속성입니다. 예제를 실행 하는 데 필요한 전체 코드의 예제 섹션을 참조 하세요.를 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 클래스 개요 항목입니다.  
  
 코드를 `Button1_Click` 메서드를 만듭니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 라는 개체 `myParts`합니다. 메서드를 사용 하는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> 의 위치를 검색할 속성의 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 컨트롤을 선택한 다음 컨트롤에 속성 값을 변경 합니다.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 브라우저에서 페이지를 로드 한 후를 전환할 수 있습니다 페이지 카탈로그 모드를 선택 하 여 **카탈로그** 에 **디스플레이 모드** 드롭다운 목록 컨트롤입니다. 클릭 하는 **표시 CatalogPart 속성** 액세스 단추를 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체 및 포함된 된 특정 속성을 표시 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤입니다. 클릭 합니다 **페이지 카탈로그** 의 내용을 표시 하는 링크는 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 제어 합니다. 때문에 제목과 테두리가 없습니다만 있습니다 해당 <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeType%2A> 변경 된 속성 값 <xref:System.Web.UI.WebControls.WebParts.PartChromeType.TitleOnly> 사용 하는 코드에는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> 컨트롤을 검색할 속성.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.IndexOf(System.Object)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>위치와 고유 식별자에 따라 컬렉션의 특정 멤버를 반환합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPart this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPart Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As CatalogPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::CatalogPart ^ default[int] { System::Web::UI::WebControls::WebParts::CatalogPart ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.WebParts.CatalogPart" Usage="System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">컬렉션에 있는 특정 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />의 인덱스입니다.</param>
        <summary>컬렉션에서의 위치를 기준으로 컬렉션의 멤버를 가져오거나 설정합니다.</summary>
        <value>컬렉션의 지정된 인덱스에 있는 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> 인덱서를 사용 하면 기본 액세스할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 인덱스로 개체 및 해당 속성 값을 변경 하거나 메서드를 호출 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는의 멤버에 액세스 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 해당 항목이 있는 인덱스를 사용 하 여 개체입니다. 예제를 실행 하는 데 필요한 전체 코드의 예제 섹션을 참조 하세요.를 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 클래스 개요 항목입니다.  
  
 코드를 `Button1_Click` 메서드를 만듭니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 라는 개체 `myParts`합니다. 메서드를 사용 하는 참고를 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> 인덱서는 컬렉션의 첫 번째 멤버에서 정보를 검색 합니다.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 브라우저에서 페이지를 로드할 때 전환할 수 있습니다 페이지 카탈로그 모드로 선택 하 여 **카탈로그** 에 **디스플레이 모드** 드롭다운 목록 컨트롤입니다. 클릭 하는 **표시 CatalogPart 속성** 액세스 단추를 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체 및 포함된 된 특정 속성을 표시 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤입니다. 내에서 사용 가능한 서버 컨트롤의 수를 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 제어를 사용 하 여 가져온 합니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> 인덱서는 `Button1_Click` 메서드.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPart this[string id] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPart Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(id As String) As CatalogPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::CatalogPart ^ default[System::String ^] { System::Web::UI::WebControls::WebParts::CatalogPart ^ get(System::String ^ id); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Web.UI.WebControls.WebParts.CatalogPart" Usage="System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">컬렉션의 특정 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />에 대한 고유한 식별자입니다.</param>
        <summary>고유한 문자열 식별자를 기반으로 컬렉션의 멤버를 반환합니다.</summary>
        <value>컬렉션에서 ID가 <paramref name="id" /> 값과 동일한 첫 번째 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> 인덱서를 사용 하면 기본 액세스할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 문자열 식별자를 사용 하 여 개체입니다. 하지만 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체는 읽기 전용, 속성 값을 변경 하거나 인덱서를 통해 액세스 하는 내부 컨트롤에서 메서드를 호출할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는의 멤버에 액세스 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 문자열 ID 값을 사용 하 여 개체입니다. 예제를 실행 하는 데 필요한 전체 코드의 예제 섹션을 참조 하세요.를 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 클래스 개요 항목입니다.  
  
 코드를 `Button1_Click` 메서드를 만듭니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 라는 개체 `myParts`합니다. 메서드를 사용 하는 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> 에 대 한 정보를 검색 하는 인덱서를 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 컨트롤 컬렉션의 두 번째 멤버입니다.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 브라우저에서 페이지를 로드할 때 전환할 수 있습니다 페이지 카탈로그 모드로 선택 하 여 **카탈로그** 에 **디스플레이 모드** 드롭다운 목록 컨트롤입니다. 클릭 하는 **표시 CatalogPart 속성** 액세스 단추를 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 개체 및 포함된 된 특정 속성을 표시 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 컨트롤입니다. 내에서 사용 가능한 서버 컨트롤의 수를 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 제어를 사용 하 여 가져온 합니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> 인덱서는 `Button1_Click` 메서드.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
  </Members>
</Type>