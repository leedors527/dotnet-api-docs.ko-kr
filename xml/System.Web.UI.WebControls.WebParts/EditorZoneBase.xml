<Type Name="EditorZoneBase" FullName="System.Web.UI.WebControls.WebParts.EditorZoneBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6bd98977df69ed8d87296afae2ea493e4b45f45a" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59355438" /></Metadata><TypeSignature Language="C#" Value="public abstract class EditorZoneBase : System.Web.UI.WebControls.WebParts.ToolZone" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EditorZoneBase extends System.Web.UI.WebControls.WebParts.ToolZone" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EditorZoneBase&#xA;Inherits ToolZone" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditorZoneBase abstract : System::Web::UI::WebControls::WebParts::ToolZone" />
  <TypeSignature Language="F#" Value="type EditorZoneBase = class&#xA;    inherit ToolZone" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.ToolZone</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 컨트롤의 컨테이너 역할을 하는 모든 영역 컨트롤에 대한 기본 클래스로 사용됩니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 클래스는 특수 영역 클래스에서 상속 되는 <xref:System.Web.UI.WebControls.WebParts.ToolZone> 클래스 및 포함 된 파생된 영역에 대 한 기본 동작 집합을 제공 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤입니다. 다른 유형의 여러 가지 <xref:System.Web.UI.WebControls.WebParts.ToolZone> 클래스; 자세한 내용은 개요 항목에 대 한 참조를 <xref:System.Web.UI.WebControls.WebParts.ToolZone> 클래스입니다. 다른 도구 영역과 마찬가지로 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 페이지 표준 찾아보기 모드로 중인 영역 표시 되지 않습니다. 즉, 표시은 경우에 페이지 편집 디스플레이 모드에서입니다. 또한 다른 도구 영역을 같은 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 영역에는 특별 한 형식의 컨트롤을 포함 하도록 설계 된 것만 포함할 수 있습니다 (이 예제의 경우 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤).  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 영역은 포함 된 편집 컨트롤에 대 한 특별 한 UI를 제공 합니다. 이러한 UI 요소 대부분은 웹 파트 컨트롤 집합의 모든 영역에 공통적으로 적용 합니다. 웹 파트 영역에 일반적인 UI 요소에 자세히 알아보려면,에 대 한 클래스 개요 항목을 참조 합니다 <xref:System.Web.UI.WebControls.WebParts.WebZone> 클래스입니다.  
  
 때문에 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 클래스는 추상 클래스, 웹 페이지에서 직접 사용할 수 없습니다. 상속 되는 컨트롤을 사용 해야 하는 대신는 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 클래스 및 해당 동작을 구현 합니다. 웹 파트 컨트롤 집합에서 제공 되는 파생된 영역을 사용 하거나 수를 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 제어 하거나 사용자 고유의 사용자 지정 파생 될 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 제어 합니다.  
  
 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 클래스의 다른 특성과 공통 사용자 인터페이스 (UI) 최종 사용자가 속성, 레이아웃, 모양, 편집할 수 있도록 하는 특수 컨트롤을 포함 하도록 제공 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다. 와 같은 동사를 UI에 적용 되는 일부 속성 참조를 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A>, <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A>, 및 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A> 속성입니다. 동사는 페이지에서 사용자가 수행 하는 일반적인 작업이 단추, 링크, 메뉴 항목 또는 기타 요소를 UI에 표시 됩니다. 예를 들어, 사용자 컨트롤의 속성을 편집 하는 경우 변경 내용을 저장 하려면 적용 동사를 클릭할 수 있습니다.  
  
 여러 다른 속성이 편집 UI의 다양 한 지점에 표시 되는 텍스트를 적용 합니다. 여기에 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText%2A>, <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText%2A>, <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.HeaderText%2A>, 및 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InstructionText%2A> 속성.  
  
 두 가지 중요 한 속성 관련된 컨트롤에 대 한 참조를 제공합니다. 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> 속성의 컬렉션인는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 영역에 포함 된 컨트롤입니다. <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit%2A> 속성은 개체 참조에 포함 된 컨트롤에는 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>-될 수 있는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 다른 ASP.NET 서버 컨트롤, 사용자 정의 컨트롤 또는 사용자 지정 컨트롤을 편집 하 고 합니다.  
  
 마지막으로 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome%2A> 의 인스턴스를 참조 하는 속성을 <xref:System.Web.UI.WebControls.WebParts.EditorPartChrome> 의 주변 UI 요소 (chrome 라고도 함)에 대 한 제목 및 테두리 스타일과 같은 스타일 특성을 포함 하는 영역을 사용 하 여 연결 된 개체 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 영역에서 제어 합니다.  
  
 다양 한 메서드를 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 클래스는 다른 컨트롤의 편집을 처리 하기 전문화 되어 있습니다. <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Close%2A> 메서드 일반 검색 보기로 돌아가기 편집 디스플레이 모드에서 페이지를 변경 합니다. <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A> 메서드는 각 둘러싸는 chrome (테두리, 동사, 아이콘 및 제목을 같은 주변 UI 요소)를 만들기에 대 한 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 영역에서 제어 합니다. <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A> 메서드는 추상 메서드, 파생된 클래스의 모든 인스턴스를 만들려면 재정의 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 영역에 포함 된 컨트롤입니다. <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts%2A> 경우 파생된 클래스에서 메서드를 호출할 수 있습니다 컬렉션인 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤의 컬렉션을 업데이트 및 다시 설정 하는 웹 파트 컨트롤에 플래그를 지정 하는 프로그래밍 방식으로 어떤 이유로 영역 변경 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤입니다. <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A> 메서드는 컬렉션 설정 데 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤을 `null` 경우 찾아보기 모드 편집 모드에서 디스플레이 모드 변경 내용을 다시 합니다. 마지막으로 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged%2A> 이벤트를 처리 하기 위한 메서드를 사용 하는 경우를 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 입력 또는 편집 모드를 종료 합니다. 예를 들어이 메서드는 속성 값을 동기화 하는 편리한 장소를 <xref:System.Web.UI.WebControls.WebParts.WebPart> 연결 된 편집 가능한 값을 사용 하 여 컨트롤 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 여러 선언적 및 프로그래밍 방식으로 사용 된 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 클래스입니다. 코드 예제에서는 사용 파생 된 추상 클래스 이므로 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 에서 상속 하는 메서드와 속성을 보여 주는 웹 파트 컨트롤 집합과 함께 제공 되는 클래스는 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 클래스입니다.  
  
 코드 예제에는 네 가지 부분이 있습니다.  
  
-   웹 페이지의 디스플레이 모드를 변경할 수 있게 해 주는 사용자 정의 컨트롤입니다.  
  
-   포함 하는 웹 페이지는 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 제어 합니다.  
  
-   사용자 지정 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 의 일부를 보여 주는 클래스를 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 클래스 멤버입니다.  
  
-   이 예제에서는 브라우저에서 작동 하는 방법의 설명입니다.  
  
 사용자 정의 컨트롤에 대 한 소스 코드는 다른 항목에서 제공 됩니다. 작동 하려면이 코드 예제에서는 사용자 컨트롤은.ascx 파일을 가져올 필요가 [연습: 웹 파트 페이지에서 디스플레이 모드를 변경](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0) 항목 및이 코드 예제에서.aspx 페이지와 동일한 폴더에 있습니다.  
  
 코드 예제의 두 번째 부분은에 대 한 선언적 참조를 포함 하는 웹 페이지는 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 제어 합니다. 페이지의 위쪽을 `Register` 사용자 정의 컨트롤에 대 한 지시문입니다. 사용자 정의 컨트롤 태그 페이지에서 선언 되는 `<uc1:DisplayModeMenu>` 요소입니다. 알림 아래는 `<asp:WebPartZone>` 요소는는 `<asp:EditorZone>` 포함 하는 요소 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤 및에 다양 한 태그 및 해당 모양 및 동작을 결정 하기 위해 설정 하는 속성입니다. 페이지의 코드는 대부분의 다양 한 프로그래밍 방식으로 용도 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 속성 및 메서드.  
  
 [!code-aspx-csharp[WebParts_EditorZoneBase_Common#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#1)]
 [!code-aspx-vb[WebParts_EditorZoneBase_Common#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#1)]  
  
 코드 예제에서는 세 번째 부분은 사용자 지정 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 의 숫자를 사용 하는 방법을 보여 주는 클래스를 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 클래스 멤버입니다. 사용자 지정 클래스에서 파생 되며 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 웹 페이지의 선언적 태그에 영역 템플릿을 사용 하 여 사용할 수 있도록 합니다. 코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다. 명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다. 또는 컴파일 수 있는 수 동적으로 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다. 동적 컴파일을 사용 하 여이 코드 예제 따라서 점을 확인할 수 있습니다는 `Register` 웹 페이지의 위쪽에 지시문은 어셈블리 파일을 참조 하지 않습니다. 컴파일하는 두 가지 메서드를 보여 주는 연습을 참조 하세요. [연습: 개발 및 사용자 지정을 사용 하 여 웹 서버 컨트롤](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)합니다.  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#12](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#12)]
 [!code-vb[WebParts_EditorZoneBase_Common#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#12)]  
  
 브라우저에서 페이지를 로드할 때 선택할 수 있습니다 **편집 모드** 편집 모드로 전환 하려면 드롭다운 목록에서. 두 컨트롤 중 하나의 제목 표시줄에서 동사 메뉴 (아래쪽 화살표)를 클릭 하 고 클릭 수 **편집** 컨트롤을 편집 합니다. 편집 UI가 표시, 다양 한 선언적의 효과 볼 수 있습니다 및 프로그래밍 방식으로 사용 하는 경우는 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 클래스 멤버입니다.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>호스팅에 대 한 사용자 지정 영역을 개발 하려는 경우 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 컨트롤 영역 템플릿 지원을 제공 하기 위해 사용할지를 결정 해야 있습니다. 영역 템플릿으로 구현 하는 형식에서 만들어집니다 합니다 <see cref="T:System.Web.UI.ITemplate" /> 인터페이스 및 사용자 지정 영역을 사용 하 여 참조 하는 페이지 개발자가 사용 하도록 설정 하려는 경우 반드시 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 영역 내 웹 페이지의 선언적 태그에서 컨트롤입니다. 영역 템플릿 지원이 필요에서 상속 해야 하는 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> 클래스입니다.  
  
반면, 하는 경우 사용자 지정 영역 및 해당 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 컨트롤 자체 포함 될 예정인 영역 템플릿에서 컨트롤을 선언적으로 지정 하려면 페이지 개발자를 위한 옵션 없이 프로그래밍 방식으로 생성 하 고 직접 상속할 수 있습니다 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 클래스입니다. 구현 하는 중요 한 것이 작업을 수행 하는 경우는 <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts" /> 메서드 사용자 지정 영역 작동할 수 있도록 합니다.</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebZone" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
    <related type="Article" href="https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0">연습: 웹 파트 페이지에서 디스플레이 모드를 변경합니다.</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EditorZoneBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EditorZoneBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>상속된 클래스 인스턴스에 사용할 수 있도록 클래스를 초기화합니다. 이 생성자는 상속된 클래스에서만 호출될 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 상속된 된 클래스에서 호출할 때이 생성자에 전달를 <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> 개체는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤 편집 (UI) 사용자 인터페이스에 표시할 페이지를 사용 하도록 설정 합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="ApplyVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb ApplyVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb ApplyVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ApplyVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ ApplyVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplyVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>최종 사용자가 편집 모드에서 변경된 편집 내용을 컨트롤에 적용할 수 있도록 하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>최종 사용자가 변경 내용을 컨트롤에 적용할 수 있도록 하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 적용 동사에서 참조 되는 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> 에서 파생 된 컨트롤의 속성에는 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 클래스입니다. 현재 편집 중인 서버 컨트롤에 적용 동사 저장 편집 사용자 인터페이스 (UI)에서 최종 사용자가 변경한 내용을 편집 합니다. 기본적으로 적용 동사는 UI에 표시 된 <xref:System.Web.UI.WebControls.Button> 제어 합니다. 이미지, 링크 또는 실제 단추는 단추 종류 수 있습니다. 설정할 수 있습니다이 모든 동사 단추에 대 한 (하지 개별 단추)에 대 한 영역에서 상속 된 설정 하 여 <xref:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType%2A> 영역 수준 속성입니다.  
  
 동사를 적용 즉 여러 될 수 있지만 영역 수준 컨트롤은 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤 편집 모드에 있는 서버 컨트롤에 대 한 하나 이상의 속성을 편집 하는 각 적용 동사 작동 보편적으로 모든 에서모든변경내용을적용하려면<xref:System.Web.UI.WebControls.WebParts.EditorPart> 서버 컨트롤에 컨트롤입니다.  
  
   
  
## Examples  
 다음 코드 예제에 액세스 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> 속성 선언적 및 프로그래밍 합니다. 예제를 실행 하는 데 필요한 전체 코드의 예제 섹션을 참조 하세요.를 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 클래스 개요 항목입니다.  
  
 코드 예제의 첫 번째 부분에 액세스 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> 웹 페이지에서 선언적으로 속성입니다. 이 예제에서는 사용자의 동사에 대 한 텍스트를 지정합니다.  
  
 [!code-aspx-csharp[WebParts_EditorZoneBase_Common#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorZoneBase_Common#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#2)]  
  
 예제의 두 번째 부분에 액세스 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> 속성 활성화 또는 비활성화를 토글 단추를 사용 하 여 프로그래밍 방식으로 합니다.  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#4)]
 [!code-vb[WebParts_EditorZoneBase_Common#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#4)]  
  
 브라우저에서 페이지를 로드할 때 선택할 수 있습니다 **편집 모드** 편집 모드로 전환 하려면 드롭다운 목록 컨트롤에서. 컨트롤 중 하나의 제목 표시줄에서 동사 메뉴 (아래쪽 화살표)를 클릭 하 고 클릭 **편집** 선택한 컨트롤을 편집할 수 있습니다. 경우는 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 컨트롤과 편집 UI가 표시 되 고 적용을 나타내는 단추를 볼 수 있습니다, 합니다 **전환 ApplyVerb 사용 가능** 단추를 활성화 하거나 비활성화할.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="CancelVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb CancelVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb CancelVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CancelVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ CancelVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CancelVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>최종 사용자가 편집 모드에서 컨트롤에 대해 변경된 편집 내용을 취소할 수 있도록 하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>최종 사용자가 컨트롤에 대해 변경된 편집 내용을 취소할 수 있도록 하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 참조 하는 취소 동사를 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A> 에서 파생 된 컨트롤의 속성에는 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 클래스입니다. 취소 동사 최종 사용자가 편집 사용자 인터페이스 (UI)에서 서버 컨트롤에 대 한 변경 된 편집 내용을 취소 합니다. 기본적으로 취소 동사는 UI에 표시 된 <xref:System.Web.UI.WebControls.Button> 제어 합니다. 이미지, 링크 또는 실제 단추는 단추 종류 수 있습니다. 설정할 수 있습니다이 모든 동사 단추에 대 한 (하지 개별 단추)에 대 한 영역에서 상속 된 설정 하 여 <xref:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType%2A> 영역 수준 속성입니다.  
  
 사용자의 변경 내용이 편집 변경 내용을 취소 하는 경우는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤 편집 되는 서버 컨트롤에 적용 됩니다. 페이지가 편집 디스플레이 모드에서 유지 되는 또한 하지만 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤이 숨겨지면 및 <xref:System.Web.UI.WebControls.WebParts.WebPart> 편집 중인 된 컨트롤을 더 이상 선택 합니다. 이렇게 하면 최종 사용자가 다른 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 변경 하지 않고 편집 모드를 다시 표시 합니다.  
  
 취소 동사는 영역 수준 컨트롤은 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤 편집 모드에 있는 서버 컨트롤에 대 한 하나 이상의 속성을 편집 하는 각 취소 동사 작동 보편적으로 모든 에서모든변경내용을취소하려면<xref:System.Web.UI.WebControls.WebParts.EditorPart>영역에서 컨트롤입니다.  
  
   
  
## Examples  
 다음 코드 예제에 액세스 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A> 속성 선언적 및 프로그래밍 합니다. 예제를 실행 하는 데 필요한 전체 코드의 예제 섹션을 참조 하세요.를 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 클래스 개요 항목입니다.  
  
 코드 예제의 첫 번째 부분에 액세스 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A> 웹 페이지에서 선언적으로 속성입니다. 이 예제에서는 사용자의 동사에 대 한 텍스트를 지정합니다.  
  
 [!code-aspx-csharp[WebParts_EditorZoneBase_Common#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorZoneBase_Common#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#2)]  
  
 예제의 두 번째 부분에 액세스 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A> 속성 활성화 또는 비활성화를 토글 단추를 사용 하 여 프로그래밍 방식으로 합니다.  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#5)]
 [!code-vb[WebParts_EditorZoneBase_Common#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#5)]  
  
 브라우저에서 페이지를 로드할 때 선택할 수 있습니다 **편집 모드** 편집 모드로 전환 하려면 드롭다운 목록 컨트롤에서. 컨트롤 중 하나의 제목 표시줄에서 동사 메뉴 (아래쪽 화살표)를 클릭 하 고 클릭 **편집** 선택한 컨트롤을 편집할 수 있습니다. 경우는 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 컨트롤과 편집 UI가 표시 되 고 취소 동사를 나타내는 단추를 볼 수 있습니다, 합니다 **전환 CancelVerb 사용 가능** 단추를 활성화 하거나 비활성화할.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="protected override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.Close" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="editorZoneBase.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>사용자가 영역의 머리글에서 닫기 동사를 클릭할 때 호출되는 이 메서드는 편집 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤의 프로세스를 종료하고 웹 파트 페이지의 디스플레이 모드를 찾아보기 모드로 되돌립니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Close%2A> 메서드는 기본 메서드가으로 선언에 대 한 구현을 제공 합니다 <xref:System.Web.UI.WebControls.WebParts.ToolZone> 클래스입니다. 구현할 경우 단순히 호출을 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> 메서드를 편집 하는 프로세스를 종료 하는 데 필요한 단계를 수행 합니다.  
  
 호출 된 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Close%2A> 메서드를 찾아보기 모드로 반환 하 고 모든 편집 내용을 취소 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="editorZoneBase.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 영역과 관련된 자식 컨트롤 집합을 만듭니다.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="CreateEditorPartChrome">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.EditorPartChrome CreateEditorPartChrome ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.EditorPartChrome CreateEditorPartChrome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateEditorPartChrome () As EditorPartChrome" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::EditorPartChrome ^ CreateEditorPartChrome();" />
      <MemberSignature Language="F#" Value="abstract member CreateEditorPartChrome : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartChrome&#xA;override this.CreateEditorPartChrome : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartChrome" Usage="editorZoneBase.CreateEditorPartChrome " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartChrome</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> 영역 주위의 주변 UI(사용자 인터페이스)를 렌더링하는 데 사용되는 새 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 개체에 대한 참조를 가져옵니다.</summary>
        <returns>영역에 대한 주변 UI 요소를 렌더링하는 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A> 반환 새 <xref:System.Web.UI.WebControls.WebParts.EditorPartChrome> 개체입니다. 각 개별을 둘러싸고 있는 다음 주변 UI 요소를 포함 하는 크롬 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 영역에서 컨트롤: 테두리, 제목 표시줄, 제목 표시줄, 선택적 아이콘, 제목 텍스트 및 동사 메뉴; 및 나타나는 항목을 포함 하 여 내에서 표시 되는 항목 컨트롤의 바닥글 영역입니다.  
  
 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A> 메서드를 사용 하 여 반환 된 <xref:System.Web.UI.WebControls.WebParts.EditorPartChrome> 마다 chrome 만들 개체 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome" /> 다른 구현을 제공 하는 파생된 클래스에서 메서드를 재정의할 수 있습니다. 예를 들어, 사용자 지정 만들 수 있습니다 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> 클래스를 렌더링 하 고 편집 UI의 모양을 보다 자세히 제어를 제공 합니다. 재정의 하는 경우는 <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome" /> 파생된 영역에서 메서드를 사용자 지정을 만들 수 있습니다 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> 재정의 메서드에서 개체입니다.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="CreateEditorParts">
      <MemberSignature Language="C#" Value="protected abstract System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateEditorParts () As EditorPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Web::UI::WebControls::WebParts::EditorPartCollection ^ CreateEditorParts();" />
      <MemberSignature Language="F#" Value="abstract member CreateEditorParts : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="editorZoneBase.CreateEditorParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>영역에 포함된 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 컨트롤 작성의 세부 사항을 처리하기 위해 파생 영역에서 재정의할 수 있는 기본 메서드 선언을 제공합니다.</summary>
        <returns>영역과 관련된 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> 컨트롤의 컬렉션이 포함된 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A> 메서드 구현을 제공 합니다. 파생된 클래스에서 구현 하고자 하 고 컬렉션의 인스턴스를 만드는 데 사용할 해야 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 호스팅 웹 페이지 들어갈 때마다 영역에 있는 포함 된 컨트롤이 편집 모드입니다. 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A?displayProperty=nameWithType> 구현의 하나의 예제를 제공 하는 메서드를 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="Display">
      <MemberSignature Language="C#" Value="protected override bool Display { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Display" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.Display" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Display As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool Display { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Display : bool" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.Display" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> 컨트롤이 현재 표시되어 있는지 나타내는 값을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" />이 현재 표시되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ToolZone.Display" />
      </Docs>
    </Member>
    <Member MemberName="EditorPartChrome">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.EditorPartChrome EditorPartChrome { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.EditorPartChrome EditorPartChrome" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditorPartChrome As EditorPartChrome" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::EditorPartChrome ^ EditorPartChrome { System::Web::UI::WebControls::WebParts::EditorPartChrome ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditorPartChrome : System.Web.UI.WebControls.WebParts.EditorPartChrome" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartChrome</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> 영역과 연결된 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 클래스의 인스턴스에 대한 참조를 가져옵니다.</summary>
        <value>영역에 있는 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> 컨트롤의 크롬 요소에 대한 스타일 특징이 포함된 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome%2A> 속성에 대 한 참조를 제공 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorPartChrome> 영역과 연결 된 개체입니다. 경우는 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A> 메서드를 호출의 인스턴스를 만들고는 <xref:System.Web.UI.WebControls.WebParts.EditorPartChrome> 클래스와이 인스턴스는 모든 주변 사용자 인터페이스 (UI) 요소 (크롬이 라고도 함)를 렌더링 하는 데 사용 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 영역에서 컨트롤.  
  
 개별 사용자의 크롬 요소 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 제어 동사, 아이콘, 제목 텍스트 등의 헤더 영역 뿐만 아니라 해당 바닥글 영역에 포함 된 요소 테두리 및 기타 항목을 포함 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="EditorParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.EditorPartCollection EditorParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.EditorPartCollection EditorParts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditorParts As EditorPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::EditorPartCollection ^ EditorParts { System::Web::UI::WebControls::WebParts::EditorPartCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditorParts : System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 영역에 포함된 모든 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 컨트롤의 컬렉션을 가져옵니다.</summary>
        <value>영역의 모든 개별 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> 컨트롤이 포함된 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> 속성은 모든 컬렉션에 대 한 참조를 제공 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 영역에서 컨트롤입니다. 둘 다 참조 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 웹 파트 컨트롤 집합 및 모든 사용자 지정을 사용 하 여 제공 되는 제어 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 영역에 추가 되는 컨트롤입니다. 개발자를 위해 만드는 사용자 지정 컬렉션 읽기 전용 이므로 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤에 대 한 일반 편집 목적으로 컬렉션에 추가할 재정의 해야 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A> 메서드.  
  
 사용자 지정 디자인 하는 경우 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 특정 편집 컨트롤 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤의 멤버를 재정의 해야 하는 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> 인터페이스-를 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> 메서드 및 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> 재산에서는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤. 이러한 멤버를 재정의 하는 이유는 사용자 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 만들고 사용자 지정 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 제어에 추가 하는 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> 컬렉션 컨트롤을 편집 하는 경우 개체 참조를 사용 하 여 편집 컨트롤을 제공 하 에 <xref:System.Web.UI.WebControls.WebParts.WebPart> 편집 하는 컨트롤입니다. 사용자 지정을 추가 하려는 경우 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤에서 상속 되지 않는 서버 컨트롤을 편집 하는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 구현 해야 클래스를 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> 클래스에 대 한 것 처럼 인터페이스를 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤.  
  
> [!NOTE]
>  모든 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컬렉션에 추가 된 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 의 구현에서 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> 메서드 ID 속성에 할당 된 값이 있어야 합니다., 컬렉션의 할당되면예외가throw됩니다<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에 액세스 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> 속성 프로그래밍 방식으로 합니다. 예제를 실행 하는 데 필요한 전체 코드의 예제 섹션을 참조 하세요.를 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 클래스 개요 항목입니다.  
  
 코드 예제의 첫 번째 부분을 보여 줍니다 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> 속성 모두에 대 한 참조를 포함 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 웹 페이지에서 선언적으로 참조 되는 컨트롤입니다.  
  
 [!code-aspx-csharp[WebParts_EditorZoneBase_Common#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorZoneBase_Common#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#2)]  
  
 두 번째 부분 코드 예제에서는 프로그래밍 방식으로 액세스 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> 속성 및 각 컨트롤의 ID 목록을 <xref:System.Web.UI.WebControls.Label> 컨트롤입니다.  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#6)]
 [!code-vb[WebParts_EditorZoneBase_Common#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#6)]  
  
 브라우저에서 페이지를 로드할 때 클릭할 수는 **표시 상황 컬렉션** 모든 Id를 나열 하려면 단추를 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 에서 참조 된 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> 속성.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">컬렉션에 추가될 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />의 ID 속성에 값이 할당되지 않은 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateEditorParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="EmptyZoneText">
      <MemberSignature Language="C#" Value="public override string EmptyZoneText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyZoneText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EmptyZoneText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyZoneText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyZoneText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>영역에 컨트롤이 없는 경우 표시되는 메시지를 가져오거나 설정합니다.</summary>
        <value>빈 영역에 표시되는 메시지를 포함하는 문자열입니다. 기본 문화권별 문자열은 .NET Framework에서 제공합니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneText" />
      </Docs>
    </Member>
    <Member MemberName="ErrorText">
      <MemberSignature Language="C#" Value="public virtual string ErrorText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ErrorText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ErrorText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>편집 UI(사용자 인터페이스)의 맨 위에 표시할 영역 수준의 오류 메시지에 대한 텍스트를 가져오거나 설정합니다.</summary>
        <value>오류 메시지를 포함하는 지역화된 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText%2A> 속성에서 파생 된 컨트롤을 렌더링 하는 동안 오류가 발생 하는 경우 UI에 표시 될 수 있는 오류 메시지의 텍스트가 포함 된 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 클래스입니다. 개별 중 하나에서 오류가 발생 하는 경우 영역의 맨 위에 있는 오류 메시지가 표시 됩니다 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 영역에 포함 된 컨트롤입니다. 또한 개별 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤에서 오류를 수신 하는 컨트롤 옆에 고유한 오류 메시지를 표시할 수 있습니다.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>영역의 머리글 영역에 대한 텍스트를 가져오거나 설정합니다.</summary>
        <value>영역에 대한 머리글 텍스트를 포함하는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="InstructionText">
      <MemberSignature Language="C#" Value="public override string InstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.InstructionText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InstructionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InstructionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InstructionText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.InstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>최종 사용자에 대한 지침을 제공하는 <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> 컨트롤의 텍스트를 가져오거나 설정합니다.</summary>
        <value>최종 사용자에 대한 지침이 포함된 문자열입니다. 특정 도구 영역에 적용되는 기본값은 파생된 <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> 클래스에서 제공합니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ToolZone.InstructionText" />
      </Docs>
    </Member>
    <Member MemberName="InvalidateEditorParts">
      <MemberSignature Language="C#" Value="protected void InvalidateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvalidateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvalidateEditorParts ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvalidateEditorParts();" />
      <MemberSignature Language="F#" Value="member this.InvalidateEditorParts : unit -&gt; unit" Usage="editorZoneBase.InvalidateEditorParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 영역과 관련된 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 컨트롤의 컬렉션을 <see langword="null" />로 설정합니다. 이렇게 하면 컬렉션을 다시 만들도록 <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts" /> 메서드가 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts%2A> 경우 파생된 클래스에서 메서드를 호출할 수 있습니다 목록을 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 와 연결 된 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 시간대가 어떤 이유로 변경 하며 파생된 클래스는 업데이트 된 목록을 가져오려면 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤. 파생된 클래스를 호출 해야 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts%2A>, 현재 컬렉션을 설정 하는 `null`합니다. 다음에는 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> 컬렉션에 액세스, 호출 하는 자동으로 설정 하는 웹 파트 컨트롤의 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A> 업데이트 컬렉션을 만드는 방법.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="editorZoneBase.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">이전에 저장된 상태입니다.</param>
        <summary>영역에 대해 이전에 저장된 상태 정보를 로드합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는.NET Framework 인프라에서 기본적으로 사용 하며 사용자 코드에서 직접 사용할 수 없습니다. 그러나 컨트롤 개발자가 사용자 지정 서버 컨트롤에서 해당 뷰 상태를 복원 하는 방법을 지정 하려면이 메서드를 재정의할 수 있습니다. 자세한 내용은 [ASP.NET 상태 관리 개요](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))합니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.LoadViewState%2A> 영역에서 클릭 된 동사를 확인, 취소 동사 또는 동사를 적용 하기 때문에 페이지가 로드 되 고 있는지 여부를 확인 하려면 기본 메서드를 재정의 합니다. 그렇다면 메서드는 각 해당 시나리오와 관련 된 상태를 처리 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="savedState" /> 개체의 크기가 현재 뷰 상태 개체의 크기와 다른 경우</exception>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="OKVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb OKVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb OKVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OKVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ OKVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OKVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>편집 모드에서 컨트롤에 대한 변경된 편집 내용을 적용하고 편집 UI(사용자 인터페이스)를 숨기는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 개체에 대한 참조를 가져옵니다.</summary>
        <value>변경된 편집 내용을 컨트롤에 적용하고 편집 UI를 숨기는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 참조 하는 확인 동사를 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A> 에서 파생 된 컨트롤의 속성에는 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 클래스입니다. 비슷합니다 적용 동사에는 사용자가 클릭 하면 사용자가 서버 컨트롤에 대 한 변경 된 편집 내용을 적용 합니다. 편집 컨트롤 숨겨져 또한는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 편집 중인 된 컨트롤 (을 허용 하는 사용자가 다른 컨트롤을 편집할 수)를 선택 하지 않은 및 페이지 편집 모드로 유지 됩니다.  
  
 기본적으로 확인 하는 동사는 UI에 표시 된 <xref:System.Web.UI.WebControls.Button> 제어 합니다. 이미지, 링크 또는 실제 단추는 단추 종류 수 있습니다. 설정할 수 있습니다이 모든 동사 단추에 대 한 (하지 개별 단추)에 대 한 영역에서 상속 된 설정 하 여 <xref:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType%2A> 영역 수준 속성입니다.  
  
 확인 동사 되는 영역 수준 컨트롤 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤을 편집 모드에 있는 서버 컨트롤에 대 한 하나 이상의 속성을 편집 하는 각 확인 동사 작동 보편적으로 모두에서 모든 변경 내용을 적용 하는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 영역 자체를 제외 하 고 모든 컨트롤을 숨기는 영역에 컨트롤입니다.  
  
   
  
## Examples  
 다음 코드 예제에 액세스 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A> 속성 선언적 및 프로그래밍 합니다. 예제를 실행 하는 데 필요한 전체 코드의 예제 섹션을 참조 하세요.를 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 클래스 개요 항목입니다.  
  
 코드 예제의 첫 번째 부분에 액세스 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A> 웹 페이지에서 선언적으로 속성입니다. 이 예제에서는 사용자의 동사에 대 한 텍스트를 지정합니다.  
  
 [!code-aspx-csharp[WebParts_EditorZoneBase_Common#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorZoneBase_Common#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#2)]  
  
 예제의 두 번째 부분에 액세스 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A> 토글 단추를 사용 하 여 활성화 또는 비활성화 하 여 프로그래밍 방식으로 합니다.  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#7)]
 [!code-vb[WebParts_EditorZoneBase_Common#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#7)]  
  
 브라우저에서 페이지를 로드할 때 선택할 수 있습니다 **편집 모드** 편집 모드로 전환 하려면 드롭다운 목록 컨트롤에서. 컨트롤 중 하나의 제목 표시줄에서 동사 메뉴 (아래쪽 화살표)를 클릭 하 고 클릭 **편집** 선택한 컨트롤을 편집할 수 있습니다. 경우는 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 컨트롤과 편집 UI가 표시 되 고 확인 동사를 나타내는 단추 표시, 합니다 **전환 OKVerb 사용 가능** 단추를 활성화 하거나 비활성화할 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanged">
      <MemberSignature Language="C#" Value="protected override void OnDisplayModeChanged (object sender, System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDisplayModeChanged(object sender, class System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDisplayModeChanged (sender As Object, e As WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDisplayModeChanged(System::Object ^ sender, System::Web::UI::WebControls::WebParts::WebPartDisplayModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDisplayModeChanged : obj * System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs -&gt; unit" Usage="editorZoneBase.OnDisplayModeChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><see cref="T:System.Object" /> 이벤트를 발생시키는 <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" />입니다.</param>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" /> 이벤트를 발생시키고 영역에서 모든 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 및 자식 컨트롤을 소멸하여 웹 페이지에서 편집 디스플레이 모드를 시작하거나 종료할 수 있도록 준비합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A> 메서드는 기본 메서드에 대 한 구현을 제공 합니다 <xref:System.Web.UI.WebControls.WebParts.ToolZone> 클래스입니다.  
  
 주요 용도 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A> 메서드 입력 또는 편집 디스플레이 모드를 종료 하는 웹 페이지를 준비 하는 것입니다. 메서드 영역에 포함 된 모든 컨트롤을 제거 하 고 발생 하는 기본 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged> 이벤트에는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 제어 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A> 파생된 클래스에서 메서드. 예제를 실행 하는 데 필요한 전체 코드의 예제 섹션을 참조 하세요.를 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 클래스 개요 항목입니다.  
  
 파생 되는 사용자 지정 편집기 영역을 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 클래스의 선언 태그 웹 페이지의 영역 템플릿을 사용 하 여 사용할 수 있도록 합니다. 사용자 지정 클래스 재정의 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A> 색을 지정된 하는 영역의 배경색을 설정 하는 메서드를 모든 자식을 제거 하는 기본 메서드를 호출 하 고 및 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤의 입력 또는 편집 종료에 대 한 준비 모드를 표시 합니다.  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#13](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#13)]
 [!code-vb[WebParts_EditorZoneBase_Common#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#13)]  
  
 브라우저에서 페이지를 로드할 때 선택할 수 있습니다 **편집 모드** 편집 모드로 전환 하려면 드롭다운 목록 컨트롤에서. 컨트롤 중 하나의 제목 표시줄에서 동사 메뉴 (아래쪽 화살표)를 클릭 하 고 클릭 **편집** 선택한 컨트롤을 편집할 수 있습니다. 경우는 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 컨트롤과 편집 UI (사용자 인터페이스) 표시 됩니다, 영역에 코드에서 지정 된 배경색을 볼 수 있습니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>합니다 <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" /> 메서드를 재정의 하거나에서 상속 되는 사용자 지정 편집기 영역 컨트롤의 프로그래밍 방식으로 호출 합니다 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 클래스 또는 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> 클래스입니다.</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="editorZoneBase.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.Control.PreRender" /> 이벤트를 발생시키고 <see cref="M:System.Web.UI.WebControls.WebParts.EditorPartChrome.PerformPreRender" /> 컨트롤의 크롬 요소에 대한 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 메서드를 호출합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedWebPartChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectedWebPartChanged (object sender, System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectedWebPartChanged(object sender, class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectedWebPartChanged (sender As Object, e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectedWebPartChanged(System::Object ^ sender, System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSelectedWebPartChanged : obj * System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="editorZoneBase.OnSelectedWebPartChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><see cref="T:System.Object" /> 이벤트를 발생시키는 <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />입니다.</param>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" /> 이벤트를 발생시키고 영역에서 <see cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts" /> 컬렉션을 <see langword="null" />로 설정하여 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤에서 편집 모드를 시작하거나 종료할 수 있도록 준비합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged%2A> 메서드를 사용 하면 개별 때 발생 하는 이벤트에 대 한 사용자 지정 처리를 제공할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 들어가거나 편집 모드를 종료 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged%2A> 파생된 클래스에서 메서드. 예제를 실행 하는 데 필요한 전체 코드의 예제 섹션을 참조 하세요.를 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 클래스 개요 항목입니다.  
  
 파생 되는 사용자 지정 편집기 영역을 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 클래스의 선언 태그 웹 페이지의 영역 템플릿을 사용 하 여 사용할 수 있도록 합니다. 사용자 지정 클래스 재정의 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged%2A> 메서드 편집 중인 및 기본 메서드를 호출 하는 특정 컨트롤의 배경색을 설정 합니다.  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#14](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#14)]
 [!code-vb[WebParts_EditorZoneBase_Common#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#14)]  
  
 브라우저에서 페이지를 로드할 때 선택할 수 있습니다 **편집 모드** 편집 모드로 전환 하려면 드롭다운 목록 컨트롤에서. 컨트롤 중 하나의 제목 표시줄에서 동사 메뉴 (아래쪽 화살표)를 클릭 하 고 클릭 **편집** 선택한 컨트롤을 편집할 수 있습니다. 경우는 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 및 표시 되는 UI (사용자 인터페이스)를 편집, 선택한 컨트롤에는 코드에서 지정 된 배경색을 볼 수 있습니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>합니다 <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)" /> 메서드를 재정의 하거나에서 상속 되는 사용자 지정 편집기 영역 컨트롤의 프로그래밍 방식으로 호출 합니다 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 클래스 또는 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> 클래스입니다.</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected override void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="override this.RaisePostBackEvent : string -&gt; unit" Usage="editorZoneBase.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">이벤트에 대한 인수가 들어 있는 <see cref="T:System.String" />입니다.</param>
        <summary>영역 동사 하나와 관련된 작업을 수행하거나 서버에 다시 게시되는 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RaisePostBackEvent%2A> 메서드는 UI (사용자 인터페이스)를 클릭 한 다음이 동사 중 하나로 경우 확인 동사, 취소 동사 또는 동사 적용, 연결 된 해당 작업을 수행 합니다. 그렇지 않으면 서버에 다시 게시 하는 이벤트를 발생 시킵니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="editorZoneBase.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">영역의 콘텐츠를 받는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>지정된 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체에 대해 영역을 렌더링합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Render%2A> 에서 기본 메서드를 재정의 합니다 <xref:System.Web.UI.WebControls.WebControl> 를 호출 하는 클래스는 <xref:System.Web.UI.Page.VerifyRenderingInServerForm%2A> 런타임에 영역 컨트롤에 대 한 HTML 폼이 렌더링 됨을 확인 하는 메서드를. 를 검토 한 후 메서드는 다음 영역의 전체 콘텐츠를 렌더링 하 기본 메서드를 호출 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.Render(System.Web.UI.HtmlTextWriter)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="RenderBody">
      <MemberSignature Language="C#" Value="protected override void RenderBody (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderBody(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderBody (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderBody(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBody : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="editorZoneBase.RenderBody writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">영역의 본문 콘텐츠를 받는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>기본 메서드를 재정의하여 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 클래스에서 파생된 영역의 본문 부분을 렌더링합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody%2A> 본문 부분을 렌더링 하는 메서드를 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 메인 콘텐츠 영역 머리글 및 바닥글 영역 사이 이며 포함 하는 영역 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤입니다.  
  
 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody%2A> 의 기본 메서드를 재정의 합니다 <xref:System.Web.UI.WebControls.WebParts.WebZone> 레이아웃과 스타일을 해결 하는 특수 한 렌더링 되는 특성을 제공 하는 클래스에만 적용 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 영역입니다. 메서드 본문의 전체 콘텐츠가 포함 된 테이블을 렌더링 하 고 해당 테이블 내에서 페이지의 현재 표시 모드를 비롯 한 다양 한 조건에 따라 서로 다른 특성 값을 설정 합니다. 값 포함 된 컨트롤이 없는 경우 렌더링 된 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody%2A> 파생된 클래스에서 메서드. 예제를 실행 하는 데 필요한 전체 코드의 예제 섹션을 참조 하세요.를 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 클래스 개요 항목입니다.  
  
 파생 되는 사용자 지정 편집기 영역을 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 클래스의 선언 태그 웹 페이지의 영역 템플릿을 사용 하 여 사용할 수 있도록 합니다. 사용자 지정 클래스 재정의 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody%2A> HTML을 추가 하는 메서드를 `<hr />` 헤더 및 본문 영역 사이 선을 만드는 요소입니다. 다음 영역의 본문 내용의 나머지 부분을 렌더링 하는 기본 메서드를 호출 합니다.  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#15](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#15)]
 [!code-vb[WebParts_EditorZoneBase_Common#15](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#15)]  
  
 브라우저에서 페이지를 로드할 때 선택할 수 있습니다 **편집 모드** 편집 모드로 전환 하려면 드롭다운 목록 컨트롤에서. 컨트롤 중 하나의 제목 표시줄에서 동사 메뉴 (아래쪽 화살표)를 클릭 하 고 클릭 **편집** 선택한 컨트롤을 편집할 수 있습니다. 경우는 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 컨트롤과 편집 UI (사용자 인터페이스) 표시 됩니다, 헤더 및 본문 편집기 영역 사이 만들어진 줄을 볼 수 있습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="RenderVerbs">
      <MemberSignature Language="C#" Value="protected override void RenderVerbs (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderVerbs(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderVerbs (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderVerbs(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderVerbs : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="editorZoneBase.RenderVerbs writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">영역의 본문 콘텐츠를 받는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>영역 수준에서 적용되는 동사를 렌더링합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs%2A> 메서드 동사를 렌더링 합니다 전체 영역에 해당 작업이 적용: 확인 동사, 취소 동사 동사 및 적용 합니다. 참조 하는 이러한 동사는 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A>, <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A>, 및 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs%2A> 파생된 클래스에서 메서드. 예제를 실행 하는 데 필요한 전체 코드의 예제 섹션을 참조 하세요.를 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 클래스 개요 항목입니다.  
  
 파생 되는 사용자 지정 편집기 영역을 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 클래스의 선언 태그 웹 페이지의 영역 템플릿을 사용 하 여 사용할 수 있도록 합니다. 사용자 지정 클래스 재정의 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs%2A> 의 기존 값에 일부 텍스트를 추가 하는 메서드를는 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb.Text%2A> 각 영역 수준 동사에 대 한 속성입니다. 그런 다음 모든 동사를 렌더링 하는 기본 메서드를 호출 합니다.  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#16](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#16)]
 [!code-vb[WebParts_EditorZoneBase_Common#16](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#16)]  
  
 브라우저에서 페이지를 로드할 때 선택할 수 있습니다 **편집 모드** 편집 모드로 전환 하려면 드롭다운 목록 컨트롤에서. 컨트롤 중 하나의 제목 표시줄에서 동사 메뉴 (아래쪽 화살표)를 클릭 하 고 클릭 **편집** 선택한 컨트롤을 편집할 수 있습니다. 경우는 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 컨트롤과 편집 UI (사용자 인터페이스) 표시 됩니다, 영역의 아래쪽 영역 수준 동사에 대 한 단추는 텍스트를 볼 수 있습니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="editorZoneBase.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>페이지가 서버에 게시된 이후 발생한 뷰 상태의 변경을 저장합니다.</summary>
        <returns>영역 컨트롤의 현재 뷰 상태를 반환합니다. 영역과 관련된 뷰 상태가 없는 경우 이 메서드는 <see langword="null" />을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.SaveViewState%2A> 메서드 뷰 상태를 저장 하도록 기본 메서드를 호출 하 고 다음도 적용, 취소 및 확인 동사와 연결 된 뷰 상태를 저장 합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="editorZoneBase.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>영역 컨트롤의 뷰 상태에 대한 변경 내용을 추적합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.TrackViewState%2A> 메서드는 먼저 기본 메서드를 사용 하 여 연결 된 뷰 상태가 추적 호출을 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> , 영역 및 다음 적용, 취소 및 확인 동사에 대 한 뷰 상태를 추적 하기 시작 합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartToEdit">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPart WebPartToEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart WebPartToEdit" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property WebPartToEdit As WebPart" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::WebPart ^ WebPartToEdit { System::Web::UI::WebControls::WebParts::WebPart ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebPartToEdit : System.Web.UI.WebControls.WebParts.WebPart" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 편집 중인 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤에 대한 참조를 가져옵니다.</summary>
        <value>현재 편집 모드인 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하나만 <xref:System.Web.UI.WebControls.WebParts.WebPart> 번 및 컨트롤 편집 모드에 있을 때 컨트롤을 편집할 수는 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit%2A> 속성은 해당 컨트롤에 대 한 참조를 제공 합니다. 참조 된 컨트롤에서 참조 되는 제어와 동일 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> 속성입니다. 따라서 현재 편집 중인 컨트롤 항상 현재 선택 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>보호 된 <see cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit" /> 속성은 기본에서이 속성을 호출할 수 있는 파생된 클래스 에서만에서 액세스할 수 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 클래스를 편집 하 고 현재 컨트롤에 개체 참조를 가져옵니다.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
  </Members>
</Type>