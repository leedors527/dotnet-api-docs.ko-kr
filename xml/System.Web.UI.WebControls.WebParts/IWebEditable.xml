<Type Name="IWebEditable" FullName="System.Web.UI.WebControls.WebParts.IWebEditable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3da7c24024be9a19c2a0d556d275b33ea82514d5" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59742805" /></Metadata><TypeSignature Language="C#" Value="public interface IWebEditable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebEditable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebEditable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebEditable" />
  <TypeSignature Language="F#" Value="type IWebEditable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤과 연결된 사용자 지정 편집 컨트롤을 지정하기 위한 개발자용 인터페이스를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> 인터페이스를 사용 하면 사용자 지정을 연결할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.EditorPart> -서버 컨트롤과 같은 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤, 사용자 정의 컨트롤 또는 사용자 지정 서버 컨트롤입니다. <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤이 포함 됩니다는 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 컨트롤과 해당 편집 컨트롤을 사용 하 여이 영역 속성, 모양 및 연결 된 동작을 수정 하기 위한 사용자 인터페이스 (UI)를 사용 하 여 최종 사용자가 제공 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> 인터페이스에 노출 된 두 명의 멤버를 포함 합니다. 합니다 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> 속성에 대 한 방법을 제공 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤을 연결 된 서버 컨트롤에 대 한 참조를 가져옵니다. 합니다 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> 메서드는 각 사용자 지정의 인스턴스를 만드는 데 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 서버 컨트롤과 연결 된 컨트롤과 컬렉션으로 반환 합니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> 인터페이스 자료에서 이미 구현 되어 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스를이 이것은 기본적으로 모든 사용자 지정을 연결 하지 않으며 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 사용 하 여 제어를 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스. 파생 된 연결할 <xref:System.Web.UI.WebControls.WebParts.WebPart> 사용자 지정 컨트롤과 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤을 재정의할 수 있습니다는 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> 메서드.  
  
   
  
## Examples  
 다음 코드 예제에는의 메서드를 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> 사용자 지정 인터페이스 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 사용자 지정 인스턴스를 만든 후 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 제어를 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤이 편집 모드로 전환 합니다.  
  
 이 예제는 네 부분으로 이루어져 있습니다.  
  
-   사용자 지정 클래스에 대 한 코드입니다.  
  
-   사용자 지정 컨트롤을 호스팅하는 웹 페이지입니다.  
  
-   페이지 편집 모드로 전환 하는 사용자 컨트롤입니다.  
  
-   이 예제에서는 브라우저에서 작동 하는 방법의 설명입니다.  
  
 코드 예제의 첫 번째 부분은 사용자 지정 `TextDisplayWebPart` 클래스입니다. 클래스에서 파생 되는 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스를 구현 합니다 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> 인터페이스에 대 한 특정 구현을 제공 하는 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> 메서드 및 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> 속성. 또한 내에 중첩 하는 `TextDisplayWebPart` 클래스는 개인, 사용자 지정 `TextDisplayEditorPart` 기본에서 파생 된 클래스 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 클래스입니다. 코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다. 명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다. 또는 컴파일 수 있는 수 동적으로 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다. 컴파일하는 두 가지 메서드를 보여 주는 연습을 참조 하세요. [연습: 개발 및 사용자 지정을 사용 하 여 웹 서버 컨트롤](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)합니다.  
  
 [!code-csharp[WebParts_IWebEditable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/textdisplaywebpart.cs#1)]
 [!code-vb[WebParts_IWebEditable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/textdisplaywebpart.vb#1)]  
  
 코드 예제의 두 번째 부분은 사용자 지정 컨트롤을 호스팅하는 웹 페이지입니다. 하지만 사용자에 게 있음을 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 컨트롤이 사용자 지정 페이지의 태그에 선언 된 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤 참조할 필요가, 런타임에 프로그래밍 방식으로 추가할 수 있습니다.  
  
 [!code-aspx-csharp[WebParts_IWebEditable_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/editorpart_overview_cs.aspx#7)]
 [!code-aspx-vb[WebParts_IWebEditable_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/editorpart_overview_vb.aspx#7)]  
  
 코드 예제의 세 번째 부분은 아니지만 사용자가 페이지를 전환할 수 있는 사용자 정의 컨트롤을 편집 모드입니다. 사용자 정의 컨트롤 호스팅 웹 페이지에서 참조 되는 알 수 있습니다. 이 사용자 정의 컨트롤을 만드는 방법에 대 한 전체 설명과 참조 [연습: 페이지 파트는 웹에서 디스플레이 모드 변경](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)합니다.  
  
 [!code-aspx-csharp[WebParts_IWebEditable_Overview#8](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/displaymodeuccs.ascx#8)]
 [!code-aspx-vb[WebParts_IWebEditable_Overview#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/displaymodeucvb.ascx#8)]  
  
 코드 예제를 실행 하려면 브라우저에서 호스팅 웹 페이지를 로드, 텍스트 상자에 일부 텍스트를 추가 하 고 클릭 합니다 **집합 레이블 내용** 단추 컨트롤의 레이블을 업데이트 합니다. 페이지 편집 모드로 전환 **편집** 디스플레이 모드를 포함 하 고 드롭 다운 목록에서. 사용자 지정 UI를 표시할 `TextDisplayEditorPart` 제어, 동사 메뉴 드롭다운 화살표를 클릭 합니다 `TextDisplayWebPart` 컨트롤을 선택 **편집**. 편집 ui에서 사용할 수 글꼴 스타일을 포함 하는 드롭다운 목록에 있는 레이블의 텍스트 스타일을 업데이트 하는 `TextDisplayWebPart` 제어 합니다. 클릭 해야 합니다 **찾아보기 모드** 페이지를 기본 보기로 돌아갑니다 레이블에서의 텍스트 글꼴 스타일을 이제에 있는지 확인 하 여 표시 모드 드롭 다운 목록에서 편집 모드에서 선택 합니다.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>되지 않는 서버 컨트롤을 사용 하려는 경우 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 웹 파트 응용 프로그램에서 컨트롤 (즉, 이러한 컨트롤을 추가 하는 경우는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 영역)을 연결 하려는 사용자 지정 하는 경우 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 이러한 서버 컨트롤을 사용 하 여 컨트롤을 해야 구현 된 <see cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" /> 인터페이스입니다. 파생 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 때문에 컨트롤 인터페이스를 구현 하지 않아야 기본 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 클래스 이미 수행 합니다.</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
  </Docs>
  <Members>
    <Member MemberName="CreateEditorParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEditorParts () As EditorPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WebParts::EditorPartCollection ^ CreateEditorParts();" />
      <MemberSignature Language="F#" Value="abstract member CreateEditorParts : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="iWebEditable.CreateEditorParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 인터페이스를 구현하는 서버 컨트롤에 연결된 사용자 지정 <see cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" /> 컨트롤의 컬렉션을 반환합니다.</summary>
        <returns>서버 컨트롤에 연결된 사용자 지정 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> 컨트롤의 컬렉션이 들어 있는 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> 메서드를 사용 하면 모든 사용자 지정 컬렉션을 만들 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 사용자 지정 컨트롤을 사용 하 여 연결 된 컨트롤이 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 또는 컨트롤을 반환 하는 사용자는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 개체입니다. 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤 컬렉션을 사용 하며 모든 인스턴스를 만듭니다는 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 서버 컨트롤에 들어갈 때마다 컨트롤이 편집 모드입니다.  
  
 사용자 지정에서이 메서드를 구현 하는 일반적으로 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어를 재정의 하 여 해당 <xref:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts%2A> 메서드. 메서드에서 사용자 지정의 인스턴스를 만듭니다 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤을 사용 하 여 연결 하려는 컨트롤을 추가 하도록는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 개체를 다음 해당 개체를 반환 합니다. 컬렉션 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤에 할당 됩니다 합니다 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> 의 속성을 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 영역.  
  
> [!NOTE]
>  모든 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컬렉션에 추가 된 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 의 구현에서 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> 메서드 ID 속성에 할당 된 값이 있어야 합니다., 컬렉션의 할당되면예외가throw됩니다<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> 메서드는 사용자 지정에서 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다. 샘플을 실행 하는 데 필요한 전체 소스 코드의 예 섹션에서 발견 되는 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> 클래스 개요 항목입니다.  
  
 코드 예제는 모두의 구성원은 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> 인터페이스입니다. 재정의는 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> 메서드를 만듭니다를 <xref:System.Collections.ArrayList> 를 하나 이상의 사용자 지정 수집 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤 및 목록 사용 하 여 만듭니다는 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> 개체.  
  
 [!code-csharp[WebParts_IWebEditable_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/textdisplaywebpart.cs#4)]
 [!code-vb[WebParts_IWebEditable_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/textdisplaywebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> 개체는 <see cref="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" /> 읽기 전용 이며에 액세스할 수 있는 메서드가 개별 컨트롤을 추가할 메서드를 반환 합니다. 그러나 재정의 또는 메서드의 구현에서 만들 수 있습니다 다른 유형의 <see cref="T:System.Collections.ICollection" /> 와 같은 개체를 <see cref="T:System.Collections.ArrayList" />모든 사용자 지정을 포함 하기 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 컨트롤 및 새를 만들 때 생성자에 전달 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> 개체 . 코드 예제에서는 예제 섹션을 참조 하세요.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="WebBrowsableObject">
      <MemberSignature Language="C#" Value="public object WebBrowsableObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WebBrowsableObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebBrowsableObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ WebBrowsableObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebBrowsableObject : obj" Usage="System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤에서 편집될 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 컨트롤, 사용자 정의 컨트롤 또는 사용자 지정 컨트롤에 대한 참조를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 컨트롤과 연결된 컨트롤에 대한 개체 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> 속성에 대 한 방법을 제공 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 컨트롤을 연결 된 서버 컨트롤에 대 한 참조를 가져옵니다.  
  
 반환 되는 개체 참조를 사용 하면 자체 속성은 읽기 전용 이지만 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 서버 컨트롤에서 값을 변경 하는 컨트롤입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 하는 방법을 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> 사용자 지정에서 속성을 재정의할 수 있습니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다. 예제를 실행 하는 데 필요한 전체 소스 코드의 예 섹션에서 발견 되는 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> 클래스 개요 항목입니다.  
  
 코드 예제 모두의 구성원을 재정의 합니다 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> 인터페이스입니다.  
  
 [!code-csharp[WebParts_IWebEditable_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/textdisplaywebpart.cs#4)]
 [!code-vb[WebParts_IWebEditable_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/textdisplaywebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>일반적으로 구현 하는 경우는 <see cref="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" /> 서버 컨트롤의 속성을 단순히 돌아가게 서버 컨트롤 자체에 대 한 참조입니다. 경우를 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 처럼 동작할 수 있도록 자식 컨트롤을 래핑하므로 클래스를 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤을 구현 합니다 <see cref="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" /> 속성에는 자식 컨트롤에 대 한 참조를 반환 합니다.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
  </Members>
</Type>