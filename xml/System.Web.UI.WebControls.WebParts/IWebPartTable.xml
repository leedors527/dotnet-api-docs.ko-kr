<Type Name="IWebPartTable" FullName="System.Web.UI.WebControls.WebParts.IWebPartTable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7351aad8ec327543283c242fe6e0cf14309f77ce" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59743169" /></Metadata><TypeSignature Language="C#" Value="public interface IWebPartTable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPartTable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPartTable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPartTable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPartTable" />
  <TypeSignature Language="F#" Value="type IWebPartTable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>전체 데이터 테이블을 사용하여 두 서버 컨트롤을 연결할 수 있는 공급자 인터페이스를 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 인터페이스는 웹 파트 연결을 사용 하 여 사용 하도록 설계 되었습니다. 두 서버 컨트롤에 상주 하는 웹 파트 연결에서는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역 소비자 역할을 하나 컨트롤과 공급자 역할을 다른 컨트롤을 사용 하 여 연결 및 공유 데이터를 설정 합니다. 웹 파트 연결에서 데이터를 공유 하기 위한 메커니즘은 콜백 메서드를 사용 하 여 소비자에 게 공급자 역할을 하는 인터페이스 인스턴스. 연결을 설정 하려면 소비자와 공급자 작동 해야 합니다 모두 같은 인터페이스 형식을 사용 하 여 데이터 공유. 소비자 인터페이스의 형식 공급자가 보낸를 인식 하지 못하는 경우 변환기를 사용 하 여 컨트롤을 연결할 수 있습니다 (을 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 개체) 형식으로 공급자가 보낸 인터페이스 인스턴스를 변환 하는 소비자 인식합니다. 연결에 대 한 내용은 참조 하세요 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 하 고 [웹 파트 연결 개요](https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100))합니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> 인터페이스는 데이터 테이블을 기반으로 하는 연결을 만들기 위한 표준 인터페이스를 설정 하는 웹 파트 컨트롤에 포함 된 공급자 인터페이스입니다. 웹 파트 연결을 사용 하는 사용자 지정 인터페이스를 만들 수도 있습니다 하지만 대부분의 데이터 기반 웹 응용 프로그램에서 공통 필드를 기반으로 연결을 만드는 것이 유용할 것 (세부 정보를 참조 하세요. 합니다 <xref:System.Web.UI.WebControls.WebParts.IWebPartField> 인터페이스), 행 (세부 정보를 참조 하세요.를 <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> 인터페이스) 또는 데이터 원본의 테이블입니다. 일반적인 연결에서를 <xref:System.Web.UI.WebControls.WebParts.WebPart> 공급자를 구현 하는 대로 동작을 제어는 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> 인터페이스 및 특수 콜백 메서드가 소비자가 인터페이스의 인스턴스를 제공 합니다. 예를 들어, 공급자를 구현할 수는 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> 재무 성과 데이터를 포함 하는 테이블에 대 한 인터페이스입니다. 다른 <xref:System.Web.UI.WebControls.WebParts.WebPart> 소비자는 인터페이스 인스턴스를 받을 수 있습니다 다음 데이터를 추출 하 고 결과 정보를 표시 하는 차트를 렌더링 하려면 특수 한 메서드를 정의 하는 동작을 제어 합니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> 인터페이스 노출 된 멤버 두 개가 포함 합니다. 합니다 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> 속성에 캡슐화 된 데이터 테이블에 대 한 스키마 정보를 반환 합니다.는 <xref:System.ComponentModel.PropertyDescriptorCollection> 개체입니다. <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> 메서드 (예: 공급자 제어) 구현 자가 콜백 메서드가 호출 되 면 인터페이스 인스턴스가 테이블 데이터를 검색 하는 데 사용 하는 메서드를 선언 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하 여 두 컨트롤 간을 정적 연결을 만드는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> 인터페이스입니다. 이 코드 예제는 세 부분으로 구성 합니다.  
  
-   두 가지 사용자 지정의 소스 코드 <xref:System.Web.UI.WebControls.WebParts.WebPart> 사용 하 여 연결을 설정할 수 있는 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> 공급자와는 다른 역할을 하는 소비자 역할을 하는 하나의 컨트롤을 사용 하 여 인터페이스.  
  
-   웹 페이지 컨트롤을 호스트 하 고 일관 된 형식에 정적 연결 선언입니다.  
  
-   예제 코드를 실행할 때 수행 되는 작업 설명입니다.  
  
 코드 예제의 첫 번째 부분은 두 개의 사용자 지정 컨트롤에 대 한 소스 코드입니다. 먼저 구현 하는 공급자에 대 한 코드는 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> 인터페이스입니다. 예제의 편의 위해 공급자 데이터베이스에 연결 하는 것이 아니라 일부 데이터를 사용 하 여 테이블을 만듭니다. `GetConnectionInterface` 소비자에 게 인터페이스 인스턴스를 반환 하는 콜백 메서드는 공급자의 연결 점으로 사용 되는 메서드. 소비자의 경우 명명 된 해당 메서드를 공급자 로부터 인터페이스 인스턴스 검색 `SetConnectionInterface`를 사용 하 여 표시 된를 `ConnectionConsumer` 특성입니다. 소비자 인터페이스의 인스턴스를 검색 한 후 해당 `OnPreRender` 메서드 구현을 호출할는 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> 메서드를 실제 데이터를 검색 하 여 페이지에 쓸 공급자에서입니다.  
  
 코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다. 명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다. 또는 컴파일 수 있는 수 동적으로 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다. 이 코드 예제에서는 동적 컴파일을 사용 합니다. 컴파일하는 방법을 보여 주는 연습을 참조 하세요. [연습: 개발 및 사용자 지정을 사용 하 여 웹 서버 컨트롤](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)합니다.  
  
 [!code-csharp[WebParts_IWebPartTable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/CS/ITableSample.cs#2)]
 [!code-vb[WebParts_IWebPartTable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/VB/ITableSample.vb#2)]  
  
 코드 예제의 두 번째 부분은 정적 연결 및 호스트 컨트롤을 선언 하는 웹 페이지입니다. 페이지의 위쪽을 `Register` App_Code 디렉터리에 포함 된 소스 코드의 네임 스페이스를 선언 하는 지시문입니다. 연결이 사용 하 여 선언 되는 `<asp:webpartconnection>` 요소입니다. 사용자 지정 공급자 및 소비자 컨트롤에 선언 된를 `<zonetemplate>` 내의 요소를 `<asp:webpartzone>` 요소에 연결할 수 있도록 필요한 (에서 상속 되는 영역에 존재 해야 하는 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 클래스).  
  
 [!code-aspx-csharp[WebParts_IWebPartRow_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPartRow_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/VB/defaultvb.aspx#1)]  
  
 브라우저에서 페이지를 로드 합니다. 공급자의 인스턴스를 통해 사용할 수 있게 하는 지정된 된 테이블에서 제공 되는 데이터를 표시 하는 소비자 컨트롤의 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> 인터페이스입니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartField" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartRow" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)">웹 파트 연결 개요</related>
  </Docs>
  <Members>
    <Member MemberName="GetTableData">
      <MemberSignature Language="C#" Value="public void GetTableData (System.Web.UI.WebControls.WebParts.TableCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTableData(class System.Web.UI.WebControls.WebParts.TableCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData(System.Web.UI.WebControls.WebParts.TableCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTableData (callback As TableCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTableData(System::Web::UI::WebControls::WebParts::TableCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member GetTableData : System.Web.UI.WebControls.WebParts.TableCallback -&gt; unit" Usage="iWebPartTable.GetTableData callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.UI.WebControls.WebParts.TableCallback" />
      </Parameters>
      <Docs>
        <param name="callback">데이터를 검색하는 메서드의 주소가 들어 있는 <see cref="T:System.Web.UI.WebControls.WebParts.TableCallback" /> 대리자입니다.</param>
        <summary>인터페이스에서 두 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤 사이의 기본 연결로 사용하고 있는 테이블 데이터를 반환합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인터페이스에 의해 전달 된 데이터 테이블 값을 검색 하려면이 메서드를 사용 합니다. 이 메서드를 구현 하는 공급자 및 소비자 호출 지점에 소비자를 처리 하거나 데이터를 렌더링할 준비가 되 면 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 구현 및 사용 된 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> 메서드. 전체 예제에 대 한 클래스 개요에 표시 됩니다는 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> 인터페이스입니다. 공급자 컨트롤에서 구현 된 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> 메서드를 지정된 된 테이블의 데이터를 반환 합니다. 소비자 컨트롤 호출을 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> 의 메서드 해당 `OnPreRender` 메서드를 페이지에는 데이터의 값을 쓸 수 있도록 합니다.  
  
 [!code-csharp[WebParts_IWebPartTable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/CS/ITableSample.cs#2)]
 [!code-vb[WebParts_IWebPartTable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/VB/ITableSample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection Schema" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptorCollection ^ Schema { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schema : System.ComponentModel.PropertyDescriptorCollection" Usage="System.Web.UI.WebControls.WebParts.IWebPartTable.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>두 개의 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤 간에 데이터를 공유하는 데 사용되는 데이터 테이블의 스키마 정보를 가져옵니다.</summary>
        <value>데이터를 설명하는 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 데이터에 대해 속성 정보를 제공는 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> 인스턴스. 참조 되는 스키마 사이 암시적인 계약이가 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> 속성과 테이블의 데이터입니다. 계약 각각에 <xref:System.ComponentModel.PropertyDescriptor> 개체를 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> 속성인을 호출할 수 있습니다 <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> 열 이나 테이블의 행에서 값을 검색할 테이블 데이터의 요소에 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 구현 및 사용 된 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> 속성입니다. 전체 예제에 대 한 클래스 개요에 표시 됩니다는 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> 인터페이스입니다. 공급자 컨트롤에서 구현 된 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> 속성입니다. 그러면 소비자 컨트롤 해당 `RenderContents` 메서드, 쿼리는 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> 페이지에 테이블 데이터를 쓸 때 테이블에 대 한 정보를 검색할 속성입니다.  
  
 [!code-csharp[WebParts_IWebPartTable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/CS/ITableSample.cs#2)]
 [!code-vb[WebParts_IWebPartTable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/VB/ITableSample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
      </Docs>
    </Member>
  </Members>
</Type>