<Type Name="ImportCatalogPart" FullName="System.Web.UI.WebControls.WebParts.ImportCatalogPart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="138ffda1aa735e92748c86113cfcda75fc5b451d" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59353059" /></Metadata><TypeSignature Language="C#" Value="public sealed class ImportCatalogPart : System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImportCatalogPart extends System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImportCatalogPart&#xA;Inherits CatalogPart" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportCatalogPart sealed : System::Web::UI::WebControls::WebParts::CatalogPart" />
  <TypeSignature Language="F#" Value="type ImportCatalogPart = class&#xA;    inherit CatalogPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.CatalogPart</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤 또는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤로 사용되는 다른 ASP.NET 서버 컨트롤을 미리 정의된 설정으로 웹 페이지에 추가할 수 있도록 해당 컨트롤에 대한 설명 파일을 가져옵니다. 이 클래스는 상속될 수 없습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 컨트롤의 설정을 설명 하는 설명 파일을 가져올 수는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 또는 사용자를 추가 하려고 하는 서버 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 영역입니다.  
  
 설명 파일을 가져온 후는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 파일에서 참조 하는 컨트롤 내에 표시를 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 컨트롤과 사용자 페이지에 컨트롤을 추가할 수 있습니다.  
  
 설명 파일은 컨트롤 자체와 동일 합니다. 로 끝나는 XML 파일 이기는 합니다. WebPart 확장 이름/값 쌍-컨트롤의 상태를 설명 하는 속성 값 대부분을 포함 합니다. 항목에 설명 된 대로 지정된 된 XML 형식에 따라 설명 파일이 생성 됩니다 [웹 파트 제어 설명 파일](https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8)합니다.  
  
 Description 파일 참조 하는 컨트롤의 경우를 어셈블리로 컴파일할 수 있습니다 하거나 또는.ascx 파일에 정의 된 사용자 정의 컨트롤을 수 있습니다. 두 경우 모두에서 가져온된 설명 파일에서 참조 하는 컨트롤과 컨트롤을 가져오려고 시도 하는 페이지를 호스팅하는 웹 서버에 있어야 합니다. Description 파일, 컨트롤이 포함 된 컨트롤 이름 및 어셈블리 (또는 파일)을 참조 하 고 설명 파일에 컨트롤의 속성 값, 모양 및 동작에 영향을 주는 설정이 포함 되어 있습니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 컨트롤을 사용 하면 컨트롤에 대 한 설정을 공유할 수 있습니다. 많은 속성 및 설정은 복잡 한 컨트롤이 있을 수 있습니다. 예를 들어, 사용자 지정 큰 회사 내의 일반적인 인트라넷 사이트에서에서 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 등 해당 데이터베이스 연결, 부서 정보를 사용자 환경에 특정 값을 포함 하는 속성의 숫자에 포함 될 수 있습니다. 컨트롤의 모양에 영향을 주는 속성의 숫자를 포함할 수도 있습니다. 한 명의 사용자 수 특정 사이트에 있는 컨트롤을 개인 설정 제대로 작동 되도록, 컨트롤에 대 한 설명 파일을 내보내고 설명 파일 다른 인트라넷에 완전히 구성 된 컨트롤을 추가할 파일을 가져올 수 있는 다른 사용자와 공유 개인 설정에 허용 된 사이트입니다. 으로 컴파일된 어셈블리 또는 사용자 정의 컨트롤 파일 컨트롤이 포함 된 해당 사이트를 호스트 하는 웹 서버에 있는 다른 웹 사이트로 컨트롤을 추가할 수 있습니다.  
  
 사용자는 설명 파일을 가져올 (및 따라서 연결된 된 서버 컨트롤) 웹 페이지를 사용 하는 메커니즘은는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 컨트롤 페이지 개발자는 웹 페이지에 추가 해야 합니다. 사용자는 페이지를 카탈로그 디스플레이 모드를 전환할 때를 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 컨트롤이 표시 되 고 사용자 수 사용자로 이동 하려면이 컨트롤 합니다. WebPart 설명 파일을 가져올 것인지를 서버 컨트롤에 해당 합니다. UI 및에서 제공 하는 지침을 따라는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 컨트롤, 사용자가 원하는 서버 컨트롤 모양과 가져온된 description 파일의 지정 된 대로 완벽 하 게 구성 된 속성을 사용 하 여 웹 페이지에 추가할 수 있습니다.  
  
 전에 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤의 설명 파일을 가져올 수 있습니다, 사용자 (내보내기)를 먼저 만들어야 합니다 기존에 따라 파일 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다. 다음 조건이 충족 될 경우 컨트롤에 대 한 설명 파일을 내보낼 수 있습니다.  
  
-   컨트롤에 속성으로 표시 된 `Personalizable` 특성입니다.  
  
-   Web.config 파일에는 `enableExport` 특성 값으로 설정 `true` 에 `<webParts>` 요소입니다.  
  
-   개발자의 값을 설정 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> 속성의 기본값 이외의 값으로 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.None>, 내보내기를 금지 하 합니다. 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> 속성 값으로 설정 됩니다 <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.NonSensitiveData>를 포함 하는 모든 속성을 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.IsSensitive%2A> 매개 변수를를 `Personalizable` 특성 사용자 설명 파일을 내보낼 때 내보내집니다. 따라서 특정 한 상황에서 내보내지 연결 문자열과 같은 중요 한 데이터를 방지 하기 위해 컨트롤 개발자가 있습니다.  
  
 사용자가 지침을 저장 하 고 컨트롤의 동사 메뉴에 표시 되는 내보내기 동사를 클릭 하 여 내보내기에 대 한 설정 된 컨트롤을 내보낼 수는 있습니다. 웹 파트 컨트롤에 대 한 설명 파일입니다. 그런 다음 다른 사용자가 컨트롤의 자체 인스턴스를 구성 하려면이 파일을 가져올 수 있습니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 클래스 몇 가지 속성을 포함 합니다. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> 속성을 설명 파일을 찾을 때 사용자에 게 지침을 사용 하 여 텍스트를 포함 합니다. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> 속성 내에서 표시 된 대로 컨트롤의 레이블로 사용 되는 텍스트가 포함 된 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 컨트롤. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> 컨트롤 설명을 가져올 때 오류가 발생 하는 경우 표시 되는 텍스트를 포함 합니다. 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> 속성에 대 한 기본 제목에 할당할 기본 속성을 재정의 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 개발자 제목을 할당 하지 않는 경우를 제어 합니다. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> 설명 파일을 업로드 하려면 사용자가 클릭할 단추에 대 한 텍스트를 포함 하는 속성 및 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> 속성 업로드 프로세스에 대 한 지침이 포함 되어 있습니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 클래스도 몇 가지 고유한 메서드를 포함 합니다. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> 메서드 검색을 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 각각에 대 한 개체 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 수 있도록 하는 카탈로그에는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 해당 인스턴스를 만들 필요 없이 각 서버 컨트롤에 대 한 정보를 표시할 컨트롤. 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> 메서드는 특정 인스턴스를 가져옵니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 메서드에 전달 된 설명에 따라 합니다.  
  
 사용과 관련 된 몇 가지 내재 된 위험을 가지는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 제어 합니다. 한 예로 가져오기에 사용 되는 설명 파일을 통해 웹 응용 프로그램에 악성 데이터를 가져올 수 있습니다. 배치한 경우 악성 스크립트 코드 설명 파일에 문자열 속성의 값으로, 다음 스크립트가 실행 될 수 사용자 description 파일을 가져오고 웹 페이지에 참조 되는 서버 컨트롤을 추가 하는 경우. 악의적인 데이터 설명 파일을 가져올 위험을 최소화 하려면 문자열 형식의 속성이 있는 서버 컨트롤 항상 인코딩해야 속성 데이터를 합니다. 또 다른 위험 설명 파일을 통해 형식을 가져오는 경우에 (참조 [웹 파트 제어 설명 파일](https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8)). 악의적인 사용자는 여러 어셈블리를 로드 하는 요청을 제출할 수 있습니다는 <xref:System.AppDomain>로 메모리 사용량이 너무 많습니다.  
  
 가져오기와 관련 된 위험을 방지 하려면 기능을 해제 하면를 완전히 가져오기 기능을 사용 하지 않고 또는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 제어 합니다. 또는 컨트롤에 액세스할 수 있는 사용자를 제한할 수 있습니다. 수행할 수 있습니다이 프로그래밍 방식으로 역할 관리를 사용 하 여 (참조 [권한 부여를 사용 하 여 역할 관리](https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195)). 예를 들어, 페이지를 로드 하는 경우 사용자가 관리자 역할과 같은 특정 역할에 있는지 여부를 테스트할 수 있습니다. 하는 경우 사용자가 역할을 프로그래밍 방식으로 추가할 수는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 컨트롤을 해당 사용자에 대 한 페이지입니다. 사용할 수 있는 사용자 집합을 제한 하는 선언적 방법을 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 제어 합니다.  카탈로그를 포함 하 여 웹 페이지 내에서 두 배치할 수 있는 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> 컨트롤: 가져올 수 있는 사용자 및 사용자에 게 없습니다. 가져올 수 있는 사용자에 대 한 영역에는 포함 된 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 제어 합니다. 영역 자체 내에 배치할 수 있습니다는 <xref:System.Web.UI.WebControls.LoginView> 사용자 또는 역할 지정 하는 인증 된 것만 영역에서 컨트롤의 사용을 제한 하는 데 사용할 수 있는 컨트롤입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 웹 페이지에서 선언적으로 프로그래밍 방식으로 제어 합니다. 예제에는 네 가지 부분이 있습니다.  
  
-   웹 파트 페이지의 디스플레이 모드를 변경할 수 있게 해 주는 사용자 정의 컨트롤입니다.  
  
-   포함 하는 웹 페이지는 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> 컨트롤 및 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 제어 합니다.  
  
-   두 가지 사용자 지정을 포함 하는 소스 코드 파일을 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다.  
  
-   브라우저에서 페이지를 로드 하는 경우이 예제에서는 표시 되는 원리를 설명 했습니다.  
  
 이 코드 예제에 첫 번째 부분은 사용자가 웹 페이지의 디스플레이 모드를 변경할 수 있는 사용자 정의 컨트롤입니다. 다음 소스 코드 파일에 배치 하 고 이름을 Displaymodemenucs.ascx 또는 Displaymodemenuvb.ascx (언어에 따라 사용 하는) 해야 합니다. 이 컨트롤의 모드 및 소스 코드에 대 한 설명을 표시 하는 대 한 정보를 참조 [연습: 페이지 파트는 웹에서 디스플레이 모드 변경](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)합니다.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/DisplayModeMenuVB.ascx#7)]  
  
 코드 예제의 두 번째 부분은 웹 페이지입니다. 페이지의 맨 위에 있는 두 개의 `register` 지시문, 사용자 정의 컨트롤 및 두 개의 사용자 지정을 포함 하는 컴파일된 구성 요소에 대해 하나씩 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다. 페이지에 대 한 선언적 참조에는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 선언적 요소의 적절 한 계층 구조 내에 중첩 된 컨트롤입니다. 여러 속성 값에 선언적으로 할당 되어 있는지 확인 합니다 `<asp:importcatalogpart>` 요소입니다. 또한 합니다 `Button1_Click` 에서 속성 값의 개수를 업데이트 하는 메서드는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 제어 합니다.  
  
 페이지의 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 제어, 두 가지 사용자 지정 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 선언 됩니다. 합니다 `<aspSample:userinfowebpart>` 컨트롤에는 `exportmode="all"` 특성입니다. 이 특성은 사용자가 다른 사용자가 설명 파일을 사용 하 여 컨트롤을 가져올 다음 가져올 수 있는 컨트롤에 대 한 설명 파일을 내보낼 수 있도록 해야 합니다.  
  
> [!NOTE]
>  설명 파일을 내보낼 웹 파트 응용 프로그램의 사용자가 사용할 수 있도록 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 추가 하 여 웹 응용 프로그램에서 내보내기 기능은 설정할 수도 있습니다는 `enableExport="true"` 특성을 `<webParts>` 요소 (합니다 의자식인`<system.web>`요소)의 Web.config 파일에 있습니다. 내보내기는 기본적으로 비활성화 되어, 응용 프로그램에 대 한 내보내기를 아직 설정 하지 않은 경우 Web.config 파일을 편집 하 고 지금 하므로 합니다.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#1)]  
  
 세 번째 부분 코드 예제에서는 두 개의 소스 코드는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다. 이러한 컨트롤의 몇 가지 속성으로 표시 되는 공지를 `WebBrowsable` 특성입니다. 그러면는 <xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart> 컨트롤을 동적으로 해당 컨트롤이 편집 모드에 있을 때 해당 속성을 편집 하려면 사용자에 대 한 사용자 인터페이스 (UI)를 생성 합니다. 속성을 사용 하 여도 표시 됩니다는 `WebDisplayName` 편집 UI의 각 컨트롤 옆에 나타나는 레이블의 텍스트를 지정 하려면 특성입니다. 코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다. 명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다. 또는 컴파일 수 있는 수 동적으로 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다. 이 코드 예제에서는 동적 컴파일을 사용 합니다. 컴파일하는 두 가지 메서드를 보여 주는 연습을 참조 하세요. [연습: 개발 및 사용자 지정을 사용 하 여 웹 서버 컨트롤](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)합니다.  
  
 사용자 지정 컨트롤 이라는 `TextDisplayWebPart` 웹 페이지에 참조 되는 `<aspSample:TextDisplayWebPart>` 요소입니다. 다른 컨트롤을 호출 `UserInfoWebPart`에 선언 된 웹 페이지의 처음에 있지만 컨트롤에 대 한 설명 파일을 가져올 수 있는 기능을 설명 하기 위해 나중에 제거 됩니다.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/userinfowebpart.vb#6)]  
  
 이제이 코드 예제를 실행 합니다. 브라우저에서 웹 페이지를 로드 합니다. 편집 하는 첫 번째 단계는 `UserInfoWebPart` 제어 합니다. 사용 하 여는 **디스플레이 모드** 드롭다운 목록 컨트롤 및 선택 **편집** 페이지를 편집 모드로 전환 합니다. 동사 메뉴를 클릭 합니다 `UserInfoWebPart` (제목 표시줄에 있는 아래쪽 화살표)를 제어 하 고 클릭 한 다음 **편집**합니다. 아래에 여러 개의 편집 컨트롤이 표시 편집 UI에 표시 되 면는 `UserInfoWebPart` 필드 값을 편집 하는 데 사용할 수 있는 컨트롤입니다. 일부 필드를 편집을 클릭 합니다 **확인**를 사용 하 여는 **디스플레이 모드** 드롭 다운 페이지를 찾아보기 모드로 돌아갑니다.  
  
 내보내기에 두 번째 단계는 합니다. 설명 파일을 웹 파트는 `UserInfoWebPart` 제어 합니다. (제목 표시줄의 아래쪽 화살표로 표시 됨), 사용자 지정 컨트롤에 있는 동사 메뉴를 클릭 하 고 클릭 **내보내기**합니다. 저장 하는 지침을 합니다. 웹 파트 컨트롤에 대 한 설명 파일입니다. 이제 웹 페이지를 닫고 편집기에서 페이지 소스를 편집 합니다. 삭제 된 `<aspSample:userinfowebpart>` 선언 요소를 제어 하 고 저장 파일을 닫습니다. (아직 없는 사용자를 시뮬레이션 하기 위해이 단계를 수행 하는 `UserInfoWebPart` 컨트롤을 페이지로 컨트롤을 가져올 수 있습니다).  
  
 브라우저에서 다시 웹 페이지를 로드 합니다. `UserInfoWebPart` 컨트롤 나타나지 않고 제거 했기 때문입니다. 사용 된 **디스플레이 모드** 드롭다운 목록 컨트롤을 선택 **카탈로그** 페이지 모드로 전환 하려면 카탈로그입니다. 에 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 컨트롤을 클릭 합니다 **찾아보기** 을 찾아서 단추를. 웹 파트를 만든 후 클릭 합니다 **업로드** 단추입니다. 컨트롤에 대 한 참조는 옆에 확인란이 표시 됩니다. 확인란을 선택한 다음 클릭 **추가** 페이지로 컨트롤을 추가 합니다.  
  
 페이지의이 보기에 있는 동안 클릭 합니다 **업데이트 ImportCatalogPart** 에 프로그래밍 방식으로 속성 값의 개수를 업데이트 하는 효과 확인 하려면 페이지 아래쪽에 있는 단추는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 제어 합니다. 단추를 클릭 한 후 UI의 다양 한 속성을 변경 하는 방법을 확인 합니다.  
  
 마지막으로, 클릭 **닫기** 카탈로그 모드를 종료 하 여 찾아보기 모드를 페이지를 반환 합니다. `UserInfoWebPart` 앞서 내보낸 때 갖고 있던 값이 포함 된 컨트롤이 페이지에서 이제 표시 되어야 합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" />
    <related type="Article" href="https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8">웹 파트 제어 설명 파일</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportCatalogPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportCatalogPart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A> 생성자는 기본; 생성자에 선언 된는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 클래스 및 따라서 이상 특별 한 작업 수행 되는 클래스의 새 인스턴스를 만들 때. .NET Framework 클래스의 인스턴스를 만드는 생성자를 내부적으로 사용 합니다.  
  
 일반적으로 사용 해야 하지는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A> 사용자 고유의 코드에서 프로그래밍 방식으로 생성자입니다. 컨트롤의 용도 페이지 개발자가 디자인 타임에 선언적으로 페이지에 추가할 수입니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="BrowseHelpText">
      <MemberSignature Language="C#" Value="public string BrowseHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BrowseHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property BrowseHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BrowseHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BrowseHelpText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 설명 파일의 위치를 찾을 때 지침을 제공하는 텍스트 메시지를 가져오거나 설정합니다.</summary>
        <value>메시지 텍스트가 포함된 문자열입니다. 기본값은 .NET Framework에서 제공하는 culture별 메시지입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> 속성은 사용자 가장 먼저 가져온된 컨트롤을 추가 하 고 작업을 반복 해야 대 한 간단한 개요: 경로 입력 하거나 파일을 탐색 하 여 설명 파일의 위치를 제공 합니다. 이 속성에 대 한 사용자 지정 값을 제공 하는 일반적인 이유 설명 파일을 찾기 위해 이동 해야 할 특정 네트워크 공유와 같은 사용자에 대 한 특별 지침 경우입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> 속성 선언적 및 프로그래밍 합니다. 전체 코드 및 예제를 실행 하는 데 필요한 지침의 예 섹션을 참조 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 클래스 개요입니다.  
  
 코드의 다음 섹션에서는 다음에 유의 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> 속성 값이 컨트롤에 대 한 선언적으로 설정 합니다.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 코드의이 섹션에는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> 속성 값을 프로그래밍 방식으로 할당 됩니다.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 브라우저에서 페이지를 로드할 때 사용할 수는 **디스플레이 모드** 선택 하려면 드롭다운 목록 컨트롤 **카탈로그 모드** 카탈로그 모드로 전환 합니다. 카탈로그 모드 및 description 파일 업로드 페이지를 사용 하 여 사용자 인터페이스 (UI)에 표시 되는 다양 한 텍스트 문자열에 대 한 참고를 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 제어 합니다. 클릭할 경우 합니다 **설명 파일 업로드** 단추를 일부의 UI에서 속성에 대 한 텍스트에 대 한 텍스트를 포함 하 여 변경 되는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="importCatalogPart.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public override string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>단추가 포함된 폼이 렌더링될 때 포커스를 받는 기본 단추로 처리되는 UI(사용자 인터페이스)의 단추를 가져오거나 설정합니다. 이 속성은 페이지 개발자 코드에서는 호출할 수 없습니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤에서 기본 포커스를 받는 <see cref="T:System.Web.UI.WebControls.Panel" />의 ID가 포함된 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에 대 한 코드에서 상속 되며, 기본 속성을 재정의 합니다 <xref:System.Web.UI.WebControls.Panel> 클래스 속성을 디자이너에서에서 숨기고 테마 영향을 받지 않도록 합니다. 공용 이기는 하지만이 속성은이 컨트롤의 기본 렌더링에 대 한 설정 웹 파트 컨트롤에서 내부적으로 사용 및 페이지 개발자가 사용할 수 없습니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 <xref:System.Web.UI.ThemeableAttribute> 하 고 [ASP.NET 테마 및 스킨](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.DefaultButton" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableWebPartDescriptions">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAvailableWebPartDescriptions () As WebPartDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPartDescriptionCollection ^ GetAvailableWebPartDescriptions();" />
      <MemberSignature Language="F#" Value="override this.GetAvailableWebPartDescriptions : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" Usage="importCatalogPart.GetAvailableWebPartDescriptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>카탈로그에서 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤에 대한 설명의 컬렉션을 반환합니다.</summary>
        <returns>카탈로그의 각 컨트롤에 대한 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" />이 들어 있는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> 메서드는 추상 기본 메서드 선언에 대 한 구현을 제공 합니다 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 클래스입니다. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> 카탈로그에 각 컨트롤에 대 한 설명 정보를 반환 합니다. 경우에는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 있을 수 있습니다만 하나의 서버 컨트롤 카탈로그에서 한 번에 컨트롤이 여러 개 있는 경우 메서드가 작동 하는 경우에을 제어 합니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 개체는 개체에 대 한 중요 한 정보를 포함 하는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤에서 상속 되는 몇 가지 중요 한 속성의 값을 개체 참조를 해당 ID를 포함 하 여 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.Part> 클래스와 같은 <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> 고 <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>입니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> 메서드는 성능을 향상 합니다. 에 포함 된 제목, 설명, 아이콘 (있는 경우) 및 ID를 포함 하 여 각 컨트롤에 대 한 일부 정보는 카탈로그를 만든 경우 필요한 이 정보를 가져오려면 각 컨트롤의 인스턴스를 만드는 것이 아니라는 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 호출 카탈로그를 생성 하는 영역을 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> 메서드 및 호출의 인스턴스를 사용 하지 않고 컨트롤에 대 한 설명을 정보만 반환 합니다 컨트롤입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> 웹 페이지에는 메서드. 예제에는 네 가지 부분이 있습니다.  
  
-   웹 파트 페이지의 디스플레이 모드를 변경할 수 있게 해 주는 사용자 정의 컨트롤입니다.  
  
-   포함 하는 웹 페이지는 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> 컨트롤 및 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 컨트롤을 사용 하는 코드는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> 메서드.  
  
-   두 가지 사용자 지정을 포함 하는 소스 코드 파일을 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다.  
  
-   브라우저에서 페이지를 로드 하는 경우이 예제에서는 표시 되는 원리를 설명 했습니다.  
  
 이 코드 예제에 첫 번째 부분은 사용자가 웹 페이지의 디스플레이 모드를 변경할 수 있는 사용자 정의 컨트롤입니다. 다음 소스 코드 파일에 배치 하 고 이름을 Displaymodemenucs.ascx 또는 Displaymodemenuvb.ascx (언어에 따라 사용 하는) 해야 합니다. 이 컨트롤의 모드 및 소스 코드에 대 한 설명을 표시 하는 대 한 정보를 참조 [연습: 페이지 파트는 웹에서 디스플레이 모드 변경](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)합니다.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 코드 예제의 두 번째 부분은 웹 페이지입니다. 페이지의 맨 위에 있는 두 개의 `register` 지시문, 사용자 정의 컨트롤 및 두 개의 사용자 지정을 포함 하는 컴파일된 구성 요소에 대해 하나씩 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다. 이러한 두 컨트롤 페이지의 태그에서 선언적으로 참조 됩니다. 에 대 한 선언적 참조를 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 (시작 둘 다는 `aspSample` 접두사), 각는 `exportMode="all"` 추가할 특성입니다. 이 특성을 사용 하면 내보낼 수 있습니다는. 웹 파트 페이지에 컨트롤을 가져오려는 단계를 나중에 사용할 수 있는 컨트롤에 대 한 설명 파일입니다.  
  
> [!NOTE]
>  설명 파일을 내보낼 웹 파트 응용 프로그램의 사용자가 사용할 수 있도록 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 추가 하 여 웹 응용 프로그램에서 내보내기 기능은 설정할 수도 있습니다는 `enableExport="true"` 특성을 `<webParts>` 요소 (합니다 의자식인`<system.web>`요소)의 Web.config 파일에 있습니다. 내보내기는 기본적으로 비활성화 되어, 응용 프로그램에 대 한 내보내기를 아직 설정 하지 않은 경우 Web.config 파일을 편집 하 고 지금 하므로 합니다.  
  
 웹 페이지에 대 한 선언적 참조 역시는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 선언적 요소의 적절 한 계층 구조 내에 중첩 된 컨트롤입니다. 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> 메서드는 코드 내에서 `Button1_Click` 메서드.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 세 번째 부분 코드 예제에서는 두 개의 소스 코드는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다. 코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다. 명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다. 또는 컴파일 수 있는 수 동적으로 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다. 이 코드 예제에서는 동적 컴파일을 사용 합니다. 컴파일하는 두 가지 메서드를 보여 주는 연습을 참조 하세요. [연습: 개발 및 사용자 지정을 사용 하 여 웹 서버 컨트롤](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)합니다.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 이제이 코드 예제를 실행 합니다. 브라우저에서 웹 페이지를 로드 합니다. 첫 번째 단계는 내보내기는 합니다. 각 웹 파트 설명 파일 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 (에 대 한는 `TextDisplayWebPart` 한를 `UserInfoWebPart` 컨트롤). 각 컨트롤에 대해 (제목 표시줄의 아래쪽 화살표로 표시 됨), 컨트롤의 동사 메뉴를 클릭 하 고 클릭 **내보내기**합니다. 저장 하는 지침을 합니다. 웹 파트 컨트롤에 대 한 설명 파일입니다. 각 컨트롤에 대 한 설명 파일을 내보낸 후 웹 페이지를 닫고 편집기에서 페이지 소스를 편집 합니다. 삭제 된 `<aspSample:userinfowebpart>` 하며 `<aspSample:textdisplaywebpart>` 선언 요소를 제어, 그런 다음 저장 하 고 파일을 닫습니다. (아직 없는 이러한 컨트롤을 페이지로 컨트롤을 가져올 수 있도록 사용자를 시뮬레이션 하기 위해이 단계를 수행 됩니다).  
  
 브라우저에서 다시 웹 페이지를 로드 합니다. 사용 된 **디스플레이 모드** 드롭다운 목록 컨트롤을 선택 **카탈로그** 페이지 모드로 전환 하려면 카탈로그입니다. 에 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 컨트롤을 클릭 합니다 **찾아보기** 단추를 찾습니다는. 만든 웹 파트 파일 하나를 선택한 다음 클릭 합니다 **업로드** 단추입니다. 컨트롤에 대 한 참조는 옆에 확인란이 표시 됩니다. 확인란을 선택한 다음 클릭 **추가** 페이지로 컨트롤을 추가 합니다. 다른 컨트롤에 대 한이 프로세스를 반복 합니다.  
  
 페이지의이 보기에 있는 동안 클릭 합니다 **WebPart 설명 가져오기** 에 프로그래밍 방식으로 액세스 하는 효과 확인 하려면 페이지 아래쪽에 있는 단추는 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 제어 설명에 현재 로드 된 개체는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 제어 합니다. 설명 정보에 액세스 하는 데 사용 하는 메서드를 `Button1_Click` 페이지 소스의 방법은 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> 메서드. 단추 아래의 레이블 컨트롤에 대 한 기본 정보를 표시합니다.  
  
 첫 번째 컨트롤을 추가한 후 페이지에 두 번째 컨트롤을 추가 하는 프로세스를 반복 합니다. 마지막으로, 클릭 **닫기** 카탈로그 모드를 종료 하 여 찾아보기 모드를 페이지를 반환 합니다. 이제 두 사용자 지정 컨트롤 이전 설명 파일을 내보낼 때가지고 있던 값을 포함 하는 페이지에 나타납니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="GetWebPart">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPart GetWebPart (System.Web.UI.WebControls.WebParts.WebPartDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPart GetWebPart(class System.Web.UI.WebControls.WebParts.WebPartDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetWebPart (description As WebPartDescription) As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPart ^ GetWebPart(System::Web::UI::WebControls::WebParts::WebPartDescription ^ description);" />
      <MemberSignature Language="F#" Value="override this.GetWebPart : System.Web.UI.WebControls.WebParts.WebPartDescription -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="importCatalogPart.GetWebPart description" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.Web.UI.WebControls.WebParts.WebPartDescription" />
      </Parameters>
      <Docs>
        <param name="description">컨트롤에 대한 세부 정보가 들어 있는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />입니다.</param>
        <summary>메서드에 전달된 설명의 값을 기준으로 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤에 대한 참조를 반환합니다.</summary>
        <returns>설명이 <paramref name="description" />의 값과 일치하는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> 메서드 참조를 반환 합니다.는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 설명 세부 정보가의 값과 일치 하는 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 메서드에 전달 된 개체입니다. 와 함께이 메서드는 일반적으로 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A> 카탈로그에는 컨트롤의 설명을 검색 하는 데 사용 되는 메서드. 개별 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 검색 하거나 개별 전달 하 여 필요에 따라 조작한 다음 수 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 개체는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> 메서드.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> 웹 페이지에는 메서드. 예제에는 네 가지 부분이 있습니다.  
  
-   웹 파트 페이지의 디스플레이 모드를 변경할 수 있게 해 주는 사용자 정의 컨트롤입니다.  
  
-   포함 하는 웹 페이지는 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> 컨트롤 및 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 컨트롤을 사용 하는 코드는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> 메서드.  
  
-   두 가지 사용자 지정을 포함 하는 소스 코드 파일을 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다.  
  
-   브라우저에서 페이지를 로드 하는 경우이 예제에서는 표시 되는 원리를 설명 했습니다.  
  
 이 코드 예제에 첫 번째 부분은 사용자가 웹 페이지의 디스플레이 모드를 변경할 수 있는 사용자 정의 컨트롤입니다. 다음 소스 코드 파일에 배치 하 고 이름을 Displaymodemenucs.ascx 또는 Displaymodemenuvb.ascx (언어에 따라 사용 하는) 해야 합니다. 이 컨트롤의 모드 및 소스 코드에 대 한 설명을 표시 하는 대 한 정보를 참조 [연습: 페이지 파트는 웹에서 디스플레이 모드 변경](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)합니다.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 코드 예제의 두 번째 부분은 웹 페이지입니다. 페이지의 맨 위에 있는 두 개의 `register` 지시문, 사용자 정의 컨트롤 및 두 개의 사용자 지정을 포함 하는 컴파일된 구성 요소에 대해 하나씩 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다. 이러한 두 컨트롤 페이지의 태그에서 선언적으로 참조 됩니다. 에 대 한 선언적 참조를 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 (시작 둘 다는 `aspSample` 접두사), 각는 `exportMode="all"` 추가할 특성입니다. 이 특성을 사용 하면 내보낼 수 있습니다는. 웹 파트 페이지에 컨트롤을 가져오려는 단계를 나중에 사용할 수 있는 컨트롤에 대 한 설명 파일입니다.  
  
> [!NOTE]
>  설명 파일을 내보낼 웹 파트 응용 프로그램의 사용자가 사용할 수 있도록 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 추가 하 여 웹 응용 프로그램에서 내보내기 기능은 설정할 수도 있습니다는 `enableExport="true"` 특성을 `<webParts>` 요소 (합니다 의자식인`<system.web>`요소)의 Web.config 파일에 있습니다. 내보내기는 기본적으로 비활성화 되어, 응용 프로그램에 대 한 내보내기를 아직 설정 하지 않은 경우 Web.config 파일을 편집 하 고 지금 하므로 합니다.  
  
 웹 페이지에 대 한 선언적 참조 역시는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 선언적 요소의 적절 한 계층 구조 내에 중첩 된 컨트롤입니다. 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> 메서드는 코드 내에서 `Button2_Click` 메서드.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 세 번째 부분 코드 예제에서는 두 개의 소스 코드는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다. 코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다. 명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다. 또는 컴파일 수 있는 수 동적으로 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다. 이 코드 예제에서는 동적 컴파일을 사용 합니다. 컴파일하는 두 가지 메서드를 보여 주는 연습을 참조 하세요. [연습: 개발 및 사용자 지정을 사용 하 여 웹 서버 컨트롤](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)합니다.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 이제이 코드 예제를 실행 합니다. 브라우저에서 웹 페이지를 로드 합니다. 첫 번째 단계는 내보내기는 합니다. 각 웹 파트 설명 파일 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 (에 대 한는 `TextDisplayWebPart` 한를 `UserInfoWebPart` 컨트롤). 각 컨트롤에 대해 (제목 표시줄의 아래쪽 화살표로 표시 됨), 컨트롤의 동사 메뉴를 클릭 하 고 클릭 **내보내기**합니다. 저장 하는 지침을 합니다. 웹 파트 컨트롤에 대 한 설명 파일입니다. 각 컨트롤에 대 한 설명 파일을 내보낸 후 웹 페이지를 닫고 편집기에서 페이지 소스를 편집 합니다. 삭제 된 `<aspSample:userinfowebpart>` 하며 `<aspSample:textdisplaywebpart>` 선언 요소를 제어, 그런 다음 저장 하 고 파일을 닫습니다. (아직 없는 이러한 컨트롤을 페이지로 컨트롤을 가져올 수 있도록 사용자를 시뮬레이션 하기 위해이 단계를 수행 됩니다).  
  
 브라우저에서 다시 웹 페이지를 로드 합니다. 사용 된 **디스플레이 모드** 드롭다운 목록 컨트롤을 선택 **카탈로그** 페이지 모드로 전환 하려면 카탈로그입니다. 에 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 컨트롤을 클릭 합니다 **찾아보기** 단추를 찾습니다는. 만든 웹 파트 파일 하나를 선택한 다음 클릭 합니다 **업로드** 단추입니다. 컨트롤에 대 한 참조는 옆에 확인란이 표시 됩니다. 제어 설명에 업로드 했으므로 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 컨트롤을 클릭 합니다 **사용 하 여 GetWebPart** 페이지 하단에 있는 단추입니다. 호출의 효과 보여 주기는이 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> 메서드 및 현재 로드 된 컨트롤 설명을 전달는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 제어 합니다. 연결 된 서버 컨트롤을 즉시 추가 됩니다 웹 페이지를 사용자에 게 클릭 하지 않고 합니다 **추가** 단추입니다. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> 호출 되는 메서드를를 `Button2_Click` 페이지 소스를 반환 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤에 로드 된 현재 설명과 연결 된는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 컨트롤. 다음은 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> 메서드를 호출 하며 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤이 페이지에 직접 추가 됩니다. 프로그래밍 방식으로 컨트롤을 추가 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 사용자 개입 없이 컨트롤입니다.  
  
 첫 번째 컨트롤을 추가한 후 페이지에 두 번째 컨트롤을 추가 하는 프로세스를 반복 합니다. 마지막으로, 클릭 **닫기** 카탈로그 모드를 종료 하 여 찾아보기 모드를 페이지를 반환 합니다. 이제 두 사용자 지정 컨트롤 이전 설명 파일을 내보낼 때가지고 있던 값을 포함 하는 페이지에 나타납니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="description" />가 <see langword="null" />입니다.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="description" />이 사용할 수 있는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> 값이 아닌 경우</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="ImportedPartLabelText">
      <MemberSignature Language="C#" Value="public string ImportedPartLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImportedPartLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property ImportedPartLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImportedPartLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImportedPartLabelText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>가져온 컨트롤의 카탈로그 내에 있는 컨트롤을 나타내거나 설명하는 파일을 가져온 후에 표시되는 텍스트를 가져오거나 설정합니다.</summary>
        <value>레이블 텍스트가 포함된 문자열입니다. 기본값은 .NET Framework에서 제공하는 culture별 메시지입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> 속성에 포함 된 컨트롤을 설명 하는 짧은, 일반 레이블을 포함 하는 일반적으로 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 제어 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> 속성 선언적 및 프로그래밍 합니다. 전체 코드 및 예제를 실행 하는 데 필요한 지침의 예 섹션을 참조 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 클래스 개요입니다.  
  
 코드의 다음 섹션에서는 다음에 유의 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> 속성 값이 컨트롤에 대 한 선언적으로 설정 합니다.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 코드의이 섹션에는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> 속성 값을 프로그래밍 방식으로 할당 됩니다.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 브라우저에서 페이지를 로드할 때 사용할 수는 **디스플레이 모드** 선택 하려면 드롭다운 목록 컨트롤 **카탈로그 모드** 카탈로그 모드로 전환 합니다. 카탈로그 모드 및 description 파일 업로드 페이지를 사용 하 여 사용자 인터페이스 (UI)에 표시 되는 다양 한 텍스트 문자열에 대 한 참고를 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 제어 합니다. 클릭할 경우 합니다 **설명 파일 업로드** 단추를 일부의 UI에서 속성에 대 한 텍스트에 대 한 텍스트를 포함 하 여 변경 되는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="importCatalogPart.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="importCatalogPart.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartImportErrorLabelText">
      <MemberSignature Language="C#" Value="public string PartImportErrorLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PartImportErrorLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property PartImportErrorLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PartImportErrorLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PartImportErrorLabelText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>가져오는 중 오류가 발생할 경우 표시되는 오류 메시지를 가져오거나 설정합니다.</summary>
        <value>레이블 텍스트가 포함된 문자열입니다. 기본값은 .NET Framework에서 제공하는 culture별 메시지입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> 속성은 일부 문제 또는 오류 페이지 설명 파일을 가져오려고 시도 하는 동안 발생 하는 경우 사용자에 게 알리는 데 유용 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> 속성 선언적 및 프로그래밍 합니다. 전체 코드 및 예제를 실행 하는 데 필요한 지침의 예 섹션을 참조 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 클래스 개요입니다.  
  
 코드의 다음 섹션에서는 다음에 유의 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> 속성 값이 컨트롤에 대 한 선언적으로 설정 합니다.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 코드의이 섹션에는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> 속성 값을 프로그래밍 방식으로 할당 됩니다.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 브라우저에서 페이지를 로드할 때 사용할 수는 **디스플레이 모드** 선택 하려면 드롭다운 목록 컨트롤 **카탈로그 모드** 카탈로그 모드로 전환 합니다. 카탈로그 모드 및 description 파일 업로드 페이지를 사용 하 여 사용자 인터페이스 (UI)에 표시 되는 다양 한 텍스트 문자열에 대 한 참고를 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 제어 합니다. 클릭할 경우 합니다 **설명 파일 업로드** 단추를 일부의 UI에서 속성에 대 한 텍스트에 대 한 텍스트를 포함 하 여 변경 되는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="importCatalogPart.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="importCatalogPart.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="importCatalogPart.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public override string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" /> 컨트롤의 제목 표시줄에 나타나는 제목을 가져오거나 설정합니다.</summary>
        <value>컨트롤의 제목으로 사용되는 문자열입니다. 기본값은 웹 파트 컨트롤 집합에서 제공하는 계산된 컨트롤 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> 속성 값의 제목 표시줄에 표시 됩니다는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 카탈로그 모드에서 표시 된 경우를 제어 합니다. 컨트롤을 페이지에 선언할 때 사용 하 여 속성에 대 한 값을 설정할 수 있습니다는 `Title` 특성입니다. 제목에 대 한 값을 제공 하지 않습니다, culture 별 기본 값을이 컨트롤에는 사용자가 편집할 수 있는 속성의 종류를 설명 하기 위해 사용 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> 속성 선언적 및 프로그래밍 합니다. 전체 코드 및 예제를 실행 하는 데 필요한 지침의 예 섹션을 참조 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 클래스 개요입니다.  
  
 코드의 다음 섹션에서는 다음에 유의 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> 속성 값이 컨트롤에 대 한 선언적으로 설정 합니다.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 코드의이 섹션에는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> 속성 값을 프로그래밍 방식으로 할당 됩니다.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 브라우저에서 페이지를 로드할 때 사용할 수는 **디스플레이 모드** 선택 하려면 드롭다운 목록 컨트롤 **카탈로그 모드** 카탈로그 모드로 전환 합니다. 카탈로그 모드 및 description 파일 업로드 페이지를 사용 하 여 사용자 인터페이스 (UI)에 표시 되는 다양 한 텍스트 문자열에 대 한 참고를 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 제어 합니다. 클릭할 경우 합니다 **설명 파일 업로드** 단추를 일부의 UI에서 속성에 대 한 텍스트에 대 한 텍스트를 포함 하 여 변경 되는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="UploadButtonText">
      <MemberSignature Language="C#" Value="public string UploadButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UploadButtonText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>설명 파일의 업로드를 초기화하는 <see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤의 텍스트를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.Button" />의 텍스트로 사용되는 문자열입니다. 기본값은 웹 파트 컨트롤 집합에서 제공하는 culture별 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> 속성에 대 한 텍스트를 제공 합니다 <xref:System.Web.UI.WebControls.Button> 업로드 프로세스를 시작 하는 컨트롤입니다. 이 속성 또는 사용자 지정 텍스트를 할당 하는 경우는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> 속성 텍스트를 명확히 설명 해야 사용자 설명 파일을 업로드 하 고는 합니다. 텍스트 예를 들어 하거나 업로드 프로세스 자체 컨트롤을 업로드 하 고 실제로 의미 하지 해야 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> 속성 선언적 및 프로그래밍 합니다. 전체 코드 및 예제를 실행 하는 데 필요한 지침의 예 섹션을 참조 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 클래스 개요입니다.  
  
 코드의 다음 섹션에서는 다음에 유의 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> 속성 값이 컨트롤에 대 한 선언적으로 설정 합니다.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 코드의이 섹션에는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> 속성 값을 프로그래밍 방식으로 할당 됩니다.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 브라우저에서 페이지를 로드할 때 사용할 수는 **디스플레이 모드** 선택 하려면 드롭다운 목록 컨트롤 **카탈로그 모드** 카탈로그 모드로 전환 합니다. 카탈로그 모드 및 description 파일 업로드 페이지를 사용 하 여 사용자 인터페이스 (UI)에 표시 되는 다양 한 텍스트 문자열에 대 한 참고를 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 제어 합니다. 클릭할 경우 합니다 **설명 파일 업로드** 단추를 일부의 UI에서 속성에 대 한 텍스트에 대 한 텍스트를 포함 하 여 변경 되는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="UploadHelpText">
      <MemberSignature Language="C#" Value="public string UploadHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UploadHelpText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자에게 설명 파일의 업로드 방법을 알려 주는 메시지 텍스트를 가져오거나 설정합니다.</summary>
        <value>사용자에게 설명 파일을 업로드하는 방법을 알려 주는 데 사용되는 문자열입니다. 기본값은 웹 파트 컨트롤 집합에서 제공하는 culture별 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> 속성은 간단한 문장 또는 구 라는 설명 파일을 업로드 하는 단추를 클릭 하 여 사용자에 대 한 지침을 제공 합니다. 이 속성 또는 사용자 지정 텍스트를 할당 하는 경우는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> 속성 텍스트를 명확히 설명 해야 사용자 설명 파일을 업로드 하 고는 합니다. 텍스트 예를 들어 하거나 업로드 프로세스 자체 컨트롤을 업로드 하 고 실제로 의미 하지 해야 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> 속성 선언적 및 프로그래밍 합니다. 전체 코드 및 예제를 실행 하는 데 필요한 지침의 예 섹션을 참조 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 클래스 개요입니다.  
  
 코드의 다음 섹션에서는 다음에 유의 합니다 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> 속성 값이 컨트롤에 대 한 선언적으로 설정 합니다.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 코드의이 섹션에는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> 속성 값을 프로그래밍 방식으로 할당 됩니다.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 브라우저에서 페이지를 로드할 때 사용할 수는 **디스플레이 모드** 선택 하려면 드롭다운 목록 컨트롤 **카탈로그 모드** 카탈로그 모드로 전환 합니다. 카탈로그 모드 및 description 파일 업로드 페이지를 사용 하 여 사용자 인터페이스 (UI)에 표시 되는 다양 한 텍스트 문자열에 대 한 참고를 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 제어 합니다. 클릭할 경우 합니다 **설명 파일 업로드** 단추를 일부의 UI에서 속성에 대 한 텍스트에 대 한 텍스트를 포함 하 여 변경 되는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
  </Members>
</Type>