<Type Name="ProxyWebPartManager" FullName="System.Web.UI.WebControls.WebParts.ProxyWebPartManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="acb18c3bf408eca8e1d445f8523765f0eaeff480" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59743754" /></Metadata><TypeSignature Language="C#" Value="public class ProxyWebPartManager : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProxyWebPartManager extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ProxyWebPartManager&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProxyWebPartManager : System::Web::UI::Control" />
  <TypeSignature Language="F#" Value="type ProxyWebPartManager = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>콘텐츠 페이지의 연결된 마스터 페이지에 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 컨트롤이 선언된 경우 개발자가 콘텐츠 페이지에서 정적 연결을 선언하는 방법을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 컨트롤이 없으면 특정 시나리오 정적 연결 콘텐츠의 선언 하는 경우 페이지는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤 마스터 페이지에 이미 선언 되었습니다.  
  
 기본적으로 웹 파트 컨트롤을 사용 하는 웹 페이지 있어야 하나 (및 하나만) <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 페이지의 모든 웹 파트 컨트롤을 관리 하는 컨트롤입니다. 웹 파트 응용 프로그램을 마스터 페이지를 사용 하는 경우이를 배치할 일반적 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 런타임에 단일 마스터 페이지를 사용 하 여 모든 콘텐츠 페이지 병합 되므로 마스터 페이지에서 제어 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤의 모든 웹 파트 컨트롤을 관리 합니다 모든 콘텐츠 페이지에서 그러나 개발자는 이러한 응용 프로그램의 콘텐츠 페이지에서 정적 연결을 선언 하려면, 것으로 보일 수도 제한이 있습니다. 정적 웹 파트 연결을 추가 하 여만 선언할 수 있습니다는 <`asp:webpartconnection>` 의 자식 요소로 `<staticconnections>` 요소에는 자체의 자식 이어야를 `<asp:webpartmanager>` 요소입니다. 하지만 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 제어 마스터 페이지에 이미 선언 되었습니다 및 허용 되는 하나 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤 개발자가 추가 선언할 수 없습니다 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 정적 연결을 추가 하는 콘텐츠 페이지에서 컨트롤입니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 컨트롤 대신는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 이 시나리오에서는 제어 합니다. 개발자는 `<asp:proxywebpartmanager>` 요소 대신는 `<asp:webpartmanager>` 요소 수와 콘텐츠 페이지에서 다음 정적 연결을 선언 자식 요소입니다. 런타임 시의 연결을 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 컨트롤에 추가 되는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> 컬렉션은 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 제어 하 고 다른 모든 연결과 같이 처리 합니다.  
  
 때문에 합니다 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 컨트롤은이 특정 개발 시나리오에만 사용, 기능 보다 더 많은 제한이 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 클래스입니다. 사실 있지만 합니다 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 컨트롤에 대 한 정적 연결을 포함 하도록 프록시로 작동 하는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤 콘텐츠 페이지에서에서 상속 되지 않습니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤. 직접 상속 된 <xref:System.Web.UI.Control> 클래스 및 기본 멤버 중 일부를 재정의 합니다. 합니다 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming%2A>, <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible%2A>, 및 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID%2A> 속성은 재정의 되 고 사용 되지 않도록 하는 값을 할당 합니다. 다른 상속 된 속성의 디자인 타임 동작을 조정 하도록 재정의 됩니다 있지만 그렇지 않은 경우 기본 속성을 동일한 동작. 여기에 포함 된 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls%2A> 및 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID%2A> 속성입니다. 마지막으로 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 클래스에 상속 되지 않는 한 속성이 있습니다. 합니다 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> 정적 연결의 자체 컬렉션을 반환 하는 속성 (을 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection> 개체).  
  
 메서드와,는 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 클래스에는 마찬가지로 대부분 사용을 제한 하도록 몇 가지 방법만 재정의 합니다. 상속 된 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus%2A> 메서드 호출 하는 경우 예외를 throw 하 여 사용할 수 없게 됩니다. <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection%2A> 메서드는 항상 컨트롤의 컬렉션을 포함할 수 없도록 방지 하는 효과가 빈 컨트롤 컬렉션을 반환 합니다. 마지막으로 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit%2A> 메서드 기본 메서드를 호출 하 고 다음 참조 하는 연결의 컬렉션을 할당 합니다 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> 속성을를 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=nameWithType> 의 속성은 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤. 모든 콘텐츠 페이지에 선언 된 정적 연결이 모두 롤업 효과가이 쉽게 연결 컬렉션에 포함 하 고 유지 관리는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 마스터 페이지에서 제어 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 마스터 페이지를 사용 하는 응용 프로그램의 콘텐츠 페이지에 정적 연결을 선언 하는 클래스입니다. 이 예제는 5 부:  
  
-   웹 파트를 변경할 수 있게 해 주는 사용자 정의 컨트롤을 페이지 모드를 표시 합니다.  
  
-   소스 코드는 인터페이스 및 두 <xref:System.Web.UI.WebControls.WebParts.WebPart> 역할 공급자와 소비자 연결을 제어 합니다.  
  
-   콘텐츠 페이지를 사용자 컨트롤을 호스팅하는 마스터 웹 페이지 및 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 응용 프로그램에 대 한 제어 합니다.  
  
-   호스팅하는 웹 페이지 콘텐츠를 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 제어, 두 가지 사용자 지정 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤과 두 컨트롤을 연결 하는 정적 연결 합니다.  
  
-   예제 페이지를 실행 하는 방법 설명 합니다.  
  
 이 코드 예제에 첫 번째 부분은 사용자가 웹 페이지의 디스플레이 모드를 변경할 수 있는 사용자 정의 컨트롤입니다. 에 할당 되는 파일 이름을 지정.ascx 파일에 다음 소스 코드를 저장 합니다 `Src` 특성의는 `Register` 호스팅 마스터 페이지의 위쪽에이 사용자 정의 컨트롤에 대 한 지시문을 합니다. 이 컨트롤의 모드 및 소스 코드에 대 한 설명을 표시 하는 대 한 정보를 참조 [연습: 페이지 파트는 웹에서 디스플레이 모드 변경](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)합니다.  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 코드 예제의 두 번째 부분은 인터페이스 및 컨트롤에 대 한 소스 코드입니다. 이라는 간단한 인터페이스를 포함 하는 소스 파일 `IZipCode`합니다. 이기도 한 <xref:System.Web.UI.WebControls.WebParts.WebPart> 라는 클래스 `ZipCodeWebPart` 인터페이스를 구현 하 고 공급자 컨트롤의 역할을 합니다. 해당 `ProvideIZipCode` 메서드는 인터페이스의 전용 멤버를 구현 하는 콜백 메서드입니다. 메서드는 단순히 인터페이스의 인스턴스를 반환합니다. 메서드를 사용 하 여 표시 된 참고는 `ConnectionProvider` 해당 메타 데이터의 특성입니다. 공급자의 연결점에 대 한 콜백 메서드로 메서드를 식별 하기 위한 메커니즘입니다. 다른 <xref:System.Web.UI.WebControls.WebParts.WebPart> 클래스 이름은 `WeatherWebPart`, 연결에 대 한 소비자 역할을 합니다. 이 클래스에 메서드가 `GetZipCode` 의 인스턴스를 가져오는 `IZipCode` 공급자 컨트롤에서 인터페이스입니다. 이 메서드는 사용 하는 소비자 연결 지점 메서드로 표시는 `ConnectionConsumer` 해당 메타 데이터의 특성입니다.  
  
 코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다. 명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다. 또는 컴파일 수 있는 수 동적으로 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다. 이 코드 예제에서는 동적 컴파일을 사용 합니다. 컴파일하는 방법을 보여 주는 연습을 참조 하세요. [연습: 개발 및 사용자 지정을 사용 하 여 웹 서버 컨트롤](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)합니다.  
  
 [!code-csharp[WebParts_ProxyWebPartManager_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/ZipCodeComponent.cs#4)]
 [!code-vb[WebParts_ProxyWebPartManager_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/ZipCodeComponent.vb#4)]  
  
 코드 예제에서는 세 번째 부분에는 마스터 페이지입니다. 다음 소스 코드를 사용 하 고 MasterPageCS.master 또는 MasterPageVB.master (언어에 따라 사용) 이름을 지정 하는 파일로 저장 해야 합니다. 마스터 페이지를 포함 하는 참고를 `Register` 하며 사용자 정의 컨트롤을 등록 하는 지시문은 사용자 컨트롤 페이지의 본문에 자체를 참조 합니다. 마스터 페이지에도 단일 선언 `<asp:webpartmanager>` 이 페이지와 관련 된 모든 콘텐츠 페이지에 사용 되는 요소입니다. 마지막으로 마스터 페이지에는 `<asp: contentplaceholder>` 콘텐츠 페이지를 삽입할 위치 페이지에서 지점 선언 하는 요소입니다.  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/MasterPageCS.master#1)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/MasterPageVB.master#1)]  
  
 네 번째 부분 코드 예제에서는 콘텐츠 페이지입니다. 다음 소스 코드를 복사 하 고 확장명이.aspx 파일에 저장 해야 합니다. 해당 `Page` 지시문에는 `MasterFile` 특성을 마스터 페이지를 참조 하세요. 또한이 페이지에는 `Register` 동적으로 컴파일된 사용자 지정을 포함 하는 App_Code 폴더에 파일을 등록 하는 지시문 <xref:System.Web.UI.WebControls.WebParts.WebPart> 연결에 참여 하는 컨트롤입니다. 내 합니다 `<asp:content>` 태그 페이지의 방법이 <`asp:proxywebpartmanager>` 자식 요소 `<staticconnections>` 있으며 자식 요소인 `<asp:webpartconnection>` 연결의 세부 정보를 선언 하는 요소. 내는 `<script>` 페이지의 태그를 `Button1_Click` 주에 액세스 하는 일부 코드를 추가 하는 메서드 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 마스터 페이지의 컨트롤 및 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 콘텐츠 페이지에서 컨트롤 페이지에 세부 정보 중 일부를 씁니다.  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/contentPage1CS.aspx#2)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/contentPage1VB.aspx#2)]  
  
 브라우저에서 페이지를 로드 한 후 클릭를 **WebPartManager 정보** 단추 및에 대 한 정보를 확인 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 마스터 페이지의 컨트롤 및 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 콘텐츠 페이지의 컨트롤입니다. 정적 연결을 추적 하는 각 속성에 동일한 수 모두 있는지 참고 예를 들어 (의 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> 속성). 또한 있지만 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤에는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> 횟수를 추적 하는 속성 <xref:System.Web.UI.WebControls.WebParts.WebPart> 자신이 관리 하는 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 용도로 정적 연결을 포함 하는 컨트롤에 해당 속성이 없습니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProxyWebPartManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProxyWebPartManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET에서 생성하는 HTML 태그의 컨트롤 ID를 가져옵니다.</summary>
        <value>ASP.NET에서 생성하는 HTML 태그의 컨트롤 ID입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ClientID" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>UI 계층 구조에서 지정된 서버 컨트롤의 자식 컨트롤을 나타내는 <see cref="T:System.Web.UI.ControlCollection" /> 개체를 가져옵니다.</summary>
        <value>지정된 서버 컨트롤에 대한 자식 컨트롤의 컬렉션입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="proxyWebPartManager.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> 컨트롤에 컨트롤이 포함되지 않도록 기본 속성을 재정의합니다.</summary>
        <returns>항상 <see cref="T:System.Web.UI.EmptyControlCollection" />을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection%2A> 방지 하기 위해 기본 메서드를 재정의 합니다 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 컨트롤을 포함 하 고 컨트롤의 컬렉션을 반환 합니다. 유일한 용도 마스터 페이지를 사용 하는 응용 프로그램 내에서 콘텐츠 페이지에서 선언할 수에 대 한 정적 연결.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.CreateControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>테마가 사용되지 않도록 기본 속성을 재정의합니다.</summary>
        <value>테마가 사용되지 않도록 하려면 항상 <see langword="false" />를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming%2A> 속성을 사용 하 여 사용 하는 테마를 방지 하기 위해 기본 속성을 재정의 합니다 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 제어 합니다. 사용 되는 모든 테마를 사용 하 여 충돌에 들어오는 것을 방지 하는 것이 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 마스터 페이지에서 컨트롤 (해당 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A?displayProperty=nameWithType> 속성은 항상 반환 `true`).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">호출자가 이 속성에 값을 할당하려고 한 경우</exception>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberSignature Language="F#" Value="override this.Focus : unit -&gt; unit" Usage="proxyWebPartManager.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>메서드가 호출되지 않도록 기본 메서드를 재정의합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus%2A> 메서드 기본 메서드를 재정의 하 고 모든 호출자가 메서드를 호출 하려고 시도 하는 경우 예외를 throw 합니다. 왜냐하면 상속 된 <xref:System.Web.UI.Control.Focus%2A?displayProperty=nameWithType> 사용자 인터페이스 (UI)를 사용 하 여 컨트롤에 대 한 반환 하지만 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 컨트롤에 UI 있고 따라서 포커스를 설정할 필요가 없습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">호출자가 이 메서드를 호출하려고 한 경우</exception>
        <altmember cref="M:System.Web.UI.Control.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="proxyWebPartManager.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.Control.Init" /> 이벤트를 발생시키고 컨트롤을 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit%2A> 메서드는 기본 메서드를 호출 하 고 다음 초기화 하는 작업을 수행 합니다 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 컨트롤입니다. 이 방법의 중요 한 작업을 참조 하는 연결의 컬렉션을 할당 하는 것을 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> 속성을 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤의 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=nameWithType> 컬렉션입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">연결된 마스터 페이지의 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 컨트롤이 <see langword="null" />인 경우</exception>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>값이 할당되지 않도록 기본 속성을 재정의합니다.</summary>
        <value>항상 빈 문자열("")을 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID%2A> 속성 재정의에서 사용 되는 효과 방지 하는 기본 속성 값을 할당할 하지 못하도록 스킨을 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 컨트롤입니다. 이 컨트롤은 표시 하지 않습니다. 페이지에는 사용자 인터페이스 (UI) 때문에 수행 됩니다. 동일한 동작에 의해 구현 됩니다 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 제어 하는 데 해당 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A?displayProperty=nameWithType> 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">호출자가 이 속성에 값을 할당하려고 한 경우</exception>
        <altmember cref="P:System.Web.UI.Control.SkinID" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID" />
      </Docs>
    </Member>
    <Member MemberName="StaticConnections">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection StaticConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection StaticConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticConnections As ProxyWebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::ProxyWebPartConnectionCollection ^ StaticConnections { System::Web::UI::WebControls::WebParts::ProxyWebPartConnectionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticConnections : System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>콘텐츠 페이지의 <see langword="&lt;asp:proxywebpartmanager&gt;" /> 요소 내에 선언된 정적 연결의 컬렉션을 가져옵니다.</summary>
        <value><see langword="&lt;asp:proxywebpartmanager&gt;" /> 요소 내에 선언된 모든 정적 <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection" /> 개체가 들어 있는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> 속성의 컬렉션을 참조 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 에서 선언 된 개체는 `<asp:proxywebpartmanager>` 요소입니다. 이 컬렉션에 포함 된 연결의 정적 연결에 추가 됩니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤 (에서 참조 해당 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=nameWithType> 컬렉션), 있으며 연결 된 다른 연결 처럼 정확 하 게 처리는 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 컨트롤입니다.  
  
 해당 하는 선언적 요소는 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> 속성이 `<staticconnections>` 요소입니다. 마스터 페이지를 사용 하는 응용 프로그램에는 `<staticconnections>` 요소가 자식으로 추가 됩니다는 `<asp:proxywebpartmanager>` 콘텐츠 페이지의 요소 및 `<asp:webpartconnection>` 에서 요소가 자식으로 추가 됩니다는 `<staticconnections>` 요소입니다. 여러 `<asp:webpartconnection>` 요소 하나에 추가할 수 있습니다 `<staticconnections>` 요소 및 콘텐츠 페이지를 여러 마스터 페이지 응용 프로그램의 일부로 정적 연결을 선언할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 클래스입니다. 이 코드 예제에서는 선언 하는 콘텐츠 페이지에서 코드의 관련 부분만 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 제어 및 정적 연결 합니다. 를 설정 하는 방법 대 한 설명과 코드 예제를 실행 하는 데 필요한 다른 페이지의 예제 섹션을 참조 합니다 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 클래스 개요입니다.  
  
 다음 코드는 선언 된 콘텐츠 페이지의 `<staticconnections>` 의 자식 요소로 `<asp:proxywebpartmanager>` 요소입니다. 또한를 `Button1_Click` 개수를 확인 하는 메서드를 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> 속성에는 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 제어 하 고 페이지에 씁니다.  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/contentPage1CS.aspx#2)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/contentPage1VB.aspx#2)]  
  
 브라우저에서 페이지를 로드 한 후 클릭를 **WebPartManager 정보** 단추 및에 대 한 정보를 확인 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 마스터 페이지의 컨트롤 및 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 콘텐츠 페이지의 컨트롤입니다. 정적 연결을 추적 하는 각 속성에 동일한 수 모두 있는지 참고 예를 들어 (의 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> 속성).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>값이 할당되지 않도록 기본 속성을 재정의합니다.</summary>
        <value>컨트롤이 표시되지 않도록 하려면 항상 <see langword="false" />를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible%2A> 방지 하기 위해 기본 속성을 재정의 하는 속성을 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 되 고 회상 표시 컨트롤. 합니다 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 컨트롤을 같은 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 제어 하 고 사용자 인터페이스가 없는 (UI) 사용자에 게는 표시 되지 않습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">호출자가 이 속성에 값을 할당하려고 한 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Visible" />
        <altmember cref="P:System.Web.UI.Control.Visible" />
      </Docs>
    </Member>
  </Members>
</Type>