<Type Name="WebPartDescription" FullName="System.Web.UI.WebControls.WebParts.WebPartDescription">
  <Metadata><Meta Name="ms.openlocfilehash" Value="393e9182dbbbe0275100f577104996a3922929a6" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59354619" /></Metadata><TypeSignature Language="C#" Value="public class WebPartDescription" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebPartDescription extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />
  <TypeSignature Language="VB.NET" Value="Public Class WebPartDescription" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPartDescription" />
  <TypeSignature Language="F#" Value="type WebPartDescription = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>컨트롤의 인스턴스를 만들지 않고도 웹 파트 컨트롤의 카탈로그에 표시할 수 있는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤에 대한 정보를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤이 사용자 페이지에 추가할 수 있는 컨트롤의 카탈로그에 표시 되며, 각 컨트롤에 대 한 몇 가지 기본 정보가 필요 합니다. 예를 들어 유용 컨트롤 및 설명의 제목을 하도록 컨트롤을 페이지에 추가할지 여부를 결정 하는 데 충분 한 정보가 사용자가 카탈로그를 볼 수 있도록 합니다. 그러나 카탈로그 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤은 다양 한 컨트롤을 포함 될 수 있습니다 및 경우에 이러한 응용 프로그램의 성능을 영향을 줄 수 마다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 카탈로그에 표시할 정보를 추출 하려면 컨트롤을 만들어야 합니다.  
  
 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 클래스의 인스턴스를 만들 필요는 없습니다 있도록 존재를 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤의 카탈로그에 표시 되는 컨트롤에 대 한 정보를 검색 하는 컨트롤입니다. 웹 파트 컨트롤 집합을 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 함께 다양 한 개체는 또한 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 페이지가 카탈로그에 있을 때 컨트롤 모드를 표시 합니다.  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 클래스에는 해당 생성자를 사용 하는 두 개의 오버 로드가 <xref:System.Web.UI.WebControls.WebParts.WebPart> 인스턴스가 사용할 수 있는 경우 매개 변수로 제어 (의 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A> 생성자),으로 컨트롤에 대 한 정보를 사용 하 여 몇 가지를 사용 하는 문자열을 매개 변수 (의 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A> 생성자).  
  
 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 클래스에 대 한 설명 정보를 포함 하도록 디자인 된 여러 속성에 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다. 다음 표에서를 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 속성 및 각 속성에 해당 하는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
|Description 속성|관련 된 파트 컨트롤 속성|  
|--------------------------|-----------------------------------|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID%2A>|<xref:System.Web.UI.Control.ID%2A>|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title%2A>|<xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description%2A>|<xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl%2A>|<xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A>|  
  
   
  
## Examples  
 다음 코드 예제에서는 프로그래밍 방식으로 사용 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 클래스입니다. 일반적으로이 형식을 웹 파트 컨트롤 집합에서 주로 사용 되지만이 코드 예제에서는 기본 설명 속성의 프로그래밍 방식으로 기본 사용 표시 하기만 하면 됩니다.  
  
 코드 예제에는 네 가지 부분이 있습니다.  
  
-   사용자가 웹 페이지의 디스플레이 모드를 변경할 수 있는 사용자 정의 컨트롤입니다.  
  
-   사용자 지정 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다.  
  
-   다른 컨트롤을 호스팅하는 웹 페이지입니다.  
  
-   코드 예제의 작동 방식을 설명 합니다.  
  
 코드 예제의 첫 번째 부분은 사용자 정의 컨트롤입니다. 사용자 정의 컨트롤에 대 한 소스 코드는 다른 항목에서 제공 됩니다. 사용자 정의 컨트롤에 대 한 자세한 내용은 항목을 참조 하세요. [연습: 페이지 파트는 웹에서 디스플레이 모드 변경](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)합니다.  
  
 [!code-aspx-csharp[WebParts_WebPartDescription_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_WebPartDescription_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/VB/DisplayModeMenuVB.ascx#7)]  
  
 코드 예제의 두 번째 부분은 사용자 지정 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다. 코드 예제를 실행 하려면이 소스 코드를 컴파일해야 합니다. 명시적으로 컴파일할 수 있으며 결과 어셈블리를 웹 사이트의 Bin 폴더 또는 전역 어셈블리 캐시에 넣을 수 있습니다. 또는 컴파일 수 있는 수 동적으로 런타임 시 사이트의 App_Code 폴더에 소스 코드를 넣을 수 있습니다. 이 코드 예제에서는 동적 컴파일 방식을 사용합니다. 컴파일하는 방법을 보여 주는 연습을 참조 하세요. [연습: 개발 및 사용자 지정을 사용 하 여 웹 서버 컨트롤](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)합니다.  
  
 [!code-csharp[WebParts_WebPartDescription_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_WebPartDescription_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/VB/textdisplaywebpart.vb#3)]  
  
 코드 예제에서는 세 번째 부분에는 웹 페이지입니다. 위쪽에 있는 두 개의 `Register` 지시문: 사용자 정의 컨트롤 및 사용자 지정 등록에 등록 하는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 인 소스 파일에 사이트의 App_Code 폴더에 위치한 컨트롤입니다. 이 페이지에는 `<asp:catalogzone>` 두 컨트롤에 대 한 선언적 참조를 포함 하는 요소를: 사용자 지정 <xref:System.Web.UI.WebControls.WebParts.WebPart> 라는 컨트롤 `TextDisplayWebPart`, 및 <xref:System.Web.UI.WebControls.BulletedList> 웹으로 처리 될 서버 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.WebPart> 런타임에 컨트롤 때문에 시간을 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 제어를 래핑하고 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 개체입니다. 에 대 한 코드에서를 `Button1_Click` 메서드를 사용할 수 있는 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 에 대 한 개체를 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 카탈로그에서 검색 하 여는 <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> 메서드를 설명 세부 정보는 모든 기록 페이지.  
  
 [!code-aspx-csharp[WebParts_WebPartDescription_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/CS/wpDescriptioncs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartDescription_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/VB/wpDescriptionvb.aspx#1)]  
  
 브라우저에서 페이지를 로드 한 후 사용 합니다 **표시 모드** 드롭다운 목록 컨트롤을 선택 **카탈로그** 페이지 카탈로그 디스플레이 모드를 변경 하려면. 카탈로그에는 페이지에 추가할 수 있는 두 개의 표시 되어야 합니다. 클릭 합니다 **WebPartDescription 정보를 나열** 단추를 사용할 수 있는 모든 값은 코드 작성 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 페이지에는 개체입니다. 에 대 한 설명 정보를 검색할 수 있는 방법을 보여 줍니다 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 자체의 인스턴스를 만들 필요 없이 카탈로그에는 컨트롤입니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>특정 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤에 대한 정보가 들어 있는 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 오버 로드는 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A> 각각의 새 인스턴스를 반환 하는 생성자를 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 특정에 대 한 정보를 포함 하는 클래스 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다. 오버 로드 간의 차이점에는 새 인스턴스를 작성 하는 시나리오입니다. 경우에 따라 응용 프로그램의 사용 가능한 인스턴스가 있는 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤은 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A> 생성자가 사용 됩니다. 응용 프로그램이 없을 경우 컨트롤 인스턴스를 통해 제어 설명 파일을 가져올 때의 경우와 마찬가지로 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 컨트롤을 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A> 생성자가 사용 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPartDescription (System.Web.UI.WebControls.WebParts.WebPart part);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.WebParts.WebPart part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (part As WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPartDescription(System::Web::UI::WebControls::WebParts::WebPart ^ part);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.WebPartDescription : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.WebPartDescription" Usage="new System.Web.UI.WebControls.WebParts.WebPartDescription part" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="part" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="part"><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />에 정보가 들어 있는 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> 컨트롤입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤 인스턴스를 사용할 수 있는 경우 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A> 생성자는 새 사용 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 개체를 기존 기반 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어 합니다. 이 생성자는 단순히 다른 오버 로드를 호출 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29> 속성에서 필요한 매개 변수 값에서 가져오기 생성자는 `part` 매개 변수입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="part" />의 <see cref="P:System.Web.UI.Control.ID" /> 속성이 <see langword="null" />이거나 빈 문자열("")인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPartDescription (string id, string title, string description, string imageUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id, string title, string description, string imageUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (id As String, title As String, description As String, imageUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPartDescription(System::String ^ id, System::String ^ title, System::String ^ description, System::String ^ imageUrl);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.WebPartDescription : string * string * string * string -&gt; System.Web.UI.WebControls.WebParts.WebPartDescription" Usage="new System.Web.UI.WebControls.WebParts.WebPartDescription (id, title, description, imageUrl)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="imageUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"><see cref="P:System.Web.UI.WebControls.WebParts.WebPartDescription.ID" />에 할당할 값입니다.</param>
        <param name="title"><see cref="P:System.Web.UI.WebControls.WebParts.WebPartDescription.Title" />에 할당할 값입니다.</param>
        <param name="description"><see cref="P:System.Web.UI.WebControls.WebParts.WebPartDescription.Description" />에 할당할 값입니다.</param>
        <param name="imageUrl"><see cref="P:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl" />에 할당할 값입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤에 대한 설명 정보가 들어 있는 여러 문자열을 사용하여 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A> 생성자의 새 인스턴스를 만드는 데 사용 됩니다 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 클래스를 <xref:System.Web.UI.WebControls.WebParts.WebPart> 제어를 사용할 수 없습니다. 예를 들어, 이런 경우는 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 제어 설명 파일을 가져올 때를 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤입니다. 만드는 데 필요한 정보를 가져옵니다을 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 설명 파일에서 직접 개체 및 <xref:System.Web.UI.WebControls.WebParts.WebPart> 인스턴스가 없습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="id" /> 또는 <paramref name="title" />가 <see langword="null" />이거나 빈 문자열("")인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="CatalogIconImageUrl">
      <MemberSignature Language="C#" Value="public string CatalogIconImageUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CatalogIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CatalogIconImageUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CatalogIconImageUrl : string" Usage="System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤의 아이콘으로 사용되는 이미지의 경로가 들어 있는 URL을 가져옵니다.</summary>
        <value>URL이 들어 있는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl%2A> 속성에 직접 대응을 <xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A?displayProperty=nameWithType> 속성입니다. 해당 속성에 설정 된 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 선택한 다음 해당 속성 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 개체 값을 갖게 됩니다.  
  
 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl%2A> 속성은 경우에 페이지를 카탈로그 디스플레이 모드에 적용 됩니다 및 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 컨트롤의 카탈로그에 표시 됩니다. 컨트롤에서 속성 값을 할당 하는 아이콘에 아이콘 컨트롤 옆에 있는 카탈로그에 표시 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 프로그래밍 방식으로 사용 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl%2A> 속성입니다. 이 코드 예제를 실행 하는 데 필요한 전체 코드의 예제 섹션을 참조 하세요.를 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 클래스 개요 항목입니다.  
  
 에 다음 코드를 합니다 `Button1_Click` 메서드는 웹 페이지의 컬렉션을 가져옵니다 하는 방법에 설명 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 사용 하는 카탈로그 개체를 <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> 메서드를 각각의 세부 정보를 표시 하려면 다음 <xref:System.Web.UI.WebControls.WebParts.WebPart> 반복 하 여 카탈로그의 컨트롤 통해 여 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 개체입니다. <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl%2A> 다음 코드에서 속성 값을 검색 합니다.  
  
 [!code-csharp[WebParts_WebPartDescription_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/CS/wpDescriptioncs.aspx#2)]
 [!code-vb[WebParts_WebPartDescription_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/VB/wpDescriptionvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartDescription.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Web.UI.WebControls.WebParts.WebPartDescription.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤의 설명 텍스트를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤의 설명이 들어 있는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description%2A> 속성에 직접 대응을 <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A?displayProperty=nameWithType> 속성입니다. 해당 속성에 설정 된 경우는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤을 선택한 다음 해당 속성 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 개체 값을 갖게 됩니다.  
  
 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description%2A> 속성은 경우에 페이지를 카탈로그 디스플레이 모드에 적용 됩니다 및 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 컨트롤의 카탈로그에 표시 됩니다. 컨트롤에 할당 된 설명이 설명은 카탈로그의 컨트롤에 도구 설명으로 나타납니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 프로그래밍 방식으로 사용 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description%2A> 속성입니다. 이 코드 예제를 실행 하는 데 필요한 전체 코드의 예제 섹션을 참조 하세요.를 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 클래스 개요 항목입니다.  
  
 에 다음 코드를 합니다 `Button1_Click` 메서드는 웹 페이지의 컬렉션을 가져옵니다 하는 방법에 설명 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 사용 하는 카탈로그 개체를 <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> 메서드를 각각의 세부 정보를 표시 하려면 다음 <xref:System.Web.UI.WebControls.WebParts.WebPart> 반복 하 여 카탈로그의 컨트롤 통해 여 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 개체입니다. <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description%2A> 다음 코드에서 속성 값을 검색 합니다.  
  
 [!code-csharp[WebParts_WebPartDescription_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/CS/wpDescriptioncs.aspx#2)]
 [!code-vb[WebParts_WebPartDescription_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/VB/wpDescriptionvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Description" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartDescription.ID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ID : string" Usage="System.Web.UI.WebControls.WebParts.WebPartDescription.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>해당 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤의 ID를 가져옵니다.</summary>
        <value>컨트롤의 ID가 포함된 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값을 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID%2A> 속성 일 수 없습니다 `null`; 값을 항상 있어야 합니다. 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID%2A> 속성에 직접 대응을 <xref:System.Web.UI.Control.ID%2A?displayProperty=nameWithType> 속성입니다.  
  
 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID%2A> 속성은 경우에 페이지를 카탈로그 디스플레이 모드에 적용 됩니다 및 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 컨트롤의 카탈로그에 표시 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 프로그래밍 방식으로 사용 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID%2A> 속성입니다. 이 코드 예제를 실행 하는 데 필요한 전체 코드의 예제 섹션을 참조 하세요.를 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 클래스 개요 항목입니다.  
  
 에 다음 코드를 합니다 `Button1_Click` 메서드는 웹 페이지의 컬렉션을 가져옵니다 하는 방법에 설명 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 사용 하는 카탈로그 개체를 <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> 메서드를 각각의 세부 정보를 표시 하려면 다음 <xref:System.Web.UI.WebControls.WebParts.WebPart> 반복 하 여 카탈로그의 컨트롤 통해 여 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 개체입니다. <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID%2A> 다음 코드에서 속성 값을 검색 합니다.  
  
 [!code-csharp[WebParts_WebPartDescription_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/CS/wpDescriptioncs.aspx#2)]
 [!code-vb[WebParts_WebPartDescription_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/VB/wpDescriptionvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartDescription.Title" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Title : string" Usage="System.Web.UI.WebControls.WebParts.WebPartDescription.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>해당 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 컨트롤의 제목 텍스트를 가져옵니다.</summary>
        <value>해당 컨트롤의 제목이 들어 있는 문자열입니다. 기본값은 .NET Framework에서 제공하는 계산된 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 값을 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title%2A> 속성에 직접 대응을 <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A?displayProperty=nameWithType> 속성. 무엇이 든 해당 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤에 해당 <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> 속성의 값이 되는 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title%2A> 속성 제목은 계산된 된 값이 고, 그렇지 합니다.  
  
 합니다 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title%2A> 속성은 경우에 페이지를 카탈로그 디스플레이 모드에 적용 됩니다 및 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 컨트롤의 카탈로그에 표시 됩니다. 모든 제목에 할당 되는 <xref:System.Web.UI.WebControls.WebParts.WebPart> 컨트롤 카탈로그에서 컨트롤 옆에 나타납니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 프로그래밍 방식으로 사용 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title%2A> 속성입니다. 이 코드 예제를 실행 하는 데 필요한 전체 코드의 예제 섹션을 참조 하세요.를 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 클래스 개요 항목입니다.  
  
 에 다음 코드를 합니다 `Button1_Click` 메서드는 웹 페이지의 컬렉션을 가져옵니다 하는 방법에 설명 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 사용 하는 카탈로그 개체를 <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> 메서드를 각각의 세부 정보를 표시 하려면 다음 <xref:System.Web.UI.WebControls.WebParts.WebPart> 반복 하 여 카탈로그의 컨트롤 통해 여 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 개체입니다. <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title%2A> 다음 코드에서 속성 값을 검색 합니다.  
  
 [!code-csharp[WebParts_WebPartDescription_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/CS/wpDescriptioncs.aspx#2)]
 [!code-vb[WebParts_WebPartDescription_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDescription_Overview/VB/wpDescriptionvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET 웹 파트 컨트롤</related>
      </Docs>
    </Member>
  </Members>
</Type>