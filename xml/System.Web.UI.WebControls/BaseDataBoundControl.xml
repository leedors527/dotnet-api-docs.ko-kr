<Type Name="BaseDataBoundControl" FullName="System.Web.UI.WebControls.BaseDataBoundControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8d6c3f4387497f8693503c6926ea807f1f776681" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55347771" /></Metadata><TypeSignature Language="C#" Value="public abstract class BaseDataBoundControl : System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BaseDataBoundControl extends System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BaseDataBoundControl" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseDataBoundControl&#xA;Inherits WebControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseDataBoundControl abstract : System::Web::UI::WebControls::WebControl" />
  <TypeSignature Language="F#" Value="type BaseDataBoundControl = class&#xA;    inherit WebControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("DataSourceID")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ASP.NET 데이터 소스 제어를 사용하여 데이터에 바인딩되는 컨트롤에 대한 기본 클래스로 사용됩니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 웹 서버 컨트롤에 일관 된 방식으로 데이터를 바인딩할 수 있게 해 주는 컨트롤 아키텍처를 지원 합니다. 데이터에 바인딩되는 웹 서버 컨트롤은 데이터 바인딩된 컨트롤과 바인딩 데이터 소스 컨트롤 이라고 하는 클래스 라고 합니다. ASP.NET 데이터 소스 컨트롤을 사용 하도록 설계 된 데이터 바인딩된 컨트롤에서 파생 된 <xref:System.Web.UI.WebControls.BaseDataBoundControl> 기본 데이터 바인딩된 컨트롤 기능을 정의 하는 클래스를 제어 합니다.  
  
 ASP.NET과 함께 제공 되는 데이터 바인딩된 컨트롤을 사용할 수 포함 하 여 <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, 및 <xref:System.Web.UI.WebControls.TreeView>, 데이터 표시와 관련 된 대부분의 웹 개발 태스크를 수행 합니다. 이러한 컨트롤은는 필요한 기능을 제공 하지 않는 시나리오에서는 기본에서 상속할 수 있습니다 <xref:System.Web.UI.WebControls.DataBoundControl> 고 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> 소스 제어 사용자 고유의 사용자 지정 데이터를 구현 하는 클래스입니다.  
  
 모든 클래스는 지를 `DataSource` 및 `DataSourceID` 속성 및 `DataBind` 메서드는 데이터 바인딩된 컨트롤, 대부분의 ASP.NET 데이터 바인딩된 컨트롤 확장 추상 <xref:System.Web.UI.WebControls.BaseDataBoundControl> 및 <xref:System.Web.UI.WebControls.DataBoundControl> 클래스입니다. 예외적인 <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.Repeater>, 및 <xref:System.Web.UI.WebControls.DropDownList> 컨트롤입니다. 데이터 바인딩에 대 한 자세한 내용은 참조 하세요. [ASP.NET 데이터 액세스 콘텐츠 맵](https://msdn.microsoft.com/library/f9219396-a0fa-481f-894d-e3d9c67d64f2)합니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DataBoundControl" />
    <altmember cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" />
    <altmember cref="T:System.Web.UI.WebControls.CompositeDataBoundControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseDataBoundControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataBoundControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseDataBoundControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때문에 합니다 <xref:System.Web.UI.WebControls.BaseDataBoundControl> 클래스는 추상 클래스를 만들 수 없습니다는 <xref:System.Web.UI.WebControls.BaseDataBoundControl> 직접 개체입니다. 이 생성자에 정의 된 속성을 초기화 하는 파생된 클래스의 생성자에 의해 라고는 <xref:System.Web.UI.WebControls.BaseDataBoundControl> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CompositeDataBoundControl" />
        <altmember cref="T:System.Web.UI.WebControls.DataBoundControl" />
        <altmember cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" />
        <altmember cref="T:System.Web.UI.WebControls.ListControl" />
      </Docs>
    </Member>
    <Member MemberName="ConfirmInitState">
      <MemberSignature Language="C#" Value="protected void ConfirmInitState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ConfirmInitState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataBoundControl.ConfirmInitState" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ConfirmInitState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ConfirmInitState();" />
      <MemberSignature Language="F#" Value="member this.ConfirmInitState : unit -&gt; unit" Usage="baseDataBoundControl.ConfirmInitState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>데이터 바인딩된 컨트롤의 초기화 상태를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataBoundControl.ConfirmInitState%2A> 메서드는 데이터 바인딩된 컨트롤의 초기화 상태를 설정 합니다. 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.DataBoundControl> 클래스의 해당 <xref:System.Web.UI.WebControls.DataBoundControl.OnLoad%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.Initialized" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="baseDataBoundControl.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>호출된 서버 컨트롤과 모든 해당 자식 컨트롤에 데이터 원본을 바인딩합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.BaseDataBoundControl> 재정의 클래스를 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 데이터 바인딩된 컨트롤에 바인딩하고 적절 한 컨트롤 트리를 빌드합니다 데이터 원본을 식별 하는 방법입니다. 데이터 원본, 확인 하는 경우, 데이터 원본으로 식별 된 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> 속성이 우선 합니다. 하는 경우 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> 을 설정 하지 않으면 식별 되는 개체는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 속성을 사용 합니다.  
  
 합니다 `DataBind` 에서 파생 되는 모든 ASP.NET 데이터 바인딩된 컨트롤에서 메서드는 sealed <xref:System.Web.UI.WebControls.BaseDataBoundControl>합니다. 데이터 바인딩된 컨트롤에서 파생 된를 <xref:System.Web.UI.WebControls.DataBoundControl> 및 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> 클래스에서 재정의 해야 합니다 `PerformDataBinding` 메서드 대신는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 데이터를 바인딩할 메서드. 경우 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 를 재정의 합니다 <xref:System.Web.UI.Control.OnDataBinding%2A> 및 <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound%2A> 순서가 이벤트가 발생 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding(System.Collections.IEnumerable)" />
        <altmember cref="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="DataBound">
      <MemberSignature Language="C#" Value="public event EventHandler DataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.BaseDataBoundControl.DataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataBound As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataBound;" />
      <MemberSignature Language="F#" Value="member this.DataBound : EventHandler " Usage="member this.DataBound : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서버 컨트롤이 데이터 소스에 바인딩된 후에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트에 대 한 기록 데이터 바인딩 논리가 완료 된 서버 컨트롤을 알립니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Control.DataBinding" />
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public virtual object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj with get, set" Usage="System.Web.UI.WebControls.BaseDataBoundControl.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩된 컨트롤에서 데이터 항목의 목록을 검색할 소스 개체를 가져오거나 설정합니다.</summary>
        <value>데이터 바인딩된 컨트롤에서 데이터를 검색할 데이터 소스를 나타내는 개체입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정한 경우는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 속성인은 <xref:System.Web.UI.WebControls.BaseDataBoundControl.ValidateDataSource%2A> 메서드가 호출 됩니다. 또한 데이터 바인딩된 컨트롤을 이미 초기화 된 경우에 <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnDataPropertyChanged%2A> 메서드를 호출을 설정 하는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding%2A> 속성을 `true`입니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 <xref:System.Web.UI.ThemeableAttribute> 하 고 [ASP.NET 테마 및 스킨](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 방법을 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 데이터 바인딩된 컨트롤의 속성을 사용 합니다. 이 예제는 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 바인딩되는 <xref:System.Data.DataSet> 개체입니다. 후 합니다 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 속성을 설정 합니다 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 메서드는 명시적으로 호출 합니다.  
  
 [!code-aspx-csharp[GridViewDataBind#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewDataBind/CS/gridviewdatabindcs.aspx#1)]
 [!code-aspx-vb[GridViewDataBind#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewDataBind/VB/gridviewdatabindvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceID">
      <MemberSignature Language="C#" Value="public virtual string DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataSourceID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceID : string with get, set" Usage="System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩된 컨트롤이 데이터 항목 목록을 검색하는 컨트롤의 ID를 가져오거나 설정합니다.</summary>
        <value>데이터 바인딩된 컨트롤이 해당 데이터를 검색하는 데이터 원본을 나타내는 컨트롤의 ID입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 바인딩된 컨트롤이 이미 초기화 된 경우 (합니다 <xref:System.Web.UI.WebControls.BaseDataBoundControl.ConfirmInitState%2A> 메서드는 또는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnPagePreLoad%2A> 이벤트를 처리) 설정 하는 경우를 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> 속성을를 <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnDataPropertyChanged%2A> 메서드가 호출 되는 집합은 <xref:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding%2A> 속성을 `true`.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 <xref:System.Web.UI.ThemeableAttribute> 하 고 [ASP.NET 테마 및 스킨](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 방법을 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> 데이터 바인딩된 컨트롤의 속성을 사용 합니다. <xref:System.Web.UI.WebControls.GridView> 컨트롤에 연결 된를 <xref:System.Web.UI.WebControls.SqlDataSource> 설정 하 여 해당 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> 속성을 "AuthorsSqlDataSource,"의 ID <xref:System.Web.UI.WebControls.SqlDataSource> 컨트롤. 경우는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> 속성이 설정 되어 (대신는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> 속성), 데이터 바인딩된 컨트롤을 자동으로 데이터 소스 컨트롤을 런타임에 바인딩합니다.  
  
 [!code-aspx-csharp[GridViewSimple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSimple/CS/displaycustomers.aspx#1)]
 [!code-aspx-vb[GridViewSimple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSimple/VB/displaycustomers.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected virtual void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataBoundControl.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EnsureDataBound();" />
      <MemberSignature Language="F#" Value="abstract member EnsureDataBound : unit -&gt; unit&#xA;override this.EnsureDataBound : unit -&gt; unit" Usage="baseDataBoundControl.EnsureDataBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> 속성이 설정되어 있고 데이터 바인딩된 컨트롤이 바인딩이 필요한 것으로 표시된 경우 <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID" /> 메서드를 호출합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataBoundControl.EnsureDataBound%2A> 메서드는 합니다 <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender%2A> 메서드를 호출 하는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 데이터 바인딩된 컨트롤을 아직 바인딩되지 않았으면 메서드.  
  
 동일 동작 패턴을 합니다 <xref:System.Web.UI.WebControls.BaseDataList> (같은 클래스에서 <xref:System.Web.UI.WebControls.DataGrid> 파생 된) 및 <xref:System.Web.UI.WebControls.Repeater> 다음 클래스입니다. 합니다 `EnsureDataBound` 메서드를 호출 하는 동안 호출할 수도 있습니다 `CreateChildControls` 고 `LoadPostData` 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.EnsureDataBound" />
      </Docs>
    </Member>
    <Member MemberName="Initialized">
      <MemberSignature Language="C#" Value="protected bool Initialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Initialized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataBoundControl.Initialized" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Initialized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Initialized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Initialized : bool" Usage="System.Web.UI.WebControls.BaseDataBoundControl.Initialized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩된 컨트롤이 초기화되었는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>데이터 바인딩된 컨트롤이 초기화되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.BaseDataBoundControl.ConfirmInitState%2A> 및 <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnPagePreLoad%2A> 메서드는 모두 명시적으로 설정 합니다 <xref:System.Web.UI.WebControls.BaseDataBoundControl.Initialized%2A> 속성을 `true`입니다. <xref:System.Web.UI.WebControls.BaseDataBoundControl.ConfirmInitState%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.DataBoundControl.OnLoad%2A?displayProperty=nameWithType> 메서드를 하는 동안 <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnPagePreLoad%2A> 될 때 호출 됩니다는 <xref:System.Web.UI.Page.PreLoad> 이벤트가 발생 합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 데이터 바인딩된 컨트롤을 파생된 클래스에 속하는 속성을 보여 줍니다. 데이터 바인딩된 컨트롤을 호출 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnDataPropertyChanged%2A> 데이터 바인딩된 컨트롤이 초기화 된 후 데이터 원본을 식별 하는 속성이 변경 될 경우 메서드. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.DataBoundControl> 클래스입니다.  
  
 [!code-csharp[Samples.AspNet.TextBoxSet#7](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.TextBoxSet/CS/textboxset.cs#7)]
 [!code-vb[Samples.AspNet.TextBoxSet#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.TextBoxSet/VB/textboxset.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.ConfirmInitState" />
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.OnPagePreLoad(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="IsBoundUsingDataSourceID">
      <MemberSignature Language="C#" Value="protected bool IsBoundUsingDataSourceID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBoundUsingDataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataBoundControl.IsBoundUsingDataSourceID" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsBoundUsingDataSourceID As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsBoundUsingDataSourceID { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBoundUsingDataSourceID : bool" Usage="System.Web.UI.WebControls.BaseDataBoundControl.IsBoundUsingDataSourceID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID" /> 속성이 설정되었는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>값 <see langword="true" /> 경우 반환 되는 <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID" /> 속성이 아닌 다른 값으로 설정 됩니다 <see cref="F:System.String.Empty" />이 고, 그렇지 않으면 값은 <see langword="false" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 와 같은 컨트롤 <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>를 <xref:System.Web.UI.WebControls.FormView>, 및 <xref:System.Web.UI.WebControls.Menu> 사용 합니다 <xref:System.Web.UI.WebControls.BaseDataBoundControl.IsBoundUsingDataSourceID%2A> 속성 데이터 바인딩된 컨트롤을 ASP.NET 2.0 데이터 소스 컨트롤에 같은 바인딩 되었는지 여부를 확인 하는 <xref:System.Web.UI.WebControls.ObjectDataSource> 또는 <xref:System.Web.UI.WebControls.SqlDataSource> .  
  
   
  
## Examples  
 다음 코드 예제에서는 방법을 <xref:System.Web.UI.WebControls.BaseDataBoundControl.IsBoundUsingDataSourceID%2A> 속성은 데이터 바인딩된 컨트롤을 파생된 클래스에서 사용 됩니다. <xref:System.Web.UI.WebControls.BaseDataBoundControl.IsBoundUsingDataSourceID%2A> 속성은 사용 합니다 <xref:System.Web.UI.WebControls.BaseDataBoundControl.PerformSelect%2A> 메서드 구현이 결정 여부를 <xref:System.Web.UI.Control.DataBinding> 이벤트를 발생 시켜야 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.DataBoundControl> 클래스입니다.  
  
 [!code-csharp[Samples.AspNet.TextBoxSet#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.TextBoxSet/CS/textboxset.cs#3)]
 [!code-vb[Samples.AspNet.TextBoxSet#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.TextBoxSet/VB/textboxset.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
      </Docs>
    </Member>
    <Member MemberName="IsDataBindingAutomatic">
      <MemberSignature Language="C#" Value="protected internal bool IsDataBindingAutomatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDataBindingAutomatic" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataBoundControl.IsDataBindingAutomatic" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property IsDataBindingAutomatic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool IsDataBindingAutomatic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDataBindingAutomatic : bool" Usage="System.Web.UI.WebControls.BaseDataBoundControl.IsDataBindingAutomatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩이 자동인지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>데이터 바인딩이 자동이면 <see langword="true" />이고, 자동이 아니면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 바인딩 컨트롤에서 사용 하는 경우 자동입니다 합니다 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> 속성 또는 컨트롤에서 사용 하는 경우 `SelectMethod`를 `UpdateMethod`, `DeleteMethod`, 또는 `InsertMethod` 데이터 바인딩에 대 한 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUsingModelBinders">
      <MemberSignature Language="C#" Value="protected virtual bool IsUsingModelBinders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUsingModelBinders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataBoundControl.IsUsingModelBinders" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsUsingModelBinders As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsUsingModelBinders { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUsingModelBinders : bool" Usage="System.Web.UI.WebControls.BaseDataBoundControl.IsUsingModelBinders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>파생 클래스에서 구현된 경우 컨트롤이 모델 바인더를 사용 중인지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>컨트롤에서 모델 바인더를 사용 중이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnDataBound (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataBound(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataBound (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataBound(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataBound : EventArgs -&gt; unit&#xA;override this.OnDataBound : EventArgs -&gt; unit" Usage="baseDataBoundControl.OnDataBound e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" /> 개체입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.BaseDataBoundControl.DataBound" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 컨트롤과 연결 된 모든 데이터 바인딩 논리가 완료 하는 서버 컨트롤을 알립니다.  
  
> [!IMPORTANT]
>  합니다 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 에서 파생 된 모든 컨트롤에 메서드가 봉인 되었습니다. <xref:System.Web.UI.WebControls.BaseDataBoundControl>합니다. 데이터 바인딩된 컨트롤 재정의 해야 `PerformDataBinding` 대신는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 데이터 바인딩 방법입니다. 경우 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 를 재정의 합니다 <xref:System.Web.UI.Control.OnDataBinding%2A> 및 <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound%2A> 순서가 이벤트가 발생 합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 하는 방법을 <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound%2A> 메서드는 발생 시키는 데는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound> 데이터 바인딩된 컨트롤을 파생된 클래스에서 이벤트입니다. 사용한 후는 <xref:System.Web.UI.WebControls.DataBoundControl.GetData%2A> 및 <xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A> 컨트롤을 데이터 바인딩된 컨트롤에 데이터를 바인딩할 메서드를 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound> 완료 되는 데이터 바인딩 신호를 보내는 이벤트. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.DataBoundControl> 클래스입니다.  
  
 [!code-csharp[Samples.AspNet.TextBoxSet#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.TextBoxSet/CS/textboxset.cs#3)]
 [!code-vb[Samples.AspNet.TextBoxSet#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.TextBoxSet/VB/textboxset.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스 <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para></block>
        <altmember cref="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDataPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataPropertyChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataPropertyChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataBoundControl.OnDataPropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataPropertyChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataPropertyChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnDataPropertyChanged : unit -&gt; unit&#xA;override this.OnDataPropertyChanged : unit -&gt; unit" Usage="baseDataBoundControl.OnDataPropertyChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>기본 데이터 소스 식별 속성 중 하나가 변경된 후 데이터 바인딩된 컨트롤을 해당 데이터에 다시 바인딩합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnDataPropertyChanged%2A> 메서드를 호출한 경우 합니다 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>를 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A>, 또는 `DataMember` 속성 값이 페이지의 후 언제 든 지 변경 <xref:System.Web.UI.Control.PreRender> 이벤트가 발생 합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 데이터 바인딩된 컨트롤을 파생된 클래스에 속하는 속성을 보여 줍니다. 데이터 바인딩된 컨트롤을 호출 하는 방법을 보여 줍니다는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnDataPropertyChanged%2A> 데이터 바인딩된 컨트롤이 초기화 된 후 데이터 원본을 식별 하는 속성이 변경 될 경우 메서드. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.DataBoundControl> 클래스입니다.  
  
 [!code-csharp[Samples.AspNet.TextBoxSet#7](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.TextBoxSet/CS/textboxset.cs#7)]
 [!code-vb[Samples.AspNet.TextBoxSet#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.TextBoxSet/VB/textboxset.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">컨트롤의 데이터 바인딩 단계에서 속성을 변경하려고 한 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.Initialized" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataBoundControl.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="baseDataBoundControl.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" /> 개체입니다.</param>
        <summary><see cref="E:System.Web.UI.Control.Init" /> 이벤트를 처리합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnInit%2A> 기본 클래스를 먼저 호출 하는 메서드 <xref:System.Web.UI.Control.OnInit%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnPagePreLoad%2A> 처리 하는 메서드는 <xref:System.Web.UI.Page.PreLoad?displayProperty=nameWithType> 이벤트. 또한 HTTP를 요청 하는 경우 페이지 다시 게시 되 고 뷰 상태를 사용 합니다 <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnInit%2A> 메서드 집합을 <xref:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding%2A> 속성을 `true`입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.OnPagePreLoad(System.Object,System.EventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="OnPagePreLoad">
      <MemberSignature Language="C#" Value="protected virtual void OnPagePreLoad (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPagePreLoad(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataBoundControl.OnPagePreLoad(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPagePreLoad (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPagePreLoad(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPagePreLoad : obj * EventArgs -&gt; unit&#xA;override this.OnPagePreLoad : obj * EventArgs -&gt; unit" Usage="baseDataBoundControl.OnPagePreLoad (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">이벤트를 발생시킨 <see cref="T:System.Web.UI.Page" />입니다.</param>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" /> 개체입니다.</param>
        <summary>컨트롤이 로드되기 전에 데이터 바인딩된 컨트롤의 초기화된 상태를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnPagePreLoad%2A> 페이지의 수명 주기 내에서 데이터 바인딩이 발생 하는 경우를 제어 하려면 이벤트 처리기를 사용 합니다. 데이터 바인딩된 컨트롤의 내부 초기화 상태를 설정 하 여 수행 합니다. 컨트롤의 상태를 초기화 하는 동안 설정 됩니다는 <xref:System.Web.UI.Page.PreLoad> 페이지의 수명 주기 단계는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnDataPropertyChanged%2A> 이벤트 처리기가 컨트롤을 해당 데이터에 다시 바인딩해야 신호 단계 후 컨트롤의 데이터 속성이 변경 될 때마다 호출 전에 렌더링 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.Initialized" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="baseDataBoundControl.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" /> 개체입니다.</param>
        <summary><see cref="E:System.Web.UI.Control.PreRender" /> 이벤트를 처리합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.BaseDataBoundControl> 재정의 클래스를 <xref:System.Web.UI.Control.OnPreRender%2A?displayProperty=nameWithType> 호출 하도록 이벤트 처리기 <xref:System.Web.UI.WebControls.BaseDataBoundControl.EnsureDataBound%2A> 기본 클래스를 호출 하기 전에 <xref:System.Web.UI.Control.OnPreRender%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PerformSelect">
      <MemberSignature Language="C#" Value="protected abstract void PerformSelect ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PerformSelect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataBoundControl.PerformSelect" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub PerformSelect ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void PerformSelect();" />
      <MemberSignature Language="F#" Value="abstract member PerformSelect : unit -&gt; unit" Usage="baseDataBoundControl.PerformSelect " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>파생 클래스에서 재정의된 경우 데이터의 검색 방법과 컨트롤에 바인딩되는 방법을 제어합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생된 형식은 데이터 원본에서 데이터를 검색 하려면이 메서드를 재정의 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.PerformSelect" />
        <altmember cref="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformSelect" />
      </Docs>
    </Member>
    <Member MemberName="RequiresDataBinding">
      <MemberSignature Language="C#" Value="protected bool RequiresDataBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresDataBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Property RequiresDataBinding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool RequiresDataBinding { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequiresDataBinding : bool with get, set" Usage="System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> 메서드를 호출해야 할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>반환된 된 값이 <see langword="true" /> 하는 경우 데이터 바인딩된 컨트롤의 <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> 컨트롤이 렌더링 되기 전에 메서드를 호출 해야 고, 그렇지 않으면 값 <see langword="false" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정 하는 경우는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding%2A> 속성을 `true` 페이지에 해당 출력을 렌더링 하는 데이터 바인딩된 컨트롤 이미 시작 된 현재 HTTP 요청을 사용 하는 콜백을 아니며 사용 하는 경우는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> 데이터 소스 컨트롤을 식별 하는 속성 바인딩할는 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 메서드가 즉시 호출 됩니다. 이 경우에 <xref:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding%2A> 속성으로 실제로 설정 되지 않은 `true`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 방법을 <xref:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding%2A> 속성은 데이터 바인딩된 컨트롤을 파생된 클래스에서 사용 됩니다. 하 여 데이터를 검색 한 후는 <xref:System.Web.UI.WebControls.DataBoundControl.GetData%2A> 메서드 및 컨트롤에 바인딩된 합니다 <xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A> 메서드를를 <xref:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding%2A> 속성이로 설정 되어 `false` 및 <xref:System.Web.UI.WebControls.DataBoundControl.MarkAsDataBound%2A> 방법은 컨트롤 바인딩을 완료를 알리기 위해 호출 하 고 더 이상 현재 페이지의 수명 주기 동안이 속성이 필요 합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.UI.WebControls.DataBoundControl> 클래스입니다.  
  
 [!code-csharp[Samples.AspNet.TextBoxSet#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.TextBoxSet/CS/textboxset.cs#3)]
 [!code-vb[Samples.AspNet.TextBoxSet#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.TextBoxSet/VB/textboxset.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="SupportsDisabledAttribute">
      <MemberSignature Language="C#" Value="public override bool SupportsDisabledAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDisabledAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataBoundControl.SupportsDisabledAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SupportsDisabledAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDisabledAttribute { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDisabledAttribute : bool" Usage="System.Web.UI.WebControls.BaseDataBoundControl.SupportsDisabledAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" /> 속성이 <see langword="false" />인 경우 컨트롤이 렌더링된 HTML 요소의 <see langword="disabled" /> 특성을 "disabled"로 설정할지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see langword="true" /> 경우는 <see cref="P:System.Web.UI.Control.RenderingCompatibility" /> 속성 보다 낮은 ASP.NET 버전을 나타내면 <c>4.0</c>이 고, 그렇지 않으면 <see langword="false" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성 방법을 ASP.NET 렌더링할지 나타냅니다 HTML 컨트롤에 대 한 컨트롤은 사용 하지 않도록 설정 합니다. 이 속성이 `true`, ASP.NET 렌더링을 `disabled` 컨트롤을 사용 하지 않으면. 이 속성이 `false`, ASP.NET 렌더링을 `class` 컨트롤을 사용 하지 않으면. 자세한 내용은 <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A?displayProperty=nameWithType>을 참조하세요.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
      </Docs>
    </Member>
    <Member MemberName="ValidateDataSource">
      <MemberSignature Language="C#" Value="protected abstract void ValidateDataSource (object dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateDataSource(object dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataBoundControl.ValidateDataSource(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub ValidateDataSource (dataSource As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void ValidateDataSource(System::Object ^ dataSource);" />
      <MemberSignature Language="F#" Value="abstract member ValidateDataSource : obj -&gt; unit" Usage="baseDataBoundControl.ValidateDataSource dataSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataSource">확인할 개체입니다. 일반적으로 <see cref="T:System.Collections.IEnumerable" />, <see cref="T:System.ComponentModel.IListSource" />, <see cref="T:System.Web.UI.IDataSource" /> 또는 <see cref="T:System.Web.UI.IHierarchicalDataSource" />의 인스턴스입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 데이터 바인딩된 컨트롤이 바인딩된 개체가 작업할 수 있는 개체인지 확인합니다.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.ValidateDataSource(System.Object)" /> 메서드는만 호출 합니다 <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> 클래스의 변경자 (mutator) (setter)에 대 한는 <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" /> 속성입니다. 파생된 클래스에 대해 설정 된 개체의 유형을 확인 하려면 메서드를 구현 합니다 <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" /> 속성 형식을 사용 하 여 데이터 바인딩된 컨트롤을 사용할 수 있습니다 수 있도록 합니다. 파생된 형식 구현 형식이 인식 되지 않으면 예외가 발생 합니다.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>