<Type Name="BaseDataList" FullName="System.Web.UI.WebControls.BaseDataList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a6c4049d04741a0bac8b0330a569f913ecb89380" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57944742" /></Metadata><TypeSignature Language="C#" Value="public abstract class BaseDataList : System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BaseDataList extends System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BaseDataList" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseDataList&#xA;Inherits WebControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseDataList abstract : System::Web::UI::WebControls::WebControl" />
  <TypeSignature Language="F#" Value="type BaseDataList = class&#xA;    inherit WebControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedIndexChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("DataSource")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.BaseDataListDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.BaseDataListDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.BaseDataListDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 및 <see cref="T:System.Web.UI.WebControls.DataGrid" />와 같은 데이터 목록 컨트롤에 대한 추상 기본 클래스로 사용됩니다. 이 클래스는 모든 데이터 목록 컨트롤에 공통적인 메서드 및 속성을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.BaseDataList> 와 같은 컨트롤을 나열 하는 모든 데이터에 대 한 공통 기능을 제공 하는 클래스 <xref:System.Web.UI.WebControls.DataList> 및 <xref:System.Web.UI.WebControls.DataGrid>합니다. 데이터 목록 컨트롤 등의 데이터 원본에서 레코드를 표시 되는 <xref:System.Data.DataView?displayProperty=nameWithType> 제어 합니다. 각 데이터 목록 컨트롤에는 고유한 표시 스타일 및 기능 있을 수 있습니다. 때문에 <xref:System.Web.UI.WebControls.BaseDataList> 클래스는 추상 클래스,이 클래스의 인스턴스로 직접 만들지 는지 않습니다. 대신 데이터 목록 컨트롤에는 메서드 및 모든 데이터 목록 컨트롤에서이 클래스에 공통적인 속성을 상속 합니다.  
  
 이 클래스의 특정 속성을 설정 하 여 목록 컨트롤을 데이터의 모양을 제어할 수 있습니다. 데이터 목록 컨트롤의 셀 사이의 간격을 확인 하려면 설정의 <xref:System.Web.UI.WebControls.BaseDataList.CellSpacing%2A> 속성입니다. 셀 내용과 셀 테두리 사이의 간격 크기를 확인 하려면 설정의 <xref:System.Web.UI.WebControls.BaseDataList.CellPadding%2A> 속성입니다. 목록 컨트롤을 설정 하 여 데이터의 개별 셀 사이 테두리를 표시할 수 있습니다는 <xref:System.Web.UI.WebControls.BaseDataList.GridLines%2A> 속성입니다. 데이터 목록 컨트롤의 셀에 있는 콘텐츠의 가로 맞춤에 의해 제어 되는 <xref:System.Web.UI.WebControls.BaseDataList.HorizontalAlign%2A> 속성입니다.  
  
 <xref:System.Web.UI.WebControls.BaseDataList> 클래스에는 데이터 바인딩을 지원 하기 위해 두 개 속성도 제공 합니다. 구현 하는 컬렉션에 데이터를 바인딩할 합니다 <xref:System.Collections.IEnumerable?displayProperty=nameWithType> 인터페이스 (같은 <xref:System.Data.DataView?displayProperty=nameWithType> 또는 <xref:System.Collections.ArrayList?displayProperty=nameWithType>), 또는 <xref:System.ComponentModel.IListSource> 인터페이스를 사용 하 여는 <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> 데이터 원본을 지정 하는 속성입니다. 설정한 경우는 <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> 속성인 하면 데이터 바인딩을 수행 하려면 코드를 직접 작성 해야 합니다. 데이터 목록 컨트롤을 나타내는 데이터 소스 컨트롤에서 데이터 소스를 자동으로 바인딩하려면 다음을 사용 합니다 <xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A> 속성 해당 값을 설정 하 고를 <xref:System.Web.UI.Control.ID%2A> 사용 하 여 데이터 소스 컨트롤의 속성입니다. 설정 하는 경우는 <xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A> 속성인 데이터 목록 컨트롤을 자동으로 지정 된 데이터 소스 컨트롤에 바인딩합니다. 따라서 명시적으로 호출할 필요가 없습니다를 <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> 메서드.  
  
 데이터 원본으로 지정 하는 경우는 <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> 여러 원본의 데이터를 포함 하는 속성을 사용 합니다 <xref:System.Web.UI.WebControls.BaseDataList.DataMember%2A> 컨트롤에 바인딩할 특정 소스를 지정 하는 속성입니다. 예를 들어 있는 경우는 <xref:System.Data.DataSet?displayProperty=nameWithType> 여러 테이블을 사용 하 여 개체에 컨트롤을 바인딩할 테이블을 지정 해야 합니다. 데이터 소스를 지정한 후 사용 하 여는 <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> 컨트롤에 데이터 소스를 바인딩할 메서드.  
  
 <xref:System.Web.UI.WebControls.BaseDataList> 클래스를 포함 한 <xref:System.Web.UI.WebControls.BaseDataList.DataKeys%2A> 데이터 목록 컨트롤에서에서 각 레코드 (행으로 표시 됨)의 키 필드를 저장 하는 컬렉션입니다. 이 옵션을 사용 하면 데이터 목록 컨트롤에서 표시 하지 않고 컨트롤을 사용 하 여 키 필드를 저장할 수 있습니다. 키 필드 데이터 소스의 특정 레코드를 수정 하기 위한 업데이트 쿼리 문자열의 일부로 일반적으로 사용 됩니다. 컬렉션에서 지정 된 필드의 값으로 채워지는 <xref:System.Web.UI.WebControls.BaseDataList.DataKeyField%2A> 속성입니다.  
  
 <xref:System.Web.UI.WebControls.BaseDataList> 클래스를 제공 된 <xref:System.Web.UI.WebControls.BaseDataList.SelectedIndexChanged> 컨트롤에서 선택한 항목이 변경 될 때 발생 하는 이벤트입니다. 이 이벤트가 발생 하면 구체적인 지침을 수행 하는 사용자 지정 이벤트 처리기를 만들 수 있습니다.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.BaseDataList" />에서 상속하는 경우 <see cref="M:System.Web.UI.WebControls.BaseDataList.CreateControlHierarchy(System.Boolean)" /> 및 <see cref="M:System.Web.UI.WebControls.BaseDataList.PrepareControlHierarchy" /> 멤버를 재정의해야 합니다.</para></block>
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.DataList" />
    <altmember cref="P:System.Web.UI.WebControls.BaseDataList.CellSpacing" />
    <altmember cref="P:System.Web.UI.WebControls.BaseDataList.CellPadding" />
    <altmember cref="P:System.Web.UI.WebControls.BaseDataList.GridLines" />
    <altmember cref="P:System.Web.UI.WebControls.BaseDataList.HorizontalAlign" />
    <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" />
    <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataMember" />
    <altmember cref="M:System.Web.UI.WebControls.BaseDataList.DataBind" />
    <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataKeys" />
    <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" />
    <altmember cref="E:System.Web.UI.WebControls.BaseDataList.SelectedIndexChanged" />
    <altmember cref="T:System.Collections.IEnumerable" />
    <altmember cref="T:System.Data.DataView" />
    <altmember cref="T:System.Collections.ArrayList" />
    <altmember cref="T:System.Data.DataSet" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseDataList ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseDataList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.BaseDataList" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataList> 개체 직접 만들지 는지 않습니다. 이 생성자에 정의 된 속성을 초기화 하는 파생된 클래스의 생성자에서 라고는 <xref:System.Web.UI.WebControls.BaseDataList> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.#ctor" />
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddParsedSubObject(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.AddParsedSubObject : obj -&gt; unit" Usage="baseDataList.AddParsedSubObject obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">구문 분석한 요소를 나타내는 <see cref="T:System.Object" />입니다.</param>
        <summary>XML 또는 HTML 요소가 구문 분석되었음을 서버 컨트롤에 알리고 해당 요소를 서버 컨트롤의 <see cref="T:System.Web.UI.ControlCollection" /> 컬렉션에 추가합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public virtual string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string with get, set" Usage="System.Web.UI.WebControls.BaseDataList.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 컨트롤의 HTML 캡션 요소에 렌더링할 텍스트를 가져오거나 설정합니다. 이 속성을 사용하면 보조 기술 디바이스 사용자가 컨트롤에 더 쉽게 액세스할 수 있습니다.</summary>
        <value>이 컨트롤의 HTML 캡션 요소에 렌더링할 텍스트를 나타내는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.BaseDataList.Caption%2A> 속성을 컨트롤의 HTML 캡션 요소에서 렌더링할 텍스트를 지정 합니다. 지정 하는 텍스트 컨트롤에 대 한 설명 사용 하 여 보조 기술 장치를 제공 합니다.  
  
 컨트롤의 HTML 캡션 요소의 맞춤을 지정 하려면 사용 된 <xref:System.Web.UI.WebControls.BaseDataList.CaptionAlign%2A> 속성입니다.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.CaptionAlign" />
      </Docs>
    </Member>
    <Member MemberName="CaptionAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TableCaptionAlign CaptionAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.CaptionAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CaptionAlign As TableCaptionAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableCaptionAlign CaptionAlign { System::Web::UI::WebControls::TableCaptionAlign get(); void set(System::Web::UI::WebControls::TableCaptionAlign value); };" />
      <MemberSignature Language="F#" Value="member this.CaptionAlign : System.Web.UI.WebControls.TableCaptionAlign with get, set" Usage="System.Web.UI.WebControls.BaseDataList.CaptionAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCaptionAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤에 있는 HTML 캡션 요소의 가로 또는 세로 위치를 가져오거나 설정합니다. 이 속성을 사용하면 보조 기술 디바이스 사용자가 컨트롤에 더 쉽게 액세스할 수 있습니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> 열거형 값 중 하나입니다. 기본값은 <see langword="NotSet" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.BaseDataList.CaptionAlign%2A> 컨트롤의 HTML 캡션 요소의 가로 또는 세로 위치를 지정 하는 속성입니다. 이 속성을 사용하면 보조 기술 디바이스 사용자가 컨트롤에 더 쉽게 액세스할 수 있습니다.  
  
 이 속성은 <xref:System.Web.UI.WebControls.TableCaptionAlign> 열거형의 값 중 하나로 설정됩니다. 다음 표에서 가능한 값을 나열합니다.  
  
|값|설명|  
|-----------|-----------------|  
|`NotSet`|캡션 요소의 맞춤 설정 되지 않았습니다.|  
|`Top`|캡션 요소가 테이블의 위쪽에 맞춰집니다.|  
|`Bottom`|캡션 요소가 테이블의 아래쪽에 맞춰집니다.|  
|`Left`|캡션 요소가 테이블의 왼쪽된 가장자리에 맞춥니다.|  
|`Right`|캡션 요소가 테이블의 오른쪽 가장자리에 맞춥니다.|  
  
 사용 된 <xref:System.Web.UI.WebControls.BaseDataList.Caption%2A> 속성을 컨트롤의 HTML 캡션 요소에서 렌더링할 텍스트를 지정 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정한 형식이 <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> 열거형 값 중 하나가 아닌 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.TableCaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.Caption" />
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.CellPadding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellPadding { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellPadding : int with get, set" Usage="System.Web.UI.WebControls.BaseDataList.CellPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀 내용과 셀 테두리 사이의 여백 크기를 가져오거나 설정합니다.</summary>
        <value>셀 내용과 셀 테두리 사이의 여백 크기(픽셀)입니다. 기본값은 -1로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.BaseDataList.CellPadding%2A> 셀 내용과 셀 테두리 사이의 간격을 제어 하는 속성입니다. 지정 된 안쪽 여백 크기를 셀의 네 변 모두에 추가 됩니다.  
  
 모든 셀 데이터 목록 컨트롤의 동일한 열에 동일한 셀 너비를 공유 합니다. 따라서 하나의 셀의 내용을 동일한 열에 다른 셀의 내용 보다 더 긴 경우 여백은 광범위 한 셀에 적용 됩니다. 열에 다른 모든 셀이 셀 너비에도 설정 됩니다.  
  
 마찬가지로, 동일한 행의 모든 셀 높이가 같습니다. 여백은 행에서 가장 높은 셀의 높이에 적용 됩니다. 행의 다른 모든 셀이 셀 높이 설정 됩니다. 개별 셀 크기를 지정할 수 없습니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.BaseDataList.CellPadding%2A> 속성을 셀 내용과 셀 테두리 사이의 간격을 지정 합니다.  
  
 [!code-aspx-csharp[BaseDataListCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseDataListCellPadding/CS/basedatalistcellpaddingcs.aspx#1)]
 [!code-aspx-vb[BaseDataListCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseDataListCellPadding/VB/basedatalistcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.CellSpacing" />
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.CellSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellSpacing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellSpacing { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellSpacing : int with get, set" Usage="System.Web.UI.WebControls.BaseDataList.CellSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>셀 사이의 여백 크기를 가져오거나 설정합니다.</summary>
        <value>셀 사이의 여백 크기(픽셀)입니다. 기본값은 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.BaseDataList.CellSpacing%2A> 데이터 목록 컨트롤에 있는 인접 한 셀 사이의 간격을 제어 하는 속성입니다. 이 간격이 세로 및 가로로 적용 됩니다. 셀 간격 전체 데이터 목록 컨트롤에 대 한 균일 한 경우 각 행 이나 열에 개별 셀 간격을 지정할 수 없습니다.  
  
> [!NOTE]
>  설정한 경우이 속성 값 보다 큰 `0` 설정의 <xref:System.Web.UI.WebControls.BaseDataList.GridLines%2A> 속성 셀 테두리를 표시 하는 값으로 인접 한 셀의 테두리 간 간격이 생깁니다. 이 이런 경우에 <xref:System.Web.UI.WebControls.BaseDataList.CellSpacing%2A> 속성 간격의 크기를 제어 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.BaseDataList.CellSpacing%2A> 인접 한 셀 사이의 간격을 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[BaseDataListCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseDataListCellPadding/CS/basedatalistcellpaddingcs.aspx#1)]
 [!code-aspx-vb[BaseDataListCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseDataListCellPadding/VB/basedatalistcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.CellPadding" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.BaseDataList.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 목록 컨트롤에서 자식 컨트롤의 컬렉션을 포함하는 <see cref="T:System.Web.UI.ControlCollection" /> 개체를 가져옵니다.</summary>
        <value>데이터 목록 컨트롤에서 자식 컨트롤의 컬렉션을 포함하는 <see cref="T:System.Web.UI.ControlCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> 데이터 목록 컨트롤에에서 포함 된 자식 컨트롤을 관리 하는 컬렉션입니다. 컨트롤을 추가 하 고, 컨트롤을 제거 하 하거나, 서버 컨트롤의 컬렉션을 반복할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 프로그래밍 방식으로 컨트롤을 추가 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> 컬렉션입니다.  
  
 [!code-aspx-csharp[BaseDataListControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseDataListControls/CS/basedatalistcontrolscs.aspx#1)]
 [!code-aspx-vb[BaseDataListControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseDataListControls/VB/basedatalistcontrolsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="baseDataList.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>뷰 상태를 사용하여 자식 컨트롤을 만듭니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlHierarchy">
      <MemberSignature Language="C#" Value="protected abstract void CreateControlHierarchy (bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateControlHierarchy(bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.CreateControlHierarchy(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub CreateControlHierarchy (useDataSource As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void CreateControlHierarchy(bool useDataSource);" />
      <MemberSignature Language="F#" Value="abstract member CreateControlHierarchy : bool -&gt; unit" Usage="baseDataList.CreateControlHierarchy useDataSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useDataSource">컨트롤의 데이터 소스를 사용하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>파생된 클래스에 재정의된 경우 지정된 데이터 소스를 사용하거나 사용하지 않고 데이터 목록 컨트롤의 컨트롤 계층 구조를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataList.CreateControlHierarchy%2A> 메서드는 파생된 클래스에서 해당 컨트롤 계층 구조를 만드는 데 도우미 메서드입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>목록 컨트롤에서 파생 되는 데이터를 만들면 <see cref="T:System.Web.UI.WebControls.BaseDataList" />를 재정의 해야 합니다는 <see cref="M:System.Web.UI.WebControls.BaseDataList.CreateControlHierarchy(System.Boolean)" /> 파생된 데이터 목록 컨트롤의 컨트롤 계층 구조를 만드는 방법.</para></block>
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.CreateDataSourceSelectArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDataSourceSelectArguments () As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::DataSourceSelectArguments ^ CreateDataSourceSelectArguments();" />
      <MemberSignature Language="F#" Value="abstract member CreateDataSourceSelectArguments : unit -&gt; System.Web.UI.DataSourceSelectArguments&#xA;override this.CreateDataSourceSelectArguments : unit -&gt; System.Web.UI.DataSourceSelectArguments" Usage="baseDataList.CreateDataSourceSelectArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>인수가 지정되지 않은 경우 데이터 바인딩된 컨트롤에서 사용되는 기본 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 개체를 만듭니다.</summary>
        <returns><see cref="T:System.Web.UI.DataSourceSelectArguments" />로 초기화된 <see cref="P:System.Web.UI.DataSourceSelectArguments.Empty" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataList.CreateDataSourceSelectArguments%2A> 메서드는에서 사용 하는 도우미 메서드입니다 합니다 <xref:System.Web.UI.WebControls.BaseDataList.SelectArguments%2A> 속성을 기본값으로 만듭니다 <xref:System.Web.UI.DataSourceSelectArguments> 개체입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.DataSourceSelectArguments" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.Empty" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.SelectArguments" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="baseDataList.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컨트롤과 해당 자식 컨트롤을 모두 지정된 데이터 소스에 바인딩합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> 메서드에 의해 지정 된 데이터 소스에 바인딩할는 <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> 속성 데이터 목록 컨트롤을 합니다. 데이터 소스의 데이터 목록 컨트롤에 바인딩하여 데이터 소스의 정보를 데이터 목록 컨트롤에에서 표시 됩니다.  
  
 <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> 메서드는 일반적으로 데이터 원본과 데이터 원본에 대 한 정보를 업데이트 한 후에 목록 컨트롤 데이터를 동기화 하는 데 사용 됩니다. 또한 데이터 목록 컨트롤에서에서 업데이트할 데이터 원본에 변경 내용을 허용합니다  
  
 데이터 목록 컨트롤에 대 한 데이터 원본에서 지정 된 경우는 <xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A> 속성인 필요가 없습니다를 호출 하 여 <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> 메서드. ASP.NET 자동으로 지정 된 데이터 소스 컨트롤에 바인딩할 데이터 목록 컨트롤에서이 메서드를 호출 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> 데이터 소스를 바인딩할 메서드를 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
 [!code-aspx-csharp[Classic DataGrid Example 2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid Example 2/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid Example 2/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="DataKeyField">
      <MemberSignature Language="C#" Value="public virtual string DataKeyField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataKeyField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataKeyField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataKeyField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataKeyField : string with get, set" Usage="System.Web.UI.WebControls.BaseDataList.DataKeyField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> 속성에 지정된 데이터 소스의 키 필드를 가져오거나 설정합니다.</summary>
        <value><see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" />에 지정된 데이터 소스의 키 필드 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.BaseDataList.DataKeyField%2A> 데이터 소스의 키 필드를 지정 하는 속성에 나타난는 <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> 속성입니다. 지정된 된 필드는 채우는 데는 <xref:System.Web.UI.WebControls.BaseDataList.DataKeys%2A> 컬렉션입니다. 이 옵션을 사용 하면 데이터 목록 컨트롤에서 표시 하지 않고 컨트롤을 사용 하 여 키 필드를 저장할 수 있습니다. 키 필드는 일반적으로 사용 처리기에서 이벤트와 같은 `ItemCommand` 또는 `DeleteCommand`, 데이터 원본에서 특정 레코드를 수정 하기 위한 업데이트 쿼리 문자열의 일부로. 키 필드를 수정 하려면 적절 한 레코드를 식별 하는 업데이트 쿼리 문자열을 수 있습니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 <xref:System.Web.UI.ThemeableAttribute> 하 고 [ASP.NET 테마 및 스킨](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.BaseDataList.DataKeyField%2A> 속성을 데이터 원본에 대 한 키 필드를 지정 합니다.  
  
 [!code-aspx-csharp[BaseDataListDataKeys#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseDataListDataKeys/CS/basedatalistdatakeyscs.aspx#1)]
 [!code-aspx-vb[BaseDataListDataKeys#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseDataListDataKeys/VB/basedatalistdatakeysvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataKeys" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataKeys">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DataKeyCollection DataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyCollection DataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.DataKeys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataKeys As DataKeyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::DataKeyCollection ^ DataKeys { System::Web::UI::WebControls::DataKeyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataKeys : System.Web.UI.WebControls.DataKeyCollection" Usage="System.Web.UI.WebControls.BaseDataList.DataKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 목록 컨트롤에 각 레코드의 키 값을 저장하는 <see cref="T:System.Web.UI.WebControls.DataKeyCollection" /> 개체를 가져옵니다.</summary>
        <value>데이터 목록 컨트롤에 각 레코드의 키 값을 저장하는 <see cref="T:System.Web.UI.WebControls.DataKeyCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.BaseDataList.DataKeys%2A> 데이터 목록 컨트롤에서에서 각 레코드 (행으로 표시 됨)의 키 값에 액세스 하는 컬렉션입니다. 이 옵션을 사용 하면 데이터 목록 컨트롤에서 표시 하지 않고 컨트롤을 사용 하 여 키 필드를 저장할 수 있습니다. 이 컬렉션에서 지정 된 필드의 값으로 자동으로 채워집니다는 <xref:System.Web.UI.WebControls.BaseDataList.DataKeyField%2A> 속성입니다.  
  
 키 필드는 일반적으로 사용 처리기에서 이벤트와 같은 `ItemCommand` 또는 `DeleteCommand`, 데이터 원본에서 특정 레코드를 수정 하기 위한 업데이트 쿼리 문자열의 일부로. 키 필드를 수정 하려면 적절 한 레코드를 식별 하는 업데이트 쿼리 문자열을 수 있습니다.  
  
 ASP.NET 사용 하 여 데이터 액세스에 대 한 자세한 내용은 참조 하세요. [ASP.NET 데이터 액세스 콘텐츠 맵](https://msdn.microsoft.com/library/f9219396-a0fa-481f-894d-e3d9c67d64f2)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.BaseDataList.DataKeys%2A> 삭제할 레코드에 대 한 키 필드의 값을 확인 하는 속성입니다.  
  
 [!code-aspx-csharp[BaseDataListDataKeys#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseDataListDataKeys/CS/basedatalistdatakeyscs.aspx#1)]
 [!code-aspx-vb[BaseDataListDataKeys#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseDataListDataKeys/VB/basedatalistdatakeysvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKeyCollection" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" />
      </Docs>
    </Member>
    <Member MemberName="DataKeysArray">
      <MemberSignature Language="C#" Value="protected System.Collections.ArrayList DataKeysArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList DataKeysArray" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.DataKeysArray" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property DataKeysArray As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ArrayList ^ DataKeysArray { System::Collections::ArrayList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataKeysArray : System.Collections.ArrayList" Usage="System.Web.UI.WebControls.BaseDataList.DataKeysArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 목록 컨트롤에 있는 각 레코드의 키 값이 들어 있는 <see cref="T:System.Collections.ArrayList" /> 개체를 가져옵니다.</summary>
        <value>데이터 목록 컨트롤에 있는 각 레코드의 키 값이 들어 있는 <see cref="T:System.Collections.ArrayList" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataList.DataKeysArray%2A> 속성은 데이터 목록 컨트롤에서에서 각 레코드의 키 값을 저장 하는 파생된 클래스에서 사용 합니다. 이 속성은 일반적으로 생성 하려면 사용 합니다 <xref:System.Web.UI.WebControls.DataKeyCollection> 에 포함 된 개체를 <xref:System.Web.UI.WebControls.BaseDataList.DataKeys%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ArrayList" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataKeys" />
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.DataMember" />
      <MemberSignature Language="VB.NET" Value="Public Property DataMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataMember : string with get, set" Usage="System.Web.UI.WebControls.BaseDataList.DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>여러 멤버 데이터 소스에서 데이터 목록 컨트롤에 바인딩할 특정 데이터 멤버를 가져오거나 설정합니다.</summary>
        <value>여러 멤버 데이터 소스의 데이터 멤버입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.BaseDataList.DataMember%2A> 목록 컨트롤에 바인딩할 다중 멤버 데이터 원본에서 멤버를 지정 하는 속성입니다. 예를 들어, 데이터 원본에 지정 된 둘 이상의 테이블을 사용 하 여 있는 경우는 <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> 속성을 사용 하 여는 <xref:System.Web.UI.WebControls.BaseDataList.DataMember%2A> 데이터 목록 컨트롤을 바인딩할 테이블을 지정 하는 속성입니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 <xref:System.Web.UI.ThemeableAttribute> 하 고 [ASP.NET 테마 및 스킨](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.BaseDataList.DataMember%2A> 속성을 지정 하는 테이블에 <xref:System.Data.DataSet> 바인딩할 개체는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다.  
  
 [!code-aspx-csharp[BaseDataListDataMember#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseDataListDataMember/CS/basedatalistdatamembercs.aspx#1)]
 [!code-aspx-vb[BaseDataListDataMember#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseDataListDataMember/VB/basedatalistdatamembervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public virtual object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj with get, set" Usage="System.Web.UI.WebControls.BaseDataList.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤 내에 항목을 채우는 데 사용된 값 목록이 포함된 소스를 가져오거나 설정합니다.</summary>
        <value>이 컨트롤에 데이터를 제공하는 데 사용된 값 컬렉션을 포함하는 <see cref="T:System.Collections.IEnumerable" /> 또는 <see cref="T:System.ComponentModel.IListSource" />입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> 데이터 목록 컨트롤에 바인딩할 값의 원본을 지정 하는 속성입니다. 데이터 원본 중 하나를 구현 하는 컬렉션 이어야 합니다는 <xref:System.Collections.IEnumerable?displayProperty=nameWithType> 인터페이스 (같은 <xref:System.Data.DataView?displayProperty=nameWithType>, <xref:System.Collections.ArrayList?displayProperty=nameWithType>, 또는 <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>) 또는 <xref:System.ComponentModel.IListSource> 에서 파생 된 인터페이스 컨트롤에 바인딩하는 <xref:System.Web.UI.WebControls.BaseDataList> 클래스. 설정 하는 경우는 <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> 속성인 하면 데이터 바인딩을 수행 하려면 코드를 직접 작성 해야 합니다.  
  
 데이터 원본으로 지정 하는 경우는 <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> 여러 원본의 데이터를 포함 하는 속성을 사용 합니다 <xref:System.Web.UI.WebControls.BaseDataList.DataMember%2A> 컨트롤에 바인딩할 특정 소스를 지정 하는 속성입니다. 예를 들어 있는 경우는 <xref:System.Data.DataSet?displayProperty=nameWithType> 여러 테이블을 사용 하 여 개체에 컨트롤을 바인딩할 테이블을 지정 해야 합니다. 데이터 소스를 지정한 후 사용 하 여는 <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> 컨트롤에 데이터 소스를 바인딩할 메서드.  
  
 또는 사용할 수는 <xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A> 속성을 데이터 소스 컨트롤에서 표시 하는 데이터 원본에 자동으로 바인딩됩니다. 설정 하는 경우는 <xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A> 속성인 데이터 목록 컨트롤을 자동으로 지정 된 데이터 소스 컨트롤에 바인딩합니다. 호출 코드를 명시적으로 작성할 필요가 없습니다를 <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> 메서드.  
  
 둘 다에 대 한 값을 지정 합니다 <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> 속성 및 <xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A> 속성인 ASP.NET 데이터 원본을 확인할 수 없는 및 <xref:System.Web.HttpException?displayProperty=nameWithType> 예외가 throw 됩니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 <xref:System.Web.UI.ThemeableAttribute> 하 고 [ASP.NET 테마 및 스킨](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> 속성에 바인딩할 데이터 소스를 지정 하는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤.  
  
 [!code-aspx-csharp[Classic DataGrid Example 2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid Example 2/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid Example 2/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> 속성과 <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSourceID" /> 속성 모두에 대해 값이 지정되었기 때문에 데이터 소스를 확인할 수 없는 경우</exception>
        <exception cref="T:System.ArgumentException">데이터 소스의 형식이 잘못된 경우. 데이터 소스는 <see langword="null" />이거나 <see cref="T:System.Collections.IEnumerable" /> 또는 <see cref="T:System.ComponentModel.IListSource" /> 인터페이스를 구현해야 합니다.</exception>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="T:System.ComponentModel.IListSource" />
        <altmember cref="T:System.Data.DataView" />
        <altmember cref="T:System.Collections.ArrayList" />
        <altmember cref="T:System.Collections.Generic.List`1" />
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceID">
      <MemberSignature Language="C#" Value="public virtual string DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.DataSourceID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataSourceID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceID : string with get, set" Usage="System.Web.UI.WebControls.BaseDataList.DataSourceID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.IDReferenceProperty(typeof(System.Web.UI.DataSourceControl))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 목록 컨트롤에서 해당 데이터 소스를 검색하는 데 사용해야 하는 데이터 소스 컨트롤의 <see cref="P:System.Web.UI.Control.ID" /> 속성을 가져오거나 설정합니다.</summary>
        <value>데이터 소스 컨트롤에 할당된 프로그래밍 ID입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A> 속성에 액세스를 <xref:System.Web.UI.Control.ID%2A> 데이터 목록 컨트롤에서 해당 데이터 소스를 검색 하는 데 사용 해야 하는 데이터 소스 컨트롤의 속성입니다. 데이터 소스 컨트롤에서 참조 하는 <xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A> 속성을 구현 하는 모든 컨트롤 수를 <xref:System.Web.UI.IDataSource> 인터페이스입니다. 데이터 소스 컨트롤이 데이터 목록 컨트롤의 부모 컨트롤 또는 데이터 목록 컨트롤을 참조 하는 동일한 명명 컨테이너에 있어야 합니다. 이 속성의 값을 지정 하면 데이터 목록 컨트롤을 자동으로 지정 된 데이터 소스 컨트롤에 바인딩합니다. 호출 코드를 명시적으로 작성할 필요가 없습니다를 <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> 메서드.  
  
 또는 사용할 수는 <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> 데이터 목록 컨트롤에 바인딩할 값의 원본을 지정 하는 속성입니다. 데이터 소스를 구현 하는 컬렉션 이어야 합니다는 <xref:System.Collections.IEnumerable?displayProperty=nameWithType> 인터페이스 (같은 <xref:System.Data.DataView?displayProperty=nameWithType>, <xref:System.Collections.ArrayList?displayProperty=nameWithType>, 또는 <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>) 또는 <xref:System.ComponentModel.IListSource> 에서 파생 된 인터페이스 컨트롤에 바인딩하는 <xref:System.Web.UI.WebControls.BaseDataList> 클래스. 설정 하는 경우는 <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> 속성인 하면 데이터 바인딩을 수행 하려면 코드를 직접 작성 해야 합니다.  
  
 둘 다에 대 한 값을 지정 합니다 <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> 속성 및 <xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A> 속성인 ASP.NET 데이터 원본을 확인할 수 없는 및 <xref:System.Web.HttpException?displayProperty=nameWithType> 예외가 throw 됩니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 <xref:System.Web.UI.ThemeableAttribute> 하 고 [ASP.NET 테마 및 스킨](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> 속성과 <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSourceID" /> 속성 모두에 대해 값이 지정되었기 때문에 데이터 소스를 확인할 수 없는 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnsureDataBound();" />
      <MemberSignature Language="F#" Value="member this.EnsureDataBound : unit -&gt; unit" Usage="baseDataList.EnsureDataBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.BaseDataList.DataBind" /> 메서드를 호출하기 전에 데이터 목록 컨트롤에 데이터 바인딩이 필요한지와 올바른 데이터 소스 컨트롤이 지정되었는지를 확인합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 값을 지정 하는 경우는 <xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A> 속성인 ASP.NET 데이터 목록 컨트롤 지정 된 데이터 소스 컨트롤에 자동으로 바인딩합니다. ASP.NET에서 컨트롤에 대 한 데이터 바인딩을 수행할 경우 호출 하는 <xref:System.Web.UI.WebControls.BaseDataList.EnsureDataBound%2A> 컨트롤이 이미 데이터에 바인딩되어 있지는 구현 하는 올바른 데이터 소스 컨트롤을 확인 하려면 먼저 메서드를 <xref:System.Web.UI.IDataSource> 해당 에대한지정된인터페이스가<xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A>속성입니다. 합니다 <xref:System.Web.UI.WebControls.BaseDataList.EnsureDataBound%2A> 메서드를 호출 합니다 <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataSourceID" />
        <altmember cref="M:System.Web.UI.WebControls.BaseDataList.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.IEnumerable GetData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.IEnumerable GetData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.GetData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetData () As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::IEnumerable ^ GetData();" />
      <MemberSignature Language="F#" Value="abstract member GetData : unit -&gt; System.Collections.IEnumerable&#xA;override this.GetData : unit -&gt; System.Collections.IEnumerable" Usage="baseDataList.GetData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>데이터 소스를 나타내는 <see cref="T:System.Collections.IEnumerable" /> 구현 개체를 반환합니다.</summary>
        <returns>데이터 소스를 나타내는 <see cref="T:System.Collections.IEnumerable" /> 구현 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.BaseDataList.GetData%2A> 파생된 클래스에서 호출 하는 도우미 메서드입니다 (같은 <xref:System.Web.UI.WebControls.DataGrid> 및 <xref:System.Web.UI.WebControls.DataList>) 데이터 원본을 검색 하려면.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberSignature Language="F#" Value="member this.GridLines : System.Web.UI.WebControls.GridLines with get, set" Usage="System.Web.UI.WebControls.BaseDataList.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 목록 컨트롤의 셀 사이에 테두리를 표시할지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.GridLines" /> 값 중 하나입니다. 기본값은 <see langword="Both" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.BaseDataList.GridLines%2A> 데이터 목록 컨트롤의 셀 사이 테두리가 표시 되는지 여부를 지정 하는 속성입니다. 이 속성 중 하나를 사용 하 여는 <xref:System.Web.UI.WebControls.GridLines> 열거형 값입니다. 다음 표에서 가능한 값을 나열합니다.  
  
|값|설명|  
|-----------|-----------------|  
|`None`|셀 테두리가 표시 됩니다.|  
|`Horizontal`|데이터 목록 컨트롤에에서 있는 셀의 위쪽 및 아래쪽 테두리에 표시 됩니다.|  
|`Vertical`|데이터 목록 컨트롤에서 셀의 왼쪽 및 오른쪽 테두리에 표시 됩니다.|  
|`Both`|데이터 목록 컨트롤에에서 있는 셀의 테두리를 모두 표시 됩니다.|  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.BaseDataList.GridLines%2A> 속성을 데이터 바인딩된 컨트롤의 가로 및 세로 모눈선을 표시 합니다.  
  
 [!code-aspx-csharp[BaseDataListGridLines#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseDataListGridLines/CS/basedatalistgridlinescs.aspx#1)]
 [!code-aspx-vb[BaseDataListGridLines#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseDataListGridLines/VB/basedatalistgridlinesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET 서버 컨트롤 및 브라우저 기능</related>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.HorizontalAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HorizontalAlign As HorizontalAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::HorizontalAlign HorizontalAlign { System::Web::UI::WebControls::HorizontalAlign get(); void set(System::Web::UI::WebControls::HorizontalAlign value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalAlign : System.Web.UI.WebControls.HorizontalAlign with get, set" Usage="System.Web.UI.WebControls.BaseDataList.HorizontalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>해당 컨테이너 내에서 데이터 목록 컨트롤의 가로 맞춤을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> 값 중 하나입니다. 기본값은 <see langword="NotSet" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.BaseDataList.HorizontalAlign%2A> 데이터 목록 컨테이너 내의 컨트롤의 가로 맞춤을 지정 하는 속성입니다. 이 속성 중 하나를 사용 하 여는 <xref:System.Web.UI.WebControls.HorizontalAlign> 열거형 값입니다. 다음 표에서 가능한 값을 나열합니다.  
  
|값|설명|  
|-----------|-----------------|  
|`NotSet`|가로 맞춤이 설정되어 있지 않습니다.|  
|`Left`|데이터 목록 컨트롤은 해당 컨테이너 내에서 왼쪽에 맞춰집니다.|  
|`Center`|데이터 목록 컨트롤에서 해당 컨테이너 내에서 가운데 맞춤 됩니다.|  
|`Right`|데이터 목록 컨트롤은 해당 컨테이너 내에서 오른쪽에 맞춰집니다.|  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.BaseDataList.HorizontalAlign%2A> 데이터 바인딩된 컨트롤의 가로 맞춤을 지정 하는 속성입니다.  
  
 [!code-aspx-csharp[BaseDataListHorizontalAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseDataListHorizontalAlign/CS/basedatalisthorizontalaligncs.aspx#1)]
 [!code-aspx-vb[BaseDataListHorizontalAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseDataListHorizontalAlign/VB/basedatalisthorizontalalignvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="Initialized">
      <MemberSignature Language="C#" Value="protected bool Initialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Initialized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.Initialized" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Initialized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Initialized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Initialized : bool" Usage="System.Web.UI.WebControls.BaseDataList.Initialized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤이 초기화되었는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>컨트롤이 초기화되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataList.Initialized%2A> 속성은 파생된 클래스에서 사용 됩니다 (같은 <xref:System.Web.UI.WebControls.DataList> 및 <xref:System.Web.UI.WebControls.DataGrid>) 컨트롤이 초기화 되었는지 여부를 확인 하려면.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.Initialized" />
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public static bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.IsBindableType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsBindableType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member IsBindableType : Type -&gt; bool" Usage="System.Web.UI.WebControls.BaseDataList.IsBindableType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">테스트할 데이터 형식이 들어 있는 <see cref="T:System.Type" />입니다.</param>
        <summary>지정된 데이터 형식을 <see cref="T:System.Web.UI.WebControls.BaseDataList" /> 클래스에서 파생된 목록 컨트롤에 바인딩할 수 있는지 여부를 결정합니다.</summary>
        <returns>지정된 데이터 형식을 <see cref="T:System.Web.UI.WebControls.BaseDataList" /> 클래스에서 파생된 목록 컨트롤에 바인딩할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.BaseDataList.IsBindableType%2A> 지정된 된 데이터 형식에서 상속 되는 목록 컨트롤을 바인딩할 수 있는지 여부를 확인 하려면 정적 메서드는 <xref:System.Web.UI.WebControls.BaseDataList> 클래스. 지원 되는 데이터 형식은 <xref:System.Boolean?displayProperty=nameWithType>, <xref:System.Byte?displayProperty=nameWithType>, <xref:System.SByte?displayProperty=nameWithType>, <xref:System.Int16?displayProperty=nameWithType>, <xref:System.UInt16?displayProperty=nameWithType>를 <xref:System.Int32?displayProperty=nameWithType>, <xref:System.UInt32?displayProperty=nameWithType>를 <xref:System.Int64?displayProperty=nameWithType>, <xref:System.UInt64?displayProperty=nameWithType>를 <xref:System.Char?displayProperty=nameWithType>, <xref:System.Double?displayProperty=nameWithType>, <xref:System.Single?displayProperty=nameWithType>, <xref:System.DateTime?displayProperty=nameWithType>하십시오 <xref:System.Decimal?displayProperty=nameWithType>, 및 <xref:System.String?displayProperty=nameWithType>합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.BaseDataList.IsBindableType%2A> 속성을 특정 데이터 형식의 값에 바인딩될 수 있는지 여부를 확인 하는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다.  
  
 [!code-aspx-csharp[BaseDataListIsBindableType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseDataListIsBindableType/CS/basedatalistisbindabletypecs.aspx#1)]
 [!code-aspx-vb[BaseDataListIsBindableType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseDataListIsBindableType/VB/basedatalistisbindabletypevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.Decimal" />
        <altmember cref="P:System.Type.IsPrimitive" />
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.Byte" />
        <altmember cref="T:System.SByte" />
        <altmember cref="T:System.Int16" />
        <altmember cref="T:System.UInt16" />
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.UInt32" />
        <altmember cref="T:System.Int64" />
        <altmember cref="T:System.UInt64" />
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Double" />
        <altmember cref="T:System.Single" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="IsBoundUsingDataSourceID">
      <MemberSignature Language="C#" Value="protected bool IsBoundUsingDataSourceID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBoundUsingDataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.IsBoundUsingDataSourceID" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsBoundUsingDataSourceID As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsBoundUsingDataSourceID { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBoundUsingDataSourceID : bool" Usage="System.Web.UI.WebControls.BaseDataList.IsBoundUsingDataSourceID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.BaseDataList.DataSourceID" /> 속성이 설정되었는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="P:System.Web.UI.WebControls.BaseDataList.DataSourceID" />가 <see cref="F:System.String.Empty" /> 이외의 값으로 설정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataList.IsBoundUsingDataSourceID%2A> 속성은 파생된 클래스에서 사용 됩니다 (같은 <xref:System.Web.UI.WebControls.DataList> 및 <xref:System.Web.UI.WebControls.DataGrid>) 데이터 바인딩된 컨트롤을 ASP.NET 버전 2.0 데이터 소스 컨트롤에 바인딩되어 있는지 여부를 확인 하려면.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected override void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.OnDataBinding(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataBinding (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataBinding(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDataBinding : EventArgs -&gt; unit" Usage="baseDataList.OnDataBinding e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.Control.DataBinding" /> 컨트롤의 <see cref="T:System.Web.UI.WebControls.BaseDataList" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.Control.DataBinding> 데이터에 바인딩될 때 이벤트가 발생 합니다 <xref:System.Web.UI.WebControls.BaseDataList> 컨트롤입니다. 이 메서드는 연관 된 모든 데이터 바인딩 논리를 수행 하는 컨트롤을 알립니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.BaseDataList.OnDataBinding%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.BaseDataList.OnDataBinding(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.BaseDataList.OnDataBinding(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.Control.DataBinding" />
      </Docs>
    </Member>
    <Member MemberName="OnDataPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataPropertyChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataPropertyChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.OnDataPropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataPropertyChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataPropertyChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnDataPropertyChanged : unit -&gt; unit&#xA;override this.OnDataPropertyChanged : unit -&gt; unit" Usage="baseDataList.OnDataPropertyChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>기본 데이터 소스 ID 속성 중 하나가 변경될 때 호출되어 데이터 바인딩된 컨트롤을 해당 데이터에 다시 바인딩합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataList.OnDataPropertyChanged%2A> 메서드는 데이터 바인딩된 컨트롤을 해당 데이터를 바인딩할 때 합니다 <xref:System.Web.UI.WebControls.BaseDataList.DataMember%2A>, <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A>, 또는 <xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A> 속성 페이지의 다음 값을 변경 <xref:System.Web.UI.Control.PreRender> 이벤트입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">컨트롤의 데이터 바인딩 단계에서 속성을 변경하려고 한 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataSourceID" />
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceViewChanged (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceViewChanged(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.OnDataSourceViewChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceViewChanged (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceViewChanged(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceViewChanged : obj * EventArgs -&gt; unit&#xA;override this.OnDataSourceViewChanged : obj * EventArgs -&gt; unit" Usage="baseDataList.OnDataSourceViewChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="e" Type="System.EventArgs" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sender">이벤트 소스입니다.</param>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataList.OnDataSourceViewChanged%2A> 메서드 알리고 데이터 바인딩된 컨트롤을 데이터 원본 변경 된 컨트롤을 다시 바인딩해야 하는 데 필요한 모든 작업을 수행 해야 합니다. 일반적으로 <xref:System.Web.UI.WebControls.BaseDataList.OnDataSourceViewChanged%2A> 데이터 원본 뷰의 속성이 변경 되 면 호출 됩니다.  
  
 <xref:System.Web.UI.WebControls.BaseDataList> 집합 클래스를 <xref:System.Web.UI.WebControls.BaseDataList.RequiresDataBinding%2A> 속성을 `true` 때의 <xref:System.Web.UI.DataSourceView.DataSourceViewChanged> 이벤트가 발생 합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.BaseDataList.OnDataSourceViewChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.BaseDataList.OnDataSourceViewChanged(System.Object,System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.BaseDataList.OnDataSourceViewChanged(System.Object,System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.RequiresDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="baseDataList.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.Control.Init" /> 컨트롤에 대해 <see cref="T:System.Web.UI.WebControls.BaseDataList" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.BaseDataList.OnInit%2A> 메서드를 알립니다는 <xref:System.Web.UI.WebControls.BaseDataList> 만들고 인스턴스를 설정 하는 데 필요한 초기화 단계를 수행 하는 컨트롤입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLoad : EventArgs -&gt; unit" Usage="baseDataList.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.Control.Load" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="baseDataList.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.Control.PreRender" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedIndexChanged : EventArgs -&gt; unit&#xA;override this.OnSelectedIndexChanged : EventArgs -&gt; unit" Usage="baseDataList.OnSelectedIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.BaseDataList.SelectedIndexChanged" /> 컨트롤의 <see cref="T:System.Web.UI.WebControls.BaseDataList" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataList.SelectedIndexChanged> 데이터 목록 컨트롤을 서버에 대 한 게시 사이에서는 다른 항목이 선택 될 때 이벤트가 발생 합니다. <xref:System.Web.UI.WebControls.BaseDataList.OnSelectedIndexChanged%2A> 메서드를 사용 하면 이벤트에 대 한 사용자 지정 처리기를 만들 수 있습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.BaseDataList.OnSelectedIndexChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.BaseDataList.OnSelectedIndexChanged(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.BaseDataList.OnSelectedIndexChanged(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.BaseDataList.SelectedIndexChanged" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal abstract void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void PrepareControlHierarchy();" />
      <MemberSignature Language="F#" Value="abstract member PrepareControlHierarchy : unit -&gt; unit" Usage="baseDataList.PrepareControlHierarchy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>데이터 바인딩된 컨트롤의 컨트롤 계층 구조를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 상속 하는 경우 <xref:System.Web.UI.WebControls.BaseDataList>를 구현 해야 합니다는 <xref:System.Web.UI.WebControls.BaseDataList.PrepareControlHierarchy%2A> 데이터 바인딩된 컨트롤의 컨트롤 계층 구조를 준비 하는 방법입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.PrepareControlHierarchy" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.PrepareControlHierarchy" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseDataList.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="baseDataList.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">클라이언트에서 렌더링할 출력 스트림이 포함된 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>이 컨트롤을 지정된 HTML 작성기에 렌더링합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresDataBinding">
      <MemberSignature Language="C#" Value="protected bool RequiresDataBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresDataBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.RequiresDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Property RequiresDataBinding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool RequiresDataBinding { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequiresDataBinding : bool with get, set" Usage="System.Web.UI.WebControls.BaseDataList.RequiresDataBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 목록 컨트롤을 지정된 데이터 소스에 바인딩해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>컨트롤을 데이터 소스에 바인딩해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataList> 컨트롤이 사용 하는 <xref:System.Web.UI.WebControls.BaseDataList.RequiresDataBinding%2A> 컨트롤을 호출 해야 하는지 여부를 결정 하는 속성을 <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> 된 지정 된 데이터 소스에 바인딩해야 하는 방법.  
  
 때마다를 `set` 접근자 중 하나에서 호출 되는 <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A>, <xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A>, 또는 <xref:System.Web.UI.WebControls.BaseDataList.DataMember%2A> 후 데이터 원본을 변경 하려면 속성은 <xref:System.Web.UI.WebControls.BaseDataList.OnInit%2A> 메서드가 이미 호출 된, ASP.NET 는의값을자동으로설정<xref:System.Web.UI.WebControls.BaseDataList.RequiresDataBinding%2A> 속성을 `true`입니다. 값을 <xref:System.Web.UI.WebControls.BaseDataList.RequiresDataBinding%2A> 속성도 설정 됩니다 `true` 때는 <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl.OnDataSourceChanged%2A> 메서드가 호출 됩니다.  
  
 ASP.NET의 값을 자동으로 설정 합니다 <xref:System.Web.UI.WebControls.Repeater.RequiresDataBinding%2A> 속성을 `false` 직후는 <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> 메서드가 호출 되었습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataSourceID" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataMember" />
      </Docs>
    </Member>
    <Member MemberName="SelectArguments">
      <MemberSignature Language="C#" Value="protected System.Web.UI.DataSourceSelectArguments SelectArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataSourceSelectArguments SelectArguments" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.SelectArguments" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property SelectArguments As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::DataSourceSelectArguments ^ SelectArguments { System::Web::UI::DataSourceSelectArguments ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectArguments : System.Web.UI.DataSourceSelectArguments" Usage="System.Web.UI.WebControls.BaseDataList.SelectArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 바인딩된 컨트롤이 데이터 소스 컨트롤에서 데이터를 검색할 때 사용하는 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 개체를 가져옵니다.</summary>
        <value>데이터 바인딩된 컨트롤에서 데이터를 검색하는 데 사용되는 <see cref="T:System.Web.UI.DataSourceSelectArguments" />입니다. 기본적으로는 <see cref="M:System.Web.UI.WebControls.BaseDataList.CreateDataSourceSelectArguments" />의 값이 반환됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataList.SelectArguments%2A> 속성 호출을 <xref:System.Web.UI.WebControls.BaseDataList.CreateDataSourceSelectArguments%2A> 기본값을 만들 메서드 <xref:System.Web.UI.DataSourceSelectArguments> 개체입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.DataSourceSelectArguments" />
        <altmember cref="M:System.Web.UI.WebControls.BaseDataList.CreateDataSourceSelectArguments" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.BaseDataList.SelectedIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedIndexChanged : EventHandler " Usage="member this.SelectedIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서버에 게시되는 중간에 데이터 목록 컨트롤에서 다른 항목이 선택될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BaseDataList.SelectedIndexChanged> 데이터 목록 컨트롤을 서버에 대 한 게시 사이에서는 다른 항목이 선택 될 때 이벤트가 발생 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에 대 한 이벤트 처리기를 제공 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.BaseDataList.SelectedIndexChanged> 이벤트 선언적으로 합니다.  
  
 [!code-aspx-csharp[BaseDataListSelectedIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseDataListSelectedIndexChanged/CS/basedatalistselectedindexchangedcs.aspx#1)]
 [!code-aspx-vb[BaseDataListSelectedIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseDataListSelectedIndexChanged/VB/basedatalistselectedindexchangedvb.aspx#1)]  
  
 다음 코드 예제에 대 한 이벤트 처리기를 제공 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.BaseDataList.SelectedIndexChanged> 이벤트 프로그래밍 방식으로 합니다.  
  
 [!code-aspx-csharp[BaseDataListSelectedIndexChanged2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseDataListSelectedIndexChanged2/CS/basedatalistselectedindexchanged2cs.aspx#1)]
 [!code-aspx-vb[BaseDataListSelectedIndexChanged2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseDataListSelectedIndexChanged2/VB/basedatalistselectedindexchanged2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataList.OnSelectedIndexChanged(System.EventArgs)" />
        <altmember cref="T:System.EventHandler" />
      </Docs>
    </Member>
    <Member MemberName="SupportsDisabledAttribute">
      <MemberSignature Language="C#" Value="public override bool SupportsDisabledAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDisabledAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.SupportsDisabledAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SupportsDisabledAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDisabledAttribute { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDisabledAttribute : bool" Usage="System.Web.UI.WebControls.BaseDataList.SupportsDisabledAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤의 <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" /> 속성이 <see langword="false" />인 경우 컨트롤이 렌더링된 HTML 요소의 <see langword="disabled" /> 특성을 "disabled"로 설정할지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see langword="true" /> 경우는 <see cref="P:System.Web.UI.Control.RenderingCompatibility" /> 속성 보다 낮은 ASP.NET 버전을 나타내면 <c>4.0</c>이 고, 그렇지 않으면 <see langword="false" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성 방법을 ASP.NET 렌더링할지 나타냅니다 HTML 컨트롤에 대 한 컨트롤은 사용 하지 않도록 설정 합니다. 이 속성이 `true`, ASP.NET 렌더링을 `disabled` 컨트롤을 사용 하지 않으면. 이 속성이 `false`, ASP.NET 렌더링을 `class` 컨트롤을 사용 하지 않으면. 자세한 내용은 <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A?displayProperty=nameWithType>를 참조하십시오.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
      </Docs>
    </Member>
    <Member MemberName="UseAccessibleHeader">
      <MemberSignature Language="C#" Value="public virtual bool UseAccessibleHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAccessibleHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseDataList.UseAccessibleHeader" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UseAccessibleHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseAccessibleHeader { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAccessibleHeader : bool with get, set" Usage="System.Web.UI.WebControls.BaseDataList.UseAccessibleHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 목록 컨트롤이 머리글을 액세스할 수 있는 형식으로 렌더링하는지 여부를 나타내는 값을 가져오거나 설정합니다. 이 속성을 사용하면 보조 기술 디바이스 사용자가 컨트롤에 더 쉽게 액세스할 수 있습니다.</summary>
        <value>이 컨트롤이 머리글을 액세스할 수 있는 형식으로 렌더링하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.BaseDataList.UseAccessibleHeader%2A> 데이터 목록 컨트롤에 해당 머리글을 액세스할 수 있는 형식으로 렌더링 하는지 여부를 지정 하는 속성입니다. 이 속성을 사용하면 보조 기술 디바이스 사용자가 컨트롤에 더 쉽게 액세스할 수 있습니다. 기본적으로이 속성의 값은 `false` 및 컨트롤의 머리글 셀 태그 사이 렌더링 `<td>` 고 `</td>`합니다. 이 속성의 값이 `true`, 컨트롤에 대 한 헤더 테이블 머리글 셀 태그 사이 렌더링 됩니다 `<th>` 고 `</th>`입니다. 또한는 `scope="col"` 특성 머리글이 열에 있는 모든 셀에 적용 되도록 지정 하려면 테이블 머리글에 추가 됩니다. 기본 렌더링은 `<th>` 굵게 및 가운데 맞춤으로 텍스트를 가로로 렌더링 요소 유지 됩니다. 개발자의 동작을 재정의할 수는 `<th>` 연계를 사용 하 여 요소 스타일 시트 (CSS). 그러나 스타일 시트의 사용은 권장 되지 않습니다 액세스할 수 있는 웹 페이지를 만들 때.  
  
 와 같은 컨트롤을 나열 하는 데이터에 대 한는 <xref:System.Web.UI.WebControls.DataList> 컨트롤 및 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤에서 상속 되는 <xref:System.Web.UI.WebControls.BaseDataList> 클래스를 설정할 수 있습니다를 <xref:System.Web.UI.WebControls.BaseDataList.UseAccessibleHeader%2A> 속성 선언적으로 또는 프로그래밍 방식으로. 설정한 경우에 <xref:System.Web.UI.WebControls.BaseDataList.UseAccessibleHeader%2A> 속성을 프로그래밍 방식으로 설정 사용 하 여 데이터를 바인딩하기 전에 <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.Caption" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.CaptionAlign" />
      </Docs>
    </Member>
  </Members>
</Type>