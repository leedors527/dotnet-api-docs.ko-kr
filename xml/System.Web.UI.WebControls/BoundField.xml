<Type Name="BoundField" FullName="System.Web.UI.WebControls.BoundField">
  <Metadata><Meta Name="ms.openlocfilehash" Value="17dd5582629af3cc927ad2efa47188f93acd2675" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55323634" /></Metadata><TypeSignature Language="C#" Value="public class BoundField : System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BoundField extends System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BoundField" />
  <TypeSignature Language="VB.NET" Value="Public Class BoundField&#xA;Inherits DataControlField" />
  <TypeSignature Language="C++ CLI" Value="public ref class BoundField : System::Web::UI::WebControls::DataControlField" />
  <TypeSignature Language="F#" Value="type BoundField = class&#xA;    inherit DataControlField" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataControlField</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>데이터 바인딩된 컨트롤에 텍스트로 표시되는 필드를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField> 클래스는 데이터 바인딩된 컨트롤에서 사용 됩니다 (같은 <xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView>) 텍스트 필드의 값을 표시 하려면. <xref:System.Web.UI.WebControls.BoundField> 개체가 사용 되는 데이터 바인딩된 컨트롤에 따라 다르게 표시 됩니다. 예를 들어 합니다 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 표시를 <xref:System.Web.UI.WebControls.BoundField> 열을 개체로 하는 동안를 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 행으로 표시 합니다.  
  
 표시할 필드를 지정 하는 <xref:System.Web.UI.WebControls.BoundField> 개체, 설정 된 <xref:System.Web.UI.WebControls.BoundField.DataField%2A> 속성 필드의 이름. 필드의 값은 HTML로 인코딩된 설정 하 여 표시 되기 전에 <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> 속성을 `true`입니다. 설정 하 여 사용자 지정 서식 문자열 필드의 값에 적용할 수 있습니다는 <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 속성입니다. 경우는 <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> 속성은 `true`, 필드의 인코딩된 문자열 값을 사용자 지정 형식 문자열에서 사용 됩니다. 기본적으로 데이터 바인딩된 컨트롤을 읽기 전용 모드에 있을 때만 서식 문자열이 필드 값에 적용 됩니다. 서식 문자열에 데이터 바인딩된 컨트롤이 편집 모드에 있는 동안 표시 되는 값을 적용 하려면 설정 합니다 <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> 속성을 `true`입니다. 필드의 값이 null 인 경우 설정 하 여 사용자 지정 캡션을 표시할 수 있습니다는 <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> 속성입니다. 합니다 <xref:System.Web.UI.WebControls.BoundField> 개체에는 빈 문자열도 자동 변환할 수 있습니다 ("") 값을 null 값으로 설정 하 여 필드를 <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> 속성을 `true`입니다.  
  
 숨길 수 있습니다는 <xref:System.Web.UI.WebControls.BoundField> 설정 하 여 데이터 바인딩된 컨트롤에 개체를 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> 속성을 `false`입니다. 편집 모드에서 수정할 필드의 값을 방지 하려면 설정 합니다 <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> 속성을 `true`입니다. 데이터 바인딩된 컨트롤에서 레코드를 삽입을 지 원하는 (같은 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤)를 숨길 수 있습니다를 <xref:System.Web.UI.WebControls.BoundField> 설정 하 여 개체를 <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> 속성을 `false`입니다. 삽입 모드에서 자동으로 생성 된 키 필드를 숨길 때 일반적으로 수행 됩니다.  
  
 머리글 및 바닥글 섹션을 사용자 지정할 수는 <xref:System.Web.UI.WebControls.BoundField> 개체입니다. 캡션을 머리글 또는 바닥글 구역에 표시할 설정 합니다 <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> 또는 <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> 속성을 각각. 헤더 섹션에 텍스트를 표시 하는 대신 설정 하 여 이미지를 표시할 수는 <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> 속성입니다. 헤더 섹션에 숨겨져 있을 수는 <xref:System.Web.UI.WebControls.BoundField> 설정 하 여 개체를 <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> 속성을 `false`입니다.  
  
> [!NOTE]
>  일부 데이터 바인딩된 컨트롤 (같은 <xref:System.Web.UI.WebControls.GridView> 컨트롤) 표시 하거나 컨트롤의 전체 헤더 섹션을 숨길 수 있습니다. 이러한 데이터 바인딩된 컨트롤을 지원 하지 않습니다는 <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> 개별 바인딩된 필드의 속성입니다. 표시 하거나 (가능한 경우) 데이터 바인딩된 컨트롤의 전체 헤더 섹션을 숨기 거 나 컨트롤을 사용 하 여 `ShowHeader` 속성입니다.  
  
 또한 사용자 지정할 수 있습니다 모양의 <xref:System.Web.UI.WebControls.BoundField> 필드의 다른 부분에 대 한 스타일 속성을 설정 하 여 개체 (글꼴 색, 배경색 및 등). 다음 표에서 다양 한 스타일 속성을 나열합니다.  
  
|스타일 속성|설명|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|자식 웹 서버 컨트롤에 대 한 스타일 설정을 <xref:System.Web.UI.WebControls.BoundField> 개체입니다.|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|바닥글 구역에 대 한 스타일 설정을 <xref:System.Web.UI.WebControls.BoundField> 개체입니다.|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|머리글 구역에 대 한 스타일 설정을 <xref:System.Web.UI.WebControls.BoundField> 개체입니다.|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|데이터 항목에 대 한 스타일 설정이 <xref:System.Web.UI.WebControls.BoundField> 개체입니다.|  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.BoundField> 에 있는 필드의 값을 표시 하는 개체를 <xref:System.Web.UI.WebControls.GridView> 컨트롤입니다.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.InsertVisible" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
    <altmember cref="P:System.Web.UI.WebControls.CheckBoxField.Text" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoundField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BoundField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.BoundField" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자의 새 인스턴스를 초기화 하는 데는 <xref:System.Web.UI.WebControls.BoundField> 클래스입니다. 이 생성자는 필드를 동적으로 생성된 하는 데이터 바인딩된 컨트롤을 추가할 때 일반적으로 사용 됩니다.  
  
 동적으로 추가 하는 <xref:System.Web.UI.WebControls.BoundField> 데이터 바인딩된 컨트롤에 개체를 새 <xref:System.Web.UI.WebControls.BoundField> 개체 속성을 설정 하 고 다음 데이터 바인딩된 컨트롤의 필드 컬렉션에 추가 합니다. 예를 들어, 사용 중인 경우는 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 추가 합니다 <xref:System.Web.UI.WebControls.BoundField> 개체를 <xref:System.Web.UI.WebControls.GridView.Columns%2A> 컬렉션.  
  
> [!NOTE]
>  데이터 바인딩된 컨트롤에 필드를 동적으로 추가할 수 있습니다, 있지만 것이 좋습니다는 필드 정적으로 선언 하 고 다음 표시 하거나 숨길 수를 적절 하 게 합니다. 모든 필드를 정적으로 선언 된 부모 데이터 바인딩된 컨트롤에 대 한 뷰 상태의 크기를 줄입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 동적으로 추가 하는 생성자를 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.BoundField> 개체는 <xref:System.Web.UI.WebControls.GridView> 제어 합니다.  
  
 [!code-aspx-csharp[BoundFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldCtor/CS/boundfieldctorcs.aspx#1)]
 [!code-aspx-vb[BoundFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldCtor/VB/boundfieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public virtual bool ApplyFormatInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ApplyFormatInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ApplyFormatInEditMode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> 개체가 들어 있는 데이터 바인딩된 컨트롤이 편집 모드에 있는 경우 <see cref="T:System.Web.UI.WebControls.BoundField" /> 속성으로 지정된 서식 문자열이 필드 값에 적용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>편집 모드에서 필드 값에 서식 문자열이 적용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 바인딩된 컨트롤 (같은 <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.FormView>, 및 <xref:System.Web.UI.WebControls.GridView>) 다른 디스플레이 모드를 읽기, 편집 또는 레코드를 삽입 하는 데 사용할 수 있습니다. 기본적으로 서식 지정 문자열에서 지정 된 <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 데이터 바인딩된 컨트롤을 읽기 전용 모드에 있을 때만 속성 필드 값에 적용 됩니다. 서식 문자열에 데이터 바인딩된 컨트롤이 편집 모드에 있는 동안 표시 되는 값을 적용 하려면 설정 합니다 <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> 속성을 `true`입니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.BoundField> 개체 서식 지정 필드는 데이터 원본에서 업데이트 되 면 자동으로 제거 되지 않습니다. 원하지 않는 저장 된 값의 일부분으로 서식 지정를 사용 하는 경우에 서식을 프로그래밍 방식으로 제거 합니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> 하는 동안 필드 값에 서식을 적용 하려면 속성 문자열을 <xref:System.Web.UI.WebControls.GridView> 컨트롤이 편집 모드 인지 합니다. 서식 지정 후 프로그래밍 방식으로 전에 제거 됩니다 데이터 소스의 값이 업데이트 됩니다.  
  
 [!code-aspx-csharp[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldapplyformatineditmode/CS/boundfieldapplyformatineditmodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldapplyformatineditmode/VB/boundfieldapplyformatineditmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public virtual bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 소스에서 데이터 필드가 업데이트되는 경우 빈 문자열 값("")이 자동으로 null 값으로 변환되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>빈 문자열 값이 자동으로 null 값으로 변환되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우에 따라 사용자 레코드를 삽입 하거나 업데이트할 때 필드 값에 대 한 빈 문자열을 입력할 수 있습니다. 사용 된 <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> 데이터 원본에서 데이터 필드가 업데이트 되는 경우 빈 문자열 값을 null로 변환 자동으로 하는지 여부를 지정 하는 속성입니다.  
  
> [!NOTE]
>  기본적으로 <xref:System.Web.UI.WebControls.BoundField> 개체는 null 값을 빈 문자열로 표시 합니다. 표시 하려면 다른 값으로 설정 된 <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> 속성을 지정 하는 빈 문자열 ("") 필드 값을 null로 자동으로 변환 해야 합니다.  
  
 [!code-aspx-csharp[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/CS/boundfieldconvertemptystingtonullcs.aspx#1)]
 [!code-aspx-vb[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/VB/boundfieldconvertemptystingtonullvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="boundField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">현재 <see cref="T:System.Web.UI.WebControls.DataControlField" />의 속성을 복사할 대상 <see cref="T:System.Web.UI.WebControls.BoundField" />입니다.</param>
        <summary>현재 <see cref="T:System.Web.UI.WebControls.BoundField" /> 개체의 속성을 지정된 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 개체로 복사합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.CopyProperties%2A> 메서드는에서 사용 하는 도우미 메서드입니다 합니다 <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> 현재 속성을 복사 하는 방법 <xref:System.Web.UI.WebControls.BoundField> 개체를 <xref:System.Web.UI.WebControls.DataControlField> 메서드에 의해 생성 되는 개체.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CreateField" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="boundField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>빈 <see cref="T:System.Web.UI.WebControls.BoundField" /> 개체를 만듭니다.</summary>
        <returns>빈 <see cref="T:System.Web.UI.WebControls.BoundField" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.CreateField%2A> 메서드는에서 사용 하는 도우미 메서드입니다 합니다 <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> 메서드는 빈 항목 만들기를 <xref:System.Web.UI.WebControls.BoundField> 개체의 현재 속성을 복사할 <xref:System.Web.UI.WebControls.BoundField> 개체를 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public virtual string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.BoundField" /> 개체에 바인딩할 데이터 필드의 이름을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.BoundField" />에 바인딩할 데이터 필드의 이름입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.BoundField.DataField%2A> 속성에 바인딩할 데이터 필드의 이름을 지정 하는 <xref:System.Web.UI.WebControls.BoundField> 개체. 지정된 된 필드의 값에 표시 됩니다는 <xref:System.Web.UI.WebControls.BoundField> 텍스트로 개체입니다. 표시 된 텍스트를 설정 하 여 필요에 따라 서식을 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 속성입니다.  
  
> [!NOTE]
>  필드의 값이 null 이면 빈 문자열 ("") 값에 대해 기본적으로 표시 됩니다. 대체 캡션을 지정 하려면 설정의 <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.BoundField.DataField%2A> 표시할 필드를 지정 하는 속성을 <xref:System.Web.UI.WebControls.BoundField> 필드 열을 <xref:System.Web.UI.WebControls.GridView> 컨트롤입니다.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFormatString : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>필드 값의 표시 형식을 지정하는 문자열을 가져오거나 설정합니다.</summary>
        <value>필드 값의 표시 형식을 지정하는 서식 문자열입니다. 기본값은 빈 문자열("")로, 필드 값에 특정 형식이 적용되지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 속성에 표시 되는 값에 대 한 사용자 지정 표시 형식을 지정 하는 <xref:System.Web.UI.WebControls.BoundField> 개체입니다. 경우는 <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 속성이 설정 되지 않은, 특별 한 서식 없이 필드의 값이 표시 됩니다.  
  
> [!NOTE]
>  3.5 보다 이전 버전의 ASP.NET에서 설정 해야 합니다 <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> 속성을 `false` 의 서식을 지정 하려면 필드를 하지 문자열 데이터 형식입니다. 그렇지 않은 경우 필드 값에 저장 된 서식 문자열 앞에 있는 기본 변환 메서드에서 문자열로 변환 됩니다는 <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 속성이 적용 됩니다.  
  
 기본적으로 서식 문자열은 적용할 필드 값을 데이터 바인딩된 컨트롤을 포함 하는 경우에는 <xref:System.Web.UI.WebControls.BoundField> 개체는 읽기 전용 모드입니다. 서식 문자열이 편집 모드에서 필드 값에 적용할 설정 합니다 <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> 속성을 `true`입니다.  
  
 서식 문자열이 모든 리터럴 문자열이 될 수 있으며 일반적으로 필드의 값에 대 한 자리 표시자를 포함 합니다. 서식 문자열의 예를 들어 `Item Value: {0}`를 대체 하는 필드의 값을 {0} 자리 표시자 문자열에 표시 되 면를 <xref:System.Web.UI.WebControls.BoundField> 개체. 서식 문자열의 나머지는 리터럴 텍스트로 표시 됩니다.  
  
 서식 문자열에 자리 표시 자가 포함 되어 있지 않으면, 서식 문자열 자체 (데이터 원본의 필드 값 포함 되지 않습니다.) 최종 표시 텍스트에 포함 됩니다. 자리 표시자 앞의 예제와 같이 중괄호로 묶인 0 (영) 인 경우 기본 메서드에서 필드 값을 문자열로 변환 됩니다. 필드 값을 포맷 해야 하는 방법을 지정 하는 문자열을 0에 추가할 수 있습니다. 예를 들어, 자리 표시자 `{0:C}` 숫자 필드를 필드 값의 통화 형식으로 변환 되어야 함을 지정 합니다.  
  
 서식을 사용 하 여 적용 되는 <xref:System.String.Format%2A> 메서드. 왼쪽된 중괄호 뒤에 오는 수가 해당 메서드에서 사용 되는 구문의 부분을 자리 표시자를 사용 해야 하나를 일련의 값을 나타냅니다. 각 셀에서 필드 값이 하나만 있기 때문에 왼쪽된 중괄호 뒤에 오는 숫자 0으로 설정할 수만 있습니다.  
  
 다음 표에서 숫자 필드에 대 한 표준 형식 문자를 나열합니다. 이러한 형식 문자를 제외 하 고 대 소문자를 구분 되지 `X`, 지정 된 경우에서 16 진수 문자를 표시 하는 합니다. 대부분의 서식 문자를 표시 하려면 얼마나 많은 유효 자릿수 또는 소수 자릿수를 지정 하려면 숫자를 추가할 수 있습니다.  
  
> [!NOTE]
>  대부분의 경우에서 서버의 문화권 설정에 따라 서식 지정 합니다. 문화권 설정에 대 한 예제는 `en-US`합니다.  
  
|형식 문자|설명|예|  
|----------------------|-----------------|-------------|  
|`C` 또는 `c`|통화 형식으로 숫자 값을 표시합니다. 소수 자릿수를 지정할 수 있습니다.|형식: `{0:C}`<br /><br /> 123.456 -> $123.46<br /><br /> 형식: `{0:C3}`<br /><br /> 123.456  -> $123.456|  
|`D` 또는 `d`|10 진수 형식의 정수 값을 표시합니다. 소수 자릿수를 지정할 수 있습니다. (형식이 "decimal" 라고, 있지만 숫자는 정수로 서식이 지정 됩니다.)|형식: `{0:D}`<br /><br /> 1234 -> 1234<br /><br /> 형식: `{0:D6}`<br /><br /> 1234  -> 001234|  
|`E` 또는 `e`|과학적 (지 수)의 숫자 값을 표시합니다. 소수 자릿수를 지정할 수 있습니다.|형식: `{0:E}`<br /><br /> 1052.0329112756 -> 1.052033E+003<br /><br /> 형식: `{0:E2}`<br /><br /> -1052.0329112756 -> -1.05e+003|  
|`F` 또는 `f`|고정 형식으로 숫자 값을 표시합니다. 소수 자릿수를 지정할 수 있습니다.|형식: `{0:F}`<br /><br /> 1234.567 -> 1234.57<br /><br /> 형식: `{0:F3}`<br /><br /> 1234.567 -> 1234.567|  
|`G` 또는 `g`|일반 형식 (가장 간단한 형태의 고정 소수점 또는 과학적 표기법) 숫자 값을 표시합니다. 유효 자릿수를 지정할 수 있습니다.|형식: `{0:G}`<br /><br /> -123.456 -> -123.456<br /><br /> 형식: `{0:G2}`<br /><br /> -123.456 -> -120|  
|`N` 또는 `n`|(선택적 음수 기호, 그룹 구분 기호 등) 숫자 형식의 숫자 값을 표시 합니다. 소수 자릿수를 지정할 수 있습니다.|형식: `{0:N}`<br /><br /> 1234.567 -> 1,234.57<br /><br /> 형식: `{0:N4}`<br /><br /> 1234.567 -> 1,234.5670|  
|`P` 또는 `p`|백분율 형식에서 숫자 값을 표시합니다. 소수 자릿수를 지정할 수 있습니다.|형식: `{0:P}`<br /><br /> 1 -> 100.00%<br /><br /> 형식: `{0:P1}`<br /><br /> .5 -> 50.0%|  
|`R` 또는 `r`|표시 <xref:System.Single>, <xref:System.Double>, 또는 `BigInteger` 라운드트립 형식의 값입니다.|형식: `{0:R}`<br /><br /> 123456789.12345678 -> 123456789.12345678|  
|`X` 또는 `x`|16 진수 형식의 정수 값을 표시합니다. 소수 자릿수를 지정할 수 있습니다.|형식: `{0:X}`<br /><br /> 255 -> FF<br /><br /> 형식: `{0:x4}`<br /><br /> 255  -> 00ff|  
  
 자세한 내용을 다른 문화권 값의 서식을 보여 주는 예제는 참조 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)합니다. 또한 사용자 지정 숫자 서식 문자열을 만들 수 있습니다. 자세한 내용은 [사용자 지정 숫자 서식 문자열](~/docs/standard/base-types/custom-numeric-format-strings.md)을 참조하세요.  
  
 다음 표에서 형식 문자를 나열 <xref:System.DateTime> 필드입니다. 형식 사양 이들 중 대부분 문화권 설정에 따라 다른 출력에서 발생 합니다. 에 대 한 예제는 한 <xref:System.DateTime> 2009 년 6 월 15의 값 1시 45분: 30 PM의 문화권 설정 사용 하 여 `en-US`합니다.  
  
|형식 문자|설명|예|  
|----------------------|-----------------|-------------|  
|`d`|간단한 날짜 패턴입니다.|형식: `{0:d}`<br /><br /> 2009 년 6 월 15 오후 1시 45분: 30 2009 년 6 월 15-&GT;|  
|`D`|자세한 날짜 패턴입니다.|형식: `{0:D}`<br /><br /> 2009 년 6 월 15 오후 1시 45분: 30-Monday, 2009년 6월 15일 >|  
|`f`|전체 날짜/시간 패턴(간단한 시간)입니다.|형식: `{0:f}`<br /><br /> 2009 년 6 월 15 오후 1시 45분: 30-Monday, 2009년 6월 15일 > 1:45 PM|  
|`F`|전체 날짜/시간 패턴(자세한 시간)|형식: `{0:F}`<br /><br /> 2009 년 6 월 15 오후 1시 45분: 30-Monday, 2009년 6월 15일 > 오후 1시 45분: 30|  
|`g`|일반 날짜/시간 패턴(간단한 시간)|형식: `{0:g}`<br /><br /> 2009 년 6 월 15 오후 1시 45분: 30 2009 년 6 월 15-&GT; 1:45 PM|  
|`G`|일반 날짜/시간 패턴(자세한 시간)입니다.|형식: `{0:G}`<br /><br /> 2009 년 6 월 15 오후 1시 45분: 30 2009 년 6 월 15-&GT; 오후 1시 45분: 30|  
|`M` 또는 `m`|월/일 패턴입니다.|형식: `{0:M}`<br /><br /> 2009 년 6 월 15 오후 1시 45분: 30 년 6 월 15->|  
|`O` 또는 `o`|라운드트립 날짜/시간 패턴입니다.|형식: `{0:o}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30.0900000|  
|`R` 또는 `r`|RFC1123 패턴 (내용은 <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=nameWithType>).|형식: `{0:R}`<br /><br /> 6/15/2009 1:45:30 PM -> Mon, 15 Jun 2009 20:45:30 GMT|  
|`s`|정렬 가능한 날짜/시간 패턴입니다.|형식: `{0:s}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30|  
|`t`|간단한 시간 패턴입니다.|형식: `{0:t}`<br /><br /> 2009 년 6 월 15 오후 1시 45분: 30-1:45 PM &GT;|  
|`T`|자세한 시간 패턴|형식: `{0:T}`<br /><br /> 2009 년 6 월 15 오후 1시 45분: 30 오후 1시 45분: 30-&GT;|  
|`u`|정렬 가능한 유니버설 날짜/시간 패턴|형식: `{0:u}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15 20:45:30Z|  
|`U`|유니버설 전체 날짜/시간 패턴입니다.|형식: `{0:U}`<br /><br /> 2009 년 6 월 15 오후 1시 45분: 30-Monday, 2009년 6월 15일 > 오후 8시 45분: 30|  
|`Y` 또는 `y`|연도 월 패턴|형식: `{0:Y}`<br /><br /> 2009 년 6 월 15 오후 1시 45분: 30 2009 년 6 월->|  
  
 자세한 내용을 다른 문화권 값의 서식을 보여 주는 예제는 참조 [표준 날짜 및 시간 형식 문자열](~/docs/standard/base-types/standard-date-and-time-format-strings.md)합니다. 또한 사용자 지정 날짜 및 시간 서식 문자열을 만들 수 있습니다. 자세한 내용은 [사용자 지정 날짜 및 시간 형식 문자열](~/docs/standard/base-types/custom-date-and-time-format-strings.md)합니다.  
  
   
  
## Examples  
 소스 코드를 사용 하 여 Visual Studio 웹 사이트 프로젝트는 다음이 항목과 함께 사용할 수 있습니다: [다운로드](https://go.microsoft.com/fwlink/?LinkId=191889)합니다.  
  
 다음 예제에서는 사용 하는 방법의 <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 필드의 값에 대 한 사용자 지정 표시 형식을 지정 하는 속성입니다.  
  
  
  
 다음 예제에서는이 예제에서 생성 되는 출력의 행을 보여 줍니다.  
  
|ProductID|name|ProductNumber|ListPrice|두께|ModifiedDate|  
|---------------|----------|-------------------|---------------|------------|------------------|  
|`000680`|`HL Road Frame - Black, 58`|`#FR-R92B-58`|`$1,431.50`|`1016.040`|`3/11/2004`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">.NET의 서식 지정 형식</related>
      </Docs>
    </Member>
    <Member MemberName="ExtractValuesFromCell">
      <MemberSignature Language="C#" Value="public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExtractValuesFromCell(class System.Collections.Specialized.IOrderedDictionary dictionary, class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExtractValuesFromCell (dictionary As IOrderedDictionary, cell As DataControlFieldCell, rowState As DataControlRowState, includeReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ExtractValuesFromCell(System::Collections::Specialized::IOrderedDictionary ^ dictionary, System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="F#" Value="override this.ExtractValuesFromCell : System.Collections.Specialized.IOrderedDictionary * System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState * bool -&gt; unit" Usage="boundField.ExtractValuesFromCell (dictionary, cell, rowState, includeReadOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="includeReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dictionary">지정된 셀의 값을 저장하는 데 사용되는 <see cref="T:System.Collections.IDictionary" />입니다.</param>
        <param name="cell">검색할 값이 들어 있는 <see cref="T:System.Web.UI.WebControls.TableCell" />입니다.</param>
        <param name="rowState"><see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 값 중 하나입니다.</param>
        <param name="includeReadOnly">읽기 전용 필드의 값을 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>지정된 <see cref="T:System.Collections.IDictionary" /> 개체를 지정된 <see cref="T:System.Web.UI.WebControls.TableCell" /> 개체의 값으로 채웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell%2A> 메서드는 지정 된 필드의 값을 검색 하는 편리한 방법으로 제공 됩니다 <xref:System.Web.UI.WebControls.TableCell> 개체를 <xref:System.Web.UI.WebControls.BoundField> 개체입니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자에 의해 사용됩니다.  
  
 이 메서드는 값을 반환하지 않습니다. 통해 참조 하 여 필드 값이 반환 하는 대신 합니다 <xref:System.Collections.IDictionary?displayProperty=nameWithType> 를 위해 전달 된 개체는 `dictionary` 매개 변수입니다. 메서드를 호출한 후에 반복을 <xref:System.Collections.IDictionary?displayProperty=nameWithType> 필드 값에 액세스 하는 개체입니다.  
  
> [!NOTE]
>  경우는 <xref:System.Web.UI.WebControls.TableCell> 읽기 전용 필드 값을 포함 하는 개체를 전달 해야 합니다 `true` 에 대 한는 `includeReadOnly` 매개 변수에 해당 값을 포함 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
      </Docs>
    </Member>
    <Member MemberName="FormatDataValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataValue (object dataValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataValue(object dataValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataValue (dataValue As Object, encode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataValue(System::Object ^ dataValue, bool encode);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataValue : obj * bool -&gt; string&#xA;override this.FormatDataValue : obj * bool -&gt; string" Usage="boundField.FormatDataValue (dataValue, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataValue" Type="System.Object" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataValue">형식을 지정할 필드 값입니다.</param>
        <param name="encode">값을 인코딩하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.BoundField" /> 개체의 셀에 대해 지정된 필드 값의 형식을 지정합니다.</summary>
        <returns><see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />에 지정된 형식으로 변환된 필드 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.BoundField.FormatDataValue%2A> 메서드를 사용 하 여 지정 된 형식 필드 값을 변환 하는 도우미 메서드는는 <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 속성입니다. 필드 값이 null 인 경우 값은 <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> 속성이 반환 됩니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자에 의해 사용됩니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.BoundField" /> 클래스 사용자 지정 서식 지정 루틴을 수행 하려면이 메서드를 재정의할 수 있습니다.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeValue">
      <MemberSignature Language="C#" Value="protected virtual object GetDesignTimeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetDesignTimeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDesignTimeValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetDesignTimeValue();" />
      <MemberSignature Language="F#" Value="abstract member GetDesignTimeValue : unit -&gt; obj&#xA;override this.GetDesignTimeValue : unit -&gt; obj" Usage="boundField.GetDesignTimeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>디자이너에서 <see cref="T:System.Web.UI.WebControls.BoundField" /> 개체를 렌더링하는 경우 필드 값에 사용되는 값을 검색합니다.</summary>
        <returns>디자이너에 필드 값으로 표시할 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> 메서드는 렌더링할 때 필드에 대해 표시할 값을 결정 하는 데 사용 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.BoundField> 디자이너에서 개체입니다. 디자인 타임에 데이터 원본의 실제 데이터를 검색할 수 없으면,이 메서드에서 반환 된 값 대신 표시 됩니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자에 의해 사용됩니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.BoundField" /> 클래스 디자이너에서 필드에 표시할 다른 값을 반환 하려면이 메서드를 재정의할 수 있습니다.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="protected virtual object GetValue (System.Web.UI.Control controlContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetValue(class System.Web.UI.Control controlContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetValue (controlContainer As Control) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetValue(System::Web::UI::Control ^ controlContainer);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : System.Web.UI.Control -&gt; obj&#xA;override this.GetValue : System.Web.UI.Control -&gt; obj" Usage="boundField.GetValue controlContainer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlContainer" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="controlContainer">필드 값의 컨테이너입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.BoundField" /> 개체에 바인딩된 필드 값을 검색합니다.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.BoundField" />에 바인딩된 필드 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.GetValue%2A> 필드의 값을 확인 하는 데 사용 하는 도우미 메서드입니다. 경우는 <xref:System.Web.UI.WebControls.BoundField> 에서 반환 되는 값 개체는 디자이너에 표시 되는 디자인 타임에 확인할 수 없는 필드 값을는 <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> 메서드는 실제 필드 값 대신 반환 됩니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자에 의해 사용됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><paramref name="controlContainer" /> 매개 변수로 지정된 컨테이너가 <see langword="null" />인 경우  
  
또는 
<paramref name="controlContainer" /> 매개 변수로 지정된 컨테이너에 데이터 항목이 없는 경우  
  
또는 
데이터 필드를 찾을 수 없는 경우</exception>
        <block subset="none" type="overrides"><para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.BoundField" /> 클래스 필드의 값을 확인 하는 사용자 지정 루틴을 제공 하려면이 메서드를 재정의할 수 있습니다.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>데이터 컨트롤의 머리글에 표시되는 텍스트를 가져오거나 설정합니다.</summary>
        <value>데이터 컨트롤의 머리글에 표시되는 텍스트입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> 친숙 한 이름의 데이터 컨트롤에 있는 필드를 식별 하는 속성입니다. 가장 일반적인 애플리케이션을 <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> 속성의 데이터 바인딩된 필드에 의미 있는 열 이름을 제공 하는 것을 <xref:System.Web.UI.WebControls.GridView> 또는 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>필드 값이 <see cref="T:System.Web.UI.WebControls.BoundField" /> 개체에 표시되기 전에 HTML로 인코딩되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>필드 값이 <see cref="T:System.Web.UI.WebControls.BoundField" /> 개체에 표시되기 전에 HTML로 인코딩되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> 필드 값에 표시 되기 전에 해당 문자열 표현에 HTML 인코딩 되는지 여부를 지정 하는 속성을 <xref:System.Web.UI.WebControls.BoundField> 개체입니다. 예를 들어가이 속성은 `true`, 문자열 값 "\<스크립트 >"으로 렌더링 됩니다 "&lt;스크립트&gt;"입니다. 이 속성이 `false`, 문자열을 렌더링할 수는 변경 되지 않습니다.  
  
> [!NOTE]
>  HTML 인코딩 필드 값은 사이트 간 스크립팅 공격 및 악의적인 콘텐츠가 표시 되지 않도록 방지 하는 데 도움이 됩니다. 가능 하면이 속성을 설정 되어야 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> 속성 필드 값에 표시 되기 전에 HTML로 인코딩 되는 것을 못하도록를 <xref:System.Web.UI.WebControls.BoundField> 개체입니다.  
  
 [!code-aspx-csharp[BoundFieldHtmlEncode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldHtmlEncode/CS/BoundFieldHtmlEncodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldHtmlEncode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldHtmlEncode/VB/BoundFieldHtmlEncodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncodeFormatString">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncodeFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncodeFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncodeFormatString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncodeFormatString { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncodeFormatString : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> 속성을 <see cref="T:System.Web.UI.WebControls.BoundField" /> 값으로 적용하여 만들어지는 텍스트를 표시할 때 HTML 인코딩해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>텍스트를 HTML 인코딩해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 HTML 인코딩 값 방지할 수 있습니다 사이트 간 스크립팅 공격 및 악의적인 콘텐츠가 표시 되지 않도록 합니다. 도 HTML 인코딩으로 유용한 문자열을 표시 하는 등 브라우저에서 HTML 코드를 표시 하려는 경우 "\<b r / >" 줄 바꿈을 삽입 하는 대신 (`<br/>` 요소) 페이지에 있습니다.  
  
> [!NOTE]
>  이 속성은 ASP.NET 3.5의 새로운 기능입니다. 이 속성을 설정 `false` 의 기본 동작을 복원 합니다 <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 3.5 보다 이전 버전의 ASP.NET에는 속성입니다. 자세한 내용은 <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 속성을 참조하세요.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override bool Initialize (bool enableSorting, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Initialize(bool enableSorting, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Initialize(bool enableSorting, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Initialize : bool * System.Web.UI.Control -&gt; bool" Usage="boundField.Initialize (enableSorting, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enableSorting" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="enableSorting">정렬이 지원되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <param name="control"><see cref="T:System.Web.UI.WebControls.BoundField" />를 소유하는 데이터 컨트롤입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.BoundField" /> 개체를 초기화합니다.</summary>
        <returns>모든 경우에 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.Initialize%2A> 메서드는 데이터 컨트롤에 의해 호출 됩니다는 <xref:System.Web.UI.WebControls.BoundField> 개체에 대 한 기본 개체 초기화를 수행 하려면 연결 된 필드를 행 컬렉션에 추가 되기 전에 필드의 인스턴스. 데이터와 같은 컨트롤 <xref:System.Web.UI.WebControls.DetailsView> 하 고 <xref:System.Web.UI.WebControls.GridView> 호출을 <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> 에서 메서드 해당 `CreateChildControls` 와 같은 다른 메서드보다 먼저 메서드 `CreateRow` 데이터를 사용 하 여 특정 행을 만들기 위해 호출 됩니다.  
  
 사용 하는 컨트롤을 데이터 바인딩된 사용자 지정을 작성 하는 경우이 메서드 호출 <xref:System.Web.UI.WebControls.TableCell> 개체에 대 한 기본 초기화를 수행 하는 <xref:System.Web.UI.WebControls.BoundField> 개체입니다. 경우이 메서드를 구현 하 <xref:System.Web.UI.WebControls.BoundField>-전에 파생 된 형식에 개체를 초기화 해야 <xref:System.Web.UI.WebControls.TableCell> 데이터를 사용 하 여 개체 또는 컨트롤을 <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="boundField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">초기화할 <see cref="T:System.Web.UI.WebControls.TableCell" />입니다.</param>
        <param name="cellType"><see cref="T:System.Web.UI.WebControls.DataControlCellType" /> 값 중 하나입니다.</param>
        <param name="rowState"><see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 값 중 하나입니다.</param>
        <param name="rowIndex">행의 인덱스(0부터 시작)입니다.</param>
        <summary>지정된 <see cref="T:System.Web.UI.WebControls.TableCell" /> 개체를 지정된 행 상태로 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> 메서드는 구현한 <xref:System.Web.UI.WebControls.BoundField>-파생 형식 텍스트 및 컨트롤을 추가 하려면를 <xref:System.Web.UI.WebControls.TableCell> 사용자 인터페이스 (UI)를 표시할 테이블을 사용 하는 데이터 컨트롤의 개체입니다. 이러한 데이터 컨트롤은 전체 테이블 구조에서 행을 만들 때 컨트롤의 `CreateChildControls` 메서드가 호출 됩니다. 합니다 <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> 메서드를 호출 합니다 `InitializeRow` 메서드의 데이터와 같은 컨트롤 <xref:System.Web.UI.WebControls.DetailsView> 및 <xref:System.Web.UI.WebControls.GridView>합니다.  
  
 사용 하는 컨트롤을 데이터 바인딩된 사용자 지정을 작성 하는 경우이 메서드는 호출 하 여 <xref:System.Web.UI.WebControls.TableCell> 개체의 데이터 또는 컨트롤을 사용 하 여 테이블 구조 셀을 초기화 합니다. 작성 하는 경우이 메서드를 구현 된 <xref:System.Web.UI.WebControls.BoundField>-클래스를 파생 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeDataCell">
      <MemberSignature Language="C#" Value="protected virtual void InitializeDataCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeDataCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeDataCell (cell As DataControlFieldCell, rowState As DataControlRowState)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeDataCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberSignature Language="F#" Value="abstract member InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit&#xA;override this.InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit" Usage="boundField.InitializeDataCell (cell, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="cell">초기화할 <see cref="T:System.Web.UI.WebControls.TableCell" />입니다.</param>
        <param name="rowState"><see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 값 중 하나입니다.</param>
        <summary>지정된 <see cref="T:System.Web.UI.WebControls.TableCell" /> 개체를 지정된 행 상태로 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.BoundField.InitializeDataCell%2A> 의 셀을 초기화 하는 데 사용 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.BoundField> 개체입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.BoundField" /> 클래스는 사용자 지정 초기화 루틴을 수행 하려면이 메서드를 재정의할 수 있습니다.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="boundField.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">복원할 컨트롤 상태를 나타냅니다.</param>
        <summary>이 필드에 대해 이전에 저장된 뷰 상태 정보를 복원합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public virtual string NullDisplayText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NullDisplayText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullDisplayText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>필드 값이 null인 경우 해당 필드에 대해 표시되는 캡션을 가져오거나 설정합니다.</summary>
        <value>필드 값이 null인 경우 해당 필드에 대해 표시되는 캡션입니다. 기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우에 따라 필드 값을 데이터 원본에 null로 저장 됩니다. 사용자 지정 설정 하 여 null 값이 있는 필드에 대해 표시할 캡션을 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> 속성입니다. Null 필드 값에 빈 문자열로 표시 되는이 속성을 설정 하지 않으면 (""). 레코드 값을 입력할 경우 데이터 바인딩된 컨트롤에서 삽입 하거나 업데이트할이 속성으로 지정이 빈 문자열) (제외 데이터 바인딩된 컨트롤에서 필드에 대 한 데이터 소스의 값은 null로 자동으로 변환 합니다.  
  
> [!NOTE]
>  빈 문자열 필드 값을 null 값을 변환 하려면 설정 합니다 <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> 속성을 `true`입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> 속성을 통해 사용자 지정 필드를 null 값에 대해 표시할 캡션을 지정 합니다.  
  
 [!code-aspx-csharp[BoundFieldNullDisplayText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldNullDisplayText/CS/boundfieldnulldisplaytextcs.aspx#1)]
 [!code-aspx-vb[BoundFieldNullDisplayText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldNullDisplayText/VB/boundfieldnulldisplaytextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="OnDataBindField">
      <MemberSignature Language="C#" Value="protected virtual void OnDataBindField (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataBindField(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataBindField (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataBindField(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataBindField : obj * EventArgs -&gt; unit&#xA;override this.OnDataBindField : obj * EventArgs -&gt; unit" Usage="boundField.OnDataBindField (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">이벤트 소스입니다.</param>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>필드 값을 <see cref="T:System.Web.UI.WebControls.BoundField" /> 개체에 바인딩합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A> 메서드는 해당 셀에 데이터 소스의 필드의 값을 바인딩하는 데 사용 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.BoundField> 개체입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">필드 값이 바인딩된 컨트롤이 <see cref="T:System.Web.UI.WebControls.TextBox" /> 또는 <see cref="T:System.Web.UI.WebControls.TableCell" />이 아닌 경우</exception>
        <block subset="none" type="overrides"><para>확장 하는 경우는 <see cref="T:System.Web.UI.WebControls.BoundField" /> 클래스는 사용자 지정 바인딩을 루틴을 수행 하려면이 메서드를 재정의할 수 있습니다.</para></block>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.Web.HttpException" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>편집 모드에서 필드 값을 수정할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>편집 모드에서 필드 값을 수정할 수 없으면 <see langword="true" />이고, 수정할 수 있으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> 에 표시 되는 값을 방지 하려면 속성을 <xref:System.Web.UI.WebControls.BoundField> 수정 되지 않도록 개체입니다. 데이터 바인딩된 컨트롤을 편집 모드의 경우 읽기 전용 필드는 편집 컨트롤 없이 일반 텍스트로 표시 됩니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> 속성은 편집 모드에만 적용 됩니다. 필드 삽입 모드에 표시 되지 않도록 하려면 사용 된 <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> 속성에 표시 되는 키 필드의 값을 방지 하기 위해는 <xref:System.Web.UI.WebControls.BoundField> 편집 모드에서 수정할 개체.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
      </Docs>
    </Member>
    <Member MemberName="SupportsHtmlEncode">
      <MemberSignature Language="C#" Value="protected virtual bool SupportsHtmlEncode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsHtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SupportsHtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool SupportsHtmlEncode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsHtmlEncode : bool" Usage="System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.BoundField" /> 개체에서 HTML 인코딩을 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.BoundField" />에서 HTML 인코딩을 지원함을 나타내는 <see langword="true" />를 항상 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode%2A> 속성은에서 사용 하는 도우미 속성을 <xref:System.Web.UI.WebControls.BoundField> 클래스 및 클래스에 의해 HTML 인코딩을 지원 되는지 여부를 확인 하기 위해 파생된 클래스입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 하는 경우는 <see cref="T:System.Web.UI.WebControls.BoundField" /> 클래스 HTML 인코딩 클래스에 의해 지원 되는지 여부를 나타내려면이 속성을 재정의할 수 있습니다.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="ThisExpression">
      <MemberSignature Language="C#" Value="public static readonly string ThisExpression;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ThisExpression" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ThisExpression As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ThisExpression;" />
      <MemberSignature Language="F#" Value=" staticval mutable ThisExpression : string" Usage="System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>"이" 식을 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 필드는 나타내는 데는 <xref:System.Web.UI.WebControls.BoundField> 자체 보다는 데이터 원본의 필드를 데이터 원본에 대해 개체 바인딩해야 합니다. 이 경우 개체의 `ToString` 값 필드에 표시 됩니다.  
  
 이 필드는 주로 컨트롤 개발자가 사용 됩니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRequestMode : System.Web.UI.ValidateRequestMode with get, set" Usage="System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤이 클라이언트 입력의 유효성을 검사하는지 여부를 결정하는 값을 가져오거나 설정합니다.</summary>
        <value>컨트롤이 클라이언트 입력의 유효성을 검사하는지 여부를 결정하는 값입니다. 기본값은 <see cref="F:System.Web.UI.ValidateRequestMode.Inherit" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberSignature Language="F#" Value="override this.ValidateSupportsCallback : unit -&gt; unit" Usage="boundField.ValidateSupportsCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.BoundField" /> 개체에 들어 있는 컨트롤에서 콜백이 지원되는지 여부를 확인합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback%2A> 메서드는 컨트롤의 포함 여부를 확인 하는 데 사용 하는 도우미 메서드는 <xref:System.Web.UI.WebControls.BoundField> 콜백이 지원 개체입니다. 이 메서드가 콜백이 지원는 빈 메서드 (코드 포함 하지 않는 메서드)로 구현 되었습니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자에 의해 사용됩니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 된 클래스는 <see cref="T:System.Web.UI.WebControls.BoundField" /> 클래스 필드 지원 콜백을 통해 컨트롤 포함 여부를 나타내기 위해이 메서드를 재정의할 수 있습니다. 콜백이 지원을 나타내기 위해이 메서드를 구현으로 예외를 throw 하지 않는 빈 메서드 이 고, 그렇지 콜백을 지원 하지 않습니다 이유를 설명 하는 유용한 메시지와 함께 예외를 throw 합니다.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback" />
      </Docs>
    </Member>
  </Members>
</Type>