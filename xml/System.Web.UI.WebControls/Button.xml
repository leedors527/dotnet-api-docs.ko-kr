<Type Name="Button" FullName="System.Web.UI.WebControls.Button">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b8935743644901794aa0e1a2e2580b399162653e" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57911280" /></Metadata><TypeSignature Language="C#" Value="public class Button : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Button extends System.Web.UI.WebControls.WebControl implements class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IButtonControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Button" />
  <TypeSignature Language="VB.NET" Value="Public Class Button&#xA;Inherits WebControl&#xA;Implements IButtonControl, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Button : System::Web::UI::WebControls::WebControl, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IButtonControl" />
  <TypeSignature Language="F#" Value="type Button = class&#xA;    inherit WebControl&#xA;    interface IButtonControl&#xA;    interface IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IButtonControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Button runat="server" Text="Button"&gt;&lt;/{0}:Button&gt;")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Button runat=server Text="Button"&gt;&lt;/{0}:Button&gt;")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>웹 페이지에 누름 단추 컨트롤을 표시합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 항목 내용  
  
-   [소개](#Introduction)  
  
-   [서버 이벤트 및 포스트백 동작을 단추](#ButtonPostbackBehaviorandServerEvents)  
  
-   [클라이언트 스크립트에서 처리 단추 이벤트](#HandlingButtonEventsinClientScript)  
  
-   [단추 컨트롤 및 유효성 검사](#ButtonControlsAndValidation)  
  
-   [데이터 컨트롤의 단추](#ButtonsInDataControls)  
  
-   [컨트롤에 데이터 바인딩](#BindingDataToTheControls)  
  
-   [UpdatePanel 컨트롤을 사용 하 여 단추를 사용 하 여](#UsingButtonsWithUpdatePanelControls)  
  
-   [선언 구문](#DeclarativeSyntax)  
  
<a name="Introduction"></a>   
## <a name="introduction"></a>소개  
 사용 된 <xref:System.Web.UI.WebControls.Button> 페이지를 서버에 게시할 수 있게 해 주는 웹 페이지에 누름 단추를 만들기 위해 컨트롤입니다. 컨트롤의 포스트백에 응답할 처리할 수 있는 서버 코드에서 이벤트를 트리거합니다. 또한 페이지를 게시 하거나 실행 하 고 다음 페이지의 제출을 취소할 수 있는 전에 처리할 수 있는 클라이언트 스크립트에서 이벤트를 발생 시킬 수 있기 합니다.  
  
> [!NOTE]
>  ASP.NET 웹 페이지에 각각 다르게 표시 되는 단추 컨트롤의 여러 종류를 포함 합니다. <xref:System.Web.UI.WebControls.Button> 누름 단추;으로 렌더링 하는 컨트롤을 <xref:System.Web.UI.WebControls.LinkButton> ; 링크로 렌더링 하는 컨트롤 및 <xref:System.Web.UI.WebControls.ImageButton> ; 이미지로 렌더링 하는 컨트롤 및 <xref:System.Web.UI.WebControls.ImageMap> 스폿이 있는 그래픽을 만들 수 있는 컨트롤 사용자가 클릭 수 있습니다. 기본적으로 모든 단추 컨트롤 클릭 하면 페이지를 제출 합니다. 사용할 수도 있습니다는 <xref:System.Web.UI.HtmlControls.HtmlButton> 및 <xref:System.Web.UI.HtmlControls.HtmlInputButton> 서버 코드로 프로그래밍할 수 있는 컨트롤 페이지의 단추를 만들 수 있습니다. HTML 및 웹 서버 컨트롤 간의 차이점에 대 한 자세한 내용은 참조 하세요 [ASP.NET 웹 서버 컨트롤 개요](https://msdn.microsoft.com/library/0d4854a3-6e79-4b7b-a27f-ac57cd9c2a84)합니다.  
  
 기본적으로 <xref:System.Web.UI.WebControls.Button> 컨트롤은 제출 단추. 제출 단추 명령 이름 없는 (에 지정 된는 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성) 서버에 웹 페이지를 다시 게시 하기만 하면 단추와 연결 합니다. 에 대 한 이벤트 처리기를 제공할 수 있습니다는 <xref:System.Web.UI.WebControls.Button.Click> 제출 단추를 클릭할 때 이벤트는 작업을 프로그래밍 방식으로 제어를 수행 합니다.  
  
 명령 단추와 같은 단추를 사용 하 여 연결 하는 명령 이름을 가집니다 `Sort`를 설정 하 여는 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성입니다. 이렇게 하면 여러 개 만들 수 있습니다 <xref:System.Web.UI.WebControls.Button> 웹 페이지 컨트롤과 프로그래밍 방식으로 결정 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 합니다. 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 등을 수행 하려면 명령에 대 한 추가 정보를 제공 하는 명령 단추를 사용 하 여 속성 `Ascending`합니다. 에 대 한 이벤트 처리기를 제공할 수 있습니다는 <xref:System.Web.UI.WebControls.Button.Command> 명령 단추를 클릭할 때 이벤트는 작업을 프로그래밍 방식으로 제어를 수행 합니다.  
  
<a name="ButtonPostbackBehaviorandServerEvents"></a>   
## <a name="button-postback-behavior-and-server-events"></a>서버 이벤트 및 포스트백 동작을 단추  
 사용자가 모든 웹 서버 컨트롤 단추를 클릭 하면 페이지는 서버에 전송 됩니다. 이렇게 하면 처리할 웹 페이지 및 보류 중인 이벤트 서버 기반 코드에서 발생 합니다. 모든 페이지 및 컨트롤 처리가 완료 되 면 페이지 자체 브라우저를 다시 렌더링 합니다.  
  
 단추를 발생 시킬 수는 자신의 <xref:System.Web.UI.WebControls.Button.Click> 이벤트 또는 <xref:System.Web.UI.WebControls.Button.Command> 이벤트는 서버 기반 코드를 사용 하 여 처리할 수 있습니다. 이 단추의 클라이언트 기반 웹 응용 프로그램 또는 기존 HTML 페이지에서 이벤트와 다릅니다 `onclick` 클라이언트에서 실행 되는 JavaScript를 사용 하 여 이벤트를 처리 합니다. 자세한 내용은 [ASP.NET Web Forms 서버 컨트롤 이벤트 모델](https://msdn.microsoft.com/library/6304bff7-1b0e-4641-8acb-6d3b0badc4a3)합니다.  
  
 사용자가 단추 컨트롤을 클릭 하는 경우 페이지는 서버에 다시 게시 됩니다. 기본적으로 페이지는 자신에 게 다시 게시  
  
 현재 페이지를 다른 페이지에 게시 하는 단추를 구성할 수 있습니다. 이 다중 페이지 폼을 만들도록 유용할 수 있습니다. 자세한 내용은 참조 하세요 [ASP.NET Web Forms에서 페이지 간 게시](https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b)합니다.  
  
<a name="HandlingButtonEventsinClientScript"></a>   
## <a name="handling-button-events-in-client-script"></a>클라이언트 스크립트에서 처리 단추 이벤트  
 단추 컨트롤에는 서버 이벤트와 클라이언트 이벤트 발생 시킬 수 있습니다. 서버 이벤트 포스트백 이후에 발생 하 고 페이지에 대해 작성 하는 서버 쪽 코드에서 처리 됩니다. 클라이언트 이벤트 ECMAScript (JavaScript) 일반적으로 클라이언트 스크립트에서 처리 되는 및 페이지 전송 되기 전에 발생 합니다. ASP.NET 단추 컨트롤 클라이언트 쪽 이벤트를 더하여 페이지를 제출 하기 전에 확인 대화 상자를 표시 하는 등의 작업을 수행할 수 있으며 제출을 잠재적으로 취소할 수 있습니다. 세부 정보를 참조 하세요 [ASP.NET 웹 페이지에서 클라이언트 스크립트](https://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa) 고 [방법: 클라이언트 스크립트에서 단추 웹 서버 컨트롤 이벤트에 응답할](https://msdn.microsoft.com/library/1ab97f0b-1c38-4897-85b0-ac915f6a182b)합니다.  
  
 수도 있습니다는 <xref:System.Web.UI.WebControls.Button> 또한 클라이언트 스크립트를 사용 하 여 (HTTP POST 작업을 수행 하면 됩니다) 대신 포스트백을 수행 하는 컨트롤입니다. 이 페이지의 다른 요소에 연결 하는 등의 포스트백을 프로그래밍 방식으로 조작 하려는 경우에 유용할 수 있습니다. 설정할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.Button> 컨트롤의 <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> 속성을 `true` 시킬는 <xref:System.Web.UI.WebControls.Button> 클라이언트 스크립트를 사용 하 여 컨트롤이 포스트백을 기준 합니다.  
  
<a name="ButtonControlsAndValidation"></a>   
## <a name="button-controls-and-validation"></a>단추 컨트롤 및 유효성 검사  
 페이지를 기본적으로 ASP.NET 유효성 검사기 컨트롤이 있으면 단추 컨트롤을 클릭 컨트롤이 유효성 검사기에서 검사를 수행 합니다. 에 대해 유효성 검사 컨트롤이 클라이언트 쪽 유효성 검사를 사용 하는 경우 페이지 유효성 검사에 실패 한 경우 전송 되지 않습니다.  
  
 다음 표에서 유효성 검사 프로세스를 보다 정확 하 게 제어할 수 있도록 하는 단추 컨트롤을 지 원하는 속성을 설명 합니다.  
  
|속성|설명|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>|지정 여부를 단추를 클릭 하면 유효성 검사도 수행 합니다. 이 속성을 설정 `false` 유효성 검사를 방지 하기 위해.|  
|<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>|단추를 클릭할 때 호출 되는 페이지의 유효성 검사기를 지정할 수 있습니다. 없는 유효성 검사 그룹을 설정 하는 경우 모든 페이지에는 유효성 검사기의 단추 클릭을 호출 합니다.|  
  
 자세한 내용은 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)를 참조하세요.  
  
<a name="ButtonsInDataControls"></a>   
## <a name="buttons-in-data-controls"></a>데이터 컨트롤의 단추  
 Button 웹 서버 컨트롤은 데이터 컨트롤에서와 같이에서는 흔히 합니다 <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.GridView>, 및 <xref:System.Web.UI.WebControls.Repeater> 목록 컨트롤입니다. 이러한 경우에 일반적으로 응답 하지 않으면 단추에 직접 이벤트를 클릭 합니다. 대신 데이터 컨트롤의 단추에는 데이터 컨트롤에 관련 된 이벤트를 발생 시킵니다. 예를 들어,를 <xref:System.Web.UI.WebControls.DataList> 컨트롤 단추 발생할 합니다 <xref:System.Web.UI.WebControls.DataList> 컨트롤의 <xref:System.Web.UI.WebControls.DataList.ItemCommand> 이벤트를 발생 시키는 대신를 <xref:System.Web.UI.WebControls.Button> 컨트롤의 <xref:System.Web.UI.WebControls.Button.Click> 이벤트입니다.  
  
 데이터 바인딩된 목록 컨트롤에서 여러 단추를 포함할 수 있으므로 단추를 설정할 수 있습니다 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 이벤트의 일부로 전달 하는 값을 지정 하는 속성입니다. 클릭 된 단추를 보려면이 인수에 대해 테스트할 수 있습니다.  
  
<a name="BindingDataToTheControls"></a>   
## <a name="binding-data-to-the-controls"></a>컨트롤에 데이터 바인딩  
 해당 속성 설정을 제어 하기 위해 데이터 원본 단추 웹 서버 컨트롤을 바인딩할 수 있습니다 동적으로 합니다. 예를 들어, 단추를 설정할 수 있습니다 <xref:System.Web.UI.WebControls.Button.Text%2A> 데이터 바인딩을 사용 하 여 속성입니다.  
  
<a name="UsingButtonsWithUpdatePanelControls"></a>   
## <a name="using-buttons-with-updatepanel-controls"></a>UpdatePanel 컨트롤을 사용 하 여 단추를 사용 하 여  
 부분 페이지 렌더링을 사용 하면 부분 포스트백 없이 페이지를 새로 고칠 수 있습니다. <xref:System.Web.UI.UpdatePanel> 컨트롤을 사용 하면 부분 페이지 렌더링에 참여 하는 페이지의 부분을 표시할 수 있습니다. 기본적으로 내에 있는 컨트롤의 동작을 <xref:System.Web.UI.UpdatePanel> 컨트롤을 포함 하 여 <xref:System.Web.UI.WebControls.Button> 제어, 다시 게시 하는 대신 비동기 포스트백을 수행 하는 것입니다. 내용만 새로 고칩니다는 <xref:System.Web.UI.UpdatePanel> 포스트백 둔에서 제어 합니다.  
  
 시나리오 외에도 <xref:System.Web.UI.WebControls.Button> 내에 있는 컨트롤을 <xref:System.Web.UI.UpdatePanel> 컨트롤을 사용할 수 <xref:System.Web.UI.WebControls.Button> 사용 하 여 제어 <xref:System.Web.UI.UpdatePanel> 컨트롤 같은 시나리오에서:  
  
-   정의 <xref:System.Web.UI.WebControls.Button> 외부에 있는 컨트롤을 <xref:System.Web.UI.UpdatePanel> 컨트롤을 <xref:System.Web.UI.AsyncPostBackTrigger> 해당 패널에 대 한 제어. 단추를 클릭할 때 비동기 포스트백을 수행 하 고 패널의 내용을 새로 고칩니다.  
  
-   정의 <xref:System.Web.UI.WebControls.Button> 내에 있는 컨트롤을 <xref:System.Web.UI.UpdatePanel> 컨트롤을 <xref:System.Web.UI.PostBackTrigger> 패널에 대 한 합니다. 내부 이지만 포스트백을 수행 하기 단추를 클릭할 때는 <xref:System.Web.UI.UpdatePanel> 제어 합니다.  
  
 부분 페이지 렌더링을 사용 하 여에 대 한 자세한 내용은 <xref:System.Web.UI.UpdatePanel> 컨트롤을 참조 하세요 [UpdatePanel 컨트롤 개요](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) 하 고 [부분 페이지 렌더링 개요](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)합니다.  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a>선언 구문  
  
```  
<asp:Button  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CausesValidation="True|False"  
    CommandArgument="string"  
    CommandName="string"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    OnClick="Click event handler"  
    OnClientClick="string"  
    OnCommand="Command event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    PostBackUrl="uri"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    Text="string"  
    ToolTip="string"  
    UseSubmitBehavior="True|False"  
    ValidationGroup="string"  
    Visible="True|False"  
    Width="size"  
/>  
```  
  
   
  
## Examples  
 다음 코드 예제에는 제출을 만드는 방법을 보여 줍니다 <xref:System.Web.UI.WebControls.Button> 웹 페이지 콘텐츠 서버를 다시 게시 하는 컨트롤입니다.  
  
 [!code-aspx-csharp[Classic Button Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Button Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Button Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Button Example/VB/sourcevb.aspx#1)]  
  
 다음 코드 예제에서는 명령을 만드는 방법을 보여 줍니다. <xref:System.Web.UI.WebControls.Button> 목록을 정렬 하는 컨트롤입니다.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
    <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
    <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">웹 서버 컨트롤 단추</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Button ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Button();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Button" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하 여 만들고의 새 인스턴스를 초기화 하는 <xref:System.Web.UI.WebControls.Button> 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 만들고의 새 인스턴스를 초기화 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.Button> 클래스입니다.  
  
 [!code-aspx-csharp[ButtonCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCtor/CS/buttonctorcs.aspx#1)]
 [!code-aspx-vb[ButtonCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCtor/VB/buttonctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">웹 서버 컨트롤 단추</related>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="button.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">클라이언트에서 렌더링할 출력 스트림이 포함된 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>클라이언트에서 렌더링하기 위한 출력 스트림에 <see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤의 특성을 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.Button.AddAttributesToRender%2A> 메서드는 사용자 지정 서버 컨트롤에 있도록는 <xref:System.Web.UI.WebControls.Button> 텍스트가 빨간색으로 항상 표시 됩니다.  
  
 [!code-aspx-csharp[CustomButtonAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomButtonAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorendervb.aspx#1)]  
[!code-csharp[CustomButtonAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorender.cs#2)]
[!code-vb[CustomButtonAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">웹 서버 컨트롤 단추</related>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Web.UI.WebControls.Button.CausesValidation" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CausesValidation</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤을 클릭할 때 유효성 검사가 수행되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see langword="true" /> 컨트롤을 클릭할 때 유효성 검사가 수행되면 <see cref="T:System.Web.UI.WebControls.Button" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로 페이지 유효성 검사가 수행 됩니다 때를 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 합니다. 페이지 유효성 검사 입력된 컨트롤이 유효성 검사 컨트롤에 의해 지정 된 유효성 검사 규칙을 통과 모든 페이지의 유효성 검사 컨트롤과 연결 된 여부를 결정 합니다.  
  
 지정 하거나 클라이언트와 서버 모두에서 유효성 검사를 수행할지 여부를 확인할 수 있습니다 때를 <xref:System.Web.UI.WebControls.Button> 컨트롤을 사용 하 여 클릭을 <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> 속성입니다. 유효성 검사가 수행 되지를 방지 하려면 설정 합니다 <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> 속성을 `false`입니다.  
  
> [!NOTE]
>  설정 해야 합니다 <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> 속성을 `false` 사용 하는 경우는 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 다른 페이지에 다시 게시 하는 속성입니다. 다른 페이지를 다시 게시 하는 경우에 명시적으로 유효성 검사를 확인 해야 합니다. 예를 들어의 설명 섹션을 참조 하세요.를 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 속성입니다.  
  
 이 일반적으로 속성 `false` 에 대 한는 `reset` 또는 `clear` 유효성 검사 단추를 클릭할 때 수행 되지 않도록 합니다.  
  
 때 값을 <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> 속성이로 설정 되어 `true`를 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> 는 유효성 검사 그룹의 이름을 지정 하는 속성은 <xref:System.Web.UI.WebControls.Button> 컨트롤이 유효성 검사.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 <xref:System.Web.UI.ThemeableAttribute> 하 고 [ASP.NET 테마 및 스킨](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> 페이지 유효성 검사가 수행 되지 않도록 하는 속성입니다. <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> 메서드 각 유효성 검사 컨트롤을 독립적으로 활성화 합니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[ButtonControlCausesValidation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonControlCausesValidation/CS/buttoncausesvalidationcs.aspx#1)]
 [!code-aspx-vb[ButtonControlCausesValidation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonControlCausesValidation/VB/buttoncausesvalidationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.Button.ValidationGroup" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">웹 서버 컨트롤 단추</related>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Button.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Click</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤을 클릭하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.Click> 이벤트는 때를 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 합니다. 명령 이름이 없는 연결 된 경우에 일반적으로이 이벤트는는 <xref:System.Web.UI.WebControls.Button> 컨트롤 (예를 들어, 전송 단추).  
  
 이벤트 처리에 대한 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 을 참조하십시오.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고 이벤트 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.Button.Click> 때 웹에서 메시지를 표시 하기 위해 이벤트 페이지는 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 합니다.  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">웹 서버 컨트롤 단추</related>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.CommandEventHandler Command;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.CommandEventHandler Command" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Button.Command" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Command As CommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Web::UI::WebControls::CommandEventHandler ^ Command;" />
      <MemberSignature Language="F#" Value="member this.Command : System.Web.UI.WebControls.CommandEventHandler " Usage="member this.Command : System.Web.UI.WebControls.CommandEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Command</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤을 클릭하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.Command> 이벤트는 때를 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 합니다. 이 이벤트는 경우 명령 이름, 일반적으로 사용 됩니다와 같은 `Sort`, 연관 된는 <xref:System.Web.UI.WebControls.Button> 제어 합니다. 이렇게 하면 여러 개 만들 수 있습니다 <xref:System.Web.UI.WebControls.Button> 웹 페이지 컨트롤과 프로그래밍 방식으로 결정 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 합니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Button.Command> 의 형태로 컨트롤 계층 구조를 통해 이벤트가 발생 합니다 `BubbleEvent`합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고 이벤트 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.Button.Command> 목록을 정렬 하는 이벤트 때는 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 합니다. 이 예제에서는 이벤트 처리기를 선언적으로 사용 하 여 지정 합니다 <xref:System.Web.UI.WebControls.Button.OnClick%2A> 의 속성을 <xref:System.Web.UI.WebControls.Button> 컨트롤.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 다음 코드 예제에는 이벤트 처리기를 지정 하 여 프로그래밍 방식으로 이벤트에 추가 하는 방법을 보여 줍니다.는 `Page_Load` 메서드.  
  
 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">웹 서버 컨트롤 단추</related>
      </Docs>
    </Member>
    <Member MemberName="CommandArgument">
      <MemberSignature Language="C#" Value="public string CommandArgument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandArgument" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandArgument As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandArgument { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandArgument : string with get, set" Usage="System.Web.UI.WebControls.Button.CommandArgument" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandArgument</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>연결된 <see cref="E:System.Web.UI.WebControls.Button.Command" />과 함께 <see cref="P:System.Web.UI.WebControls.Button.CommandName" /> 이벤트에 전달되는 선택적 매개 변수를 가져오거나 설정합니다.</summary>
        <value>연결된 <see cref="E:System.Web.UI.WebControls.Button.Command" />과 함께 <see cref="P:System.Web.UI.WebControls.Button.CommandName" /> 이벤트에 전달되는 선택적 매개 변수입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 보완 하는 매개 변수를 지정 하는 속성을 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성입니다.  
  
> [!NOTE]
>  설정할 수 있지만 합니다 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 자체로 속성인 것이 일반적으로 경우에 사용 합니다 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성도 설정 됩니다.  
  
 합니다 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 속성 보완을 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 수행할 명령에 대 한 추가 정보를 제공할 수 있도록 하 여 속성입니다. 예를 들어, 설정 하는 경우는 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 속성을 `Sort` 및 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 속성을 `Ascending`를 오름차순으로 정렬 하는 명령을 지정 합니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 <xref:System.Web.UI.ThemeableAttribute> 하 고 [ASP.NET 테마 및 스킨](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 만들려면 속성을 <xref:System.Web.UI.WebControls.Button> 목록을 오름차순으로 정렬 된 제어.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">웹 서버 컨트롤 단추</related>
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string with get, set" Usage="System.Web.UI.WebControls.Button.CommandName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Button" /> 이벤트에 전달되는 <see cref="E:System.Web.UI.WebControls.Button.Command" /> 컨트롤과 연결된 명령 이름을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤의 명령 이름입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 여러 개 있는 경우 <xref:System.Web.UI.WebControls.Button> 웹 페이지에 컨트롤을 사용 합니다 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 각각과 관련 된 속성을 지정 하거나 명령 이름을 확인할 <xref:System.Web.UI.WebControls.Button> 컨트롤입니다. 설정할 수 있습니다는 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 수행할 명령을 나타내는 문자열을 사용 합니다. 명령 이름을 프로그래밍 방식으로 확인 한 다음 수는 <xref:System.Web.UI.WebControls.Button> 제어 하 고 적절 한 작업을 수행 합니다.  
  
 명령에 대 한 자세한 내용은 같은 `Ascending`를 사용 하 여 지정할 수는 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 속성.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 <xref:System.Web.UI.ThemeableAttribute> 하 고 [ASP.NET 테마 및 스킨](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 만들 속성을 <xref:System.Web.UI.WebControls.Button> 목록을 정렬 하는 컨트롤입니다.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">웹 서버 컨트롤 단추</related>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackOptions">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.PostBackOptions GetPostBackOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.PostBackOptions GetPostBackOptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.GetPostBackOptions" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPostBackOptions () As PostBackOptions" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::PostBackOptions ^ GetPostBackOptions();" />
      <MemberSignature Language="F#" Value="abstract member GetPostBackOptions : unit -&gt; System.Web.UI.PostBackOptions&#xA;override this.GetPostBackOptions : unit -&gt; System.Web.UI.PostBackOptions" Usage="button.GetPostBackOptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.PostBackOptions" /> 컨트롤의 포스트백 동작을 나타내는 <see cref="T:System.Web.UI.WebControls.Button" /> 개체를 만듭니다.</summary>
        <returns><see cref="T:System.Web.UI.PostBackOptions" /> 컨트롤의 포스트백 동작을 나타내는 <see cref="T:System.Web.UI.WebControls.Button" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Button.GetPostBackOptions%2A> 메서드를 만듭니다를 <xref:System.Web.UI.PostBackOptions> 나타내는 개체를 <xref:System.Web.UI.WebControls.Button> 컨트롤의 포스트백 동작 합니다. <xref:System.Web.UI.PostBackOptions> 개체는 일반적으로 전달 된 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=nameWithType> 메서드를 호출 하는 경우 클라이언트 쪽 스크립트 함수에 대 한 참조를 가져오는 데 사용 됩니다, 서버 페이지를 다시 게시를 사용 하면 합니다.  
  
 이 메서드는 확장 하는 경우 주로 컨트롤 개발자가 사용 되는 <xref:System.Web.UI.WebControls.Button> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의할 수 있습니다는 <see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" /> button 컨트롤에 대 한 다시 게시 옵션을 수정 하거나 단추를 클릭할 때 클라이언트 쪽 스크립트를 호출 하려면 파생된 클래스에서 메서드. 기본 클래스를 호출 해야 <see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" /> 메서드 표준 포스트백 옵션이 설정 되어 있도록 합니다.</para></block>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">웹 서버 컨트롤 단추</related>
        <related type="Article" href="https://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa">ASP.NET 웹 페이지에서 클라이언트 스크립트</related>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClick : EventArgs -&gt; unit&#xA;override this.OnClick : EventArgs -&gt; unit" Usage="button.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.Button.Click" /> 컨트롤의 <see cref="T:System.Web.UI.WebControls.Button" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.Click> 이벤트는 때를 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 합니다. 명령 이름이 없는 연결 된 경우에 일반적으로이 이벤트는는 <xref:System.Web.UI.WebControls.Button> 컨트롤 (예를 들어, 전송 단추).  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.Button.OnClick%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고 이벤트 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.Button.Click> 웹 페이지의 간단한 메시지를 표시 하기 위해 이벤트입니다.  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="T:System.EventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">웹 서버 컨트롤 단추</related>
      </Docs>
    </Member>
    <Member MemberName="OnClientClick">
      <MemberSignature Language="C#" Value="public virtual string OnClientClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnClientClick" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.OnClientClick" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property OnClientClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OnClientClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnClientClick : string with get, set" Usage="System.Web.UI.WebControls.Button.OnClientClick" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤의 <see cref="E:System.Web.UI.WebControls.Button.Click" /> 이벤트가 발생할 경우 실행될 클라이언트측 스크립트를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤의 <see cref="E:System.Web.UI.WebControls.Button.Click" /> 이벤트가 발생할 경우 실행될 클라이언트측 스크립트입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> 때 실행 되는 추가 클라이언트 쪽 스크립트를 지정 하는 속성을 <xref:System.Web.UI.WebControls.Button> 컨트롤의 <xref:System.Web.UI.WebControls.Button.Click> 이벤트가 발생 합니다. 이 속성은 렌더링에 지정 하는 스크립트를 <xref:System.Web.UI.WebControls.Button> 컨트롤의 `OnClick` 미리 정의 된 클라이언트 쪽 스크립트 컨트롤 외에도 특성입니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 <xref:System.Web.UI.ThemeableAttribute> 하 고 [ASP.NET 테마 및 스킨](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 소스 코드를 사용 하 여 Visual Studio 웹 사이트 프로젝트는 다음이 항목과 함께 제공 됩니다. [다운로드](https://go.microsoft.com/fwlink/?LinkId=192871)합니다.  
  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> 때 실행 되는 추가 클라이언트 쪽 스크립트를 지정 하는 속성을 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 합니다.  
  
 [!code-aspx-csharp[Button.OnClientClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.OnClientClick/cs/button.onclientclickcs.aspx#1)]
 [!code-aspx-vb[Button.OnClientClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.OnClientClick/vb/button.onclientclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">웹 서버 컨트롤 단추</related>
      </Docs>
    </Member>
    <Member MemberName="OnCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCommand (System.Web.UI.WebControls.CommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCommand(class System.Web.UI.WebControls.CommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCommand (e As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCommand(System::Web::UI::WebControls::CommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCommand : System.Web.UI.WebControls.CommandEventArgs -&gt; unit&#xA;override this.OnCommand : System.Web.UI.WebControls.CommandEventArgs -&gt; unit" Usage="button.OnCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.Button.Command" /> 컨트롤의 <see cref="T:System.Web.UI.WebControls.Button" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.Command> 이벤트는 때를 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 합니다. 이 이벤트는 경우 명령 이름, 일반적으로 사용 됩니다와 같은 `Sort`, 연관 된는 <xref:System.Web.UI.WebControls.Button> 제어 합니다. 이렇게 하면 여러 개 만들 수 있습니다 <xref:System.Web.UI.WebControls.Button> 웹 페이지 컨트롤과 프로그래밍 방식으로 결정 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 합니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Button.Command> 의 형태로 컨트롤 계층 구조를 통해 이벤트가 발생 합니다 `BubbleEvent`합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.Button.OnCommand%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고 이벤트 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.Button.Command> 목록을 정렬 하는 이벤트 때는 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 합니다. 이 예제에서는 이벤트 처리기를 선언적으로 사용 하 여 지정 합니다 <xref:System.Web.UI.WebControls.Button.OnClick%2A> 의 속성을 <xref:System.Web.UI.WebControls.Button> 컨트롤.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 다음 코드 예제에는 이벤트 처리기를 지정 하 여 프로그래밍 방식으로 이벤트에 추가 하는 방법을 보여 줍니다.는 `Page_Load` 메서드.  
  
 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">웹 서버 컨트롤 단추</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="button.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>클라이언트에 렌더링하기 전에 단추를 클릭했는지 여부를 확인합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Button.OnPreRender%2A> 메서드는 주로 컨트롤 개발자가에서 사용자 지정 클래스를 파생 하는 경우는 <xref:System.Web.UI.WebControls.Button> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">웹 서버 컨트롤 단추</related>
      </Docs>
    </Member>
    <Member MemberName="PostBackUrl">
      <MemberSignature Language="C#" Value="public virtual string PostBackUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PostBackUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.PostBackUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PostBackUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PostBackUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PostBackUrl : string with get, set" Usage="System.Web.UI.WebControls.Button.PostBackUrl" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.PostBackUrl</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.UrlProperty("*.aspx")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤을 클릭했을 때 현재 페이지에서 게시할 웹 페이지의 URL을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤을 클릭했을 때 현재 페이지에서 게시할 웹 페이지의 URL입니다. 기본값은 빈 문자열("")이며, 이 경우 페이지가 자신에게 포스트백됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 속성을 사용 하면 페이지 간 게시를 사용 하 여 수행할 수 있습니다는 <xref:System.Web.UI.WebControls.Button> 제어 합니다.  
  
> [!NOTE]
>  이 속성을 사용 하 여 올바르게 지정 된 경로만 작동합니다. 예를 들어 상대 경로 (Test/default.aspx) 절대 경로 (https://localhost/WebApp/default.aspx) 및 가상 (~ \Test\default.aspx) 제대로 작동 합니다. 잘못 경로 같은 "/ Test/default.aspx" 또는 "\Test\default.aspx" 작동 하지 않습니다. 참조 [ASP.NET 웹 프로젝트 경로](https://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd) 올바른 경로 만들기에 대 한 논의 합니다.  
  
 설정 합니다 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 속성을 게시할 때 대상 웹 페이지의 URL <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 합니다. 예를 들어 지정 `Page2.aspx` 포함 된 페이지가 합니다 <xref:System.Web.UI.WebControls.Button> 에 게시 하는 컨트롤 `Page2.aspx`합니다. 에 대 한 값을 지정 하지 않으면 경우는 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 속성 페이지가 자신에 게 다시 게시 합니다.  
  
> [!IMPORTANT]
>  서버 쪽 유효성 검사를 사용 하 여 컨트롤을 사용 하 여 페이지 간 포스트백을 수행 하는 경우 확인 해야 하는 페이지의 <xref:System.Web.UI.Page.IsValid%2A> 속성은 `true` 포스트백을 처리 하기 전에 합니다. 확인 페이지는 페이지 간 다시 게시의 경우는 <xref:System.Web.UI.Page.PreviousPage%2A>합니다. VB 코드를 다음 이렇게 하는 방법을 보여 줍니다.  
  
```  
Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load  
        If Page.PreviousPage.IsValid Then  
            ' Handle the post back  
        Else  
            Response.Write("Invalid")  
        End If  
End Sub  
```  
  
 페이지 간 게시 방법에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms에서 페이지 간 게시](https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b)합니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 <xref:System.Web.UI.ThemeableAttribute> 하 고 [ASP.NET 테마 및 스킨](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 페이지 간 게시를 수행 하는 속성입니다. 클릭할 때 합니다 <xref:System.Web.UI.WebControls.Button> 컨트롤을 페이지 포스트백에서 지정한 대상 페이지에 텍스트 상자에 입력 된 값을 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 속성. 이 샘플을 실행 하려면이 코드 예제와 동일한 디렉터리에 대상 페이지에 대 한 파일을 만들 수도 있어야 합니다. 대상 페이지의 코드를 다음 예제에 제공 됩니다.  
  
 [!code-aspx-csharp[Button.PostBackUrlProperty#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlProperty/CS/button.postbackurlpropertycs.aspx#1)]
 [!code-aspx-vb[Button.PostBackUrlProperty#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlProperty/VB/button.postbackurlpropertyvb.aspx#1)]  
  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=nameWithType> 속성을 사용 하 여 다른 페이지에서 게시 된 값에 액세스 합니다 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 속성입니다. 이 페이지는 이전 페이지에서 게시 된 사용자에 게 표시 하는 문자열을 가져옵니다. 이 코드 예제를 직접 실행 하려고 하면 오류가 표시 됩니다는 때문에 값을 `text` 필드가 됩니다 `null`합니다. 대신이 코드를 사용 하 여 대상 페이지를 만들고 앞의 예제에 대 한 코드와 동일한 디렉터리에 파일을 배치 합니다. 지정 된 값 파일의 이름은 일치 해야 합니다는 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 이전 예제의 속성입니다. 이전 예제에 대 한 코드를 실행 하면이 페이지가 페이지 간 게시가 발생 하면 자동으로 실행 됩니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[Button.PostBackUrlPage2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlPage2/CS/button.postbackurlpage2cs.aspx#1)]
 [!code-aspx-vb[Button.PostBackUrlPage2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlPage2/VB/button.postbackurlpage2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.PreviousPage" />
        <related type="Article" href="https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b">페이지 간 ASP.NET 웹 페이지에 게시</related>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">웹 서버 컨트롤 단추</related>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="button.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="eventArgument">이벤트의 인수입니다.</param>
        <summary>서버에 포스트백될 때 <see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤에 대한 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트는 내부적으로 사용 합니다 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 하면를 시킬를 <xref:System.Web.UI.WebControls.Button.Click> 이벤트를 정의 하는 경우를 <xref:System.Web.UI.WebControls.Button.Command> 이벤트입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">웹 서버 컨트롤 단추</related>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="button.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">클라이언트에서 HTML 콘텐츠를 렌더링하기 위한 출력 스트림을 나타내는 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체입니다.</param>
        <summary>지정된 작성기에 컨트롤의 내용을 렌더링합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Button.RenderContents%2A> 사용자 지정 텍스트 항상 표시 되도록 컨트롤을 사용자 지정 서버에서 메서드 <xref:System.Web.UI.WebControls.Button> 서버 컨트롤입니다.  
  
 [!code-aspx-csharp[CustomButtonRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomButtonRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontentsvb.aspx#1)]  
[!code-csharp[CustomButtonRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontents.cs#2)]
[!code-vb[CustomButtonRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">웹 서버 컨트롤 단추</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">이벤트의 인수입니다.</param>
        <summary>서버에 포스트백될 때 <see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤에 대한 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트는 내부적으로 사용 합니다 <xref:System.Web.UI.WebControls.Button> 컨트롤을 클릭 하면를 시킬를 <xref:System.Web.UI.WebControls.Button.Click> 이벤트를 정의 하는 경우를 <xref:System.Web.UI.WebControls.Button.Command> 이벤트입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.Button.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A> 메서드는 항상 발생 합니다 <xref:System.Web.UI.WebControls.Button.OnClick%2A> 사용자 지정 이벤트 <xref:System.Web.UI.WebControls.Button> 컨트롤입니다.  
  
 [!code-csharp[CustomButtonRaisePostBackEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/CS/custombuttonraisepostbackevent.cs#2)]
 [!code-vb[CustomButtonRaisePostBackEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/VB/custombuttonraisepostbackevent.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">웹 서버 컨트롤 단추</related>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.Button.Text" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤에 표시할 텍스트 캡션을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤에 표시할 텍스트 캡션입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.Button.Text%2A> 속성을 지정 하거나 표시할 캡션을 결정는 <xref:System.Web.UI.WebControls.Button> 제어 합니다.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Button.Text%2A> 속성에 표시 되는 캡션을 지정 하는 <xref:System.Web.UI.WebControls.Button> 컨트롤입니다.  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">웹 서버 컨트롤 단추</related>
      </Docs>
    </Member>
    <Member MemberName="UseSubmitBehavior">
      <MemberSignature Language="C#" Value="public virtual bool UseSubmitBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSubmitBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.UseSubmitBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UseSubmitBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseSubmitBehavior { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSubmitBehavior : bool with get, set" Usage="System.Web.UI.WebControls.Button.UseSubmitBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤에서 클라이언트 브라우저의 전송 메커니즘을 사용하는지 또는 ASP.NET의 포스트백 메커니즘을 사용하는지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>컨트롤에서 클라이언트 브라우저의 전송 메커니즘을 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> 속성을 지정 여부를 <xref:System.Web.UI.WebControls.Button> 컨트롤은 클라이언트 브라우저의 전송 메커니즘 또는 ASP.NET의 포스트백 메커니즘. 이 속성의 값은 기본적으로 `true`발생을 <xref:System.Web.UI.WebControls.Button> 전송 메커니즘을 브라우저의 사용을 제어 합니다. 지정 하는 경우 `false`, ASP.NET 페이지 프레임 워크 폼을 서버에 게시 하는 페이지에 클라이언트 쪽 스크립트를 추가 합니다.  
  
 경우는 <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> 속성은 `false`, 컨트롤 개발자가 사용할 수는 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> 클라이언트를 반환 하는 방법에 대 한 이벤트를 포스트백는 <xref:System.Web.UI.WebControls.Button>합니다. 반환한 문자열을 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> 메서드 클라이언트 측 함수 호출의 텍스트를 포함 하 고 클라이언트측 이벤트 처리기를 삽입할 수 있습니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 <xref:System.Web.UI.ThemeableAttribute> 하 고 [ASP.NET 테마 및 스킨](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> 제출 메커니즘을 지정 하려면 속성은는 <xref:System.Web.UI.WebControls.Button> 컨트롤이 서버에 포스트백 될 때 사용 하 합니다. 합니다 <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> 속성이 `false`, 메커니즘 포스트백 ASP.NET을 사용 하려면 단추를 유발 합니다. 브라우저의 소스 보기 명령을 사용 하 여 렌더링된 된 페이지에 대 한 소스 코드를 보면 폼을 서버에 게시 하는 ASP.NET 페이지 프레임 워크에서 클라이언트 측 스크립트 추가 되어 있는지 표시 메시지가 표시 됩니다.  
  
 [!code-aspx-csharp[Button.UseSubmitBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.UseSubmitBehavior/CS/button.usesubmitbehaviorcs.aspx#1)]
 [!code-aspx-vb[Button.UseSubmitBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.UseSubmitBehavior/VB/button.usesubmitbehaviorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">웹 서버 컨트롤 단추</related>
        <related type="Article" href="https://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa">ASP.NET 웹 페이지에서 클라이언트 스크립트</related>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.WebControls.Button.ValidationGroup" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.ValidationGroup</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서버에 포스트백될 때 <see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤이 유효성 검사를 수행할 컨트롤 그룹을 가져오거나 설정합니다.</summary>
        <value>서버에 포스트백될 때 <see cref="T:System.Web.UI.WebControls.Button" /> 컨트롤이 유효성 검사를 수행할 컨트롤 그룹입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 유효성 검사 그룹을 사용 하면 페이지에 유효성 검사 컨트롤 특정 범주에 할당할 수 있습니다. 각 유효성 검사 그룹 페이지의 다른 유효성 검사 그룹 독립적으로 유효성을 검사할 수 있습니다. 사용 하 여 합니다 <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> 는 유효성 검사 그룹의 이름을 지정 하는 속성을 <xref:System.Web.UI.WebControls.Button> 제어 서버에 포스트백 될 때 유효성 검사가 수행 합니다.  
  
 이 속성은 적용 경우에만 값을 <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> 속성이 `true`합니다. 에 대 한 값을 지정 하는 경우는 <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> 속성에 지정된 된 그룹의 일부인 유효성 검사 컨트롤은 때 유효성을 검사 합니다 <xref:System.Web.UI.WebControls.Button> 컨트롤이 서버에 다시 게시 합니다. 이 속성의 값을 지정 하지 않으면 경우와 <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> 속성이 `true`, 페이지의 유효성 검사 그룹에 할당 되지 않은 모든 유효성 검사 컨트롤에는 컨트롤이 서버에 다시 게시 될 때 유효성이 검사 됩니다.  
  
 이 속성은 테마 또는 스타일시트 테마에 의해 설정될 수 없습니다. 자세한 내용은 <xref:System.Web.UI.ThemeableAttribute> 하 고 [ASP.NET 테마 및 스킨](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> 유효성을 검사할 때 컨트롤을 지정 하는 속성을 <xref:System.Web.UI.WebControls.Button> 컨트롤이 서버에 다시 게시 합니다. 페이지에 사용자의 데이터를에서 캡처할 수 있는 세 가지 텍스트 상자와 세 개의 <xref:System.Web.UI.WebControls.RequiredFieldValidator> 는 사용자는를 남기지 않게 입력란 빈 컨트롤입니다. 합니다 <xref:System.Web.UI.WebControls.RequiredFieldValidator> 처음 두 텍스트 상자에 대 한 제어 합니다 `PersonalInfoGroup` 유효성 검사 그룹 및 <xref:System.Web.UI.WebControls.RequiredFieldValidator> 세 번째 텍스트 상자에 대 한 제어를 `LocationInfoGroup` 유효성 검사 그룹입니다. 때 `Button1` 를 클릭 하면 유효성 검사 그룹의 컨트롤에 대해서만 `PersonalInfoGroup` 유효성이 검사 됩니다. 때 `Button2` 를 클릭 하면 유효성 검사 그룹의 컨트롤만 `LocationInfoGroup` 유효성을 검사 합니다.  
  
> [!IMPORTANT]
>  이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다. 기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다. 자세한 내용은 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.  
  
 [!code-aspx-csharp[Button.ValidationGroup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.ValidationGroup/CS/button.validationgroupcs.aspx#1)]
 [!code-aspx-vb[Button.ValidationGroup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.ValidationGroup/VB/button.validationgroupvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">웹 서버 컨트롤 단추</related>
      </Docs>
    </Member>
  </Members>
</Type>