<Type Name="ButtonColumn" FullName="System.Web.UI.WebControls.ButtonColumn">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0a4c21dc9be05e23a8f7e137b9abf837083b2cd2" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55394861" /></Metadata><TypeSignature Language="C#" Value="public class ButtonColumn : System.Web.UI.WebControls.DataGridColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ButtonColumn extends System.Web.UI.WebControls.DataGridColumn" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ButtonColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class ButtonColumn&#xA;Inherits DataGridColumn" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonColumn : System::Web::UI::WebControls::DataGridColumn" />
  <TypeSignature Language="F#" Value="type ButtonColumn = class&#xA;    inherit DataGridColumn" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataGridColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>사용자 정의 단추를 포함하는 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤에 대한 열 형식입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ButtonColumn> 클래스를 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤의 각 행을 사용 하 여 해당 하는 단추를 만들려는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다. 설정 하 여 단추에 표시 되는 캡션을 지정 합니다 <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> 속성입니다. 설정 하는 경우는 <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> 속성에서 모든 단추에는 <xref:System.Web.UI.WebControls.ButtonColumn> 개체 같은 캡션이 있습니다. 바인딩할 수 있습니다는 <xref:System.Web.UI.WebControls.ButtonColumn> 데이터 원본의 필드에는 단추입니다. 이 옵션을 사용 하면 각 단추에 대해 서로 다른 캡션을 표시할 수 있습니다. 지정된 된 필드에 값을 텍스트 캡션에 대 한 사용 됩니다. 설정 합니다 <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A> 바인딩할 속성을 <xref:System.Web.UI.WebControls.ButtonColumn> 데이터 원본의 필드에 합니다.  
  
 캡션 설정 하 여 단추에 표시 되는 서식을 지정할 수 있습니다는 <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A> 서식 문자열을 사용 하 여 속성입니다.  
  
 단추를 클릭 하는 <xref:System.Web.UI.WebControls.ButtonColumn> 발생을 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> 이벤트입니다. 에 대 한 이벤트 처리기를 제공 하 여 단추를 클릭할 때 수행 되는 작업을 프로그래밍 방식으로 제어할 수 있습니다.는 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> 이벤트입니다.  
  
 기본적으로 페이지 유효성 검사가 수행 되지 않습니다에 있는 단추는 <xref:System.Web.UI.WebControls.ButtonColumn> 를 클릭 합니다. 페이지 유효성 검사는 유효성 검사 컨트롤에 의해 지정 된 유효성 검사 규칙을 통과 모든 페이지의 유효성 검사와 연관 된 입력된 컨트롤을 제어 하는지 여부를 결정 합니다. 를 단추를 클릭할 때 페이지 유효성 검사를 수행 하려면 설정 합니다 <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> 속성을 `true`입니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다 <xref:System.Web.UI.WebControls.ButtonColumn> 클래스를 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤을 만들고 **추가** 단추입니다.  
  
 [!code-csharp[ButtonColumnButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnButtonType/CS/source.cs#1)]
 [!code-vb[ButtonColumnButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnButtonType/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.DataGridColumn" />
    <altmember cref="T:System.Web.UI.WebControls.BoundColumn" />
    <altmember cref="T:System.Web.UI.WebControls.EditCommandColumn" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkColumn" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateColumn" />
    <altmember cref="T:System.Web.UI.WebControls.Button" />
    <altmember cref="T:System.Web.UI.WebControls.LinkButton" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ButtonColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ButtonColumn();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.ButtonColumn.%23ctor%2A> 만들고의 새 인스턴스를 초기화 하는 생성자를 <xref:System.Web.UI.WebControls.ButtonColumn> 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 만들고의 새 인스턴스를 초기화 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.ButtonColumn> 클래스에 추가 하 여 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 컬렉션입니다.  
  
 [!code-csharp[ButtonColumnButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnButtonType/CS/source.cs#1)]
 [!code-vb[ButtonColumnButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnButtonType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.Columns" />
      </Docs>
    </Member>
    <Member MemberName="ButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonColumnType ButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonColumnType ButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.ButtonType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ButtonType As ButtonColumnType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ButtonColumnType ButtonType { System::Web::UI::WebControls::ButtonColumnType get(); void set(System::Web::UI::WebControls::ButtonColumnType value); };" />
      <MemberSignature Language="F#" Value="member this.ButtonType : System.Web.UI.WebControls.ButtonColumnType with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.ButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The type of button contained within the column.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonColumnType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 개체에 표시할 단추의 종류를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ButtonColumnType" /> 값 중 하나입니다. 기본값은 <see langword="LinkButton" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ButtonColumn.ButtonType%2A> 속성을 지정 하는지 여부를 단추는 <xref:System.Web.UI.WebControls.ButtonColumn> 개체 링크 누름 단추로 표시 됩니다. 다음 표에서 가능한 설정을 나열합니다.  
  
|단추 종류|표시|  
|-----------------|-------------|  
|<xref:System.Web.UI.WebControls.ButtonColumnType.LinkButton>|링크입니다.|  
|<xref:System.Web.UI.WebControls.ButtonColumnType.PushButton>|단추 컨트롤입니다.|  
  
 단추를 클릭 하는 <xref:System.Web.UI.WebControls.ButtonColumn> 발생을 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> 이벤트입니다. 에 대 한 이벤트 처리기를 제공 하 여 단추를 클릭할 때 수행 되는 작업을 프로그래밍 방식으로 제어할 수 있습니다.는 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> 이벤트입니다.  
  
 이 속성의 값은 뷰 상태에 저장 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 합니다 <xref:System.Web.UI.WebControls.ButtonColumn.ButtonType%2A> 속성을 지정 하는 단추는 <xref:System.Web.UI.WebControls.ButtonColumn> 개체 누름 단추도 표시 됩니다.  
  
 [!code-csharp[ButtonColumnButtonType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnButtonType/CS/source.cs#1)]
 [!code-vb[ButtonColumnButtonType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnButtonType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정한 열 형식이 <see cref="T:System.Web.UI.WebControls.ButtonColumnType" /> 값이 아닌 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.ButtonColumnType" />
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.ItemCommand" />
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 개체의 단추를 클릭할 때 유효성 검사가 수행되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ButtonColumn" />의 단추를 클릭할 때 유효성 검사가 수행되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로 페이지 유효성 검사가 수행 되지 않습니다에 있는 단추는 <xref:System.Web.UI.WebControls.ButtonColumn> 개체를 클릭 합니다. 페이지 유효성 검사는 유효성 검사 컨트롤에 의해 지정 된 유효성 검사 규칙을 통과 모든 페이지의 유효성 검사와 연관 된 입력된 컨트롤을 제어 하는지 여부를 결정 합니다. 경우 한 단추 페이지 유효성 검사를 수행 하는 <xref:System.Web.UI.WebControls.ButtonColumn> 를 클릭 하면 설정 합니다 <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> 속성을 `true`입니다.  
  
 때 값을 <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> 속성은 `true`를 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> 는 유효성 검사 그룹의 이름을 지정 하는 속성은 <xref:System.Web.UI.WebControls.ButtonColumn> 유효성 검사가 합니다.  
  
 이 속성의 값은 뷰 상태에 저장 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public virtual string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.CommandName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The command associated with the button.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 개체의 단추를 클릭할 때 수행할 명령을 나타내는 문자열을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ButtonColumn" />에 있는 단추를 클릭할 때 수행할 명령을 나타내는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.ButtonColumn.CommandName%2A> 와 같은 명령 이름을 연결할 속성을 `Add` 또는 `Remove`, 단추를 사용 하 여 합니다. 설정할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.ButtonColumn.CommandName%2A> 속성에 있는 단추 수행할 동작을 식별 하는 모든 문자열을는 <xref:System.Web.UI.WebControls.ButtonColumn?displayProperty=nameWithType> 개체를 클릭 합니다. 다음을 확인할 수 있습니다 프로그래밍 방식으로 이벤트의 이벤트 처리기에서 명령 이름을 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> 이벤트 하 고 적절 한 조치를 수행 합니다.  
  
 이 속성의 값은 뷰 상태에 저장 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.ButtonColumn.CommandName%2A> 단추를 사용 하 여 명령 이름을 연결 하는 속성입니다. 그런 다음 클릭 한 단추의 명령 이름에 대 한 이벤트 처리기에서 프로그래밍 방식으로 결정 됩니다는 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> 이벤트 및 적절 한 조치를 수행 합니다.  
  
 [!code-aspx-csharp[ButtonColumnCommandName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnCommandName/CS/ButtonColumnCommandNameCS.aspx#1)]
 [!code-aspx-vb[ButtonColumnCommandName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnCommandName/VB/ButtonColumnCommandNameVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.ItemCommand" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="DataTextField">
      <MemberSignature Language="C#" Value="public virtual string DataTextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.DataTextField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextField : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.DataTextField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The field bound to the text property of the button.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 개체에 바인딩할 데이터 소스의 필드 이름을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ButtonColumn" />에 바인딩할 필드 이름입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A> 속성에 바인딩할 데이터 소스의 필드 이름을 지정 하는 <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> 속성에 있는 단추는 <xref:System.Web.UI.WebControls.ButtonColumn> 개체.  
  
 직접 설정 하는 대신 필드에 열을 바인딩하는 <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> 속성을 사용 하면 다른 캡션 단추에 표시할 수 있습니다는 <xref:System.Web.UI.WebControls.ButtonColumn> 지정된 된 필드에 값을 사용 하 여 합니다.  
  
 이 속성의 값은 뷰 상태에 저장 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A> 바인딩할 속성을 <xref:System.Web.UI.WebControls.ButtonColumn> 개체 데이터 소스의 필드.  
  
 [!code-aspx-csharp[ButtonColumnDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnDataTextField/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[ButtonColumnDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnDataTextField/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.Text" />
      </Docs>
    </Member>
    <Member MemberName="DataTextFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The formatting applied to the value bound to the Text property.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>각 단추에 있는 캡션의 표시 형식을 지정하는 문자열을 가져오거나 설정합니다.</summary>
        <value>각 단추에 있는 캡션의 표시 형식을 지정하는 문자열입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A> 의 단추 캡션에 대 한 사용자 지정 표시 형식을 제공 하는 속성을 <xref:System.Web.UI.WebControls.ButtonColumn> 개체입니다.  
  
 데이터 형식 문자열 형태로 콜론으로 구분 된 두 부분으로 구성 됩니다 `{A:Bxx}`합니다. 예를 들어 서식 문자열이 `{0:F2}` 고정된 소수점 두 개의 소수 자릿수로 숫자를 표시할 셀 서식 지정 합니다.  
  
> [!NOTE]
>  전체 문자열 서식 문자열 및 리터럴 문자열이 아닌 것을 나타내기 위해 괄호로 묶어야 합니다. 괄호 밖에 텍스트는 리터럴 텍스트로 표시 됩니다.  
  
 콜론 앞 값 (`A` 예:에서) 매개 변수 인덱스가 0부터 시작 하는 매개 변수 목록을 지정 합니다.  
  
> [!NOTE]
>  각 셀에 값이 하나만 있기 때문에이 값을 0에만 설정할 수 있습니다.  
  
 콜론 문자 (`B` 예:에서)의 값을 표시할 형식을 지정 합니다. 다음 표에서 일반 형식을 나열합니다.  
  
|형식 문자|숫자 값 표시|  
|----------------------|--------------------------------|  
|`C`|통화 형식입니다.|  
|`D`|10 진수 형식입니다.|  
|`E`|과학적 (지 수) 형식입니다.|  
|`F`|고정 된 형식입니다.|  
|`G`|일반 형식입니다.|  
|`N`|숫자 형식입니다.|  
|`X`|16 진수 형식입니다.|  
  
> [!NOTE]
>  형식 문자를 제외 하 고 대/소문자를 아닙니다 `X`, 16 진수 문자를 지정 하는 경우를 표시 합니다.  
  
 형식 문자 뒤의 값 (`xx` 예:에서) 유효 자릿수 또는 소수 자릿수의 수를 지정 합니다.  
  
 이 속성의 값은 뷰 상태에 저장 됩니다.  
  
 문자열 형식 지정에 대한 자세한 내용은 [형식 서식 지정](~/docs/standard/base-types/formatting-types.md)을 참조하세요.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A> 속성에서 각 단추의 캡션을 표시 하는 <xref:System.Web.UI.WebControls.ButtonColumn> 통화 형식으로 개체.  
  
 [!code-aspx-csharp[ButtonColumnDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonColumnDataTextField/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[ButtonColumnDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonColumnDataTextField/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">.NET의 서식 지정 형식</related>
      </Docs>
    </Member>
    <Member MemberName="FormatDataTextValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataTextValue (object dataTextValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataTextValue(object dataTextValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataTextValue (dataTextValue As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataTextValue(System::Object ^ dataTextValue);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataTextValue : obj -&gt; string&#xA;override this.FormatDataTextValue : obj -&gt; string" Usage="buttonColumn.FormatDataTextValue dataTextValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTextValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataTextValue">형식을 지정할 값입니다.</param>
        <summary>지정된 값을 <see cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" /> 속성에 설정된 형식으로 변환합니다.</summary>
        <returns><see cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" />에 설정된 형식으로 변환된 <paramref name="dataTextValue" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue%2A> 지정된 된 값으로 표시 되는 형식으로 변환 하려면 메서드는 <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A> 속성.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue%2A> 메서드는 문자열을 반환 값의 해당 하는 경우는 <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A> 속성이 설정 되어 있지.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="buttonColumn.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 개체를 초기 상태로 다시 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.ButtonColumn.Initialize%2A> 다시 설정 하는 방법의 <xref:System.Web.UI.WebControls.ButtonColumn> 개체를 초기 상태로 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.TableCell cell, int columnIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.TableCell cell, int32 columnIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As TableCell, columnIndex As Integer, itemType As ListItemType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::TableCell ^ cell, int columnIndex, System::Web::UI::WebControls::ListItemType itemType);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.TableCell * int * System.Web.UI.WebControls.ListItemType -&gt; unit" Usage="buttonColumn.InitializeCell (cell, columnIndex, itemType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.TableCell" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="cell">다시 설정할 셀을 나타내는 <see cref="T:System.Web.UI.WebControls.TableCell" /> 개체입니다.</param>
        <param name="columnIndex">셀이 있는 열 번호입니다.</param>
        <param name="itemType"><see cref="T:System.Web.UI.WebControls.ListItemType" /> 값 중 하나입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 개체의 셀을 초기 상태로 다시 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.ButtonColumn.InitializeCell%2A> 메서드를 다시 설정에서 지정된 된 셀을 <xref:System.Web.UI.WebControls.ButtonColumn> 개체를 초기 상태로 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ButtonColumn.Initialize" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Description("The text used for the button.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 개체의 단추에 표시되는 캡션을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ButtonColumn" />의 단추에 표시되는 캡션입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> 속성을 지정 하거나의 단추에 표시 되는 캡션을 결정을 <xref:System.Web.UI.WebControls.ButtonColumn> 개체입니다.  
  
> [!NOTE]
>  설정 하는 경우는 <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> 속성에서 모든 단추에는 <xref:System.Web.UI.WebControls.ButtonColumn> 같은 캡션이 있습니다.  
  
 바인딩할 수 있습니다는 <xref:System.Web.UI.WebControls.ButtonColumn> 데이터 원본의 필드입니다. 이 옵션을 사용 하면 지정된 된 필드에 값을 사용 하는 열에서 단추에 대해 서로 다른 캡션을 표시할 수 있습니다. 설정 합니다 <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A> 바인딩할 속성을 <xref:System.Web.UI.WebControls.ButtonColumn> 데이터 원본의 필드에 합니다.  
  
 이 속성의 값은 뷰 상태에 저장 됩니다.  
  
 이 속성의 값으로 설정 된 경우 디자이너 도구를 사용 하 여 리소스 파일에 자동으로 저장 될 수 있습니다. 자세한 내용은 <xref:System.ComponentModel.LocalizableAttribute> 하 고 [전역화 및 지역화](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.ButtonColumn.Text%2A> 속성에 있는 단추의 캡션을 지정 하는 <xref:System.Web.UI.WebControls.ButtonColumn> 개체.  
  
 [!code-aspx-csharp[Classic ButtonColumn.ButtonType Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ButtonColumn.ButtonType Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic ButtonColumn.ButtonType Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ButtonColumn.ButtonType Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.DataTextField" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonColumn.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.WebControls.ButtonColumn.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>서버에 다시 게시될 때 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 개체가 유효성 검사를 수행할 유효성 검사 컨트롤 그룹을 가져오거나 설정합니다.</summary>
        <value>서버에 다시 게시될 때 <see cref="T:System.Web.UI.WebControls.ButtonColumn" /> 개체에서 유효성 검사를 수행할 유효성 검사 컨트롤의 그룹입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 유효성 검사 그룹을 사용 하면 페이지에 유효성 검사 컨트롤 특정 범주에 할당할 수 있습니다. 각 유효성 검사 그룹 페이지의 다른 유효성 검사 그룹 독립적으로 유효성을 검사할 수 있습니다. 사용 하 여 합니다 <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> 는 유효성 검사 그룹의 이름을 지정 하는 속성을 <xref:System.Web.UI.WebControls.ButtonColumn> 개체 서버에 포스트백 될 때 유효성 검사가 수행 합니다.  
  
 <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> 속성은 적용 경우에만 값을 <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> 속성이 `true`. 에 대 한 값을 지정 하는 경우는 <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> 속성에 지정된 된 그룹의 일부인 유효성 검사 컨트롤은 때 유효성을 검사 합니다 <xref:System.Web.UI.WebControls.ButtonColumn> 서버로 다시 게시 합니다. 에 대 한 값을 지정 하지 않으면를 <xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A> 속성 및 <xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A> 속성이로 설정 되어 `true`, 모든 유효성 검사 컨트롤이 페이지에 유효성 검사 그룹에 할당 되지 않은 경우는 <xref:System.Web.UI.WebControls.ButtonColumn> 서버로 다시 게시 합니다.  
  
 이 속성의 값은 뷰 상태에 저장 됩니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonColumn.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
      </Docs>
    </Member>
  </Members>
</Type>