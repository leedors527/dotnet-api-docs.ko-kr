<Type Name="DataGrid" FullName="System.Web.UI.WebControls.DataGrid">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e4adaffc25716074ea76ab7f47a7bc2a1bd0c06d" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55401699" /></Metadata><TypeSignature Language="C#" Value="public class DataGrid : System.Web.UI.WebControls.BaseDataList, System.Web.UI.INamingContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGrid extends System.Web.UI.WebControls.BaseDataList implements class System.Web.UI.INamingContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DataGrid" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGrid&#xA;Inherits BaseDataList&#xA;Implements INamingContainer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGrid : System::Web::UI::WebControls::BaseDataList, System::Web::UI::INamingContainer" />
  <TypeSignature Language="F#" Value="type DataGrid = class&#xA;    inherit BaseDataList&#xA;    interface INamingContainer" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseDataList</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataGridDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataGridComponentEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataGridDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataGridComponentEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataGridDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataGridComponentEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>테이블에 있는 데이터 원본의 항목을 표시하는 데이터 바인딩된 목록 컨트롤입니다. <see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤을 통해 이러한 항목을 선택하고 정렬하고 편집할 수 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 항목 내용:  
  
-   [소개](#Introduction)  
  
-   [액세스 가능성](#Accessibility)  
  
-   [선언 구문](#DeclarativeSyntax)  
  
    > [!NOTE]
    >  사용 하기 전에 합니다 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤을 사용 하는 것이 좋습니다는 <xref:System.Web.UI.WebControls.GridView> 컨트롤을 대신 합니다. <xref:System.Web.UI.WebControls.GridView> .NET Framework 버전 2.0에에서 도입 된 컨트롤에 대 한 후속은는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
<a name="Introduction"></a>   
## <a name="introduction"></a>소개  
 사용 된 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤을 데이터 원본의 필드를 테이블의 열으로 표시 합니다. 각 행에는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤 데이터 소스의 레코드를 나타냅니다. <xref:System.Web.UI.WebControls.DataGrid> 컨트롤이 선택, 편집, 삭제, 페이징 및 정렬을 지원 합니다.  
  
> [!CAUTION]
>  악성 클라이언트 스크립트 포함 될 수 있는 사용자 입력을 표시 하려면이 제어를 사용할 수 있습니다. 애플리케이션에서 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 전송 되는 모든 정보를 확인 합니다. ASP.NET에서는 사용자 입력에서 차단 스크립트를 HTML 입력된 요청 유효성 검사 기능을 제공 합니다. 유효성 검사 서버 컨트롤이 사용자 입력을 평가 하기 위해 제공 됩니다. 자세한 내용은 [유효성 검사 서버 컨트롤 구문](https://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133)합니다.  
  
 열 형식에 따라 컨트롤의 열의 동작을 결정 합니다. 다음 표에서 사용할 수 있는 여러 열 형식을 나열 합니다.  
  
|열 유형|설명|  
|-----------------|-----------------|  
|<xref:System.Web.UI.WebControls.BoundColumn>|데이터 원본의 필드에 바인딩된 열을 표시 합니다. 필드의 각 항목 텍스트로 표시합니다. 기본 열 형식는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.ButtonColumn>|열에서 각 항목에 대 한 명령 단추를 표시합니다. 이렇게 하면 같은 사용자 지정 단추 컨트롤의 열을 만들 수 있습니다 `Add` 또는 `Remove` 단추입니다.|  
|<xref:System.Web.UI.WebControls.EditCommandColumn>|열에서 각 항목에 대 한 편집 명령을 포함 하는 열이 표시 됩니다.|  
|<xref:System.Web.UI.WebControls.HyperLinkColumn>|열에서 각 항목의 내용을 하이퍼링크로 표시 됩니다. 열의 내용은 데이터 원본 또는 정적 텍스트 필드에 바인딩할 수 있습니다.|  
|<xref:System.Web.UI.WebControls.TemplateColumn>|지정된 된 서식 파일을 다음 열에서 각 항목을 표시 합니다. 이 열에 사용자 지정 컨트롤을 제공할 수 있습니다.|  
  
 기본적으로 <xref:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns%2A> 속성이로 설정 된 `true`를 만듭니다를 <xref:System.Web.UI.WebControls.BoundColumn> 데이터 소스의 각 필드에 대 한 개체입니다. 각 필드에 열으로 렌더링할는 <xref:System.Web.UI.WebControls.DataGrid> 데이터 소스의 각 필드에 나타나는 순서 대로 제어 합니다.  
  
 에 표시할 열을 수동으로 제어할 수 있습니다.는 <xref:System.Web.UI.WebControls.DataGrid> 설정 하 여 컨트롤을 <xref:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns%2A> 속성을 `false` 후 열기 및 닫기 포함 하려는 열을 나열 하 고 `<Columns>` 태그입니다. 지정 된 열에 추가 되는 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 순서 대로 나열 합니다. 프로그래밍 방식으로 열을 제어할 수 있습니다이 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
> [!NOTE]
>  열에 표시 되는 순서를 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤에 열이 표시 순서에 의해 제어 됩니다는 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 컬렉션입니다. 열의 순서를 조작 하 여 프로그래밍 방식으로 변경할 수 있지만 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 컬렉션 쉽습니다 원하는 표시 순서에서 열을 나열 합니다.  
  
 명시적으로 선언 된 열을 자동으로 생성 된 열과 함께에서 표시할 수 있습니다. 열을 명시적으로 선언 모두 사용 하는 수를 렌더링할 때 먼저 뒤에 자동으로 생성 된 열을 기준으로 합니다.  
  
> [!NOTE]
>  자동으로 생성 된 열에 추가 되지 않습니다는 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 컬렉션입니다.  
  
 모양의 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤의 여러 부분에 대 한 스타일 속성을 설정 하 여 컨트롤을 사용자 지정할 수 있습니다. 다음 표에서 다양 한 스타일 속성을 나열합니다.  
  
|스타일 속성|설명|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>|에 있는 대체 항목에 대 한 스타일을 지정 합니다 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A>|편집 중인 항목에 대 한 스타일을 지정 합니다 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A>|바닥글 구역에 대 한 스타일을 지정 합니다 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A>|머리글 구역에 대 한 스타일을 지정 합니다 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>|항목에 대 한 스타일을 지정 합니다 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.DataGrid.PagerStyle%2A>|페이지 선택 섹션의 스타일을 지정 합니다 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A>|선택한 항목에 대 한 스타일을 지정 합니다 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.|  
  
 또한 표시 하거나 컨트롤의 다른 파트를 숨길 수 있습니다. 다음 표에서 표시 하거나 숨길는 부분을 제어 하는 속성을 보여 줍니다.  
  
|속성|설명|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataGrid.ShowFooter%2A>|바닥글 구역을 표시 하거나 숨깁니다는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.DataGrid.ShowHeader%2A>|머리글 구역을 표시 하거나 숨깁니다는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.|  
  
 모양을 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.DataGrid> 프로그래밍 방식으로 특성을 추가 하 여 컨트롤을 `<td>` 및 `<tr>` 브라우저의 컨트롤에서 렌더링 된 태그입니다. 특성에 대 한 이벤트 처리기에서 코드를 제공 하 여 프로그래밍 방식으로 추가할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.DataGrid.OnItemCreated%2A> 또는 <xref:System.Web.UI.WebControls.DataGrid.OnItemDataBound%2A> 이벤트입니다.  
  
 특성을 추가 하는 `<td>` 태그, 먼저를 <xref:System.Web.UI.WebControls.TableCell> 에서 셀을 나타내는 개체를 <xref:System.Web.UI.WebControls.DataGrid> 특성을 추가 하려는 컨트롤입니다. <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> 컬렉션에 대 한는 <xref:System.Web.UI.WebControls.DataGridItemEventArgs.Item%2A> 의 속성을 <xref:System.Web.UI.WebControls.DataGridItemEventArgs> 이벤트 처리기에 전달 된 개체는 원하는 가져오는 데 사용할 수 있습니다 <xref:System.Web.UI.WebControls.TableCell> 개체입니다. 사용할 수 있습니다는 <xref:System.Web.UI.AttributeCollection.Add%2A?displayProperty=nameWithType> 메서드를 <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> 컬렉션에 대 한를 <xref:System.Web.UI.WebControls.TableCell> 특성을 추가할 개체를 `<td>` 태그입니다.  
  
 특성을 추가 하는 `<tr>` 태그, 먼저를 <xref:System.Web.UI.WebControls.DataGridItem> 의 행을 나타내는 개체를 <xref:System.Web.UI.WebControls.DataGrid> 특성을 추가 하려는 컨트롤. 합니다 <xref:System.Web.UI.WebControls.DataGridItemEventArgs.Item%2A> 의 속성을 <xref:System.Web.UI.WebControls.DataGridItemEventArgs> 이벤트 처리기에 전달 된 개체는 원하는 가져오는 데 사용할 수 있습니다 <xref:System.Web.UI.WebControls.DataGridItem> 개체입니다. 사용할 수 있습니다는 <xref:System.Web.UI.AttributeCollection.Add%2A?displayProperty=nameWithType> 메서드를 <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> 컬렉션에 대 한를 <xref:System.Web.UI.WebControls.DataGridItem> 특성을 추가할 개체를 `<tr>` 태그입니다.  
  
<a name="Accessibility"></a>   
## <a name="accessibility"></a>액세스 가능성  
 접근성 표준을 준수 하는 태그를 생성할 수 있도록이 컨트롤을 구성 하는 방법에 대 한 정보를 참조 하세요 [Visual Studio 및 ASP.NET의 접근성](https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) 및 [ASP.NET 컨트롤과내게필요한옵션](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a>선언 구문  
  
```  
<asp:DataGrid  
    AccessKey="string"  
    AllowCustomPaging="True|False"  
    AllowPaging="True|False"  
    AllowSorting="True|False"  
    AutoGenerateColumns="True|False"  
    BackColor="color name|#dddddd"  
    BackImageUrl="uri"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyField="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    EditItemIndex="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnCancelCommand="CancelCommand event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDeleteCommand="DeleteCommand event handler"  
    OnDisposed="Disposed event handler"  
    OnEditCommand="EditCommand event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDataBound="ItemDataBound event handler"  
    OnLoad="Load event handler"  
    OnPageIndexChanged="PageIndexChanged event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedIndexChanged="SelectedIndexChanged event handler"  
    OnSortCommand="SortCommand event handler"  
    OnUnload="Unload event handler"  
    OnUpdateCommand="UpdateCommand event handler"  
    PageSize="integer"  
    runat="server"  
    SelectedIndex="integer"  
    ShowFooter="True|False"  
    ShowHeader="True|False"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    UseAccessibleHeader="True|False"  
    Visible="True|False"  
    Width="size"  
>  
        <AlternatingItemStyle />  
        <Columns>  
                <asp:BoundColumn  
                    DataField="string"  
                    DataFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    ReadOnly="True|False"  
                    SortExpression="string"  
                    Visible="True|False"  
>  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:BoundColumn>  
                <asp:ButtonColumn  
                    ButtonType="LinkButton|PushButton"  
                    CausesValidation="True|False"  
                    CommandName="string"  
                    DataTextField="string"  
                    DataTextFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    SortExpression="string"  
                    Text="string"  
                    ValidationGroup="string"  
                    Visible="True|False"  
>  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:ButtonColumn>  
                <asp:EditCommandColumn  
                    ButtonType="LinkButton|PushButton"  
                    CancelText="string"  
                    CausesValidation="True|False"  
                    EditText="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    SortExpression="string"  
                    UpdateText="string"  
                    ValidationGroup="string"  
                    Visible="True|False"  
>  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:EditCommandColumn>  
                <asp:HyperLinkColumn  
                    DataNavigateUrlField="string"  
                    DataNavigateUrlFormatString="string"  
                    DataTextField="string"  
                    DataTextFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    NavigateUrl="uri"  
                    SortExpression="string"  
                    Target="string|_blank|_parent|_search|_self|_top"  
                    Text="string"  
                    Visible="True|False"  
>  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:HyperLinkColumn>  
                <asp:TemplateColumn  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    SortExpression="string"  
                    Visible="True|False"  
>  
                            <FooterStyle />  
                            <HeaderStyle />  
                            <ItemStyle />  
                        <EditItemTemplate>  
                            <!-- child controls -->  
                        </EditItemTemplate>  
                        <FooterTemplate>  
                            <!-- child controls -->  
                        </FooterTemplate>  
                        <HeaderTemplate>  
                            <!-- child controls -->  
                        </HeaderTemplate>  
                        <ItemTemplate>  
                            <!-- child controls -->  
                        </ItemTemplate>  
                </asp:TemplateColumn>  
        </Columns>  
        <EditItemStyle />  
        <FooterStyle />  
        <HeaderStyle />  
        <ItemStyle />  
        <PagerStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalAlign="NotSet|Left|Center|Right|Justify"  
            Mode="NextPrev|NumericPages"  
            NextPageText="string"  
            OnDisposed="Disposed event handler"  
            PageButtonCount="integer"  
            Position="Bottom|Top|TopAndBottom"  
            PrevPageText="string"  
            VerticalAlign="NotSet|Top|Middle|Bottom"  
            Visible="True|False"  
            Width="size"  
            Wrap="True|False"  
        />  
        <SelectedItemStyle />  
</asp:DataGrid>  
```  
  
   
  
## Examples  
 소스 코드를 사용 하 여 Visual Studio 웹 사이트 프로젝트는 다음이 항목과 함께 사용할 수 있습니다: [다운로드](https://code.msdn.microsoft.com/Project/Download/FileDownload.aspx?ProjectName=aspnetmsdnexamples&DownloadId=11217)합니다.  
  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataGrid> 데이터 소스의 항목을 표시 하는 컨트롤입니다.  
  
 [!code-aspx-csharp[Classic DataGrid Example 2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid Example 2/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid Example 2/VB/sourcevb.aspx#1)]  
  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataGrid> 간단한 쇼핑 카트에 대 한 제어 합니다.  
  
 [!code-aspx-csharp[Classic DataGrid Example 2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid Example 2/CS/source2cs.aspx#2)]
 [!code-aspx-vb[Classic DataGrid Example 2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid Example 2/VB/source2vb.aspx#2)]  
  
 다음 코드 예제에는 특성을 동적으로 추가 하는 방법을 보여 줍니다.는 `<td>` 및 `<tr>` 에서 생성 된 태그는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
 [!code-aspx-csharp[DataGridTrTdTags#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridTrTdTags/CS/datagridtdtrtagcs.aspx#1)]
 [!code-aspx-vb[DataGridTrTdTags#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridTrTdTags/VB/datagridtdtrtagvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridExample/CS/datagridcs.aspx#1)]
 [!code-aspx-vb[DataGridExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridExample/VB/datagridvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BaseDataList" />
    <altmember cref="T:System.Web.UI.WebControls.DataList" />
    <altmember cref="T:System.Web.UI.WebControls.Repeater" />
    <altmember cref="T:System.Web.UI.WebControls.BoundColumn" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonColumn" />
    <altmember cref="T:System.Web.UI.WebControls.EditCommandColumn" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkColumn" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateColumn" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGrid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGrid();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하 여 만들고의 새 인스턴스를 초기화 하는 <xref:System.Web.UI.WebControls.DataGrid> 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 만들고의 새 인스턴스를 초기화 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGrid> 클래스입니다.  
  
 [!code-aspx-csharp[DataGridCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridCtor/CS/datagridctorcs.aspx#1)]
 [!code-aspx-vb[DataGridCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridCtor/VB/datagridctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowCustomPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowCustomPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCustomPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.AllowCustomPaging" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowCustomPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowCustomPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowCustomPaging : bool with get, set" Usage="System.Web.UI.WebControls.DataGrid.AllowCustomPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 지정 페이징의 활성화 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>사용자 지정 페이징이 활성화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이징의 내용을 표시할 수는 <xref:System.Web.UI.WebControls.DataGrid> 페이지 세그먼트의 컨트롤입니다. 페이지에 있는 항목의 수에 의해 결정 되는 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> 속성입니다. 없는 값을 지정 하는 경우는 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> 속성을 <xref:System.Web.UI.WebControls.DataGrid> 10 개 항목을 페이지에 표시 됩니다.  
  
 일반적으로의 모든 행을 포함 하는 데이터 소스를 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤이 로드 될 때마다는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤이 다른 페이지로 이동 합니다. 이 하면 데이터 원본이 매우 큰 경우 리소스를 많이 사용할 수 있습니다. 사용자 지정 페이징을 사용 하면 단일 페이지를 표시 하는 데 필요한 데이터의 세그먼트만 로드할 수 있습니다.  
  
 페이징을 사용 하도록 사용자 지정을 모두를 설정 합니다 <xref:System.Web.UI.WebControls.DataGrid.AllowPaging%2A> 하 고 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> 속성을 `true`입니다. 다음으로 처리 하는 코드를 제공 합니다 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> 이벤트입니다.  
  
 에 대 한 일반적인 논리는 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> 이벤트 처리기는 먼저 설정 하는 <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> 속성을 표시 하려는 페이지의 인덱스입니다.  
  
> [!NOTE]
>  이벤트 처리기는 수신 된 <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs> 개체를 매개 변수로 합니다. 사용할 수는 <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs.NewPageIndex%2A> 속성의 페이지 선택 요소에서 사용자가 선택한 페이지의 인덱스를 확인 하려면이 매개 변수는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다.  
  
 다음으로 단일 페이지에 표시 되 고 사용 하 여 데이터를 포함 하는 데이터 소스를 만듭니다는 <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> 데이터를 바인딩하는 메서드는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
> [!NOTE]
>  데이터의 세그먼트만 로드 되기 때문에 설정 해야 합니다 <xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A> 속성에 있는 항목의 총 수를 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤. 이렇게 하면 컨트롤에서 모든 항목을 표시 하는 데 필요한 페이지의 총 수를 확인 하는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. 이 속성은 일반적으로 프로그래밍 방식으로 설정 되 면에 있는 항목의 총 수를 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤 결정 됩니다.  
  
 사용 하 여 페이징이 활성화 된 경우는 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> 속성이 `false`, <xref:System.Web.UI.WebControls.DataGrid> 컨트롤 데이터 소스의 모든 항목을 포함 하는 것으로 가정 합니다. <xref:System.Web.UI.WebControls.DataGrid> 컨트롤이 지정 된 페이지 인덱스를 기준으로 표시 된 페이지에 있는 항목의 인덱스를 계산 합니다 <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> 속성과 지정 된 페이지에는 항목 수를 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> 속성.  
  
 경우는 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> 속성이로 설정 되어 `true`, <xref:System.Web.UI.WebControls.DataGrid> 컨트롤 데이터 소스에만 기준으로 항목을 포함 하는 것으로 가정 합니다 <xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A> 속성. 지정 된 항목 개수까지 모든 항목을 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> 속성이 표시 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> 속성 사용자 지정 페이징을 사용 하도록 설정 합니다.  
  
 [!code-aspx-csharp[DataGridCustomPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridCustomPaging/CS/datagridcustompagingcs.aspx#1)]
 [!code-aspx-vb[DataGridCustomPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridCustomPaging/VB/datagridcustompagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.VirtualItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.CurrentPageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.PageSize" />
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.AllowPaging" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowPaging : bool with get, set" Usage="System.Web.UI.WebControls.DataGrid.AllowPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이징의 활성화 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>페이징이 활성화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이징의 내용을 표시할 수는 <xref:System.Web.UI.WebControls.DataGrid> 페이지 세그먼트의 컨트롤입니다. 페이지에 있는 항목의 수에 의해 결정 되는 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> 속성입니다. 없는 값을 지정 하는 경우는 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> 속성을 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤을 페이지에 10 개 항목 표시 됩니다.  
  
 기본적으로 페이징 비활성화 됩니다. 페이징을 사용 하려면이 속성을 설정 `true` 하 고 처리 하는 코드를 제공 합니다 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> 이벤트입니다.  
  
 에 대 한 일반적인 논리를 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> 이벤트 설정 하는 것을 <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> 속성을 표시 하 고 다음 사용 하려는 페이지의 인덱스를 <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> 데이터를 바인딩하는 메서드를 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤.  
  
> [!NOTE]
>  이벤트 처리기는 수신 된 <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs> 개체를 매개 변수로 합니다. 사용할 수는 <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs.NewPageIndex%2A> 속성의 페이지 선택 요소에서 사용자가 선택한 페이지의 인덱스를 확인 하려면이 매개 변수는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다.  
  
 표준 페이징을 사용 하 여는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤 데이터 소스의 모든 항목을 포함 하는 것으로 가정 합니다. <xref:System.Web.UI.WebControls.DataGrid> 컨트롤이 지정 된 페이지 인덱스를 기준으로 표시 된 페이지에 있는 항목의 인덱스를 계산 합니다 <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> 속성과 지정 된 페이지에 있는 항목의 항목 수를 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> 속성.  
  
 모든 항목을 포함 하는 데이터 소스에서 때마다를 로드 되는 일반적으로 <xref:System.Web.UI.WebControls.DataGrid> 페이징 되는 컨트롤입니다. 이 하면 데이터 원본이 매우 큰 경우 리소스를 많이 사용할 수 있습니다. 사용자 지정 페이징을 사용 하면 단일 페이지를 표시 하는 데 필요한 데이터의 세그먼트만 로드할 수 있습니다. 사용자 지정 페이징에 대 한 자세한 내용은 참조는 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataGrid.AllowPaging%2A> 속성 페이징을 사용 하도록 설정 합니다.  
  
 [!code-aspx-csharp[Classic DataGrid.AllowPaging Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.AllowPaging Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.AllowPaging Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.AllowPaging Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowPaging/CS/datagridallowpagingcs.aspx#1)]
 [!code-aspx-vb[DataGridAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowPaging/VB/datagridallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.PageIndexChanged" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowCustomPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.PageSize" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.CurrentPageIndex" />
      </Docs>
    </Member>
    <Member MemberName="AllowSorting">
      <MemberSignature Language="C#" Value="public virtual bool AllowSorting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSorting" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.AllowSorting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowSorting { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowSorting : bool with get, set" Usage="System.Web.UI.WebControls.DataGrid.AllowSorting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>정렬의 활성화 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>정렬이 활성화된 경우에는 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 정렬을 사용 하는 경우 <xref:System.Web.UI.WebControls.LinkButton> 컨트롤은 각 열의 머리글 구역에 렌더링 됩니다 여기서는 <xref:System.Web.UI.WebControls.DataGridColumn.SortExpression%2A> 속성을 설정 합니다. 이러한 <xref:System.Web.UI.WebControls.LinkButton> 컨트롤을 사용 하면 정렬 하는 <xref:System.Web.UI.WebControls.DataGrid> 선택한 열을 기준으로 제어 합니다. 유일한 예외는 사용 하는 경우는 <xref:System.Web.UI.WebControls.TemplateColumn> 열 형식과 <xref:System.Web.UI.WebControls.TemplateColumn.HeaderTemplate%2A> 속성 집합입니다. 이 경우에 제공 해야 합니다는 <xref:System.Web.UI.WebControls.Button> 에서 제어를 <xref:System.Web.UI.WebControls.TemplateColumn.HeaderTemplate%2A> 열.  
  
 합니다 <xref:System.Web.UI.WebControls.DataGrid.SortCommand> 이벤트가 발생 한 경우의 <xref:System.Web.UI.WebControls.LinkButton> 컨트롤을 클릭할 합니다. 이벤트 처리기에 대 한 코드를 제공 하는 것입니다. 목록을 정렬 하 고 다음 데이터를 다시 바인딩해야 하는 처리기에 대 한 일반적인 논리는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataGrid.AllowSorting%2A> 속성을 정렬 합니다.  
  
 [!code-aspx-csharp[Classic DataGrid.AllowSorting Example 2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.AllowSorting Example 2/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.AllowSorting Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.AllowSorting Example 2/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridAllowSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowSorting/CS/datagridallowsortingcs.aspx#1)]
 [!code-aspx-vb[DataGridAllowSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowSorting/VB/datagridallowsortingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.SortCommand" />
        <altmember cref="T:System.Web.UI.WebControls.LinkButton" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
        <altmember cref="T:System.Web.UI.WebControls.TemplateColumn" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateColumn.HeaderTemplate" />
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AlternatingItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ AlternatingItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataGrid.AlternatingItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤에 있는 대체 항목의 스타일 속성을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" />에 있는 대체 항목의 스타일 속성을 나타내는 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 개체입니다. 기본값은 빈 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> 교대로 반복 되는 것에 대 한 사용자 지정 스타일을 제공 하는 속성의 항목을 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다. 조정할 수 있는 공통 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다.  
  
 항목의 스타일 속성을 <xref:System.Web.UI.WebControls.DataGrid> 제어 계층을 통해 다른 하나씩 스타일 속성에서 상속 됩니다. 계층에서 낮은 설정 항목 스타일 속성은 계층 구조의 상위 항목 스타일 속성에 의해 상속 됩니다. 예를 들어 빨강 글꼴을 지정 하는 경우는 <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> 속성을 다른 항목 스타일의 모든 속성을 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤 빨강 글꼴을 갖게 됩니다. 이 옵션을 사용 하면 단일 항목의 스타일 속성을 설정 하 여 컨트롤에 공통 된 모양을 제공할 수 있습니다. 스타일 속성을 설정 하 여 상위 계층에 있는 항목 스타일 속성에 대 한 상속 된 스타일 설정을 재정의할 수 있습니다. 예를 들어, 파랑 글꼴을 지정할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> 속성에 지정 된 빨간색 글꼴로 재정의 <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> 속성입니다. 다음 표에서 순위가 가장 높은 계층 순서를 나열합니다.  
  
|우선 순위|스타일 속성|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 교대로 반복 되는 항목에 대 한 사용자 지정 스타일을 지정 하려면 합니다 `<AlternatingItemStyle>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. 다음을 표시 하 여 스타일 특성을 `<AlternatingItemStyle>` 태그입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> 속성에 있는 대체 항목에 대 한 다른 배경색을 지정 하는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다.  
  
 [!code-aspx-csharp[DataGridAlternatingItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAlternatingItemStyle/CS/datagridalternatingitemstylecs.aspx#1)]
 [!code-aspx-vb[DataGridAlternatingItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAlternatingItemStyle/VB/datagridalternatingitemstylevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemStyle/CS/datagriditemstylecs.aspx#1)]
 [!code-aspx-vb[DataGridItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemStyle/VB/datagriditemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateColumns">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoGenerateColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoGenerateColumns { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateColumns : bool with get, set" Usage="System.Web.UI.WebControls.DataGrid.AutoGenerateColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.BoundColumn" /> 개체가 자동으로 만들어져 데이터 소스의 각 필드에 대한 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤에 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.BoundColumn" /> 개체가 자동으로 만들어져 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 자동으로 만들려면는 <xref:System.Web.UI.WebControls.BoundColumn> 데이터 소스의 각 필드에 대 한 개체입니다. 각 필드에 열으로 렌더링할는 <xref:System.Web.UI.WebControls.DataGrid> 데이터 소스의 필드에 나타나는 순서 대로 제어 합니다.  
  
 일부 데이터 형식에 바인딩할 수 있습니다는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. 필드는 지원 되지 않는 데이터 형식에 있으면 해당 필드에 대 한 열 생성 되지 않습니다. 데이터 원본에는 지원 되지 않는 데이터 형식 사용 하 여 하나의 열만 있으면 예외가 throw 됩니다. 다음 표에서 컨트롤에 바인딩될 수 있는 데이터 형식을 보여 줍니다.  
  
|데이터 형식|설명|  
|---------------|-----------------|  
|기본 형식|와 같은 기본 데이터 형식이 <xref:System.Int32?displayProperty=nameWithType>, <xref:System.Char>, <xref:System.Double>등입니다. 전체 목록을 보려면 <xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType>을 참조하세요.|  
|문자열|<xref:System.String?displayProperty=nameWithType> 개체입니다.|  
|DateTime|<xref:System.DateTime?displayProperty=nameWithType> 개체입니다.|  
|Decimal|<xref:System.Decimal?displayProperty=nameWithType> 개체입니다.|  
  
> [!NOTE]
>  명시적으로 선언 된 열을 자동으로 생성 된 열과 함께에서 사용할 수 있습니다. 열을 명시적으로 선언 모두 사용 하는 수를 렌더링할 때 먼저 뒤에 자동으로 생성 된 열을 기준으로 합니다. 자동으로 생성 된 열에 추가 되지 않습니다는 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 컬렉션입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns%2A> 속성을 자동으로 만듭니다는 <xref:System.Web.UI.WebControls.BoundColumn> 데이터 소스의 각 필드에 대 한 개체입니다.  
  
 [!code-aspx-csharp[Classic DataGrid.AutoGenerateColumns Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.AutoGenerateColumns Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.AutoGenerateColumns Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.AutoGenerateColumns Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BoundColumn" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.Columns" />
        <altmember cref="P:System.Type.IsPrimitive" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.BackImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BackImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageUrl : string with get, set" Usage="System.Web.UI.WebControls.DataGrid.BackImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤의 배경에 표시할 이미지의 URL을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤의 배경에 표시할 이미지의 URL입니다. 기본값은 <see cref="F:System.String.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DataGrid.BackImageUrl%2A> 속성의 배경에 표시할 이미지를 지정 하는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
> [!NOTE]
>  지정된 된 이미지 보다 작은 경우는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤 이미지 컨트롤의 배경에 맞게 타일 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용법을 <xref:System.Web.UI.WebControls.DataGrid.BackImageUrl%2A> 속성에 대 한 배경 이미지를 지정 하는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다.  
  
 [!code-aspx-csharp[Classic DataGrid.BackImageUrl Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.BackImageUrl Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.BackImageUrl Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.BackImageUrl Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridBackImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridBackImageUrl/CS/datagridbackimageurlcs.aspx#1)]
 [!code-aspx-vb[DataGridBackImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridBackImageUrl/VB/datagridbackimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="CancelCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridCommandEventHandler CancelCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridCommandEventHandler CancelCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.CancelCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CancelCommand As DataGridCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataGridCommandEventHandler ^ CancelCommand;" />
      <MemberSignature Language="F#" Value="member this.CancelCommand : System.Web.UI.WebControls.DataGridCommandEventHandler " Usage="member this.CancelCommand : System.Web.UI.WebControls.DataGridCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤에 있는 항목에 대해 <see langword="Cancel" /> 단추를 클릭하면 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> 이벤트는 때를 `Cancel` 항목에 대해 단추를 클릭할는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다.  
  
 에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> 이벤트 집합을 <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> 속성을 `-1` (항목을 선택 취소)를 다음 데이터를 다시 바인딩합니다는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다.  
  
> [!CAUTION]
>  텍스트에 표시 되기 전에 HTML 인코딩해야 아닙니다는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. 이 텍스트에 HTML 태그 내에서 스크립트를 포함할 수 있습니다. 컨트롤에 대 한 값은 사용자 입력 으로부터 가져올, 경우에 보안 취약점을 줄이는 값을 확인 해야 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> 의 항목에 대 한 편집 내용을 취소 하는 이벤트를 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.OnCancelCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="CancelCommandName">
      <MemberSignature Language="C#" Value="public const string CancelCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CancelCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const CancelCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ CancelCommandName;" />
      <MemberSignature Language="F#" Value="val mutable CancelCommandName : string" Usage="System.Web.UI.WebControls.DataGrid.CancelCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="Cancel" /> 명령 이름을 나타냅니다. 이 필드는 읽기 전용입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DataGrid.CancelCommandName> 나타내는 필드는 `Cancel` 명령 이름입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataGridColumnCollection Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataGridColumnCollection Columns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.Columns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Columns As DataGridColumnCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataGridColumnCollection ^ Columns { System::Web::UI::WebControls::DataGridColumnCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Columns : System.Web.UI.WebControls.DataGridColumnCollection" Usage="System.Web.UI.WebControls.DataGrid.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridColumnCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤의 열을 나타내는 개체의 컬렉션을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> 컨트롤의 열을 나타내는 개체의 컬렉션이 들어 있는 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 프로그래밍 방식으로 컬렉션의 열을 제어 하는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 컬렉션에서 렌더링 되는 명시적으로 선언 된 열이 포함 된 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤.  
  
> [!NOTE]
>  명시적으로 선언 된 열을 자동으로 생성 된 열과 함께에서 사용할 수 있습니다. 열을 명시적으로 선언 모두 사용 하는 수를 렌더링할 때 먼저 뒤에 자동으로 생성 된 열을 기준으로 합니다. 자동으로 생성 된 열에 추가 되지 않습니다는 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 컬렉션입니다.  
  
 열에 표시 되는 순서를 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤에 열이 표시 순서에 의해 제어 됩니다는 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 컬렉션입니다.  
  
 다음 표에서 다른 열에서 파생 된 클래스는 <xref:System.Web.UI.WebControls.DataGridColumn> 클래스 및에서 사용할 수는 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 컬렉션입니다.  
  
|열 형식|설명|  
|-----------------|-----------------|  
|<xref:System.Web.UI.WebControls.BoundColumn>|데이터 원본의 필드에 바인딩된 열을 표시 합니다. 필드의 각 항목 텍스트로 표시합니다. 기본 열 형식는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.ButtonColumn>|열에서 각 항목에 대 한 명령 단추를 표시합니다. 이렇게 하면 같은 사용자 지정 단추 컨트롤의 열을 만들 수 있습니다 합니다 `Add` 또는 `Remove` 단추입니다.|  
|<xref:System.Web.UI.WebControls.EditCommandColumn>|열에서 각 항목에 대 한 편집 명령을 포함 하는 열이 표시 됩니다.|  
|<xref:System.Web.UI.WebControls.HyperLinkColumn>|열에서 각 항목의 내용을 하이퍼링크로 표시 됩니다. 열의 내용은 데이터 원본 또는 정적 텍스트 필드에 바인딩할 수 있습니다.|  
|<xref:System.Web.UI.WebControls.TemplateColumn>|지정된 된 서식 파일을 다음 열에서 각 항목을 표시 합니다. 이 열에 사용자 지정 컨트롤을 제공할 수 있습니다.|  
  
> [!NOTE]
>  프로그래밍 방식으로 열을 추가할 수는 있지만 합니다 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 컬렉션 쉽습니다 정적 열을 나열 하 고 사용 하 여는 <xref:System.Web.UI.WebControls.DataGridColumn.Visible%2A> 속성을 표시 하거나 숨길 열입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> 동적으로 열을 추가 하는 컬렉션을 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤.  
  
 [!code-aspx-csharp[Classic DataGrid.Columns Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.Columns Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.Columns Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.Columns Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridColumnVisible#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridColumnVisible/CS/datagridcolumnvisiblecs.aspx#1)]
 [!code-aspx-vb[DataGridColumnVisible#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridColumnVisible/VB/datagridcolumnvisiblevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGridColumn" />
        <altmember cref="T:System.Web.UI.WebControls.BoundColumn" />
        <altmember cref="T:System.Web.UI.WebControls.ButtonColumn" />
        <altmember cref="T:System.Web.UI.WebControls.EditCommandColumn" />
        <altmember cref="T:System.Web.UI.WebControls.HyperLinkColumn" />
        <altmember cref="T:System.Web.UI.WebControls.TemplateColumn" />
      </Docs>
    </Member>
    <Member MemberName="CreateColumnSet">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ArrayList CreateColumnSet (System.Web.UI.WebControls.PagedDataSource dataSource, bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ArrayList CreateColumnSet(class System.Web.UI.WebControls.PagedDataSource dataSource, bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.CreateColumnSet(System.Web.UI.WebControls.PagedDataSource,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateColumnSet (dataSource As PagedDataSource, useDataSource As Boolean) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::ArrayList ^ CreateColumnSet(System::Web::UI::WebControls::PagedDataSource ^ dataSource, bool useDataSource);" />
      <MemberSignature Language="F#" Value="abstract member CreateColumnSet : System.Web.UI.WebControls.PagedDataSource * bool -&gt; System.Collections.ArrayList&#xA;override this.CreateColumnSet : System.Web.UI.WebControls.PagedDataSource * bool -&gt; System.Collections.ArrayList" Usage="dataGrid.CreateColumnSet (dataSource, useDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">컨트롤 계층 구조를 만드는 데 사용되는 데이터 소스입니다.</param>
        <param name="useDataSource">데이터 소스를 사용하여 열을 자동으로 생성할지 저장된 상태를 사용할지 여부를 나타냅니다.</param>
        <summary>컨트롤 계층 구조를 만드는 데 사용할 열의 집합을 만듭니다. <see cref="P:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns" />가 true이면 데이터 소스에 일치하도록 열이 만들어지고 <see cref="P:System.Web.UI.WebControls.DataGrid.Columns" /> 컬렉션에서 정의한 열 집합에 추가됩니다.</summary>
        <returns>열의 유효한 집합이 올바른 순서로 포함되어 있는 <see cref="T:System.Collections.ArrayList" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlHierarchy">
      <MemberSignature Language="C#" Value="protected override void CreateControlHierarchy (bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateControlHierarchy(bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.CreateControlHierarchy(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateControlHierarchy (useDataSource As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateControlHierarchy(bool useDataSource);" />
      <MemberSignature Language="F#" Value="override this.CreateControlHierarchy : bool -&gt; unit" Usage="dataGrid.CreateControlHierarchy useDataSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useDataSource">데이터 소스를 사용하여 열을 자동으로 생성할지 저장된 상태를 사용할지 여부를 나타냅니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" />를 렌더링하는 데 사용되는 컨트롤 계층 구조를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 구현은 컨트롤 컬렉션에서 모든 자식을 취소 이미 있다고 가정 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><paramref name="useDataSource" />가 <see langword="true" />이고, <see cref="P:System.Web.UI.WebControls.DataGrid.VirtualItemCount" />의 값이 설정되지 않고, 선택된 데이터 소스가 <see cref="T:System.Collections.ICollection" /> 인터페이스를 구현하지 않는 경우  
  
또는 
 <paramref name="useDataSource" />가 <see langword="true" />이고 데이터 소스의 <see cref="P:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex" /> 속성이 잘못된 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="dataGrid.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>새 컨트롤 스타일을 만듭니다.</summary>
        <returns>새 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.Style" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGrid.CreateControlStyle%2A> 항상 표시 되도록 컨트롤을 사용자 지정 서버에서 메서드를 <xref:System.Web.UI.WebControls.BaseDataList.GridLines%2A> 없이 <xref:System.Web.UI.WebControls.BaseDataList.CellSpacing%2A> 에 <xref:System.Web.UI.WebControls.DataGrid>합니다.  
  
 [!code-aspx-csharp[CustomDataGridCreateControlStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataGridCreateControlStyle/CS/custom_datagrid_createcontrolstylecs.aspx#1)]
 [!code-aspx-vb[CustomDataGridCreateControlStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataGridCreateControlStyle/VB/custom_datagrid_createcontrolstylevb.aspx#1)]  
[!code-csharp[CustomDataGridCreateControlStyle#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataGridCreateControlStyle/CS/custom_datagrid_createcontrolstyle.cs#2)]
[!code-vb[CustomDataGridCreateControlStyle#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataGridCreateControlStyle/VB/custom_datagrid_createcontrolstyle.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.DataGridItem CreateItem (int itemIndex, int dataSourceIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.DataGridItem CreateItem(int32 itemIndex, int32 dataSourceIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.CreateItem(System.Int32,System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateItem (itemIndex As Integer, dataSourceIndex As Integer, itemType As ListItemType) As DataGridItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::DataGridItem ^ CreateItem(int itemIndex, int dataSourceIndex, System::Web::UI::WebControls::ListItemType itemType);" />
      <MemberSignature Language="F#" Value="abstract member CreateItem : int * int * System.Web.UI.WebControls.ListItemType -&gt; System.Web.UI.WebControls.DataGridItem&#xA;override this.CreateItem : int * int * System.Web.UI.WebControls.ListItemType -&gt; System.Web.UI.WebControls.DataGridItem" Usage="dataGrid.CreateItem (itemIndex, dataSourceIndex, itemType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="dataSourceIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="itemIndex"><see cref="T:System.Web.UI.WebControls.DataGridItem" /> 개체의 인덱스입니다.</param>
        <param name="dataSourceIndex">데이터 소스의 데이터 항목에 대한 인덱스입니다.</param>
        <param name="itemType"><see cref="T:System.Web.UI.WebControls.ListItemType" /> 값 중 하나입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.DataGridItem" /> 개체를 만듭니다.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.DataGridItem" /> 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.CreateItem%2A> 에서 사용 하는 도우미 메서드입니다 합니다 <xref:System.Web.UI.WebControls.DataGrid> 클래스를 만드는 해당 <xref:System.Web.UI.WebControls.DataGridItem> 개체입니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 사용합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGridItem" />
        <altmember cref="T:System.Web.UI.WebControls.ListItemType" />
      </Docs>
    </Member>
    <Member MemberName="CurrentPageIndex">
      <MemberSignature Language="C#" Value="public int CurrentPageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentPageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.CurrentPageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentPageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentPageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentPageIndex : int with get, set" Usage="System.Web.UI.WebControls.DataGrid.CurrentPageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 표시된 페이지의 인덱스를 가져오거나 설정합니다.</summary>
        <value>현재 표시된 페이지의 인덱스(0부터 시작)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 현재 표시 된 페이지를 확인 하려면이 속성을 사용 합니다 <xref:System.Web.UI.WebControls.DataGrid> 페이징이 활성화 된 경우를 제어 합니다. 이 속성은 프로그래밍 방식으로 표시 되는 페이지를 제어 하도 사용 됩니다.  
  
 또한 기본 제공 페이징 컨트롤 숨기기 하 고 사용자 지정 컨트롤을 만들 수 있습니다. 특정 페이지를 표시 하려면이 속성을 설정 표시 하 고 다음 데이터를 다시 바인딩합니다 하려는 페이지 인덱스에는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> 속성을 프로그래밍 방식으로 표시할 페이지를 제어는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다.  
  
 [!code-aspx-csharp[Classic DataGrid.CurrentPageIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.CurrentPageIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.CurrentPageIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.CurrentPageIndex Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowPaging/CS/datagridallowpagingcs.aspx#1)]
 [!code-aspx-vb[DataGridAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowPaging/VB/datagridallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정된 페이지의 인덱스가 음수 값인 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowCustomPaging" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridCommandEventHandler DeleteCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridCommandEventHandler DeleteCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DeleteCommand As DataGridCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataGridCommandEventHandler ^ DeleteCommand;" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Web.UI.WebControls.DataGridCommandEventHandler " Usage="member this.DeleteCommand : System.Web.UI.WebControls.DataGridCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤에 있는 항목에 대해 삭제 단추를 클릭하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> 항목에 대해 삭제 단추를 클릭할 때 이벤트가 발생 합니다 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다.  
  
 에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> 이벤트 데이터 원본에서 선택한 항목을 제거 하 고 다음 데이터를 다시 바인딩 횟수는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> 에서 항목을 삭제 하는 이벤트를 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.OnDeleteCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandName">
      <MemberSignature Language="C#" Value="public const string DeleteCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DeleteCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const DeleteCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DeleteCommandName;" />
      <MemberSignature Language="F#" Value="val mutable DeleteCommandName : string" Usage="System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>삭제 명령 이름을 나타냅니다. 이 필드는 읽기 전용입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataGrid.DeleteCommandName> 필드를 Delete 명령 이름을 나타냅니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="EditCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridCommandEventHandler EditCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridCommandEventHandler EditCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.EditCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditCommand As DataGridCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataGridCommandEventHandler ^ EditCommand;" />
      <MemberSignature Language="F#" Value="member this.EditCommand : System.Web.UI.WebControls.DataGridCommandEventHandler " Usage="member this.EditCommand : System.Web.UI.WebControls.DataGridCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤에 있는 항목에 대해 편집 단추를 클릭하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.EditCommand> 항목에 대해 편집 단추를 클릭할 때 이벤트가 발생 합니다 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
 에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataGrid.EditCommand> 이벤트 집합을 <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> 속성 선택된 된 행을 다음 데이터를 다시 바인딩합니다는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다.  
  
> [!CAUTION]
>  텍스트에 표시 되기 전에 HTML 인코딩해야 아닙니다는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. 이 텍스트에 HTML 태그 내에서 스크립트를 포함할 수 있습니다. 컨트롤에 대 한 값은 사용자 입력 으로부터 가져올, 경우에 보안 취약점을 줄이는 값을 확인 해야 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGrid.EditCommand> 에서 항목을 편집 하는 이벤트를 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.OnEditCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="EditCommandName">
      <MemberSignature Language="C#" Value="public const string EditCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EditCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const EditCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EditCommandName;" />
      <MemberSignature Language="F#" Value="val mutable EditCommandName : string" Usage="System.Web.UI.WebControls.DataGrid.EditCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>편집 명령 이름을 나타냅니다. 이 필드는 읽기 전용입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataGrid.EditCommandName> 필드를 편집 명령 이름을 나타냅니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="EditItemIndex">
      <MemberSignature Language="C#" Value="public virtual int EditItemIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.EditItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int EditItemIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemIndex : int with get, set" Usage="System.Web.UI.WebControls.DataGrid.EditItemIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>편집할 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤에 있는 항목의 인덱스를 가져오거나 설정합니다.</summary>
        <value>편집할 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤에 있는 항목의 인덱스입니다. 기본값은 -1로, <see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤에 편집하고 있는 항목이 없음을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> 속성 때를 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤에 포함는 <xref:System.Web.UI.WebControls.EditCommandColumn> 에서 선택한 항목의 인덱스를 확인 하는 <xref:System.Web.UI.WebControls.DataGrid> 편집 컨트롤입니다.  
  
 이 속성은 프로그래밍 방식으로 편집 되 고 있는 항목을 제어 하도 사용 됩니다. 에 있는 항목의 인덱스에이 속성을 설정 합니다 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤에서 해당 항목에 대 한 편집 컨트롤을 통해는 <xref:System.Web.UI.WebControls.EditCommandColumn>합니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> 속성은 0부터 시작 합니다.  
  
 편집을 취소 하려면 프로그래밍 방식으로-1로이 속성을 설정 합니다.  
  
> [!CAUTION]
>  텍스트에 표시 되기 전에 HTML 인코딩해야 아닙니다는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. 이 텍스트에 HTML 태그 내에서 스크립트를 포함할 수 있습니다. 컨트롤에 대 한 값은 사용자 입력 으로부터 가져올, 경우에 보안 취약점을 줄이는 값을 확인 해야 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> 속성에서 편집을 위해 선택한 항목을 확인 하는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤.  
  
 [!code-aspx-csharp[Classic DataGrid.EditItemIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.EditItemIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.EditItemIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.EditItemIndex Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정된 인덱스가 -1보다 작은 경우</exception>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.EditCommand" />
        <altmember cref="T:System.Web.UI.WebControls.EditCommandColumn" />
      </Docs>
    </Member>
    <Member MemberName="EditItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle EditItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.EditItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EditItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ EditItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataGrid.EditItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>편집을 위해 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤에서 선택된 항목의 스타일 속성을 가져옵니다.</summary>
        <value>편집을 위해 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에서 선택된 항목의 스타일 속성을 포함하는 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 개체입니다. 기본값은 빈 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A> 속성에서 편집을 위해 선택한 항목에 대 한 사용자 지정 스타일을 제공 하는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. 조정할 수 있는 공통 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다.  
  
 항목의 스타일 속성을 <xref:System.Web.UI.WebControls.DataGrid> 제어 계층을 통해 다른 하나씩 스타일 속성에서 상속 됩니다. 계층에서 낮은 설정 항목 스타일 속성은 계층 구조의 상위 항목 스타일 속성에 의해 상속 됩니다. 예를 들어 빨강 글꼴을 지정 하는 경우는 <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> 속성을 다른 항목 스타일의 모든 속성을 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤 빨강 글꼴을 갖게 됩니다. 이 옵션을 사용 하면 단일 항목의 스타일 속성을 설정 하 여 컨트롤에 공통 된 모양을 제공할 수 있습니다. 스타일 속성을 설정 하 여 상위 계층에 있는 항목 스타일 속성에 대 한 상속 된 스타일 설정을 재정의할 수 있습니다. 예를 들어, 파랑 글꼴을 지정할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> 속성에 지정 된 빨간색 글꼴로 재정의 <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> 속성입니다. 다음 표에서 순위가 가장 높은 계층 순서를 나열합니다.  
  
|우선 순위|스타일 속성|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 편집을 위해 선택한 항목에 대 한 사용자 지정 스타일을 지정 하려면 합니다 `<EditItemStyle>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. 다음을 표시 하 여 스타일 특성을 `<EditItemStyle>` 태그입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A> 속성을 노란색으로 편집을 위해 선택한 항목의 배경색을 설정 합니다.  
  
 [!code-aspx-csharp[Classic DataGrid.EditItemStyle Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.EditItemStyle Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.EditItemStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.EditItemStyle Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataGrid.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤에 있는 바닥글 구역의 스타일 속성을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 바닥글 구역의 스타일 속성을 포함하는 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 개체입니다. 기본값은 빈 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 바닥글에 사용자 지정 스타일을 지정 하려면이 속성을 사용 합니다 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. 조정할 수 있는 공통 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다.  
  
 <xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A> 의 속성을 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤의 스타일 설정을 상속 합니다 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> 속성. 예를 들어 빨강 글꼴을 지정 하는 경우는 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> 속성을 <xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A> 속성 빨강 글꼴을 갖게 됩니다. 이 옵션을 사용 하면 단일 스타일 속성을 설정 하 여 컨트롤에 공통 된 모양을 제공할 수 있습니다. 설정 하 여 상속 된 스타일 설정을 재정의할 수는 <xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A> 속성입니다. 예를 들어, 파랑 글꼴을 지정할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A> 속성에 지정 된 빨간색 글꼴로 재정의 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> 속성입니다.  
  
 바닥글 구역에 대 한 사용자 지정 스타일을 지정 하려면 합니다 `<FooterStyle>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. 다음을 표시 하 여 스타일 특성을 `<FooterStyle>` 태그입니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.WebControls.DataGrid.ShowFooter%2A> 속성으로 설정 되어 있어야 `true` 표시 되도록이 속성에 대 한 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A> 바닥글 섹션의 배경색을 설정 하는 속성입니다.  
  
 [!code-aspx-csharp[classic datagrid.footerstyle example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.FooterStyle Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[classic datagrid.footerstyle example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.FooterStyle Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridFooterStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridFooterStyle/CS/datagridfooterstylecs.aspx#1)]
 [!code-aspx-vb[DataGridFooterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridFooterStyle/VB/datagridfooterstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.ShowFooter" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataGrid.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤에 있는 머리글 구역의 스타일 속성을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 머리글 구역의 스타일 속성을 포함하는 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 개체입니다. 기본값은 빈 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 사용자 지정 스타일의 머리글 구역에 대 한 제공 된 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다. 조정할 수 있는 공통 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다.  
  
 <xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A> 의 속성을 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤의 스타일 설정을 상속 합니다 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> 속성. 예를 들어 빨강 글꼴을 지정 하는 경우는 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> 속성을 <xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A> 속성 빨강 글꼴을 갖게 됩니다. 이 옵션을 사용 하면 단일 스타일 속성을 설정 하 여 컨트롤에 공통 된 모양을 제공할 수 있습니다. 설정 하 여 상속 된 스타일 설정을 재정의할 수는 <xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A> 속성입니다. 예를 들어, 파랑 글꼴을 지정할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A> 속성에 지정 된 빨간색 글꼴로 재정의 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> 속성입니다.  
  
 머리글 구역에 대 한 사용자 지정 스타일을 지정 하려면 합니다 `<HeaderStyle>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. 다음을 표시 하 여 스타일 특성을 `<HeaderStyle>` 태그입니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.WebControls.DataGrid.ShowHeader%2A> 속성으로 설정 되어 있어야 `true` 표시 되도록이 속성에 대 한 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A> 머리글 섹션의 배경색을 설정 하는 속성입니다.  
  
 [!code-aspx-csharp[classic datagrid.footerstyle example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.FooterStyle Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[classic datagrid.footerstyle example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.FooterStyle Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridFooterStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridFooterStyle/CS/datagridfooterstylecs.aspx#1)]
 [!code-aspx-vb[DataGridFooterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridFooterStyle/VB/datagridfooterstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.ShowHeader" />
      </Docs>
    </Member>
    <Member MemberName="InitializeItem">
      <MemberSignature Language="C#" Value="protected virtual void InitializeItem (System.Web.UI.WebControls.DataGridItem item, System.Web.UI.WebControls.DataGridColumn[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeItem(class System.Web.UI.WebControls.DataGridItem item, class System.Web.UI.WebControls.DataGridColumn[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.InitializeItem(System.Web.UI.WebControls.DataGridItem,System.Web.UI.WebControls.DataGridColumn[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeItem (item As DataGridItem, columns As DataGridColumn())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeItem(System::Web::UI::WebControls::DataGridItem ^ item, cli::array &lt;System::Web::UI::WebControls::DataGridColumn ^&gt; ^ columns);" />
      <MemberSignature Language="F#" Value="abstract member InitializeItem : System.Web.UI.WebControls.DataGridItem * System.Web.UI.WebControls.DataGridColumn[] -&gt; unit&#xA;override this.InitializeItem : System.Web.UI.WebControls.DataGridItem * System.Web.UI.WebControls.DataGridColumn[] -&gt; unit" Usage="dataGrid.InitializeItem (item, columns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Web.UI.WebControls.DataGridItem" />
        <Parameter Name="columns" Type="System.Web.UI.WebControls.DataGridColumn[]" />
      </Parameters>
      <Docs>
        <param name="item">초기화할 <see cref="T:System.Web.UI.WebControls.DataGridItem" />입니다.</param>
        <param name="columns">이 <see cref="T:System.Web.UI.WebControls.DataGridColumn" /> 컨트롤의 열이 들어 있는 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 개체의 배열입니다.</param>
        <summary>지정된 <see cref="T:System.Web.UI.WebControls.DataGridItem" /> 개체를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DataGrid.InitializeItem%2A> 메서드는에서 사용 하는 도우미 메서드입니다 합니다 <xref:System.Web.UI.WebControls.DataGrid> 으로 지정 된 클래스 <xref:System.Web.UI.WebControls.DataGridItem> 개체입니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 사용합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGridItem" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridColumn" />
      </Docs>
    </Member>
    <Member MemberName="InitializePager">
      <MemberSignature Language="C#" Value="protected virtual void InitializePager (System.Web.UI.WebControls.DataGridItem item, int columnSpan, System.Web.UI.WebControls.PagedDataSource pagedDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializePager(class System.Web.UI.WebControls.DataGridItem item, int32 columnSpan, class System.Web.UI.WebControls.PagedDataSource pagedDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.InitializePager(System.Web.UI.WebControls.DataGridItem,System.Int32,System.Web.UI.WebControls.PagedDataSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializePager(System::Web::UI::WebControls::DataGridItem ^ item, int columnSpan, System::Web::UI::WebControls::PagedDataSource ^ pagedDataSource);" />
      <MemberSignature Language="F#" Value="abstract member InitializePager : System.Web.UI.WebControls.DataGridItem * int * System.Web.UI.WebControls.PagedDataSource -&gt; unit&#xA;override this.InitializePager : System.Web.UI.WebControls.DataGridItem * int * System.Web.UI.WebControls.PagedDataSource -&gt; unit" Usage="dataGrid.InitializePager (item, columnSpan, pagedDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Web.UI.WebControls.DataGridItem" />
        <Parameter Name="columnSpan" Type="System.Int32" />
        <Parameter Name="pagedDataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
      </Parameters>
      <Docs>
        <param name="item">페이저가 들어 있는 <see cref="T:System.Web.UI.WebControls.DataGridItem" />입니다.</param>
        <param name="columnSpan">페이저에 포함할 열의 수입니다.</param>
        <param name="pagedDataSource">페이저의 속성이 포함된 <see cref="T:System.Web.UI.WebControls.PagedDataSource" />입니다.</param>
        <summary>페이징 UI가 들어 있는 <see cref="T:System.Web.UI.WebControls.DataGridItem" /> 개체를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 페이징 UI를 단일 기본 제공 된 탐색 모음 이라고 <xref:System.Web.UI.WebControls.TableCell> 의 모든 열에 걸쳐 있는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. 합니다 <xref:System.Web.UI.WebControls.DataGrid.InitializePager%2A> 메서드는에서 사용 하는 도우미 메서드입니다는 <xref:System.Web.UI.WebControls.DataGrid> 페이저 행을 만드는 클래스입니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 사용합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGridItem" />
        <altmember cref="T:System.Web.UI.WebControls.PagedDataSource" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As DataGridCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataGridCommandEventHandler ^ ItemCommand;" />
      <MemberSignature Language="F#" Value="member this.ItemCommand : System.Web.UI.WebControls.DataGridCommandEventHandler " Usage="member this.ItemCommand : System.Web.UI.WebControls.DataGridCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤에서 아무 단추나 클릭하면 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> 에서 단추를 클릭할 때 이벤트가 발생 합니다 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. 이 이벤트를 추가, 같은 사용자 지정 CommandName 값을 사용 하 여 단추 컨트롤을 처리 하는 일반적으로 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> 이벤트를 추가 하 여 장바구니에서 항목을 제거 합니다.  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.OnItemCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridItemEventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridItemEventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As DataGridItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataGridItemEventHandler ^ ItemCreated;" />
      <MemberSignature Language="F#" Value="member this.ItemCreated : System.Web.UI.WebControls.DataGridItemEventHandler " Usage="member this.ItemCreated : System.Web.UI.WebControls.DataGridItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤에서 항목을 만들면 서버측에서 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> 항목이 이벤트가 발생 합니다 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤이 만들어지고, 데이터를 컨트롤에 바인딩되지 않은 왕복 시와 시.  
  
 합니다 <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> 이벤트는 일반적으로 내용과 있는 행의 모양을 제어 하는 데 사용 됩니다는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> 항목에서 작성 되는 순서를 표시 하는 이벤트를 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
 [!code-aspx-csharp[Classic DataGrid.ItemCreated Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ItemCreated Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.ItemCreated Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ItemCreated Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemCreated/CS/datagriditemcreatedcs.aspx#1)]
 [!code-aspx-vb[DataGridItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemCreated/VB/datagriditemcreatedvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemCreated2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemCreated2/CS/datagriditemcreated2cs.aspx#1)]
 [!code-aspx-vb[DataGridItemCreated2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemCreated2/VB/datagriditemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.OnItemCreated(System.Web.UI.WebControls.DataGridItemEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridItemEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridItemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridItemEventHandler ItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridItemEventHandler ItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.ItemDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDataBound As DataGridItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataGridItemEventHandler ^ ItemDataBound;" />
      <MemberSignature Language="F#" Value="member this.ItemDataBound : System.Web.UI.WebControls.DataGridItemEventHandler " Usage="member this.ItemDataBound : System.Web.UI.WebControls.DataGridItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목이 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤에 데이터 바인딩된 후 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.ItemDataBound> 이벤트는 항목은 데이터에 바인딩된 후 발생 합니다 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다. 이 이벤트는 클라이언트에 표시 되기 전에 데이터 항목에 액세스할 수 있는 마지막 기회를 제공 합니다. 이 이벤트가 발생 한 후 데이터 항목은 null이 되어 더 이상 사용할 수 없습니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGrid.ItemDataBound> 의 항목 순서를 표시 하는 이벤트를 <xref:System.Web.UI.WebControls.DataGrid> 은 경계가 지정 된 데이터입니다.  
  
 [!code-aspx-csharp[Classic DataGrid.ItemDataBound Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ItemDataBound Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.ItemDataBound Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ItemDataBound Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemDataBound/CS/datagriditemdataboundcs.aspx#1)]
 [!code-aspx-vb[DataGridItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemDataBound/VB/datagriditemdataboundvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemDataBound2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemDataBound2/CS/datagriditemdatabound2cs.aspx#1)]
 [!code-aspx-vb[DataGridItemDataBound2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemDataBound2/VB/datagriditemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.OnItemDataBound(System.Web.UI.WebControls.DataGridItemEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridItemEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridItemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataGridItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataGridItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.Items" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Items As DataGridItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataGridItemCollection ^ Items { System::Web::UI::WebControls::DataGridItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Web.UI.WebControls.DataGridItemCollection" Usage="System.Web.UI.WebControls.DataGrid.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGridItem" /> 컨트롤에 있는 개별 항목을 나타내는 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 개체의 컬렉션을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataGridItemCollection" /> 컨트롤에 있는 개별 항목을 나타내는 <see cref="T:System.Web.UI.WebControls.DataGridItem" /> 개체의 컬렉션이 들어 있는 <see cref="T:System.Web.UI.WebControls.DataGrid" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.DataGrid.Items%2A> 컬렉션의 항목을 프로그래밍 방식으로 제어 하는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다. <xref:System.Web.UI.WebControls.DataGrid.Items%2A> 컬렉션 항목 컬렉션에 추가 하거나 제거 하는 모든 메서드를 제공 하지 않습니다. 에 대 한 처리기를 제공 하 여 항목의 내용을 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> 이벤트입니다.  
  
> [!NOTE]
>  에 포함 된 데이터 원본에 연결 하는 항목만 <xref:System.Web.UI.WebControls.DataGrid.Items%2A> 컬렉션입니다. 머리글, 바닥글 및 구분 기호는 컬렉션에 포함 되지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataGrid.Items%2A> 컬렉션의 각 항목의 내용을 표시 하는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다.  
  
 [!code-aspx-csharp[Classic DataGrid.Items Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.Items Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.Items Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.Items Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridColumnVisible#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridColumnVisible/CS/datagridcolumnvisiblecs.aspx#1)]
 [!code-aspx-vb[DataGridColumnVisible#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridColumnVisible/VB/datagridcolumnvisiblevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGridItemCollection" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridItem" />
      </Docs>
    </Member>
    <Member MemberName="ItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle ItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle ItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.ItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ ItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataGrid.ItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤에 있는 항목의 스타일 속성을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 항목의 스타일 속성을 포함하는 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 개체입니다. 기본값은 빈 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 항목에 대 한 사용자 지정 스타일을 제공 하는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. 조정할 수 있는 공통 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다.  
  
 항목의 스타일 속성을 <xref:System.Web.UI.WebControls.DataGrid> 제어 계층을 통해 다른 하나씩 스타일 속성에서 상속 됩니다. 계층에서 낮은 설정 항목 스타일 속성은 계층 구조의 상위 항목 스타일 속성에 의해 상속 됩니다. 예를 들어 빨강 글꼴을 지정 하는 경우는 <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> 속성을 다른 항목 스타일의 모든 속성을 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤 빨강 글꼴을 갖게 됩니다. 이 옵션을 사용 하면 단일 항목의 스타일 속성을 설정 하 여 컨트롤에 공통 된 모양을 제공할 수 있습니다. 스타일 속성을 설정 하 여 상위 계층에 있는 항목 스타일 속성에 대 한 상속 된 스타일 설정을 재정의할 수 있습니다. 예를 들어, 파랑 글꼴을 지정할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> 속성에 지정 된 빨간색 글꼴로 재정의 <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> 속성입니다. 다음 표에서 순위가 가장 높은 계층 순서를 나열합니다.  
  
|우선 순위|스타일 속성|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 항목에 대 한 사용자 지정 스타일을 지정 하는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤을 배치 합니다 `<ItemStyle>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤. 다음을 표시 하 여 스타일 특성을 `<ItemStyle>` 태그입니다.  
  
 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> 교대로 반복 되는 다양 한 모양을 제공 하는 속성의 항목을 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> 속성에 있는 항목의 배경색을 설정 하는 <xref:System.Web.UI.WebControls.DataGrid> 노란색으로 합니다.  
  
 [!code-aspx-csharp[Classic DataGrid.ItemStyle Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ItemStyle Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.ItemStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ItemStyle Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemStyle/CS/datagriditemstylecs.aspx#1)]
 [!code-aspx-vb[DataGridItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemStyle/VB/datagriditemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="dataGrid.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Web.UI.WebControls.DataGrid" />의 저장된 상태입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" />의 저장된 상태를 로드합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextPageCommandArgument">
      <MemberSignature Language="C#" Value="public const string NextPageCommandArgument;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string NextPageCommandArgument" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public Const NextPageCommandArgument As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ NextPageCommandArgument;" />
      <MemberSignature Language="F#" Value="val mutable NextPageCommandArgument : string" Usage="System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>다음 명령 인수를 나타냅니다. 이 필드는 읽기 전용입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument> 필드 다음 명령 인수를 나타냅니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="dataGrid.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">이벤트 소스입니다.</param>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>컨테이너 내의 컨트롤을 통해 발생한 이벤트를 페이지의 UI 서버 컨트롤 계층 구조에서 상위 수준으로 전달합니다.</summary>
        <returns>컨테이너 내의 컨트롤을 통해 발생한 이벤트를 이 메서드가 페이지의 UI 서버 컨트롤 계층 구조에서 상위 수준으로 전달하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataGrid.OnBubbleEvent%2A> 페이지의 UI 서버 컨트롤 계층 구조 컨테이너 내의 컨트롤에서 발생 하는 이벤트를 전달 하는 방법입니다.  
  
> [!NOTE]
>  이 메서드는 주로 컨트롤 개발자가 사용합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnCancelCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCancelCommand (System.Web.UI.WebControls.DataGridCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancelCommand(class System.Web.UI.WebControls.DataGridCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnCancelCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCancelCommand (e As DataGridCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCancelCommand(System::Web::UI::WebControls::DataGridCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCancelCommand : System.Web.UI.WebControls.DataGridCommandEventArgs -&gt; unit&#xA;override this.OnCancelCommand : System.Web.UI.WebControls.DataGridCommandEventArgs -&gt; unit" Usage="dataGrid.OnCancelCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataGrid.CancelCommand" /> 이벤트를 발생시킵니다. 이를 통해 이벤트에 대한 사용자 지정 처리기를 제공할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataGrid.OnCancelCommand%2A> 에 대 한 사용자 지정 처리기를 제공 하는 메서드는 <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> 이벤트.  
  
 <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> 항목에 대해 취소 단추를 클릭할 때 이벤트가 발생 합니다 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
 에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> 이벤트 집합을 <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> 속성을 `-1` (항목을 선택 취소)를 다음 데이터를 다시 바인딩합니다는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다.  
  
> [!CAUTION]
>  텍스트에 표시 되기 전에 HTML 인코딩해야 아닙니다는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. 이 텍스트에 HTML 태그 내에서 스크립트를 포함할 수 있습니다. 컨트롤에 대 한 값은 사용자 입력 으로부터 가져올, 경우에 보안 취약점을 줄이는 값을 확인 해야 합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> 의 항목에 대 한 편집 내용을 취소 하는 이벤트를 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.DataGrid.OnCancelCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DataGrid.OnCancelCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> 메서드.  
  
이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.CancelCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleteCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleteCommand (System.Web.UI.WebControls.DataGridCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleteCommand(class System.Web.UI.WebControls.DataGridCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnDeleteCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleteCommand (e As DataGridCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleteCommand(System::Web::UI::WebControls::DataGridCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleteCommand : System.Web.UI.WebControls.DataGridCommandEventArgs -&gt; unit&#xA;override this.OnDeleteCommand : System.Web.UI.WebControls.DataGridCommandEventArgs -&gt; unit" Usage="dataGrid.OnDeleteCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataGrid.DeleteCommand" /> 이벤트를 발생시킵니다. 이를 통해 이벤트에 대한 사용자 지정 처리기를 제공할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataGrid.OnDeleteCommand%2A> 에 대 한 사용자 지정 처리기를 제공 하는 메서드는 <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> 이벤트.  
  
 합니다 <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> 항목에 대해 삭제 단추를 클릭할 때 이벤트가 발생 합니다 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다.  
  
 에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> 이벤트 데이터 원본에서 선택한 항목을 제거 하 고 다음 데이터를 다시 바인딩 횟수는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> 에서 항목을 삭제 하는 이벤트를 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.DataGrid.OnDeleteCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DataGrid.OnDeleteCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> 메서드.  
  
이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.DeleteCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnEditCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnEditCommand (System.Web.UI.WebControls.DataGridCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditCommand(class System.Web.UI.WebControls.DataGridCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnEditCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditCommand (e As DataGridCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditCommand(System::Web::UI::WebControls::DataGridCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEditCommand : System.Web.UI.WebControls.DataGridCommandEventArgs -&gt; unit&#xA;override this.OnEditCommand : System.Web.UI.WebControls.DataGridCommandEventArgs -&gt; unit" Usage="dataGrid.OnEditCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataGrid.EditCommand" /> 이벤트를 발생시킵니다. 이를 통해 이벤트에 대한 사용자 지정 처리기를 제공할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataGrid.OnEditCommand%2A> 에 대 한 사용자 지정 처리기를 제공 하는 메서드는 <xref:System.Web.UI.WebControls.DataGrid.EditCommand> 이벤트.  
  
 <xref:System.Web.UI.WebControls.DataGrid.EditCommand> 항목에 대해 편집 단추를 클릭할 때 이벤트가 발생 합니다 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
 에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataGrid.EditCommand> 이벤트 집합을 <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> 속성 선택된 된 행을 다음 데이터를 다시 바인딩합니다는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
> [!CAUTION]
>  텍스트에 표시 되기 전에 HTML 인코딩해야 아닙니다는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. 이 텍스트에 HTML 태그 내에서 스크립트를 포함할 수 있습니다. 컨트롤에 대 한 값은 사용자 입력 으로부터 가져올, 경우에 보안 취약점을 줄이는 값을 확인 해야 합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGrid.EditCommand> 에서 항목을 편집 하는 이벤트를 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.DataGrid.OnEditCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DataGrid.OnEditCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> 메서드.  
  
이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.EditCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.DataGridCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.DataGridCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnItemCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As DataGridCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::DataGridCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCommand : System.Web.UI.WebControls.DataGridCommandEventArgs -&gt; unit&#xA;override this.OnItemCommand : System.Web.UI.WebControls.DataGridCommandEventArgs -&gt; unit" Usage="dataGrid.OnItemCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataGrid.ItemCommand" /> 이벤트를 발생시킵니다. 이를 통해 이벤트에 대한 사용자 지정 처리기를 제공할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataGrid.OnItemCommand%2A> 에 대 한 사용자 지정 처리기를 제공 하는 메서드는 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> 이벤트.  
  
 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> 에서 단추를 클릭할 때 이벤트가 발생 합니다 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. 이 이벤트를 추가, 같은 사용자 지정 CommandName 값을 사용 하 여 단추 컨트롤을 처리 하는 일반적으로 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> 이벤트를 추가 하 여 장바구니에서 항목을 제거 합니다.  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.DataGrid.OnItemCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DataGrid.OnItemCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> 메서드.  
  
이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (System.Web.UI.WebControls.DataGridItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.Web.UI.WebControls.DataGridItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnItemCreated(System.Web.UI.WebControls.DataGridItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As DataGridItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(System::Web::UI::WebControls::DataGridItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCreated : System.Web.UI.WebControls.DataGridItemEventArgs -&gt; unit&#xA;override this.OnItemCreated : System.Web.UI.WebControls.DataGridItemEventArgs -&gt; unit" Usage="dataGrid.OnItemCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Web.UI.WebControls.DataGridItemEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataGrid.ItemCreated" /> 이벤트를 발생시킵니다. 이를 통해 이벤트에 대한 사용자 지정 처리기를 제공할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataGrid.OnItemCreated%2A> 에 대 한 사용자 지정 처리기를 제공 하는 메서드는 <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> 이벤트.  
  
 합니다 <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> 항목이 이벤트가 발생 합니다 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤이 만들어지고, 데이터를 컨트롤에 바인딩되지 않은 왕복 시와 시.  
  
 합니다 <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> 이벤트는 일반적으로 내용과 있는 행의 모양을 제어 하는 데 사용 됩니다는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> 항목에서 작성 되는 순서를 표시 하는 이벤트를 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
 [!code-aspx-csharp[Classic DataGrid.ItemCreated Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ItemCreated Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.ItemCreated Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ItemCreated Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemCreated/CS/datagriditemcreatedcs.aspx#1)]
 [!code-aspx-vb[DataGridItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemCreated/VB/datagriditemcreatedvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemCreated2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemCreated2/CS/datagriditemcreated2cs.aspx#1)]
 [!code-aspx-vb[DataGridItemCreated2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemCreated2/VB/datagriditemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.DataGrid.OnItemCreated(System.Web.UI.WebControls.DataGridItemEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DataGrid.OnItemCreated(System.Web.UI.WebControls.DataGridItemEventArgs)" /> 메서드.  
  
이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.ItemCreated" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridItemEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridItemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDataBound (System.Web.UI.WebControls.DataGridItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDataBound(class System.Web.UI.WebControls.DataGridItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnItemDataBound(System.Web.UI.WebControls.DataGridItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDataBound (e As DataGridItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDataBound(System::Web::UI::WebControls::DataGridItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDataBound : System.Web.UI.WebControls.DataGridItemEventArgs -&gt; unit&#xA;override this.OnItemDataBound : System.Web.UI.WebControls.DataGridItemEventArgs -&gt; unit" Usage="dataGrid.OnItemDataBound e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Web.UI.WebControls.DataGridItemEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataGrid.ItemDataBound" /> 이벤트를 발생시킵니다. 이를 통해 이벤트에 대한 사용자 지정 처리기를 제공할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataGrid.OnItemDataBound%2A> 에 대 한 사용자 지정 처리기를 제공 하는 메서드는 <xref:System.Web.UI.WebControls.DataGrid.ItemDataBound> 이벤트.  
  
 <xref:System.Web.UI.WebControls.DataGrid.ItemDataBound> 이벤트는 항목은 데이터에 바인딩된 후 발생 합니다 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다. 이 이벤트는 클라이언트에 표시 되기 전에 데이터 항목에 액세스할 수 있는 마지막 기회를 제공 합니다. 이 이벤트가 발생 한 후 데이터 항목은 null이 되어 더 이상 사용할 수 없습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGrid.ItemDataBound> 의 항목 순서를 표시 하는 이벤트를 <xref:System.Web.UI.WebControls.DataGrid> 은 경계가 지정 된 데이터입니다.  
  
 [!code-aspx-csharp[Classic DataGrid.ItemDataBound Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ItemDataBound Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.ItemDataBound Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ItemDataBound Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemDataBound/CS/datagriditemdataboundcs.aspx#1)]
 [!code-aspx-vb[DataGridItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemDataBound/VB/datagriditemdataboundvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridItemDataBound2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemDataBound2/CS/datagriditemdatabound2cs.aspx#1)]
 [!code-aspx-vb[DataGridItemDataBound2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemDataBound2/VB/datagriditemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.DataGrid.OnItemDataBound(System.Web.UI.WebControls.DataGridItemEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DataGrid.OnItemDataBound(System.Web.UI.WebControls.DataGridItemEventArgs)" /> 메서드.  
  
이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.ItemDataBound" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridItemEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridItemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanged (System.Web.UI.WebControls.DataGridPageChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanged(class System.Web.UI.WebControls.DataGridPageChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnPageIndexChanged(System.Web.UI.WebControls.DataGridPageChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanged (e As DataGridPageChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanged(System::Web::UI::WebControls::DataGridPageChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPageIndexChanged : System.Web.UI.WebControls.DataGridPageChangedEventArgs -&gt; unit&#xA;override this.OnPageIndexChanged : System.Web.UI.WebControls.DataGridPageChangedEventArgs -&gt; unit" Usage="dataGrid.OnPageIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridPageChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Web.UI.WebControls.DataGridPageChangedEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataGrid.PageIndexChanged" /> 이벤트를 발생시킵니다. 이를 통해 이벤트에 대한 사용자 지정 처리기를 제공할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataGrid.OnPageIndexChanged%2A> 에 대 한 사용자 지정 처리기를 제공 하는 메서드는 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> 이벤트.  
  
 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> 페이지 선택 요소 중 하나를 클릭 하면 이벤트가 발생 합니다.  
  
 에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> 이벤트 집합을 <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> 속성을 표시 하려는 페이지 및 다음 사용 하 여 인덱스를 <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> 데이터를 바인딩하는 메서드를 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤.  
  
> [!NOTE]
>  이벤트 처리기는 수신 된 <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs> 개체를 매개 변수로 합니다. 사용할 수는 <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs.NewPageIndex%2A> 속성의 페이지 선택 요소에서 사용자가 선택한 페이지의 인덱스를 확인 하려면이 매개 변수는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> 이벤트입니다. 페이지를 표시 합니다 <xref:System.Web.UI.WebControls.DataGrid> 10 항목 단위로 제어 합니다.  
  
 [!code-aspx-csharp[DataGridAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowPaging/CS/datagridallowpagingcs.aspx#1)]
 [!code-aspx-vb[DataGridAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowPaging/VB/datagridallowpagingvb.aspx#1)]  
  
 [!code-aspx-csharp[PageIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageIndexChanged/CS/datagridpageindexchangedcs.aspx#1)]
 [!code-aspx-vb[PageIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageIndexChanged/VB/datagridpageindexchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.DataGrid.OnPageIndexChanged(System.Web.UI.WebControls.DataGridPageChangedEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DataGrid.OnPageIndexChanged(System.Web.UI.WebControls.DataGridPageChangedEventArgs)" /> 메서드.  
  
이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.PageIndexChanged" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridPageChangedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridPageChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnSortCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnSortCommand (System.Web.UI.WebControls.DataGridSortCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSortCommand(class System.Web.UI.WebControls.DataGridSortCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnSortCommand(System.Web.UI.WebControls.DataGridSortCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSortCommand (e As DataGridSortCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSortCommand(System::Web::UI::WebControls::DataGridSortCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSortCommand : System.Web.UI.WebControls.DataGridSortCommandEventArgs -&gt; unit&#xA;override this.OnSortCommand : System.Web.UI.WebControls.DataGridSortCommandEventArgs -&gt; unit" Usage="dataGrid.OnSortCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridSortCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Web.UI.WebControls.DataGridSortCommandEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataGrid.SortCommand" /> 이벤트를 발생시킵니다. 이를 통해 이벤트에 대한 사용자 지정 처리기를 제공할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataGrid.OnSortCommand%2A> 에 대 한 사용자 지정 처리기를 제공 하는 메서드는 <xref:System.Web.UI.WebControls.DataGrid.SortCommand> 이벤트.  
  
 <xref:System.Web.UI.WebControls.DataGrid.SortCommand> 열이 정렬 될 때 이벤트가 발생 합니다.  
  
 에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataGrid.SortCommand> 이벤트 목록, 정렬 및 다음 데이터를 다시 바인딩 횟수는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGrid.SortCommand> 정렬 하는 이벤트를 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
 [!code-aspx-csharp[DataGridAllowSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowSorting/CS/datagridallowsortingcs.aspx#1)]
 [!code-aspx-vb[DataGridAllowSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowSorting/VB/datagridallowsortingvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridSortCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridSortCommand/CS/datagridsortcommandcs.aspx#1)]
 [!code-aspx-vb[DataGridSortCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridSortCommand/VB/datagridsortcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 하는 경우 <see cref="M:System.Web.UI.WebControls.DataGrid.OnSortCommand(System.Web.UI.WebControls.DataGridSortCommandEventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DataGrid.OnSortCommand(System.Web.UI.WebControls.DataGridSortCommandEventArgs)" /> 메서드.  
  
이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.SortCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridSortCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridSortCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdateCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdateCommand (System.Web.UI.WebControls.DataGridCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdateCommand(class System.Web.UI.WebControls.DataGridCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnUpdateCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdateCommand (e As DataGridCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdateCommand(System::Web::UI::WebControls::DataGridCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdateCommand : System.Web.UI.WebControls.DataGridCommandEventArgs -&gt; unit&#xA;override this.OnUpdateCommand : System.Web.UI.WebControls.DataGridCommandEventArgs -&gt; unit" Usage="dataGrid.OnUpdateCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataGrid.UpdateCommand" /> 이벤트를 발생시킵니다. 이를 통해 이벤트에 대한 사용자 지정 처리기를 제공할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataGrid.OnUpdateCommand%2A> 에 대 한 사용자 지정 처리기를 제공 하는 메서드는 <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> 이벤트.  
  
 <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> 항목에 대 한 업데이트 단추를 클릭할 때 이벤트가 발생 합니다.  
  
 에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> 데이터 집합을 업데이트 하는 이벤트를 <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> 속성 (항목을 선택 취소)를-1 다음 데이터를 다시 바인딩합니다는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다.  
  
> [!CAUTION]
>  텍스트에 표시 되기 전에 HTML 인코딩해야 아닙니다는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. 컨트롤에 대 한 값은 사용자 입력 으로부터 가져올, 경우에 보안 취약점을 줄이는 값을 확인 해야 합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.DataGrid.OnUpdateCommand%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> 에 있는 항목의 값을 업데이트 하는 이벤트를 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤 사용자가 지정한 새 값입니다.  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.DataGrid.OnUpdateCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DataGrid.OnUpdateCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.UpdateCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="PageCommandName">
      <MemberSignature Language="C#" Value="public const string PageCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PageCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const PageCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ PageCommandName;" />
      <MemberSignature Language="F#" Value="val mutable PageCommandName : string" Usage="System.Web.UI.WebControls.DataGrid.PageCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이지 명령 이름을 나타냅니다. 이 필드는 읽기 전용입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataGrid.PageCommandName> 필드를 페이지 명령 이름을 나타냅니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.PageCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PageCount : int" Usage="System.Web.UI.WebControls.DataGrid.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤에 있는 항목을 표시하는 데 필요한 전체 페이지 수를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤에 있는 항목을 표시하는 데 필요한 전체 페이지 수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 프로그래밍 방식으로 항목을 표시 하는 데 필요한 페이지 수를 결정 하는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. 이 속성은 경우에만 사용된 합니다 <xref:System.Web.UI.WebControls.DataGrid.AllowPaging%2A> 속성이 `true`합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataGrid.PageCount%2A> 속성에서 항목을 표시 하는 데 필요한 페이지 수를 확인 하는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다.  
  
 [!code-aspx-csharp[Classic DataGrid.PageCount Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.PageCount Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.PageCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.PageCount Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowPaging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridPageChangedEventHandler PageIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridPageChangedEventHandler PageIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.PageIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanged As DataGridPageChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataGridPageChangedEventHandler ^ PageIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.PageIndexChanged : System.Web.UI.WebControls.DataGridPageChangedEventHandler " Usage="member this.PageIndexChanged : System.Web.UI.WebControls.DataGridPageChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridPageChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>페이지 선택 요소 중 하나를 클릭하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> 페이지 선택 요소 중 하나를 클릭 하면 이벤트가 발생 합니다.  
  
 에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> 이벤트 집합을 <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> 속성을 표시 하려는 페이지 및 다음 사용 하 여 인덱스를 <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> 데이터를 바인딩하는 메서드를 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> 이벤트입니다. 페이지를 표시 합니다 <xref:System.Web.UI.WebControls.DataGrid> 10 항목 단위로 제어 합니다.  
  
 [!code-aspx-csharp[DataGridAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowPaging/CS/datagridallowpagingcs.aspx#1)]
 [!code-aspx-vb[DataGridAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowPaging/VB/datagridallowpagingvb.aspx#1)]  
  
 [!code-aspx-csharp[PageIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageIndexChanged/CS/datagridpageindexchangedcs.aspx#1)]
 [!code-aspx-vb[PageIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageIndexChanged/VB/datagridpageindexchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.OnPageIndexChanged(System.Web.UI.WebControls.DataGridPageChangedEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridPageChangedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridPageChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="PagerStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataGridPagerStyle PagerStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataGridPagerStyle PagerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.PagerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PagerStyle As DataGridPagerStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataGridPagerStyle ^ PagerStyle { System::Web::UI::WebControls::DataGridPagerStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PagerStyle : System.Web.UI.WebControls.DataGridPagerStyle" Usage="System.Web.UI.WebControls.DataGrid.PagerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridPagerStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤에 있는 페이징 구역의 스타일 속성을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataGridPagerStyle" /> 컨트롤의 페이징 구역에 설정된 스타일 속성을 포함하는 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 개체입니다. 기본값은 빈 <see cref="T:System.Web.UI.WebControls.DataGridPagerStyle" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 페이징 구역에 대 한 사용자 지정 스타일을 제공 하는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. 조정할 수 있는 공통 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다.  
  
 페이징 구역에 대 한 사용자 지정 스타일을 지정 하려면 합니다 `<PagerStyle>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. 다음을 표시 하 여 스타일 특성을 `<PagerStyle>` 태그입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataGrid.PagerStyle%2A> 속성의 페이지 선택 요소에 대 한 사용자 지정 스타일을 지정할 수는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤.  
  
 [!code-aspx-csharp[Classic DataGrid.PagerStyle Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.PagerStyle Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.PagerStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.PagerStyle Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridPagerStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridPagerStyle/CS/datagridpagerstylecs.aspx#1)]
 [!code-aspx-vb[DataGridPagerStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridPagerStyle/VB/datagridpagerstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGridPagerStyle" />
      </Docs>
    </Member>
    <Member MemberName="PageSize">
      <MemberSignature Language="C#" Value="public virtual int PageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.PageSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PageSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PageSize : int with get, set" Usage="System.Web.UI.WebControls.DataGrid.PageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤의 단일 페이지에 표시할 항목 수를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤의 단일 페이지에 표시할 항목 수입니다. 기본값은 10입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 단일 페이지에 표시할 항목 수를 지정 하는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. <xref:System.Web.UI.WebControls.DataGrid.AllowPaging%2A> 속성으로 설정 되어 있어야 `true` 이 속성에 대 한 아무런 효과가 있습니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> 속성을 5 개 항목의 단일 페이지에 표시 되도록 지정 합니다 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤.  
  
 [!code-aspx-csharp[Classic DataGrid.PageCount Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.PageCount Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.PageCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.PageCount Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridPageSize#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridPageSize/CS/datagridpagesizecs.aspx#1)]
 [!code-aspx-vb[DataGridPageSize#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridPageSize/VB/datagridpagesizevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정된 페이지 크기가 1보다 작은 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowCustomPaging" />
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.PageIndexChanged" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal override void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PrepareControlHierarchy();" />
      <MemberSignature Language="F#" Value="override this.PrepareControlHierarchy : unit -&gt; unit" Usage="dataGrid.PrepareControlHierarchy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤의 컨트롤 계층 구조를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.PrepareControlHierarchy%2A> 메서드는 호출 하는 도우미 메서드입니다 합니다 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤의 컨트롤 계층 구조를 설정 하는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤이 렌더링 되기 전에 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrevPageCommandArgument">
      <MemberSignature Language="C#" Value="public const string PrevPageCommandArgument;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PrevPageCommandArgument" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public Const PrevPageCommandArgument As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ PrevPageCommandArgument;" />
      <MemberSignature Language="F#" Value="val mutable PrevPageCommandArgument : string" Usage="System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이전 명령 인수를 나타냅니다. 이 필드는 읽기 전용입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument> 필드 이전 명령 인수를 나타냅니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="dataGrid.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" />의 현재 상태를 저장합니다.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.DataGrid" />의 저장된 상태입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommandName">
      <MemberSignature Language="C#" Value="public const string SelectCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelectCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const SelectCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelectCommandName;" />
      <MemberSignature Language="F#" Value="val mutable SelectCommandName : string" Usage="System.Web.UI.WebControls.DataGrid.SelectCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>선택 명령 이름을 나타냅니다. 이 필드는 읽기 전용입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataGrid.SelectCommandName> 필드를 선택 명령 이름을 나타냅니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectedIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedIndex : int with get, set" Usage="System.Web.UI.WebControls.DataGrid.SelectedIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤에서 선택한 항목의 인덱스를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤에서 선택한 항목의 인덱스입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.DataGrid.SelectedIndex%2A> 속성에서 사용자가 선택한 항목의 인덱스를 확인 하는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다. 선택한 항목을 프로그래밍 방식으로 지정 하려면이 속성을 이용할 수 있습니다는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
 항목의 선택을 취소 하는 <xref:System.Web.UI.WebControls.DataGrid> 제어,-1로이 속성을 설정 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataGrid.SelectedIndex%2A> 속성에서 선택한 항목의 인덱스 번호를 확인 하는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. 또한 선택 하 고 프로그래밍 방식으로 항목의 선택을 취소 하는 방법을 보여 줍니다.  
  
 [!code-aspx-csharp[Classic DataGrid.SelectedIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.SelectedIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.SelectedIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.SelectedIndex Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정된 인덱스가 -1보다 작은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataGridItem SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataGridItem SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedItem As DataGridItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataGridItem ^ SelectedItem { System::Web::UI::WebControls::DataGridItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItem : System.Web.UI.WebControls.DataGridItem" Usage="System.Web.UI.WebControls.DataGrid.SelectedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGridItem" /> 컨트롤에서 선택된 항목을 나타내는 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 개체를 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataGridItem" /> 컨트롤에서 선택한 항목을 나타내는 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DataGrid.SelectedItem%2A> 가져올 속성을 <xref:System.Web.UI.WebControls.DataGridItem> 에서 선택한 항목을 나타내는 개체를 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤. 이 개체는 선택한 항목의 속성에 액세스 하려면 다음 사용 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataList.SelectedItem%2A> 속성에서 선택한 항목의 속성에 액세스 하는 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
 [!code-aspx-csharp[Classic DataGrid.SelectedIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.SelectedIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.SelectedIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.SelectedIndex Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[BaseDataListSelectedIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseDataListSelectedIndexChanged/CS/basedatalistselectedindexchangedcs.aspx#1)]
 [!code-aspx-vb[BaseDataListSelectedIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseDataListSelectedIndexChanged/VB/basedatalistselectedindexchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGridItem" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle SelectedItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SelectedItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.SelectedItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ SelectedItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataGrid.SelectedItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤에서 현재 선택된 항목의 스타일 속성을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에서 현재 선택된 항목의 스타일 속성을 포함하는 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 개체입니다. 기본값은 빈 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A> 속성에서 선택한 항목에 대 한 사용자 지정 스타일을 제공 하는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다. 조정할 수 있는 공통 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다.  
  
 항목의 스타일 속성을 <xref:System.Web.UI.WebControls.DataGrid> 제어 계층을 통해 다른 하나씩 스타일 속성에서 상속 됩니다. 계층에서 낮은 설정 항목 스타일 속성은 계층 구조의 상위 항목 스타일 속성에 의해 상속 됩니다. 예를 들어 빨강 글꼴을 지정 하는 경우는 <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> 속성을 다른 항목 스타일의 모든 속성을 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤 빨강 글꼴을 갖게 됩니다. 이 옵션을 사용 하면 단일 항목의 스타일 속성을 설정 하 여 컨트롤에 공통 된 모양을 제공할 수 있습니다. 스타일 속성을 설정 하 여 상위 계층에 있는 항목 스타일 속성에 대 한 상속 된 스타일 설정을 재정의할 수 있습니다. 예를 들어, 파랑 글꼴을 지정할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> 속성에 지정 된 빨간색 글꼴로 재정의 <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> 속성입니다. 다음 표에서 순위가 가장 높은 계층 순서를 나열합니다.  
  
|우선 순위|스타일 속성|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 선택한 항목에 대 한 사용자 지정 스타일을 지정 하려면 합니다 `<SelectedItemStyle>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. 다음을 표시 하 여 스타일 특성을 `<SelectedItemStyle>` 태그입니다.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다 <xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A> 속성에서 선택한 항목의 배경색을 설정 하는 <xref:System.Web.UI.WebControls.DataGrid> 노란색으로 제어 합니다.  
  
 [!code-aspx-csharp[Classic DataGrid.SelectedIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.SelectedIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.SelectedIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.SelectedIndex Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridSelectedItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridSelectedItemStyle/CS/datagridselecteditemstylecs.aspx#1)]
 [!code-aspx-vb[DataGridSelectedItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridSelectedItemStyle/VB/datagridselecteditemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="ShowFooter">
      <MemberSignature Language="C#" Value="public virtual bool ShowFooter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.ShowFooter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowFooter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowFooter { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowFooter : bool with get, set" Usage="System.Web.UI.WebControls.DataGrid.ShowFooter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤에 바닥글을 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>바닥글을 표시하려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 설정 `true` 에 바닥글을 표시 하는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. 바닥글의 표시를 사용 하 여 제어 됩니다는 <xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataGrid.ShowFooter%2A> 에 바닥글을 표시 하는 속성을 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤.  
  
 [!code-aspx-csharp[Classic DataGrid.ShowFooter Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ShowFooter Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.ShowFooter Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ShowFooter Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridShowHeader/CS/datagridshowheadercs.aspx#1)]
 [!code-aspx-vb[DataGridShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridShowHeader/VB/datagridshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.FooterStyle" />
      </Docs>
    </Member>
    <Member MemberName="ShowHeader">
      <MemberSignature Language="C#" Value="public virtual bool ShowHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.ShowHeader" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowHeader { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowHeader : bool with get, set" Usage="System.Web.UI.WebControls.DataGrid.ShowHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤에 머리글을 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>머리글을 표시하려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 설정 `true` 에서 머리글을 표시 하는 <xref:System.Web.UI.WebControls.DataGrid>합니다. 헤더의 표시를 사용 하 여 제어 됩니다는 <xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataGrid.ShowHeader%2A> 속성에서 머리글을 숨기려면는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다.  
  
 [!code-aspx-csharp[Classic DataGrid.ShowHeader Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ShowHeader Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataGrid.ShowHeader Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ShowHeader Example/VB/sourcevb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridShowHeader/CS/datagridshowheadercs.aspx#1)]
 [!code-aspx-vb[DataGridShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridShowHeader/VB/datagridshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.HeaderStyle" />
      </Docs>
    </Member>
    <Member MemberName="SortCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridSortCommandEventHandler SortCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridSortCommandEventHandler SortCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.SortCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SortCommand As DataGridSortCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataGridSortCommandEventHandler ^ SortCommand;" />
      <MemberSignature Language="F#" Value="member this.SortCommand : System.Web.UI.WebControls.DataGridSortCommandEventHandler " Usage="member this.SortCommand : System.Web.UI.WebControls.DataGridSortCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridSortCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열을 정렬하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.SortCommand> 열이 정렬 될 때 이벤트가 발생 합니다.  
  
 에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataGrid.SortCommand> 이벤트 목록, 정렬 및 다음 데이터를 다시 바인딩 횟수는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGrid.SortCommand> 정렬 하는 이벤트를 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
 [!code-aspx-csharp[DataGridAllowSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowSorting/CS/datagridallowsortingcs.aspx#1)]
 [!code-aspx-vb[DataGridAllowSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowSorting/VB/datagridallowsortingvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridSortCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridSortCommand/CS/datagridsortcommandcs.aspx#1)]
 [!code-aspx-vb[DataGridSortCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridSortCommand/VB/datagridsortcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.OnSortCommand(System.Web.UI.WebControls.DataGridSortCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridSortCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridSortCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="SortCommandName">
      <MemberSignature Language="C#" Value="public const string SortCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SortCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const SortCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SortCommandName;" />
      <MemberSignature Language="F#" Value="val mutable SortCommandName : string" Usage="System.Web.UI.WebControls.DataGrid.SortCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>정렬 명령 이름을 나타냅니다. 이 필드는 읽기 전용입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataGrid.SortCommandName> 필드를 정렬 명령 이름을 나타냅니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.DataGrid.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlTextWriterTag" /> 컨트롤에 대한 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 값을 가져옵니다.</summary>
        <value>항상 <see langword="HtmlTextWriterTag.Table" />를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.TagKey%2A> 속성에 대 한 적절 한 HTML 태그를 작성 하기 위한 출력 스트림을 허용 합니다 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="dataGrid.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>컨트롤에 대한 변경 사항의 추적 및 저장을 시작할 시작점을 컨트롤 뷰 상태의 일부로 표시합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridCommandEventHandler UpdateCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridCommandEventHandler UpdateCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateCommand As DataGridCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataGridCommandEventHandler ^ UpdateCommand;" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Web.UI.WebControls.DataGridCommandEventHandler " Usage="member this.UpdateCommand : System.Web.UI.WebControls.DataGridCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤에 있는 항목에 대해 업데이트 단추를 클릭하면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> 항목에 대 한 업데이트 단추를 클릭할 때 이벤트가 발생 합니다.  
  
 에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> 데이터 집합을 업데이트 하는 이벤트를 <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> 속성을 `-1` (항목을 선택 취소)를, 다음 데이터를 다시 바인딩합니다는 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤입니다.  
  
> [!CAUTION]
>  텍스트에 표시 되기 전에 HTML 인코딩해야 아닙니다는 <xref:System.Web.UI.WebControls.DataGrid> 제어 합니다. 이 텍스트에 HTML 태그 내에서 스크립트를 포함할 수 있습니다. 컨트롤에 대 한 값은 사용자 입력 으로부터 가져올, 경우에 보안 취약점을 줄이는 값을 확인 해야 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> 에 있는 항목의 값을 업데이트 하는 이벤트를 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤 사용자가 지정한 새 값입니다.  
  
 [!code-aspx-csharp[DataGridEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-aspx-vb[DataGridEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataGridEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-aspx-vb[DataGridEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.OnUpdateCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandName">
      <MemberSignature Language="C#" Value="public const string UpdateCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UpdateCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const UpdateCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ UpdateCommandName;" />
      <MemberSignature Language="F#" Value="val mutable UpdateCommandName : string" Usage="System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>업데이트 명령 이름을 나타냅니다. 이 필드는 읽기 전용입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataGrid.UpdateCommandName> 필드를 업데이트 명령 이름을 나타냅니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="VirtualItemCount">
      <MemberSignature Language="C#" Value="public virtual int VirtualItemCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VirtualItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.VirtualItemCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property VirtualItemCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int VirtualItemCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.VirtualItemCount : int with get, set" Usage="System.Web.UI.WebControls.DataGrid.VirtualItemCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 지정 페이징을 사용하는 경우 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤에 있는 가상 항목의 개수를 가져오거나 설정합니다.</summary>
        <value>사용자 지정 페이징을 사용하는 경우 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 컨트롤에 있는 가상 항목의 개수입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 가상의 항목 수를 지정 하는 <xref:System.Web.UI.WebControls.DataGrid> 사용자 지정 페이징을 사용 하는 경우를 제어 합니다. 이 속성은 경우에만 사용된 합니다 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> 속성이 `true`합니다.  
  
 경우는 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> 속성이 `true`에 모든 항목을 표시 하는 데 필요한 페이지 수를 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤의 값을 기반으로 계산 됩니다 합니다 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> 및 <xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A> 속성.  
  
 경우는 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> 속성이로 설정 되어 `false`에 표시 되는 페이지 수가 <xref:System.Web.UI.WebControls.DataGrid> 컨트롤의 값을 기반으로 계산 됩니다는 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> 속성과 데이터 원본에 있는 항목의 총 수입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A> 속성에 있는 항목의 총 수를 지정 하는 <xref:System.Web.UI.WebControls.DataGrid> 사용자 지정 페이징을 사용 하는 경우 제어.  
  
 [!code-aspx-csharp[DataGridCustomPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridCustomPaging/CS/datagridcustompagingcs.aspx#1)]
 [!code-aspx-vb[DataGridCustomPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridCustomPaging/VB/datagridcustompagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정된 값이 음수인 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowCustomPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.PageSize" />
      </Docs>
    </Member>
  </Members>
</Type>