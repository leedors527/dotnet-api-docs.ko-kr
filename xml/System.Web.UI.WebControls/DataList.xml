<Type Name="DataList" FullName="System.Web.UI.WebControls.DataList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c196811f5115cef14e94929c124f29a2bdc41ac9" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57937098" /></Metadata><TypeSignature Language="C#" Value="public class DataList : System.Web.UI.WebControls.BaseDataList, System.Web.UI.INamingContainer, System.Web.UI.WebControls.IRepeatInfoUser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataList extends System.Web.UI.WebControls.BaseDataList implements class System.Web.UI.INamingContainer, class System.Web.UI.WebControls.IRepeatInfoUser" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DataList" />
  <TypeSignature Language="VB.NET" Value="Public Class DataList&#xA;Inherits BaseDataList&#xA;Implements INamingContainer, IRepeatInfoUser" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataList : System::Web::UI::WebControls::BaseDataList, System::Web::UI::INamingContainer, System::Web::UI::WebControls::IRepeatInfoUser" />
  <TypeSignature Language="F#" Value="type DataList = class&#xA;    inherit BaseDataList&#xA;    interface INamingContainer&#xA;    interface IRepeatInfoUser" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseDataList</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IRepeatInfoUser</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataListDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataListComponentEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataListDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataListComponentEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataListDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataListComponentEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>템플릿을 사용하여 항목을 표시하는 데이터 바인딩된 목록 컨트롤입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 항목 내용  
  
-   [소개](#introduction)  
  
-   [템플릿](#templates)  
  
-   [DataList 컨트롤의 모양 사용자 지정](#customizing_the_appearance_of_the_datalist_control)  
  
-   [표시 방향 및 레이아웃](#display_direction_and_layout)  
  
-   [보안](#security)  
  
-   [선언 구문](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>소개  
 사용 하 여는 <xref:System.Web.UI.WebControls.DataList> 템플릿 기반 데이터를 표시 하도록 컨트롤 바인딩 목록입니다. <xref:System.Web.UI.WebControls.DataList> 컨트롤은 선택 하 고 편집을 지원 합니다.  
  
<a name="templates"></a>   
## <a name="templates"></a>템플릿  
 콘텐츠는 <xref:System.Web.UI.WebControls.DataList> 템플릿을 사용 하 여 컨트롤을 조작할 수 있습니다. 다음 표에서 지원 되는 템플릿을 나열합니다.  
  
|템플릿 이름|설명|  
|-------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A>|정의 하는 경우에 있는 대체 항목에 대 한 콘텐츠 및 레이아웃을 제공 합니다 <xref:System.Web.UI.WebControls.DataList>합니다. 정의 되지 않은 경우 `ItemTemplate` 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A>|정의 하는 경우의 현재 편집 중인 항목에 대 한 콘텐츠 및 레이아웃을 제공 합니다 <xref:System.Web.UI.WebControls.DataList>합니다. 정의 되지 않은 경우 `ItemTemplate` 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A>|정의 하는 경우의 바닥글 구역에 대 한 콘텐츠 및 레이아웃을 제공 합니다 <xref:System.Web.UI.WebControls.DataList>합니다. 정의 되지 않은 경우에 바닥글 구역이 표시 되지 않습니다.|  
|<xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A>|정의 하는 경우의 머리글 구역에 대 한 콘텐츠 및 레이아웃을 제공 합니다 <xref:System.Web.UI.WebControls.DataList>합니다. 정의 되지 않은 경우에 머리글 섹션이 표시 되지 않습니다.|  
|<xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A>|항목에 대 한 콘텐츠 및 레이아웃을 제공 하는 필수 템플릿은 <xref:System.Web.UI.WebControls.DataList>합니다.|  
|<xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A>|정의 된 경우에서 현재 선택한 항목에 대 한 콘텐츠 및 레이아웃을 제공 합니다 <xref:System.Web.UI.WebControls.DataList>합니다. 정의 되지 않은 경우 <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> 사용 됩니다.|  
|<xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A>|정의 하는 경우 항목 간의 구분 기호에 대 한 콘텐츠 및 레이아웃을 제공 합니다 <xref:System.Web.UI.WebControls.DataList>합니다. 정의 되지 않은 경우에 구분 기호 표시 되지 않습니다.|  
  
 최소한, 합니다 <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> 에서 항목을 표시 하려면 정의 해야는 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 추가 템플릿에 사용자 지정 모양을 제공할 수는 <xref:System.Web.UI.WebControls.DataList> 제어 합니다.  
  
<a name="customizing_the_appearance_of_the_datalist_control"></a>   
## <a name="customizing-the-appearance-of-the-datalist-control"></a>DataList 컨트롤의 모양 사용자 지정  
 모양의 <xref:System.Web.UI.WebControls.DataList> 컨트롤의 여러 부분에 대 한 스타일 속성을 설정 하 여 컨트롤을 사용자 지정할 수 있습니다. 다음 표에서 다양 한 스타일 속성을 나열합니다.  
  
|스타일 속성|설명|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|에 있는 대체 항목에 대 한 스타일을 지정 합니다 <xref:System.Web.UI.WebControls.DataList> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|편집 중인 항목에 대 한 스타일을 지정 합니다 <xref:System.Web.UI.WebControls.DataList> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>|바닥글에 스타일을 지정 합니다 <xref:System.Web.UI.WebControls.DataList> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>|헤더에 대 한 스타일을 지정 합니다 <xref:System.Web.UI.WebControls.DataList> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|항목에 대 한 스타일을 지정 합니다 <xref:System.Web.UI.WebControls.DataList> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|선택한 항목에 대 한 스타일을 지정 합니다 <xref:System.Web.UI.WebControls.DataList> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A>|에 있는 항목 사이의 구분 기호에 대 한 스타일을 지정 합니다 <xref:System.Web.UI.WebControls.DataList> 제어 합니다.|  
  
 또한 표시 하거나 컨트롤의 다른 파트를 숨길 수 있습니다. 다음 표에서 표시 하거나 숨길는 부분을 제어 하는 속성을 보여 줍니다.  
  
|속성|설명|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>|바닥글 구역을 표시 하거나 숨깁니다는 <xref:System.Web.UI.WebControls.DataList> 제어 합니다.|  
|<xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>|머리글 구역을 표시 하거나 숨깁니다는 <xref:System.Web.UI.WebControls.DataList> 제어 합니다.|  
  
<a name="display_direction_and_layout"></a>   
## <a name="display-direction-and-layout"></a>표시 방향 및 레이아웃  
 표시 되는 방향을 <xref:System.Web.UI.WebControls.DataList> 세로 또는 가로 제어 될 수 있습니다. 설정 된 <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> 표시 방향을 지정 하는 속성입니다.  
  
 레이아웃을 <xref:System.Web.UI.WebControls.DataList> 컨트롤에 의해 제어 됩니다는 <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> 속성입니다. 이 속성을 설정 `RepeatLayout.Table` 표시 됩니다는 <xref:System.Web.UI.WebControls.DataList> 표 형식으로 하는 동안 `RepeatLayout.Flow` 표시를 <xref:System.Web.UI.WebControls.DataList> 테이블 구조 없이 합니다.  
  
<a name="security"></a>   
## <a name="security"></a>보안  
 `DataList` 컨트롤 정보를 입력 하는 데 사용할 수 있는 컨트롤을 포함할 수 있습니다.  
  
> [!CAUTION]
>  악성 클라이언트 스크립트 포함 될 수 있는 사용자 입력을 표시 하려면이 제어를 사용할 수 있습니다. 응용 프로그램에서 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 전송 되는 모든 정보를 확인 합니다. 입력된 텍스트 컨트롤에 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET에서는 사용자 입력에서 차단 스크립트를 HTML 입력된 요청 유효성 검사 기능을 제공 합니다.  
  
 보안에 대 한 자세한 내용은 참조 하세요. [표준 컨트롤 보호](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호할](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)합니다.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>선언 구문  
  
```  
<asp:DataList  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyField="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    EditItemIndex="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ExtractTemplateRows="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnCancelCommand="CancelCommand event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDeleteCommand="DeleteCommand event handler"  
    OnDisposed="Disposed event handler"  
    OnEditCommand="EditCommand event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDataBound="ItemDataBound event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedIndexChanged="SelectedIndexChanged event handler"  
    OnUnload="Unload event handler"  
    OnUpdateCommand="UpdateCommand event handler"  
    RepeatColumns="integer"  
    RepeatDirection="Horizontal|Vertical"  
    RepeatLayout="Table|Flow"  
    runat="server"  
    SelectedIndex="integer"  
    ShowFooter="True|False"  
    ShowHeader="True|False"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    UseAccessibleHeader="True|False"  
    Visible="True|False"  
    Width="size"  
>  
        <AlternatingItemStyle />  
        <AlternatingItemTemplate>  
            <!-- child controls -->  
        </AlternatingItemTemplate>  
        <EditItemStyle />  
        <EditItemTemplate>  
            <!-- child controls -->  
        </EditItemTemplate>  
        <FooterStyle />  
        <FooterTemplate>  
            <!-- child controls -->  
        </FooterTemplate>  
        <HeaderStyle />  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <ItemStyle />  
        <ItemTemplate>  
            <!-- child controls -->  
        </ItemTemplate>  
        <SelectedItemStyle />  
        <SelectedItemTemplate>  
            <!-- child controls -->  
        </SelectedItemTemplate>  
        <SeparatorStyle />  
        <SeparatorTemplate>  
            <!-- child controls -->  
        </SeparatorTemplate>  
</asp:DataList>  
```  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataList> 컨트롤을 데이터 소스에서 항목 목록을 표시 합니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataList#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataList/CS/datalistcs.aspx#1)]
 [!code-aspx-vb[DataList#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataList/VB/datalistvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BaseDataList" />
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.Repeater" />
    <related type="Article" href="https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8">보안 표준 컨트롤</related>
    <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호</related>
    <related type="Article" href="https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461">ASP.NET 웹 페이지에서 사용자 입력 유효성 검사</related>
    <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자를 사용 하 여 만들고의 새 인스턴스를 초기화 하는 <xref:System.Web.UI.WebControls.DataList> 클래스입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 만들고의 새 인스턴스를 초기화 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataList> 클래스입니다.  
  
 [!code-csharp[Classic DataList.DataList Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.DataList Example/CS/source.cs#1)]
 [!code-vb[Classic DataList.DataList Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.DataList Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AlternatingItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ AlternatingItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤에 있는 대체 항목의 스타일 속성을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 대체 항목의 스타일 속성을 나타내는 <see cref="T:System.Web.UI.WebControls.DataList" /> 개체입니다. 기본값은 빈 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> 교대로 반복 되는 것에 대 한 사용자 지정 스타일을 제공 하는 속성의 항목을 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다. 조정할 수 있는 공통 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
 항목의 스타일 속성을 <xref:System.Web.UI.WebControls.DataList> 제어 계층을 통해 다른 하나씩 스타일 속성에서 상속 됩니다. 계층에서 낮은 설정 항목 스타일 속성은 계층 구조의 상위 항목 스타일 속성에 의해 상속 됩니다. 예를 들어 빨강 글꼴을 지정 하는 경우는 <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> 속성을 다른 항목 스타일의 모든 속성을 <xref:System.Web.UI.WebControls.DataList> 컨트롤 빨강 글꼴을 갖게 됩니다. 이 옵션을 사용 하면 단일 항목의 스타일 속성을 설정 하 여 컨트롤에 공통 된 모양을 제공할 수 있습니다. 스타일 속성을 설정 하 여 상위 계층에 있는 항목 스타일 속성에 대 한 상속 된 스타일 설정을 재정의할 수 있습니다. 예를 들어, 파랑 글꼴을 지정할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> 속성에 지정 된 빨간색 글꼴로 재정의 <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> 속성입니다. 다음 표에서 순위가 가장 높은 계층 순서를 나열합니다.  
  
|우선 순위|스타일 속성|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 교대로 반복 되는 항목에 대 한 사용자 지정 스타일을 지정 하려면 합니다 `<AlternatingItemStyle>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 다음을 표시 하 여 스타일 특성을 `<AlternatingItemStyle>` 태그입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> 속성에 있는 대체 항목에 대 한 다른 배경색을 지정 하는 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemStyle/CS/datalistitemstylecs.aspx#1)]
 [!code-aspx-vb[DataListItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemStyle/VB/datalistitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AlternatingItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AlternatingItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ AlternatingItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" />에 있는 대체 항목에 대한 템플릿을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.ITemplate" /> 컨트롤에 있는 대체 항목에 대한 템플릿이 들어 있는 <see cref="T:System.Web.UI.WebControls.DataList" /> 개체입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> 속성에 있는 대체 항목의 내용을 제어 하는 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다. 대체 항목의 표시에 의해 제어 되는 <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> 속성입니다.  
  
 교대로 반복 되는 항목에 대 한 서식 파일을 지정 하려면 합니다 `<AlternatingItemTemplate>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 다음 태그와 닫는 사이 템플릿의 콘텐츠를 나열할 수 있습니다 `<AlternatingItemTemplate>` 태그입니다.  
  
> [!CAUTION]
>  악성 클라이언트 스크립트 포함 될 수 있는 사용자 입력을 표시 하려면이 제어를 사용할 수 있습니다. 응용 프로그램에서 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 전송 되는 모든 정보를 확인 합니다. 입력된 텍스트 컨트롤에 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET에서는 사용자 입력에서 차단 스크립트를 HTML 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 [표준 컨트롤 보호](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호할](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> 속성에 있는 대체 항목의 내용을 제어 하는 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListAlternatingItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListAlternatingItemTemplate/CS/datalistaltitemtemplatecs.aspx#1)]
 [!code-aspx-vb[DataListAlternatingItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListAlternatingItemTemplate/VB/datalistaltitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <related type="Article" href="https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8">보안 표준 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461">ASP.NET 웹 페이지에서 사용자 입력 유효성 검사 소개</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
      </Docs>
    </Member>
    <Member MemberName="CancelCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler CancelCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler CancelCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.CancelCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CancelCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ CancelCommand;" />
      <MemberSignature Language="F#" Value="member this.CancelCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.CancelCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤에 있는 항목에 대해 <see langword="Cancel" /> 단추를 클릭하면 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.CancelCommand> 이벤트는 때를 `Cancel` 항목에 대해 단추를 클릭할는 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
 에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataList.CancelCommand> 이벤트 집합을 <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> 속성을 `-1` (항목을 선택 취소)를 다음 데이터를 다시 바인딩합니다는 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
> [!CAUTION]
>  텍스트에 표시 되기 전에 HTML 인코딩해야 아닙니다는 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 이 텍스트에 HTML 태그 내에서 스크립트를 포함할 수 있습니다. 컨트롤에 대 한 값은 사용자 입력 으로부터 가져올, 경우에 보안 취약점을 줄이는 값을 확인 해야 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [방법: Web Forms 응용 프로그램에서 이벤트 사용](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)합니다.  
  
> [!CAUTION]
>  악성 클라이언트 스크립트 포함 될 수 있는 사용자 입력을 표시 하려면이 제어를 사용할 수 있습니다. 응용 프로그램에서 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 전송 되는 모든 정보를 확인 합니다. 입력된 텍스트 컨트롤에 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET에서는 사용자 입력에서 차단 스크립트를 HTML 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 [표준 컨트롤 보호](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호할](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataList.CancelCommand> 이벤트입니다. 항목에 대 한 편집 내용을 취소 합니다 <xref:System.Web.UI.WebControls.DataList> 제어를 `Cancel` 단추를 클릭 합니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8">보안 표준 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461">ASP.NET 웹 페이지에서 사용자 입력 유효성 검사 소개</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
      </Docs>
    </Member>
    <Member MemberName="CancelCommandName">
      <MemberSignature Language="C#" Value="public const string CancelCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CancelCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const CancelCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ CancelCommandName;" />
      <MemberSignature Language="F#" Value="val mutable CancelCommandName : string" Usage="System.Web.UI.WebControls.DataList.CancelCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="Cancel" /> 명령 이름을 나타냅니다. 이 필드는 읽기 전용입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DataList.CancelCommandName> 나타내는 필드는 `Cancel` 명령 이름입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlHierarchy">
      <MemberSignature Language="C#" Value="protected override void CreateControlHierarchy (bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateControlHierarchy(bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateControlHierarchy (useDataSource As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateControlHierarchy(bool useDataSource);" />
      <MemberSignature Language="F#" Value="override this.CreateControlHierarchy : bool -&gt; unit" Usage="dataList.CreateControlHierarchy useDataSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useDataSource">컨트롤의 데이터 소스를 사용하려면 <see langword="true" />이고, 컨트롤이 뷰 상태에서 다시 만들어지기 때문에 데이터 바인딩되지 않아야 함을 나타내려면 <see langword="false" />입니다.</param>
        <summary>지정한 데이터 소스의 사용 여부에 관계없이 데이터 목록 컨트롤을 렌더링하는 데 사용되는 컨트롤 계층 구조를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> 메서드는 주로 컨트롤 개발자가에서 사용자 지정 구현을 파생 하는 경우는 <xref:System.Web.UI.WebControls.DataList> 제어 합니다.  
  
 합니다 <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> 메서드를 <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> 및 <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> 를 만드는 방법과 <xref:System.Web.UI.WebControls.DataListItem> 머리글, 바닥글, 구분 기호 및 데이터 목록에 포함 된 데이터 바인딩된 항목을 나타내는 컨트롤입니다. 데이터 바인딩된 항목을 통해 데이터 목록에 액세스할 수 있습니다는 <xref:System.Web.UI.WebControls.DataList.Items%2A> 컬렉션입니다. 머리글, 바닥글 및 구분 기호 항목을 통해 비롯 하 여 모든 항목 형식에 액세스할 수 있습니다는 <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> 컬렉션입니다.  
  
 재정의 <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> 사용자 지정 하는 방법 어떻게 <xref:System.Web.UI.WebControls.DataListItem> 컨트롤을 만들거나 추가할를 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 재정의 <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> 에 대 한 템플릿을 사용자 지정 하는 메서드를 <xref:System.Web.UI.WebControls.DataListItem> 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="dataList.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤에서 모든 스타일 관련 속성을 구현하기 위해 내부적으로 사용되는 기본 스타일 개체를 만듭니다.</summary>
        <returns>컨트롤에 대한 기본 스타일 속성이 들어 있는 <see cref="T:System.Web.UI.WebControls.TableStyle" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.CreateControlStyle%2A> 메서드는 주로 컨트롤 개발자가 사용자 지정 구현에서 파생 된 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataList.CreateControlStyle%2A> 항상에서 셀 간격 없는 사용 하 여 가로 모눈선 표시 되도록 컨트롤을 사용자 지정 서버에서 메서드를 <xref:System.Web.UI.WebControls.DataList> 컨트롤.  
  
 [!code-aspx-csharp[CustomDataListCreateControlStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListCreateControlStyle/CS/custom_datalist_createcontrolstylecs.aspx#1)]
 [!code-aspx-vb[CustomDataListCreateControlStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListCreateControlStyle/VB/custom_datalist_createcontrolstylevb.aspx#1)]  
[!code-csharp[CustomDataListCreateControlStyle#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListCreateControlStyle/CS/custom_datalist_createcontrolstyle.cs#2)]
[!code-vb[CustomDataListCreateControlStyle#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListCreateControlStyle/VB/custom_datalist_createcontrolstyle.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.DataListItem CreateItem (int itemIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.DataListItem CreateItem(int32 itemIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateItem (itemIndex As Integer, itemType As ListItemType) As DataListItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::DataListItem ^ CreateItem(int itemIndex, System::Web::UI::WebControls::ListItemType itemType);" />
      <MemberSignature Language="F#" Value="abstract member CreateItem : int * System.Web.UI.WebControls.ListItemType -&gt; System.Web.UI.WebControls.DataListItem&#xA;override this.CreateItem : int * System.Web.UI.WebControls.ListItemType -&gt; System.Web.UI.WebControls.DataListItem" Usage="dataList.CreateItem (itemIndex, itemType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="itemIndex">만든 항목을 배치할 <see cref="T:System.Web.UI.WebControls.DataList" /> 내의 지정된 위치입니다.</param>
        <param name="itemType">만들 항목의 지정된 형식을 나타내는 <see cref="T:System.Web.UI.WebControls.ListItemType" />입니다.</param>
        <summary><see cref="T:System.Web.UI.WebControls.DataListItem" /> 개체를 만듭니다.</summary>
        <returns>지정된 목록 항목 형식으로 만든 새 <see cref="T:System.Web.UI.WebControls.DataListItem" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> 메서드는 주로 컨트롤 개발자가 사용자 지정 구현을 만드는 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> 메서드는 기능적으로 동일 합니다 <xref:System.Web.UI.WebControls.DataListItem.%23ctor%2A> 생성자에 대 한를 <xref:System.Web.UI.WebControls.DataListItem>. <xref:System.Web.UI.WebControls.DataListItem.ItemIndex%2A> 하 고 <xref:System.Web.UI.WebControls.DataListItem.ItemType%2A> 새 속성이 초기화 됩니다 <xref:System.Web.UI.WebControls.DataListItem> 항목이 지정한 값을 사용 하 여 삽입 되지는 <xref:System.Web.UI.WebControls.DataList>합니다.  
  
 합니다 <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> 메서드를 <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> 및 <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> 를 만드는 방법과 <xref:System.Web.UI.WebControls.DataListItem> 머리글, 바닥글, 구분 기호 및 데이터 목록에 포함 된 데이터 바인딩된 항목을 나타내는 컨트롤입니다. 데이터 바인딩된 항목을 통해 데이터 목록에 액세스할 수 있습니다는 <xref:System.Web.UI.WebControls.DataList.Items%2A> 컬렉션입니다. 머리글, 바닥글 및 구분 기호 항목을 통해 비롯 하 여 모든 항목 형식에 액세스할 수 있습니다는 <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> 컬렉션입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>고유한 파생 만들려면이 메서드를 재정의 <see cref="T:System.Web.UI.WebControls.DataListItem" /> 형식 또는 추가 멤버 속성을 설정 하려면 때를 <see cref="T:System.Web.UI.WebControls.DataListItem" /> 만들어집니다.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler DeleteCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler DeleteCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DeleteCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ DeleteCommand;" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.DeleteCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤에 있는 항목에 대해 <see langword="Delete" /> 단추를 클릭하면 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.DeleteCommand> 이벤트는 때를 `Delete` 항목에 대해 단추를 클릭할는 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
 에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataList.DeleteCommand> 이벤트 데이터 원본에서 선택한 항목을 제거 하 고 다음 데이터를 다시 바인딩 횟수는 <xref:System.Web.UI.WebControls.DataList> 제어 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [방법: Web Forms 응용 프로그램에서 이벤트 사용](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataList.DeleteCommand> 이벤트입니다. 선택한 항목 삭제 합니다 <xref:System.Web.UI.WebControls.DataList> 제어는 `Delete` 단추를 클릭 합니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandName">
      <MemberSignature Language="C#" Value="public const string DeleteCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DeleteCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const DeleteCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DeleteCommandName;" />
      <MemberSignature Language="F#" Value="val mutable DeleteCommandName : string" Usage="System.Web.UI.WebControls.DataList.DeleteCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="Delete" /> 명령 이름을 나타냅니다. 이 필드는 읽기 전용입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DataList.DeleteCommandName> 나타내는 필드는 `Delete` 명령 이름입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="EditCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler EditCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler EditCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.EditCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ EditCommand;" />
      <MemberSignature Language="F#" Value="member this.EditCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.EditCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤에 있는 항목에 대해 <see langword="Edit" /> 단추를 클릭하면 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.EditCommand> 이벤트는 때를 `Edit` 항목에 대해 단추를 클릭할는 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
 에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataList.EditCommand> 이벤트 집합을 <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> 속성 선택된 된 행을 다음 데이터를 다시 바인딩합니다는 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
> [!CAUTION]
>  텍스트에 표시 되기 전에 HTML 인코딩해야 아닙니다는 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 이 텍스트에 HTML 태그 내에서 스크립트를 포함할 수 있습니다. 컨트롤에 대 한 값은 사용자 입력 으로부터 가져올, 경우에 보안 취약점을 줄이는 값을 확인 해야 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [방법: Web Forms 응용 프로그램에서 이벤트 사용](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)합니다.  
  
> [!CAUTION]
>  악성 클라이언트 스크립트 포함 될 수 있는 사용자 입력을 표시 하려면이 제어를 사용할 수 있습니다. 응용 프로그램에서 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 전송 되는 모든 정보를 확인 합니다. 입력된 텍스트 컨트롤에 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET에서는 사용자 입력에서 차단 스크립트를 HTML 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 [표준 컨트롤 보호](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호할](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataList.EditCommand> 이벤트입니다. 선택한 항목을 편집할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.DataList> 제어는 `Edit` 단추를 클릭 합니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
      </Docs>
    </Member>
    <Member MemberName="EditCommandName">
      <MemberSignature Language="C#" Value="public const string EditCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EditCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.EditCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const EditCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EditCommandName;" />
      <MemberSignature Language="F#" Value="val mutable EditCommandName : string" Usage="System.Web.UI.WebControls.DataList.EditCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="Edit" /> 명령 이름을 나타냅니다. 이 필드는 읽기 전용입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DataList.EditCommandName> 나타내는 필드는 `Edit` 명령 이름입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="EditItemIndex">
      <MemberSignature Language="C#" Value="public virtual int EditItemIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int EditItemIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemIndex : int with get, set" Usage="System.Web.UI.WebControls.DataList.EditItemIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>편집을 위해 <see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤에서 선택한 항목의 인덱스 번호를 가져오거나 설정합니다.</summary>
        <value>편집을 위해 <see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤에서 선택한 항목의 인덱스 번호입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> 속성을 프로그래밍 방식으로 편집할 항목을 지정 합니다. 또한 편집을 위해 선택한 항목의 인덱스를 확인 하려면이 속성을 사용할 수 있습니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> 속성은 0부터 시작 합니다.  
  
 항목의 선택을 취소를 설정 합니다 <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> 속성을 `-1`입니다.  
  
> [!CAUTION]
>  악성 클라이언트 스크립트 포함 될 수 있는 사용자 입력을 표시 하려면이 제어를 사용할 수 있습니다. 응용 프로그램에서 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 전송 되는 모든 정보를 확인 합니다. 입력된 텍스트 컨트롤에 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET에서는 사용자 입력에서 차단 스크립트를 HTML 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 [표준 컨트롤 보호](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호할](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)합니다.  
  
 <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> 속성은 컨트롤 상태에 저장 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> 속성을 편집 하는 것에 대 한 사용자가 선택한 항목을 지정 합니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">선택한 값이 <see langword="0" />보다 작은 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
      </Docs>
    </Member>
    <Member MemberName="EditItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle EditItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EditItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ EditItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.EditItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>편집을 위해 <see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤에서 선택한 항목의 스타일 속성을 가져옵니다.</summary>
        <value>편집을 위해 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에서 선택한 항목의 스타일 속성이 들어 있는 <see cref="T:System.Web.UI.WebControls.DataList" /> 개체입니다. 기본값은 빈 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> 속성에서 편집을 위해 선택한 항목에 대 한 사용자 지정 스타일을 제공 하는 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 조정할 수 있는 공통 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
 항목의 스타일 속성을 <xref:System.Web.UI.WebControls.DataList> 제어 계층을 통해 다른 하나씩 스타일 속성에서 상속 됩니다. 계층에서 낮은 설정 항목 스타일 속성은 계층 구조의 상위 항목 스타일 속성에 의해 상속 됩니다. 예를 들어 빨강 글꼴을 지정 하는 경우는 <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> 속성을 다른 항목 스타일의 모든 속성을 <xref:System.Web.UI.WebControls.DataList> 컨트롤 빨강 글꼴을 갖게 됩니다. 이 옵션을 사용 하면 단일 항목의 스타일 속성을 설정 하 여 컨트롤에 공통 된 모양을 제공할 수 있습니다. 스타일 속성을 설정 하 여 상위 계층에 있는 항목 스타일 속성에 대 한 상속 된 스타일 설정을 재정의할 수 있습니다. 예를 들어, 파랑 글꼴을 지정할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> 속성에 지정 된 빨간색 글꼴로 재정의 <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> 속성입니다. 다음 표에서 순위가 가장 높은 계층 순서를 나열합니다.  
  
|우선 순위|스타일 속성|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 편집을 위해 선택한 항목에 대 한 사용자 지정 스타일을 지정 하려면 합니다 `<EditItemStyle>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 다음을 표시 하 여 스타일 특성을 `<EditItemStyle>` 태그입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> 속성을 편집 하는 것에 대 한 사용자가 선택한 항목의 다른 모양을 지정 합니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.EditItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>편집을 위해 <see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤에서 선택한 항목에 대한 템플릿을 가져오거나 설정합니다.</summary>
        <value>편집을 위해 <see cref="T:System.Web.UI.ITemplate" /> 컨트롤에서 선택한 항목에 대한 템플릿이 들어 있는 <see cref="T:System.Web.UI.WebControls.DataList" /> 개체입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A> 속성에서 편집을 위해 선택한 항목의 내용을 제어 하는 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다. 에 의해 제어 됩니다 편집에 대 한 선택 항목의 모양을 <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> 속성입니다.  
  
 편집을 위해 선택한 항목에 대 한 서식 파일을 지정 하려면 합니다 `<EditItemTemplate>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 다음 태그와 닫는 사이 템플릿의 콘텐츠를 나열할 수 있습니다 `<EditItemTemplate>` 태그입니다.  
  
> [!CAUTION]
>  악성 클라이언트 스크립트 포함 될 수 있는 사용자 입력을 표시 하려면이 제어를 사용할 수 있습니다. 응용 프로그램에서 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 전송 되는 모든 정보를 확인 합니다. 입력된 텍스트 컨트롤에 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET에서는 사용자 입력에서 차단 스크립트를 HTML 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 [표준 컨트롤 보호](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호할](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A> 속성을 편집 하는 것에 대 한 사용자가 선택한 항목의 내용을 제어 합니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <related type="Article" href="https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8">보안 표준 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461">ASP.NET 웹 페이지에서 사용자 입력 유효성 검사 소개</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
      </Docs>
    </Member>
    <Member MemberName="ExtractTemplateRows">
      <MemberSignature Language="C#" Value="public virtual bool ExtractTemplateRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExtractTemplateRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ExtractTemplateRows" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ExtractTemplateRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ExtractTemplateRows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExtractTemplateRows : bool with get, set" Usage="System.Web.UI.WebControls.DataList.ExtractTemplateRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Table" /> 컨트롤의 각 템플릿에 정의된 <see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤의 행이 추출되고 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.Table" /> 컨트롤의 각 템플릿에 정의된 <see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤의 행이 추출되고 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 콘텐츠는 <xref:System.Web.UI.WebControls.DataList> 컨트롤 템플릿을 사용 하 여 지정 됩니다. 일반적으로 컨트롤 템플릿에 표시 하려는 나열 합니다. 배치할 수도 있습니다는 <xref:System.Web.UI.WebControls.Table> 템플릿에서 제어 하 고 테이블의 행을 표시 합니다.  
  
 사용 하 여는 <xref:System.Web.UI.WebControls.DataList.ExtractTemplateRows%2A> 속성을 지정 여부를의 행을 <xref:System.Web.UI.WebControls.Table> 의 각 템플릿에 정의 된 컨트롤을 <xref:System.Web.UI.WebControls.DataList> 컨트롤 추출 되 고 표시 합니다. 템플릿에에서 추출 된 모든 행을 <xref:System.Web.UI.WebControls.DataList> 컨트롤은 단일 테이블에 표시 됩니다. 이렇게 하면 보다 작은 여러 테이블에서 단일 테이블을 만들어의 기능을 유지할 수 있습니다는 <xref:System.Web.UI.WebControls.DataList> 제어 합니다.  
  
> [!NOTE]
>  이 속성 설정 된 경우 `true`, 제대로 구성 된 제공 해야 합니다 <xref:System.Web.UI.WebControls.Table> 에 포함 하려는 각 템플릿에 대 한 제어를 <xref:System.Web.UI.WebControls.DataList> 컨트롤. 테이블의 행만 표시 됩니다. 템플릿에서 다른 모든 콘텐츠는 무시 됩니다. 사용 해야는 <xref:System.Web.UI.WebControls.Table> 제대로 작동 하려면이 기능에 대 한 제어 합니다. <xref:System.Web.UI.HtmlControls.HtmlTable?displayProperty=nameWithType> 컨트롤이이 속성을 사용 하 여 호환 되지 않습니다.  
  
 에 대 한 셀을 만들 때를 <xref:System.Web.UI.WebControls.Table> 컨트롤 템플릿에서 사용할 수 있습니다는 <xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A> 의 속성을 <xref:System.Web.UI.WebControls.TableCell> 셀이 확장 될 열 수를 제어 하는 개체. 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.TableCell.RowSpan%2A> 셀이 확장 될 행의 수를 제어 하는 속성입니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>, <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>, 및 <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> 속성의 모양을 영향을 주지 않습니다 합니다 <xref:System.Web.UI.WebControls.DataList> 이 속성이 설정 된 경우 제어 `true`.  
  
   
  
## Examples  
 다음 코드 예제에 사용 하는 방법을 보여 줍니다 합니다 <xref:System.Web.UI.WebControls.DataList.ExtractTemplateRows%2A> 속성을 추출 하 고 행을 표시 <xref:System.Web.UI.WebControls.Table> 컨트롤의 템플릿에 정의 <xref:System.Web.UI.WebControls.DataList> 제어 합니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[Classic DataList.ExtractTemplateRows Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.ExtractTemplateRows Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.ExtractTemplateRows Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.ExtractTemplateRows Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤의 바닥글 구역에 대한 스타일 속성을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤의 바닥글 구역에 대한 스타일 속성이 들어 있는 <see cref="T:System.Web.UI.WebControls.DataList" /> 개체입니다. 기본값은 빈 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여의 바닥글 구역에 대 한 사용자 지정 스타일을 제공 하는 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 조정할 수 있는 공통 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
 <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> 의 속성을 <xref:System.Web.UI.WebControls.DataList> 컨트롤의 스타일 설정을 상속 합니다 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> 속성. 예를 들어 빨강 글꼴을 지정 하는 경우는 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> 속성을 <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> 속성 빨강 글꼴을 갖게 됩니다. 이 옵션을 사용 하면 단일 스타일 속성을 설정 하 여 컨트롤에 공통 된 모양을 제공할 수 있습니다. 설정 하 여 상속 된 스타일 설정을 재정의할 수는 <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> 속성입니다. 예를 들어, 파랑 글꼴을 지정할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> 속성에 지정 된 빨간색 글꼴로 재정의 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> 속성입니다.  
  
 바닥글 구역에 대 한 사용자 지정 스타일을 지정 하려면 합니다 `<FooterStyle>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 다음을 표시 하 여 스타일 특성을 `<FooterStyle>` 태그입니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> 속성으로 설정 되어 있어야 `true` 표시 되도록이 속성에 대 한 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> 의 바닥글 구역에 대 한 사용자 지정 배경 색을 지정 하는 속성을 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.ShowFooter" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.FooterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤의 바닥글 구역에 대한 템플릿을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.ITemplate" /> 컨트롤의 바닥글 구역에 대한 템플릿이 들어 있는 <see cref="T:System.Web.UI.WebControls.DataList" /> 개체입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> 바닥글 섹션의 내용을 제어 하는 속성입니다. 바닥글 섹션의 표시에 의해 제어 되는 <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> 속성입니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> 속성으로 설정 되어 있어야 `true` 표시 되도록이 속성에 대 한 합니다.  
  
 <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> 의 속성을 <xref:System.Web.UI.WebControls.DataList> 컨트롤의 스타일 설정을 상속 합니다 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> 속성. 예를 들어 빨강 글꼴을 지정 하는 경우는 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> 속성을 <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> 속성 빨강 글꼴을 갖게 됩니다. 이 옵션을 사용 하면 단일 스타일 속성을 설정 하 여 컨트롤에 공통 된 모양을 제공할 수 있습니다. 설정 하 여 상속 된 스타일 설정을 재정의할 수는 <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> 속성입니다. 예를 들어, 파랑 글꼴을 지정할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> 속성에 지정 된 빨간색 글꼴로 재정의 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> 속성입니다.  
  
 바닥글 구역에 대 한 서식 파일을 지정 하려면 합니다 `<FooterTemplate>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 다음 태그와 닫는 사이 템플릿의 콘텐츠를 나열할 수 있습니다 `<FooterTemplate>` 태그입니다.  
  
> [!CAUTION]
>  악성 클라이언트 스크립트 포함 될 수 있는 사용자 입력을 표시 하려면이 제어를 사용할 수 있습니다. 응용 프로그램에서 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 전송 되는 모든 정보를 확인 합니다. 입력된 텍스트 컨트롤에 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET에서는 사용자 입력에서 차단 스크립트를 HTML 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 [표준 컨트롤 보호](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호할](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> 바닥글 섹션의 내용을 제어 하는 속성을 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ShowFooter" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <related type="Article" href="https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8">보안 표준 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461">ASP.NET 웹 페이지에서 사용자 입력 유효성 검사 소개</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberSignature Language="F#" Value="member this.GridLines : System.Web.UI.WebControls.GridLines with get, set" Usage="System.Web.UI.WebControls.DataList.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 속성을 <see langword="RepeatLayout.Table" />로 설정할 때 <see cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" /> 컨트롤의 모눈선 스타일을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.GridLines" /> 열거형 값 중 하나입니다. 기본값은 <see langword="None" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.DataList.GridLines%2A> 속성에 대 한 모눈선 스타일을 지정 하는 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 다음 표에서 가능한 스타일을 보여 줍니다.  
  
|스타일|설명|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridLines.None>|모눈선이 없습니다.|  
|<xref:System.Web.UI.WebControls.GridLines.Horizontal>|가로 모눈선을 표시합니다.|  
|<xref:System.Web.UI.WebControls.GridLines.Vertical>|세로 모눈선을 표시합니다.|  
|<xref:System.Web.UI.WebControls.GridLines.Both>|가로 및 세로 모눈선을 모두 표시합니다.|  
  
> [!NOTE]
>  경우에이 속성이 적용 된 <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> 속성이 `RepeatLayout.Table`합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataList.GridLines%2A> 속성을 가로 및 세로 눈금선의 표시를 <xref:System.Web.UI.WebControls.DataList> 컨트롤.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤의 머리글 구역에 대한 스타일 속성을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤의 머리글 구역에 대한 스타일 속성이 들어 있는 <see cref="T:System.Web.UI.WebControls.DataList" /> 개체입니다. 기본값은 빈 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 사용자 지정 스타일의 머리글을 제공 합니다 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 조정할 수 있는 공통 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
 머리글 구역에 대 한 사용자 지정 스타일을 지정 하려면 합니다 `<HeaderStyle>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 다음을 표시 하 여 스타일 특성을 `<HeaderStyle>` 태그입니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> 속성으로 설정 되어 있어야 `true` 표시 되도록이 속성에 대 한 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> 의 머리글 구역에 대 한 사용자 지정 배경 색을 지정 하는 속성을 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ShowHeader" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤의 머리글 구역에 대한 템플릿을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.ITemplate" /> 컨트롤의 머리글 구역에 대한 템플릿이 들어 있는 <see cref="T:System.Web.UI.WebControls.DataList" />입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> 머리글 섹션의 내용을 제어 하는 속성입니다. 헤더 섹션의 표시에 의해 제어 되는 <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> 속성입니다.  
  
> [!NOTE]
>  합니다 <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> 속성으로 설정 되어 있어야 `true` 표시 되도록이 속성에 대 한 합니다.  
  
 머리글 구역에 대 한 서식 파일을 지정 하려면 합니다 `<HeaderTemplate>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 다음 태그와 닫는 사이 템플릿의 콘텐츠를 나열할 수 있습니다 `<HeaderTemplate>` 태그입니다.  
  
> [!CAUTION]
>  악성 클라이언트 스크립트 포함 될 수 있는 사용자 입력을 표시 하려면이 제어를 사용할 수 있습니다. 응용 프로그램에서 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 전송 되는 모든 정보를 확인 합니다. 입력된 텍스트 컨트롤에 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET에서는 사용자 입력에서 차단 스크립트를 HTML 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 [표준 컨트롤 보호](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호할](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> 머리글 섹션의 내용을 제어 하는 속성을 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <related type="Article" href="https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8">보안 표준 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461">ASP.NET 웹 페이지에서 사용자 입력 유효성 검사 소개</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
      </Docs>
    </Member>
    <Member MemberName="InitializeItem">
      <MemberSignature Language="C#" Value="protected virtual void InitializeItem (System.Web.UI.WebControls.DataListItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeItem(class System.Web.UI.WebControls.DataListItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeItem (item As DataListItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeItem(System::Web::UI::WebControls::DataListItem ^ item);" />
      <MemberSignature Language="F#" Value="abstract member InitializeItem : System.Web.UI.WebControls.DataListItem -&gt; unit&#xA;override this.InitializeItem : System.Web.UI.WebControls.DataListItem -&gt; unit" Usage="dataList.InitializeItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Web.UI.WebControls.DataListItem" />
      </Parameters>
      <Docs>
        <param name="item">초기화할 <see cref="T:System.Web.UI.WebControls.DataListItem" />입니다.</param>
        <summary>목록 항목 형식에 대해 지정한 템플릿과 스타일을 기준으로 <see cref="T:System.Web.UI.WebControls.DataListItem" /> 개체를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> 메서드는 주로 컨트롤 개발자가 확장 된 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
 합니다 <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> 메서드를 <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> 및 <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> 를 만드는 방법과 <xref:System.Web.UI.WebControls.DataListItem> 머리글, 바닥글, 구분 기호 및 데이터 목록에 포함 된 데이터 바인딩된 항목을 나타내는 컨트롤입니다. 데이터 바인딩된 항목을 통해 데이터 목록에 액세스할 수 있습니다는 <xref:System.Web.UI.WebControls.DataList.Items%2A> 컬렉션입니다. 머리글, 바닥글 및 구분 기호 항목을 통해 비롯 하 여 모든 항목 형식에 액세스할 수 있습니다는 <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> 컬렉션입니다.  
  
 재정의 <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> 사용자 지정 하는 방법 어떻게 <xref:System.Web.UI.WebControls.DataListItem> 컨트롤을 만들거나 추가할를 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 재정의 <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> 에 대 한 템플릿을 사용자 지정 하는 메서드를 <xref:System.Web.UI.WebControls.DataListItem> 제어 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)" />
        <altmember cref="T:System.Web.UI.WebControls.ListItemType" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ ItemCommand;" />
      <MemberSignature Language="F#" Value="member this.ItemCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.ItemCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤에서 아무 단추나 클릭하면 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.ItemCommand> 에서 단추를 클릭할 때 이벤트가 발생 합니다 <xref:System.Web.UI.WebControls.DataList> 제어 하 고는 사용자 지정 된 단추 컨트롤을 사용 하는 경우 일반적으로 사용 `CommandName` 값.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [방법: Web Forms 응용 프로그램에서 이벤트 사용](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataList.ItemCommand> 에서 항목을 선택 하는 이벤트를 <xref:System.Web.UI.WebControls.DataList> 제어 합니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCommand2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand2/CS/datalistitemcommand2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand2/VB/datalistitemcommand2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
        <related type="Article" href="https://msdn.microsoft.com/library/73bf8638-c4ec-4069-b0bb-a1dc79b92e32">방법: Web Forms 애플리케이션에서 이벤트 사용</related>
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListItemEventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListItemEventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As DataListItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListItemEventHandler ^ ItemCreated;" />
      <MemberSignature Language="F#" Value="member this.ItemCreated : System.Web.UI.WebControls.DataListItemEventHandler " Usage="member this.ItemCreated : System.Web.UI.WebControls.DataListItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤에서 항목을 만들면 서버측에서 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DataList.ItemCreated> 항목이 이벤트가 발생 합니다 <xref:System.Web.UI.WebControls.DataList> 컨트롤이 만들어지고, 데이터를 컨트롤에 바인딩되지 않은 왕복 시와 시.  
  
 합니다 <xref:System.Web.UI.WebControls.DataList.ItemCreated> 이벤트는 일반적으로 내용과 있는 행의 모양을 제어 하는 데 사용 됩니다는 <xref:System.Web.UI.WebControls.DataList> 제어 합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [방법: Web Forms 응용 프로그램에서 이벤트 사용](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataList.ItemCreated> 의 항목에는 순서를 표시 하는 이벤트를 <xref:System.Web.UI.WebControls.DataList> 컨트롤 생성 됩니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated/CS/datalistitemcreatedcs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated/VB/datalistitemcreatedvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCreated2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated2/CS/datalistitemcreated2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated2/VB/datalistitemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/73bf8638-c4ec-4069-b0bb-a1dc79b92e32">방법: Web Forms 애플리케이션에서 이벤트 사용</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
      </Docs>
    </Member>
    <Member MemberName="ItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListItemEventHandler ItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListItemEventHandler ItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDataBound As DataListItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListItemEventHandler ^ ItemDataBound;" />
      <MemberSignature Language="F#" Value="member this.ItemDataBound : System.Web.UI.WebControls.DataListItemEventHandler " Usage="member this.ItemDataBound : System.Web.UI.WebControls.DataListItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>항목이 <see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤에 바인딩된 데이터인 경우 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.ItemDataBound> 이벤트는 항목은 데이터에 바인딩된 후 발생 합니다 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다. 이 이벤트는 클라이언트에 표시 되기 전에 데이터 항목에 액세스할 수 있는 마지막 기회를 제공 합니다. 이 이벤트는 데이터 항목을 더 이상 사용할 수 없습니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [방법: Web Forms 응용 프로그램에서 이벤트 사용](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataList.ItemDataBound> 의 항목에는 순서를 표시 하는 이벤트를 <xref:System.Web.UI.WebControls.DataList> 를 컨트롤에 바인딩되는 컨트롤입니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound/CS/datalistitemdataboundcs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound/VB/datalistitemdataboundvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemDataBound2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound2/CS/datalistitemdatabound2cs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound2/VB/datalistitemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/73bf8638-c4ec-4069-b0bb-a1dc79b92e32">방법: Web Forms 애플리케이션에서 이벤트 사용</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataListItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataListItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.Items" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Items As DataListItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataListItemCollection ^ Items { System::Web::UI::WebControls::DataListItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Web.UI.WebControls.DataListItemCollection" Usage="System.Web.UI.WebControls.DataList.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤 내에 있는 개별 항목을 나타내는 <see cref="T:System.Web.UI.WebControls.DataListItem" /> 개체의 컬렉션을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataListItemCollection" /> 컨트롤에 있는 개별 항목을 나타내는 <see cref="T:System.Web.UI.WebControls.DataListItem" /> 개체의 컬렉션이 들어 있는 <see cref="T:System.Web.UI.WebControls.DataList" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.DataList.Items%2A> 컬렉션의 항목을 프로그래밍 방식으로 제어 하는 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다. <xref:System.Web.UI.WebControls.DataList.Items%2A> 컬렉션 항목 컬렉션에 추가 하거나 제거 하는 모든 메서드를 제공 하지 않습니다. 에 대 한 처리기를 제공 하 여 항목의 내용을 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.DataList.ItemCreated> 이벤트입니다.  
  
> [!NOTE]
>  에 포함 된 데이터 원본에 연결 하는 항목만 <xref:System.Web.UI.WebControls.DataList.Items%2A> 컬렉션입니다. 머리글, 바닥글 및 구분 기호는 컬렉션에 포함 되지 않습니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataList.Items%2A> 컬렉션에서 항목을 표시 하는 <xref:System.Web.UI.WebControls.DataList> 제어 합니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[Classic DataList.Items Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.Items Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.Items Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.Items Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItem" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCreated" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
      </Docs>
    </Member>
    <Member MemberName="ItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle ItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle ItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ ItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.ItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤에 있는 항목의 스타일 속성을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에 있는 항목의 스타일 속성이 들어 있는 <see cref="T:System.Web.UI.WebControls.DataList" /> 개체입니다. 기본값은 빈 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 항목에 대 한 사용자 지정 스타일을 제공 하는 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 조정할 수 있는 공통 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
 항목의 스타일 속성을 <xref:System.Web.UI.WebControls.DataList> 제어 계층을 통해 다른 하나씩 스타일 속성에서 상속 됩니다. 계층에서 낮은 설정 항목 스타일 속성은 계층 구조의 상위 항목 스타일 속성에 의해 상속 됩니다. 예를 들어 빨강 글꼴을 지정 하는 경우는 <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> 속성을 다른 항목 스타일의 모든 속성을 <xref:System.Web.UI.WebControls.DataList> 컨트롤 빨강 글꼴을 갖게 됩니다. 이 옵션을 사용 하면 단일 항목의 스타일 속성을 설정 하 여 컨트롤에 공통 된 모양을 제공할 수 있습니다. 스타일 속성을 설정 하 여 상위 계층에 있는 항목 스타일 속성에 대 한 상속 된 스타일 설정을 재정의할 수 있습니다. 예를 들어, 파랑 글꼴을 지정할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> 속성에 지정 된 빨간색 글꼴로 재정의 <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> 속성입니다. 다음 표에서 순위가 가장 높은 계층 순서를 나열합니다.  
  
|우선 순위|스타일 속성|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 항목에 대 한 사용자 지정 스타일을 지정 하는 <xref:System.Web.UI.WebControls.DataList> 컨트롤을 배치 합니다 `<ItemStyle>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList> 컨트롤. 다음을 표시 하 여 스타일 특성을 `<ItemStyle>` 태그입니다.  
  
 사용할 수도 있습니다는 <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> 교대로 반복 되는 다양 한 모양을 제공 하는 속성의 항목을 <xref:System.Web.UI.WebControls.DataList> 제어 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> 속성에 있는 항목에 대 한 다른 배경색을 지정 하는 <xref:System.Web.UI.WebControls.DataList> 컨트롤.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemStyle/CS/datalistitemstylecs.aspx#1)]
 [!code-aspx-vb[DataListItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemStyle/VB/datalistitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.ItemTemplate" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IWizardSideBarListControl.ItemTemplate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤에 있는 항목에 대한 템플릿을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.ITemplate" /> 컨트롤에 있는 항목에 대한 템플릿이 들어 있는 <see cref="T:System.Web.UI.WebControls.DataList" />입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> 속성에 있는 항목의 내용을 제어 하는 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다. 에 있는 항목의 모양을 합니다 <xref:System.Web.UI.WebControls.DataList> 컨트롤에 의해 제어 됩니다는 <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> 속성입니다.  
  
 항목에 대 한 템플릿을 지정 하는 <xref:System.Web.UI.WebControls.DataList> 컨트롤을 배치를 `<ItemTemplate>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다. 다음 태그와 닫는 사이 템플릿의 콘텐츠를 나열할 수 있습니다 `<ItemTemplate>` 태그입니다.  
  
 필요에 따라 사용할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> 교대로 반복 되는 다양 한 모양을 제공 하는 속성의 항목을 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
> [!CAUTION]
>  악성 클라이언트 스크립트 포함 될 수 있는 사용자 입력을 표시 하려면이 제어를 사용할 수 있습니다. 응용 프로그램에서 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 전송 되는 모든 정보를 확인 합니다. 입력된 텍스트 컨트롤에 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET에서는 사용자 입력에서 차단 스크립트를 HTML 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 [표준 컨트롤 보호](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호할](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> 속성에 있는 항목의 내용을 제어 하는 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemStyle" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <related type="Article" href="https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8">보안 표준 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461">ASP.NET 웹 페이지에서 사용자 입력 유효성 검사 소개</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="dataList.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Web.UI.WebControls.DataList" />의 상태를 나타내는 개체입니다.</param>
        <summary>이전에 저장된 <see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤의 뷰 상태를 로드합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는.NET Framework 인프라에서 기본적으로 사용 하며 사용자 코드에서 직접 사용할 수 없습니다.  그러나 컨트롤 개발자가 사용자 지정 서버 컨트롤에서 해당 뷰 상태를 복원 하는 방법을 지정 하려면이 메서드를 재정의할 수 있습니다. 자세한 내용은 [ASP.NET 상태 관리 개요](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))합니다.  
  
 합니다 <xref:System.Web.UI.WebControls.DataList.LoadViewState%2A> 에 대 한 뷰 상태 정보를 복원 하는 메서드를 <xref:System.Web.UI.WebControls.DataList> 저장 한 이전 페이지 요청에서 컨트롤을 <xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.TrackViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681">컨트롤 상태 vs입니다. 뷰 상태 샘플</related>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="dataList.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">이벤트 소스입니다.</param>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>서버 컨트롤의 이벤트가 페이지의 UI 서버 컨트롤 계층 구조에 전달되었는지 여부를 확인합니다.</summary>
        <returns>이벤트가 취소되었으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다. 기본값은 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnCancelCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCancelCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancelCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCancelCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCancelCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCancelCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnCancelCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnCancelCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataList.CancelCommand" /> 이벤트를 발생시킵니다. 이를 통해 이벤트에 대한 사용자 지정 처리기를 제공할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataList.OnCancelCommand%2A> 에 대 한 사용자 지정 처리기를 제공 하는 메서드는 <xref:System.Web.UI.WebControls.DataList.CancelCommand> 이벤트.  
  
 <xref:System.Web.UI.WebControls.DataList.CancelCommand> 이벤트는 때를 `Cancel` 항목에 대해 단추를 클릭할는 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
 에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataList.CancelCommand> 이벤트 집합을 <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> 속성을 `-1` (항목을 선택 취소)를 다음 데이터를 다시 바인딩합니다는 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
> [!CAUTION]
>  악성 클라이언트 스크립트 포함 될 수 있는 사용자 입력을 표시 하려면이 제어를 사용할 수 있습니다. 응용 프로그램에서 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 전송 되는 모든 정보를 확인 합니다. 입력된 텍스트 컨트롤에 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET에서는 사용자 입력에서 차단 스크립트를 HTML 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 [표준 컨트롤 보호](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호할](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [방법: Web Forms 응용 프로그램에서 이벤트 사용](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.DataList.OnCancelCommand%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataList.CancelCommand> 이벤트입니다. 항목에 대 한 편집 내용을 취소 합니다 <xref:System.Web.UI.WebControls.DataList> 제어를 `Cancel` 단추를 클릭 합니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8">보안 표준 컨트롤</related>
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b">방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461">ASP.NET 웹 페이지에서 사용자 입력 유효성 검사 소개</related>
      </Docs>
    </Member>
    <Member MemberName="OnDeleteCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleteCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleteCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleteCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleteCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleteCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnDeleteCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnDeleteCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" /> 이벤트를 발생시킵니다. 이를 통해 이벤트에 대한 사용자 지정 처리기를 제공할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataList.OnDeleteCommand%2A> 에 대 한 사용자 지정 처리기를 제공 하는 메서드는 <xref:System.Web.UI.WebControls.DataList.DeleteCommand> 이벤트.  
  
 <xref:System.Web.UI.WebControls.DataList.DeleteCommand> 이벤트는 때를 `Delete` 항목에 대해 단추를 클릭할는 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
 에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataList.DeleteCommand> 이벤트 데이터 원본에서 선택한 항목을 제거 하 고 다음 데이터를 다시 바인딩 횟수는 <xref:System.Web.UI.WebControls.DataList> 제어 합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [방법: Web Forms 응용 프로그램에서 이벤트 사용](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.DataList.OnDeleteCommand%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataList.DeleteCommand> 이벤트입니다. 선택한 항목 삭제 합니다 <xref:System.Web.UI.WebControls.DataList> 제어는 `Delete` 단추를 클릭 합니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnEditCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnEditCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEditCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnEditCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnEditCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataList.EditCommand" /> 이벤트를 발생시킵니다. 이를 통해 이벤트에 대한 사용자 지정 처리기를 제공할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataList.OnEditCommand%2A> 에 대 한 사용자 지정 처리기를 제공 하는 메서드는 <xref:System.Web.UI.WebControls.DataList.EditCommand> 이벤트.  
  
 <xref:System.Web.UI.WebControls.DataList.EditCommand> 이벤트는 때를 `Edit` 항목에 대해 단추를 클릭할는 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
 에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataList.EditCommand> 이벤트 집합을 <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> 속성 선택된 된 행을 다음 데이터를 다시 바인딩합니다는 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
> [!CAUTION]
>  악성 클라이언트 스크립트 포함 될 수 있는 사용자 입력을 표시 하려면이 제어를 사용할 수 있습니다. 응용 프로그램에서 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 전송 되는 모든 정보를 확인 합니다. 입력된 텍스트 컨트롤에 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET에서는 사용자 입력에서 차단 스크립트를 HTML 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 [표준 컨트롤 보호](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호할](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [방법: Web Forms 응용 프로그램에서 이벤트 사용](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.DataList.OnEditCommand%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataList.EditCommand> 이벤트입니다. 선택한 항목을 편집할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.DataList> 제어는 `Edit` 단추를 클릭 합니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/73bf8638-c4ec-4069-b0bb-a1dc79b92e32">방법: Web Forms 애플리케이션에서 이벤트 사용</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="dataList.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.Control.Init" /> 컨트롤에 대해 <see cref="T:System.Web.UI.WebControls.DataList" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DataList.OnInit%2A> 메서드를 알립니다는 <xref:System.Web.UI.WebControls.DataList> 만들고 인스턴스를 설정 하는 데 필요한 초기화 단계를 수행 하는 컨트롤입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnItemCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnItemCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataList.ItemCommand" /> 이벤트를 발생시킵니다. 이를 통해 이벤트에 대한 사용자 지정 처리기를 제공할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataList.OnItemCommand%2A> 에 대 한 사용자 지정 처리기를 제공 하는 메서드는 <xref:System.Web.UI.WebControls.DataList.ItemCommand> 이벤트.  
  
 <xref:System.Web.UI.WebControls.DataList.ItemCommand> 에 있는 단추를 클릭할 때 이벤트가 발생 합니다는 <xref:System.Web.UI.WebControls.DataList> 제어 하 고 사용자 지정 된 단추 컨트롤을 사용 하는 경우 일반적으로 사용 됩니다 `CommandName` 값을 `Add`의 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [방법: Web Forms 응용 프로그램에서 이벤트 사용](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.DataList.OnItemCommand%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataList.ItemCommand> 에서 항목을 선택 하는 이벤트를 <xref:System.Web.UI.WebControls.DataList> 제어 합니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCommand2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand2/CS/datalistitemcommand2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand2/VB/datalistitemcommand2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/73bf8638-c4ec-4069-b0bb-a1dc79b92e32">방법: Web Forms 애플리케이션에서 이벤트 사용</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (System.Web.UI.WebControls.DataListItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.Web.UI.WebControls.DataListItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As DataListItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(System::Web::UI::WebControls::DataListItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCreated : System.Web.UI.WebControls.DataListItemEventArgs -&gt; unit&#xA;override this.OnItemCreated : System.Web.UI.WebControls.DataListItemEventArgs -&gt; unit" Usage="dataList.OnItemCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataList.ItemCreated" /> 이벤트를 발생시킵니다. 이를 통해 이벤트에 대한 사용자 지정 처리기를 제공할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataList.OnItemCreated%2A> 에 대 한 사용자 지정 처리기를 제공 하는 메서드는 <xref:System.Web.UI.WebControls.DataList.ItemCreated> 이벤트.  
  
 합니다 <xref:System.Web.UI.WebControls.DataList.ItemCreated> 항목이 이벤트가 발생 합니다 <xref:System.Web.UI.WebControls.DataList> 컨트롤이 만들어지고, 데이터를 컨트롤에 바인딩되지 않은 왕복 시와 시.  
  
 합니다 <xref:System.Web.UI.WebControls.DataList.ItemCreated> 이벤트는 일반적으로 내용과 있는 행의 모양을 제어 하는 데 사용 됩니다는 <xref:System.Web.UI.WebControls.DataList> 제어 합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [방법: Web Forms 응용 프로그램에서 이벤트 사용](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.DataList.OnItemCreated%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataList.ItemCreated> 의 항목에는 순서를 표시 하는 이벤트를 <xref:System.Web.UI.WebControls.DataList> 컨트롤 생성 됩니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated/CS/datalistitemcreatedcs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated/VB/datalistitemcreatedvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCreated2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated2/CS/datalistitemcreated2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated2/VB/datalistitemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCreated" />
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/73bf8638-c4ec-4069-b0bb-a1dc79b92e32">방법: Web Forms 애플리케이션에서 이벤트 사용</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
      </Docs>
    </Member>
    <Member MemberName="OnItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDataBound (System.Web.UI.WebControls.DataListItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDataBound(class System.Web.UI.WebControls.DataListItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDataBound (e As DataListItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDataBound(System::Web::UI::WebControls::DataListItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDataBound : System.Web.UI.WebControls.DataListItemEventArgs -&gt; unit&#xA;override this.OnItemDataBound : System.Web.UI.WebControls.DataListItemEventArgs -&gt; unit" Usage="dataList.OnItemDataBound e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataList.ItemDataBound" /> 이벤트를 발생시킵니다. 이를 통해 이벤트에 대한 사용자 지정 처리기를 제공할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataList.OnItemDataBound%2A> 에 대 한 사용자 지정 처리기를 제공 하는 메서드는 <xref:System.Web.UI.WebControls.DataList.ItemDataBound> 이벤트.  
  
 <xref:System.Web.UI.WebControls.DataList.ItemDataBound> 이벤트는 항목은 데이터에 바인딩된 후 발생 합니다 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다. 이 이벤트는 클라이언트에 표시 되기 전에 데이터 항목에 액세스할 수 있는 마지막 기회를 제공 합니다. 이 이벤트는 데이터 항목을 더 이상 사용할 수 없습니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [방법: Web Forms 응용 프로그램에서 이벤트 사용](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.DataList.OnItemDataBound%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataList.ItemDataBound> 의 항목에는 순서를 표시 하는 이벤트를 <xref:System.Web.UI.WebControls.DataList> 를 컨트롤에 바인딩되는 컨트롤입니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound/CS/datalistitemdataboundcs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound/VB/datalistitemdataboundvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemDataBound2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound2/CS/datalistitemdatabound2cs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound2/VB/datalistitemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemDataBound" />
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/73bf8638-c4ec-4069-b0bb-a1dc79b92e32">방법: Web Forms 애플리케이션에서 이벤트 사용</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
      </Docs>
    </Member>
    <Member MemberName="OnUpdateCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdateCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdateCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdateCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdateCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdateCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnUpdateCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnUpdateCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터가 포함된 <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />입니다.</param>
        <summary><see cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" /> 이벤트를 발생시킵니다. 이를 통해 이벤트에 대한 사용자 지정 처리기를 제공할 수 있습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataList.OnUpdateCommand%2A> 에 대 한 사용자 지정 처리기를 제공 하는 메서드는 <xref:System.Web.UI.WebControls.DataList.UpdateCommand> 이벤트.  
  
 <xref:System.Web.UI.WebControls.DataList.UpdateCommand> 이벤트가 발생 경우를 `Update` 단추가 항목을 클릭 합니다.  
  
 에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataList.UpdateCommand> 데이터 집합을 업데이트 하는 이벤트를 <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> 속성을 `-1` (항목을 선택 취소)를, 다음 데이터를 다시 바인딩합니다는 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
> [!CAUTION]
>  악성 클라이언트 스크립트 포함 될 수 있는 사용자 입력을 표시 하려면이 제어를 사용할 수 있습니다. 응용 프로그램에서 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 전송 되는 모든 정보를 확인 합니다. 입력된 텍스트 컨트롤에 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET에서는 사용자 입력에서 차단 스크립트를 HTML 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 [표준 컨트롤 보호](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호할](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 [방법: Web Forms 응용 프로그램에서 이벤트 사용](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)합니다.  
  
 또한 <xref:System.Web.UI.WebControls.DataList.OnUpdateCommand%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataList.UpdateCommand> 이벤트입니다. 선택한 항목을 업데이트할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.DataList> 사용자가 입력 한 새 값을 사용 하 여 컨트롤 때는 `Update` 단추를 클릭 합니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>파생 클래스에서 <see cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> 메서드를 호출해야 합니다.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal override void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PrepareControlHierarchy();" />
      <MemberSignature Language="F#" Value="override this.PrepareControlHierarchy : unit -&gt; unit" Usage="dataList.PrepareControlHierarchy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤에 렌더링하기 위해 컨트롤 계층 구조를 준비합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DataList.PrepareControlHierarchy%2A> 메서드는 주로 컨트롤 개발자가 사용에서 사용자 지정 컨트롤을 파생 하는 경우는 <xref:System.Web.UI.WebControls.DataList> 제어 합니다.  
  
 합니다 <xref:System.Web.UI.WebControls.DataList.PrepareControlHierarchy%2A> 컨트롤 계층 구조를 준비 하 고 포함에 대 한 스타일 설정 <xref:System.Web.UI.WebControls.DataListItem> 자식 컨트롤이 렌더링 되기 전에 제어 합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>재정의 <see cref="M:System.Web.UI.WebControls.DataList.PrepareControlHierarchy" /> 에 포함 된 컨트롤에 대 한 스타일을 사용자 지정 하는 메서드는 <see cref="T:System.Web.UI.WebControls.DataList" /> 렌더링 되기 전에 합니다.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="dataList.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">클라이언트에서 HTML 콘텐츠를 렌더링하기 위한 출력 스트림을 나타내는 <see cref="T:System.Web.UI.HtmlTextWriter" />입니다.</param>
        <summary>목록 항목을 <see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤에 렌더링합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Web.UI.WebControls.DataList.RenderContents%2A> 에서 사용자 지정 컨트롤을 파생 하는 경우 주로 컨트롤 개발자가 메서드는는 <xref:System.Web.UI.WebControls.DataList> 제어 합니다.  
  
 합니다 <xref:System.Web.UI.WebControls.DataList.RenderContents%2A> 메서드 내부 콘텐츠를 렌더링 합니다 <xref:System.Web.UI.WebControls.DataList> 컨트롤을 포함 하 여 포함 된 <xref:System.Web.UI.WebControls.DataListItem> 컨트롤입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataList.RenderContents%2A> 메서드를 사용자 지정 서버에서 컨트롤을 일부 텍스트 앞에 <xref:System.Web.UI.WebControls.DataList> 개체입니다.  
  
 [!code-aspx-csharp[CustomDataListRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListRenderContents/CS/custom_datalist_rendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomDataListRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListRenderContents/VB/custom_datalist_rendercontentsvb.aspx#1)]  
[!code-csharp[CustomDataListRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListRenderContents/CS/custom_datalist_rendercontents.cs#2)]
[!code-vb[CustomDataListRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListRenderContents/VB/custom_datalist_rendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RepeatColumns">
      <MemberSignature Language="C#" Value="public virtual int RepeatColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RepeatColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatColumns As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RepeatColumns { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RepeatColumns : int with get, set" Usage="System.Web.UI.WebControls.DataList.RepeatColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤에 표시할 열의 수를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤에 표시할 열의 수입니다. 기본값은 <see langword="0" />이며 <see cref="T:System.Web.UI.WebControls.DataList" /> 속성 값을 기초로 <see cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" /> 컨트롤에 있는 항목이 하나의 행 또는 열에 표시됨을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 항목을 표시 하는 열 수를 지정 하려면이 속성을 사용 합니다 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 예를 들어,이 속성을 설정 하는 경우 `5`, <xref:System.Web.UI.WebControls.DataList> 컨트롤 다섯 개의 열에 해당 항목을 표시 합니다.  
  
> [!NOTE]
>  이 속성 설정 된 경우 `0`, <xref:System.Web.UI.WebControls.DataList> 단일 행 또는 값에 따라 열의 해당 항목을 표시 하는 컨트롤을 <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> 속성입니다. 경우는 <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> 속성이 `RepeatDirection.Horizontal`, 항목을 단일 행에 표시 됩니다. 경우는 <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> 속성이 `RepeatDirection.Vertical`, 항목은 단일 열에 표시 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> 표시할 열의 수를 지정 하는 속성은 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정한 열의 수가 음수인 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
      </Docs>
    </Member>
    <Member MemberName="RepeatDirection">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RepeatDirection RepeatDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.RepeatDirection RepeatDirection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatDirection As RepeatDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::RepeatDirection RepeatDirection { System::Web::UI::WebControls::RepeatDirection get(); void set(System::Web::UI::WebControls::RepeatDirection value); };" />
      <MemberSignature Language="F#" Value="member this.RepeatDirection : System.Web.UI.WebControls.RepeatDirection with get, set" Usage="System.Web.UI.WebControls.DataList.RepeatDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeatDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤이 세로와 가로 방향 중 어느 방향으로 표시될지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.RepeatDirection" /> 값 중 하나입니다. 기본값은 <see langword="Vertical" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> 표시 되는 방향을 지정 하는 속성을 <xref:System.Web.UI.WebControls.DataList> 제어 합니다.  
  
> [!NOTE]
>  표시 되는 열 수는 항상 기준는 <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> 속성입니다.  
  
 이 속성 설정 된 경우 `RepeatDirection.Vertical`, 목록의 항목은 모든 항목이 렌더링 될 때까지 왼쪽에서 오른쪽으로 다음 위쪽에서에서 아래쪽으로 로드 하는 열에 표시 됩니다. 예를 들어 경우는 <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> 속성이로 설정 되어 `3`의 항목을 <xref:System.Web.UI.WebControls.DataList> 컨트롤은 다음 표와 같이 세 개의 열에 표시 됩니다.  
  
||||  
|-|-|-|  
|1|4|7|  
|2|5|8|  
|3|6|9|  
  
 이 속성 설정 된 경우 `RepeatDirection.Horizontal`목록의 항목은 왼쪽에서 오른쪽으로 로드 되는 행에 표시 됩니다, 그리고 위쪽에서 아래쪽은 모든 항목이 렌더링 될 때까지 합니다. 예를 들어 경우는 <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> 속성이로 설정 되어 `3`의 항목을 <xref:System.Web.UI.WebControls.DataList> 제어는 다음 표에 있는 대로 각 세 항목의 행에 표시 됩니다.  
  
||||  
|-|-|-|  
|1|2|3|  
|4|5|6|  
|7|8|9|  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> 는 방향을 지정 하는 속성은 <xref:System.Web.UI.WebControls.DataList> 컨트롤이 표시 됩니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정된 값이 <see cref="T:System.Web.UI.WebControls.RepeatDirection" /> 값 중 하나가 아닌 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
      </Docs>
    </Member>
    <Member MemberName="RepeatLayout">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RepeatLayout RepeatLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.RepeatLayout RepeatLayout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatLayout As RepeatLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::RepeatLayout RepeatLayout { System::Web::UI::WebControls::RepeatLayout get(); void set(System::Web::UI::WebControls::RepeatLayout value); };" />
      <MemberSignature Language="F#" Value="member this.RepeatLayout : System.Web.UI.WebControls.RepeatLayout with get, set" Usage="System.Web.UI.WebControls.DataList.RepeatLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeatLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>컨트롤이 테이블로 표시되는지 아니면 선형 레이아웃으로 표시되는지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>컨트롤이 테이블로 표시되는지 아니면 선형 레이아웃으로 표시되는지를 지정하는 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> 속성을 지정 하는지 여부를 항목은 <xref:System.Web.UI.WebControls.DataList> 컨트롤을 테이블에 표시 됩니다. 유일한 <xref:System.Web.UI.WebControls.RepeatLayout> 에서 지원 되는 값을 <xref:System.Web.UI.WebControls.DataList> 컨트롤은 <xref:System.Web.UI.WebControls.RepeatLayout.Table> 및 <xref:System.Web.UI.WebControls.RepeatLayout.Flow>합니다.  
  
 이 속성 설정 된 경우 `RepeatLayout.Table`, 목록에서 항목을 테이블에 표시 됩니다. 이 속성 설정 된 경우 `RepeatLayout.Flow`, 목록에 항목 테이블 구조 없이 표시 됩니다.  
  
 경우는 <xref:System.Web.UI.WebControls.DataList> 제어 테이블에 표시 되 면 사용할 수는 <xref:System.Web.UI.WebControls.DataList.GridLines%2A> 모눈선 스타일을 지정 하는 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> 의 레이아웃 스타일을 지정 하는 속성을 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정된 값이 지원되는 <see cref="T:System.Web.UI.WebControls.RepeatLayout" /> 값 중 하나가 아닌 경우</exception>
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="dataList.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>페이지가 서버에 포스트백된 이후에 발생한 컨트롤 뷰 상태의 변경 내용을 저장합니다.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.DataList" /> 뷰 상태의 변경 내용이 들어 있는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> 주로 컨트롤 개발자가 메서드를 사용 합니다.  
  
 뷰 상태는 서버 컨트롤의 속성 값의 누적 된 것입니다. 이러한 값은 자동으로 서버 컨트롤의 배치 <xref:System.Web.UI.Control.ViewState%2A> 인스턴스인 속성의는 <xref:System.Web.UI.StateBag> 클래스. <xref:System.Web.UI.Control.ViewState%2A> 속성의 값은 다음 서버 컨트롤의 수명 주기 상태 저장 단계 후 문자열 개체에 유지 됩니다. 자세한 내용은 [ASP.NET 페이지 수명 주기 개요](https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991)합니다.  
  
 뷰 상태를 저장 하는 경우이 문자열 개체 변수로 숨겨진된 HTML input 요소에 저장 된 클라이언트에 반환 됩니다. 사용자 지정 서버 컨트롤을 만들 때 재정의 하 여 효율성을 높일 수 있습니다는 <xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> 메서드 및 수정 된 <xref:System.Web.UI.Control.ViewState%2A> 서버 컨트롤에 대 한 속성입니다. 자세한 내용은 [사용자 지정 ASP.NET 서버 컨트롤 개발](https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef) 하 고 [ASP.NET 상태 관리 개요](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.TrackViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.LoadViewState(System.Object)" />
        <related type="Article" href="https://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681">컨트롤 상태 vs입니다. 뷰 상태 샘플</related>
      </Docs>
    </Member>
    <Member MemberName="SelectCommandName">
      <MemberSignature Language="C#" Value="public const string SelectCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelectCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const SelectCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelectCommandName;" />
      <MemberSignature Language="F#" Value="val mutable SelectCommandName : string" Usage="System.Web.UI.WebControls.DataList.SelectCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="Select" /> 명령 이름을 나타냅니다. 이 필드는 읽기 전용입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DataList.SelectCommandName> 나타내는 필드는 `Select` 명령 이름입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectedIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedIndex : int with get, set" Usage="System.Web.UI.WebControls.DataList.SelectedIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IWizardSideBarListControl.SelectedIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤에서 선택한 항목의 인덱스를 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤에서 선택한 항목의 인덱스입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> 속성에서 선택한 항목을 프로그래밍 방식으로 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 또한 선택한 항목의 인덱스를 확인 하려면이 속성을 사용할 수 있습니다.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> 속성은 0부터 시작 합니다.  
  
 항목의 선택을 취소를 설정 합니다 <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> 속성을 `-1`입니다.  
  
 <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> 속성은 컨트롤 상태에 저장 합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> 속성에서 선택한 항목을 지정 하는 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정된 값이 <see langword="-1" />보다 작은 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataListItem SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataListItem SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedItem As DataListItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataListItem ^ SelectedItem { System::Web::UI::WebControls::DataListItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItem : System.Web.UI.WebControls.DataListItem" Usage="System.Web.UI.WebControls.DataList.SelectedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤에서 선택한 항목을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.DataListItem" /> 컨트롤에서 선택한 항목을 나타내는 <see cref="T:System.Web.UI.WebControls.DataList" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DataList.SelectedItem%2A> 가져올 속성을 <xref:System.Web.UI.WebControls.DataListItem> 에서 선택한 항목을 나타내는 개체를 <xref:System.Web.UI.WebControls.DataList> 컨트롤. 이 개체는 선택한 항목의 속성에 액세스 하려면 다음 사용 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataList.SelectedItem%2A> 속성에서 선택한 항목의 내용을 표시 하는 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[Classic DataList.SelectedItem Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.SelectedItem Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.SelectedItem Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.SelectedItem Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle SelectedItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SelectedItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ SelectedItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.SelectedItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤에서 선택한 항목의 스타일 속성을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤에서 선택한 항목의 스타일 속성이 들어 있는 <see cref="T:System.Web.UI.WebControls.DataList" /> 개체입니다. 기본값은 빈 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하 여 선택한 항목에 대 한 사용자 지정 스타일을 제공 하는 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 조정할 수 있는 공통 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
 항목의 스타일 속성을 <xref:System.Web.UI.WebControls.DataList> 제어 계층을 통해 다른 하나씩 스타일 속성에서 상속 됩니다. 계층에서 낮은 설정 항목 스타일 속성은 계층 구조의 상위 항목 스타일 속성에 의해 상속 됩니다. 예를 들어 빨강 글꼴을 지정 하는 경우는 <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> 속성을 다른 항목 스타일의 모든 속성을 <xref:System.Web.UI.WebControls.DataList> 컨트롤 빨강 글꼴을 갖게 됩니다. 이 옵션을 사용 하면 단일 항목의 스타일 속성을 설정 하 여 컨트롤에 공통 된 모양을 제공할 수 있습니다. 스타일 속성을 설정 하 여 상위 계층에 있는 항목 스타일 속성에 대 한 상속 된 스타일 설정을 재정의할 수 있습니다. 예를 들어, 파랑 글꼴을 지정할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> 속성에 지정 된 빨간색 글꼴로 재정의 <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> 속성입니다. 다음 표에서 순위가 가장 높은 계층 순서를 나열합니다.  
  
|우선 순위|스타일 속성|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 선택한 항목에 대 한 사용자 지정 스타일을 지정 하려면 합니다 `<SelectedItemStyle>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 다음을 표시 하 여 스타일 특성을 `<SelectedItemStyle>` 태그입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A> 속성에서 선택한 항목에 대 한 사용자 지정 배경 색을 지정 하는 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SelectedItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SelectedItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ SelectedItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤에서 선택한 항목에 대한 템플릿을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.ITemplate" /> 컨트롤에서 선택한 항목에 대한 템플릿이 들어 있는 <see cref="T:System.Web.UI.WebControls.DataList" />입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 된 <xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A> 선택한 항목의 내용을 제어 하는 속성입니다. 선택한 항목의 표시에 의해 제어 되는 <xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A> 속성입니다.  
  
 선택한 항목에 대 한 서식 파일을 지정 하려면 합니다 `<SelectedItemTemplate>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 다음 태그와 닫는 사이 템플릿의 콘텐츠를 나열할 수 있습니다 `<SelectedItemTemplate>` 태그입니다.  
  
> [!CAUTION]
>  악성 클라이언트 스크립트 포함 될 수 있는 사용자 입력을 표시 하려면이 제어를 사용할 수 있습니다. 응용 프로그램에서 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 전송 되는 모든 정보를 확인 합니다. 입력된 텍스트 컨트롤에 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET에서는 사용자 입력에서 차단 스크립트를 HTML 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 [표준 컨트롤 보호](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호할](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A> 속성에서 선택한 항목의 내용을 제어 하는 <xref:System.Web.UI.WebControls.DataList> 제어 합니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : obj" Usage="System.Web.UI.WebControls.DataList.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>선택한 데이터 목록 항목의 키 필드 값을 가져옵니다.</summary>
        <value>선택한 데이터 목록 항목의 키 필드 값입니다. 기본값은 <see langword="null" />로, 현재 선택된 데이터 목록 항목이 없음을 나타냅니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" /> 속성이 설정되어 있지 않은 경우</exception>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
      </Docs>
    </Member>
    <Member MemberName="SeparatorStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle SeparatorStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SeparatorStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SeparatorStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SeparatorStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ SeparatorStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SeparatorStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.SeparatorStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤의 각 항목 사이에 있는 구분선의 스타일 속성을 가져옵니다.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 컨트롤의 각 항목 사이에 있는 구분선의 스타일 속성이 들어 있는 <see cref="T:System.Web.UI.WebControls.DataList" /> 개체입니다. 기본값은 빈 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> 속성의 각 항목 사이 있는 구분선에 대 한 사용자 지정 스타일을 제공 하는 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 구분 기호를 사용 하면 사용자 지정 콘텐츠의 각 항목 사이 사용 하 여 요소를 배치할 수 있습니다는 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 조정할 수 있는 공통 스타일 특성 전경색, 배경색, 글꼴 및 셀 내용 맞춤을 포함 합니다. 모양을 향상 시킬 다른 스타일을 사용 하 여 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
 구분 기호에 대 한 사용자 지정 스타일을 지정 하려면 합니다 `<SeparatorStyle>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 다음을 표시 하 여 스타일 특성을 `<SeparatorStyle>` 태그입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> 속성의 각 항목 사이 있는 구분선에 대 한 사용자 지정 배경 색을 지정 하는 <xref:System.Web.UI.WebControls.DataList> 컨트롤.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListSeparatorStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListSeparatorStyle/CS/datalistseparatorstylecs.aspx#1)]
 [!code-aspx-vb[DataListSeparatorStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListSeparatorStyle/VB/datalistseparatorstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="SeparatorTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SeparatorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SeparatorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SeparatorTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ SeparatorTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SeparatorTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.SeparatorTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤의 항목 사이에 있는 구분선에 대한 템플릿을 가져오거나 설정합니다.</summary>
        <value><see cref="T:System.Web.UI.ITemplate" /> 컨트롤의 항목 사이에 있는 구분선에 대한 템플릿이 들어 있는 <see cref="T:System.Web.UI.WebControls.DataList" />입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 합니다 <xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A> 의 항목 간의 구분선의 내용을 제어 하는 속성을 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다. 구분 기호를 사용 하면 사용자 지정 콘텐츠의 각 항목 사이 사용 하 여 요소를 배치할 수 있습니다는 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 항목 간의 구분선의 모양을 합니다 <xref:System.Web.UI.WebControls.DataList> 컨트롤에 의해 제어 됩니다는 <xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> 속성입니다.  
  
 구분 기호에 대 한 서식 파일을 지정 하려면 합니다 `<SeparatorTemplate>` 을 열고 닫는 태그 사이 <xref:System.Web.UI.WebControls.DataList> 제어 합니다. 다음 태그와 닫는 사이 템플릿의 콘텐츠를 나열할 수 있습니다 `<SeparatorTemplate>` 태그입니다.  
  
> [!CAUTION]
>  악성 클라이언트 스크립트 포함 될 수 있는 사용자 입력을 표시 하려면이 제어를 사용할 수 있습니다. 응용 프로그램에서 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 전송 되는 모든 정보를 확인 합니다. 입력된 텍스트 컨트롤에 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET에서는 사용자 입력에서 차단 스크립트를 HTML 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 [표준 컨트롤 보호](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호할](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)합니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A> 속성의 각 항목 사이 있는 구분선의 내용을 제어 하는 <xref:System.Web.UI.WebControls.DataList> 컨트롤.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListSeparatorStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListSeparatorStyle/CS/datalistseparatorstylecs.aspx#1)]
 [!code-aspx-vb[DataListSeparatorStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListSeparatorStyle/VB/datalistseparatorstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
      </Docs>
    </Member>
    <Member MemberName="ShowFooter">
      <MemberSignature Language="C#" Value="public virtual bool ShowFooter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ShowFooter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowFooter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowFooter { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowFooter : bool with get, set" Usage="System.Web.UI.WebControls.DataList.ShowFooter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤에 바닥글 구역을 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>바닥글 구역이 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />이지만 <see cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" /> 속성이 <see langword="null" />이 아닌 경우에만 이 속성을 검사할 수 있습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> 속성에 바닥글 구역을 표시할지 여부를 지정 하는 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
 바닥글 섹션의 모양을 설정 하 여 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> 속성입니다. 바닥글 섹션의 내용을 제어 하는 <xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> 에 바닥글 구역을 표시 하는 속성을 <xref:System.Web.UI.WebControls.DataList> 컨트롤.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListShowHeader/CS/datalistshowheadercs.aspx#1)]
 [!code-aspx-vb[DataListShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListShowHeader/VB/datalistshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ShowHeader">
      <MemberSignature Language="C#" Value="public virtual bool ShowHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ShowHeader" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowHeader { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowHeader : bool with get, set" Usage="System.Web.UI.WebControls.DataList.ShowHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤에 머리글 구역을 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>머리글 구역이 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />이지만 <see cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" /> 속성이 <see langword="null" />이 아닌 경우에만 이 속성을 검사할 수 있습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> 속성에 머리글 구역을 표시할지 여부를 지정 하는 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
 헤더 섹션의 모양을 설정 하 여 제어할 수 있습니다는 <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> 속성입니다. 헤더 섹션의 내용을 제어 하는 <xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> 속성의 헤더 섹션에 표시할는 <xref:System.Web.UI.WebControls.DataList> 컨트롤.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListShowHeader/CS/datalistshowheadercs.aspx#1)]
 [!code-aspx-vb[DataListShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListShowHeader/VB/datalistshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.Style IRepeatInfoUser.GetItemStyle (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.WebControls.Style System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(valuetype System.Web.UI.WebControls.ListItemType itemType, int32 repeatIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function GetItemStyle (itemType As ListItemType, repeatIndex As Integer) As Style Implements IRepeatInfoUser.GetItemStyle" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::WebControls::Style ^ System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System::Web::UI::WebControls::ListItemType itemType, int repeatIndex) = System::Web::UI::WebControls::IRepeatInfoUser::GetItemStyle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
        <Parameter Name="repeatIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemType"><see cref="T:System.Web.UI.WebControls.ListItemType" /> 열거형 값 중 하나입니다.</param>
        <param name="repeatIndex">목록 컨트롤의 항목에 대한 인덱스입니다.</param>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)" />를 참조하십시오.</summary>
        <returns>목록 컨트롤의 지정된 인덱스에 있는 특정 항목 형식의 스타일을 나타내는 <see cref="T:System.Web.UI.WebControls.Style" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.DataList> 인스턴스가 <xref:System.Web.UI.WebControls.IRepeatInfoUser> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasFooter">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasFooter As Boolean Implements IRepeatInfoUser.HasFooter" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::WebControls::IRepeatInfoUser::HasFooter { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IRepeatInfoUser.HasFooter" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasFooter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasFooter" />를 참조하십시오.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.DataList> 인스턴스가 <xref:System.Web.UI.WebControls.IRepeatInfoUser> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasHeader">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasHeader As Boolean Implements IRepeatInfoUser.HasHeader" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::WebControls::IRepeatInfoUser::HasHeader { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IRepeatInfoUser.HasHeader" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasHeader</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasHeader" />를 참조하십시오.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, 사용할 수 있습니다 경우에만 합니다 <xref:System.Web.UI.WebControls.DataList> 인스턴스 캐스팅 되는 <xref:System.Web.UI.WebControls.IRepeatInfoUser> 인터페이스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasSeparators As Boolean Implements IRepeatInfoUser.HasSeparators" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::WebControls::IRepeatInfoUser::HasSeparators { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators" />를 참조하십시오.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.DataList> 인스턴스가 <xref:System.Web.UI.WebControls.IRepeatInfoUser> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.RenderItem">
      <MemberSignature Language="C#" Value="void IRepeatInfoUser.RenderItem (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex, System.Web.UI.WebControls.RepeatInfo repeatInfo, System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(valuetype System.Web.UI.WebControls.ListItemType itemType, int32 repeatIndex, class System.Web.UI.WebControls.RepeatInfo repeatInfo, class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System::Web::UI::WebControls::ListItemType itemType, int repeatIndex, System::Web::UI::WebControls::RepeatInfo ^ repeatInfo, System::Web::UI::HtmlTextWriter ^ writer) = System::Web::UI::WebControls::IRepeatInfoUser::RenderItem;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
        <Parameter Name="repeatIndex" Type="System.Int32" />
        <Parameter Name="repeatInfo" Type="System.Web.UI.WebControls.RepeatInfo" />
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="itemType">항목의 형식입니다.</param>
        <param name="repeatIndex">해당 항목의 인덱스입니다.</param>
        <param name="repeatInfo">항목을 렌더링하는 데 사용되는 정보입니다.</param>
        <param name="writer">항목을 렌더링하는 데 사용할 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체입니다.</param>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)" />를 참조하십시오.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.DataList> 인스턴스가 <xref:System.Web.UI.WebControls.IRepeatInfoUser> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property RepeatedItemCount As Integer Implements IRepeatInfoUser.RepeatedItemCount" />
      <MemberSignature Language="C++ CLI" Value="property int System::Web::UI::WebControls::IRepeatInfoUser::RepeatedItemCount { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount" />를 참조하십시오.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Web.UI.WebControls.DataList> 인스턴스가 <xref:System.Web.UI.WebControls.IRepeatInfoUser> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.DataList.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤을 렌더링하는 데 사용되는 HTML 태그를 가져옵니다.</summary>
        <value><see cref="F:System.Web.UI.HtmlTextWriterTag.Table" />이 <see cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" />로 설정된 경우 <see cref="F:System.Web.UI.WebControls.RepeatLayout.Table" /> 태그를 반환하고, 그렇지 않으면 <see cref="F:System.Web.UI.HtmlTextWriterTag.Span" /> 태그를 반환합니다. 기본값은 <see cref="F:System.Web.UI.WebControls.RepeatLayout.Table" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DataList.TagKey%2A> 속성을 합니다 <xref:System.Web.UI.HtmlTextWriterTag> 연관 된 값을 <xref:System.Web.UI.WebControls.DataList> 컨트롤. <xref:System.Web.UI.WebControls.DataList.TagKey%2A> 속성은 주로 컨트롤 개발자가 사용 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="dataList.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤의 뷰 상태 변경 내용을 컨트롤의 <see cref="P:System.Web.UI.Control.ViewState" /> 속성에 저장할 수 있도록 추적합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.TrackViewState%2A> 메서드 시작 위치를 시작 하는 추적 및 저장 변경 컨트롤에 컨트롤의 뷰 상태의 일부로 표시 하도록 재정의 됩니다.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681">컨트롤 상태 vs입니다. 뷰 상태 샘플</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler UpdateCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler UpdateCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ UpdateCommand;" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.UpdateCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.DataList" /> 컨트롤에 있는 항목에 대해 <see langword="Update" /> 단추를 클릭하면 이 이벤트가 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.UpdateCommand> 이벤트가 발생 경우를 `Update` 단추가 항목을 클릭 합니다.  
  
 에 대 한 일반적인 처리기는 <xref:System.Web.UI.WebControls.DataList.UpdateCommand> 데이터 집합을 업데이트 하는 이벤트를 <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> 속성을 `-1` (항목을 선택 취소)를, 다음 데이터를 다시 바인딩합니다는 <xref:System.Web.UI.WebControls.DataList> 컨트롤입니다.  
  
> [!CAUTION]
>  악성 클라이언트 스크립트 포함 될 수 있는 사용자 입력을 표시 하려면이 제어를 사용할 수 있습니다. 응용 프로그램에서 표시 하기 전에 실행 스크립트, SQL 문 또는 다른 코드에 대 한 클라이언트에서 전송 되는 모든 정보를 확인 합니다. 입력된 텍스트 컨트롤에 표시 하기 전에 사용자 입력을 확인 하려면 유효성 검사 컨트롤을 사용할 수 있습니다. ASP.NET에서는 사용자 입력에서 차단 스크립트를 HTML 입력된 요청 유효성 검사 기능을 제공 합니다. 자세한 내용은 [표준 컨트롤 보호](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [방법: HTML 인코딩 문자열로 적용 하 여 웹 응용 프로그램에서 스크립트 악용 으로부터 보호할](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), 및 [ASP.NET 웹 페이지에서 사용자 입력 유효성 검사](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)합니다.  
  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [방법: Web Forms 응용 프로그램에서 이벤트 사용](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 지정 하 고에 대 한 처리기를 코딩 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.DataList.UpdateCommand> 이벤트입니다. 선택한 항목을 업데이트할 수 있습니다 합니다 <xref:System.Web.UI.WebControls.DataList> 사용자가 입력 한 새 값을 사용 하 여 컨트롤 때는 `Update` 단추를 클릭 합니다.  
  
> [!NOTE]
>  다음 코드 샘플 단일 파일 코드 모델을 사용 하 고 코드 숨김 파일에 직접 복사 하는 경우 제대로 작동 하지 않을 수 있습니다. 이 코드 샘플.aspx 확장명이 있는 빈 텍스트 파일에 복사 해야 합니다. Web Forms 코드 모델에 대 한 자세한 내용은 참조 하세요. [ASP.NET Web Forms 페이지 코드 모델](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)합니다.  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <related type="Article" href="https://msdn.microsoft.com/library/73bf8638-c4ec-4069-b0bb-a1dc79b92e32">방법: Web Forms 애플리케이션에서 이벤트 사용</related>
        <related type="Article" href="https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417">ASP.NET 웹 페이지 코드 모델</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandName">
      <MemberSignature Language="C#" Value="public const string UpdateCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UpdateCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const UpdateCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ UpdateCommandName;" />
      <MemberSignature Language="F#" Value="val mutable UpdateCommandName : string" Usage="System.Web.UI.WebControls.DataList.UpdateCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="Update" /> 명령 이름을 나타냅니다. 이 필드는 읽기 전용입니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Web.UI.WebControls.DataList.UpdateCommandName> 나타내는 필드는 `Update` 명령 이름입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
  </Members>
</Type>